[
  {
    "id": "1c1a91a6671f640a4c115d06e85e62eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\16-the-odin-project\\LICENSE.txt",
    "source_type": "git_repo",
    "title": "LICENSE",
    "content": "terminate automatically. b. Where Your right to use the Licensed Material has terminated under Section 6(a), it reinstates: 1. automatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or 2. upon express reinstatement by the Licensor. For the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\n\nc. For the avoidance of doubt, the Licensor may also offer the\n     Licensed Material under separate terms or conditions or stop\n     distributing the Licensed Material at any time; however, doing so\n     will not terminate this Public License.\n\nd. Sections 1, 5, 6, 7, and 8 survive termination of this Public\n     License.\n\nSection 7 -- Other Terms and Conditions.\n\na. The Licensor shall not be bound by any additional or different\n     terms or conditions communicated by You unless expressly agreed.\n\nb. Any arrangements, understandings, or agreements regarding the\n     Licensed Material not stated herein are separate from and\n     independent of the terms and conditions of this Public License.\n\nSection 8 -- Interpretation.\n\na. For the avoidance of doubt, this Public License does not, and\n     shall not be interpreted to, reduce, limit, restrict, or impose\n     conditions on any use of the Licensed Material that could lawfully\n     be made without permission under this Public License.\n\nb. To the extent possible, if any provision of this Public License is\n     deemed unenforceable, it shall be automatically reformed to the\n     minimum extent necessary to make it enforceable. If the provision\n     cannot be reformed, it shall be severed from this Public License\n     without affecting the enforceability of the remaining terms and\n     conditions.\n\nc. No term or condition of this Public License will be waived and no\n     failure to comply consented to unless expressly agreed to by the\n     Licensor.\n\nd. Nothing in this Public License constitutes or may be interpreted\n     as a limitation upon, or waiver of, any privileges and immunities\n     that apply to the Licensor or You, including from the legal\n     processes of any jurisdiction or authority.\n\n=======================================================================",
    "metadata": {
      "file_extension": ".txt",
      "file_type": "text",
      "file_size": 17850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\16-the-odin-project\\LICENSE.txt",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "ad7bcc4cb8238369237ae563a152f4a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\16-the-odin-project\\LICENSE.txt",
    "source_type": "git_repo",
    "title": "LICENSE",
    "content": "without affecting the enforceability of the remaining terms and conditions. c. No term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor. d. Nothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority. =======================================================================\n\nCreative Commons is not a party to its public\nlicenses. Notwithstanding, Creative Commons may elect to apply one of\nits public licenses to material it publishes and in those instances\nwill be considered the â€œLicensor.â€ The text of the Creative Commons\npublic licenses is dedicated to the public domain under the CC0 Public\nDomain Dedication. Except for the limited purpose of indicating that\nmaterial is shared under a Creative Commons public license or as\notherwise permitted by the Creative Commons policies published at\ncreativecommons.org/policies, Creative Commons does not authorize the\nuse of the trademark \"Creative Commons\" or any other trademark or logo\nof Creative Commons without its prior written consent including,\nwithout limitation, in connection with any unauthorized modifications\nto any of its public licenses or any other arrangements,\nunderstandings, or agreements concerning use of licensed material. For\nthe avoidance of doubt, this paragraph does not form part of the\npublic licenses.\n\nCreative Commons may be contacted at creativecommons.org.",
    "metadata": {
      "file_extension": ".txt",
      "file_type": "text",
      "file_size": 17850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\16-the-odin-project\\LICENSE.txt",
      "source_type": "git_repo"
    },
    "token_count": 296,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "04af19c28f305f59e4ab342237a78999",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-22.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6821ebf8237de8297eaee798\ntitle: \"JavaScript Challenge 22: Tribonacci Sequence\"\nchallengeType: 28\ndashedName: javascript-challenge-22\n--description--\nThe Tribonacci sequence is a series of numbers where each number is the sum of the three preceding ones When starting with 0, 0 and 1, the first 10 numbers in the sequence are 0, 0, 1, 1, 2, 4, 7, 13, 24, 44 Given an array containing the first three numbers of a Tribonacci sequence, and an integer representing the length of the sequence, return an array containing the sequence of the given length Your function should handle sequences of any length greater than or equal to zero If the length is zero, return an empty array Note that the starting numbers are part of the sequence --hints--\ntribonacciSequence([0, 0, 1], 20) should return [0, 0, 1, 1, 2, 4, 7, 13, 24, 44, 81, 149, 274, 504, 927, 1705, 3136, 5768, 10609, 19513] js\nassert deepEqual(tribonacciSequence([0, 0, 1], 20), [0, 0, 1, 1, 2, 4, 7, 13, 24, 44, 81, 149, 274, 504, 927, 1705, 3136, 5768, 10609, 19513]);\ntribonacciSequence([21, 32, 43], 1) should return [21] js\nassert deepEqual(tribonacciSequence([21, 32, 43], 1), [21]);\ntribonacciSequence([0, 0, 1], 0) should return [] js\nassert deepEqual(tribonacciSequence([0, 0, 1], 0), []);\ntribonacciSequence([10, 20, 30], 2) should return [10, 20] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-22.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "e0ce6d51dc07eb82ab0ced9786a35aad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-22.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "24, 44, 81, 149, 274, 504, 927, 1705, 3136, 5768, 10609, 19513] js assert deepEqual(tribonacciSequence([0, 0, 1], 20), [0, 0, 1, 1, 2, 4, 7, 13, 24, 44, 81, 149, 274, 504, 927, 1705, 3136, 5768, 10609, 19513]); tribonacciSequence([21, 32, 43], 1) should return [21] js assert deepEqual(tribonacciSequence([21, 32, 43], 1), [21]); tribonacciSequence([0, 0, 1], 0) should return [] js assert deepEqual(tribonacciSequence([0, 0, 1], 0), []); tribonacciSequence([10, 20, 30], 2) should return [10, 20] js assertdeepEqual(tribonacciSequence([10, 20, 30], 2), [10, 20]);\ntribonacciSequence([10, 20, 30], 3) should return [10, 20, 30] js\nassert deepEqual(tribonacciSequence([10, 20, 30], 3), [10, 20, 30]);\ntribonacciSequence([123, 456, 789], 8) should return [123, 456, 789, 1368, 2613, 4770, 8751, 16134] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-22.md",
      "source_type": "git_repo"
    },
    "token_count": 362,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "301391b51017d87a7e9601be9935245c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-22.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "32, 43], 1) should return [21] js assert deepEqual(tribonacciSequence([21, 32, 43], 1), [21]); tribonacciSequence([0, 0, 1], 0) should return [] js assert deepEqual(tribonacciSequence([0, 0, 1], 0), []); tribonacciSequence([10, 20, 30], 2) should return [10, 20] js assertdeepEqual(tribonacciSequence([10, 20, 30], 2), [10, 20]); tribonacciSequence([10, 20, 30], 3) should return [10, 20, 30] js assert deepEqual(tribonacciSequence([10, 20, 30], 3), [10, 20, 30]); tribonacciSequence([123, 456, 789], 8) should return [123, 456, 789, 1368, 2613, 4770, 8751, 16134] js assertdeepEqual(tribonacciSequence([123, 456, 789], 8), [123, 456, 789, 1368, 2613, 4770, 8751, 16134]);\n--seed--\n--seed-contents--\n```js\nfunction tribonacciSequence(startSequence, length) {\nreturn length;\n}\n```\n--solutions--\n```js\nfunction tribonacciSequence(startSequence, length) {\nif (length === 0) return [];\nif (length === 1) return [startSequence[0]];\nif (length === 2) return [startSequence[0], startSequence[1]];\nif (length === 3) return [ startSequence];\nconst sequence = [ startSequence];\nwhile (sequence length < length) {\nconst nextValue = sequence[sequence length - 1] + sequence[sequence length - 2] + + sequence[sequence length - 3];\nsequence push(nextValue);\n}\nreturn sequence;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2510,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-22.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "59be28817a1795626bdbdd9e13c271f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-24.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6821ec02237de8297eaee79a\ntitle: \"JavaScript Challenge 24: Pangram\"\nchallengeType: 28\ndashedName: javascript-challenge-24\n--description--\nGiven a word or sentence and a string of lowercase letters, determine if the word or sentence uses all the letters from the given set at least once and no other letters Ignore non-alphabetical characters in the word or sentence Ignore letter casing in the word or sentence --hints--\nisPangram(\"hello\", \"helo\") should return true\njs\nassert isTrue(isPangram(\"hello\", \"helo\"));\nisPangram(\"hello\", \"hel\") should return false\njs\nassert isFalse(isPangram(\"hello\", \"hel\"));\nisPangram(\"hello\", \"helow\") should return false\njs\nassert isFalse(isPangram(\"hello\", \"helow\"));\nisPangram(\"hello world\", \"helowrd\") should return true\njs\nassert isTrue(isPangram(\"hello world\", \"helowrd\"));\nisPangram(\"Hello World \", \"helowrd\") should return true\njs\nassert isTrue(isPangram(\"Hello World \", \"helowrd\"));\nisPangram(\"Hello World \", \"heliowrd\") should return false\njs\nassert isFalse(isPangram(\"Hello World \", \"heliowrd\"));\nisPangram(\"freeCodeCamp\", \"frcdmp\") should return false\njs\nassert isFalse(isPangram(\"freeCodeCamp\", \"frcdmp\"));\nisPangram(\"The quick brown fox jumps over the lazy dog \", \"abcdefghijklmnopqrstuvwxyz\") should return true\njs\nassert isTrue(isPangram(\"The quick brown fox jumps over the lazy dog \", \"abcdefghijklmnopqrstuvwxyz\"));\n--seed--\n--seed-contents--\n```js\nfunction isPangram(sentence, letters) {\nreturn sentence;\n}\n```\n--solutions--\n```js\nfunction isPangram(sentence, letters) {\nconst usedLetters = [];\nfor (let i = 0; i < sentence length; i++) {\nconst letter = sentence[i] toLowerCase();\nif ( usedLetters includes(letter) && /[a-z]/ test(letter)) {\nusedLetters push(letter);\n}\n}\nconst sortedLetters = letters split('') sort() join('');\nconst sortedUsedLetters = usedLetters sort()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2061,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-24.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "270ed94dbbce82ecac50b9a684590878",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-24.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return true js assert isTrue(isPangram(\"The quick brown fox jumps over the lazy dog \", \"abcdefghijklmnopqrstuvwxyz\")); --seed-- --seed-contents-- ```js function isPangram(sentence, letters) { return sentence; } ``` --solutions-- ```js function isPangram(sentence, letters) { const usedLetters = []; for (let i = 0; i < sentence length; i++) { const letter = sentence[i] toLowerCase(); if ( usedLetters includes(letter) && /[a-z]/ test(letter)) { usedLetters push(letter); } } const sortedLetters = letters split('') sort() join(''); const sortedUsedLetters = usedLetters sort()join('');\nreturn sortedLetters === sortedUsedLetters;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2061,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-24.md",
      "source_type": "git_repo"
    },
    "token_count": 152,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "c47916798f93405bb7604aa689ccbc52",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681cb1a2dab50c87ddb2e514\ntitle: \"JavaScript Challenge 3: Fibonacci Sequence\"\nchallengeType: 28\ndashedName: javascript-challenge-3\n--description--\nThe Fibonacci sequence is a series of numbers where each number is the sum of the two preceding ones When starting with 0 and 1, the first 10 numbers in the sequence are 0, 1, 1, 2, 3, 5, 8, 13, 21, 34 Given an array containing the first two numbers of a Fibonacci sequence, and an integer representing the length of the sequence, return an array containing the sequence of the given length Your function should handle sequences of any length greater than or equal to zero If the length is zero, return an empty array Note that the starting numbers are part of the sequence --hints--\nfibonacciSequence([0, 1], 20) should return [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] js\nassert deepEqual(fibonacciSequence([0, 1], 20), [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]);\nfibonacciSequence([21, 32], 1) should return [21] js\nassert deepEqual(fibonacciSequence([21, 32], 1), [21]);\nfibonacciSequence([0, 1], 0) should return [] js\nassert deepEqual(fibonacciSequence([0, 1], 0), []);\nfibonacciSequence([10, 20], 2) should return [10, 20] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2235,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-3.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6cb69a793760f95cdd0522609064ef62",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] js assert deepEqual(fibonacciSequence([0, 1], 20), [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]); fibonacciSequence([21, 32], 1) should return [21] js assert deepEqual(fibonacciSequence([21, 32], 1), [21]); fibonacciSequence([0, 1], 0) should return [] js assert deepEqual(fibonacciSequence([0, 1], 0), []); fibonacciSequence([10, 20], 2) should return [10, 20] js assertdeepEqual(fibonacciSequence([10, 20], 2), [10, 20]);\nfibonacciSequence([123456789, 987654321], 5) should return [123456789, 987654321, 1111111110, 2098765431, 3209876541] js\nassert deepEqual(fibonacciSequence([123456789, 987654321], 5), [123456789, 987654321, 1111111110, 2098765431, 3209876541]);\n--seed--\n--seed-contents--\n```js\nfunction fibonacciSequence(startSequence, length) {\nreturn length;\n}\n```\n--solutions--\n```js\nfunction fibonacciSequence(startSequence, length) {\nif (length === 0) return [];\nif (length === 1) return [startSequence[0]];\nif (length === 2) return [ startSequence];\nconst sequence = [ startSequence];\nwhile (sequence length < length) {\nconst nextValue = sequence[sequence length - 1] + sequence[sequence length - 2];\nsequence push(nextValue);\n}\nreturn sequence;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2235,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-3.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f18122cfebc9b74230c41098db88a5f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681cb1afdab50c87ddb2e515\ntitle: \"JavaScript Challenge 4: S  P  A  C  E  J  A  M\"\nchallengeType: 28\ndashedName: javascript-challenge-4\n--description--\nGiven a string, remove all spaces from the string, insert two spaces between every character, convert all alphabetical letters to uppercase, and return the result Non-alphabetical characters should remain unchanged (except for spaces) --hints--\nspaceJam(\"freeCodeCamp\") should return \"F  R  E  E  C  O  D  E  C  A  M  P\" js\nassert equal(spaceJam(\"freeCodeCamp\"), \"F  R  E  E  C  O  D  E  C  A  M  P\");\nspaceJam(\"   free   Code   Camp   \") should return \"F  R  E  E  C  O  D  E  C  A  M  P\" js\nassert equal(spaceJam(\"   free   Code   Camp   \"), \"F  R  E  E  C  O  D  E  C  A  M  P\");\nspaceJam(\"Hello World \") should return \"H  E  L  L  O  W  O  R  L  D \" js\nassert equal(spaceJam(\"Hello World \"), \"H  E  L  L  O  W  O  R  L  D \");\nspaceJam(\"C@t$ & D0g$\") should return \"C  @  T  $  &  D  0  G  $\" js\nassert equal(spaceJam(\"C@t$ & D0g$\"), \"C  @  T  $  &  D  0  G  $\");\nspaceJam(\"allyourbase\") should return \"A  L  L  Y  O  U  R  B  A  S  E\" js\nassert equal(spaceJam(\"all your base\"), \"A  L  L  Y  O  U  R  B  A  S  E\");\n--seed--\n--seed-contents--\n```js\nfunction spaceJam(s) {\nreturn s;\n}\n```\n--solutions--\njs\nfunction spaceJam(s) {\nreturn s toUpperCase() replace(/\\s+/g, '') split('')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1477,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-4.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6c0edf0141db38aba83e61a32f5a0a77",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return \"C @ T $ & D 0 G $\" js assert equal(spaceJam(\"C@t$ & D0g$\"), \"C @ T $ & D 0 G $\"); spaceJam(\"allyourbase\") should return \"A L L Y O U R B A S E\" js assert equal(spaceJam(\"all your base\"), \"A L L Y O U R B A S E\"); --seed-- --seed-contents-- ```js function spaceJam(s) { return s; } ``` --solutions-- js function spaceJam(s) { return s toUpperCase() replace(/\\s+/g, '') split('')join('  ');\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1477,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-4.md",
      "source_type": "git_repo"
    },
    "token_count": 138,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "25cabc6cca5162f57c44a9fe465093be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-21.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6821ebf3237de8297eaee797\ntitle: \"JavaScript Challenge 21: Hex Generator\"\nchallengeType: 28\ndashedName: javascript-challenge-21\n--description--\nGiven a named CSS color string, generate a random hexadecimal (hex) color code that is dominant in the given color The function should handle \"red\", \"green\", or \"blue\" as an input argument If the input is not one of those, the function should return \"Invalid color\" The function should return a random six-character hex color code where the input color value is greater than any of the others Example of valid outputs for a given input:\n| Input   | Output   |\n|---------|----------|\n| \"red\"   | \"FF0000\" |\n| \"green\" | \"00FF00\" |\n| \"blue\"  | \"0000FF\" |\n--hints--\ngenerateHex(\"yellow\") should return \"Invalid color\" js\nassert equal(generateHex(\"yellow\"), \"Invalid color\");\ngenerateHex(\"red\") should return a six-character string js\nassert lengthOf(generateHex(\"red\"), 6);\ngenerateHex(\"red\") should return a valid six-character hex color code js\nconst hex = generateHex(\"red\") toUpperCase();\nconst isValidHex = /^[0-9A-F]{6}$/ test(hex);\nassert isTrue(isValidHex);\ngenerateHex(\"red\") should return a valid hex color with a higher red value than other colors ```js\nconst hex = generateHex(\"red\") toUpperCase();\nconst isValidHex = /^[0-9A-F]{6}$/ test(hex);\nassert isTrue(isValidHex);\nconst r = parseInt(hex slice(0, 2), 16);\nconst g = parseInt(hex slice(2, 4), 16);\nconst b = parseInt(hex slice(4, 6), 16);\nassert isAbove(r, g);\nassert isAbove(r, b);\n```\nCalling generateHex(\"red\") twice should return two different hex color values where red is dominant ```js\nconst hex1 = generateHex(\"red\") toUpperCase();\nconst isValidHex1 = /^[0-9A-F]{6}$/ test(hex1)\nassert isTrue(isValidHex1);\nconst r1 = parseInt(hex1 slice(0, 2), 16);\nconst g1 = parseInt(hex1 slice(2, 4), 16);\nconst b1 = parseInt(hex1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4608,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-21.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "e7602b54f159ef7b24f979916336f28b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-21.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "test(hex); assert isTrue(isValidHex); const r = parseInt(hex slice(0, 2), 16); const g = parseInt(hex slice(2, 4), 16); const b = parseInt(hex slice(4, 6), 16); assert isAbove(r, g); assert isAbove(r, b); ``` Calling generateHex(\"red\") twice should return two different hex color values where red is dominant ```js const hex1 = generateHex(\"red\") toUpperCase(); const isValidHex1 = /^[0-9A-F]{6}$/ test(hex1) assert isTrue(isValidHex1); const r1 = parseInt(hex1 slice(0, 2), 16); const g1 = parseInt(hex1 slice(2, 4), 16); const b1 = parseInt(hex1slice(4, 6), 16);\nassert isAbove(r1, g1);\nassert isAbove(r1, b1);\nconst hex2 = generateHex(\"red\") toUpperCase();\nconst isValidHex2 = /^[0-9A-F]{6}$/ test(hex2);\nassert isTrue(isValidHex2);\nconst r2 = parseInt(hex2 slice(0, 2), 16);\nconst g2 = parseInt(hex2 slice(2, 4), 16);\nconst b2 = parseInt(hex2 slice(4, 6), 16);\nassert isAbove(r2, g2);\nassert isAbove(r2, b2);\nassert notEqual(hex1, hex2);\n```\nCalling generateHex(\"green\") twice should return two different hex color values where green is dominant ```js\nconst hex1 = generateHex(\"green\") toUpperCase();\nconst isValidHex1 = /^[0-9A-F]{6}$/ test(hex1)\nassert isTrue(isValidHex1);\nconst r1 = parseInt(hex1 slice(0, 2), 16);\nconst g1 = parseInt(hex1 slice(2, 4), 16);\nconst b1 = parseInt(hex1 slice(4, 6), 16);\nassert isAbove(g1, r1);\nassert isAbove(g1, b1);\nconst hex2 = generateHex(\"green\") toUpperCase();\nconst isValidHex2 = /^[0-9A-F]{6}$/ test(hex2);\nassert isTrue(isValidHex2);\nconst r2 = parseInt(hex2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4608,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-21.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "9b5634e3baaa228f531d1de802109637",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-21.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "isAbove(r2, b2); assert notEqual(hex1, hex2); ``` Calling generateHex(\"green\") twice should return two different hex color values where green is dominant ```js const hex1 = generateHex(\"green\") toUpperCase(); const isValidHex1 = /^[0-9A-F]{6}$/ test(hex1) assert isTrue(isValidHex1); const r1 = parseInt(hex1 slice(0, 2), 16); const g1 = parseInt(hex1 slice(2, 4), 16); const b1 = parseInt(hex1 slice(4, 6), 16); assert isAbove(g1, r1); assert isAbove(g1, b1); const hex2 = generateHex(\"green\") toUpperCase(); const isValidHex2 = /^[0-9A-F]{6}$/ test(hex2); assert isTrue(isValidHex2); const r2 = parseInt(hex2slice(0, 2), 16);\nconst g2 = parseInt(hex2 slice(2, 4), 16);\nconst b2 = parseInt(hex2 slice(4, 6), 16);\nassert isAbove(g2, r2);\nassert isAbove(g2, b2);\nassert notEqual(hex1, hex2);\n```\nCalling generateHex(\"blue\") twice should return two different hex color values where blue is dominant ```js\nconst hex1 = generateHex(\"blue\") toUpperCase();\nconst isValidHex1 = /^[0-9A-F]{6}$/ test(hex1)\nassert isTrue(isValidHex1);\nconst r1 = parseInt(hex1 slice(0, 2), 16);\nconst g1 = parseInt(hex1 slice(2, 4), 16);\nconst b1 = parseInt(hex1 slice(4, 6), 16);\nassert isAbove(b1, r1);\nassert isAbove(b1, g1);\nconst hex2 = generateHex(\"blue\") toUpperCase();\nconst isValidHex2 = /^[0-9A-F]{6}$/ test(hex2);\nassert isTrue(isValidHex2);\nconst r2 = parseInt(hex2 slice(0, 2), 16);\nconst g2 = parseInt(hex2 slice(2, 4), 16);\nconst b2 = parseInt(hex2 slice(4, 6), 16);\nassert isAbove(b2, r2);\nassert isAbove(b2, g2);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4608,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-21.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "9ba42e5617fff29fb281954c4aa14546",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-21.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "generateHex(\"blue\") toUpperCase(); const isValidHex1 = /^[0-9A-F]{6}$/ test(hex1) assert isTrue(isValidHex1); const r1 = parseInt(hex1 slice(0, 2), 16); const g1 = parseInt(hex1 slice(2, 4), 16); const b1 = parseInt(hex1 slice(4, 6), 16); assert isAbove(b1, r1); assert isAbove(b1, g1); const hex2 = generateHex(\"blue\") toUpperCase(); const isValidHex2 = /^[0-9A-F]{6}$/ test(hex2); assert isTrue(isValidHex2); const r2 = parseInt(hex2 slice(0, 2), 16); const g2 = parseInt(hex2 slice(2, 4), 16); const b2 = parseInt(hex2 slice(4, 6), 16); assert isAbove(b2, r2); assert isAbove(b2, g2); assertnotEqual(hex1, hex2);\n```\n--seed--\n--seed-contents--\n```js\nfunction generateHex(color) {\nreturn color;\n}\n```\n--solutions--\n```js\nfunction generateHex(color) {\nconst toHex = n => n toString(16) padStart(2, \"0\") toUpperCase();\nconst dominant = Math floor(Math random() * 86) + 170;\nconst weak1 = Math floor(Math random() * 170);\nconst weak2 = Math floor(Math random() * 170);\nlet r, g, b;\nswitch (color) {\ncase \"red\":\nr = dominant;\ng = weak1;\nb = weak2;\nbreak;\ncase \"green\":\nr = weak1;\ng = dominant;\nb = weak2;\nbreak;\ncase \"blue\":\nr = weak1;\ng = weak2;\nb = dominant;\nbreak;\ndefault:\nreturn \"Invalid color\";\n}\nreturn ${toHex(r)}${toHex(g)}${toHex(b)};\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4608,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-21.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "108dedff9c11a0c83a860dbd31b67504",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681cb1afdab50c87ddb2e516\ntitle: \"JavaScript Challenge 5: Jbelmud Text\"\nchallengeType: 28\ndashedName: javascript-challenge-5\n--description--\nGiven a string, return a jumbled version of that string where each word is transformed using the following constraints:\nThe first and last letters of the words remain in place\nAll letters between the first and last letter are sorted alphabetically.\nThe input strings will contain no punctuation, and will be entirely lowercase.\n--hints--\njbelmu(\"hello world\") should return \"hello wlord\".\njs\nassert.equal(jbelmu(\"hello world\"), \"hello wlord\");\njbelmu(\"i love jumbled text\") should return \"i love jbelmud text\".\njs\nassert.equal(jbelmu(\"i love jumbled text\"), \"i love jbelmud text\");\njbelmu(\"freecodecamp is my favorite place to learn to code\") should return \"faccdeeemorp is my faiortve pacle to laern to cdoe\".\njs\nassert.equal(jbelmu(\"freecodecamp is my favorite place to learn to code\"), \"faccdeeemorp is my faiortve pacle to laern to cdoe\");\njbelmu(\"the quick brown fox jumps over the lazy dog\") should return \"the qciuk borwn fox jmpus oevr the lazy dog\".\njs\nassert.equal(jbelmu(\"the quick brown fox jumps over the lazy dog\"), \"the qciuk borwn fox jmpus oevr the lazy dog\");\n--seed--\n--seed-contents--\n```js\nfunction jbelmu(text) {\nreturn text;\n}\n```\n--solutions--\njs\nfunction jbelmu(text) {\nreturn text\n.split(' ')\n.map((word) => {\nif (word.length <= 3) return word;\nconst first = word[0];\nconst last = word[word.length - 1];\nconst middle = word\n.slice(1, -1)\n.split('')\n.sort()\n.join('');\nreturn first + middle + last;\n})\n.join(' ');\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1761,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-5.md",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b9917d436bac9ecf3b7a6a30fbcac9f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681cb1afdab50c87ddb2e517\ntitle: \"JavaScript Challenge 6: Anagram Checker\"\nchallengeType: 28\ndashedName: javascript-challenge-6\n--description--\nGiven two strings, determine if they are anagrams of each other (contain the same characters in any order).\nIgnore casing and white space.\n--hints--\nareAnagrams(\"listen\", \"silent\") should return true.\njs\nassert.isTrue(areAnagrams(\"listen\", \"silent\"));\nareAnagrams(\"School master\", \"The classroom\") should return true.\njs\nassert.isTrue(areAnagrams(\"School master\", \"The classroom\"));\nareAnagrams(\"A gentleman\", \"Elegant man\") should return true.\njs\nassert.isTrue(areAnagrams(\"A gentleman\", \"Elegant man\"));\nareAnagrams(\"Hello\", \"World\") should return false.\njs\nassert.isFalse(areAnagrams(\"Hello\", \"World\"));\nareAnagrams(\"apple\", \"banana\") should return false.\njs\nassert.isFalse(areAnagrams(\"apple\", \"banana\"));\nareAnagrams(\"cat\", \"dog\") should return false.\njs\nassert.isFalse(areAnagrams(\"cat\", \"dog\"));\n--seed--\n--seed-contents--\n```js\nfunction areAnagrams(str1, str2) {\nreturn str1;\n}\n```\n--solutions--\n```js\nfunction areAnagrams(str1, str2) {\nconst clean = (str) =>\nstr.replace(/\\s+/g, '').toLowerCase().split('').sort().join('');\nreturn clean(str1) === clean(str2);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1346,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-6.md",
      "source_type": "git_repo"
    },
    "token_count": 335,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f670b42f9f17f8f24150cf97261a166a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681cb1b0dab50c87ddb2e518\ntitle: \"JavaScript Challenge 7: Targeted Sum\"\nchallengeType: 28\ndashedName: javascript-challenge-7\n--description--\nGiven an array of numbers and an integer target, find two unique numbers in the array that add up to the target value. Return an array with the indices of those two numbers, or \"Target not found\" if no two numbers sum up to the target.\nThe returned array should have the indices in ascending order.\n--hints--\nfindTarget([2, 7, 11, 15], 9) should return [0, 1].\njs\nassert.deepEqual(findTarget([2, 7, 11, 15], 9), [0, 1]);\nfindTarget([3, 2, 4, 5], 6) should return [1, 2].\njs\nassert.deepEqual(findTarget([3, 2, 4, 5], 6), [1, 2]);\nfindTarget([1, 3, 5, 6, 7, 8], 15) should return [4, 5].\njs\nassert.deepEqual(findTarget([1, 3, 5, 6, 7, 8], 15), [4, 5]);\nfindTarget([1, 3, 5, 7], 14) should return \"Target not found\".\njs\nassert.equal(findTarget([1, 3, 5, 7], 14), \"Target not found\");\n--seed--\n--seed-contents--\n```js\nfunction findTarget(arr, target) {\nreturn arr;\n}\n```\n--solutions--\njs\nfunction findTarget(arr, target) {\nfor (let i = 0; i < arr.length; i++) {\nfor (let j = i + 1; j < arr.length; j++) {\nif (arr[i] + arr[j] === target) {\nreturn [i, j];\n}\n}\n}\nreturn 'Target not found'\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1356,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-7.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7448578718b28b7de0397222967b9b41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681cb1b0dab50c87ddb2e519\ntitle: \"JavaScript Challenge 8: Factorializer\"\nchallengeType: 28\ndashedName: javascript-challenge-8\n--description--\nGiven an integer from zero to 20, return the factorial of that number. The factorial of a number is the product of all the numbers between 1 and the given number.\nThe factorial of zero is 1.\n--hints--\nfactorial(0) should return 1.\njs\nassert.equal(factorial(0), 1);\nfactorial(5) should return 120.\njs\nassert.equal(factorial(5), 120);\nfactorial(20) should return 2432902008176640000.\njs\nassert.equal(factorial(20), 2432902008176640000);\n--seed--\n--seed-contents--\n```js\nfunction factorial(n) {\nreturn n;\n}\n```\n--solutions--\njs\nfunction factorial(n) {\nreturn n == 0 ? 1 : n * factorial(n - 1);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 819,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-8.md",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "78c86368020de5251660879ddb306dd1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681cb1b0dab50c87ddb2e51a\ntitle: \"JavaScript Challenge 9: Sum of Squares\"\nchallengeType: 28\ndashedName: javascript-challenge-9\n--description--\nGiven a positive integer up to 1,000, return the sum of all the integers squared from 1 up to the number.\n--hints--\nsumOfSquares(5) should return 55.\njs\nassert.equal(sumOfSquares(5), 55);\nsumOfSquares(10) should return 385.\njs\nassert.equal(sumOfSquares(10), 385);\nsumOfSquares(25) should return 5525.\njs\nassert.equal(sumOfSquares(25), 5525);\nsumOfSquares(500) should return 41791750.\njs\nassert.equal(sumOfSquares(500), 41791750);\nsumOfSquares(1000) should return 333833500.\njs\nassert.equal(sumOfSquares(1000), 333833500);\n--seed--\n--seed-contents--\n```js\nfunction sumOfSquares(n) {\nreturn n;\n}\n```\n--solutions--\njs\nfunction sumOfSquares(n) {\nlet total = 1;\nfor(let i = 2; i <= n; i++) {\ntotal += i * i;\n}\nreturn total;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 983,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-javascript\\javascript-challenge-9.md",
      "source_type": "git_repo"
    },
    "token_count": 293,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0a3e6d6e9c37f95412e51aa8352be0c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-10.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681cb1b3dab50c87ddb2e524\ntitle: \"Python Challenge 10: 3 Strikes\"\nchallengeType: 29\ndashedName: python-challenge-10\n--description--\nGiven an integer between 1 and 10,000, return a count of how many numbers from 1 up to that integer whose square contains at least one digit 3.\n--hints--\nsquares_with_three(1) should return 0.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(squares_with_three(1), 0)`)\n}})\nsquares_with_three(10) should return 1.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(squares_with_three(10), 1)`)\n}})\nsquares_with_three(100) should return 19.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(squares_with_three(100), 19)`)\n}})\nsquares_with_three(1000) should return 326.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(squares_with_three(1000), 326)`)\n}})\nsquares_with_three(10000) should return 4531.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(squares_with_three(10000), 4531)`)\n}})\n--seed--\n--seed-contents--\n```py\ndef squares_with_three(n):\nreturn n\n```\n--solutions--\npy\ndef squares_with_three(n):\ncount = 0\nfor i in range(1, n + 1):\nsquare = i * i\nif '3' in str(square):\ncount += 1\nreturn count",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1455,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-10.md",
      "source_type": "git_repo"
    },
    "token_count": 386,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "63e70a7e8ad4d26cafa13074ab1547d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-11.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68216eff0f957572e7c340c6\ntitle: \"Python Challenge 11: Mile Pace\"\nchallengeType: 29\ndashedName: python-challenge-11\n--description--\nGiven a number of miles ran, and a time in \"MM:SS\" (minutes:seconds) it took to run those miles, return a string for the average time it took to run each mile in the format \"MM:SS\".\nAdd leading zeros when needed.\n--hints--\nmile_pace(3, \"24:00\") should return \"08:00\".\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(mile_pace(3, \"24:00\"), \"08:00\")`)\n}})\nmile_pace(1, \"06:45\") should return \"06:45\".\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(mile_pace(1, \"06:45\"), \"06:45\")`)\n}})\nmile_pace(2, \"07:00\") should return \"03:30\".\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(mile_pace(2, \"07:00\"), \"03:30\")`)\n}})\nmile_pace(26.2, \"120:35\") should return \"04:36\".\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(mile_pace(26.2, \"120:35\"), \"04:36\")`)\n}})\n--seed--\n--seed-contents--\n```py\ndef mile_pace(miles, duration):\nreturn miles\n```\n--solutions--\n```py\ndef mile_pace(miles, duration):\nminutes, seconds = map(int, duration.split(\":\"))\ntotal_seconds = minutes * 60 + seconds\navg_seconds_per_mile = total_seconds / miles\navg_minutes = int(avg_seconds_per_mile // 60)\navg_seconds = round(avg_seconds_per_mile % 60)\nreturn f\"{avg_minutes:02d}:{avg_seconds:02d}\"\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1561,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-11.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "30a933b4eaf2f28e46b1ccee71ff9453",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-12.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68216f040f957572e7c340c7\ntitle: \"Python Challenge 12: Message Decoder\"\nchallengeType: 29\ndashedName: python-challenge-12\n--description--\nGiven a secret message string, and an integer representing the number of letters that were used to shift the message to encode it, return the decoded string.\nA positive number means the message was shifted forward in the alphabet.\nA negative number means the message was shifted backward in the alphabet.\nCase matters, decoded characters should retain the case of their encoded counterparts.\nNon-alphabetical characters should not get decoded.\n--hints--\ndecode(\"Xlmw mw e wigvix qiwweki.\", 4) should return \"This is a secret message.\"\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(decode(\"Xlmw mw e wigvix qiwweki.\", 4), \"This is a secret message.\")`)\n}})\ndecode(\"Byffi Qilfx!\", 20) should return \"Hello World!\"\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(decode(\"Byffi Qilfx!\", 20), \"Hello World!\")`)\n}})\ndecode(\"Zqd xnt njzx?\", -1) should return \"Are you okay?\"\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(decode(\"Zqd xnt njzx?\", -1), \"Are you okay?\")`)\n}})\ndecode(\"oannLxmnLjvy\", 9) should return \"freeCodeCamp\"\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(decode(\"oannLxmnLjvy\", 9), \"freeCodeCamp\")`)\n}})\n--seed--\n--seed-contents--\n```py\ndef decode(message, shift):\nreturn message\n```\n--solutions--\npy\ndef decode(message, shift):\ndecoded_message = []\nfor char in message:\nif char.isalpha():\nbase = ord('a') if char.islower() else ord('A')\nnew_char = chr((ord(char) - base - shift) % 26 + base)\ndecoded_message.append(new_char)\nelse:\ndecoded_message.append(char)\nreturn ''.join(decoded_message)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1972,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-12.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b83090caa6023287e17e5a903616a8f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6814d93d516e86b171929de5\ntitle: \"Python Challenge 1: Vowel Balance\"\nchallengeType: 29\ndashedName: python-challenge-1\n--description--\nGiven a string, determine whether the number of vowels in the first half of the string is equal to the number of vowels in the second half The string can contain any characters The letters a, e, i, o, and u, in either uppercase or lowercase, are considered vowels If there's an odd number of characters in the string, ignore the center character --hints--\nis_balanced(\"racecar\") should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_balanced(\"racecar\"))`)\n}})\nis_balanced(\"Lorem Ipsum\") should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_balanced(\"Lorem Ipsum\"))`)\n}})\nis_balanced(\"Kitty Ipsum\") should return False js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertFalse(is_balanced(\"Kitty Ipsum\"))`)\n}})\nis_balanced(\"string\") should return False js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertFalse(is_balanced(\"string\"))`)\n}})\nis_balanced(\" \") should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_balanced(\" \"))`)\n}})\nis_balanced(\"abcdefghijklmnopqrstuvwxyz\") should return False js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertFalse(is_balanced(\"abcdefghijklmnopqrstuvwxyz\"))`)\n}})\nis_balanced(\"123A#b E&*456-o U\") should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_balanced(\"123A#b E&*456-o",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2174,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-1.md",
      "source_type": "git_repo"
    },
    "token_count": 395,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "95045d36a89559683123f977ecdae814",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "TestCase() assertFalse(is_balanced(\"Kitty Ipsum\"))`) }}) is_balanced(\"string\") should return False js ({test: () => { runPython(` from unittest import TestCase TestCase() assertFalse(is_balanced(\"string\"))`) }}) is_balanced(\" \") should return True js ({test: () => { runPython(` from unittest import TestCase TestCase() assertTrue(is_balanced(\" \"))`) }}) is_balanced(\"abcdefghijklmnopqrstuvwxyz\") should return False js ({test: () => { runPython(` from unittest import TestCase TestCase() assertFalse(is_balanced(\"abcdefghijklmnopqrstuvwxyz\"))`) }}) is_balanced(\"123A#b E&*456-o U\") should return True js ({test: () => { runPython(` from unittest import TestCase TestCase() assertTrue(is_balanced(\"123A#b E&*456-oU\"))`)\n}})\n--seed--\n--seed-contents--\n```py\ndef is_balanced(s):\nreturn s\n```\n--solutions--\n```py\ndef is_balanced(s):\nvowels = set(\"aeiouAEIOU\")\nn = len(s)\nhalf = n // 2\nfirst_half = s[:half]\nsecond_half = s[-half:]\ndef count_vowels(sub):\nreturn sum(1 for char in sub if char in vowels)\nreturn count_vowels(first_half) == count_vowels(second_half)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2174,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-1.md",
      "source_type": "git_repo"
    },
    "token_count": 279,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f03142f6ee4db879f4895bbf879bbef1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-16.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6821eca2237de8297eaee79e\ntitle: \"Python Challenge 16: Reverse Parenthesis\"\nchallengeType: 29\ndashedName: python-challenge-16\n--description--\nGiven a string that contains properly nested parentheses, return the decoded version of the string using the following rules:\nAll characters inside each pair of parentheses should be reversed.\nParentheses should be removed from the final result.\nIf parentheses are nested, the innermost pair should be reversed first, and then its result should be included in the reversal of the outer pair.\nAssume all parentheses are evenly balanced and correctly nested.\n--hints--\ndecode(\"(f(b(dc)e)a)\") should return \"abcdef\".\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(decode(\"(f(b(dc)e)a)\"), \"abcdef\")`)\n}})\ndecode(\"((is?)(a(t d)h)e(n y( uo)r)aC)\") should return \"Can you read this?\".\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(decode(\"((is?)(a(t d)h)e(n y( uo)r)aC)\"), \"Can you read this?\")`)\n}})\ndecode(\"f(Ce(re))o((e(aC)m)d)p\") should return \"freeCodeCamp\".\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(decode(\"f(Ce(re))o((e(aC)m)d)p\"), \"freeCodeCamp\")`)\n}})\n--seed--\n--seed-contents--\n```py\ndef decode(s):\nreturn s\n```\n--solutions--\npy\ndef decode(s):\nwhile ')' in s:\nclose_index = s.index(')')\nopen_index = s.rindex('(', 0, close_index)\ninner = s[open_index + 1:close_index][::-1]\ns = s[:open_index] + inner + s[close_index + 1:]\nreturn s",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1625,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-16.md",
      "source_type": "git_repo"
    },
    "token_count": 421,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c249cf5ecb416abf94ad3576cd7f1c58",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-13.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6821ec92237de8297eaee79b\ntitle: \"Python Challenge 13: Unnatural Prime\"\nchallengeType: 29\ndashedName: python-challenge-13\n--description--\nGiven an integer, determine if that number is a prime number or a negative prime number A prime number is a positive integer greater than 1 that is only divisible by 1 and itself A negative prime number is the negative version of a positive prime number 1 and 0 are not considered prime numbers --hints--\nis_unnatural_prime(1) should return False js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertFalse(is_unnatural_prime(1))`)\n}})\nis_unnatural_prime(-1) should return False js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertFalse(is_unnatural_prime(-1))`)\n}})\nis_unnatural_prime(19) should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_unnatural_prime(19))`)\n}})\nis_unnatural_prime(-23) should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_unnatural_prime(-23))`)\n}})\nis_unnatural_prime(0) should return False js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertFalse(is_unnatural_prime(0))`)\n}})\nis_unnatural_prime(97) should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_unnatural_prime(97))`)\n}})\nis_unnatural_prime(-61) should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_unnatural_prime(-61))`)\n}})\nis_unnatural_prime(99) should return False js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertFalse(is_unnatural_prime(99))`)\n}})\nis_unnatural_prime(-44) should return False js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2326,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-13.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6389f698854fcdcd23bde0a1319758c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-13.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "=> { runPython(` from unittest import TestCase TestCase() assertFalse(is_unnatural_prime(0))`) }}) is_unnatural_prime(97) should return True js ({test: () => { runPython(` from unittest import TestCase TestCase() assertTrue(is_unnatural_prime(97))`) }}) is_unnatural_prime(-61) should return True js ({test: () => { runPython(` from unittest import TestCase TestCase() assertTrue(is_unnatural_prime(-61))`) }}) is_unnatural_prime(99) should return False js ({test: () => { runPython(` from unittest import TestCase TestCase() assertFalse(is_unnatural_prime(99))`) }}) is_unnatural_prime(-44) should return False js ({test: () => { runPython(` from unittest import TestCase TestCase()assertFalse(is_unnatural_prime(-44))`)\n}})\n--seed--\n--seed-contents--\n```py\ndef is_unnatural_prime(n):\nreturn n\n```\n--solutions--\n```py\ndef is_unnatural_prime(n):\nabs_n = abs(n)\nif abs_n <= 1:\nreturn False\nfor i in range(2, int(abs_n ** 0 5) + 1):\nif abs_n % i == 0:\nreturn False\nreturn True\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2326,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-13.md",
      "source_type": "git_repo"
    },
    "token_count": 258,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7a3f73af1ba2d71b67280f2886836828",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-14.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6821ec98237de8297eaee79c\ntitle: \"Python Challenge 14: Character Battle\"\nchallengeType: 29\ndashedName: python-challenge-14\n--description--\nGiven two strings representing your army and an opposing army, each character from your army battles the character at the same position from the opposing army using the following rules:\nCharacters a-z have a strength of 1-26, respectively Characters A-Z have a strength of 27-52, respectively Digits 0-9 have a strength of their face value All other characters have a value of zero Each character can only fight one battle For each battle, the stronger character wins The army with more victories, wins the war Return the following values:\n\"Opponent retreated\" if your army has more characters than the opposing army \"We retreated\" if the opposing army has more characters than yours \"We won\" if your army won more battles \"We lost\" if the opposing army won more battles \"It was a tie\" if both armies won the same number of battles --hints--\nbattle(\"Hello\", \"World\") should return \"We lost\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(battle(\"Hello\", \"World\"), \"We lost\")`)\n}})\nbattle(\"pizza\", \"salad\") should return \"We won\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(battle(\"pizza\", \"salad\"), \"We won\")`)\n}})\nbattle(\"C@T5\", \"D0G$\") should return \"We won\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(battle(\"C@T5\", \"D0G$\"), \"We won\")`)\n}})\nbattle(\"kn ght\", \"orc\") should return \"Opponent retreated\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(battle(\"kn ght\", \"orc\"), \"Opponent retreated\")`)\n}})\nbattle(\"PC\", \"Mac\") should return \"We retreated\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(battle(\"PC\", \"Mac\"), \"We retreated\")`)\n}})\nbattle(\"Wizards\", \"Dragons\") should return \"It was a tie\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3496,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-14.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "0d9f5576bbf2e43bf12caa99676ae7f8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-14.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "battle(\"C@T5\", \"D0G$\") should return \"We won\" js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(battle(\"C@T5\", \"D0G$\"), \"We won\")`) }}) battle(\"kn ght\", \"orc\") should return \"Opponent retreated\" js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(battle(\"kn ght\", \"orc\"), \"Opponent retreated\")`) }}) battle(\"PC\", \"Mac\") should return \"We retreated\" js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(battle(\"PC\", \"Mac\"), \"We retreated\")`) }}) battle(\"Wizards\", \"Dragons\") should return \"It was a tie\"js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(battle(\"Wizards\", \"Dragons\"), \"It was a tie\")`)\n}})\nbattle(\"Mr Smith\", \"Dr Jones\") should return \"It was a tie\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(battle(\"Mr Smith\", \"Dr Jones\"), \"It was a tie\")`)\n}})\n--seed--\n--seed-contents--\n```py\ndef battle(my_army, opposing_army):\nreturn my_army\n```\n--solutions--\n```py\ndef get_strength(soldier):\nletters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\nif soldier isdigit():\nreturn int(soldier)\nelif soldier in letters:\nreturn letters",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3496,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-14.md",
      "source_type": "git_repo"
    },
    "token_count": 332,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "acc40a195c8d66f8b88c35a274d87718",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-14.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a tie\"js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(battle(\"Wizards\", \"Dragons\"), \"It was a tie\")`) }}) battle(\"Mr Smith\", \"Dr Jones\") should return \"It was a tie\" js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(battle(\"Mr Smith\", \"Dr Jones\"), \"It was a tie\")`) }}) --seed-- --seed-contents-- ```py def battle(my_army, opposing_army): return my_army ``` --solutions-- ```py def get_strength(soldier): letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ' if soldier isdigit(): return int(soldier) elif soldier in letters: return lettersindex(soldier) + 1\nelse:\nreturn 0\ndef battle(my_army, opposing_army):\nif len(my_army) > len(opposing_army):\nreturn 'Opponent retreated'\nif len(opposing_army) > len(my_army):\nreturn 'We retreated'\nmy_wins = 0\ntheir_wins = 0\nfor my_soldier, their_soldier in zip(my_army, opposing_army):\nmy_strength = get_strength(my_soldier)\ntheir_strength = get_strength(their_soldier)\nif my_strength > their_strength:\nmy_wins += 1\nelif their_strength > my_strength:\ntheir_wins += 1\nif my_wins > their_wins:\nreturn 'We won'\nelif their_wins > my_wins:\nreturn 'We lost'\nelse:\nreturn 'It was a tie'\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3496,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-14.md",
      "source_type": "git_repo"
    },
    "token_count": 335,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "fce1ecb029a60d46c8f95cc9e98dd7d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-15.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6821ec9d237de8297eaee79d\ntitle: \"Python Challenge 15: camelCase\"\nchallengeType: 29\ndashedName: python-challenge-15\n--description--\nGiven a string, return its camel case version using the following rules:\nWords in the string argument are separated by one or more characters from the following set: space (), dash (-), or underscore (_) Treat any sequence of these as a word break The first word should be all lowercase Each subsequent word should start with an uppercase letter, with the rest of it lowercase All spaces and separators should be removed --hints--\nto_camel_case(\"hello world\") should return \"helloWorld\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(to_camel_case(\"hello world\"), \"helloWorld\")`)\n}})\nto_camel_case(\"HELLO WORLD\") should return \"helloWorld\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(to_camel_case(\"HELLO WORLD\"), \"helloWorld\")`)\n}})\nto_camel_case(\"secret agent-X\") should return \"secretAgentX\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(to_camel_case(\"secret agent-X\"), \"secretAgentX\")`)\n}})\nto_camel_case(\"FREE cODE cAMP\") should return \"freeCodeCamp\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(to_camel_case(\"FREE cODE cAMP\"), \"freeCodeCamp\")`)\n}})\nto_camel_case(\"ye old-_-sea  faring_buccaneer_-_with a - peg__leg----and a_parrot_ _named- _squawk\") should return \"yeOldSeaFaringBuccaneerWithAPegLegAndAParrotNamedSquawk\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2201,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-15.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f8d16b829c2f4f5b817e090480c9bc10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-15.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{ runPython(` from unittest import TestCase TestCase() assertEqual(to_camel_case(\"HELLO WORLD\"), \"helloWorld\")`) }}) to_camel_case(\"secret agent-X\") should return \"secretAgentX\" js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(to_camel_case(\"secret agent-X\"), \"secretAgentX\")`) }}) to_camel_case(\"FREE cODE cAMP\") should return \"freeCodeCamp\" js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(to_camel_case(\"FREE cODE cAMP\"), \"freeCodeCamp\")`) }}) to_camel_case(\"ye old-_-sea faring_buccaneer_-_with a - peg__leg----and a_parrot_ _named- _squawk\") should return \"yeOldSeaFaringBuccaneerWithAPegLegAndAParrotNamedSquawk\" js ({test: () => { runPython(` from unittest import TestCase TestCase()assertEqual(to_camel_case(\"ye old-_-sea  faring_buccaneer_-_with a - peg__leg----and a_parrot_ _named- _squawk\"), \"yeOldSeaFaringBuccaneerWithAPegLegAndAParrotNamedSquawk\")`)\n}})\n--seed--\n--seed-contents--\n```py\ndef to_camel_case(s):\nreturn s\n```\n--solutions--\n```py\nimport re\ndef to_camel_case(s):\nwords = re split(r'[_- ]+', s)\ncamel = [\nwords[0] lower() if words else ''\n] + [\nword capitalize() for word in words[1:]\n]\nreturn '' join(camel)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2201,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-15.md",
      "source_type": "git_repo"
    },
    "token_count": 361,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b6f7005430601545916481a9d8dd6636",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-17.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6821eca7237de8297eaee79f\ntitle: \"Python Challenge 17: Unorder of Operations\"\nchallengeType: 29\ndashedName: python-challenge-17\n--description--\nGiven an array of integers and an array of string operators, apply the operations to the numbers sequentially from left-to-right Repeat the operations as needed until all numbers are used Return the final result For example, given [1, 2, 3, 4, 5] and ['+', '*'], return the result of evaluating 1 + 2 * 3 + 4 * 5 from left-to-right ignoring standard order of operations Valid operators are +, -, *, /, and % --hints--\nevaluate([5, 6, 7, 8, 9], ['+', '-']) should return 3\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(evaluate([5, 6, 7, 8, 9], ['+', '-']), 3)`)\n}})\nevaluate([17, 61, 40, 24, 38, 14], ['+', '%']) should return 38\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(evaluate([17, 61, 40, 24, 38, 14], ['+', '%']), 38)`)\n}})\nevaluate([20, 2, 4, 24, 12, 3], ['*', '/']) should return 60\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(evaluate([20, 2, 4, 24, 12, 3], ['*', '/']), 60)`)\n}})\nevaluate([11, 4, 10, 17, 2], ['*', '*', '%']) should return 30\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(evaluate([11, 4, 10, 17, 2], ['*', '*', '%']), 30)`)\n}})\nevaluate([33, 11, 29, 13], ['/', '-']) should return -2\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2251,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-17.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "587e0d82821559207e7ef61ff4edfa3b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-17.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should return 60 js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(evaluate([20, 2, 4, 24, 12, 3], ['*', '/']), 60)`) }}) evaluate([11, 4, 10, 17, 2], ['*', '*', '%']) should return 30 js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(evaluate([11, 4, 10, 17, 2], ['*', '*', '%']), 30)`) }}) evaluate([33, 11, 29, 13], ['/', '-']) should return -2 js ({test: () => { runPython(` from unittest import TestCase TestCase()assertEqual(evaluate([33, 11, 29, 13], ['/', '-']), -2)`)\n}})\n--seed--\n--seed-contents--\n```py\ndef evaluate(numbers, operators):\nreturn numbers\n```\n--solutions--\n```py\ndef do_math(a, b, operator):\nif operator == '+':\nreturn a + b\nelif operator == '-':\nreturn a - b\nelif operator == '*':\nreturn a * b\nelif operator == '/':\nreturn a / b\nelse:\nreturn a % b\ndef evaluate(numbers, operators):\ntotal = numbers[0]\nfor i in range(1, len(numbers)):\noperator = operators[(i - 1) % len(operators)]\ntotal = do_math(total, numbers[i], operator)\nreturn total\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2251,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-17.md",
      "source_type": "git_repo"
    },
    "token_count": 321,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "52edd8218f68f89a6699d5f19df76194",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-18.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6821ecab237de8297eaee7a0\ntitle: \"Python Challenge 18: Second Best\"\nchallengeType: 29\ndashedName: python-challenge-18\n--description--\nGiven an array of integers representing the price of different laptops, and an integer representing your budget, return:\nThe second most expensive laptop if it is within your budget, or\nThe most expensive laptop that is within your budget, or\n0 if no laptops are within your budget Duplicate prices should be ignored --hints--\nget_laptop_cost([1500, 2000, 1800, 1400], 1900) should return 1800\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(get_laptop_cost([1500, 2000, 1800, 1400], 1900), 1800)`)\n}})\nget_laptop_cost([1500, 2000, 2000, 1800, 1400], 1900) should return 1800\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(get_laptop_cost([1500, 2000, 2000, 1800, 1400], 1900), 1800)`)\n}})\nget_laptop_cost([2099, 1599, 1899, 1499], 2200) should return 1899\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(get_laptop_cost([2099, 1599, 1899, 1499], 2200), 1899)`)\n}})\nget_laptop_cost([2099, 1599, 1899, 1499], 1000) should return 0\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(get_laptop_cost([2099, 1599, 1899, 1499], 1000), 0)`)\n}})\nget_laptop_cost([1200, 1500, 1600, 1800, 1400, 2000], 1450) should return 1400\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2106,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-18.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ba532a78fd766077ea294e658dc723c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-18.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1900), 1800)`) }}) get_laptop_cost([2099, 1599, 1899, 1499], 2200) should return 1899 js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(get_laptop_cost([2099, 1599, 1899, 1499], 2200), 1899)`) }}) get_laptop_cost([2099, 1599, 1899, 1499], 1000) should return 0 js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(get_laptop_cost([2099, 1599, 1899, 1499], 1000), 0)`) }}) get_laptop_cost([1200, 1500, 1600, 1800, 1400, 2000], 1450) should return 1400 js ({test: () => { runPython(` from unittest import TestCase TestCase()assertEqual(get_laptop_cost([1200, 1500, 1600, 1800, 1400, 2000], 1450), 1400)`)\n}})\n--seed--\n--seed-contents--\n```py\ndef get_laptop_cost(laptops, budget):\nreturn laptops\n```\n--solutions--\n```py\ndef get_laptop_cost(laptops, budget):\nlaptops = sorted(set(laptops), reverse=True)\nif len(laptops) >= 2 and budget >= laptops[1]:\nreturn laptops[1]\nif not laptops or budget < laptops[-1]:\nreturn 0\nfor price in laptops[2:]:\nif budget >= price:\nreturn price\nreturn 0\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2106,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-18.md",
      "source_type": "git_repo"
    },
    "token_count": 365,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "52cae9934d3d029c41cc2a194f6f2e8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-19.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6821ecb1237de8297eaee7a1\ntitle: \"Python Challenge 19: Candlelight\"\nchallengeType: 29\ndashedName: python-challenge-19\n--description--\nGiven an integer representing the number of candles you start with, and an integer representing how many burned candles it takes to create a new one, return the number of candles you will have used after creating and burning as many as you can For example, if given 7 candles and it takes 2 burned candles to make a new one:\nBurn 7 candles to get 7 leftovers,\nRecycle 6 leftovers into 3 new candles (1 leftover remains),\nBurn 3 candles to get 3 more leftovers (4 total),\nRecycle 4 leftovers into 2 new candles,\nBurn 2 candles to get 2 leftovers,\nRecycle 2 leftovers into 1 new candle,\nBurn 1 candle You will have burned 13 total candles in the example --hints--\nburn_candles(7, 2) should return 13\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(burn_candles(7, 2), 13)`)\n}})\nburn_candles(10, 5) should return 12\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(burn_candles(10, 5), 12)`)\n}})\nburn_candles(20, 3) should return 29\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(burn_candles(20, 3), 29)`)\n}})\nburn_candles(17, 4) should return 22\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(burn_candles(17, 4), 22)`)\n}})\nburn_candles(2345, 3) should return 3517\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2133,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-19.md",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "757c32b272f24abff2e85d3e0348f77b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-19.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "burn_candles(10, 5) should return 12 js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(burn_candles(10, 5), 12)`) }}) burn_candles(20, 3) should return 29 js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(burn_candles(20, 3), 29)`) }}) burn_candles(17, 4) should return 22 js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(burn_candles(17, 4), 22)`) }}) burn_candles(2345, 3) should return 3517 js ({test: () => { runPython(` from unittest import TestCase TestCase()assertEqual(burn_candles(2345, 3), 3517)`)\n}})\n--seed--\n--seed-contents--\n```py\ndef burn_candles(candles, leftovers_needed):\nreturn candles\n```\n--solutions--\n```py\ndef burn_candles(candles, leftovers_needed):\ntotal_burned = 0\nunused_leftovers = 0\nwhile candles > 0:\ntotal_burned += candles\nleftovers = candles + unused_leftovers\ncandles = leftovers // leftovers_needed\nunused_leftovers = leftovers % leftovers_needed\nreturn total_burned\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2133,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-19.md",
      "source_type": "git_repo"
    },
    "token_count": 295,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "bd378764ce37d3efefcc60c7ec696b20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-20.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6821ecb5237de8297eaee7a2\ntitle: \"Python Challenge 20: Array Duplicates\"\nchallengeType: 29\ndashedName: python-challenge-20\n--description--\nGiven an array of integers, return an array of integers that appear more than once in the initial array, sorted in ascending order. If no values appear more than once, return an empty array.\nOnly include one instance of each value in the returned array.\n--hints--\nfind_duplicates([1, 2, 3, 4, 5]) should return [].\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(find_duplicates([1, 2, 3, 4, 5]), [])`)\n}})\nfind_duplicates([1, 2, 3, 4, 1, 2]) should return [1, 2].\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(find_duplicates([1, 2, 3, 4, 1, 2]), [1, 2])`)\n}})\nfind_duplicates([2, 34, 0, 1, -6, 23, 5, 3, 2, 5, 67, -6, 23, 2, 43, 2, 12, 0, 2, 4, 4]) should return [-6, 0, 2, 4, 5, 23].\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(find_duplicates([2, 34, 0, 1, -6, 23, 5, 3, 2, 5, 67, -6, 23, 2, 43, 2, 12, 0, 2, 4, 4]), [-6, 0, 2, 4, 5, 23])`)\n}})\n--seed--\n--seed-contents--\n```py\ndef find_duplicates(arr):\nreturn arr\n```\n--solutions--\n```py\ndef find_duplicates(arr):\nseen = set()\nduplicates = set()\nfor num in arr:\nif num in seen:\nduplicates.add(num)\nelse:\nseen.add(num)\nreturn sorted(duplicates)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1491,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-20.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5bc33b5cd2e67edd65d11bb54c4834c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-23.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6821ecc5237de8297eaee7a5\ntitle: \"Python Challenge 23: RGB to Hex\"\nchallengeType: 29\ndashedName: python-challenge-23\n--description--\nGiven a CSS rgb(r, g, b) color string, return its hexadecimal equivalent.\nHere are some example outputs for a given input:\n| Input   | Output   |\n|---------|----------|\n| \"rgb(255, 255, 255)\"| \"#ffffff\" |\n| \"rgb(1, 2, 3)\" | \"#010203\" |\nMake any letters lowercase.\nReturn a # followed by six characters. Don't use any shorthand values.\n--hints--\nrgb_to_hex(\"rgb(255, 255, 255)\") should return \"#ffffff\".\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(rgb_to_hex(\"rgb(255, 255, 255)\"), \"#ffffff\")`)\n}})\nrgb_to_hex(\"rgb(1, 11, 111)\") should return \"#010b6f\".\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(rgb_to_hex(\"rgb(1, 11, 111)\"), \"#010b6f\")`)\n}})\nrgb_to_hex(\"rgb(173, 216, 230)\") should return \"#add8e6\".\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(rgb_to_hex(\"rgb(173, 216, 230)\"), \"#add8e6\")`)\n}})\nrgb_to_hex(\"rgb(79, 123, 201)\") should return \"#4f7bc9\".\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(rgb_to_hex(\"rgb(79, 123, 201)\"), \"#4f7bc9\")`)\n}})\n--seed--\n--seed-contents--\n```py\ndef rgb_to_hex(rgb):\nreturn rgb\n```\n--solutions--\npy\ndef rgb_to_hex(rgb):\nimport re\nmatch = re.findall(r'\\d+', rgb)\nr, g, b = [max(0, min(255, int(x))) for x in match[:3]]\nreturn f'#{r:02x}{g:02x}{b:02x}'",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1609,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-23.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "92b04680934a04066c6b73406d49493c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-24.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6821eccb237de8297eaee7a6\ntitle: \"Python Challenge 24: Pangram\"\nchallengeType: 29\ndashedName: python-challenge-24\n--description--\nGiven a word or sentence and a string of lowercase letters, determine if the word or sentence uses all the letters from the given set at least once and no other letters Ignore non-alphabetical characters in the word or sentence Ignore letter casing in the word or sentence --hints--\nis_pangram(\"hello\", \"helo\") should return True\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_pangram(\"hello\", \"helo\"))`)\n}})\nis_pangram(\"hello\", \"hel\") should return False\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertFalse(is_pangram(\"hello\", \"hel\"))`)\n}})\nis_pangram(\"hello\", \"helow\") should return False\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertFalse(is_pangram(\"hello\", \"helow\"))`)\n}})\nis_pangram(\"hello world\", \"helowrd\") should return True\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_pangram(\"hello world\", \"helowrd\"))`)\n}})\nis_pangram(\"Hello World \", \"helowrd\") should return True\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_pangram(\"Hello World \", \"helowrd\"))`)\n}})\nis_pangram(\"Hello World \", \"heliowrd\") should return False\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertFalse(is_pangram(\"Hello World \", \"heliowrd\"))`)\n}})\nis_pangram(\"freeCodeCamp\", \"frcdmp\") should return False\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertFalse(is_pangram(\"freeCodeCamp\", \"frcdmp\"))`)\n}})\nis_pangram(\"The quick brown fox jumps over the lazy dog \", \"abcdefghijklmnopqrstuvwxyz\") should return True\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2566,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-24.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2b3ed664638c95f1c1a7cc96637e202b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-24.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "unittest import TestCase TestCase() assertTrue(is_pangram(\"Hello World \", \"helowrd\"))`) }}) is_pangram(\"Hello World \", \"heliowrd\") should return False js ({test: () => { runPython(` from unittest import TestCase TestCase() assertFalse(is_pangram(\"Hello World \", \"heliowrd\"))`) }}) is_pangram(\"freeCodeCamp\", \"frcdmp\") should return False js ({test: () => { runPython(` from unittest import TestCase TestCase() assertFalse(is_pangram(\"freeCodeCamp\", \"frcdmp\"))`) }}) is_pangram(\"The quick brown fox jumps over the lazy dog \", \"abcdefghijklmnopqrstuvwxyz\") should return True js ({test: () => { runPython(` from unittest import TestCase TestCase()assertTrue(is_pangram(\"The quick brown fox jumps over the lazy dog \", \"abcdefghijklmnopqrstuvwxyz\"))`)\n}})\n--seed--\n--seed-contents--\n```py\ndef is_pangram(sentence, letters):\nreturn sentence\n```\n--solutions--\n```py\nimport re\ndef is_pangram(sentence, letters):\nused_letters = []\nfor char in sentence lower():\nif re match(r'[a-z]', char) and char not in used_letters:\nused_letters append(char)\nsorted_letters = '' join(sorted(letters lower()))\nsorted_used_letters = '' join(sorted(used_letters))\nreturn sorted_letters == sorted_used_letters\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2566,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-24.md",
      "source_type": "git_repo"
    },
    "token_count": 290,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "bb96c4373cdee7a9ba11831cd1bd6026",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-22.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6821ecbf237de8297eaee7a4\ntitle: \"Python Challenge 22: Tribonacci Sequence\"\nchallengeType: 29\ndashedName: python-challenge-22\n--description--\nThe Tribonacci sequence is a series of numbers where each number is the sum of the three preceding ones When starting with 0, 0 and 1, the first 10 numbers in the sequence are 0, 0, 1, 1, 2, 4, 7, 13, 24, 44 Given an array containing the first three numbers of a Tribonacci sequence, and an integer representing the length of the sequence, return an array containing the sequence of the given length Your function should handle sequences of any length greater than or equal to zero If the length is zero, return an empty array Note that the starting numbers are part of the sequence --hints--\ntribonacci_sequence([0, 0, 1], 20) should return [0, 0, 1, 1, 2, 4, 7, 13, 24, 44, 81, 149, 274, 504, 927, 1705, 3136, 5768, 10609, 19513] js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(tribonacci_sequence([0, 0, 1], 20), [0, 0, 1, 1, 2, 4, 7, 13, 24, 44, 81, 149, 274, 504, 927, 1705, 3136, 5768, 10609, 19513])`)\n}})\ntribonacci_sequence([21, 32, 43], 1) should return [21] js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(tribonacci_sequence([21, 32, 43], 1), [21])`)\n}})\ntribonacci_sequence([0, 0, 1], 0) should return [] js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2886,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-22.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "7d112d1a5deb94e32f3943b015cd190f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-22.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "() => { runPython(` from unittest import TestCase TestCase() assertEqual(tribonacci_sequence([0, 0, 1], 20), [0, 0, 1, 1, 2, 4, 7, 13, 24, 44, 81, 149, 274, 504, 927, 1705, 3136, 5768, 10609, 19513])`) }}) tribonacci_sequence([21, 32, 43], 1) should return [21] js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(tribonacci_sequence([21, 32, 43], 1), [21])`) }}) tribonacci_sequence([0, 0, 1], 0) should return [] js ({test: () => { runPython(` from unittest import TestCase TestCase()assertEqual(tribonacci_sequence([0, 0, 1], 0), [])`)\n}})\ntribonacci_sequence([10, 20, 30], 2) should return [10, 20] js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(tribonacci_sequence([10, 20, 30], 2), [10, 20])`)\n}})\ntribonacci_sequence([10, 20, 30], 3) should return [10, 20, 30] js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(tribonacci_sequence([10, 20, 30], 3), [10, 20, 30])`)\n}})\ntribonacci_sequence([123, 456, 789], 8) should return [123, 456, 789, 1368, 2613, 4770, 8751, 16134] js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2886,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-22.md",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "31b9c2757427f8d2b5ae9625052cd24d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-22.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "2) should return [10, 20] js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(tribonacci_sequence([10, 20, 30], 2), [10, 20])`) }}) tribonacci_sequence([10, 20, 30], 3) should return [10, 20, 30] js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(tribonacci_sequence([10, 20, 30], 3), [10, 20, 30])`) }}) tribonacci_sequence([123, 456, 789], 8) should return [123, 456, 789, 1368, 2613, 4770, 8751, 16134] js ({test: () => { runPython(` from unittest import TestCase TestCase()assertEqual(tribonacci_sequence([123, 456, 789], 8), [123, 456, 789, 1368, 2613, 4770, 8751, 16134])`)\n}})\n--seed--\n--seed-contents--\n```py\ndef tribonacci_sequence(start_sequence, length):\nreturn length\n```\n--solutions--\n```py\ndef tribonacci_sequence(start_sequence, length):\nif length == 0:\nreturn []\nif length == 1:\nreturn [start_sequence[0]]\nif length == 2:\nreturn [start_sequence[0], start_sequence[1]]\nif length == 3:\nreturn start_sequence[:]\nsequence = start_sequence[:]\nwhile len(sequence) < length:\nnext_value = sequence[-1] + sequence[-2] + sequence[-3]\nsequence append(next_value)\nreturn sequence\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2886,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-22.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "248f974f1860469e329360390846f13d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681cb1b1dab50c87ddb2e51c\ntitle: \"Python Challenge 2: Base Check\"\nchallengeType: 29\ndashedName: python-challenge-2\n--description--\nGiven a string representing a number, and an integer base from 2 to 36, determine whether the number is valid in that base The string may contain integers, and uppercase or lowercase characters The check should be case-insensitive The base can be any number 2-36 A number is valid if every character is a valid digit in the given base Example of valid digits for bases:\nBase 2: 0-1\nBase 8: 0-7\nBase 10: 0-9\nBase 16: 0-9 and A-F\nBase 36: 0-9 and A-Z\n--hints--\nis_valid_number(\"10101\", 2) should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_valid_number(\"10101\", 2))`);\n}})\nis_valid_number(\"10201\", 2) should return False js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertFalse(is_valid_number(\"10201\", 2))`)\n}})\nis_valid_number(\"76543210\", 8) should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_valid_number(\"76543210\", 8))`)\n}})\nis_valid_number(\"9876543210\", 8) should return False js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertFalse(is_valid_number(\"9876543210\", 8))`)\n}})\nis_valid_number(\"9876543210\", 10) should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_valid_number(\"9876543210\", 10))`)\n}})\nis_valid_number(\"ABC\", 10) should return False js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertFalse(is_valid_number(\"ABC\", 10))`)\n}})\nis_valid_number(\"ABC\", 16) should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3900,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-2.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c46a877f0d5e87987cbdae8781e9f2b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assertTrue(is_valid_number(\"76543210\", 8))`) }}) is_valid_number(\"9876543210\", 8) should return False js ({test: () => { runPython(` from unittest import TestCase TestCase() assertFalse(is_valid_number(\"9876543210\", 8))`) }}) is_valid_number(\"9876543210\", 10) should return True js ({test: () => { runPython(` from unittest import TestCase TestCase() assertTrue(is_valid_number(\"9876543210\", 10))`) }}) is_valid_number(\"ABC\", 10) should return False js ({test: () => { runPython(` from unittest import TestCase TestCase() assertFalse(is_valid_number(\"ABC\", 10))`) }}) is_valid_number(\"ABC\", 16) should return True js ({test: () => { runPython(` from unittest import TestCase TestCase()assertTrue(is_valid_number(\"ABC\", 16))`)\n}})\nis_valid_number(\"Z\", 36) should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_valid_number(\"Z\", 36))`)\n}})\nis_valid_number(\"ABC\", 20) should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_valid_number(\"ABC\", 20))`)\n}})\nis_valid_number(\"4B4BA9\", 16) should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_valid_number(\"4B4BA9\", 16))`)\n}})\nis_valid_number(\"5G3F8F\", 16) should return False js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertFalse(is_valid_number(\"5G3F8F\", 16))`)\n}})\nis_valid_number(\"5G3F8F\", 17) should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_valid_number(\"5G3F8F\", 17))`)\n}})\nis_valid_number(\"abc\", 10) should return False js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertFalse(is_valid_number(\"abc\", 10))`)\n}})\nis_valid_number(\"abc\", 16) should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3900,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-2.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "3dd39c172255ebb47005d07c3d94fbdf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assertTrue(is_valid_number(\"4B4BA9\", 16))`) }}) is_valid_number(\"5G3F8F\", 16) should return False js ({test: () => { runPython(` from unittest import TestCase TestCase() assertFalse(is_valid_number(\"5G3F8F\", 16))`) }}) is_valid_number(\"5G3F8F\", 17) should return True js ({test: () => { runPython(` from unittest import TestCase TestCase() assertTrue(is_valid_number(\"5G3F8F\", 17))`) }}) is_valid_number(\"abc\", 10) should return False js ({test: () => { runPython(` from unittest import TestCase TestCase() assertFalse(is_valid_number(\"abc\", 10))`) }}) is_valid_number(\"abc\", 16) should return True js ({test: () => { runPython(` from unittest import TestCase TestCase()assertTrue(is_valid_number(\"abc\", 16))`)\n}})\nis_valid_number(\"AbC\", 16) should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_valid_number(\"AbC\", 16))`)\n}})\nis_valid_number(\"z\", 36) should return True js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertTrue(is_valid_number(\"z\", 36))`)\n}})\n--seed--\n--seed-contents--\n```py\ndef is_valid_number(n, base):\nreturn n\n```\n--solutions--\n```py\ndef is_valid_number(n, base):\nallChars = \"0123456789abcdefghijklmnopqrstuvwxyz\"\nnewN = n lower()\navailableChars = allChars[0:base]\nfor char in newN:\nif char not in availableChars:\nreturn False\nreturn True\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3900,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-2.md",
      "source_type": "git_repo"
    },
    "token_count": 371,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "3f934d510b485b50220c1601a0cf1654",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-21.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6821ecb9237de8297eaee7a3\ntitle: \"Python Challenge 21: Hex Generator\"\nchallengeType: 29\ndashedName: python-challenge-21\n--description--\nGiven a named CSS color string, generate a random hexadecimal (hex) color code that is dominant in the given color The function should handle \"red\", \"green\", or \"blue\" as an input argument If the input is not one of those, the function should return \"Invalid color\" The function should return a random six-character hex color code where the input color value is greater than any of the others Example of valid outputs for a given input:\n| Input   | Output   |\n|---------|----------|\n| \"red\"   | \"FF0000\" |\n| \"green\" | \"00FF00\" |\n| \"blue\"  | \"0000FF\" |\n--hints--\ngenerate_hex(\"yellow\") should return \"Invalid color\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(generate_hex(\"yellow\"), \"Invalid color\")`);\n}})\ngenerate_hex(\"red\") should return a six-character string js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(len(generate_hex(\"red\")), 6)`);\n}})\ngenerate_hex(\"red\") should return a valid six-character hex color code ``js\n({test: () => { runPython(\nfrom unittest import TestCase\nhex = generate_hex(\"red\") upper()\nis_valid_hex = len(hex) == 6 and all(c in \"0123456789ABCDEF\" for c in hex)\nTestCase() assertTrue(is_valid_hex)`)\n}})\n```\ngenerate_hex(\"red\") should return a valid hex color with a higher red value than other colors ``js\n({test: () => { runPython(\nfrom unittest import TestCase\nhex = generate_hex(\"red\") upper()\nis_valid_hex = len(hex) == 6 and all(c in \"0123456789ABCDEF\" for c in hex)\nTestCase() assertTrue(is_valid_hex)\nr = int(hex[:2], 16)\ng = int(hex[2:4], 16)\nb = int(hex[4:], 16)\nTestCase() assertGreater(r, g)\nTestCase()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4974,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-21.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "6ac1c50f5d07e13516a8d66f5df2eb36",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-21.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= len(hex) == 6 and all(c in \"0123456789ABCDEF\" for c in hex) TestCase() assertTrue(is_valid_hex)`) }}) ``` generate_hex(\"red\") should return a valid hex color with a higher red value than other colors ``js ({test: () => { runPython( from unittest import TestCase hex = generate_hex(\"red\") upper() is_valid_hex = len(hex) == 6 and all(c in \"0123456789ABCDEF\" for c in hex) TestCase() assertTrue(is_valid_hex) r = int(hex[:2], 16) g = int(hex[2:4], 16) b = int(hex[4:], 16) TestCase() assertGreater(r, g) TestCase()assertGreater(r, b)`)\n}})\n```\nCalling generate_hex(\"red\") twice should return two different hex color values where red is dominant ``js\n({test: () => { runPython(\nfrom unittest import TestCase\nhex1 = generate_hex(\"red\") upper()\nis_valid_hex1 = len(hex1) == 6 and all(c in \"0123456789ABCDEF\" for c in hex1)\nTestCase() assertTrue(is_valid_hex1)\nr1 = int(hex1[:2], 16)\ng1 = int(hex1[2:4], 16)\nb1 = int(hex1[4:], 16)\nTestCase() assertGreater(r1, g1)\nTestCase() assertGreater(r1, b1)\nhex2 = generate_hex(\"red\") upper()\nis_valid_hex2 = len(hex2) == 6 and all(c in \"0123456789ABCDEF\" for c in hex2)\nTestCase() assertTrue(is_valid_hex2)\nr2 = int(hex2[:2], 16)\ng2 = int(hex2[2:4], 16)\nb2 = int(hex2[4:], 16)\nTestCase() assertGreater(r2, g2)\nTestCase() assertGreater(r2, b2)\nTestCase() assertNotEqual(hex1, hex2)`);\n}})\n```\nCalling generate_hex(\"green\") twice should return two different hex color values where green is dominant ``js\n({test: () => { runPython(\nfrom unittest import TestCase\nhex1 = generate_hex(\"green\")",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4974,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-21.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "f005cbe7484168d833d3a70effb1b601",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-21.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "16) TestCase() assertGreater(r1, g1) TestCase() assertGreater(r1, b1) hex2 = generate_hex(\"red\") upper() is_valid_hex2 = len(hex2) == 6 and all(c in \"0123456789ABCDEF\" for c in hex2) TestCase() assertTrue(is_valid_hex2) r2 = int(hex2[:2], 16) g2 = int(hex2[2:4], 16) b2 = int(hex2[4:], 16) TestCase() assertGreater(r2, g2) TestCase() assertGreater(r2, b2) TestCase() assertNotEqual(hex1, hex2)`); }}) ``` Calling generate_hex(\"green\") twice should return two different hex color values where green is dominant ``js ({test: () => { runPython( from unittest import TestCase hex1 = generate_hex(\"green\")upper()\nis_valid_hex1 = len(hex1) == 6 and all(c in \"0123456789ABCDEF\" for c in hex1)\nTestCase() assertTrue(is_valid_hex1)\nr1 = int(hex1[:2], 16)\ng1 = int(hex1[2:4], 16)\nb1 = int(hex1[4:], 16)\nTestCase() assertGreater(g1, r1)\nTestCase() assertGreater(g1, b1)\nhex2 = generate_hex(\"green\") upper()\nis_valid_hex2 = len(hex2) == 6 and all(c in \"0123456789ABCDEF\" for c in hex2)\nTestCase() assertTrue(is_valid_hex2)\nr2 = int(hex2[:2], 16)\ng2 = int(hex2[2:4], 16)\nb2 = int(hex2[4:], 16)\nTestCase() assertGreater(g2, r2)\nTestCase() assertGreater(g2, b2)\nTestCase() assertNotEqual(hex1, hex2)`);\n}})\n```\nCalling generate_hex(\"blue\") twice should return two different hex color values where blue is dominant ``js\n({test: () => { runPython(\nfrom unittest import TestCase\nhex1 = generate_hex(\"blue\") upper()\nis_valid_hex1 = len(hex1) == 6 and all(c in \"0123456789ABCDEF\" for c in hex1)\nTestCase()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4974,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-21.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "94ef63d27932e7b2483fa37fd2cc063e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-21.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "6 and all(c in \"0123456789ABCDEF\" for c in hex2) TestCase() assertTrue(is_valid_hex2) r2 = int(hex2[:2], 16) g2 = int(hex2[2:4], 16) b2 = int(hex2[4:], 16) TestCase() assertGreater(g2, r2) TestCase() assertGreater(g2, b2) TestCase() assertNotEqual(hex1, hex2)`); }}) ``` Calling generate_hex(\"blue\") twice should return two different hex color values where blue is dominant ``js ({test: () => { runPython( from unittest import TestCase hex1 = generate_hex(\"blue\") upper() is_valid_hex1 = len(hex1) == 6 and all(c in \"0123456789ABCDEF\" for c in hex1) TestCase()assertTrue(is_valid_hex1)\nr1 = int(hex1[:2], 16)\ng1 = int(hex1[2:4], 16)\nb1 = int(hex1[4:], 16)\nTestCase() assertGreater(b1, r1)\nTestCase() assertGreater(b1, g1)\nhex2 = generate_hex(\"blue\") upper()\nis_valid_hex2 = len(hex2) == 6 and all(c in \"0123456789ABCDEF\" for c in hex2)\nTestCase() assertTrue(is_valid_hex2)\nr2 = int(hex2[:2], 16)\ng2 = int(hex2[2:4], 16)\nb2 = int(hex2[4:], 16)\nTestCase() assertGreater(b2, r2)\nTestCase() assertGreater(b2, g2)\nTestCase() assertNotEqual(hex1, hex2)`);\n}})\n```\n--seed--\n--seed-contents--\n```py\ndef generate_hex(color):\nreturn color\n```\n--solutions--\n```py\nimport random\ndef generate_hex(color):\ndef to_hex(n):\nreturn hex(n)[2:] upper() zfill(2)\ndominant = random randint(170, 255)\nweak1 = random randint(0, 169)\nweak2 = random randint(0, 169)\nif color lower() == \"red\":\nr = dominant\ng = weak1\nb = weak2\nelif color lower() == \"green\":\nr = weak1\ng = dominant\nb = weak2\nelif color",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4974,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-21.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "3c310123eba6d309b731b6544ba004ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-21.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "TestCase() assertGreater(b2, r2) TestCase() assertGreater(b2, g2) TestCase() assertNotEqual(hex1, hex2)`); }}) ``` --seed-- --seed-contents-- ```py def generate_hex(color): return color ``` --solutions-- ```py import random def generate_hex(color): def to_hex(n): return hex(n)[2:] upper() zfill(2) dominant = random randint(170, 255) weak1 = random randint(0, 169) weak2 = random randint(0, 169) if color lower() == \"red\": r = dominant g = weak1 b = weak2 elif color lower() == \"green\": r = weak1 g = dominant b = weak2 elif colorlower() == \"blue\":\nr = weak1\ng = weak2\nb = dominant\nelse:\nreturn \"Invalid color\"\nreturn f'{to_hex(r)}{to_hex(g)}{to_hex(b)}'\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4974,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-21.md",
      "source_type": "git_repo"
    },
    "token_count": 202,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "243c06f359d10abcab2f156a21829ff7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681cb1b2dab50c87ddb2e520\ntitle: \"Python Challenge 6: Anagram Checker\"\nchallengeType: 29\ndashedName: python-challenge-6\n--description--\nGiven two strings, determine if they are anagrams of each other (contain the same characters in any order).\nIgnore casing and white space.\n--hints--\nare_anagrams(\"listen\", \"silent\") should return true.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertTrue(are_anagrams(\"listen\", \"silent\"))`)\n}})\nare_anagrams(\"School master\", \"The classroom\") should return true.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertTrue(are_anagrams(\"School master\", \"The classroom\"))`)\n}})\nare_anagrams(\"A gentleman\", \"Elegant man\") should return true.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertTrue(are_anagrams(\"A gentleman\", \"Elegant man\"))`)\n}})\nare_anagrams(\"Hello\", \"World\") should return false.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertFalse(are_anagrams(\"Hello\", \"World\"))`)\n}})\nare_anagrams(\"apple\", \"banana\") should return false.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertFalse(are_anagrams(\"apple\", \"banana\"))`)\n}})\nare_anagrams(\"cat\", \"dog\") should return false.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertFalse(are_anagrams(\"cat\", \"dog\"))`)\n}})\n--seed--\n--seed-contents--\n```py\ndef are_anagrams(str1, str2):\nreturn str1\n```\n--solutions--\n```py\ndef are_anagrams(str1, str2):\ndef clean(s):\nreturn sorted(s.replace(\" \", \"\").lower())\nreturn clean(str1) == clean(str2)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1737,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-6.md",
      "source_type": "git_repo"
    },
    "token_count": 422,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d3e070d3cd97b4ff327c228840f5ed31",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681cb1b1dab50c87ddb2e51e\ntitle: \"Python Challenge 4: S  P  A  C  E  J  A  M\"\nchallengeType: 29\ndashedName: python-challenge-4\n--description--\nGiven a string, remove all spaces from the string, insert two spaces between every character, convert all alphabetical letters to uppercase, and return the result Non-alphabetical characters should remain unchanged (except for spaces) --hints--\nspace_jam(\"freeCodeCamp\") should return \"F  R  E  E  C  O  D  E  C  A  M  P\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(space_jam(\"freeCodeCamp\"), \"F  R  E  E  C  O  D  E  C  A  M  P\")`)\n}})\nspace_jam(\"   free   Code   Camp   \") should return \"F  R  E  E  C  O  D  E  C  A  M  P\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(space_jam(\"   free   Code   Camp   \"), \"F  R  E  E  C  O  D  E  C  A  M  P\")`)\n}})\nspace_jam(\"Hello World \") should return \"H  E  L  L  O  W  O  R  L  D \" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(space_jam(\"Hello World \"), \"H  E  L  L  O  W  O  R  L  D \")`)\n}})\nspace_jam(\"C@t$ & D0g$\") should return \"C  @  T  $  &  D  0  G  $\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(space_jam(\"C@t$ & D0g$\"), \"C  @  T  $  &  D  0  G  $\")`)\n}})\nspace_jam(\"allyourbase\") should return \"A  L  L  Y  O  U  R  B  A  S  E\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1833,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-4.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "fa7ff175fd141610e0b1d893e1826502",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "() => { runPython(` from unittest import TestCase TestCase() assertEqual(space_jam(\"Hello World \"), \"H E L L O W O R L D \")`) }}) space_jam(\"C@t$ & D0g$\") should return \"C @ T $ & D 0 G $\" js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(space_jam(\"C@t$ & D0g$\"), \"C @ T $ & D 0 G $\")`) }}) space_jam(\"allyourbase\") should return \"A L L Y O U R B A S E\"js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(space_jam(\"all your base\"), \"A  L  L  Y  O  U  R  B  A  S  E\")`)\n}})\n--seed--\n--seed-contents--\n```py\ndef space_jam(s):\nreturn s\n```\n--solutions--\npy\ndef space_jam(s):\ns = s replace(\" \", \"\")\ns = \"  \" join(s)\nreturn s upper()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1833,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-4.md",
      "source_type": "git_repo"
    },
    "token_count": 239,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3fe4aa4fd1f17bc5ea8ed2f78c7c78c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681cb1b2dab50c87ddb2e521\ntitle: \"Python Challenge 7: Targeted Sum\"\nchallengeType: 29\ndashedName: python-challenge-7\n--description--\nGiven an array of numbers and an integer target, find two unique numbers in the array that add up to the target value. Return an array with the indices of those two numbers, or \"Target not found\" if no two numbers sum up to the target.\nThe returned array should have the indices in ascending order.\n--hints--\nfind_target([2, 7, 11, 15], 9) should return [0, 1].\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(find_target([2, 7, 11, 15], 9), [0, 1])`)\n}})\nfind_target([3, 2, 4, 5], 6) should return [1, 2].\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(find_target([3, 2, 4, 5], 6), [1, 2])`)\n}})\nfind_target([1, 3, 5, 6, 7, 8], 15) should return [4, 5].\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(find_target([1, 3, 5, 6, 7, 8], 15), [4, 5])`)\n}})\nfind_target([1, 3, 5, 7], 14) should return 'Target not found'.\n```js\n({test: () => { runPython(from unittest import TestCase\nTestCase().assertEqual(find_target([1, 3, 5, 7], 14), \"Target not found\"))\n}})\n```\n--seed--\n--seed-contents--\n```py\ndef find_target(arr, target):\nreturn arr\n```\n--solutions--\npy\ndef find_target(arr, target):\nfor i in range(len(arr)):\nfor j in range(i + 1, len(arr)):\nif arr[i] + arr[j] == target:\nreturn [i, j]\nreturn 'Target not found'",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1600,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-7.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1e56c2694d98a2e7392f7fc1904e6100",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681cb1b1dab50c87ddb2e51d\ntitle: \"Python Challenge 3: Fibonacci Sequence\"\nchallengeType: 29\ndashedName: python-challenge-3\n--description--\nThe Fibonacci sequence is a series of numbers where each number is the sum of the two preceding ones When starting with 0 and 1, the first 10 numbers in the sequence are 0, 1, 1, 2, 3, 5, 8, 13, 21, 34 Given an array containing the first two numbers of a Fibonacci sequence, and an integer representing the length of the sequence, return an array containing the sequence of the given length Your function should handle sequences of any length greater than or equal to zero If the length is zero, return an empty array Note that the starting numbers are part of the sequence --hints--\nfibonacci_sequence([0, 1], 20) should return [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(fibonacci_sequence([0, 1], 20), [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181])`)\n}})\nfibonacci_sequence([21, 32], 1) should return [21] js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(fibonacci_sequence([21, 32], 1), [21])`)\n}})\nfibonacci_sequence([0, 1], 0) should return [] js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(fibonacci_sequence([0, 1], 0), [])`)\n}})\nfibonacci_sequence([10, 20], 2) should return [10, 20]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2552,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-3.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2308bfe144341bd501729904dd6886fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "TestCase() assertEqual(fibonacci_sequence([0, 1], 20), [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181])`) }}) fibonacci_sequence([21, 32], 1) should return [21] js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(fibonacci_sequence([21, 32], 1), [21])`) }}) fibonacci_sequence([0, 1], 0) should return [] js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(fibonacci_sequence([0, 1], 0), [])`) }}) fibonacci_sequence([10, 20], 2) should return [10, 20]js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(fibonacci_sequence([10, 20], 2), [10, 20])`)\n}})\nfibonacci_sequence([123456789, 987654321], 5) should return [123456789, 987654321, 1111111110, 2098765431, 3209876541] js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(fibonacci_sequence([123456789, 987654321], 5), [123456789, 987654321, 1111111110, 2098765431, 3209876541])`)\n}})\n--seed--\n--seed-contents--\n```py\ndef fibonacci_sequence(start_sequence, length):\nreturn length\n```\n--solutions--\n```py\ndef fibonacci_sequence(start_sequence, length):\nif length == 0:\nreturn []\nif length == 1:\nreturn [start_sequence[0]]\nif length == 2:\nreturn start_sequence[:]\nsequence = start_sequence[:]\nwhile len(sequence) < length:\nnext_value = sequence[-1] + sequence[-2]\nsequence append(next_value)\nreturn sequence\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2552,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-3.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "c3ac1b8d2651350bddc2cfcfbbe4e4aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681cb1b1dab50c87ddb2e51f\ntitle: \"Python Challenge 5: Jbelmud Text\"\nchallengeType: 29\ndashedName: python-challenge-5\n--description--\nGiven a string, return a jumbled version of that string where each word is transformed using the following constraints:\nThe first and last letters of the words remain in place\nAll letters between the first and last letter are sorted alphabetically The input strings will contain no punctuation, and will be entirely lowercase --hints--\njbelmu(\"hello world\") should return \"hello wlord\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(jbelmu(\"hello world\"), \"hello wlord\")`)\n}})\njbelmu(\"i love jumbled text\") should return \"i love jbelmud text\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(jbelmu(\"i love jumbled text\"), \"i love jbelmud text\")`)\n}})\njbelmu(\"freecodecamp is my favorite place to learn to code\") should return \"faccdeeemorp is my faiortve pacle to laern to cdoe\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(jbelmu(\"freecodecamp is my favorite place to learn to code\"), \"faccdeeemorp is my faiortve pacle to laern to cdoe\")`)\n}})\njbelmu(\"the quick brown fox jumps over the lazy dog\") should return \"the qciuk borwn fox jmpus oevr the lazy dog\" js\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase() assertEqual(jbelmu(\"the quick brown fox jumps over the lazy dog\"), \"the qciuk borwn fox jmpus oevr the lazy dog\")`)\n}})\n--seed--\n--seed-contents--\n```py\ndef jbelmu(text):\nreturn text\n```\n--solutions--\n```py\ndef jbelmu(text):\nwords = text split()\njumbled = []\nfor word in words:\nif len(word) <= 3:\njumbled append(word)\nelse:\nfirst = word[0]\nlast = word[-1]\nmiddle = ''",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2035,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-5.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9e3edd0a2a48adf68c37f5baa705da30",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "borwn fox jmpus oevr the lazy dog\" js ({test: () => { runPython(` from unittest import TestCase TestCase() assertEqual(jbelmu(\"the quick brown fox jumps over the lazy dog\"), \"the qciuk borwn fox jmpus oevr the lazy dog\")`) }}) --seed-- --seed-contents-- ```py def jbelmu(text): return text ``` --solutions-- ```py def jbelmu(text): words = text split() jumbled = [] for word in words: if len(word) <= 3: jumbled append(word) else: first = word[0] last = word[-1] middle = ''join(sorted(word[1:-1]))\njumbled append(first + middle + last)\nreturn ' ' join(jumbled)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2035,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-5.md",
      "source_type": "git_repo"
    },
    "token_count": 164,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "321d2bf343eabe31c0417245c9d052f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681cb1b2dab50c87ddb2e522\ntitle: \"Python Challenge 8: Factorializer\"\nchallengeType: 29\ndashedName: python-challenge-8\n--description--\nGiven an integer from zero to 20, return the factorial of that number. The factorial of a number is the product of all the numbers between 1 and the given number.\nThe factorial of zero is 1.\n--hints--\nfactorial(0) should return 1.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(factorial(0), 1)`)\n}})\nfactorial(5) should return 120.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(factorial(5), 120)`)\n}})\nfactorial(20) should return 2432902008176640000.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(factorial(20), 2432902008176640000)`)\n}})\n--seed--\n--seed-contents--\n```py\ndef factorial(n):\nreturn n\n```\n--solutions--\npy\ndef factorial(n):\nresult = 1\nfor i in range(1, n + 1):\nresult *= i\nreturn result",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1054,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-8.md",
      "source_type": "git_repo"
    },
    "token_count": 281,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9b49cd5918b379c272067fa754682af2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-9.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681cb1b2dab50c87ddb2e523\ntitle: \"Python Challenge 9: Sum of Squares\"\nchallengeType: 29\ndashedName: python-challenge-9\n--description--\nGiven a positive integer up to 1,000, return the sum of all the integers squared from 1 up to the number.\n--hints--\nsum_of_squares(5) should return 55.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(sum_of_squares(5), 55)`)\n}})\nsum_of_squares(10) should return 385.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(sum_of_squares(10), 385)`)\n}})\nsum_of_squares(25) should return 5525.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(sum_of_squares(25), 5525)`)\n}})\nsum_of_squares(500) should return 41791750.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(sum_of_squares(500), 41791750)`)\n}})\nsum_of_squares(1000) should return 333833500.\njs\n({test: () => { runPython(`\nfrom unittest import TestCase\nTestCase().assertEqual(sum_of_squares(1000), 333833500)`)\n}})\n--seed--\n--seed-contents--\n```py\ndef sum_of_squares(n):\nreturn n\n```\n--solutions--\npy\ndef sum_of_squares(n):\nsum = ((n)*(n+1)*(2*n+1))//6\nreturn sum",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1306,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\99-dev-playground\\daily-coding-challenges-python\\python-challenge-9.md",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e78f8dc88e850bf2e887266040feedaf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\30-a1-professional-chinese\\learn-essential-courtesies-at-the-office\\688f1daf0133dbe2a36b140b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 688f1daf0133dbe2a36b140b\ntitle: \"Dialogue 1: PLACEHOLDER\"\nchallengeType: 21\ndashedName: dialogue-1-placeholder\n--description--\nWatch the video below to understand the context of the upcoming lessons.\n--assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"chaos.png\",\n\"characters\": [\n{\n\"character\": \"David\",\n\"position\": {\"x\":50,\"y\":80,\"z\":8},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.7,\n\"finishTimestamp\": 6.48\n}\n},\n\"commands\": [\n{\n\"character\": \"David\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"David\",\n\"startTime\": 1,\n\"finishTime\": 0.78,\n\"dialogue\": {\n\"text\": \"I'm Tom.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 1.28\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 955,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\30-a1-professional-chinese\\learn-essential-courtesies-at-the-office\\688f1daf0133dbe2a36b140b.md",
      "source_type": "git_repo"
    },
    "token_count": 250,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bc4c369a13967d0c0efd7685b81b079b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\cat-blog-page\\669fc7e141e4703748c558bf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 669fc7e141e4703748c558bf\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nInside the html element, add a head element.\n--hints--\nYou should have an opening head tag.\njs\nassert.match(code, /<head>/i);\nYou should have a closing head tag.\njs\nassert.match(code, /<\\/head>/i);\nYour opening head tag should come before the closing head tag.\njs\nassert.match(code, /<head>[.\\n\\s]*<\\/head>/im)\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 599,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\cat-blog-page\\669fc7e141e4703748c558bf.md",
      "source_type": "git_repo"
    },
    "token_count": 147,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "220ce0b1c5881d8d44c8d52b68a20b59",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\cat-blog-page\\669aff9f5488f1bea056416d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 669aff9f5488f1bea056416d\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nIn this workshop, you will practice working with semantic HTML by building a blog page dedicated to Mr. Whiskers the cat.\nTo begin the project, add the <!DOCTYPE html>, and an html element with a lang attribute of en.\nRemember that you learned how to build a basic HTML boilerplate like this in the previous module.\n```html\n```\n--hints--\nYou should have the <!DOCTYPE html>.\njs\nassert.match(code, /<!DOCTYPE\\s+html>/i);\nYou should have an opening html tag with the language set to english.\njs\nassert.match(code, /<html\\s+lang\\s*=\\s*('|\")en\\1\\s*>/gi);\nYou should have a closing html tag.\njs\nassert.match(code, /<\\/html>/i);\nYour DOCTYPE should come before the html element.\njs\nassert.match(code, /<!DOCTYPE\\s+html>[.\\n\\s]*<html\\s+lang\\s*=\\s*('|\")en\\1\\s*>/im)\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1114,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\cat-blog-page\\669aff9f5488f1bea056416d.md",
      "source_type": "git_repo"
    },
    "token_count": 275,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c0b3e265e97ee0ac0ccdb173dac7809e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\cat-blog-page\\669fc938d38e6e38ace9251e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 669fc938d38e6e38ace9251e\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nInside your head element, nest a meta element with the charset attribute set to the value \"UTF-8\".\nBelow that meta element, add a title element.\nThe title element's text should be Mr. Whiskers' Blog.\n--hints--\nYou should have a meta element.\njs\nassert.isNotNull(document.querySelector(\"meta\"));\nThe meta element is a void element, it should not have an end tag </meta>.\njs\nassert.notMatch(code, /<\\/meta>/i);\nYour meta tag should have a charset attribute.\njs\nassert.match(code, /<meta\\s+charset\\s*/i);\nYour charset attribute should have a value of \"UTF-8\".\njs\nassert.match(code, /charset\\s*=\\s*('|\")UTF-8\\1/i);\nYour meta element should be nested inside your head element.\njs\nconst meta = document.querySelector('head > meta');\nassert.strictEqual(meta?.parentElement?.tagName, 'HEAD');\nYou should have an opening title tag.\njs\nassert.match(code, /<title>/i);\nYou should have a closing title tag.\njs\nassert.match(code, /<\\/title>/i);\nYour title element should be nested in your head element.\njs\nassert.match(code, /<head>.*\\s*<title>.*<\\/title>.*\\s*<\\/head>/si);\nYour title element should have the text Mr. Whiskers' Blog. You may need to check your spelling.\njs\nconst titleText = document.querySelector('title')?.innerText\nassert.strictEqual(titleText, \"Mr. Whiskers' Blog\");\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1679,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\cat-blog-page\\669fc938d38e6e38ace9251e.md",
      "source_type": "git_repo"
    },
    "token_count": 389,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7171d36440e7b1b1f2b6de2c2056725e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\cat-photo-app\\5dc174fcf86c76b9248c6eb2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5dc174fcf86c76b9248c6eb2\ntitle: Step 1\nchallengeType: 0\ndashedName: step-1\ndemoType: onLoad\n--description--\nIn this workshop, you will continue working with basic HTML elements like headings, paragraphs, and lists by building a cat photo app.\nBegin the workshop by adding an h1 element with the text of CatPhotoApp.\n--hints--\nThe text CatPhotoApp should be present in the code. You may want to check your spelling.\njs\nassert.match(code, /catphotoapp/i);\nYour h1 element should have an opening tag. Opening tags have this syntax: <elementName>.\njs\nassert.exists(document.querySelector('h1'));\nYour h1 element should have a closing tag. Closing tags have this syntax: </elementName>.\njs\nassert.match(code, /<\\/h1\\>/);\nYour h1 element's text should be CatPhotoApp. You have either omitted the text, have a typo, or it is not between the h1 element's opening and closing tags.\njs\nassert.equal(document.querySelector('h1')?.innerText.toLowerCase(), 'catphotoapp');\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1171,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\cat-photo-app\\5dc174fcf86c76b9248c6eb2.md",
      "source_type": "git_repo"
    },
    "token_count": 269,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f2d4344fe9a99725eb0439c84cdfbf22",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\cat-blog-page\\669fcb06c3034a39f5431a38.md",
    "source_type": "git_repo",
    "title": "Mr. Whiskers' Blog",
    "content": "id: 669fcb06c3034a39f5431a38\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nTo prepare creating some actual content, add a body element below the head element.\n--hints--\nYou should have an opening <body> tag.\njs\nassert.match(code, /<body>/i);\nYou should have a closing </body> tag.\njs\nassert.match(code, /<\\/body>/i);\nYou should not change your head element. Make sure you did not delete your closing tag.\njs\nassert.match(code, /<head>/i);\nassert.match(code, /<\\/head>/i);\nYour body element should come after your head element.\njs\nassert.match(code, /<\\/head>[.\\n\\s]*<body>/im)\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\nMr. Whiskers' Blog\n--fcc-editable-region--\n```\n--solutions--\n```html\nMr. Whiskers' Blog\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1068,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\cat-blog-page\\669fcb06c3034a39f5431a38.md",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8d2d256fdabaa4226834dabea98c87dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\cat-photo-app\\5dc1798ff86c76b9248c6eb3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5dc1798ff86c76b9248c6eb3\ntitle: Step 2\nchallengeType: 0\ndashedName: step-2\n--description--\nBelow the h1 element, add an h2 element with this text:\nCat Photos\n--hints--\nYour h1 element should have an opening tag. Opening tags have this syntax: <elementName>.\njs\nassert.exists(document.querySelector('h1'));\nYour h1 element should have a closing tag. Closing tags have this syntax: </elementName>.\njs\nassert.match(code, /<\\/h1\\>/);\nYou should only have one h1 element. Remove the extra.\njs\nassert.lengthOf(document.querySelectorAll('h1'), 1);\nYour h1 element's text should be 'CatPhotoApp'. You have either omitted the text or have a typo.\njs\nassert.equal(document.querySelector('h1')?.innerText.toLowerCase(), 'catphotoapp');\nYour h2 element should have an opening tag. Opening tags have this syntax: <elementName>.\njs\nassert.exists(document.querySelector('h2'));\nYour h2 element should have a closing tag. Closing tags have a / just after the < character.\njs\nassert.match(code, /<\\/h2\\>/);\nYour h2 element's text should be Cat Photos. Only place the text Cat Photos between the opening and closing h2 tags.\njs\nassert.equal(document.querySelector('h2')?.innerText.toLowerCase(), 'cat photos');\nYour h2 element should be below the h1 element. The h1 element has greater importance and must be above the h2 element.\njs\nconst collection = [...document.querySelectorAll('h1,h2')].map(\n(node) => node.nodeName\n);\nassert.isBelow(collection.indexOf('H1'), collection.indexOf('H2'));\n--seed--\n--seed-contents--\n```html\n--fcc-editable-region--\nCatPhotoApp\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1772,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\cat-photo-app\\5dc1798ff86c76b9248c6eb3.md",
      "source_type": "git_repo"
    },
    "token_count": 399,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "19a6360f14a18631043c055e20dbafda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\cat-photo-app\\5dc17d3bf86c76b9248c6eb4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5dc17d3bf86c76b9248c6eb4\ntitle: Step 3\nchallengeType: 0\ndashedName: step-3\n--description--\nCreate a p element below your h2 element and give it the following text:\nEveryone loves cute cats online!\n--hints--\nYour p element should have an opening tag. Opening tags have the following syntax: <elementName>.\njs\nassert.exists(document.querySelector('p'));\nYour p element should have a closing tag. Closing tags have a / just after the < character.\njs\nassert.match(code, /<\\/p\\>/);\nYour p element's text should be Everyone loves cute cats online! You have either omitted the text or have a typo.\njs\nconst extraSpacesRemoved = document\n.querySelector('p')\n?.innerText.replace(/\\s+/g, ' ');\nassert.match(extraSpacesRemoved, /everyone loves cute cats online!$/i);\nYour p element should be below the h2 element. You have them in the wrong order.\njs\nconst collection = [...document.querySelectorAll('h2,p')].map(\n(node) => node.nodeName\n);\nassert.isBelow(collection.indexOf('H2'), collection.indexOf('P'));\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\n--fcc-editable-region--\nCat Photos\n--fcc-editable-region--\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1266,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\cat-photo-app\\5dc17d3bf86c76b9248c6eb4.md",
      "source_type": "git_repo"
    },
    "token_count": 279,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a7246b11aca756328ba7be0ba5a24e2c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\cat-photo-app\\5dc17dc8f86c76b9248c6eb5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5dc17dc8f86c76b9248c6eb5\ntitle: Step 4\nchallengeType: 0\ndashedName: step-4\n--description--\nCommenting allows you to leave messages without affecting the browser display. It also allows you to make code inactive. A comment in HTML starts with <!--, contains any number of lines of text, and ends with -->.\nHere is an example of a comment with the TODO: Remove h1:\n```html\n```\nAdd a comment above the p element with this text:\nTODO: Add link to cat photos\n--hints--\nYour comment should start with <!--. You are missing one or more of the characters that define the start of a comment.\njs\nassert.match(code, /<!--/);\nYour comment should end with -->.  You are missing one or more of the characters that define the end of a comment.\njs\nassert.match(code, /-->/);\nYour code should not have extra opening/closing comment characters. You have an extra <!-- or --> displaying in the browser.\njs\nconst noSpaces = code.replace(/\\s/g, '');\nassert.isBelow(noSpaces.match(/<!--/g)?.length, 2)\nassert.isBelow(noSpaces.match(/-->/g)?.length, 2);\nYour comment should be above the p element. You have them in the wrong order.\njs\nassert.match(\ncode.replace(/\\s/g, ''),\n/<!--(.*?)--><p>everyonelovescutecatsonline!<\\/p>/i\n);\nYour comment should contain the text TODO: Add link to cat photos.\njs\nassert.match(code, /<!--\\s*todo:\\s+add\\s+link\\s+to\\s+cat\\s+photos\\s*-->/i);\n--seed--\n--seed-contents--\n```html\nCatPhotoApp\nCat Photos\n--fcc-editable-region--\nEveryone loves cute cats online!\n--fcc-editable-region--\n```\n--solutions--\n```html\nCatPhotoApp\nCat Photos\nEveryone loves cute cats online!\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1907,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\cat-photo-app\\5dc17dc8f86c76b9248c6eb5.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a7a9a1d8ac02ce285d6bbc522efa5272",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\27-a2-professional-chinese\\get-to-know-colleagues-by-asking-simple-questions\\682c2671d8010bef0a79f466.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 682c2671d8010bef0a79f466\ntitle: \"Dialogue 1: PLACEHOLDER\"\nchallengeType: 21\ndashedName: dialogue-1-placeholder\n--description--\nWatch the video below to understand the context of the upcoming lessons.\n--assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"chaos.png\",\n\"characters\": [\n{\n\"character\": \"David\",\n\"position\": {\"x\":50,\"y\":80,\"z\":8},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.7,\n\"finishTimestamp\": 6.48\n}\n},\n\"commands\": [\n{\n\"character\": \"David\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"David\",\n\"startTime\": 1,\n\"finishTime\": 0.78,\n\"dialogue\": {\n\"text\": \"I'm Tom.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 1.28\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 955,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\27-a2-professional-chinese\\get-to-know-colleagues-by-asking-simple-questions\\682c2671d8010bef0a79f466.md",
      "source_type": "git_repo"
    },
    "token_count": 250,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "957e71be0780f12ad01f61b42ff07616",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\27-a2-professional-chinese\\talk-about-what-you-do-by-using-key-verbs\\682c2753317b88f1ecdad894.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 682c2753317b88f1ecdad894\ntitle: \"Dialogue 1: PLACEHOLDER\"\nchallengeType: 21\ndashedName: dialogue-1-placeholder\n--description--\nWatch the video below to understand the context of the upcoming lessons.\n--assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"chaos.png\",\n\"characters\": [\n{\n\"character\": \"David\",\n\"position\": {\"x\":50,\"y\":80,\"z\":8},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.7,\n\"finishTimestamp\": 6.48\n}\n},\n\"commands\": [\n{\n\"character\": \"David\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"David\",\n\"startTime\": 1,\n\"finishTime\": 0.78,\n\"dialogue\": {\n\"text\": \"I'm Tom.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 1.28\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 955,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\27-a2-professional-chinese\\talk-about-what-you-do-by-using-key-verbs\\682c2753317b88f1ecdad894.md",
      "source_type": "git_repo"
    },
    "token_count": 249,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c7b1cb624f07f7aac67c280c16c02ce5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\26-a2-professional-spanish\\get-to-know-others-by-asking-simple-questions\\6823914bc8a5c9c820230d99.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6823914bc8a5c9c820230d99\ntitle: \"Dialogue 1: PLACEHOLDER\"\nchallengeType: 21\ndashedName: dialogue-1-placeholder\n--description--\nWatch the video below to understand the context of the upcoming lessons.\n--assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"chaos.png\",\n\"characters\": [\n{\n\"character\": \"David\",\n\"position\": {\"x\":50,\"y\":80,\"z\":8},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.7,\n\"finishTimestamp\": 6.48\n}\n},\n\"commands\": [\n{\n\"character\": \"David\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"David\",\n\"startTime\": 1,\n\"finishTime\": 0.78,\n\"dialogue\": {\n\"text\": \"I'm Tom.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 1.28\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 955,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\26-a2-professional-spanish\\get-to-know-others-by-asking-simple-questions\\6823914bc8a5c9c820230d99.md",
      "source_type": "git_repo"
    },
    "token_count": 251,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4f6ef3a5f4a30de2f495cd648b7c810f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\26-a2-professional-spanish\\talk-about-who-you-are-by-using-key-verbs\\681a8796e5a782fe3459984b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681a8796e5a782fe3459984b\ntitle: \"Dialogue 1: PLACEHOLDER\"\nchallengeType: 21\ndashedName: dialogue-1-placeholder\n--description--\nWatch the video below to understand the context of the upcoming lessons.\n--assignment--\nWatch the video\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"chaos.png\",\n\"characters\": [\n{\n\"character\": \"David\",\n\"position\": {\"x\":50,\"y\":80,\"z\":8},\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 5.7,\n\"finishTimestamp\": 6.48\n}\n},\n\"commands\": [\n{\n\"character\": \"David\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"David\",\n\"startTime\": 1,\n\"finishTime\": 0.78,\n\"dialogue\": {\n\"text\": \"I'm Tom.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Tom\",\n\"opacity\": 0,\n\"startTime\": 1.28\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 955,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\26-a2-professional-spanish\\talk-about-who-you-are-by-using-key-verbs\\681a8796e5a782fe3459984b.md",
      "source_type": "git_repo"
    },
    "token_count": 250,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cfd59531f6c22c217c142204d0ac8684",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\exam-certified-full-stack-developer\\645147516c245de4d11eb7ba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 645147516c245de4d11eb7ba\ntitle: Certified Full Stack Developer Exam\nchallengeType: 30\ndashedName: exam-certified-full-stack-developer\n--description--\nStart your exam in the exam environment app.\n--instructions--\n--hints--\n--seed--\n--solutions--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 273,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\exam-certified-full-stack-developer\\645147516c245de4d11eb7ba.md",
      "source_type": "git_repo"
    },
    "token_count": 67,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "50486c31b8f4082cf71b9deb8709815c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\recipe-page\\668f08ea07b99b1f4a91acab.md",
    "source_type": "git_repo",
    "title": "Chocolate chip cookies recipe",
    "content": "id: 668f08ea07b99b1f4a91acab\ntitle: Build a Recipe Page\nchallengeType: 25\ndashedName: build-a-recipe-page\ndemoType: onClick\n--description--\nFulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a DOCTYPE html declaration You should have an html element with lang set to en You should have a head element containing a title element with the name of your recipe, and a meta element with a charset attribute set to UTF-8 You should have a body element You should have an h1 element with the name of your recipe You should have a p element that introduces the recipe below the h1 You should have one h2 element with the text Ingredients for the ingredients section You should have an unordered list (ul element) with at least four list items (li elements) that lists your ingredients below the first h2 element You should have a second h2 element with the text Instructions for the instructions section You should have an ordered list (ol element) with at least four list items that lists the recipe steps in order, below the second h2 You should have one img element with a src attribute set to a valid image, you can use https://cdn freecodecamp org/curriculum/labs/recipe jpg if you would like, and an alt attribute describing the image --hints--\nYour recipe page should have a DOCTYPE html declaration js\nassert match(code, /< DOCTYPE html>/i);\nYou should have an html element with lang set to en js\nassert match(code, /<html\\s+lang\\s*=\\s*('|\")en\\1\\s*>[\\s\\S]*<\\/\\s*html\\s*>/gi);\nYou should have a head element within the html element js\nassert match(code, /<html[\\s\\S]*>[\\s\\S]*<\\s*head\\s*>[\\s\\S]*<\\/\\s*head\\s*>[\\s\\S]*<\\/\\s*html\\s*>/i);\nYou should have title element within your head element js\nassert match(code, /<\\s*head\\s*>[\\s\\S]*<\\s*title\\s*>[\\s\\S]*<\\/\\s*title\\s*>[\\s\\S]*<\\/\\s*head\\s*>/i);\nYour title element should have your recipe title js\nassert isAbove(document querySelector('title') innerText",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6924,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\recipe-page\\668f08ea07b99b1f4a91acab.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "cd0974d2b7a695dfcc625b4452e8fe7b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\recipe-page\\668f08ea07b99b1f4a91acab.md",
    "source_type": "git_repo",
    "title": "Chocolate chip cookies recipe",
    "content": "alt attribute describing the image --hints-- Your recipe page should have a DOCTYPE html declaration js assert match(code, /< DOCTYPE html>/i); You should have an html element with lang set to en js assert match(code, /<html\\s+lang\\s*=\\s*('|\")en\\1\\s*>[\\s\\S]*<\\/\\s*html\\s*>/gi); You should have a head element within the html element js assert match(code, /<html[\\s\\S]*>[\\s\\S]*<\\s*head\\s*>[\\s\\S]*<\\/\\s*head\\s*>[\\s\\S]*<\\/\\s*html\\s*>/i); You should have title element within your head element js assert match(code, /<\\s*head\\s*>[\\s\\S]*<\\s*title\\s*>[\\s\\S]*<\\/\\s*title\\s*>[\\s\\S]*<\\/\\s*head\\s*>/i); Your title element should have your recipe title js assert isAbove(document querySelector('title') innerTexttrim() length, 0);\nYou should have a meta element within your head element js\nassert match(code, /<\\s*head\\s*>[\\s\\S]*<\\s*meta[\\s\\S]*>[\\s\\S]*<\\/\\s*head\\s*>/i);\nYour meta element should have its charset attribute set to UTF-8 js\nassert match(code, /<\\s*meta[\\s\\S]+ charset\\s*=\\s*('|\")UTF-8\\1/i);\nYou should have a body element within your html element js\nassert match(code, /<\\s*html[\\s\\S]*>[\\s\\S]*<\\s*head\\s*>[\\s\\S]*<\\/\\s*head\\s*>[\\s\\S]*<\\s*body\\s*>[\\s\\S]*<\\/\\s*body\\s*>[\\s\\S]*<\\/\\s*html\\s*>/i);\nYou should have an h1 element with the name of your recipe js\nassert isAbove(document querySelector('h1') innerText length, 0);\nYou should only have one h1 element js\nassert lengthOf(document querySelectorAll('h1'), 1);\nYou should have a p element below your h1 element js\nassert strictEqual(document querySelector('h1') nextElementSibling, document querySelector('p'));\nYour first p element should describe your recipe js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6924,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\recipe-page\\668f08ea07b99b1f4a91acab.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "fa7176e63097891dca6685a1498a5f36",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\recipe-page\\668f08ea07b99b1f4a91acab.md",
    "source_type": "git_repo",
    "title": "Chocolate chip cookies recipe",
    "content": "assert match(code, /<\\s*meta[\\s\\S]+ charset\\s*=\\s*('|\")UTF-8\\1/i); You should have a body element within your html element js assert match(code, /<\\s*html[\\s\\S]*>[\\s\\S]*<\\s*head\\s*>[\\s\\S]*<\\/\\s*head\\s*>[\\s\\S]*<\\s*body\\s*>[\\s\\S]*<\\/\\s*body\\s*>[\\s\\S]*<\\/\\s*html\\s*>/i); You should have an h1 element with the name of your recipe js assert isAbove(document querySelector('h1') innerText length, 0); You should only have one h1 element js assert lengthOf(document querySelectorAll('h1'), 1); You should have a p element below your h1 element js assert strictEqual(document querySelector('h1') nextElementSibling, document querySelector('p')); Your first p element should describe your recipe js assertisNotEmpty(document querySelector('p') textContent trim());\nYour first h2 element should have the text Ingredients js\nassert equal(document querySelectorAll('h2')[0] innerText, 'Ingredients');\nYou should have an unordered list element below your first h2 element js\nassert strictEqual(document querySelector('ul') previousElementSibling tagName, 'H2');\nYou should have at least four list item elements in your unordered list with the ingredients js\nconst els = document querySelectorAll('ul > li');\nassert isAbove(els length, 3);\nels forEach(el => assert isAbove(el innerText trim() length, 0))\nYour second h2 element should have the text Instructions js\nassert equal(document querySelectorAll('h2')[1] innerText, 'Instructions');\nYou should have an ordered list element below your second h2 element js\nassert strictEqual(document querySelectorAll('h2') [1] nextElementSibling tagName, \"OL\");\nYou should have at least four list item elements in your ordered list with the instructions js\nconst els = document querySelectorAll('ol > li');\nassert isAbove(els length, 3);\nels forEach(el => assert isAbove(el innerText trim() length, 0))\nYou should have at least one img element js\nassert exists(document querySelector('img'));\nAll your img elements should have a valid src attribute and value ```js\nconst img = document querySelector('img');\nconst rawSrc = img",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6924,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\recipe-page\\668f08ea07b99b1f4a91acab.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "1d05d5c8f57af8af216223bbb424b132",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\recipe-page\\668f08ea07b99b1f4a91acab.md",
    "source_type": "git_repo",
    "title": "Chocolate chip cookies recipe",
    "content": "querySelectorAll('h2') [1] nextElementSibling tagName, \"OL\"); You should have at least four list item elements in your ordered list with the instructions js const els = document querySelectorAll('ol > li'); assert isAbove(els length, 3); els forEach(el => assert isAbove(el innerText trim() length, 0)) You should have at least one img element js assert exists(document querySelector('img')); All your img elements should have a valid src attribute and value ```js const img = document querySelector('img'); const rawSrc = imggetAttribute('src');\nconst resolvedSrc = img src;\nconst re = new RegExp(window location href, \"ig\");\nassert isAbove(rawSrc trim() length, 0, \"The 'src' attribute must be explicitly set \");\nassert notMatch(resolvedSrc, re, \"The 'src' should not start with the current page URL\");\nimg onload = () => {\nconsole log('Image loaded successfully ');\n};\nimg onerror = (error) => {\nconsole error('Image failed to load:', error);\nassert fail(\"Your image's URL should be valid \"); // Make the test instafail\n};\nif (img complete) {\nimg onload && img onload();\n};\n```\nAll your img elements should have an alt attribute to describe the image js\nassert isAbove(document querySelector('img') alt length, 0);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\nChocolate chip cookies recipe\nChocolate Chip Cookies\nWelcome to the ultimate guide for making mini chocolate chip cookies These bite-sized treats are perfect for\nsatisfying your sweet tooth without overindulging Follow this simple recipe to create delicious,\ncrispy-on-the-outside, chewy-on-the-inside mini chocolate chip cookies that everyone will love Ingredients\n1 cup all-purpose flour\n1/2 teaspoon baking soda\n1/4 cup unsalted butter, softened\n1/4 cup granulated sugar\n1/2 teaspoon vanilla extract\n1/2 cup mini chocolate chips\nInstructions\nPreheat your oven to 350°F (175°C) and line a baking sheet with parchment paper In a bowl, whisk together the flour and baking soda In another bowl, beat the butter, sugar, and vanilla extract until creamy Gradually add the dry ingredients to the wet mixture, then fold in the mini chocolate chips",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6924,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\recipe-page\\668f08ea07b99b1f4a91acab.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "7ba364d6daaf863b04f5284b62d7ef13",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\recipe-page\\668f08ea07b99b1f4a91acab.md",
    "source_type": "git_repo",
    "title": "Chocolate chip cookies recipe",
    "content": "flour 1/2 teaspoon baking soda 1/4 cup unsalted butter, softened 1/4 cup granulated sugar 1/2 teaspoon vanilla extract 1/2 cup mini chocolate chips Instructions Preheat your oven to 350°F (175°C) and line a baking sheet with parchment paper In a bowl, whisk together the flour and baking soda In another bowl, beat the butter, sugar, and vanilla extract until creamy Gradually add the dry ingredients to the wet mixture, then fold in the mini chocolate chipsDrop small spoonfuls of dough onto the baking sheet Bake for 8-10 minutes, then let cool before enjoying ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6924,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\28-basic-html\\recipe-page\\668f08ea07b99b1f4a91acab.md",
      "source_type": "git_repo"
    },
    "token_count": 132,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "0891c458d28bb7e9e1f15e062ffefe21",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-adjacency-list-to-matrix-converter\\686fdcfe055bcda9f651dd2e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 686fdcfe055bcda9f651dd2e\ntitle: Build an Adjacency List to Matrix Converter\nchallengeType: 27\ndashedName: build-an-adjacency-list-to-matrix-converter\n--description--\nIn this lab, you will build a function that converts an adjacency list representation of a graph into an adjacency matrix An adjacency list is a dictionary where each key represents a node, and the corresponding value is a list of nodes that the key node is connected to An adjacency matrix is a 2D array where the entry at position [i][j] is 1 if there's an edge from node i to node j, and 0 otherwise For example, given the adjacency list:\npy\n{\n0: [1, 2],\n1: [2],\n2: [0, 3],\n3: [2]\n}\nThe corresponding adjacency matrix would be:\npy\n[\n[0, 1, 1, 0],\n[0, 0, 1, 0],\n[1, 0, 0, 1],\n[0, 0, 1, 0]\n]\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should define a function named adjacency_list_to_matrix to convert an adjacency list to an adjacency matrix The function should take a dictionary representing the adjacency list of an unweighted (either undirected or directed) graph as its argument The function should:\nConvert the adjacency list to an adjacency matrix Print each row in the adjacency matrix Return the adjacency matrix For example, adjacency_list_to_matrix({0: [2], 1: [2, 3], 2: [0, 1, 3], 3: [1, 2]}) should print:\nmd\n[0, 0, 1, 0]\n[0, 0, 1, 1]\n[1, 1, 0, 1]\n[0, 1, 1, 0]\nand return [[0, 0, 1, 0], [0, 0, 1, 1], [1, 1, 0, 1], [0, 1, 1, 0]] --hints--\nYou should define a function named adjacency_list_to_matrix",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5006,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-adjacency-list-to-matrix-converter\\686fdcfe055bcda9f651dd2e.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "d0ef857dd687efffb14edf743c86493e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-adjacency-list-to-matrix-converter\\686fdcfe055bcda9f651dd2e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "adjacency list to an adjacency matrix Print each row in the adjacency matrix Return the adjacency matrix For example, adjacency_list_to_matrix({0: [2], 1: [2, 3], 2: [0, 1, 3], 3: [1, 2]}) should print: md [0, 0, 1, 0] [0, 0, 1, 1] [1, 1, 0, 1] [0, 1, 1, 0] and return [[0, 0, 1, 0], [0, 0, 1, 1], [1, 1, 0, 1], [0, 1, 1, 0]] --hints-- You should define a function named adjacency_list_to_matrixjs\n({\ntest: () => assert(runPython(`\n_Node(_code) has_function(\"adjacency_list_to_matrix\")\n`))\n})\nThe adjacency_list_to_matrix function should have one parameter js\n({ test: () => assert(runPython(`\nimport inspect\nsig = inspect signature(adjacency_list_to_matrix)\nlen(sig parameters) == 1\n`))\n})\nThe function should correctly determine the number of nodes from the adjacency list js\n({\ntest: () => runPython(`\nadj_list = {0: [1], 1: [0], 2: []}\nresult = adjacency_list_to_matrix(adj_list)\nassert len(result) == 3\nassert len(result[0]) == 3\n`)\n})\nThe function should correctly set matrix values to 1 for existing edges js\n({\ntest: () => runPython(`\nadj_list = {0: [1], 1: [0]}\nresult = adjacency_list_to_matrix(adj_list)\nassert result[0][1] == 1\nassert result[1][0] == 1\nassert result[0][0] == 0\nassert result[1][1] == 0\n`)\n})\nThe function should print each row of the matrix ``js\n({\ntest: () => runPython(\nimport io\nimport sys\ncaptured_output = io StringIO()\nsys stdout = captured_output\nadj_list = {0: [1], 1: []}\nadjacency_list_to_matrix(adj_list)\nsys stdout = sys __stdout__\noutput = captured_output",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5006,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-adjacency-list-to-matrix-converter\\686fdcfe055bcda9f651dd2e.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "8579d5709bf402f5f7565e848f6922dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-adjacency-list-to-matrix-converter\\686fdcfe055bcda9f651dd2e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "edges js ({ test: () => runPython(` adj_list = {0: [1], 1: [0]} result = adjacency_list_to_matrix(adj_list) assert result[0][1] == 1 assert result[1][0] == 1 assert result[0][0] == 0 assert result[1][1] == 0 `) }) The function should print each row of the matrix ``js ({ test: () => runPython( import io import sys captured_output = io StringIO() sys stdout = captured_output adj_list = {0: [1], 1: []} adjacency_list_to_matrix(adj_list) sys stdout = sys __stdout__ output = captured_outputgetvalue()\nassert \"[0, 1]\" in output\nassert \"[0, 0]\" in output\n`)\n})\n```\nThe function should return the adjacency matrix js\n({\ntest: () => runPython(`\nadj_list = {0: [1], 1: []}\nresult = adjacency_list_to_matrix(adj_list)\nassert result == [[0, 1], [0, 0]]\n`)\n})\nWhen given the adjacency list {0: [1, 2], 1: [2], 2: [0, 3], 3: [2]}, the function should return [[0, 1, 1, 0], [0, 0, 1, 0], [1, 0, 0, 1], [0, 0, 1, 0]] js\n({\ntest: () => runPython(`\nadj_list = {0: [1, 2], 1: [2], 2: [0, 3], 3: [2]}\nresult = adjacency_list_to_matrix(adj_list)\nexpected = [[0, 1, 1, 0], [0, 0, 1, 0], [1, 0, 0, 1], [0, 0, 1, 0]]\nassert result == expected\n`)\n})\nWhen given the adjacency list {0: [1], 1: [0]}, the function should return [[0, 1], [1, 0]]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5006,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-adjacency-list-to-matrix-converter\\686fdcfe055bcda9f651dd2e.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "2cea9c11ca56be84929eee8cda89663f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-adjacency-list-to-matrix-converter\\686fdcfe055bcda9f651dd2e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1, 0], [0, 0, 1, 0], [1, 0, 0, 1], [0, 0, 1, 0]] js ({ test: () => runPython(` adj_list = {0: [1, 2], 1: [2], 2: [0, 3], 3: [2]} result = adjacency_list_to_matrix(adj_list) expected = [[0, 1, 1, 0], [0, 0, 1, 0], [1, 0, 0, 1], [0, 0, 1, 0]] assert result == expected `) }) When given the adjacency list {0: [1], 1: [0]}, the function should return [[0, 1], [1, 0]]js\n({\ntest: () => runPython(`\nadj_list = {0: [1], 1: [0]}\nresult = adjacency_list_to_matrix(adj_list)\nexpected = [[0, 1], [1, 0]]\nassert result == expected\n`)\n})\nWhen given the adjacency list {0: [], 1: [], 2: []}, the function should return [[0, 0, 0], [0, 0, 0], [0, 0, 0]] js\n({\ntest: () => runPython(`\nadj_list = {0: [], 1: [], 2: []}\nresult = adjacency_list_to_matrix(adj_list)\nexpected = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]\nassert result == expected\n`)\n})\n--seed--\n--seed-contents--\n```py\n```\n--solutions--\n```py\ndef adjacency_list_to_matrix(adj_list):\nn = len(adj_list)\nadj_matrix = [[0] * n for _ in range(n)]\nfor src_node, neighbors in adj_list items():\nfor dest_node in neighbors:\nadj_matrix[src_node][dest_node] = 1\nfor row in adj_matrix:\nprint(row)\nreturn adj_matrix\nadj_list = {\n0: [1, 2],\n1: [2],\n2: [0, 3],\n3: [2]\n}\nmatrix = adjacency_list_to_matrix(adj_list)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5006,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-adjacency-list-to-matrix-converter\\686fdcfe055bcda9f651dd2e.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "b80fdf71dbc79ec886d14dbb7f93ae02",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\event-hub\\66ebd4ae2812430bb883c787.md",
    "source_type": "git_repo",
    "title": "Event Hub",
    "content": "id: 66ebd4ae2812430bb883c787\ntitle: Build an Event Hub\nchallengeType: 25\ndashedName: lab-event-hub\ndemoType: onClick\n--description--\nIn this lab you will utilize the semantic HTML elements to create the structure of a web page You'll add content and images to make it look like a real event hub Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a header element Inside the header element, you should have an h1 element that contains the text Event Hub, and a nav element Inside the nav element, you should have an unordered list of two items containing links to different sections of the page The first item should have the text Upcoming Events, and the second item should have the text Past Events Each link should be represented by an a element with an href attribute that links to the corresponding section of the page, #upcoming-events and #past-events respectively You should have a main element that contains the different sections of the page Inside the main element, you should have two section elements The first section element should have an id attribute with the value upcoming-events\nInside the #upcoming-events section, you should have:\nAn h2 element with the text Upcoming Events Two article elements Each article should represent an event, and it should have :\nAn h3 element for the event title A p element for the event description You can add a date at the bottom if you like The second section element should have an id attribute with the value past-events Inside the #past-events section, you should have:\nAn h2 element with the text Past Events Two article elements Each article element should represent a past event, and it should have:\nAn h3 element for the event title,\nA p element for the event description You can add a date at the bottom if you like An image element with the src attribute pointing to an image file and the alt attribute with a description of the image Note: You can use any text for the event descriptions and dates You can use the following image URLs for the images if you like:\nhttps://cdn freecodecamp org/curriculum/labs/past-event1 jpg https://cdn freecodecamp org/curriculum/labs/past-event2 jpg --hints--\nYou should have a header element js\nassert isNotNull(document querySelector(\"header\"));\nYour header element should come after the opening body tag",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\event-hub\\66ebd4ae2812430bb883c787.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "34cd6cdcdd48780c7a9ef74d94c79ee9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\event-hub\\66ebd4ae2812430bb883c787.md",
    "source_type": "git_repo",
    "title": "Event Hub",
    "content": "An image element with the src attribute pointing to an image file and the alt attribute with a description of the image Note: You can use any text for the event descriptions and dates You can use the following image URLs for the images if you like: https://cdn freecodecamp org/curriculum/labs/past-event1 jpg https://cdn freecodecamp org/curriculum/labs/past-event2 jpg --hints-- You should have a header element js assert isNotNull(document querySelector(\"header\")); Your header element should come after the opening body tagjs\nassert equal(document querySelector(\"body\") firstElementChild tagName, \"HEADER\");\nInside the header element, you should have an h1 element that contains the text Event Hub js\nconst h1Element = document querySelector('header h1');\nassert strictEqual(h1Element innerText, \"Event Hub\");\nInside the header element, after the h1 element, you should have a nav element js\nassert isNotNull(document querySelector(\"header>h1+nav\"));\nYour nav element should contain an unordered list of two items ```js\nconst liElements = document querySelectorAll('header nav>ul>li');\nassert isNotNull('header nav>ul');\nassert strictEqual(liElements length, 2);\n```\nThe first item in the unordered list should be a link js\nconst firstLink = document querySelectorAll('header nav ul li a')[0];\nassert exists(firstLink);\nThe second item in the unordered list should be a link js\nconst secondLink = document querySelectorAll('header nav ul li a')[1];\nassert exists(secondLink);\nThe text of the first item in the unordered list should be Upcoming Events js\nconst firstLink = document querySelectorAll('header nav>ul>li>a')[0];\nassert strictEqual(firstLink innerText, \"Upcoming Events\");\nThe first item in the unordered list should have the href set to #upcoming-events js\nconst anchorElement = document querySelectorAll(\"header nav>ul>li>a\")[0];\nconst hrefAttribute = anchorElement getAttribute(\"href\");\nassert strictEqual(hrefAttribute, \"#upcoming-events\");\nThe text of the second item in the unordered list should be Past Events js\nconst secondLink = document querySelectorAll('header nav>ul>li>a')[1];\nassert strictEqual(secondLink innerText, \"Past Events\");\nThe second item in the unordered list should have the href set to #past-events js\nconst anchorElement = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\event-hub\\66ebd4ae2812430bb883c787.md",
      "source_type": "git_repo"
    },
    "token_count": 511,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "bb931ba338f93931c4b5c3d0e1c0f692",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\event-hub\\66ebd4ae2812430bb883c787.md",
    "source_type": "git_repo",
    "title": "Event Hub",
    "content": "\"Upcoming Events\"); The first item in the unordered list should have the href set to #upcoming-events js const anchorElement = document querySelectorAll(\"header nav>ul>li>a\")[0]; const hrefAttribute = anchorElement getAttribute(\"href\"); assert strictEqual(hrefAttribute, \"#upcoming-events\"); The text of the second item in the unordered list should be Past Events js const secondLink = document querySelectorAll('header nav>ul>li>a')[1]; assert strictEqual(secondLink innerText, \"Past Events\"); The second item in the unordered list should have the href set to #past-events js const anchorElement = documentquerySelectorAll(\"header nav>ul>li>a\")[1];\nconst hrefAttribute = anchorElement getAttribute(\"href\");\nassert strictEqual(hrefAttribute, \"#past-events\");\nYou should have a main element after the header element closing tag js\nconst mainElement = document querySelector(\"body>header+main\");\nassert isNotNull(mainElement);\nInside the main element, you should have two section elements js\nconst sectionElements = document querySelectorAll('body>header+main>section');\nassert strictEqual(sectionElements length, 2);\nYour first section element should have an id attribute with the value upcoming-events js\nconst firstSection = document querySelectorAll('body>header+main>section')[0];\nconst idAttribute = firstSection getAttribute(\"id\");\nassert strictEqual(idAttribute, \"upcoming-events\");\nYour second section element should have an id attribute with the value past-events js\nconst secondSection = document querySelectorAll('body>header+main>section')[1];\nconst idAttribute = secondSection getAttribute(\"id\");\nassert strictEqual(idAttribute, \"past-events\");\nInside the #upcoming-events section, you should have an h2 element with the text Upcoming Events js\nconst h2Element = document querySelector('#upcoming-events h2');\nassert strictEqual(h2Element innerText, \"Upcoming Events\");\nInside the #upcoming-events section, you should have two article elements below the h2 element js\nconst articleElements = document querySelectorAll('#upcoming-events h2 ~ article');\nassert strictEqual(articleElements length, 2);\nBoth of the article elements inside the #upcoming-events section should have an h3 element for the event title js\nconst h3Elements = document querySelectorAll('#upcoming-events article h3');\nassert strictEqual(h3Elements",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\event-hub\\66ebd4ae2812430bb883c787.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "02887e6b59f1291035b4ac11db04cb0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\event-hub\\66ebd4ae2812430bb883c787.md",
    "source_type": "git_repo",
    "title": "Event Hub",
    "content": "have an h2 element with the text Upcoming Events js const h2Element = document querySelector('#upcoming-events h2'); assert strictEqual(h2Element innerText, \"Upcoming Events\"); Inside the #upcoming-events section, you should have two article elements below the h2 element js const articleElements = document querySelectorAll('#upcoming-events h2 ~ article'); assert strictEqual(articleElements length, 2); Both of the article elements inside the #upcoming-events section should have an h3 element for the event title js const h3Elements = document querySelectorAll('#upcoming-events article h3'); assert strictEqual(h3Elementslength, 2);\nBoth of the article elements inside the #upcoming-events section should have a paragraph element for the event description js\nconst articles = document querySelectorAll('#upcoming-events article');\nassert isNotEmpty(articles);\narticles forEach(article => {\nassert isAtLeast(article querySelectorAll('h3 ~ p') length, 1);\n});\nInside the #past-events section, you should have an h2 element with the text Past Events js\nconst h2Element = document querySelector('#past-events h2');\nassert strictEqual(h2Element innerText, \"Past Events\");\nInside the #past-events section, you should have two article elements below the h2 element js\nconst articleElements = document querySelectorAll('#past-events h2 ~ article');\nassert strictEqual(articleElements length, 2);\nBoth of the article elements inside the #past-events section should have an h3 element for the event title js\nconst h3Elements = document querySelectorAll('#past-events article h3');\nassert strictEqual(h3Elements length, 2);\nBoth of the article elements inside the #past-events section should have a paragraph element for the event description js\nconst articles = document querySelectorAll('#past-events article');\nassert isNotEmpty(articles);\narticles forEach(article => {\nassert isAtLeast(article querySelectorAll('h3 ~ p') length, 1);\n});\nBoth of the article elements inside the #past-events section should have an image element js\nconst imgElements = document querySelectorAll('#past-events article img');\nassert strictEqual(imgElements length, 2);\nBoth of the image elements inside the #past-events section should have the src attribute pointing to an image file ```js\nconst imgElements = document querySelectorAll('#past-events article img');\nassert strictEqual(imgElements",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\event-hub\\66ebd4ae2812430bb883c787.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "d8f1446cb1d38e1cea12ba219949fe90",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\event-hub\\66ebd4ae2812430bb883c787.md",
    "source_type": "git_repo",
    "title": "Event Hub",
    "content": "js const articles = document querySelectorAll('#past-events article'); assert isNotEmpty(articles); articles forEach(article => { assert isAtLeast(article querySelectorAll('h3 ~ p') length, 1); }); Both of the article elements inside the #past-events section should have an image element js const imgElements = document querySelectorAll('#past-events article img'); assert strictEqual(imgElements length, 2); Both of the image elements inside the #past-events section should have the src attribute pointing to an image file ```js const imgElements = document querySelectorAll('#past-events article img'); assert strictEqual(imgElementslength, 2);\nfor (let img of imgElements) {\nassert exists(img getAttribute(\"src\"));\n}\n```\nBoth of the image elements inside the #past-events section should have the alt attribute with a description of the image ```js\nconst imgElements = document querySelectorAll('#past-events article img');\nassert strictEqual(imgElements length, 2);\nfor (let img of imgElements) {\nassert exists(img getAttribute(\"alt\"));\n}\n```\nEach h3 element should have the event title js\nconst eventTitles = document querySelectorAll('h3');\nassert isNotEmpty(eventTitles);\neventTitles forEach((eventTitle => assert isNotEmpty(eventTitle innerText)));\nEach p element should have the event description js\nconst eventDescriptions = document querySelectorAll('p');\nassert isNotEmpty(eventDescriptions);\neventDescriptions forEach((eventDescription => assert isNotEmpty(eventDescription innerText)));\n--seed--\n--seed-contents--\n```html\nEvent Hub\n```\n--solutions--\n```html\nEvent Hub\nEvent Hub\nUpcoming Events\nPast Events\nUpcoming Events\nAI & Machine Learning Conference 2024\nJoin us for a deep dive into the latest advancements in artificial intelligence and machine learning Industry leaders will share insights and case studies on how AI is transforming various sectors Date: August 10, 2024\nWeb Development Bootcamp\nA hands-on workshop designed for developers looking to enhance their skills in modern web technologies including React, Node js, and GraphQL Perfect for both beginners and experienced developers Date: September 5, 2024\nPast Events\nCybersecurity Summit 2024\nAn event focusing on the latest trends and threats in cybersecurity Experts discussed strategies for protecting data and ensuring privacy in an increasingly digital world Date: June 15, 2024\nBlockchain Expo 2024\nA comprehensive event covering the future of blockchain technology",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\event-hub\\66ebd4ae2812430bb883c787.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "14bbf57bb55468afb2636bf41b003ba2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\event-hub\\66ebd4ae2812430bb883c787.md",
    "source_type": "git_repo",
    "title": "Event Hub",
    "content": "workshop designed for developers looking to enhance their skills in modern web technologies including React, Node js, and GraphQL Perfect for both beginners and experienced developers Date: September 5, 2024 Past Events Cybersecurity Summit 2024 An event focusing on the latest trends and threats in cybersecurity Experts discussed strategies for protecting data and ensuring privacy in an increasingly digital world Date: June 15, 2024 Blockchain Expo 2024 A comprehensive event covering the future of blockchain technologyTopics included decentralized finance (DeFi), smart contracts, and the impact of blockchain on various industries Date: July 20, 2024\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11616,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\29-semantic-html\\event-hub\\66ebd4ae2812430bb883c787.md",
      "source_type": "git_repo"
    },
    "token_count": 124,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "d8e2d8e5d2027068256b701abde699b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bank-account-manager\\6718d2d59337c822ecb697ff.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6718d2d59337c822ecb697ff\ntitle: Build a Bank Account Management Program\nchallengeType: 26\ndashedName: build-a-bank-account-management-program\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should define a class named BankAccount with a constructor The constructor should set the default balance to 0 and initialize an empty array named transactions to store transaction records as objects Each transaction stored in the transactions array should be an object with two properties: type and amount The type property should be either deposit or withdraw, and the amount property should be the amount deposited or withdrawn You should define a method named deposit that takes the deposit amount as a parameter When the deposit amount is greater than 0, it should:\nPush a new object to the transactions array with a type of deposit and the amount deposited Update the balance Return \"Successfully deposited $[amount] New balance: $[balance]\" If the amount is less than or equal to 0, the deposit method should return \"Deposit amount must be greater than zero \" You should define a method named withdraw that takes an amount as a parameter This method should update the current balance according to withdrawals When the amount to be withdrawn is greater than 0 and less than or equal to the current balance, it should:\nPush a new object to the transactions array with a type of withdraw and the amount withdrawn Update the balance Return \"Successfully withdrew $[amount] New balance: $[balance]\" If the amount to be withdrawn is less than or equal to 0 or greater than the current balance, the withdraw method should return \"Insufficient balance or invalid amount \" You should define a method named checkBalance that returns the current balance in the format \"Current balance: $[balance]\" You should define a method named listAllDeposits that iterates through the transactions array and returns all deposits in the format \"Deposits: amount,amount, \" You should define a method named listAllWithdrawals that iterates through the transactions array and returns all withdrawals in the format \"Withdrawals: amount,amount, \" You should create a new instance of BankAccount named myAccount Your myAccount bank account should have at least five transactions Your myAccount bank account should have at least two deposits Your myAccount bank account should have at least two withdrawals Your myAccount bank account should have a balance greater than $100",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9794,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bank-account-manager\\6718d2d59337c822ecb697ff.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "1819def3030dcc3dc9f066335b40e0ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bank-account-manager\\6718d2d59337c822ecb697ff.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "amount,amount, \" You should define a method named listAllWithdrawals that iterates through the transactions array and returns all withdrawals in the format \"Withdrawals: amount,amount, \" You should create a new instance of BankAccount named myAccount Your myAccount bank account should have at least five transactions Your myAccount bank account should have at least two deposits Your myAccount bank account should have at least two withdrawals Your myAccount bank account should have a balance greater than $100--hints--\nYou should define a class named BankAccount js\nassert isFunction(BankAccount);\nassert isObject(new BankAccount());\nThe BankAccount object should initially have a balance of 0 and an empty array transactions to store transaction records js\nconst myAccount = new BankAccount();\nassert equal(myAccount balance, 0);\nassert equal(myAccount transactions length, 0);\nYou should have a deposit method that takes the deposit amount as a parameter js\nconst myAccount = new BankAccount();\nassert isFunction(myAccount deposit);\nassert lengthOf(myAccount deposit, 1);\nYou should have a withdraw method that takes the withdrawal amount as a parameter js\nconst myAccount = new BankAccount();\nassert isFunction(myAccount withdraw);\nassert lengthOf(myAccount withdraw, 1);\nYou should have a checkBalance method that checks the current balance js\nconst myAccount = new BankAccount();\nassert isFunction(myAccount checkBalance);\nYou should have a listAllDeposits method that lists all deposits js\nconst myAccount = new BankAccount();\nassert isFunction(myAccount listAllDeposits);\nYou should have a listAllWithdrawals method that lists all withdrawals js\nconst myAccount = new BankAccount();\nassert isFunction(myAccount listAllWithdrawals);\nBankAccount deposit(100) should return \"Successfully deposited $100 New balance: $100\" ```js\nconst myAccount = new BankAccount();\nassert equal(myAccount deposit(100), \"Successfully deposited $100 New balance: $100\")\n// prevent hardcoding\nassert equal(myAccount deposit(200), \"Successfully deposited $200 New balance: $300\")\n```\nBankAccount deposit(-50) should return \"Deposit amount must be greater than zero \" ```js\nconst myAccount = new BankAccount();\nassert equal(myAccount deposit(-50), \"Deposit amount must be greater than zero \")\n// prevent hardcoding\nassert equal(myAccount deposit(-30), \"Deposit amount must be greater than zero \")\n```\nBankAccount",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9794,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bank-account-manager\\6718d2d59337c822ecb697ff.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "62d1532d735900b756f105df9c413de9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bank-account-manager\\6718d2d59337c822ecb697ff.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "New balance: $100\" ```js const myAccount = new BankAccount(); assert equal(myAccount deposit(100), \"Successfully deposited $100 New balance: $100\") // prevent hardcoding assert equal(myAccount deposit(200), \"Successfully deposited $200 New balance: $300\") ``` BankAccount deposit(-50) should return \"Deposit amount must be greater than zero \" ```js const myAccount = new BankAccount(); assert equal(myAccount deposit(-50), \"Deposit amount must be greater than zero \") // prevent hardcoding assert equal(myAccount deposit(-30), \"Deposit amount must be greater than zero \") ``` BankAccountdeposit(0) should return \"Deposit amount must be greater than zero \" js\nconst myAccount = new BankAccount();\nassert equal(myAccount deposit(0), \"Deposit amount must be greater than zero \")\nWhen the account balance is 100, BankAccount withdraw(150) should return \"Insufficient balance or invalid amount \" ```js\nconst myAccount = new BankAccount();\nmyAccount deposit(100);\nassert equal(myAccount withdraw(150), \"Insufficient balance or invalid amount \")\n// prevent hardcoding\nassert equal(myAccount withdraw(250), \"Insufficient balance or invalid amount \")\n```\nBankAccount withdraw(-50) should return \"Insufficient balance or invalid amount \" ```js\nconst myAccount = new BankAccount();\nassert equal(myAccount withdraw(-50), \"Insufficient balance or invalid amount \")\n// prevent hardcoding\nassert equal(myAccount withdraw(-30), \"Insufficient balance or invalid amount \")\n```\nBankAccount withdraw(0) should return \"Insufficient balance or invalid amount \" js\nconst myAccount = new BankAccount();\nassert equal(myAccount withdraw(0), \"Insufficient balance or invalid amount \")\nWhen the account balance is 200, BankAccount withdraw(150) should return \"Successfully withdrew $150 New balance: $50\" js\nconst myAccount = new BankAccount();\nmyAccount deposit(200);\nassert equal(myAccount withdraw(150), \"Successfully withdrew $150 New balance: $50\")\nWhen the account balance is 200, BankAccount checkBalance() should return \"Current balance: $200\" ```js\nconst myAccount = new BankAccount();\nmyAccount deposit(200);\nassert equal(myAccount checkBalance(), \"Current balance: $200\")\n// prevent hardcoding\nmyAccount deposit(300);\nassert equal(myAccount",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9794,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bank-account-manager\\6718d2d59337c822ecb697ff.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "5566a7d70e834f0b2e7b9b8a38832934",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bank-account-manager\\6718d2d59337c822ecb697ff.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert equal(myAccount withdraw(0), \"Insufficient balance or invalid amount \") When the account balance is 200, BankAccount withdraw(150) should return \"Successfully withdrew $150 New balance: $50\" js const myAccount = new BankAccount(); myAccount deposit(200); assert equal(myAccount withdraw(150), \"Successfully withdrew $150 New balance: $50\") When the account balance is 200, BankAccount checkBalance() should return \"Current balance: $200\" ```js const myAccount = new BankAccount(); myAccount deposit(200); assert equal(myAccount checkBalance(), \"Current balance: $200\") // prevent hardcoding myAccount deposit(300); assert equal(myAccountcheckBalance(), \"Current balance: $500\")\n```\nWhen you deposit 10, 35, 90, the listAllDeposits method should return \"Deposits: 10,35,90\" js\nconst myAccount = new BankAccount();\nmyAccount deposit(10);\nmyAccount deposit(35);\nmyAccount deposit(90);\nassert equal(myAccount listAllDeposits(), \"Deposits: 10,35,90\")\nWhen you withdraw 20, 50, 100, the listAllWithdrawals method should return \"Withdrawals: 20,50,100\" ```js\nconst myAccount = new BankAccount();\nmyAccount deposit(500);\nmyAccount withdraw(20);\nmyAccount withdraw(50);\nmyAccount withdraw(100);\nassert equal(myAccount listAllWithdrawals(), \"Withdrawals: 20,50,100\")\n```\nYou should have an instance of BankAccount named myAccount js\nassert exists(myAccount);\nassert instanceOf(myAccount, BankAccount);\nYour myAccount bank account should have at least five transactions js\nassert isAtLeast(myAccount transactions length, 5);\nYour myAccount bank account should have at least two deposits js\nconst depositCount = myAccount transactions filter(transaction => transaction type === \"deposit\") length;\nassert isAtLeast(depositCount, 2);\nYour myAccount bank account should have at least two withdrawals js\nconst withdrawalCount = myAccount transactions filter(transaction => transaction type === \"withdraw\") length;\nassert isAtLeast(withdrawalCount, 2);\nYour myAccount bank account should have a balance greater than $100 js\nassert isAbove(myAccount",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9794,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bank-account-manager\\6718d2d59337c822ecb697ff.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "bc580eb239cce93d48e6c70c3a08f961",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bank-account-manager\\6718d2d59337c822ecb697ff.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "at least five transactions js assert isAtLeast(myAccount transactions length, 5); Your myAccount bank account should have at least two deposits js const depositCount = myAccount transactions filter(transaction => transaction type === \"deposit\") length; assert isAtLeast(depositCount, 2); Your myAccount bank account should have at least two withdrawals js const withdrawalCount = myAccount transactions filter(transaction => transaction type === \"withdraw\") length; assert isAtLeast(withdrawalCount, 2); Your myAccount bank account should have a balance greater than $100 js assert isAbove(myAccountbalance, 100);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nclass BankAccount {\nconstructor() {\nthis balance = 0;\nthis transactions = [];\n}\ndeposit(amount) {\nif (amount > 0) {\nthis transactions push({ type: 'deposit', amount });\nthis balance += amount;\nreturn `Successfully deposited $${amount} New balance: $${this balance}`;\n} else {\nreturn 'Deposit amount must be greater than zero ';\n}\n}\nwithdraw(amount) {\nif (amount > 0 && amount <= this balance) {\nthis transactions push({ type: 'withdraw', amount });\nthis balance -= amount;\nreturn `Successfully withdrew $${amount} New balance: $${this balance}`;\n} else {\nreturn 'Insufficient balance or invalid amount ';\n}\n}\ncheckBalance() {\nreturn `Current balance: $${this balance}`;\n}\nlistAllDeposits() {\nconst deposits = this transactions filter(transaction => transaction type === 'deposit') map(transaction => transaction amount);\nreturn `Deposits: ${deposits}`;\n}\nlistAllWithdrawals() {\nconst withdrawals = this transactions filter(transaction => transaction type === 'withdraw') map(transaction => transaction amount);\nreturn `Withdrawals: ${withdrawals}`;\n}\n}\nconst myAccount = new BankAccount();\nconsole log(myAccount deposit(0));\nconsole log(myAccount deposit(20));\nconsole log(myAccount deposit(500));\nconsole log(myAccount withdraw(30));\nconsole log(myAccount withdraw(55));\nconsole log(myAccount withdraw(100));\nconsole log(myAccount checkBalance());\nconsole log(myAccount listAllDeposits());\nconsole log(myAccount listAllWithdrawals());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9794,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bank-account-manager\\6718d2d59337c822ecb697ff.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "470708a3983ddde2477d5afa79a0ce83",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bisection-method\\686ccc2c8b967e17ab18d593.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 686ccc2c8b967e17ab18d593\ntitle: Implement the Bisection Method\nchallengeType: 27\ndashedName: implement-the-bisection-method\n--description--\nThe bisection method, also known as the binary search method, uses a binary search to find the roots of a real-valued function It works by narrowing down an interval where the square root lies until it converges to a value within a specified tolerance For example, if the tolerance is 0 01, the bisection method will keep halving the interval until the difference between the upper and lower bounds is less than or equal to 0 01 In this lab, you will implement a function that uses the bisection method to find the square root of a number Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should define a function named square_root_bisection with three parameters:\nThe number for which you want to find the square root The tolerance being the acceptable error margin for the result You should set a default tolerance value The maximum number of iterations to perform You should set a default number of iterations The square_root_bisection function should:\nRaise a ValueError with the message Square root of negative number is not defined in real numbers if the number passed to the function is negative For numbers 0 and 1, print the message: The square root of [number] is [number] and return the number itself as the square root For any other positive number, print the approximate square root with the message: The square root of [square_target] is approximately [root] and return the computed root value If no value meets the tolerance condition, print a failure message: Failed to converge within the [maximum] iterations and return None Note: You cannot import any module for this lab --hints--\nYou should not import any module js\n({ test: () => assert(runPython(`len(_Node(_code) find_imports()) == 0`)) })\nYou should have a function named square_root_bisection js\n({ test: () => assert(runPython(`_Node(_code) has_function(\"square_root_bisection\")`)) })\nYour square_root_bisection function should have three parameters js\n({ test: () => runPython(`\nimport inspect\nsig = inspect signature(square_root_bisection)\nassert len(sig",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10099,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bisection-method\\686ccc2c8b967e17ab18d593.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "62d23db42b28d9b7090a0e834ccc86eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bisection-method\\686ccc2c8b967e17ab18d593.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "print a failure message: Failed to converge within the [maximum] iterations and return None Note: You cannot import any module for this lab --hints-- You should not import any module js ({ test: () => assert(runPython(`len(_Node(_code) find_imports()) == 0`)) }) You should have a function named square_root_bisection js ({ test: () => assert(runPython(`_Node(_code) has_function(\"square_root_bisection\")`)) }) Your square_root_bisection function should have three parameters js ({ test: () => runPython(` import inspect sig = inspect signature(square_root_bisection) assert len(sigparameters) == 3\n`) })\nYou should set a default value for the tolerance and the maximum number of iterations js\n({ test: () => runPython(`\ntry:\nimport inspect\nsig = inspect signature(square_root_bisection)\nassert len(sig parameters) == 3\nsquare_root_bisection(4)\nexcept TypeError:\nassert False\n`) })\nYour square_root_bisection function should raise a ValueError with the message Square root of negative number is not defined in real numbers when the number passed to the function is negative js\n({ test: () => runPython(`\ntry:\nsquare_root_bisection(-6)\nexcept ValueError as e:\nassert str(e) == \"Square root of negative number is not defined in real numbers\"\nelse:\nassert False\n`) })\nsquare_root_bisection(0) should return 0 js\n({ test: () => runPython(`assert square_root_bisection(0) == 0`) })\nsquare_root_bisection(0) should print The square root of 0 is 0 ``js\n({ test: () => runPython(\nbuilt_in_print = print\n_out = []\ndef custom_print(args, *kwargs):\ncall_args = [arg for arg in args]\n_out extend(call_args)\nprint = custom_print\nsquare_root_bisection(0)\nassert \"The square root of 0 is 0\" in _out\n`) })\n```\nsquare_root_bisection(0 001, 1e-7, 50) should return a number between 0 03162267660168379 and 0 031622876601683794 js\n({ test: () => runPython(`assert 0 03162267660168379 <= square_root_bisection(0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10099,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bisection-method\\686ccc2c8b967e17ab18d593.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "ecca17d54600eff1b370fcda531405dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bisection-method\\686ccc2c8b967e17ab18d593.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "}) square_root_bisection(0) should print The square root of 0 is 0 ``js ({ test: () => runPython( built_in_print = print _out = [] def custom_print(args, *kwargs): call_args = [arg for arg in args] _out extend(call_args) print = custom_print square_root_bisection(0) assert \"The square root of 0 is 0\" in _out `) }) ``` square_root_bisection(0 001, 1e-7, 50) should return a number between 0 03162267660168379 and 0 031622876601683794 js ({ test: () => runPython(`assert 0 03162267660168379 <= square_root_bisection(0001, 1e-7, 50) <= 0 031622876601683794`) })\nsquare_root_bisection(0 001, 1e-7, 50) should print The square root of 0 001 is approximately X, where X is a number between 0 03162267660168379 and 0 031622876601683794 ``js\n({ test: () => runPython(\nbuilt_in_print = print\n_out = []\ndef custom_print(args, *kwargs):\ncall_args = [arg for arg in args]\n_out extend(call_args)\nprint = custom_print\n_root = square_root_bisection(0 001, 1e-7, 50)\nassert 0 03162267660168379 <= _root <= 0 031622876601683794\nassert f\"The square root of 0 001 is approximately {_root}\" in _out\n`) })\n```\nsquare_root_bisection(0 25, 1e-7, 50) should return a number between 0 4999999 and 0 5000001 js\n({ test: () => runPython(`assert 0 4999999 <= square_root_bisection(0 25, 1e-7, 50) <= 0 5000001`) })\nsquare_root_bisection(0 25, 1e-7, 50) should print The square root of 0 25 is approximately X, where X is a number between 0 4999999 and 0 5000001",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10099,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bisection-method\\686ccc2c8b967e17ab18d593.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "caeb8c8a2e685517d9569562c02c0370",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bisection-method\\686ccc2c8b967e17ab18d593.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "_root <= 0 031622876601683794 assert f\"The square root of 0 001 is approximately {_root}\" in _out `) }) ``` square_root_bisection(0 25, 1e-7, 50) should return a number between 0 4999999 and 0 5000001 js ({ test: () => runPython(`assert 0 4999999 <= square_root_bisection(0 25, 1e-7, 50) <= 0 5000001`) }) square_root_bisection(0 25, 1e-7, 50) should print The square root of 0 25 is approximately X, where X is a number between 0 4999999 and 0 5000001``js\n({ test: () => runPython(\nbuilt_in_print = print\n_out = []\ndef custom_print(args, *kwargs):\ncall_args = [arg for arg in args]\n_out extend(call_args)\nprint = custom_print\n_root = square_root_bisection(0 25, 1e-7, 50)\nassert 0 4999999 <= _root <= 0 5000001\nassert f\"The square root of 0 25 is approximately {_root}\" in _out\n`) })\n```\nsquare_root_bisection(1) should return 1 js\n({ test: () => runPython(`assert square_root_bisection(1) == 1`) })\nsquare_root_bisection(1) should print The square root of 1 is 1 ``js\n({ test: () => runPython(\nbuilt_in_print = print\n_out = []\ndef custom_print(args, *kwargs):\ncall_args = [arg for arg in args]\n_out extend(call_args)\nprint = custom_print\nsquare_root_bisection(1)\nassert \"The square root of 1 is 1\" in _out\n`) })\n```\nsquare_root_bisection(81, 1e-3, 50) should return a number between 8 999 and 9 001 js\n({ test: () => runPython(`assert 8 999 <= square_root_bisection(81, 1e-3, 50) <= 9",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10099,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bisection-method\\686ccc2c8b967e17ab18d593.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "8d8807b3916bf180bf04f1dd93409e66",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bisection-method\\686ccc2c8b967e17ab18d593.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "print The square root of 1 is 1 ``js ({ test: () => runPython( built_in_print = print _out = [] def custom_print(args, *kwargs): call_args = [arg for arg in args] _out extend(call_args) print = custom_print square_root_bisection(1) assert \"The square root of 1 is 1\" in _out `) }) ``` square_root_bisection(81, 1e-3, 50) should return a number between 8 999 and 9 001 js ({ test: () => runPython(`assert 8 999 <= square_root_bisection(81, 1e-3, 50) <= 9001`) })\nsquare_root_bisection(81, 1e-3, 50) should print The square root of 81 is approximately X, where X is a number between 8 999 and 9 001 ``js\n({ test: () => runPython(\nbuilt_in_print = print\n_out = []\ndef custom_print(args, *kwargs):\ncall_args = [arg for arg in args]\n_out extend(call_args)\nprint = custom_print\n_root = square_root_bisection(81, 1e-3, 50)\nassert 8 999 <= _root <= 9 001\nassert f\"The square root of 81 is approximately {_root}\" in _out\n`) })\n```\nsquare_root_bisection(225, 1e-3, 100) should return a number between 14 999 and 15 001 js\n({ test: () => runPython(`assert 14 999 <= square_root_bisection(225, 1e-3, 100) <= 15 001`) })\nsquare_root_bisection(225, 1e-3, 100) should print The square root of 225 is approximately X, where X is a number between 14 999 and 15 001 ``js\n({ test: () => runPython(\nbuilt_in_print = print\n_out = []\ndef custom_print(args, *kwargs):\ncall_args = [arg for arg in args]\n_out extend(call_args)\nprint = custom_print\n_root = square_root_bisection(225, 1e-3, 100)\nassert 14 999 <= _root <= 15",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10099,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bisection-method\\686ccc2c8b967e17ab18d593.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "47650698ced91d97d0c124953351ea66",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bisection-method\\686ccc2c8b967e17ab18d593.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "() => runPython(`assert 14 999 <= square_root_bisection(225, 1e-3, 100) <= 15 001`) }) square_root_bisection(225, 1e-3, 100) should print The square root of 225 is approximately X, where X is a number between 14 999 and 15 001 ``js ({ test: () => runPython( built_in_print = print _out = [] def custom_print(args, *kwargs): call_args = [arg for arg in args] _out extend(call_args) print = custom_print _root = square_root_bisection(225, 1e-3, 100) assert 14 999 <= _root <= 15001\nassert f\"The square root of 225 is approximately {_root}\" in _out\n`) })\n```\nsquare_root_bisection(225, 1e-5, 100) should return a number between 14 99999 and 15 00001 js\n({ test: () => runPython(`assert 14 99999 <= square_root_bisection(225, 1e-5, 100) <= 15 00001`) })\nsquare_root_bisection(225, 1e-5, 100) should print The square root of 225 is approximately X, where X is a number between 14 99999 and 15 00001 ``js\n({ test: () => runPython(\nbuilt_in_print = print\n_out = []\ndef custom_print(args, *kwargs):\ncall_args = [arg for arg in args]\n_out extend(call_args)\nprint = custom_print\n_root = square_root_bisection(225, 1e-5, 100)\nassert 14 99999 <= _root <= 15 00001\nassert f\"The square root of 225 is approximately {_root}\" in _out\n`) })\n```\nsquare_root_bisection(225, 1e-7, 100) should return a number between 14 9999999 and 15 0000001 js\n({ test: () => runPython(`assert 14 9999999 <= square_root_bisection(225, 1e-7, 100) <= 15",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10099,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bisection-method\\686ccc2c8b967e17ab18d593.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "1ff35bf34af07516f089eff9dbdcb30f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bisection-method\\686ccc2c8b967e17ab18d593.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "runPython( built_in_print = print _out = [] def custom_print(args, *kwargs): call_args = [arg for arg in args] _out extend(call_args) print = custom_print _root = square_root_bisection(225, 1e-5, 100) assert 14 99999 <= _root <= 15 00001 assert f\"The square root of 225 is approximately {_root}\" in _out `) }) ``` square_root_bisection(225, 1e-7, 100) should return a number between 14 9999999 and 15 0000001 js ({ test: () => runPython(`assert 14 9999999 <= square_root_bisection(225, 1e-7, 100) <= 150000001`) })\nsquare_root_bisection(225, 1e-7, 100) should print The square root of 225 is approximately X, where X is a number between 14 9999999 and 15 0000001 ``js\n({ test: () => runPython(\nbuilt_in_print = print\n_out = []\ndef custom_print(args, *kwargs):\ncall_args = [arg for arg in args]\n_out extend(call_args)\nprint = custom_print\n_root = square_root_bisection(225, 1e-7, 100)\nassert 14 9999999 <= _root <= 15 0000001\nassert f\"The square root of 225 is approximately {_root}\" in _out\n`) })\n```\nsquare_root_bisection(225, 1e-7, 10) should return None js\n({ test: () => runPython(`assert square_root_bisection(225, 1e-7, 10) is None`) })\nsquare_root_bisection(225, 1e-7, 10) should print Failed to converge within 10 iterations ``js\n({ test: () => runPython(\nbuilt_in_print = print\n_out = []\ndef custom_print(args, *kwargs):\ncall_args = [arg for arg in args]\n_out",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10099,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bisection-method\\686ccc2c8b967e17ab18d593.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "ed85d027eeeb3f9675b5b8218e52d254",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bisection-method\\686ccc2c8b967e17ab18d593.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "1e-7, 100) assert 14 9999999 <= _root <= 15 0000001 assert f\"The square root of 225 is approximately {_root}\" in _out `) }) ``` square_root_bisection(225, 1e-7, 10) should return None js ({ test: () => runPython(`assert square_root_bisection(225, 1e-7, 10) is None`) }) square_root_bisection(225, 1e-7, 10) should print Failed to converge within 10 iterations ``js ({ test: () => runPython( built_in_print = print _out = [] def custom_print(args, *kwargs): call_args = [arg for arg in args] _outextend(call_args)\nprint = custom_print\nsquare_root_bisection(225, 1e-7, 10)\nassert \"Failed to converge within 10 iterations\" in _out\n`) })\n```\n--seed--\n--seed-contents--\n```py\n```\n--solutions--\n```py\ndef square_root_bisection(square_target, tolerance=1e-7, max_iterations=100):\nif square_target < 0:\nraise ValueError('Square root of negative number is not defined in real numbers')\nif square_target == 1:\nroot = 1\nprint(f'The square root of {square_target} is 1')\nelif square_target == 0:\nroot = 0\nprint(f'The square root of {square_target} is 0')\nelse:\nlow = square_target if square_target < 1 else 1\nhigh = 1 if square_target < 1 else square_target\nroot = None\nfor _ in range(max_iterations):\nmid = (low + high) / 2\nsquare_mid = mid**2\nif high - low <= tolerance:\nroot = mid\nbreak\nelif square_mid < square_target:\nlow = mid\nelse:\nhigh = mid\nif root is None:\nprint(f\"Failed to converge within {max_iterations} iterations\")\nelse:\nprint(f'The square root of {square_target} is approximately {root}')\nreturn root\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10099,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bisection-method\\686ccc2c8b967e17ab18d593.md",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "0ae25a80ec349d3a29e15a7a6c6a1d6c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-blog-post-card\\66eaddd04a9e533fba689001.md",
    "source_type": "git_repo",
    "title": "Blog Post Card",
    "content": "id: 66eaddd04a9e533fba689001\ntitle: Design a Blog Post Card\nchallengeType: 25\ndashedName: lab-blog-post-card\ndemoType: onClick\n--description--\nIn this lab, you'll practice how to style backgrounds and borders by creating a blog post card Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a div element with a class of blog-post-card to hold all of your card elements Within the blog-post-card element, you should have an image element with a valid alt attribute and text, and a class of post-img You can use https://cdn freecodecamp org/curriculum/labs/cover-photo jpg for the src attribute of the image You should have a div with a class of post-content within the blog-post-card element with the following:\nAn h2 element with a class of post-title and text for the title of your blog post A p element with a class of post-excerpt and text to summarize your blog post An a element with a class of read-more with the text Read More You should apply the following styles to the blog-post-card element:\nA white background Rounded corners A width of your choice The text alignment of your choice The post-img element should be styled so that the image fills the card's entire width and has a bottom border The post-content element should be styled so that there is padding inside the card The post-title and post-excerpt elements should have a text color other than the default and margins on all sides The read-more element should be styled like a button and have:\nA text color other than the default A background color Margins on all sides Padding on all sides Rounded corners A display property set to inline-block A hover effect that changes its background color Note: Be sure to link your stylesheet in your HTML and apply your CSS --hints--\nYou should have a div with a class of blog-post-card js\nassert exists(document querySelector(\"div blog-post-card\"));\nYou should have an img element with a class of post-img Make sure your image has an alt attribute with text and a src attribute with a value ```js\nconst card = document querySelector(\"div blog-post-card\");\nassert exists(card);\nconst img = card querySelector(\"img post-img\");\nassert exists(img);\nassert isString(img alt);\nassert isNotEmpty(img alt);\nassert isTrue(img hasAttribute(\"src\"));\nassert isNotEmpty(img",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11149,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-blog-post-card\\66eaddd04a9e533fba689001.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "64be158e37be27e8112c604e62fdca5a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-blog-post-card\\66eaddd04a9e533fba689001.md",
    "source_type": "git_repo",
    "title": "Blog Post Card",
    "content": "and apply your CSS --hints-- You should have a div with a class of blog-post-card js assert exists(document querySelector(\"div blog-post-card\")); You should have an img element with a class of post-img Make sure your image has an alt attribute with text and a src attribute with a value ```js const card = document querySelector(\"div blog-post-card\"); assert exists(card); const img = card querySelector(\"img post-img\"); assert exists(img); assert isString(img alt); assert isNotEmpty(img alt); assert isTrue(img hasAttribute(\"src\")); assert isNotEmpty(imggetAttribute(\"src\"));\n```\nYou should have a div with class of post-content js\nconst card = document querySelector(\"div blog-post-card\");\nassert exists(card);\nconst content = card querySelector(\"div post-content\");\nassert exists(content);\nYou should have an h2 element with a class of post-title Make sure it has some text content for the title of your blog post ```js\nconst card = document querySelector(\"div blog-post-card\");\nassert exists(card);\nconst content = card querySelector(\"div post-content\");\nassert exists(content);\nconst postTitle = content querySelector(\"h2 post-title\");\nassert exists(postTitle);\nassert isString(postTitle textContent);\nassert isNotEmpty(postTitle textContent);\n```\nYou should have a p with a class of post-excerpt Make sure it has some text content to summarize your blog post ```js\nconst card = document querySelector(\"div blog-post-card\");\nassert exists(card);\nconst content = card querySelector(\"div post-content\");\nassert exists(content);\nconst postExcerpt = content querySelector(\"p post-excerpt\");\nassert exists(postExcerpt);\n```\nYou should have an a element with a class of read-more ```js\nconst card = document querySelector(\"div blog-post-card\");\nassert exists(card);\nconst content = card querySelector(\"div post-content\");\nassert exists(content);\nconst readMore = content querySelector(\"a read-more\");\nassert exists(readMore);\n```\nYour read-more element should have the text Read More js\nconst el = document querySelector(\"div post-content a read-more\");\nassert exists(el);\nassert strictEqual(el textContent trim(), \"Read More\");\nYour blog-post-card element should have a border-radius property with a value (should not be 0 or a negative value) ```js\nconst card = document querySelector(' blog-post-card');\nassert exists(card);\nconst borderRadius = getComputedStyle(card) borderRadius;\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11149,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-blog-post-card\\66eaddd04a9e533fba689001.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "6ef006ab79d05716031ed7b07828c3f2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-blog-post-card\\66eaddd04a9e533fba689001.md",
    "source_type": "git_repo",
    "title": "Blog Post Card",
    "content": "content = card querySelector(\"div post-content\"); assert exists(content); const readMore = content querySelector(\"a read-more\"); assert exists(readMore); ``` Your read-more element should have the text Read More js const el = document querySelector(\"div post-content a read-more\"); assert exists(el); assert strictEqual(el textContent trim(), \"Read More\"); Your blog-post-card element should have a border-radius property with a value (should not be 0 or a negative value) ```js const card = document querySelector(' blog-post-card'); assert exists(card); const borderRadius = getComputedStyle(card) borderRadius; assertisAbove(parseInt(borderRadius), 0);\n```\nYour blog-post-card element should have a white background ```js\nconst card = document querySelector(' blog-post-card');\nassert exists(card);\nconst backgroundColor = getComputedStyle(card) backgroundColor;\nconst whiteColors = ['rgb(255, 255, 255)', 'rgba(255, 255, 255, 1)', '#ffffff', '#fff', 'white'];\nassert oneOf(backgroundColor toLowerCase(), whiteColors);\n```\nYou should target blog-post-card and set its width property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\" blog-post-card\") getPropertyValue(\"width\"));\nYou should target blog-post-card and set its text-align property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\" blog-post-card\") getPropertyValue(\"text-align\"));\nYou should target post-content and set its padding property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\" post-content\") getPropertyValue(\"padding\"));\nYour read-more element should have a hover effect ```js\nconst link = document querySelector(' read-more');\nassert exists(link);\nconst d = new __helpers CSSHelp(document) getStyle(' read-more:hover');\nassert isNotEmpty(d backgroundColor);\n```\nYou should target read-more and set its color property ```js\nconst readMore = document querySelector(' read-more');\nassert exists(readMore);\nconst readMoreTextColor = getComputedStyle(readMore) color;\nassert notStrictEqual(readMoreTextColor, 'rgba(0, 0, 0, 0)');\n```\nYou should target read-more and set its background-color property ```js\nconst readMore = document querySelector(' read-more');\nassert exists(readMore);\nconst readMoreBackgroundColor = getComputedStyle(readMore) backgroundColor;\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11149,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-blog-post-card\\66eaddd04a9e533fba689001.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "c58f914f0c6cbb414bc98291dc14f384",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-blog-post-card\\66eaddd04a9e533fba689001.md",
    "source_type": "git_repo",
    "title": "Blog Post Card",
    "content": "effect ```js const link = document querySelector(' read-more'); assert exists(link); const d = new __helpers CSSHelp(document) getStyle(' read-more:hover'); assert isNotEmpty(d backgroundColor); ``` You should target read-more and set its color property ```js const readMore = document querySelector(' read-more'); assert exists(readMore); const readMoreTextColor = getComputedStyle(readMore) color; assert notStrictEqual(readMoreTextColor, 'rgba(0, 0, 0, 0)'); ``` You should target read-more and set its background-color property ```js const readMore = document querySelector(' read-more'); assert exists(readMore); const readMoreBackgroundColor = getComputedStyle(readMore) backgroundColor; assertnotStrictEqual(readMoreBackgroundColor, 'rgba(0, 0, 0, 0)');\n```\nYou should target read-more and set its margin property ```js\nconst readMore = document querySelector(' read-more');\nassert exists(readMore);\nconst readMoreMargin = getComputedStyle(readMore) marginTop;\nassert notStrictEqual(readMoreMargin, '0px');\n```\nYou should target read-more and set its display property ```js\nconst readMore = document querySelector(' read-more');\nassert exists(readMore);\nconst readMoreDisplay = getComputedStyle(readMore) display;\nassert strictEqual(readMoreDisplay, 'inline-block');\n```\nYou should target read-more and set its border-radius property ```js\nconst readMore = document querySelector(' read-more');\nassert exists(readMore);\nconst readMoreBorderRadius = getComputedStyle(readMore) borderRadius;\nassert notStrictEqual(readMoreBorderRadius, '0px');\n```\nYou should target read-more and set its padding property ```js\nconst readMore = document querySelector(' read-more');\nassert exists(readMore);\nconst readMorePadding = getComputedStyle(readMore) padding;\nassert notStrictEqual(readMorePadding, '0px');\n```\nYour post-img element should fill the card's width ```js\nconst postImg = document querySelector(' post-img');\nassert exists(postImg);\nconst imgWidth = getComputedStyle(postImg) width;\nconst cardWidth = getComputedStyle(postImg parentElement) width;\nassert closeTo(Number(imgWidth replace(/px/ig, \"\")), Number(cardWidth replace(/px/ig, \"\")), 15);\n```\nYour post-img element should have a border-bottom value ```js\nconst postImg = document querySelector(' post-img');\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11149,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-blog-post-card\\66eaddd04a9e533fba689001.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "658f292fa8d7d24305bbf7f22a14e370",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-blog-post-card\\66eaddd04a9e533fba689001.md",
    "source_type": "git_repo",
    "title": "Blog Post Card",
    "content": "and set its padding property ```js const readMore = document querySelector(' read-more'); assert exists(readMore); const readMorePadding = getComputedStyle(readMore) padding; assert notStrictEqual(readMorePadding, '0px'); ``` Your post-img element should fill the card's width ```js const postImg = document querySelector(' post-img'); assert exists(postImg); const imgWidth = getComputedStyle(postImg) width; const cardWidth = getComputedStyle(postImg parentElement) width; assert closeTo(Number(imgWidth replace(/px/ig, \"\")), Number(cardWidth replace(/px/ig, \"\")), 15); ``` Your post-img element should have a border-bottom value ```js const postImg = document querySelector(' post-img'); assertexists(postImg);\nconst imgBorderBottom = getComputedStyle(postImg) borderBottomWidth;\nassert notStrictEqual(imgBorderBottom, '0px');\n```\nYour post-title and post-excerpt elements should have margins and non-default text colors ```js\nconst title = document querySelector(' post-title');\nconst excerpt = document querySelector(' post-excerpt');\nfunction isColorApplied(element) {\nconst color = getComputedStyle(element) getPropertyValue('color');\nreturn color && color == 'rgba(0, 0, 0, 0)' && color == 'transparent';\n}\nfunction isMarginApplied(element) {\nconst margin = getComputedStyle(element) getPropertyValue('margin');\nreturn margin && margin == '0px';\n}\nassert isTrue(isColorApplied(title));\nassert isTrue(isMarginApplied(title));\nassert isTrue(isColorApplied(excerpt));\nassert isTrue(isMarginApplied(excerpt));\nconst styles = new __helpers CSSHelp(document);\n// Are CSS selectors used to style the elements:\nconst postTitle = [\" post-title\", \" post-excerpt, post-title\", \" post-title, post-excerpt\"] some(selector => {\nreturn styles getStyle(selector) getPropVal('color');\n});\nconst postExcerpt = [\" post-excerpt\", \" post-excerpt, post-title\", \" post-title, post-excerpt\"] some(selector => {\nreturn styles getStyle(selector) getPropVal('color');\n});\nassert isTrue(postTitle);\nassert isTrue(postExcerpt);\n```\n--seed--\n--seed-contents--\n```html\nBlog Post Card\n```\n```css\n```\n--solutions--\n```html\nBlog Post Card\nLearn Web Development in 2024\nStay ahead of the curve with the latest trends in web development",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11149,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-blog-post-card\\66eaddd04a9e533fba689001.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "9abe239ed0cc67cf5a42632abc509570",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-blog-post-card\\66eaddd04a9e533fba689001.md",
    "source_type": "git_repo",
    "title": "Blog Post Card",
    "content": "the elements: const postTitle = [\" post-title\", \" post-excerpt, post-title\", \" post-title, post-excerpt\"] some(selector => { return styles getStyle(selector) getPropVal('color'); }); const postExcerpt = [\" post-excerpt\", \" post-excerpt, post-title\", \" post-title, post-excerpt\"] some(selector => { return styles getStyle(selector) getPropVal('color'); }); assert isTrue(postTitle); assert isTrue(postExcerpt); ``` --seed-- --seed-contents-- ```html Blog Post Card ``` ```css ``` --solutions-- ```html Blog Post Card Learn Web Development in 2024 Stay ahead of the curve with the latest trends in web developmentDiscover what's new and exciting in 2024\nRead More\n```\n```css\nbody {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nmargin: 0;\nbackground-color: #f0f0f0;\nfont-family: Arial, sans-serif;\n} blog-post-card {\nbackground-color: white;\nborder-radius: 15px;\nbox-shadow: 0 4px 8px rgba(0, 0, 0, 0 1);\noverflow: hidden;\nwidth: 350px;\nmargin: 20px;\ntext-align: center;\n} post-img {\nwidth: 100%;\nheight: auto;\nborder-bottom: 5px solid #333;\n} post-content {\npadding: 20px;\n} post-title {\ncolor: #333;\nmargin: 0 0 10px;\n} post-excerpt {\ncolor: #667;\nmargin: 10px 0;\n} read-more {\ndisplay: inline-block;\nmargin-top: 10px;\npadding: 10px 15px;\nbackground-color: #333;\ncolor: white;\ntext-decoration: none;\nborder-radius: 5px;\n} read-more:hover {\nbackground-color: #555;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11149,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-blog-post-card\\66eaddd04a9e533fba689001.md",
      "source_type": "git_repo"
    },
    "token_count": 405,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "036503f997f3a9e47e32b3733603143e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-catalog-table\\66ec4c8e9878d8441956516f.md",
    "source_type": "git_repo",
    "title": "Book Catalog",
    "content": "id: 66ec4c8e9878d8441956516f\ntitle: Build a Book Catalog Table\nchallengeType: 25\ndashedName: build-a-book-catalog-table\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create a table element that lists book information Your table should have a table head element with one row in it The row in your table head element should have four table header elements, with the text of Title, Author, Genre, and Publication Year, in that order Your table should have a table body element with at least five rows in it Each row in your table body should have four table data elements that display the book's Title, Author, Genre, and Publication Year Your table should have a table footer element with one row in it The row in your table footer element should have a table data element that spans four columns and has the text Total Books: N where N should be replaced by the number of books in your table --hints--\nYou should have one table element js\nassert lengthOf(document querySelectorAll('table'), 1);\nYou should have one thead element within your table element js\nassert lengthOf(document querySelectorAll('table thead'), 1);\nYou should have one tr element within your thead element js\nassert lengthOf(document querySelectorAll('thead tr'), 1);\nYou should have four th elements within your thead element's row js\nassert lengthOf(document querySelectorAll('thead tr th'), 4);\nYour four th elements should have the text Title, Author, Genre, and Publication Year, in that order js\nconst ths = document querySelectorAll('thead tr th');\nassert equal(ths[0] textContent, 'Title');\nassert equal(ths[1] textContent, 'Author');\nassert equal(ths[2] textContent, 'Genre');\nassert equal(ths[3] textContent, 'Publication Year');\nYou should have one tbody element within your table element js\nassert lengthOf(document querySelectorAll('table tbody'), 1);\nYour tbody element should have at least five rows js\nassert isAtLeast(document querySelectorAll('tbody tr') length, 5);\nEach row in your tbody element should have exactly four td elements as children ```js\nconst rows = document querySelectorAll('tbody tr');\nassert isAtLeast(rows length, 1);\nrows",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-catalog-table\\66ec4c8e9878d8441956516f.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "459673a7de20655e4ffeb12bfbec1b05",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-catalog-table\\66ec4c8e9878d8441956516f.md",
    "source_type": "git_repo",
    "title": "Book Catalog",
    "content": "th'); assert equal(ths[0] textContent, 'Title'); assert equal(ths[1] textContent, 'Author'); assert equal(ths[2] textContent, 'Genre'); assert equal(ths[3] textContent, 'Publication Year'); You should have one tbody element within your table element js assert lengthOf(document querySelectorAll('table tbody'), 1); Your tbody element should have at least five rows js assert isAtLeast(document querySelectorAll('tbody tr') length, 5); Each row in your tbody element should have exactly four td elements as children ```js const rows = document querySelectorAll('tbody tr'); assert isAtLeast(rows length, 1); rowsforEach(row => {\nassert lengthOf(row querySelectorAll('td'), 4);\nassert lengthOf(row children, 4);\n});\n```\nEach td element in your table body should have text with book information ```js\nconst tds = document querySelectorAll('tbody tr td');\nassert isAtLeast(tds length, 1);\ntds forEach(td => {\nassert isAtLeast(td textContent length, 1);\n});\n```\nYou should have one tfoot element within your table element js\nassert lengthOf(document querySelectorAll('table tfoot'), 1);\nYou should have exactly one tr element in your tfoot element js\nassert lengthOf(document querySelectorAll('tfoot tr'), 1);\nThe td element in your tfoot element's row should have it's colspan attribute set to 4 js\nassert equal(document querySelector('tfoot tr td') colSpan, 4);\nThe td element in your tfoot element's row should have the text Total Books: [number of books in your table] js\nconst numberOfBooks = document querySelectorAll('tbody tr') length;\nassert equal(document querySelector('tfoot tr td')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-catalog-table\\66ec4c8e9878d8441956516f.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "507d121b94992450c445f1e17f443ed6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-catalog-table\\66ec4c8e9878d8441956516f.md",
    "source_type": "git_repo",
    "title": "Book Catalog",
    "content": "tfoot'), 1); You should have exactly one tr element in your tfoot element js assert lengthOf(document querySelectorAll('tfoot tr'), 1); The td element in your tfoot element's row should have it's colspan attribute set to 4 js assert equal(document querySelector('tfoot tr td') colSpan, 4); The td element in your tfoot element's row should have the text Total Books: [number of books in your table] js const numberOfBooks = document querySelectorAll('tbody tr') length; assert equal(document querySelector('tfoot tr td')textContent, `Total Books: ${numberOfBooks}`);\n--seed--\n--seed-contents--\n```html\nBook Catalog\n```\n--solutions--\n```html\nBook Catalog\nBook Catalog\nTitle\nAuthor\nGenre\nPublication Year\nHow to Contribute to Open-Source Projects – A Handbook for Beginners\nHillary Nyakundi\nOpen Source\n2023\nLearn Linux for Beginners: From Basics to Advanced Techniques\nZaira Hira\nLinux\n2024\nHow to Learn to Code and Get a Developer Job\nQuincy Larson\nLearn To Code\n2024\nThe Regular Expressions Book – RegEx for JavaScript Developers\nKolade Chris\nRegular Expressions\n2023\nThe Python Code Example Handbook\nFarhan Hasin Chowdhury\nPython\n2023\nTotal Books: 5\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-catalog-table\\66ec4c8e9878d8441956516f.md",
      "source_type": "git_repo"
    },
    "token_count": 286,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "712e4066405a60522744e1e87d7e18ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-availability-table\\66b36358ed4f261d64840c24.md",
    "source_type": "git_repo",
    "title": "Availability Table",
    "content": "id: 66b36358ed4f261d64840c24\ntitle: Build an Availability Table\nchallengeType: 25\ndashedName: build-an-availability-table\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a table with at least three columns and five rows, headers included Cells in the first row should be table headers containing days of the week Cells in the first column should be table headers with a class of time and should contain time values as their text All data cells should have the class of available-#, where # is a number from 0 to 5 that specifies the number of available people at that time In your :root selector, you should define six CSS variables named --color#, where # is a number from 0 to 5, and assign them each a color value Use these variables to set the background color of the corresponding available-# elements In your :root selector, you should define CSS variables named --solid-border and --dashed-border Use these variables to style the bottom borders of your data cells, alternating between solid and dashed borders depending on the row Give the rows either the class of sharp or half to style them You should have a div element with the id of legend It should contain a span element with the text Availability and a div element with the id of legend-gradient You should give the #legend-gradient element a linear gradient that transitions between all the colors from --color0 to --color5 Each color value should have two color stops (expressed as percentages) to make the transition between colors a hard line Note: Be sure to link your stylesheet in your HTML to apply your CSS --hints--\nYou should have a table element js\nassert isNotNull(document querySelector('table'));\nYou should have only one table element js\nassert lengthOf(document querySelectorAll('table'), 1);\nYour table should have at least 5 rows js\nassert isAtLeast(document querySelectorAll('tr') length, 5);\nYour table should have at least 3 columns js\nconst rows = [ document querySelectorAll('tr')];\nassert isNotEmpty(rows);\nrows forEach((row) => {\nassert isAtLeast(row children length, 3);\n})\nThe first row in your table should contain at least three th elements js\nassert isAtLeast(document querySelectorAll('tr:first-child>th')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18739,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-availability-table\\66b36358ed4f261d64840c24.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "64e46c2eeba2619174fe4cfe75fcc925",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-availability-table\\66b36358ed4f261d64840c24.md",
    "source_type": "git_repo",
    "title": "Availability Table",
    "content": "table element js assert isNotNull(document querySelector('table')); You should have only one table element js assert lengthOf(document querySelectorAll('table'), 1); Your table should have at least 5 rows js assert isAtLeast(document querySelectorAll('tr') length, 5); Your table should have at least 3 columns js const rows = [ document querySelectorAll('tr')]; assert isNotEmpty(rows); rows forEach((row) => { assert isAtLeast(row children length, 3); }) The first row in your table should contain at least three th elements js assert isAtLeast(document querySelectorAll('tr:first-child>th')length, 3)\nThe first row in your table should not contain td elements js\nconst firstRow = document querySelector('tr');\nassert isNotNull(firstRow);\nassert isEmpty(firstRow querySelectorAll('td'));\nYou should have at least two rows with the class of sharp js\nassert isAtLeast(document querySelectorAll('tr[class~=\"sharp\"]') length, 2);\nYou should have at least two rows with the class of half js\nassert isAtLeast(document querySelectorAll('tr[class~=\"half\"]') length, 2);\nth elements in the first column should have the class of time and contain time values js\nconst firstColumnData = [ document querySelectorAll('tr th:first-child')];\nassert isNotEmpty(firstColumnData);\nfor (let cell of firstColumnData) {\nif (cell innerText match(/\\d/) length) {\nassert isTrue(cell classList contains('time'));\n}\n}\nYou should have at least four th elements with the class of time that contain time values js\nconst timeClass = document querySelectorAll(' time');\nassert isAtLeast(timeClass length, 4);\nfor (let cell of timeClass) {\nassert match(cell innerText, /\\d/)\n}\nAll your td elements should have the class of available-#, where # is a number from 0 to 5 js\nconst cells = [ document querySelectorAll('tr[class=\"sharp\"]>td, tr[class=\"half\"]>td')];\nassert isNotEmpty(cells);\nfor (let cell of cells) {\nconst classString = [ cell classList] join(' ');\nassert lengthOf(classString match(/( <=\\s|^)available-[0-5]( =\\s|$)/gm), 1);\n}\nYou should have at least eight available-# elements, where # is a number between 0 and 5",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18739,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-availability-table\\66b36358ed4f261d64840c24.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "e3c16521f4c0659c5812ba7526e1f270",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-availability-table\\66b36358ed4f261d64840c24.md",
    "source_type": "git_repo",
    "title": "Availability Table",
    "content": "cell of timeClass) { assert match(cell innerText, /\\d/) } All your td elements should have the class of available-#, where # is a number from 0 to 5 js const cells = [ document querySelectorAll('tr[class=\"sharp\"]>td, tr[class=\"half\"]>td')]; assert isNotEmpty(cells); for (let cell of cells) { const classString = [ cell classList] join(' '); assert lengthOf(classString match(/( <=\\s|^)available-[0-5]( =\\s|$)/gm), 1); } You should have at least eight available-# elements, where # is a number between 0 and 5js\nassert isAtLeast(document querySelectorAll('td[class*=\"available-\"]') length, 8);\nYou should define a --color0 variable in your root selector js\nconst root = new __helpers CSSHelp(document) getStyle(':root');\nassert exists(root);\nassert isNotEmpty(root getPropVal('--color0'))\nYou should define a --color1 variable in your root selector js\nconst root = new __helpers CSSHelp(document) getStyle(':root');\nassert exists(root);\nassert isNotEmpty(root getPropVal('--color1'))\nYou should define a --color2 variable in your root selector js\nconst root = new __helpers CSSHelp(document) getStyle(':root');\nassert exists(root);\nassert isNotEmpty(root getPropVal('--color2'))\nYou should define a --color3 variable in your root selector js\nconst root = new __helpers CSSHelp(document) getStyle(':root');\nassert exists(root);\nassert isNotEmpty(root getPropVal('--color3'));\nYou should define a --color4 variable in your root selector js\nconst root = new __helpers CSSHelp(document) getStyle(':root');\nassert exists(root);\nassert isNotEmpty(root getPropVal('--color4'));\nYou should define a --color5 variable in your root selector js\nconst root = new __helpers CSSHelp(document) getStyle(':root');\nassert exists(root);\nassert isNotEmpty(root getPropVal('--color5'));\nYou should use --color0 to set the background color of available-0 elements js\nconst a = new __helpers CSSHelp(document) getStyle(' available-0');\nassert exists(a);\nassert strictEqual(a backgroundColor, 'var(--color0)');\nYou should use --color1 to set the background color of available-1 elements js\nconst a = new __helpers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18739,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-availability-table\\66b36358ed4f261d64840c24.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "ee4ddd133e4c46be6ee67a6a9be4f634",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-availability-table\\66b36358ed4f261d64840c24.md",
    "source_type": "git_repo",
    "title": "Availability Table",
    "content": "__helpers CSSHelp(document) getStyle(':root'); assert exists(root); assert isNotEmpty(root getPropVal('--color4')); You should define a --color5 variable in your root selector js const root = new __helpers CSSHelp(document) getStyle(':root'); assert exists(root); assert isNotEmpty(root getPropVal('--color5')); You should use --color0 to set the background color of available-0 elements js const a = new __helpers CSSHelp(document) getStyle(' available-0'); assert exists(a); assert strictEqual(a backgroundColor, 'var(--color0)'); You should use --color1 to set the background color of available-1 elements js const a = new __helpersCSSHelp(document) getStyle(' available-1');\nassert exists(a);\nassert strictEqual(a backgroundColor, 'var(--color1)');\nYou should use --color2 to set the background color of available-2 elements js\nconst a = new __helpers CSSHelp(document) getStyle(' available-2');\nassert exists(a);\nassert strictEqual(a backgroundColor, 'var(--color2)');\nYou should use --color3 to set the background color of available-3 elements js\nconst a = new __helpers CSSHelp(document) getStyle(' available-3');\nassert exists(a);\nassert strictEqual(a backgroundColor, 'var(--color3)');\nYou should use --color4 to set the background color of available-4 elements js\nconst a = new __helpers CSSHelp(document) getStyle(' available-4');\nassert exists(a);\nassert strictEqual(a backgroundColor, 'var(--color4)');\nYou should use --color5 to set the background color of available-5 elements js\nconst a = new __helpers CSSHelp(document) getStyle(' available-5');\nassert exists(a);\nassert strictEqual(a backgroundColor, 'var(--color5)');\nYou should define a --solid-border variable in your root selector js\nconst root = new __helpers CSSHelp(document) getStyle(':root');\nassert exists(root);\nassert isNotEmpty(root getPropVal('--solid-border'));\nYou should define a --dashed-border variable in your root selector js\nconst root = new __helpers CSSHelp(document) getStyle(':root');\nassert exists(root);\nassert isNotEmpty(root getPropVal('--dashed-border'));\nYou should target td elements that are children of sharp elements js\nconst tds = new __helpers CSSHelp(document) getStyle(' sharp td') || new __helpers CSSHelp(document) getStyle('",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18739,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-availability-table\\66b36358ed4f261d64840c24.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "4e1f4990a2d3f07201f2079c075744af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-availability-table\\66b36358ed4f261d64840c24.md",
    "source_type": "git_repo",
    "title": "Availability Table",
    "content": "assert strictEqual(a backgroundColor, 'var(--color5)'); You should define a --solid-border variable in your root selector js const root = new __helpers CSSHelp(document) getStyle(':root'); assert exists(root); assert isNotEmpty(root getPropVal('--solid-border')); You should define a --dashed-border variable in your root selector js const root = new __helpers CSSHelp(document) getStyle(':root'); assert exists(root); assert isNotEmpty(root getPropVal('--dashed-border')); You should target td elements that are children of sharp elements js const tds = new __helpers CSSHelp(document) getStyle(' sharp td') || new __helpers CSSHelp(document) getStyle('sharp>td');\nassert exists(tds);\nYou should use --solid-border to set the bottom-border of td elements that are children of sharp elements js\nconst tds = new __helpers CSSHelp(document) getStyle(' sharp td') || new __helpers CSSHelp(document) getStyle(' sharp>td');\nassert exists(tds);\nassert strictEqual(tds borderBottom, 'var(--solid-border)');\nYou should target td elements that are children of half elements js\nconst tds = new __helpers CSSHelp(document) getStyle(' half td') || new __helpers CSSHelp(document) getStyle(' half>td');\nassert exists(tds);\nYou should use --dashed-border to set the bottom-border of td elements of half elements js\nconst tds = new __helpers CSSHelp(document) getStyle(' half td') || new __helpers CSSHelp(document) getStyle(' half>td');\nassert exists(tds);\nassert strictEqual(tds borderBottom, 'var(--dashed-border)');\nYou should have a div element with the id of legend js\nassert equal(document querySelector('#legend') tagName, 'DIV');\nYou should have a span element with the text Availability inside your #legend js\nassert equal(document querySelector('#legend span') innerText, 'Availability');\nYou should have a div element with the id of legend-gradient inside your #legend js\nassert equal(document querySelector('#legend #legend-gradient') tagName, 'DIV');\nYou should set the background image of #legend-gradient to a linear gradient js\nconst legendGradient = new __helpers CSSHelp(document) getStyle('#legend-gradient');\nassert exists(legendGradient);\nassert include(legendGradient",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18739,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-availability-table\\66b36358ed4f261d64840c24.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "50adf72c261fe2b26ffb9bb00c258dcf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-availability-table\\66b36358ed4f261d64840c24.md",
    "source_type": "git_repo",
    "title": "Availability Table",
    "content": "with the id of legend js assert equal(document querySelector('#legend') tagName, 'DIV'); You should have a span element with the text Availability inside your #legend js assert equal(document querySelector('#legend span') innerText, 'Availability'); You should have a div element with the id of legend-gradient inside your #legend js assert equal(document querySelector('#legend #legend-gradient') tagName, 'DIV'); You should set the background image of #legend-gradient to a linear gradient js const legendGradient = new __helpers CSSHelp(document) getStyle('#legend-gradient'); assert exists(legendGradient); assert include(legendGradientbackgroundImage, \"linear-gradient(\")\nYou should use two color-stops (expressed in percentage) to make the transition from one color to the following color a hard line for your #legend-gradient Remember to use your --color# variables js\nconst legendGradient = new __helpers CSSHelp(document) getStyle('#legend-gradient');\nassert exists(legendGradient);\nconst matched = legendGradient backgroundImage match(/var\\(\\s*--color[0-5]\\s*\\)\\s+\\d+%(\\s+\\d+%) /g);\nassert lengthOf(matched, 6);\nmatched forEach((arg, i) => {\nif (i == 0 && i == 5) assert lengthOf(arg match(/%/g), 2);\n})\n--seed--\n--seed-contents--\n```html\nAvailability Table\n```\n```css\n```\n--solutions--\n```html\nAvailability Table\n9 AM\nMonday\nTuesday\nWednesday\nThursday\nFriday\n10 AM\n11 AM\n12 PM\n1 PM\n2 PM\n3 PM\n4 PM\n5 PM\nAvailability\n0\n5+\n```\n```css\n:root {\nfont-size: 16px;\nfont-family: Arial, Helvetica, sans-serif;\n--color0: hsl(0, 0%, 100%);\n--color1: hsl(120, 95%, 90%);\n--color2: hsl(120, 95%, 80%);\n--color3: hsl(120, 95%, 65%);\n--color4: hsl(120, 95%, 40%);\n--color5: hsl(120, 95%, 25%);\n--solid-border: 0 1rem solid black;\n--dashed-border: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18739,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-availability-table\\66b36358ed4f261d64840c24.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "07cbd763c36170d64c076c38cf95e868",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-availability-table\\66b36358ed4f261d64840c24.md",
    "source_type": "git_repo",
    "title": "Availability Table",
    "content": "Availability Table ``` ```css ``` --solutions-- ```html Availability Table 9 AM Monday Tuesday Wednesday Thursday Friday 10 AM 11 AM 12 PM 1 PM 2 PM 3 PM 4 PM 5 PM Availability 0 5+ ``` ```css :root { font-size: 16px; font-family: Arial, Helvetica, sans-serif; --color0: hsl(0, 0%, 100%); --color1: hsl(120, 95%, 90%); --color2: hsl(120, 95%, 80%); --color3: hsl(120, 95%, 65%); --color4: hsl(120, 95%, 40%); --color5: hsl(120, 95%, 25%); --solid-border: 0 1rem solid black; --dashed-border: 009rem dashed black;\n}\n{\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\nbody {\nbackground-color: hsl(150, 30%, 75%);\nwidth: 100vw;\nheight: 100vh;\n}\nmain {\nwidth: 100%;\nheight: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: space-evenly;\n}\ntable {\nborder-collapse: collapse;\ntable-layout: fixed;\nwidth: 32rem;\n}\ntr {\nheight: 1 1rem;\n}\ntr :first-child {\nwidth: 4rem;\n}\ntd {\nborder-right: var(--solid-border);\nborder-left: var(--solid-border);\n} sharp td {\nborder-bottom: var(--solid-border);\n} sharp th:not([class*=\"time\"]) {\nborder-bottom: var(--solid-border);\n} half td {\nborder-bottom: var(--dashed-border);\n}\ntbody :last-child td {\nborder: 0;\n} time {\ntext-align: right;\nborder: 0;\npadding: 0 4rem;\n} available-0 {\nbackground-color: var(--color0);\n} available-1 {\nbackground-color: var(--color1);\n} available-2 {\nbackground-color: var(--color2);\n} available-3 {\nbackground-color: var(--color3);\n} available-4 {\nbackground-color: var(--color4);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18739,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-availability-table\\66b36358ed4f261d64840c24.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "3160089ce54ef8d349444f36ba96769a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-availability-table\\66b36358ed4f261d64840c24.md",
    "source_type": "git_repo",
    "title": "Availability Table",
    "content": "1 1rem; } tr :first-child { width: 4rem; } td { border-right: var(--solid-border); border-left: var(--solid-border); } sharp td { border-bottom: var(--solid-border); } sharp th:not([class*=\"time\"]) { border-bottom: var(--solid-border); } half td { border-bottom: var(--dashed-border); } tbody :last-child td { border: 0; } time { text-align: right; border: 0; padding: 0 4rem; } available-0 { background-color: var(--color0); } available-1 { background-color: var(--color1); } available-2 { background-color: var(--color2); } available-3 { background-color: var(--color3); } available-4 { background-color: var(--color4); }available-5 {\nbackground-color: var(--color5);\n}\nlegend {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nwidth: 18rem;\nheight: 3 5rem;\ntext-align: center;\n}\nlegend span {\ndisplay: inline-block;\nwidth: 5rem;\nheight: 2rem;\n}\nlegend-gradient {\nwidth: 100%;\nheight: 60%;\nborder: var(--solid-border);\nbackground-image: linear-gradient(90deg,\nvar(--color0) 0% 17%,\nvar(--color1) 17% 34%,\nvar(--color2) 34% 50%,\nvar(--color3) 50% 67%,\nvar(--color4) 67% 83%,\nvar(--color5) 83% 100%);\n}\nlegend-line {\nwidth: 60%;\nheight: 100%;\ndisplay: flex;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18739,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-availability-table\\66b36358ed4f261d64840c24.md",
      "source_type": "git_repo"
    },
    "token_count": 369,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "fbda8eea85038efa760ae990da787b17",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-organizer\\67172b43f84bcd2dec238a3d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67172b43f84bcd2dec238a3d\ntitle: Build a Book Organizer\nchallengeType: 26\ndashedName: build-a-book-organizer\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have an array of objects named books where each object in the array should have a string title, another string authorName, and a number releaseYear Your books array should have a minimum of three objects You should have a callback function named sortByYear that accepts two books as parameter for sorting the array The sortByYear function should return -1 if the releaseYear of the first book is smaller than that of the second book The sortByYear function should return 1 if the releaseYear of the first book is bigger than that of the second book The sortByYear function should return 0 if both releaseYear values are equal You should filter out books written after a certain year such as 1950 from the books array and save the filtered array in a new array named filteredBooks You should sort the books in the filteredBooks array according to their releaseYear in ascending order You learned in a prior lecture that the sort() method will sort the array in place This means the filteredBooks array will be mutated --hints--\nYou should have a function sortByYear in your code js\nassert isFunction(sortByYear);\nYour sortByYear function should take two parameters js\nassert lengthOf(sortByYear, 2);\nYour sortByYear function should return -1 if the releaseYear of book1 object is smaller than that of the book2 object, 1 if the releaseYear of book1 object is larger than that of the book2 object, and 0 in all other scenarios js\nassert equal(sortByYear({releaseYear: 1913}, {releaseYear: 1925}), -1);\nassert equal(sortByYear({releaseYear: 1925}, {releaseYear: 1913}), 1);\nassert equal(sortByYear({releaseYear: 1925}, {releaseYear: 1925}), 0);\nYou should have an array books in your code js\nassert isArray(books)\nYour books array should have at least three book objects js\nassert isAtLeast(books length, 3)\nYour books array should contain objects each with a string title, another string authorName, and a number releaseYear ```js\nbooks",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4317,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-organizer\\67172b43f84bcd2dec238a3d.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "2029b6cf33419c15b2f23d29c6adce3b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-organizer\\67172b43f84bcd2dec238a3d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of the book2 object, and 0 in all other scenarios js assert equal(sortByYear({releaseYear: 1913}, {releaseYear: 1925}), -1); assert equal(sortByYear({releaseYear: 1925}, {releaseYear: 1913}), 1); assert equal(sortByYear({releaseYear: 1925}, {releaseYear: 1925}), 0); You should have an array books in your code js assert isArray(books) Your books array should have at least three book objects js assert isAtLeast(books length, 3) Your books array should contain objects each with a string title, another string authorName, and a number releaseYear ```js booksforEach((book) => {\nassert isObject(book);\nassert sameMembers(Object keys(book), [\"title\", \"authorName\", \"releaseYear\"]);\nassert isString(book title);\nassert isNotEmpty(book title);\nassert isString(book authorName);\nassert isNotEmpty(book authorName);\nassert isNumber(book releaseYear);\n})\n```\nYou should have an array filteredBooks in your code js\nassert isArray(filteredBooks)\nThe filteredBooks array should have some of the books filtered out from the books array and not be empty js\nassert isBelow(filteredBooks length, books length)\nassert isNotEmpty(filteredBooks)\nYou should call the sort higher order function by passing the sortByYear callback function on the filteredBooks array js\nassert match(__helpers removeJSComments(code), /\\s*filteredBooks\\s*\\ \\s*sort\\s*\\(\\s*sortByYear\\s*\\)/);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nfunction sortByYear(book1, book2) {\nif (book1 releaseYear < book2 releaseYear) {\nreturn -1;\n}\nif (book1 releaseYear > book2 releaseYear) {\nreturn 1;\n}\nreturn 0;\n}\nconst books = [\n{\ntitle: \"The Great Gatsby\",\nauthorName: \"F",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4317,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-organizer\\67172b43f84bcd2dec238a3d.md",
      "source_type": "git_repo"
    },
    "token_count": 410,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "03c82d31fe02070e18ff1609e12e0af7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-organizer\\67172b43f84bcd2dec238a3d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js assert isBelow(filteredBooks length, books length) assert isNotEmpty(filteredBooks) You should call the sort higher order function by passing the sortByYear callback function on the filteredBooks array js assert match(__helpers removeJSComments(code), /\\s*filteredBooks\\s*\\ \\s*sort\\s*\\(\\s*sortByYear\\s*\\)/); --seed-- --seed-contents-- ```js ``` --solutions-- ```js function sortByYear(book1, book2) { if (book1 releaseYear < book2 releaseYear) { return -1; } if (book1 releaseYear > book2 releaseYear) { return 1; } return 0; } const books = [ { title: \"The Great Gatsby\", authorName: \"FScott Fitzgerald\",\nreleaseYear: 1925,\n},\n{\ntitle: \"In Search of Lost Time\",\nauthorName: \"Marcel Proust\",\nreleaseYear: 1913,\n},\n{\ntitle: \"Ulysses\",\nauthorName: \"James Joyce\",\nreleaseYear: 1922,\n},\n{\ntitle: \"One Hundred Years of Solitude\",\nauthorName: \"Gabriel García Márquez\",\nreleaseYear: 1967,\n},\n{\ntitle: \"The Catcher in the Rye\",\nauthorName: \"J D Salinger\",\nreleaseYear: 1951,\n},\n];\nlet filteredBooks = books filter((book) => book releaseYear < 1950);\nfilteredBooks sort(sortByYear);\nconsole log(\"Books Written Before 1950 (sorted according to release year)\");\nfilteredBooks forEach((book) => {\nconsole log(${book title} by ${book authorName} (${book releaseYear}));\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4317,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-organizer\\67172b43f84bcd2dec238a3d.md",
      "source_type": "git_repo"
    },
    "token_count": 346,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "96e42358c1ba61ad1eacbcbb57ae9ae2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-boolean-check\\a77dbc43c33f39daa4429b4f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a77dbc43c33f39daa4429b4f\ntitle: Build a Boolean Check Function\nchallengeType: 26\ndashedName: build-a-boolean-check-function\n--description--\nIn this lab you will build a function that check if a value is classified as a boolean primitive.\nBoolean primitives are true and false.\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab.\nUser Stories:\nYou should have a function called booWho that receives one argument.\nIf the argument received is a boolean primitive, the function should return true.\nIf the argument is any other value, the function should return false.\n--hints--\nYou should have a booWho function.\njs\nassert.isFunction(booWho);\nbooWho(true) should return true.\njs\nassert.isTrue(booWho(true));\nbooWho(false) should return true.\njs\nassert.isTrue(booWho(false));\nbooWho([1, 2, 3]) should return false.\njs\nassert.isFalse(booWho([1, 2, 3]));\nbooWho([].slice) should return false.\njs\nassert.isFalse(booWho([].slice));\nbooWho({ \"a\": 1 }) should return false.\njs\nassert.isFalse(booWho({ a: 1 }));\nbooWho(1) should return false.\njs\nassert.isFalse(booWho(1));\nbooWho(NaN) should return false.\njs\nassert.isFalse(booWho(NaN));\nbooWho(\"a\") should return false.\njs\nassert.isFalse(booWho('a'));\nbooWho(\"true\") should return false.\njs\nassert.isFalse(booWho('true'));\nbooWho(\"false\") should return false.\njs\nassert.isFalse(booWho('false'));\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nfunction booWho(bool) {\nreturn typeof bool === 'boolean';\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1704,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-boolean-check\\a77dbc43c33f39daa4429b4f.md",
      "source_type": "git_repo"
    },
    "token_count": 408,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "54e2cf3f44aa6924f24db9ed83296278",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-business-card\\6690e10ebe2181212abc9652.md",
    "source_type": "git_repo",
    "title": "Business Card",
    "content": "id: 6690e10ebe2181212abc9652\ntitle: Design a Business Card\nchallengeType: 25\ndashedName: design-a-business-card\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should link the style sheet styles css using the link tag in the head section of the HTML file Your page background should be rosybrown The overall font should be Arial, with a fallback of sans-serif All of the p elements should have a top and bottom margin of 5px All links on the page should not be underlined You should have a div with a class attribute with a value of business-card that will contain all the other elements The business-card selector should have properties to set the element as 300px wide and a background color of your choice Also you should set a padding of 20px all around and a top margin of 100px The text should be center aligned and the font size should be 16px The left and right margins should be set to auto Inside the business-card element, there should be an img element with a class attribute with a value of profile-image You can set the image source to https://cdn freecodecamp org/curriculum/labs/flower jpg if you like There should be an alt with a meaningful description The profile-image selector should have a max-width property with a value of 100% Inside the business-card element, after the img element, you should have three p elements with a class attribute that has, respectively, a value of full-name, designation, and company The first p element should contain your name The second p element should contain your designation The third p element should have your company name There should be an hr element below the third p element After the hr element, there should be two p elements In the first p element, you should have an email address as the text In the second p element, the text should be a phone number After the two p elements, there should be an a element with the text Portfolio linking to a valid URL Add an hr element after the a element containing the portfolio link You should have another div element with a class attribute with a value of social-media Within this element, there should be an h2 element with the text Connect with me Inside the social-media elements, there should be three a elements",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12601,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-business-card\\6690e10ebe2181212abc9652.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "9fc011d2217bdf549914a8a9b43a05f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-business-card\\6690e10ebe2181212abc9652.md",
    "source_type": "git_repo",
    "title": "Business Card",
    "content": "be a phone number After the two p elements, there should be an a element with the text Portfolio linking to a valid URL Add an hr element after the a element containing the portfolio link You should have another div element with a class attribute with a value of social-media Within this element, there should be an h2 element with the text Connect with me Inside the social-media elements, there should be three a elementsThe a elements should have the text Twitter, LinkedIn and GitHub respectively with links to valid websites --hints--\nYour link element should be within your head element js\nconst link = document querySelector('head > link');\nassert isNotNull(link);\nYour link element should have a rel attribute with the value stylesheet js\nconst linkRelValue = document querySelector('link') getAttribute('rel');\nassert strictEqual(linkRelValue, 'stylesheet');\nYour link element should have an href attribute with the value styles css js\nconst linkHrefValue = document querySelector('link') dataset href;\nassert strictEqual(linkHrefValue, 'styles css');\nYou should set the page background color in the body selector to rosybrown js\nassert strictEqual(new __helpers CSSHelp(document) getStyle('body') getPropVal('background-color'), 'rosybrown');\nYou should set the page font to Arial in the body element with a fallback of sans-serif js\nconst el = new __helpers CSSHelp(document) getStyle('body') getPropVal('font-family');\nconst condition1= el === 'Arial, sans-serif';\nconst condition2= el === '\"Arial\", sans-serif';\nassert isTrue(condition1 || condition2);\nYour p elements should have a top and bottom margin of 5px ```js\nconst marginTop = new __helpers CSSHelp(document) getStyle('p') getPropVal('margin-top');\nconst marginBottom = new __helpers CSSHelp(document) getStyle('p') getPropVal('margin-bottom');\nassert equal(marginTop, '5px');\nassert equal(marginBottom, '5px');\n```\nThe links of the page should have no underline js\nassert equal(new __helpers CSSHelp(document) getStyle('a') getPropVal('text-decoration'), 'none');\nYou should have one main div with a class attribute with a value of business-card js\nassert strictEqual(document querySelector('div') getAttribute('class'), 'business-card');\nYour business-card selector should have a width property with a value of 300px js\nassert equal(new __helpers CSSHelp(document)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12601,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-business-card\\6690e10ebe2181212abc9652.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "1ea3ca1bfefd0b907a5db38d0d13511b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-business-card\\6690e10ebe2181212abc9652.md",
    "source_type": "git_repo",
    "title": "Business Card",
    "content": "new __helpers CSSHelp(document) getStyle('p') getPropVal('margin-top'); const marginBottom = new __helpers CSSHelp(document) getStyle('p') getPropVal('margin-bottom'); assert equal(marginTop, '5px'); assert equal(marginBottom, '5px'); ``` The links of the page should have no underline js assert equal(new __helpers CSSHelp(document) getStyle('a') getPropVal('text-decoration'), 'none'); You should have one main div with a class attribute with a value of business-card js assert strictEqual(document querySelector('div') getAttribute('class'), 'business-card'); Your business-card selector should have a width property with a value of 300px js assert equal(new __helpers CSSHelp(document)getStyle(' business-card') getPropVal('width'), '300px');\nYour business-card selector should have a background-color property with a valid color value js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(' business-card') backgroundColor);\nYour business-card selector should have a padding property with a value of 20px js\nassert equal(new __helpers CSSHelp(document) getStyle(' business-card') getPropVal('padding'), '20px');\nYour business-card selector should have a top margin of 100px js\nassert equal(new __helpers CSSHelp(document) getStyle(' business-card') getPropVal('margin-top'), '100px');\nThe text inside the business-card element should be center-aligned js\nassert equal(new __helpers CSSHelp(document) getStyle(' business-card') getPropVal('text-align'), 'center');\nThe font size of the text inside the business-card element should be 16px js\nassert equal(new __helpers CSSHelp(document) getStyle(' business-card') getPropVal('font-size'), '16px');\nThe left and right margins of the business-card element should be set to auto js\nassert equal(new __helpers CSSHelp(document) getStyle(' business-card') getPropVal('margin-left'), 'auto');\nassert equal(new __helpers CSSHelp(document) getStyle(' business-card') getPropVal('margin-right'), 'auto');\nInside the business-card element, there should be an img element with a class attribute with a value ofprofile-image js\nassert exists(document querySelector('img profile-image'));\nThe image source should be set to a valid image js\nassert isAbove(document querySelector(' profile-image') getAttribute('src')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12601,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-business-card\\6690e10ebe2181212abc9652.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "64919ce9653147c117f7b990a0dc7c36",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-business-card\\6690e10ebe2181212abc9652.md",
    "source_type": "git_repo",
    "title": "Business Card",
    "content": "__helpers CSSHelp(document) getStyle(' business-card') getPropVal('font-size'), '16px'); The left and right margins of the business-card element should be set to auto js assert equal(new __helpers CSSHelp(document) getStyle(' business-card') getPropVal('margin-left'), 'auto'); assert equal(new __helpers CSSHelp(document) getStyle(' business-card') getPropVal('margin-right'), 'auto'); Inside the business-card element, there should be an img element with a class attribute with a value ofprofile-image js assert exists(document querySelector('img profile-image')); The image source should be set to a valid image js assert isAbove(document querySelector(' profile-image') getAttribute('src')length, 0);\nThe alt attribute of the image should be set to a meaningful description js\nassert isAbove(document querySelector('img') alt length, 0);\nYour profile-image selector should have a max-width property with a value of 100% js\nassert equal(new __helpers CSSHelp(document) getStyle(' profile-image') getPropVal('max-width'), '100%');\nInside the business-card element, after the img element, there should be a p element with a class attribute with a value of full-name js\nassert exists(document querySelector('div business-card p full-name'));\nAfter the full-name element, there should be a p element with a class attribute with a value ofdesignation js\nassert exists(document querySelector('div business-card p designation'));\nAfter the designation element, there should be a p element with a class attribute with a value of company js\nassert exists(document querySelector('div business-card p company'));\nThe first p element, the one with class of full-name, should contain your name js\nassert isAbove(document querySelector(\" full-name\") innerText length, 0);\nThe second p element, the one with a class attribute of designation, should contain your designation js\nassert isAbove(document querySelector(\" designation\") innerText length, 0);\nThe third p element, the one with the class attribute with a value ofcompany, should contain your company name js\nassert isAbove(document querySelector(\" company\") innerText length, 0);\nAfter the third p element, the one with the class attribute with a value of company, there should be an hr element js\nassert exists(document querySelector('p company + hr'));\nAfter the first hr element, there should be a p element with an email address as your text js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12601,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-business-card\\6690e10ebe2181212abc9652.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "ec5a86408fe1a508c1c4a46c908db2b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-business-card\\6690e10ebe2181212abc9652.md",
    "source_type": "git_repo",
    "title": "Business Card",
    "content": "The third p element, the one with the class attribute with a value ofcompany, should contain your company name js assert isAbove(document querySelector(\" company\") innerText length, 0); After the third p element, the one with the class attribute with a value of company, there should be an hr element js assert exists(document querySelector('p company + hr')); After the first hr element, there should be a p element with an email address as your text js assertisAbove(document querySelectorAll(' business-card hr + p')[0] innerText length, 0);\nAfter the email p element, there should be another p element with a phone number as your text js\nassert match(document querySelectorAll(\" business-card p\")[4] textContent,/ +/);\nAfter the phone number p element, there should be an a element with the text Portfolio\njs\nassert equal(document querySelector(' business-card > a') textContent, 'Portfolio');\nYour portfolio a element should have a valid href js\nassert isAbove(document querySelectorAll(' business-card a')[0] href length, 0);\nAfter the a element containing your portfolio, there should be another hr element as a divider js\nassert exists(document querySelector('a + hr'));\nAfter the second hr element, there should be a div element with a class attribute with a value of social-media js\nassert exists(document querySelector('div business-card div social-media'));\nInside the social-media element, there should be an h2 element with the text Connect with me js\nassert equal(document querySelector(' social-media h2') textContent, 'Connect with me');\nInside the social-media element there should be three a elements js\nassert lengthOf(document querySelectorAll(' social-media a'), 3);\nThe first a element should have the text Twitter js\nassert equal(document querySelectorAll(\" social-media a\")[0] textContent, 'Twitter');\nThe href of the first a element should point to a valid link js\nassert isAbove(document querySelectorAll(' social-media a')[0] getAttribute('href') length, 0);\nThe second a element should have the text LinkedIn ```js\nassert equal(document querySelectorAll(\" social-media a\")[1] textContent, 'LinkedIn');\n```\nThe href of the second a element should point to a valid link js\nassert isAbove(document querySelectorAll(' social-media a')[1] getAttribute('href') length, 0);\nThe third a element should have the text GitHub js\nassert equal(document querySelectorAll(\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12601,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-business-card\\6690e10ebe2181212abc9652.md",
      "source_type": "git_repo"
    },
    "token_count": 519,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "71edfe5e6c374ffc5f5b3854e7007593",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-business-card\\6690e10ebe2181212abc9652.md",
    "source_type": "git_repo",
    "title": "Business Card",
    "content": "'Twitter'); The href of the first a element should point to a valid link js assert isAbove(document querySelectorAll(' social-media a')[0] getAttribute('href') length, 0); The second a element should have the text LinkedIn ```js assert equal(document querySelectorAll(\" social-media a\")[1] textContent, 'LinkedIn'); ``` The href of the second a element should point to a valid link js assert isAbove(document querySelectorAll(' social-media a')[1] getAttribute('href') length, 0); The third a element should have the text GitHub js assert equal(document querySelectorAll(\"social-media a\")[2] textContent, 'GitHub');\nThe href of the third a element should point to a valid link js\nassert isAbove(document querySelectorAll(' social-media a')[2] getAttribute('href') length, 0);\n--seed--\n--seed-contents--\n```html\nBusiness Card\n```\n```css\n```\n--solutions--\n```html\nDigital Business Card\nYour Name\nSoftware Developer\n@freeCodeCamp\nEmail: your-email@example com\nPhone: (123) 456-7890\nPortfolio\nConnect with me\nTwitter\nLinkedIn\nGitHub\n```\n```css\nbody {\nbackground-color: rosybrown;\nfont-family: 'Arial', sans-serif;\n} business-card {\nbackground-color: lavenderblush;\nborder: 3px solid darkslategray;\npadding: 20px;\ntext-align: center;\nfont-size: 16px;\nwidth: 300px;\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: 100px;\n} profile-image {\nmax-width: 100%;\nwidth: 150px;\nheight: 150px;\nmargin-bottom: 10px;\nborder: 2px solid lightgray;\n} full-name {\nfont-size: 24px;\ncolor: darkslategray;\n} designation {\nfont-size: 18px;\ncolor: gray;\n} company {\nfont-size: 16px;\ncolor: darkgray;\n}\np {\nmargin: 5px 0;\n}\na {\ntext-decoration: none;\n} social-media {\nmargin-top: 10px;\nfont-size: 14px;\n} social-media a {\nmargin: 10px;\ncolor: maroon\n}\nhr {\nmargin: 20px 0;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12601,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-business-card\\6690e10ebe2181212abc9652.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "40e227c6a9ebef77263d4b0804a8b191",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-celestial-bodies-database\\5f1a4ef5d5d6b5ab580fc6ae.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5f1a4ef5d5d6b5ab580fc6ae\ntitle: Build a Celestial Bodies Database\nchallengeType: 13\nurl: freeCodeCamp/learn-celestial-bodies-database\ndashedName: lab-celestial-bodies-database\n--description--\nFor this project, you will build a database of celestial bodies using PostgreSQL.\n--instructions--\nImportant: After you pass all the project tests, save a dump of your database into a universe.sql file so you can complete step 2. There will be instructions on how to do that within the virtual machine.\n--notes--\nRequired files: universe.sql\n--hints--\n--seed--\n--solutions--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 608,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-celestial-bodies-database\\5f1a4ef5d5d6b5ab580fc6ae.md",
      "source_type": "git_repo"
    },
    "token_count": 148,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f6c131a3a4746b243bddb5b06ff2c538",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": "id: 66a207974c806a19d6607073\ntitle: Build a Book Inventory App\nchallengeType: 25\ndashedName: build-a-book-inventory-app\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have an h1 element with the text Book Inventory You should have a table element with columns named Title, Author, Category, Status, and Rate Your table should have at least four rows, the first for the column headings and the rest filled with book information Each table row inside the table body should have either the class read, to-read, or in-progress td elements of the Status column should contain a span element with the class of status surrounding the text Read, To Read, or In Progress, depending on the class of that row td elements of the Rate column should contain a span element with the class of rate wrapping three empty span elements rate elements placed inside read rows should have an additional class with the value of either one, two, or three, depending on the personal rate This value should come after rate You should create three attribute selectors to target the elements with the class of read, to-read, and in-progress, and set their background-image property to use a linear-gradient of your choice You should set the display property of each span element to inline-block You should use an attribute selector to target the span elements with the class of status that are descendants of tr elements with the class of to-read and set their border and background-image properties You should use an attribute selector to target the span elements with the class of status that are descendants of tr elements with the class of read and set their border and background-image properties You should use an attribute selector to target the span elements with the class of status that are descendants of tr elements with the class of in-progress and set their border and background-image properties You should use an attribute selector to target the span elements with the class of status and the span elements with the class value starting with rate and set their height, width, and padding properties You should use an attribute selector to target the span elements which are direct children of span elements with the class value starting with rate and set their border, border-radius, margin, height, width, and background-color properties",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 17
  },
  {
    "id": "a368e875547286a8d7a4d466fa69dcf1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": "their border and background-image properties You should use an attribute selector to target the span elements with the class of status and the span elements with the class value starting with rate and set their height, width, and padding properties You should use an attribute selector to target the span elements which are direct children of span elements with the class value starting with rate and set their border, border-radius, margin, height, width, and background-color propertiesYou should use an attribute selector to target the first descendant of span elements that have the word one as a part of their class value and set its background-image property to use a linear-gradient You should use an attribute selector to target the first two descendants of span elements that have the word two as a part of their class value and set their background-image property to use a linear-gradient You should use an attribute selector to target the three span elements that are descendants of span elements that have the word three as a part of their class value and set their background-image property to use a linear-gradient --hints--\nYou should have an h1 element with the text Book Inventory js\nassert equal(document querySelector('h1') innerText, 'Book Inventory');\nYou should have only one h1 element js\nassert equal(document querySelectorAll('h1') length, 1);\nYou should have a table element js\nassert equal(document querySelectorAll('table') length, 1);\nYour table element should have five columns js\nassert equal(document querySelectorAll('th') length, 5);\nYour first column should have the text Title as the heading js\nassert equal(document querySelectorAll('th')[0] innerText, 'Title');\nYour second column should have the text Author as the heading js\nassert equal(document querySelectorAll('th')[1] innerText, 'Author');\nYour third column should have the text Category as the heading js\nassert equal(document querySelectorAll('th')[2] innerText, 'Category');\nYour fourth column should have the text Status as the heading js\nassert equal(document querySelectorAll('th')[3] innerText, 'Status');\nYour fifth column should have the text Rate as the heading js\nassert equal(document querySelectorAll('th')[4] innerText, 'Rate');\nYour table should have at least four rows js\nconst rows = document querySelectorAll('tr');\nassert isAtLeast(rows length, 4);\nEach table row except the heading row should have either the class read, to-read, or in-progress js\nconst rows = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 511,
    "chunk_index": 1,
    "total_chunks": 17
  },
  {
    "id": "76322728c1a792fd7b854218ea5eecbd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": "querySelectorAll('th')[2] innerText, 'Category'); Your fourth column should have the text Status as the heading js assert equal(document querySelectorAll('th')[3] innerText, 'Status'); Your fifth column should have the text Rate as the heading js assert equal(document querySelectorAll('th')[4] innerText, 'Rate'); Your table should have at least four rows js const rows = document querySelectorAll('tr'); assert isAtLeast(rows length, 4); Each table row except the heading row should have either the class read, to-read, or in-progress js const rows = documentquerySelectorAll('tr');\nassert isAtLeast(rows length, 4);\nfor (let i = 1; i < rows length; i++) {\nconst classList = [ rows[i] classList];\nconst currentProgress = classList[0];\nassert oneOf(currentProgress, ['read', 'to-read', \"in-progress\"]);\n}\ntd elements of the Status column should contain a span element js\nconst statusColumnData = document querySelectorAll('td:nth-child(4)');\nassert isAbove(statusColumnData length, 0);\nfor (let e of statusColumnData) {\nassert equal(e children[0] tagName, 'SPAN');\n}\nEach span element of the Status column should have the class of status js\nconst statusSpans = document querySelectorAll('tr td:nth-child(4) :first-child');\nassert isAbove(statusSpans length, 0);\nfor (let e of statusSpans) {\nassert isTrue(e classList contains('status'));\n}\nEach status element should have the text Read, To Read, or In Progress, depending on the class of its row js\nconst statusSpans = document querySelectorAll('tr td:nth-child(4) :first-child');\nconst rows = Array from(document querySelectorAll('tr')) slice(1);\nassert isAbove(statusSpans length, 0);\nfor (let i = 0; i < rows length; i++) {\nswitch (statusSpans[i] innerText) {\ncase 'Read':\nassert isTrue(rows[i] classList contains('read'));\nbreak;\ncase 'To Read':\nassert isTrue(rows[i] classList contains('to-read'));\nbreak;\ncase 'In Progress':\nassert isTrue(rows[i] classList contains('in-progress'));\nbreak;\ndefault:\nassert fail();\n}\n}\ntd elements of the Rate column should contain a span element js\nconst rateColumnData = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 2,
    "total_chunks": 17
  },
  {
    "id": "77a7f1c0764af12cbcc04cc85520b985",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": "statusSpans = document querySelectorAll('tr td:nth-child(4) :first-child'); const rows = Array from(document querySelectorAll('tr')) slice(1); assert isAbove(statusSpans length, 0); for (let i = 0; i < rows length; i++) { switch (statusSpans[i] innerText) { case 'Read': assert isTrue(rows[i] classList contains('read')); break; case 'To Read': assert isTrue(rows[i] classList contains('to-read')); break; case 'In Progress': assert isTrue(rows[i] classList contains('in-progress')); break; default: assert fail(); } } td elements of the Rate column should contain a span element js const rateColumnData = documentquerySelectorAll('tr td:last-child');\nassert isAbove(rateColumnData length, 0);\nfor (let e of rateColumnData) {\nassert equal(e children[0] tagName, 'SPAN')\n}\nEach span element which is a direct child of a td element of the Rate column should have the class of rate as the first class js\nconst rateSpans = document querySelectorAll('tr td:last-child > span:first-child');\nassert isAbove(rateSpans length, 0);\nfor (let e of rateSpans) {\nassert equal(e classList[0], 'rate');\n}\nEach rate element should contain three empty span elements js\nconst rateSpans = document getElementsByClassName('rate');\nassert isAbove(rateSpans length, 0);\nfor (let e of rateSpans) {\nassert equal(e children length, 3);\nfor (let child of e children) {\nassert equal(child tagName, 'SPAN');\nassert equal(child innerText length, 0);\n}\n} rate elements placed inside read rows should have an additional class after the rate class with the value of either one, two, or three, depending on the personal rate js\nconst readBooksRates = document querySelectorAll(' read rate');\nassert isAbove(readBooksRates length, 0);\nfor (let e of readBooksRates) {\nassert oneOf(e classList[1], ['one', 'two', 'three']);\n}\nYou should have an attribute selector to target rows that have the class of read js\nassert exists(new __helpers CSSHelp(document)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 3,
    "total_chunks": 17
  },
  {
    "id": "a96e5edf0c9f57e23d26a422eeb50597",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": "} } rate elements placed inside read rows should have an additional class after the rate class with the value of either one, two, or three, depending on the personal rate js const readBooksRates = document querySelectorAll(' read rate'); assert isAbove(readBooksRates length, 0); for (let e of readBooksRates) { assert oneOf(e classList[1], ['one', 'two', 'three']); } You should have an attribute selector to target rows that have the class of read js assert exists(new __helpers CSSHelp(document)getStyle('tr[class=\"read\"]'));\nYou should use an attribute selector to target rows that have the class of read and set their background-image property to a linear gradient of your choice js\nassert include(new __helpers CSSHelp(document) getStyle('tr[class=\"read\"]') backgroundImage, 'linear-gradient(');\nYou should have an attribute selector to target rows that have the class of to-read js\nassert exists(new __helpers CSSHelp(document) getStyle('tr[class=\"to-read\"]'));\nYou should use an attribute selector to target rows that have the class of to-read and set their background-image property to a linear gradient of your choice js\nassert include(new __helpers CSSHelp(document) getStyle('tr[class=\"to-read\"]') backgroundImage, 'linear-gradient(');\nYou should have an attribute selector to target rows that have the class of in-progress js\nassert exists(new __helpers CSSHelp(document) getStyle('tr[class=\"in-progress\"]'));\nYou should use an attribute selector to target rows that have the class of in-progress and set their background-image property to a linear gradient of your choice js\nassert include(new __helpers CSSHelp(document) getStyle('tr[class=\"in-progress\"]') backgroundImage, 'linear-gradient(');\nYou should set the display property of each span element to inline-block js\nassert equal(new __helpers CSSHelp(document) getStyle('span') getPropVal('display'), 'inline-block');\nYou should have an attribute selector to target the span elements with the class of status that are descendants of tr elements with the class of to-read js\nassert exists(new __helpers CSSHelp(document) getStyle('tr[class=\"to-read\"] span[class=\"status\"]'));\nYou should use an attribute selector to target the span elements with the class of status that are descendants of tr elements with the class of to-read and set their border property js\nassert isNotEmpty(new __helpers CSSHelp(document)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 4,
    "total_chunks": 17
  },
  {
    "id": "02cca5fbdbb4bf7e3f9450d3e7f894ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": "__helpers CSSHelp(document) getStyle('span') getPropVal('display'), 'inline-block'); You should have an attribute selector to target the span elements with the class of status that are descendants of tr elements with the class of to-read js assert exists(new __helpers CSSHelp(document) getStyle('tr[class=\"to-read\"] span[class=\"status\"]')); You should use an attribute selector to target the span elements with the class of status that are descendants of tr elements with the class of to-read and set their border property js assert isNotEmpty(new __helpers CSSHelp(document)getStyle('tr[class=\"to-read\"] span[class=\"status\"]') border);\nYou should use an attribute selector to target the span elements with the class of status that are descendants of tr elements with the class of to-read and set their background-image property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle('tr[class=\"to-read\"] span[class=\"status\"]') backgroundImage);\nYou should have an attribute selector to target the span elements with the class of status that are descendants of tr elements with the class of read js\nassert exists(new __helpers CSSHelp(document) getStyle('tr[class=\"read\"] span[class=\"status\"]'));\nYou should use an attribute selector to target the span elements with the class of status that are descendants of tr elements with the class of read and set their border property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle('tr[class=\"read\"] span[class=\"status\"]') border);\nYou should use an attribute selector to target the span elements with the class of status that are descendants of tr elements with the class of read and set their background-image property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle('tr[class=\"read\"] span[class=\"status\"]') backgroundImage);\nYou should have an attribute selector to target the span elements with the class of status that are descendants of tr elements with the class of in-progress js\nassert exists(new __helpers CSSHelp(document) getStyle('tr[class=\"in-progress\"] span[class=\"status\"]'));\nYou should use an attribute selector to target the span elements with the class of status that are descendants of tr elements with the class of in-progress and set their border property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle('tr[class=\"in-progress\"] span[class=\"status\"]')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 5,
    "total_chunks": 17
  },
  {
    "id": "61779c2d69ad350b26392d03f5f05ae0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": "getStyle('tr[class=\"read\"] span[class=\"status\"]') backgroundImage); You should have an attribute selector to target the span elements with the class of status that are descendants of tr elements with the class of in-progress js assert exists(new __helpers CSSHelp(document) getStyle('tr[class=\"in-progress\"] span[class=\"status\"]')); You should use an attribute selector to target the span elements with the class of status that are descendants of tr elements with the class of in-progress and set their border property js assert isNotEmpty(new __helpers CSSHelp(document) getStyle('tr[class=\"in-progress\"] span[class=\"status\"]')border);\nYou should use an attribute selector to target the span elements with the class of status that are descendants of tr elements with the class of in-progress and set their background-image property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle('tr[class=\"in-progress\"] span[class=\"status\"]') backgroundImage);\nYou should have an attribute selector to target the span elements with the class of status and the span elements with the class value starting with rate js\nconst selector1 = new __helpers CSSHelp(document) getStyle('span[class=\"status\"], span[class^=\"rate\"]');\nconst selector2 = new __helpers CSSHelp(document) getStyle('span[class^=\"rate\"], span[class=\"status\"]');\nassert exists(selector1 || selector2);\nYou should use an attribute selector to target the span elements with the class of status and the span elements with the class value starting with rate and set their height property js\nconst selector1 = new __helpers CSSHelp(document) getStyle('span[class=\"status\"], span[class^=\"rate\"]');\nconst selector2 = new __helpers CSSHelp(document) getStyle('span[class^=\"rate\"], span[class=\"status\"]');\nassert isNotEmpty(selector1 height || selector2 height);\nYou should use an attribute selector to target the span elements with the class of status and the span elements with the class value starting with rate and set their width property js\nconst selector1 = new __helpers CSSHelp(document) getStyle('span[class=\"status\"], span[class^=\"rate\"]');\nconst selector2 = new __helpers CSSHelp(document) getStyle('span[class^=\"rate\"], span[class=\"status\"]');\nassert isNotEmpty(selector1 width || selector2 width);\nYou should use an attribute selector to target the span elements with the class of status and the span elements with the class value starting with rate and set their padding property",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 6,
    "total_chunks": 17
  },
  {
    "id": "222bfb10de6d04c1764531d14f10f4c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": "with the class of status and the span elements with the class value starting with rate and set their width property js const selector1 = new __helpers CSSHelp(document) getStyle('span[class=\"status\"], span[class^=\"rate\"]'); const selector2 = new __helpers CSSHelp(document) getStyle('span[class^=\"rate\"], span[class=\"status\"]'); assert isNotEmpty(selector1 width || selector2 width); You should use an attribute selector to target the span elements with the class of status and the span elements with the class value starting with rate and set their padding propertyjs\nconst selector1 = new __helpers CSSHelp(document) getStyle('span[class=\"status\"], span[class^=\"rate\"]');\nconst selector2 = new __helpers CSSHelp(document) getStyle('span[class^=\"rate\"], span[class=\"status\"]');\nassert isNotEmpty(selector1 padding || selector2 padding);\nYou should have an attribute selector to target the span elements which are direct children of span elements with the class value starting with rate js\nassert exists(new __helpers CSSHelp(document) getStyle('span[class^=\"rate\"] > span'));\nYou should use an attribute selector to target the span elements which are direct children of span elements with the class value starting with rate and set their border property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle('span[class^=\"rate\"] > span') getPropVal('border'));\nYou should use an attribute selector to target the span elements which are direct children of span elements with the class value starting with rate and set their border-radius property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle('span[class^=\"rate\"] > span') getPropVal('border-radius'));\nYou should use an attribute selector to target the span elements which are direct children of span elements with the class value starting with rate and set their margin property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle('span[class^=\"rate\"] > span') getPropVal('margin'));\nYou should use an attribute selector to target the span elements which are direct children of span elements with the class value starting with rate and set their height property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle('span[class^=\"rate\"] > span') getPropVal('height'));\nYou should use an attribute selector to target the span elements which are direct children of span elements with the class value starting with rate and set their width property js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 7,
    "total_chunks": 17
  },
  {
    "id": "03b367926f815164dd2eec9c629e23a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": "CSSHelp(document) getStyle('span[class^=\"rate\"] > span') getPropVal('margin')); You should use an attribute selector to target the span elements which are direct children of span elements with the class value starting with rate and set their height property js assert isNotEmpty(new __helpers CSSHelp(document) getStyle('span[class^=\"rate\"] > span') getPropVal('height')); You should use an attribute selector to target the span elements which are direct children of span elements with the class value starting with rate and set their width property js assertisNotEmpty(new __helpers CSSHelp(document) getStyle('span[class^=\"rate\"] > span') getPropVal('width'));\nYou should use an attribute selector to target the span elements which are direct children of span elements with the class value starting with rate and set their background-color property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle('span[class^=\"rate\"] > span') getPropVal('background-color'));\nYou should have an attribute selector to target the first descendant of span elements that have the word one as a part of their class value js\nconst selectors = [\n'span[class~=\"one\"] :first-child',\n'span[class~=\"one\"] :nth-child(1)',\n'span[class~=\"one\"] :first-of-type',\n'span[class~=\"one\"] span:first-child',\n'span[class~=\"one\"] span:nth-child(1)',\n'span[class~=\"one\"] span:first-of-type',\n'span[class~=\"one\"] > :first-child',\n'span[class~=\"one\"] > :nth-child(1)',\n'span[class~=\"one\"] > :first-of-type',\n'span[class~=\"one\"] > span:first-child',\n'span[class~=\"one\"] > span:nth-child(1)',\n'span[class~=\"one\"] > span:first-of-type'\n]\nassert isNotNull(new __helpers CSSHelp(document) getStyleAny(selectors));\nYou should use an attribute selector to target the first descendant of span elements that have the word one as a part of their class value and set its background-image property to use a linear-gradient",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 8,
    "total_chunks": 17
  },
  {
    "id": "be6392055c554a76d2091aa66b08415d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": "js const selectors = [ 'span[class~=\"one\"] :first-child', 'span[class~=\"one\"] :nth-child(1)', 'span[class~=\"one\"] :first-of-type', 'span[class~=\"one\"] span:first-child', 'span[class~=\"one\"] span:nth-child(1)', 'span[class~=\"one\"] span:first-of-type', 'span[class~=\"one\"] > :first-child', 'span[class~=\"one\"] > :nth-child(1)', 'span[class~=\"one\"] > :first-of-type', 'span[class~=\"one\"] > span:first-child', 'span[class~=\"one\"] > span:nth-child(1)', 'span[class~=\"one\"] > span:first-of-type' ] assert isNotNull(new __helpers CSSHelp(document) getStyleAny(selectors)); You should use an attribute selector to target the first descendant of span elements that have the word one as a part of their class value and set its background-image property to use a linear-gradientjs\nconst selectors = [\n'span[class~=\"one\"] :first-child',\n'span[class~=\"one\"] :nth-child(1)',\n'span[class~=\"one\"] :first-of-type',\n'span[class~=\"one\"] span:first-child',\n'span[class~=\"one\"] span:nth-child(1)',\n'span[class~=\"one\"] span:first-of-type',\n'span[class~=\"one\"] > :first-child',\n'span[class~=\"one\"] > :nth-child(1)',\n'span[class~=\"one\"] > :first-of-type',\n'span[class~=\"one\"] > span:first-child',\n'span[class~=\"one\"] > span:nth-child(1)',\n'span[class~=\"one\"] > span:first-of-type'\n]\nassert isTrue(new __helpers CSSHelp(document) getStyleAny(selectors) getPropVal('background-image') includes('linear-gradient('));\nYou should have an attribute selector to target the first two descendants of span elements that have the word two as a part of their class value",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 422,
    "chunk_index": 9,
    "total_chunks": 17
  },
  {
    "id": "aed9a43bedbe8f692f231ed7c88c2810",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": "its background-image property to use a linear-gradientjs const selectors = [ 'span[class~=\"one\"] :first-child', 'span[class~=\"one\"] :nth-child(1)', 'span[class~=\"one\"] :first-of-type', 'span[class~=\"one\"] span:first-child', 'span[class~=\"one\"] span:nth-child(1)', 'span[class~=\"one\"] span:first-of-type', 'span[class~=\"one\"] > :first-child', 'span[class~=\"one\"] > :nth-child(1)', 'span[class~=\"one\"] > :first-of-type', 'span[class~=\"one\"] > span:first-child', 'span[class~=\"one\"] > span:nth-child(1)', 'span[class~=\"one\"] > span:first-of-type' ] assert isTrue(new __helpers CSSHelp(document) getStyleAny(selectors) getPropVal('background-image') includes('linear-gradient(')); You should have an attribute selector to target the first two descendants of span elements that have the word two as a part of their class value```js\nconst selectors = [\n'span[class~=\"two\"] :nth-child(1), span[class~=\"two\"] :nth-child(2)',\n'span[class~=\"two\"] :nth-child(2), span[class~=\"two\"] :nth-child(1)',\n'span[class~=\"two\"] :first-child, span[class~=\"two\"] :nth-child(2)',\n'span[class~=\"two\"] :nth-child(2), span[class~=\"two\"] :first-child',\n'span[class~=\"two\"] :nth-of-type(-n+2)',\n'span[class~=\"two\"] :nth-child(-n+2)',\n'span[class~=\"two\"] span:nth-child(1), span[class~=\"two\"] span:nth-child(2)',\n'span[class~=\"two\"] span:nth-child(2), span[class~=\"two\"] span:nth-child(1)',\n'span[class~=\"two\"] span:first-child, span[class~=\"two\"] span:nth-child(2)',\n'span[class~=\"two\"] span:nth-child(2), span[class~=\"two\"] span:first-child',\n'span[class~=\"two\"] span:nth-of-type(-n+2)',\n'span[class~=\"two\"] span:nth-child(-n+2)',\n'span[class~=\"two\"] > :nth-child(1), span[class~=\"two\"] > :nth-child(2)',\n'span[class~=\"two\"] > :nth-child(2), span[class~=\"two\"] > :nth-child(1)',\n'span[class~=\"two\"] > :first-child, span[class~=\"two\"] > :nth-child(2)',\n'span[class~=\"two\"] > :nth-child(2), span[class~=\"two\"] > :first-child',\n'span[class~=\"two\"] > :nth-of-type(-n+2)',\n'span[class~=\"two\"] > :nth-child(-n+2)',\n'span[class~=\"two\"] > span:nth-child(1), span[class~=\"two\"] > span:nth-child(2)',\n'span[class~=\"two\"] > span:nth-child(2), span[class~=\"two\"] > span:nth-child(1)',\n'span[class~=\"two\"] > span:first-child, span[class~=\"two\"] > span:nth-child(2)',\n'span[class~=\"two\"] > span:nth-child(2), span[class~=\"two\"] > span:first-child',\n'span[class~=\"two\"] > span:nth-of-type(-n+2)',\n'span[class~=\"two\"] > span:nth-child(-n+2)'\n]\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 758,
    "chunk_index": 10,
    "total_chunks": 17
  },
  {
    "id": "4cad3e6e69b3208af2a551cdb5323929",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": "span[class~=\"two\"] span:nth-child(1)', 'span[class~=\"two\"] span:first-child, span[class~=\"two\"] span:nth-child(2)', 'span[class~=\"two\"] span:nth-child(2), span[class~=\"two\"] span:first-child', 'span[class~=\"two\"] span:nth-of-type(-n+2)', 'span[class~=\"two\"] span:nth-child(-n+2)', 'span[class~=\"two\"] > :nth-child(1), span[class~=\"two\"] > :nth-child(2)', 'span[class~=\"two\"] > :nth-child(2), span[class~=\"two\"] > :nth-child(1)', 'span[class~=\"two\"] > :first-child, span[class~=\"two\"] > :nth-child(2)', 'span[class~=\"two\"] > :nth-child(2), span[class~=\"two\"] > :first-child', 'span[class~=\"two\"] > :nth-of-type(-n+2)', 'span[class~=\"two\"] > :nth-child(-n+2)', 'span[class~=\"two\"] > span:nth-child(1), span[class~=\"two\"] > span:nth-child(2)', 'span[class~=\"two\"] > span:nth-child(2), span[class~=\"two\"] > span:nth-child(1)', 'span[class~=\"two\"] > span:first-child, span[class~=\"two\"] > span:nth-child(2)', 'span[class~=\"two\"] > span:nth-child(2), span[class~=\"two\"] > span:first-child', 'span[class~=\"two\"] > span:nth-of-type(-n+2)', 'span[class~=\"two\"] > span:nth-child(-n+2)' ] assertisNotNull(new __helpers CSSHelp(document) getStyleAny(selectors));\n```\nYou should use an attribute selector to target the first two descendants of span elements that have the word two as a part of their class value and set their background-image property to use a linear-gradient",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 11,
    "total_chunks": 17
  },
  {
    "id": "cae48939540b3568a0af63f11f3a8fd6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": ":nth-of-type(-n+2)', 'span[class~=\"two\"] > :nth-child(-n+2)', 'span[class~=\"two\"] > span:nth-child(1), span[class~=\"two\"] > span:nth-child(2)', 'span[class~=\"two\"] > span:nth-child(2), span[class~=\"two\"] > span:nth-child(1)', 'span[class~=\"two\"] > span:first-child, span[class~=\"two\"] > span:nth-child(2)', 'span[class~=\"two\"] > span:nth-child(2), span[class~=\"two\"] > span:first-child', 'span[class~=\"two\"] > span:nth-of-type(-n+2)', 'span[class~=\"two\"] > span:nth-child(-n+2)' ] assertisNotNull(new __helpers CSSHelp(document) getStyleAny(selectors)); ``` You should use an attribute selector to target the first two descendants of span elements that have the word two as a part of their class value and set their background-image property to use a linear-gradient```js\nconst selectors = [\n'span[class~=\"two\"] :nth-child(1), span[class~=\"two\"] :nth-child(2)',\n'span[class~=\"two\"] :nth-child(2), span[class~=\"two\"] :nth-child(1)',\n'span[class~=\"two\"] :first-child, span[class~=\"two\"] :nth-child(2)',\n'span[class~=\"two\"] :nth-child(2), span[class~=\"two\"] :first-child',\n'span[class~=\"two\"] :nth-of-type(-n+2)',\n'span[class~=\"two\"] :nth-child(-n+2)',\n'span[class~=\"two\"] span:nth-child(1), span[class~=\"two\"] span:nth-child(2)',\n'span[class~=\"two\"] span:nth-child(2), span[class~=\"two\"] span:nth-child(1)',\n'span[class~=\"two\"] span:first-child, span[class~=\"two\"] span:nth-child(2)',\n'span[class~=\"two\"] span:nth-child(2), span[class~=\"two\"] span:first-child',\n'span[class~=\"two\"] span:nth-of-type(-n+2)',\n'span[class~=\"two\"] span:nth-child(-n+2)',\n'span[class~=\"two\"] > :nth-child(1), span[class~=\"two\"] > :nth-child(2)',\n'span[class~=\"two\"] > :nth-child(2), span[class~=\"two\"] > :nth-child(1)',\n'span[class~=\"two\"] > :first-child, span[class~=\"two\"] > :nth-child(2)',\n'span[class~=\"two\"] > :nth-child(2), span[class~=\"two\"] > :first-child',\n'span[class~=\"two\"] > :nth-of-type(-n+2)',\n'span[class~=\"two\"] > :nth-child(-n+2)',\n'span[class~=\"two\"] > span:nth-child(1), span[class~=\"two\"] > span:nth-child(2)',\n'span[class~=\"two\"] > span:nth-child(2), span[class~=\"two\"] > span:nth-child(1)',\n'span[class~=\"two\"] > span:first-child, span[class~=\"two\"] > span:nth-child(2)',\n'span[class~=\"two\"] > span:nth-child(2), span[class~=\"two\"] > span:first-child',\n'span[class~=\"two\"] > span:nth-of-type(-n+2)',\n'span[class~=\"two\"] > span:nth-child(-n+2)'\n]\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 754,
    "chunk_index": 12,
    "total_chunks": 17
  },
  {
    "id": "304201ce00244fbea58d295c3e22c93d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": "span[class~=\"two\"] span:nth-child(1)', 'span[class~=\"two\"] span:first-child, span[class~=\"two\"] span:nth-child(2)', 'span[class~=\"two\"] span:nth-child(2), span[class~=\"two\"] span:first-child', 'span[class~=\"two\"] span:nth-of-type(-n+2)', 'span[class~=\"two\"] span:nth-child(-n+2)', 'span[class~=\"two\"] > :nth-child(1), span[class~=\"two\"] > :nth-child(2)', 'span[class~=\"two\"] > :nth-child(2), span[class~=\"two\"] > :nth-child(1)', 'span[class~=\"two\"] > :first-child, span[class~=\"two\"] > :nth-child(2)', 'span[class~=\"two\"] > :nth-child(2), span[class~=\"two\"] > :first-child', 'span[class~=\"two\"] > :nth-of-type(-n+2)', 'span[class~=\"two\"] > :nth-child(-n+2)', 'span[class~=\"two\"] > span:nth-child(1), span[class~=\"two\"] > span:nth-child(2)', 'span[class~=\"two\"] > span:nth-child(2), span[class~=\"two\"] > span:nth-child(1)', 'span[class~=\"two\"] > span:first-child, span[class~=\"two\"] > span:nth-child(2)', 'span[class~=\"two\"] > span:nth-child(2), span[class~=\"two\"] > span:first-child', 'span[class~=\"two\"] > span:nth-of-type(-n+2)', 'span[class~=\"two\"] > span:nth-child(-n+2)' ] assertisTrue(new __helpers CSSHelp(document) getStyleAny(selectors) backgroundImage includes('linear-gradient('))\n```\nYou should have an attribute selector to target the span elements that are descendants of span elements that have the word three as a part of their class value js\nconst selectors = [\n'span[class~=\"three\"] span',\n'span[class~=\"three\"] > span'\n]\nassert exists(new __helpers CSSHelp(document) getStyleAny(selectors));\nYou should use an attribute selector to target the span elements that are descendants of span elements that have the word three as a part of their class value and set their background-image property to use a linear-gradient",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 13,
    "total_chunks": 17
  },
  {
    "id": "8a2393ce2c39e51acf670d0cc0038eef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": "target the span elements that are descendants of span elements that have the word three as a part of their class value js const selectors = [ 'span[class~=\"three\"] span', 'span[class~=\"three\"] > span' ] assert exists(new __helpers CSSHelp(document) getStyleAny(selectors)); You should use an attribute selector to target the span elements that are descendants of span elements that have the word three as a part of their class value and set their background-image property to use a linear-gradientjs\nconst selectors = [\n'span[class~=\"three\"] span',\n'span[class~=\"three\"] > span'\n]\nassert include(new __helpers CSSHelp(document) getStyleAny(selectors) getPropVal('background-image'), 'linear-gradient(');\n--seed--\n--seed-contents--\n```html\nBook Inventory\n```\n```css\n```\n--solutions--\n```html\nBook Inventory\nBook Inventory\nTitle\nAuthor\nCategory\nStatus\nRate\nThe Three Musketeers\nAlexandre Dumas\nHistorical Novel\nRead\nThe Plague\nAlbert Camus\nPhilosophical Novel\nTo Read\nThe Metamorphosis\nFranz Kafka\nNovella\nRead\nDead Souls\nNikolai Gogol\nPicaresque\nRead\nLord of the Flies\nWilliam Golding\nAllegorical Novel\nIn Progress\nDo Androids Dream of Electric Sheep Philip K Dick\nScience Fiction\nRead\n```\n```css\n* {\nbox-sizing: border-box;\nfont-family: Arial, sans-serif;\n} table-container {\noverflow-x: auto;\n}\ntable {\nborder-collapse: collapse;\nwidth: 100vw;\n}\nthead {\nbackground-image: linear-gradient(hsl(197, 92%, 77%, 0 60), hsl(197, 92%, 50%, 0 60));\n}\nth {\npadding: 0 4em;\n}\ntd {\ntext-align: center;\npadding: 0 3em;\n}\ntr[class=\"read\"] {\nbackground-image: linear-gradient(hsl(120, 100%, 85%, 0 6), hsl(120, 100%, 65%, 0 6));\n}\ntr[class=\"to-read\"] {\nbackground-image: linear-gradient(hsl(120, 20%, 95%, 0 6), hsl(120, 20%, 75%, 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 14,
    "total_chunks": 17
  },
  {
    "id": "da4eabc820b6f2b8964d87be8b1d7994",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": "``` ```css * { box-sizing: border-box; font-family: Arial, sans-serif; } table-container { overflow-x: auto; } table { border-collapse: collapse; width: 100vw; } thead { background-image: linear-gradient(hsl(197, 92%, 77%, 0 60), hsl(197, 92%, 50%, 0 60)); } th { padding: 0 4em; } td { text-align: center; padding: 0 3em; } tr[class=\"read\"] { background-image: linear-gradient(hsl(120, 100%, 85%, 0 6), hsl(120, 100%, 65%, 0 6)); } tr[class=\"to-read\"] { background-image: linear-gradient(hsl(120, 20%, 95%, 0 6), hsl(120, 20%, 75%, 06));\n}\ntr[class=\"in-progress\"] {\nbackground-image: linear-gradient(hsl(40, 100%, 85%, 0 60), hsl(40, 100%, 65%, 0 6));\n}\nspan {\ndisplay: inline-block;\n}\nspan[class=\"status\"] {\nborder-radius: 20%/60%;\n}\nspan[class=\"status\"],\nspan[class^=\"rate\"] {\nheight: 1 85em;\nwidth: 7em;\npadding: 0 3em;\n}\ntr[class=\"to-read\"] span[class=\"status\"] {\nborder: 0 1em solid hsl(5, 100%, 45%);\nbackground-image: linear-gradient(hsl(5, 100%, 75%), hsl(5, 100%, 50%));\n}\ntr[class=\"read\"] span[class=\"status\"] {\nborder: 0 1em solid hsl(120, 75%, 45%);\nbackground-image: linear-gradient(hsl(120, 75%, 75%), hsl(120, 75%, 50%));\n}\ntr[class=\"in-progress\"] span[class=\"status\"] {\nborder: 0 1em solid hsl(40, 90%, 40%);\nbackground-image: linear-gradient(hsl(40, 90%, 75%), hsl(40, 90%, 50%));\n}\nspan[class^=\"rate\"] > span {\nborder: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 15,
    "total_chunks": 17
  },
  {
    "id": "9526c93bc0a0f33286e98fbc7b87b031",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
    "source_type": "git_repo",
    "title": "Book Inventory",
    "content": "{ border-radius: 20%/60%; } span[class=\"status\"], span[class^=\"rate\"] { height: 1 85em; width: 7em; padding: 0 3em; } tr[class=\"to-read\"] span[class=\"status\"] { border: 0 1em solid hsl(5, 100%, 45%); background-image: linear-gradient(hsl(5, 100%, 75%), hsl(5, 100%, 50%)); } tr[class=\"read\"] span[class=\"status\"] { border: 0 1em solid hsl(120, 75%, 45%); background-image: linear-gradient(hsl(120, 75%, 75%), hsl(120, 75%, 50%)); } tr[class=\"in-progress\"] span[class=\"status\"] { border: 0 1em solid hsl(40, 90%, 40%); background-image: linear-gradient(hsl(40, 90%, 75%), hsl(40, 90%, 50%)); } span[class^=\"rate\"] > span { border: 01em solid hsl(0, 0%, 50%);\nborder-radius: 50%;\nbackground-color: hsl(0, 15%, 95%);\nheight: 100%;\nwidth: 20%;\nmargin: 0 1em;\n}\nspan[class~=\"three\"] span {\nbackground-image: linear-gradient(hsl(50, 100%, 70%), hsl(50, 100%, 50%));\n}\nspan[class~=\"two\"] :nth-child(1),\nspan[class~=\"two\"] :nth-child(2) {\nbackground-image: linear-gradient(hsl(50, 100%, 70%), hsl(50, 100%, 50%));\n}\nspan[class~=\"one\"] :first-child {\nbackground-image: linear-gradient(hsl(50, 100%, 70%), hsl(50, 100%, 50%));\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27472,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-book-inventory-app\\66a207974c806a19d6607073.md",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 16,
    "total_chunks": 17
  },
  {
    "id": "be4f2c064cb95d187b2eb87c406e9e85",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-celsius-to-fahrenheit-converter\\56533eb9ac21ba0edf2244b3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244b3\ntitle: Build a Celsius to Fahrenheit Converter\nchallengeType: 26\ndashedName: build-a-celsius-to-fahrenheit-converter\n--description--\nIn this lab, you will write a function that converts the temperature from Celsius to Fahrenheit. The formula to convert from Celsius to Fahrenheit is:\njs\nfahrenheit = celsius * (9/5) + 32\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab.\nUser Stories:\nYou should create a function named convertCtoF.\nconvertCtoF should take a single numeric argument, which is the temperature in Celsius.\nconvertCtoF should return a number.\n--hints--\nYou should create a function named convertCtoF.\njs\nassert.isFunction(convertCtoF);\nconvertCtoF should take a single parameter.\njs\nassert.lengthOf(convertCtoF, 1);\nconvertCtoF(0) should return a number.\njs\nassert.isNumber(convertCtoF(0));\nconvertCtoF(-30) should return a value of -22.\njs\nassert.strictEqual(convertCtoF(-30), -22);\nconvertCtoF(-10) should return a value of 14.\njs\nassert.strictEqual(convertCtoF(-10), 14);\nconvertCtoF(0) should return a value of 32.\njs\nassert.strictEqual(convertCtoF(0), 32);\nconvertCtoF(20) should return a value of 68.\njs\nassert.strictEqual(convertCtoF(20), 68);\nconvertCtoF(30) should return a value of 86.\njs\nassert.strictEqual(convertCtoF(30), 86);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nfunction convertCtoF(celsius) {\nlet fahrenheit = celsius * (9 / 5) + 32;\nreturn fahrenheit;\n}\nconvertCtoF(30);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1663,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-celsius-to-fahrenheit-converter\\56533eb9ac21ba0edf2244b3.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b7c1a12fb1306fd785c31e0bacd70eba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "id: 66def5467aee701733aaf8cc\ntitle: Build a Bookmark Manager App\nchallengeType: 25\ndashedName: build-a-bookmark-manager-app\ndemoType: onClick\n--description--\nFor this lab, all the HTML and CSS has been provided to you You will use JavaScript to complete the Bookmark Manager app so that it can store a collection of bookmarks in the local storage and read data from it Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a getBookmarks function that returns the bookmarks array stored in the local storage If the bookmarks key has not been set yet, or it doesn't contain a valid array with bookmarks, the getBookmarks function should return an empty array The bookmarks key stored in the local storage should be an array of bookmark objects Each bookmark object should have three keys: name, category, and url You should have a function named displayOrCloseForm that toggles the hidden class on #main-section and #form-section When you click #add-bookmark-button, you should update the inner text of category-name to be the value of the selected option from #category-dropdown and call displayOrCloseForm to display the form section and hide the main section When you click #close-form-button, you should run your function to hide the form section and display the main section When you click #add-bookmark-button-form, you should update the bookmarks key stored in the local storage by adding a bookmark object to the end of the array The object should have name set to the value of the #name input, category set to the value of the selected option from the category dropdown, and url set to the value of the #url input Once the bookmarks key is updated, you should reset the value of #name and #url to an empty string before running your function to hide the form section and show the main section You should have a function named displayOrHideCategory that toggles the hidden class on #main-section and #bookmark-list-section When you click #view-category-button, you should update the inner text of category-name to be the value of the selected option from #category-dropdown, modify the inner HTML of #category-list according to the user stories below, and call the displayOrHideCategory function",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 0,
    "total_chunks": 18
  },
  {
    "id": "0f61721617cff01479b2ddfd06f1c237",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "#name and #url to an empty string before running your function to hide the form section and show the main section You should have a function named displayOrHideCategory that toggles the hidden class on #main-section and #bookmark-list-section When you click #view-category-button, you should update the inner text of category-name to be the value of the selected option from #category-dropdown, modify the inner HTML of #category-list according to the user stories below, and call the displayOrHideCategory functionIf none of the bookmarks in local storage have the category, you should set the inner HTML of the #category-list to a p element with the text No Bookmarks Found If one or more bookmarks in local storage have the selected category, add a radio button for each bookmark to the innerHTML of the #category-list Give each radio button an id and value set to the bookmark name, and a name that's the same for all the buttons Each radio button should have a corresponding label containing an anchor element with the bookmark name and the href attribute set to the bookmark URL When you click the #close-list-button, you should run your function to hide the #bookmark-list-section and display the main section When you click the #delete-bookmark-button, you should delete the bookmark corresponding to the selected radio button and appropriate category from the local storage and update the displayed bookmark list --before-all--\n```js\nconst getHidden = (notMain) => {\nconst mainSection = document querySelector(\"#main-section\");\nconst formSection = document querySelector(\"#form-section\");\nconst bookmarkListSection = document querySelector(\"#bookmark-list-section\");\nif (notMain === \"form\") {\nif (mainSection classList contains(\"hidden\") && formSection classList contains(\"hidden\")) {\nreturn \"main\"\n} else if ( mainSection classList contains(\"hidden\") && formSection classList contains(\"hidden\")) {\nreturn notMain;\n}\n} else if (notMain === \"bookmark list\") {\nif (mainSection classList contains(\"hidden\") && bookmarkListSection classList contains(\"hidden\")) {\nreturn \"main\"\n} else if ( mainSection classList contains(\"hidden\") && bookmarkListSection classList contains(\"hidden\")) {\nreturn notMain;\n}\n}\n}\nconst originalLocalStorage = JSON parse(localStorage getItem(\"bookmarks\")) || [];\nconst temp = originalLocalStorage;\nfunction resetLocalStorage() {\nlocalStorage setItem(\"bookmarks\", JSON stringify(temp));\n}\nfunction setLocalStorage() {\nlocalStorage setItem(\"bookmarks\", JSON",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 1,
    "total_chunks": 18
  },
  {
    "id": "c5b2192b3cf082eb4415b179107778fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "else if ( mainSection classList contains(\"hidden\") && formSection classList contains(\"hidden\")) { return notMain; } } else if (notMain === \"bookmark list\") { if (mainSection classList contains(\"hidden\") && bookmarkListSection classList contains(\"hidden\")) { return \"main\" } else if ( mainSection classList contains(\"hidden\") && bookmarkListSection classList contains(\"hidden\")) { return notMain; } } } const originalLocalStorage = JSON parse(localStorage getItem(\"bookmarks\")) || []; const temp = originalLocalStorage; function resetLocalStorage() { localStorage setItem(\"bookmarks\", JSON stringify(temp)); } function setLocalStorage() { localStorage setItem(\"bookmarks\", JSONstringify([{name: \"example1\", category: \"news\", url: \"example1 com\"}, {name: \"example2\", category: \"entertainment\", url: \"example2 com\"}, {name: \"example3\", category: \"work\", url: \"example3 com\"}, {name: \"example4\", category: \"news\", url: \"example4 com\"}]));\n}\nfunction clearCategoryList() {\nconst categoryList = document getElementById(\"category-list\");\ncategoryList innerHTML = \"\";\n}\n```\n--hints--\nYou should have a getBookmarks function js\nassert isFunction(getBookmarks);\nYour getBookmarks function should return an array js\nassert isArray(getBookmarks());\nYour getBookmarks function should return the bookmarks key from localStorage js\ntry {\nsetLocalStorage()\nconst testArr = getBookmarks();\nconst expected = [{name: \"example1\", category: \"news\", url: \"example1 com\"}, {name: \"example2\", category: \"entertainment\", url: \"example2 com\"}, {name: \"example3\", category: \"work\", url: \"example3 com\"}, {name: \"example4\", category: \"news\", url: \"example4 com\"}];\nassert deepEqual(testArr, expected);\n} finally {\nresetLocalStorage();\n}\nWhen the bookmarks key is not set in localStorage or is an empty array, the getBookmarks function should return an empty array js\ntry {\nlocalStorage setItem(\"bookmarks\", JSON stringify([]));\nassert isEmpty(getBookmarks());\nlocalStorage removeItem(\"bookmarks\");\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 2,
    "total_chunks": 18
  },
  {
    "id": "602bc633ff0d6a5f8d131d6b6178db8b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "testArr = getBookmarks(); const expected = [{name: \"example1\", category: \"news\", url: \"example1 com\"}, {name: \"example2\", category: \"entertainment\", url: \"example2 com\"}, {name: \"example3\", category: \"work\", url: \"example3 com\"}, {name: \"example4\", category: \"news\", url: \"example4 com\"}]; assert deepEqual(testArr, expected); } finally { resetLocalStorage(); } When the bookmarks key is not set in localStorage or is an empty array, the getBookmarks function should return an empty array js try { localStorage setItem(\"bookmarks\", JSON stringify([])); assert isEmpty(getBookmarks()); localStorage removeItem(\"bookmarks\"); assertisEmpty(getBookmarks());\n} finally {\nresetLocalStorage();\n}\nWhen the bookmarks key in the localStorage does not contain a valid array of bookmark objects, the getBookmarks function should return an empty array ```js\ntry {\nlocalStorage setItem(\"bookmarks\", 'invalid');\nconst arrayFromInvalidValue = getBookmarks();\nassert isArray(arrayFromInvalidValue);\nassert isEmpty(arrayFromInvalidValue);\nlocalStorage setItem(\"bookmarks\", JSON stringify([{name: \"example1\", category: \"news\", notUrl: \"example1 com\"}]));\nconst arrayFromInvalidArray = getBookmarks();\nassert isArray(arrayFromInvalidArray)\nassert isEmpty(arrayFromInvalidArray)\n} finally {\nresetLocalStorage();\n}\n```\nYou should have a function named displayOrCloseForm js\nassert isFunction(displayOrCloseForm);\nYour displayOrCloseForm function should toggle the hidden class on #main-section and #form-section js\nconst hidden = getHidden(\"form\");\ndisplayOrCloseForm();\nconst hiddenAfterCall = getHidden(\"form\");\nassert isDefined(hidden, hiddenAfterCall);\nassert notEqual(hidden, hiddenAfterCall);\nWhen you click #add-bookmark-button, you should update the inner text of category-name to be the value of the selected option from #category-dropdown js\nconst addBookMarkButtonTest = document getElementById(\"add-bookmark-button\");\nconst categoryDropdownTest = document getElementById(\"category-dropdown\");\naddBookMarkButtonTest dispatchEvent(new Event(\"click\"));\nconst categoryName = document querySelector(\" category-name\") innerText trim();\nassert strictEqual(categoryName toLowerCase(), categoryDropdownTest value toLowerCase());\nWhen you click #add-bookmark-button, you should call displayOrCloseForm to display the form section and hide the main section",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 3,
    "total_chunks": 18
  },
  {
    "id": "e138061d2e10ad3afbeee8b935a2f103",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "= getHidden(\"form\"); assert isDefined(hidden, hiddenAfterCall); assert notEqual(hidden, hiddenAfterCall); When you click #add-bookmark-button, you should update the inner text of category-name to be the value of the selected option from #category-dropdown js const addBookMarkButtonTest = document getElementById(\"add-bookmark-button\"); const categoryDropdownTest = document getElementById(\"category-dropdown\"); addBookMarkButtonTest dispatchEvent(new Event(\"click\")); const categoryName = document querySelector(\" category-name\") innerText trim(); assert strictEqual(categoryName toLowerCase(), categoryDropdownTest value toLowerCase()); When you click #add-bookmark-button, you should call displayOrCloseForm to display the form section and hide the main sectionjs\nconst addBookMarkButtonTest = document getElementById(\"add-bookmark-button\");\nassert strictEqual(getHidden(\"form\"), \"form\");\naddBookMarkButtonTest dispatchEvent(new Event(\"click\"));\nassert strictEqual(getHidden(\"form\"), \"main\");\nWhen you click #close-form-button, you should call displayOrCloseForm to hide the form section and display the main section js\nconst closeFormButtonTest = document getElementById(\"close-form-button\");\nassert strictEqual(getHidden(\"form\"), \"main\");\ncloseFormButtonTest dispatchEvent(new Event(\"click\"));\nassert strictEqual(getHidden(\"form\"), \"form\");\nWhen you click #add-bookmark-button-form, you should update the bookmarks key stored in the local storage by adding an object to the end of the array The added object should have name set to the value of the #name input, category set to the value of the selected option from the category dropdown, and url set to the value of the #url input js\nsetLocalStorage();\nconst addBookmarkButtonFormTest = document getElementById(\"add-bookmark-button-form\");\nconst categoryDropdownTest = document getElementById(\"category-dropdown\");\nconst bookmarkNameTest = document getElementById(\"name\");\nconst bookmarkURLTest = document getElementById(\"url\");\ntry {\nbookmarkNameTest value = \"test example5\";\nbookmarkURLTest value = \"test example5 com\";\nconst bookmarkObject = {\nname: bookmarkNameTest value,\ncategory: categoryDropdownTest value,\nurl: bookmarkURLTest value\n};\nconst expected = [{name: \"example1\", category: \"news\", url: \"example1 com\"}, {name: \"example2\", category: \"entertainment\", url: \"example2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 4,
    "total_chunks": 18
  },
  {
    "id": "16ef720196ea5c8a40ba43c059489278",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "dropdown, and url set to the value of the #url input js setLocalStorage(); const addBookmarkButtonFormTest = document getElementById(\"add-bookmark-button-form\"); const categoryDropdownTest = document getElementById(\"category-dropdown\"); const bookmarkNameTest = document getElementById(\"name\"); const bookmarkURLTest = document getElementById(\"url\"); try { bookmarkNameTest value = \"test example5\"; bookmarkURLTest value = \"test example5 com\"; const bookmarkObject = { name: bookmarkNameTest value, category: categoryDropdownTest value, url: bookmarkURLTest value }; const expected = [{name: \"example1\", category: \"news\", url: \"example1 com\"}, {name: \"example2\", category: \"entertainment\", url: \"example2com\"}, {name: \"example3\", category: \"work\", url: \"example3 com\"}, {name: \"example4\", category: \"news\", url: \"example4 com\"}, bookmarkObject];\naddBookmarkButtonFormTest dispatchEvent(new Event(\"click\"));\nassert deepEqual(getBookmarks(), expected);\n} finally {\nbookmarkNameTest value = \"\";\nbookmarkURLTest value = \"\";\nresetLocalStorage();\n}\nWhen you click #add-bookmark-button-form, you should reset the value of #name and #url to an empty string js\nconst addBookmarkButtonFormTest = document getElementById(\"add-bookmark-button-form\");\nconst bookmarkNameTest = document getElementById(\"name\");\nconst bookmarkURLTest = document getElementById(\"url\");\ntry {\nbookmarkNameTest value = \"test example2\";\nbookmarkURLTest value = \"test example2 com\";\naddBookmarkButtonFormTest dispatchEvent(new Event(\"click\"));\nassert strictEqual(bookmarkNameTest value, \"\");\nassert strictEqual(bookmarkURLTest value, \"\");\n} finally {\nresetLocalStorage()\nbookmarkNameTest value = \"\";\nbookmarkURLTest value = \"\";\n}\nWhen you click #add-bookmark-button-form, you should run displayOrCloseForm to hide the form section and show the main section js\nconst addBookmarkButtonFormTest = document getElementById(\"add-bookmark-button-form\");\nconst addBookMarkButtonTest = document getElementById(\"add-bookmark-button\");\nconst bookmarkNameTest = document getElementById(\"name\");\nconst bookmarkURLTest = document getElementById(\"url\");\ntry {\nbookmarkNameTest value = \"test example3\";\nbookmarkURLTest value = \"test example3 com\";\naddBookMarkButtonTest dispatchEvent(new Event(\"click\"));\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 5,
    "total_chunks": 18
  },
  {
    "id": "5f1d2f9479938b5c6cd36b74a787aff7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "strictEqual(bookmarkNameTest value, \"\"); assert strictEqual(bookmarkURLTest value, \"\"); } finally { resetLocalStorage() bookmarkNameTest value = \"\"; bookmarkURLTest value = \"\"; } When you click #add-bookmark-button-form, you should run displayOrCloseForm to hide the form section and show the main section js const addBookmarkButtonFormTest = document getElementById(\"add-bookmark-button-form\"); const addBookMarkButtonTest = document getElementById(\"add-bookmark-button\"); const bookmarkNameTest = document getElementById(\"name\"); const bookmarkURLTest = document getElementById(\"url\"); try { bookmarkNameTest value = \"test example3\"; bookmarkURLTest value = \"test example3 com\"; addBookMarkButtonTest dispatchEvent(new Event(\"click\")); assertstrictEqual(getHidden(\"form\"), \"main\");\naddBookmarkButtonFormTest dispatchEvent(new Event(\"click\"));\nassert strictEqual(getHidden(\"form\"), \"form\");\n} finally {\nresetLocalStorage()\n}\nYou should have a function named displayOrHideCategory js\nassert isFunction(displayOrHideCategory);\nYour displayOrHideCategory function should toggle the hidden class on #main-section and #bookmark-list-section js\nconst hidden = getHidden(\"bookmark list\");\ndisplayOrHideCategory();\nconst hiddenAfterCall = getHidden(\"bookmark list\");\nassert isDefined(hidden, hiddenAfterCall)\nassert notEqual(hidden, hiddenAfterCall)\nWhen you click #view-category-button, you should update the inner text of category-name to be the value of the selected option from #category-dropdown js\nconst viewCategoryButtonTest = document getElementById(\"view-category-button\");\nconst categoryDropdownTest = document getElementById(\"category-dropdown\");\nviewCategoryButtonTest dispatchEvent(new Event(\"click\"));\nconst categoryName = document querySelector(\" category-name\") innerText trim();\nassert strictEqual(categoryName toLowerCase(), categoryDropdownTest value toLowerCase());\nWhen you click #view-category-button, you should add a p element with the text No Bookmarks Found to #category-list's inner HTML if none of the bookmarks in local storage have the selected category js\ntry {\nconst viewCategoryButtonTest = document getElementById(\"view-category-button\");\nconst categoryDropdownTest = document getElementById(\"category-dropdown\");\nsetLocalStorage()\ncategoryDropdownTest value = \"miscellaneous\";\nviewCategoryButtonTest dispatchEvent(new Event(\"click\"));\nconst categoryList = document getElementById(\"category-list\") innerHTML;\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 6,
    "total_chunks": 18
  },
  {
    "id": "f62c556208390025dd48feb8ac7af116",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "dispatchEvent(new Event(\"click\")); const categoryName = document querySelector(\" category-name\") innerText trim(); assert strictEqual(categoryName toLowerCase(), categoryDropdownTest value toLowerCase()); When you click #view-category-button, you should add a p element with the text No Bookmarks Found to #category-list's inner HTML if none of the bookmarks in local storage have the selected category js try { const viewCategoryButtonTest = document getElementById(\"view-category-button\"); const categoryDropdownTest = document getElementById(\"category-dropdown\"); setLocalStorage() categoryDropdownTest value = \"miscellaneous\"; viewCategoryButtonTest dispatchEvent(new Event(\"click\")); const categoryList = document getElementById(\"category-list\") innerHTML; assertstrictEqual(categoryList, \"<p>No Bookmarks Found</p>\")\n} finally {\nresetLocalStorage()\nclearCategoryList()\n}\nWhen you click the #view-category-button, you should modify the #category-list element's inner HTML by adding a radio button The radio button should have the id and value attributes set to the bookmark name for each bookmark in the selected category Additionally, each radio button should have the same name attribute js\ntry {\nconst viewCategoryButtonTest = document getElementById(\"view-category-button\");\nconst categoryDropdownTest = document getElementById(\"category-dropdown\");\nsetLocalStorage();\ncategoryDropdownTest value = \"news\";\nviewCategoryButtonTest dispatchEvent(new Event(\"click\"));\nconst bookmarksDisplayed = document querySelectorAll('#category-list input[type=\"radio\"]');\nassert lengthOf(bookmarksDisplayed, 2);\nassert strictEqual(bookmarksDisplayed[0] id, \"example1\");\nassert strictEqual(bookmarksDisplayed[0] value, \"example1\");\nassert strictEqual(bookmarksDisplayed[1] id, \"example4\");\nassert strictEqual(bookmarksDisplayed[1] value, \"example4\");\nassert isOk(bookmarksDisplayed[0] name)\nassert strictEqual(bookmarksDisplayed[0] name, bookmarksDisplayed[1] name);\n} finally {\nresetLocalStorage();\n}\nEach radio button added to #category-list's inner HTML should have a corresponding label containing an anchor element with the bookmark name and the href attribute set to the bookmark URL js\nsetLocalStorage();\nconst viewCategoryButtonTest = document getElementById(\"view-category-button\");\nconst categoryDropdownTest = document getElementById(\"category-dropdown\");\ntry {\ncategoryDropdownTest value = \"news\";\nviewCategoryButtonTest dispatchEvent(new Event(\"click\"));\nconst bookmarkLabelsDisplayed = document querySelectorAll('#category-list label');\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 7,
    "total_chunks": 18
  },
  {
    "id": "63b8f1801390fea82a595098e87e5e3c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "\"example4\"); assert strictEqual(bookmarksDisplayed[1] value, \"example4\"); assert isOk(bookmarksDisplayed[0] name) assert strictEqual(bookmarksDisplayed[0] name, bookmarksDisplayed[1] name); } finally { resetLocalStorage(); } Each radio button added to #category-list's inner HTML should have a corresponding label containing an anchor element with the bookmark name and the href attribute set to the bookmark URL js setLocalStorage(); const viewCategoryButtonTest = document getElementById(\"view-category-button\"); const categoryDropdownTest = document getElementById(\"category-dropdown\"); try { categoryDropdownTest value = \"news\"; viewCategoryButtonTest dispatchEvent(new Event(\"click\")); const bookmarkLabelsDisplayed = document querySelectorAll('#category-list label'); assertlengthOf(bookmarkLabelsDisplayed, 2);\nassert strictEqual(bookmarkLabelsDisplayed[0] htmlFor, \"example1\");\nassert strictEqual(bookmarkLabelsDisplayed[1] htmlFor, \"example4\");\n} finally {\nresetLocalStorage();\n}\nEach label element should contain an anchor element with the bookmark name as text, and the href attribute set to the bookmark URL js\nsetLocalStorage();\nconst viewCategoryButtonTest = document getElementById(\"view-category-button\");\nconst categoryDropdownTest = document getElementById(\"category-dropdown\");\ntry {\ncategoryDropdownTest value = \"news\";\nviewCategoryButtonTest dispatchEvent(new Event(\"click\"));\nconst bookmarkAnchorsDisplayed = document querySelectorAll('#category-list label>a');\nassert lengthOf(bookmarkAnchorsDisplayed, 2);\nassert strictEqual(bookmarkAnchorsDisplayed[0] innerText trim(), \"example1\");\nassert isTrue(bookmarkAnchorsDisplayed[0] href endsWith(\"example1 com\"));\nassert strictEqual(bookmarkAnchorsDisplayed[1] innerText trim(), \"example4\");\nassert isTrue(bookmarkAnchorsDisplayed[1] href endsWith(\"example4 com\"));\n} finally {\nresetLocalStorage();\n}\nWhen you click #close-list-button, you should hide #bookmark-list-section and display the main section js\nconst viewCategoryButtonTest = document getElementById(\"view-category-button\");\nconst closeListButtonTest = document getElementById(\"close-list-button\");\nviewCategoryButtonTest dispatchEvent(new Event(\"click\"));\nassert strictEqual(getHidden(\"bookmark list\"), \"main\");\ncloseListButtonTest dispatchEvent(new Event(\"click\"));\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 8,
    "total_chunks": 18
  },
  {
    "id": "37c5bad395cafc9e14b1a0a287bc57e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "categoryDropdownTest value = \"news\"; viewCategoryButtonTest dispatchEvent(new Event(\"click\")); const bookmarkAnchorsDisplayed = document querySelectorAll('#category-list label>a'); assert lengthOf(bookmarkAnchorsDisplayed, 2); assert strictEqual(bookmarkAnchorsDisplayed[0] innerText trim(), \"example1\"); assert isTrue(bookmarkAnchorsDisplayed[0] href endsWith(\"example1 com\")); assert strictEqual(bookmarkAnchorsDisplayed[1] innerText trim(), \"example4\"); assert isTrue(bookmarkAnchorsDisplayed[1] href endsWith(\"example4 com\")); } finally { resetLocalStorage(); } When you click #close-list-button, you should hide #bookmark-list-section and display the main section js const viewCategoryButtonTest = document getElementById(\"view-category-button\"); const closeListButtonTest = document getElementById(\"close-list-button\"); viewCategoryButtonTest dispatchEvent(new Event(\"click\")); assert strictEqual(getHidden(\"bookmark list\"), \"main\"); closeListButtonTest dispatchEvent(new Event(\"click\")); assertstrictEqual(getHidden(\"bookmark list\"), \"bookmark list\");\nWhen you click the #close-list-button and then open any category, the #category-list should contain only data relevant for the selected category, without duplicating entries ```js\nsetLocalStorage();\nconst viewCategoryButtonTest = document getElementById(\"view-category-button\");\nconst closeListButtonTest = document getElementById(\"close-list-button\");\nconst categoryDropdownTest = document getElementById(\"category-dropdown\");\ntry {\ncategoryDropdownTest value = \"miscellaneous\";\nviewCategoryButtonTest dispatchEvent(new Event(\"click\"));\nconst categoryList = document getElementById(\"category-list\") innerHTML;\nassert strictEqual(categoryList, \"No Bookmarks Found\");\ncloseListButtonTest dispatchEvent(new Event(\"click\"));\ncategoryDropdownTest value = \"news\";\nviewCategoryButtonTest dispatchEvent(new Event(\"click\"));\nconst newsBookmarks = document querySelectorAll('#category-list input[type=\"radio\"]');\nassert lengthOf(newsBookmarks, 2);\nassert strictEqual(newsBookmarks[0] id, \"example1\");\nassert strictEqual(newsBookmarks[0] value, \"example1\");\nassert strictEqual(newsBookmarks[1] id, \"example4\");\nassert strictEqual(newsBookmarks[1] value, \"example4\");\ncloseListButtonTest dispatchEvent(new Event(\"click\"));\ncategoryDropdownTest value = \"work\";\nviewCategoryButtonTest",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 9,
    "total_chunks": 18
  },
  {
    "id": "0c4673db89a1d31e37aa5f08df140841",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "= document getElementById(\"view-category-button\"); const closeListButtonTest = document getElementById(\"close-list-button\"); const categoryDropdownTest = document getElementById(\"category-dropdown\"); try { categoryDropdownTest value = \"miscellaneous\"; viewCategoryButtonTest dispatchEvent(new Event(\"click\")); const categoryList = document getElementById(\"category-list\") innerHTML; assert strictEqual(categoryList, \"No Bookmarks Found\"); closeListButtonTest dispatchEvent(new Event(\"click\")); categoryDropdownTest value = \"news\"; viewCategoryButtonTest dispatchEvent(new Event(\"click\")); const newsBookmarks = document querySelectorAll('#category-list input[type=\"radio\"]'); assert lengthOf(newsBookmarks, 2); assert strictEqual(newsBookmarks[0] id, \"example1\"); assert strictEqual(newsBookmarks[0] value, \"example1\"); assert strictEqual(newsBookmarks[1] id, \"example4\"); assert strictEqual(newsBookmarks[1] value, \"example4\"); closeListButtonTest dispatchEvent(new Event(\"click\")); categoryDropdownTest value = \"work\"; viewCategoryButtonTestdispatchEvent(new Event(\"click\"));\nconst workBookmarks = document querySelectorAll('#category-list input[type=\"radio\"]');\nassert lengthOf(workBookmarks, 1);\nassert strictEqual(workBookmarks[0] id, \"example3\");\nassert strictEqual(workBookmarks[0] value, \"example3\");\ncategoryDropdownTest value = \"miscellaneous\";\nviewCategoryButtonTest dispatchEvent(new Event(\"click\"));\nconst paragraphs = document querySelectorAll(\"#category-list p\");\nassert lengthOf(paragraphs, 1);\nassert strictEqual(paragraphs[0] innerText trim(), \"No Bookmarks Found\");\n} finally {\nresetLocalStorage();\nclearCategoryList();\n}\n```\nWhen you click the #delete-bookmark-button, you should delete the bookmark corresponding to the selected radio button and appropriate category from the local storage and update the displayed bookmark list ```js\nsetLocalStorage();\nconst viewCategoryButtonTest = document getElementById(\"view-category-button\");\nconst deleteBookmarkButtonTest = document getElementById(\"delete-bookmark-button\");\nconst categoryDropdownTest = document getElementById(\"category-dropdown\");\ntry {\ncategoryDropdownTest value = \"news\";\nviewCategoryButtonTest dispatchEvent(new Event(\"click\"));\nconst firstRadioButton = document querySelector('#category-list input[type=\"radio\"]');\nfirstRadioButton checked = true;\ndeleteBookmarkButtonTest dispatchEvent(new Event(\"click\"));\nlet bookmarksDisplayed = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 10,
    "total_chunks": 18
  },
  {
    "id": "22342ad982bc51364a61bba8ec6b1a49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "resetLocalStorage(); clearCategoryList(); } ``` When you click the #delete-bookmark-button, you should delete the bookmark corresponding to the selected radio button and appropriate category from the local storage and update the displayed bookmark list ```js setLocalStorage(); const viewCategoryButtonTest = document getElementById(\"view-category-button\"); const deleteBookmarkButtonTest = document getElementById(\"delete-bookmark-button\"); const categoryDropdownTest = document getElementById(\"category-dropdown\"); try { categoryDropdownTest value = \"news\"; viewCategoryButtonTest dispatchEvent(new Event(\"click\")); const firstRadioButton = document querySelector('#category-list input[type=\"radio\"]'); firstRadioButton checked = true; deleteBookmarkButtonTest dispatchEvent(new Event(\"click\")); let bookmarksDisplayed = documentquerySelectorAll('#category-list input[type=\"radio\"]');\nlet bookmarkLabelsDisplayed = document querySelectorAll('#category-list label');\nassert lengthOf(bookmarksDisplayed, 1);\nassert strictEqual(bookmarksDisplayed[0] id, \"example4\");\nassert strictEqual(bookmarksDisplayed[0] value, \"example4\");\nassert lengthOf(bookmarkLabelsDisplayed, 1);\nassert strictEqual(bookmarkLabelsDisplayed[0] htmlFor, \"example4\");\nconst expected = [{name: \"example2\", category: \"entertainment\", url: \"example2 com\"}, {name: \"example3\", category: \"work\", url: \"example3 com\"}, {name: \"example4\", category: \"news\", url: \"example4 com\"}];\nassert deepEqual(getBookmarks(), expected);\nlocalStorage setItem(\"bookmarks\", JSON stringify([{name: \"duplicated-name\", category: \"news\", url: \"example1 com\"}, {name: \"duplicated-name\", category: \"entertainment\", url: \"example2 com\"}]));\ncategoryDropdownTest value = \"entertainment\";\nviewCategoryButtonTest dispatchEvent(new Event(\"click\"));\nconst radioForDuplicate = document querySelector('#category-list input[type=\"radio\"]');\nradioForDuplicate checked = true;\ndeleteBookmarkButtonTest dispatchEvent(new Event(\"click\"));\nassert deepEqual(getBookmarks(), [{name: \"duplicated-name\", category: \"news\", url: \"example1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 11,
    "total_chunks": 18
  },
  {
    "id": "4ad3805e6e2b6beb1d70eb2363f2bbac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "assert strictEqual(bookmarkLabelsDisplayed[0] htmlFor, \"example4\"); const expected = [{name: \"example2\", category: \"entertainment\", url: \"example2 com\"}, {name: \"example3\", category: \"work\", url: \"example3 com\"}, {name: \"example4\", category: \"news\", url: \"example4 com\"}]; assert deepEqual(getBookmarks(), expected); localStorage setItem(\"bookmarks\", JSON stringify([{name: \"duplicated-name\", category: \"news\", url: \"example1 com\"}, {name: \"duplicated-name\", category: \"entertainment\", url: \"example2 com\"}])); categoryDropdownTest value = \"entertainment\"; viewCategoryButtonTest dispatchEvent(new Event(\"click\")); const radioForDuplicate = document querySelector('#category-list input[type=\"radio\"]'); radioForDuplicate checked = true; deleteBookmarkButtonTest dispatchEvent(new Event(\"click\")); assert deepEqual(getBookmarks(), [{name: \"duplicated-name\", category: \"news\", url: \"example1com\"}])\n} finally {\nresetLocalStorage();\n}\n```\n--seed--\n--seed-contents--\n```js\n```\n```html\nBookmark Manager\nBookmark Manager\nSelect a category:\nNews\nEntertainment\nWork\nMiscellaneous\nView Category\nAdd Bookmark\nName:\nURL:\nGo Back\nAdd Bookmark\nGo Back\nDelete Bookmark\n```\n```css\n:root {\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nmain {\ndisplay: flex;\njustify-content: center;\n}\nbody {\nbackground-color: var(--dark-grey);\n} hidden {\ndisplay: none;\n}\nsection {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\n}\nselect,\ninput,\nlabel {\nmargin-left: 10px;\n}\ndiv {\npadding: 30px;\ndisplay: flex;\njustify-content: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 12,
    "total_chunks": 18
  },
  {
    "id": "afc336dadb111cae281fe32373f7ae73",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "Name: URL: Go Back Add Bookmark Go Back Delete Bookmark ``` ```css :root { --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } main { display: flex; justify-content: center; } body { background-color: var(--dark-grey); } hidden { display: none; } section { display: flex; flex-direction: column; justify-content: center; } select, input, label { margin-left: 10px; } div { padding: 30px; display: flex; justify-content: center; }close-form-button {\nbackground: none;\nborder: none;\ncursor: pointer;\n}\nh1, h2 {\nmargin-top: 20px;\ntext-align: center;\n}\ncategory-list {\ntext-align: center;\ndisplay: flex;\nflex-direction: column;\njustify-content: flex-start;\nbackground-color: var(--light-grey);\nalign-self: center;\nwidth: 80%;\nmargin-top: 15px;\nborder-radius: 10px;\n}\ncategory-list,\nh1,\nh2,\nlabel {\ncolor: var(--light-grey);\n}\ncategory-list p {\ncolor: var(--dark-grey);\n}\nbutton {\ncursor: pointer;\npadding: 5px;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\nsection {\nmargin-top: 60px;\nborder: 2px solid var(--golden-yellow);\nwidth: fit-content;\nborder-radius: 10px;\n}\n```\n--solutions--\n```js\nconst categoryDropdown = document getElementById(\"category-dropdown\");\nconst viewCategoryButton = document getElementById(\"view-category-button\");\nconst addBookmarkButton = document getElementById(\"add-bookmark-button\");\nconst mainSection = document getElementById(\"main-section\");\nconst formSection = document getElementById(\"form-section\");\nconst bookmarkListSection = document getElementById(\"bookmark-list-section\");\nconst categoryHeading = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 13,
    "total_chunks": 18
  },
  {
    "id": "f0287c77995db914d964d95337b9fe82",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "cursor: pointer; padding: 5px; width: 100px; margin: 10px; color: var(--dark-grey); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; } button:hover { background-image: linear-gradient(#ffcc4c, #f89808); } section { margin-top: 60px; border: 2px solid var(--golden-yellow); width: fit-content; border-radius: 10px; } ``` --solutions-- ```js const categoryDropdown = document getElementById(\"category-dropdown\"); const viewCategoryButton = document getElementById(\"view-category-button\"); const addBookmarkButton = document getElementById(\"add-bookmark-button\"); const mainSection = document getElementById(\"main-section\"); const formSection = document getElementById(\"form-section\"); const bookmarkListSection = document getElementById(\"bookmark-list-section\"); const categoryHeading = documentquerySelectorAll(\" category-name\");\nconst closeFormButton = document getElementById(\"close-form-button\");\nconst bookmarkName = document getElementById(\"name\");\nconst bookmarkURL = document getElementById(\"url\");\nconst addBookmarkButtonForm = document getElementById(\"add-bookmark-button-form\");\nconst categoryList = document getElementById(\"category-list\");\nconst closeListButton = document getElementById(\"close-list-button\");\nconst deleteBookmarkButton = document getElementById(\"delete-bookmark-button\");\nconst getBookmarks = () => {\ntry {\nconst parsed = JSON parse(localStorage getItem(\"bookmarks\"));\nif (\nArray isArray(parsed) &&\nparsed every(\n(item) =>\nitem hasOwnProperty(\"category\") &&\nitem hasOwnProperty(\"name\") &&\nitem hasOwnProperty(\"url\"),\n)\n) {\nreturn parsed;\n}\nreturn [];\n} catch {\nreturn [];\n}\n};\nconst displayOrCloseForm = () => {\nmainSection classList toggle(\"hidden\");\nformSection classList toggle(\"hidden\");\n}\naddBookmarkButton addEventListener(\"click\", () => {\ncategoryHeading[0] innerText = categoryDropdown value charAt(0) toUpperCase()\n+ categoryDropdown value slice(1);\ndisplayOrCloseForm();\n});\ncloseFormButton addEventListener(\"click\", displayOrCloseForm);\nconst addBookmark = () => {\nconst bookmarkObject = {\nname: bookmarkName value,\ncategory: categoryDropdown value,\nurl: bookmarkURL value\n};\nif (bookmarkName value length && bookmarkURL value length) {\nlocalStorage setItem(\"bookmarks\", JSON",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 14,
    "total_chunks": 18
  },
  {
    "id": "bcb15cb7ddd34dd3bdb9ccdd31f15ee7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "} return []; } catch { return []; } }; const displayOrCloseForm = () => { mainSection classList toggle(\"hidden\"); formSection classList toggle(\"hidden\"); } addBookmarkButton addEventListener(\"click\", () => { categoryHeading[0] innerText = categoryDropdown value charAt(0) toUpperCase() + categoryDropdown value slice(1); displayOrCloseForm(); }); closeFormButton addEventListener(\"click\", displayOrCloseForm); const addBookmark = () => { const bookmarkObject = { name: bookmarkName value, category: categoryDropdown value, url: bookmarkURL value }; if (bookmarkName value length && bookmarkURL value length) { localStorage setItem(\"bookmarks\", JSONstringify(getBookmarks() concat(bookmarkObject)))\nbookmarkName value = \"\";\nbookmarkURL value = \"\";\ndisplayOrCloseForm()\n} else {\nalert(\"Please, provide valid name and URL \")\n}\n}\naddBookmarkButtonForm addEventListener(\"click\", addBookmark);\nconst displayOrHideCategory = () => {\nmainSection classList toggle(\"hidden\");\nbookmarkListSection classList toggle(\"hidden\");\n}\nconst fillBookmarkList = () => {\ncategoryHeading[1] innerText = categoryDropdown value charAt(0) toUpperCase()\n+ categoryDropdown value slice(1);\nconst bookmarksToDisplay = getBookmarks() filter((i) => i category === categoryDropdown value);\nif (bookmarksToDisplay length) {\ncategoryList innerHTML = '';\nfor (const bookmark of bookmarksToDisplay) {\ncategoryList innerHTML += <div>\n<input type=\"radio\" name=\"bookmarks\" id=\"${bookmark name}\" value=\"${bookmark name}\">\n<label for=\"${bookmark name}\">\n<a href=\"${bookmark url}\">${bookmark name}</a>\n</label>\n</div>\n}\n} else {\ncategoryList innerHTML = 'No Bookmarks Found';\n}\n}\nviewCategoryButton addEventListener(\"click\", () => {\nfillBookmarkList();\ndisplayOrHideCategory();\n})\ncloseListButton addEventListener(\"click\", displayOrHideCategory)\nconst deleteBookmark = () => {\nconst radioBookmarks = document querySelectorAll('input[type=\"radio\"]');\nfor (const radioBookmark of radioBookmarks) {\nif (radioBookmark checked) {\nconst bookmarks = getBookmarks();\nconst indexToRemove = bookmarks findIndex(i => i name == radioBookmark value && i category === categoryDropdown value);\nbookmarks splice(indexToRemove, 1);\nlocalStorage setItem(\"bookmarks\", JSON stringify(bookmarks));\nreturn\n}\n}\n}\ndeleteBookmarkButton",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 15,
    "total_chunks": 18
  },
  {
    "id": "13986304cff11cc98a8caa2bbc5c04c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "} else { categoryList innerHTML = 'No Bookmarks Found'; } } viewCategoryButton addEventListener(\"click\", () => { fillBookmarkList(); displayOrHideCategory(); }) closeListButton addEventListener(\"click\", displayOrHideCategory) const deleteBookmark = () => { const radioBookmarks = document querySelectorAll('input[type=\"radio\"]'); for (const radioBookmark of radioBookmarks) { if (radioBookmark checked) { const bookmarks = getBookmarks(); const indexToRemove = bookmarks findIndex(i => i name == radioBookmark value && i category === categoryDropdown value); bookmarks splice(indexToRemove, 1); localStorage setItem(\"bookmarks\", JSON stringify(bookmarks)); return } } } deleteBookmarkButtonaddEventListener(\"click\", () => {\ndeleteBookmark();\nfillBookmarkList();\n})\n```\n```html\nBookmark Manager\nBookmark Manager\nSelect a category:\nNews\nEntertainment\nWork\nMiscellaneous\nView Category\nAdd Bookmark\nName:\nURL:\nGo Back\nAdd Bookmark\nGo Back\nDelete Bookmark\n```\n```css\n:root {\n--light-grey: #f5f6f7;\n--dark-grey: #0a0a23;\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n}\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nmain {\ndisplay: flex;\njustify-content: center;\n}\nbody {\nbackground-color: var(--dark-grey);\n} hidden {\ndisplay: none;\n}\nsection {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\n}\nselect,\ninput,\nlabel {\nmargin-left: 10px;\n}\ndiv {\npadding: 30px;\ndisplay: flex;\njustify-content: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 16,
    "total_chunks": 18
  },
  {
    "id": "47b7925c8508c80de816b4c1d35ed613",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
    "source_type": "git_repo",
    "title": "Bookmark Manager",
    "content": "Name: URL: Go Back Add Bookmark Go Back Delete Bookmark ``` ```css :root { --light-grey: #f5f6f7; --dark-grey: #0a0a23; --yellow: #f1be32; --golden-yellow: #feac32; } , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } main { display: flex; justify-content: center; } body { background-color: var(--dark-grey); } hidden { display: none; } section { display: flex; flex-direction: column; justify-content: center; } select, input, label { margin-left: 10px; } div { padding: 30px; display: flex; justify-content: center; }close-form-button {\nbackground: none;\nborder: none;\ncursor: pointer;\n}\nh1, h2 {\nmargin-top: 20px;\ntext-align: center;\n}\ncategory-list {\ntext-align: center;\ndisplay: flex;\nflex-direction: column;\njustify-content: flex-start;\nbackground-color: var(--light-grey);\nalign-self: center;\nwidth: 80%;\nmargin-top: 15px;\nborder-radius: 10px;\n}\ncategory-list,\nh1,\nh2,\nlabel {\ncolor: var(--light-grey);\n}\ncategory-list p {\ncolor: var(--dark-grey);\n}\nbutton {\ncursor: pointer;\npadding: 5px;\nwidth: 100px;\nmargin: 10px;\ncolor: var(--dark-grey);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}\nbutton:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\nsection {\nmargin-top: 60px;\nborder: 2px solid var(--golden-yellow);\nwidth: fit-content;\nborder-radius: 10px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31735,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-bookmark-manager-app\\66def5467aee701733aaf8cc.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 17,
    "total_chunks": 18
  },
  {
    "id": "f688192520b0ad86e2d95de81705c166",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-checkout-page\\66da326c02141df538f29ba5.md",
    "source_type": "git_repo",
    "title": "Checkout Page",
    "content": "id: 66da326c02141df538f29ba5\ntitle: Build a Checkout Page\nchallengeType: 25\ndashedName: build-a-checkout-page\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have an h1 element with the text Checkout You should have two section elements immediately after the h1 element You should have an h2 element with the text Your Cart within the first section You should have an image of an item in the first section with appropriate alternate text You can use this image if you would like: https://cdn freecodecamp org/curriculum/labs/cube jpg\nYou should have an h2 element with the text Payment Information within the second section You should have a form element within the second section You should have an input with an id and name of card-name within your form and a label associated with it You should have an input with an id and name of card-number within your form and a label associated with it At least two of your input elements should be required and have an aria-required attribute set to true --hints--\nYou should have an h1 element with the text Checkout js\nassert equal(document querySelector('h1') innerText, 'Checkout');\nYou should only have one h1 element on your page js\nassert lengthOf(document querySelectorAll('h1'), 1);\nYou should have at least two section elements after the h1 element js\nconst h1 = document querySelector('h1');\nconst firstSibling = h1 nextElementSibling;\nconst secondSibling = firstSibling nextElementSibling;\nassert equal(firstSibling tagName, 'SECTION');\nassert equal(secondSibling tagName, 'SECTION');\nYou should have an h2 element with the text Your Cart within the first section js\nconst firstSection = document querySelectorAll('section') [0];\nassert equal(firstSection querySelector('h2') innerText, 'Your Cart');\nYou should have at least one image with alternate text in your first section js\nconst firstSection = document querySelectorAll('section') [0];\nassert isAtLeast(firstSection querySelector('img') alt length, 1);\nYou should have an h2 element with the text Payment Information within the second section js\nconst secondSection = document querySelectorAll('section') [1];\nassert equal(secondSection querySelector('h2')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5830,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-checkout-page\\66da326c02141df538f29ba5.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7b81279a057d88f635831bfd173d7cdb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-checkout-page\\66da326c02141df538f29ba5.md",
    "source_type": "git_repo",
    "title": "Checkout Page",
    "content": "h2 element with the text Your Cart within the first section js const firstSection = document querySelectorAll('section') [0]; assert equal(firstSection querySelector('h2') innerText, 'Your Cart'); You should have at least one image with alternate text in your first section js const firstSection = document querySelectorAll('section') [0]; assert isAtLeast(firstSection querySelector('img') alt length, 1); You should have an h2 element with the text Payment Information within the second section js const secondSection = document querySelectorAll('section') [1]; assert equal(secondSection querySelector('h2')innerText, 'Payment Information');\nYou should have a form element within the second section element js\nconst secondSection = document querySelectorAll('section') [1];\nassert exists(secondSection querySelector('form'));\nYou should have an input element with an id and name of card-name within your form js\nconst secondSection = document querySelectorAll('section') [1];\nassert exists(secondSection querySelector('form input#card-name'));\nassert exists(secondSection querySelector('form input[name=\"card-name\"]'));\nYou should have an input element with an id and name of card-number within your form js\nconst secondSection = document querySelectorAll('section') [1];\nassert exists(secondSection querySelector('form input#card-number'));\nassert exists(secondSection querySelector('form input[name=\"card-number\"]'));\nAll of your input elements that aren't a type of submit should have a label element associated with them js\nconst inputs = document querySelectorAll('input:not([type=\"submit\"])');\nassert isAtLeast(inputs length, 1);\ninputs forEach(input => assert exists(document querySelector(`label[for=\"${input id}\"]`)));\nAt least two of your input elements should be required and have an aria-required attribute set to true js\nconst inputs = document querySelectorAll('input');\nconst requiredInputs = Array from(inputs) filter(input => input required && input getAttribute('aria-required') === 'true');\nassert isAtLeast(requiredInputs length, 2)\n--seed--\n--seed-contents--\n```html\nCheckout Page\n```\n--solutions--\n```html\nCheckout Page\nCheckout\nYour Cart\nLeft-handed spoon\n$29 99\nPayment Information\nCardholder Name\nCard Number\nExpiry Date\nCVV\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5830,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-checkout-page\\66da326c02141df538f29ba5.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a272b052dee98b2ae16e189dd5b2b12c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-chunky-monkey\\a9bd25c716030ec90084d8a1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a9bd25c716030ec90084d8a1\ntitle: Implement the Chunky Monkey Algorithm\nchallengeType: 26\ndashedName: implement-the-chunky-monkey-algorithm\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nWrite a function named chunkArrayInGroups that takes an array as first argument and a number as second argument The function should split the array into smaller arrays of length equal to the second argument and returns them as a two-dimensional array --hints--\nchunkArrayInGroups([\"a\", \"b\", \"c\", \"d\"], 2) should return [[\"a\", \"b\"], [\"c\", \"d\"]] js\nassert deepEqual(chunkArrayInGroups(['a', 'b', 'c', 'd'], 2), [\n['a', 'b'],\n['c', 'd']\n]);\nchunkArrayInGroups([0, 1, 2, 3, 4, 5], 3) should return [[0, 1, 2], [3, 4, 5]] js\nassert deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 3), [\n[0, 1, 2],\n[3, 4, 5]\n]);\nchunkArrayInGroups([0, 1, 2, 3, 4, 5], 2) should return [[0, 1], [2, 3], [4, 5]] js\nassert deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 2), [\n[0, 1],\n[2, 3],\n[4, 5]\n]);\nchunkArrayInGroups([0, 1, 2, 3, 4, 5], 4) should return [[0, 1, 2, 3], [4, 5]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2278,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-chunky-monkey\\a9bd25c716030ec90084d8a1.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "389ddcc84ecc1ea60fb7d9fb7c0d3f62",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-chunky-monkey\\a9bd25c716030ec90084d8a1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "5], 3) should return [[0, 1, 2], [3, 4, 5]] js assert deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 3), [ [0, 1, 2], [3, 4, 5] ]); chunkArrayInGroups([0, 1, 2, 3, 4, 5], 2) should return [[0, 1], [2, 3], [4, 5]] js assert deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 2), [ [0, 1], [2, 3], [4, 5] ]); chunkArrayInGroups([0, 1, 2, 3, 4, 5], 4) should return [[0, 1, 2, 3], [4, 5]] js assertdeepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 4), [\n[0, 1, 2, 3],\n[4, 5]\n]);\nchunkArrayInGroups([0, 1, 2, 3, 4, 5, 6], 3) should return [[0, 1, 2], [3, 4, 5], [6]] js\nassert deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6], 3), [\n[0, 1, 2],\n[3, 4, 5],\n[6]\n]);\nchunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 4) should return [[0, 1, 2, 3], [4, 5, 6, 7], [8]] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2278,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-chunky-monkey\\a9bd25c716030ec90084d8a1.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "cb80af8319521380eae212626d9e15c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-chunky-monkey\\a9bd25c716030ec90084d8a1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "5]] js assertdeepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 4), [ [0, 1, 2, 3], [4, 5] ]); chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6], 3) should return [[0, 1, 2], [3, 4, 5], [6]] js assert deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6], 3), [ [0, 1, 2], [3, 4, 5], [6] ]); chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 4) should return [[0, 1, 2, 3], [4, 5, 6, 7], [8]] js assertdeepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 4), [\n[0, 1, 2, 3],\n[4, 5, 6, 7],\n[8]\n]);\nchunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 2) should return [[0, 1], [2, 3], [4, 5], [6, 7], [8]] js\nassert deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 2), [\n[0, 1],\n[2, 3],\n[4, 5],\n[6, 7],\n[8]\n]);\n--seed--\n--seed-contents--\njs\n--solutions--\n```js\nfunction chunkArrayInGroups(arr, size) {\nlet out = [];\nfor (let i = 0; i < arr length; i += size) {\nout push(arr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2278,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-chunky-monkey\\a9bd25c716030ec90084d8a1.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "c262869fb11f870319527b7cce189aca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-chunky-monkey\\a9bd25c716030ec90084d8a1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "6, 7], [8] ]); chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 2) should return [[0, 1], [2, 3], [4, 5], [6, 7], [8]] js assert deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 2), [ [0, 1], [2, 3], [4, 5], [6, 7], [8] ]); --seed-- --seed-contents-- js --solutions-- ```js function chunkArrayInGroups(arr, size) { let out = []; for (let i = 0; i < arr length; i += size) { out push(arrslice(i, i + size));\n}\nreturn out;\n}\nchunkArrayInGroups(['a', 'b', 'c', 'd'], 2);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2278,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-chunky-monkey\\a9bd25c716030ec90084d8a1.md",
      "source_type": "git_repo"
    },
    "token_count": 221,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "b3e98a0dea07ee5b3dc284f4a7815664",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-color-picker\\67bf4350777ac6ffdc027745.md",
    "source_type": "git_repo",
    "title": "Color Picker",
    "content": "id: 67bf4350777ac6ffdc027745\ntitle: Build a Color Picker App\nchallengeType: 25\ndashedName: build-a-color-picker-app\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should define and export a ColorPicker component You should use the useState hook You should have a #color-picker-container element with a white background You should have a #color-input element which should be a color input Your #color-input should be a child of #color-picker-container When #color-input is changed, #color-picker-container should have its background set to that new value --hints--\nYou should define and export a ColorPicker component ```js\nasync () => {\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nassert property(exports, \"ColorPicker\");\n}\n```\nYou should use the useState hook js\nasync () => {\nconst abuseState = __helpers spyOn(React, \"useState\");\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nconst _b = await __helpers prepTestComponent(exports ColorPicker);\nassert isAtLeast(abuseState calls length, 1);\n}\nYou should use the return value of the useState hook js\nassert match(code, /=\\s*( :React\\ ) useState\\(/);\nYou should use array destructuring to assign the return value of useState to two variables js\nassert match(code, /\\[ *, *\\]\\s*=\\s*( :React\\ ) useState\\(/);\nYou should pass #ffffff as the initial value to your useState call js\nasync () => {\nconst abuseState = __helpers spyOn(React, \"useState\");\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText;\nconst exports = {};\nconst _a = eval(script);\nconst _b = await __helpers prepTestComponent(exports ColorPicker);\nassert match(abuseState calls[0], /#ffffff/i);\n}\nYou should render an element with color-picker-container as the id js\nassert exists(document getElementById(\"color-picker-container\"));\nYour #color-picker-container should have a white background initially",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-color-picker\\67bf4350777ac6ffdc027745.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "622a5a864edd875007033c12dbeca4d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-color-picker\\67bf4350777ac6ffdc027745.md",
    "source_type": "git_repo",
    "title": "Color Picker",
    "content": "as the initial value to your useState call js async () => { const abuseState = __helpers spyOn(React, \"useState\"); const script = [ document querySelectorAll(\"script\")] find((s) => s dataset src === \"index jsx\") innerText; const exports = {}; const _a = eval(script); const _b = await __helpers prepTestComponent(exports ColorPicker); assert match(abuseState calls[0], /#ffffff/i); } You should render an element with color-picker-container as the id js assert exists(document getElementById(\"color-picker-container\")); Your #color-picker-container should have a white background initiallyjs\nconst el = document getElementById(\"color-picker-container\");\nconst style = window getComputedStyle(el);\nassert strictEqual(style backgroundColor, \"rgb(255, 255, 255)\");\nYou should render an input element with an id of color-input js\nconst inputMaybe = document getElementById(\"color-input\");\nassert exists(inputMaybe);\nassert strictEqual(inputMaybe tagName, \"INPUT\");\nYour #color-input should be a child of #color-picker-container js\nconst inputPossibly = document getElementById(\"color-input\");\nconst parent = inputPossibly parentElement;\nassert exists(parent);\nassert strictEqual(parent getAttribute(\"id\"), \"color-picker-container\");\nYour #color-input should be a color input js\nconst inputDefinitely = document getElementById(\"color-input\");\nassert equal(inputDefinitely type, \"color\");\nYour #color-input should have an onChange attribute js\nconst definitelyAnInput = document getElementById(\"color-input\");\nassert exists(definitelyAnInput);\nconst key = Object keys(definitelyAnInput) find(key => key startsWith(\"__reactProps\"));\nconst reactInstance = definitelyAnInput[key]\nassert exists(reactInstance);\nassert isFunction(reactInstance onChange);\nYour #color-input should have an initial value of #ffffff js\nconst mostCertainlyAnInput = document getElementById(\"color-input\");\nassert exists(mostCertainlyAnInput);\nassert strictEqual(mostCertainlyAnInput value, \"#ffffff\");\nThe initial value of your #color-input should be managed by your useState hook js\nconst declaredState = code match(/( :const|let|var)\\s*\\[\\s*( *)\\s*, *\\]\\s*=\\s*useState/);\nconst declaredStateVar = declaredState [1];\nconst regex = new RegExp(`value\\s*=\\s*\\{\\s*${declaredStateVar}\\s*}`);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-color-picker\\67bf4350777ac6ffdc027745.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "212b9be5e3b142c6687ba71527cddfc0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-color-picker\\67bf4350777ac6ffdc027745.md",
    "source_type": "git_repo",
    "title": "Color Picker",
    "content": "document getElementById(\"color-input\"); assert exists(definitelyAnInput); const key = Object keys(definitelyAnInput) find(key => key startsWith(\"__reactProps\")); const reactInstance = definitelyAnInput[key] assert exists(reactInstance); assert isFunction(reactInstance onChange); Your #color-input should have an initial value of #ffffff js const mostCertainlyAnInput = document getElementById(\"color-input\"); assert exists(mostCertainlyAnInput); assert strictEqual(mostCertainlyAnInput value, \"#ffffff\"); The initial value of your #color-input should be managed by your useState hook js const declaredState = code match(/( :const|let|var)\\s*\\[\\s*( *)\\s*, *\\]\\s*=\\s*useState/); const declaredStateVar = declaredState [1]; const regex = new RegExp(`value\\s*=\\s*\\{\\s*${declaredStateVar}\\s*}`); assertmatch(code, regex);\nWhen your #color-input value is changed, your #color-picker-container should change its background color to reflect that value js\nasync () => {\nconst inputForSure = document getElementById(\"color-input\");\nassert exists(inputForSure);\nconst nativeValueSetter = Object getOwnPropertyDescriptor(window HTMLInputElement prototype, \"value\") set;\nawait React act(async () => {\nnativeValueSetter call(inputForSure, \"#000001\");\ninputForSure dispatchEvent(new Event(\"input\", { bubbles: true}));\n});\nconst container = document getElementById(\"color-picker-container\");\nassert exists(container);\nconst style = window getComputedStyle(container);\nassert equal(style",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-color-picker\\67bf4350777ac6ffdc027745.md",
      "source_type": "git_repo"
    },
    "token_count": 322,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "6b3fd97c04aa772d80a54713faee4015",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-color-picker\\67bf4350777ac6ffdc027745.md",
    "source_type": "git_repo",
    "title": "Color Picker",
    "content": "[1]; const regex = new RegExp(`value\\s*=\\s*\\{\\s*${declaredStateVar}\\s*}`); assertmatch(code, regex); When your #color-input value is changed, your #color-picker-container should change its background color to reflect that value js async () => { const inputForSure = document getElementById(\"color-input\"); assert exists(inputForSure); const nativeValueSetter = Object getOwnPropertyDescriptor(window HTMLInputElement prototype, \"value\") set; await React act(async () => { nativeValueSetter call(inputForSure, \"#000001\"); inputForSure dispatchEvent(new Event(\"input\", { bubbles: true})); }); const container = document getElementById(\"color-picker-container\"); assert exists(container); const style = window getComputedStyle(container); assert equal(stylebackgroundColor, \"rgb(0, 0, 1)\");\n}\n--seed--\n--seed-contents--\n```html\nColor Picker\n```\n```css\nbody,\nhtml {\nmargin: 0;\npadding: 0;\nheight: 100%;\nfont-family: Arial, sans-serif;\n}\ncolor-picker-container {\nheight: 100vh;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nflex-direction: column;\nbackground-color: #ffffff;\n}\ninput[type=\"color\"] {\nposition: absolute;\nmargin-top: 50px;\nheight: 40px;\n}\n```\n```jsx\nconst { useState } = React;\nexport const ColorPicker = () => {};\n```\n--solutions--\n```html\nColor Picker\n```\n```css\nbody,\nhtml {\nmargin: 0;\npadding: 0;\nheight: 100%;\nfont-family: Arial, sans-serif;\n}\ncolor-picker-container {\nheight: 100vh;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nflex-direction: column;\nbackground-color: #ffffff;\n}\npick-color-btn {\npadding: 15px 30px;\nfont-size: 18px;\ncolor: white;\nbackground-color: #14183c;\nborder: none;\nborder-radius: 5px;\ncursor: pointer;\nmargin-top: 20px;\n}\npick-color-btn:hover {\nbackground-color: #08131f;\n}\ninput[type=\"color\"] {\nposition: absolute;\nmargin-top: 50px;\nheight: 40px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-color-picker\\67bf4350777ac6ffdc027745.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "28dc0131d6fccd92439c2328c945a741",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-color-picker\\67bf4350777ac6ffdc027745.md",
    "source_type": "git_repo",
    "title": "Color Picker",
    "content": "export const ColorPicker = () => {}; ``` --solutions-- ```html Color Picker ``` ```css body, html { margin: 0; padding: 0; height: 100%; font-family: Arial, sans-serif; } color-picker-container { height: 100vh; display: flex; justify-content: center; align-items: center; flex-direction: column; background-color: #ffffff; } pick-color-btn { padding: 15px 30px; font-size: 18px; color: white; background-color: #14183c; border: none; border-radius: 5px; cursor: pointer; margin-top: 20px; } pick-color-btn:hover { background-color: #08131f; } input[type=\"color\"] { position: absolute; margin-top: 50px; height: 40px; }stylep{\ncolor: #14183c;\nfont-size: 15px;\nfont-weight: bold;\nmargin-bottom: 50px;\n}\n```\n```jsx\nconst { useState } = React;\nexport const ColorPicker = () => {\nconst [bgColor, setBgColor] = useState('#ffffff');\nconst handleColorChange = (event) => {\nsetBgColor(event target value);\n};\nreturn (\n<div id=\"color-picker-container\" style={{ backgroundColor: bgColor }}>\n<p className=\"stylep\">\nChoose a color using the color input below:\n</p>\n<input\nid=\"color-input\"\ntype=\"color\"\nvalue={bgColor}\nonChange={handleColorChange}\n/>\n</div>\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8675,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-color-picker\\67bf4350777ac6ffdc027745.md",
      "source_type": "git_repo"
    },
    "token_count": 321,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "6186dc5e19311f2db35db9c0ceadd7ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5e44413e903586ffb414c94e\ntitle: Build a Budget App\nchallengeType: 27\ndashedName: build-a-budget-app\n--description--\nComplete the Category class It should be able to instantiate objects based on different budget categories like food, clothing, and entertainment When objects are created, they are passed in the name of the category The class should have an instance variable called ledger that is a list The class should also contain the following methods:\nA deposit method that accepts an amount and description If no description is given, it should default to an empty string The method should append an object to the ledger list in the form of {'amount': amount, 'description': description} A withdraw method that is similar to the deposit method, but the amount passed in should be stored in the ledger as a negative number If there are not enough funds, nothing should be added to the ledger This method should return True if the withdrawal took place, and False otherwise A get_balance method that returns the current balance of the budget category based on the deposits and withdrawals that have occurred A transfer method that accepts an amount and another budget category as arguments The method should add a withdrawal with the amount and the description 'Transfer to [Destination Budget Category]' The method should then add a deposit to the other budget category with the amount and the description 'Transfer from [Source Budget Category]' If there are not enough funds, nothing should be added to either ledgers This method should return True if the transfer took place, and False otherwise A check_funds method that accepts an amount as an argument It returns False if the amount is greater than the balance of the budget category and returns True otherwise This method should be used by both the withdraw method and transfer method When the budget object is printed it should display:\nA title line of 30 characters where the name of the category is centered in a line of * characters A list of the items in the ledger Each line should show the description and amount The first 23 characters of the description should be displayed, then the amount The amount should be right aligned, contain two decimal places, and display a maximum of 7 characters A line displaying the category total Here is an example usage:\npy\nfood = Category('Food')\nfood deposit(1000, 'deposit')\nfood withdraw(10 15, 'groceries')\nfood withdraw(15 89, 'restaurant and more food for dessert')\nclothing = Category('Clothing')\nfood",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 23
  },
  {
    "id": "a7437c30440189a3505e2466a474c7d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "in the ledger Each line should show the description and amount The first 23 characters of the description should be displayed, then the amount The amount should be right aligned, contain two decimal places, and display a maximum of 7 characters A line displaying the category total Here is an example usage: py food = Category('Food') food deposit(1000, 'deposit') food withdraw(10 15, 'groceries') food withdraw(15 89, 'restaurant and more food for dessert') clothing = Category('Clothing') foodtransfer(50, clothing)\nprint(food)\nAnd here is an example of the output:\nbash\n*************Food*************\ninitial deposit        1000 00\ngroceries               -10 15\nrestaurant and more foo -15 89\nTransfer to Clothing    -50 00\nTotal: 923 96\nBesides the Category class, create a function (outside of the class) called create_spend_chart that takes a list of categories as an argument It should return a string that is a bar chart The chart should show the percentage spent in each category passed in to the function The percentage spent should be calculated only with withdrawals and not with deposits, and it should be the percentage of the amount spent for each category to the total spent for all categories Down the left side of the chart should be labels 0 - 100 The 'bars' in the bar chart should be made out of the 'o' character The height of each bar should be rounded down to the nearest 10 The horizontal line below the bars should go two spaces past the final bar Each category name should be written vertically below the bar There should be a title at the top that says 'Percentage spent by category' This function will be tested with up to four categories Look at the example output below very closely and make sure the spacing of the output matches the example exactly bash\nPercentage spent by category\n100|\n90|\n80|\n70|\n60| o\n50| o\n40| o\n30| o\n20| o  o\n10| o  o  o\n0| o  o  o\n----------\nF  C  A\no  l  u\no  o  t\nd  t  o\nh\ni\nn\ng\nNote: open the browser console with F12 to see a more verbose output of the tests --hints--\nThe deposit method should create a specific object in the ledger instance variable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 23
  },
  {
    "id": "4e4525a0ad6df5f3dcd09f3991a18e98",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "exactly bash Percentage spent by category 100| 90| 80| 70| 60| o 50| o 40| o 30| o 20| o o 10| o o o 0| o o o ---------- F C A o l u o o t d t o h i n g Note: open the browser console with F12 to see a more verbose output of the tests --hints-- The deposit method should create a specific object in the ledger instance variable``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\ndef test_deposit(self):\nself food deposit(900, \"deposit\")\nactual = self food ledger[0]\nexpected = {\"amount\": 900, \"description\": \"deposit\"}\nself assertEqual(actual, expected, 'Expected \"deposit\" method to create a specific object in the ledger instance variable ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nCalling the deposit method with no description should create a blank description ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\ndef test_deposit_no_description(self):\nself food deposit(45 56)\nactual = self food ledger[0]\nexpected = {\"amount\": 45 56, \"description\": \"\"}\nself assertEqual(actual, expected, 'Expected calling \"deposit\" method with no description to create a blank description ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 2,
    "total_chunks": 23
  },
  {
    "id": "77cd279641c0ab08f9f014f675e810f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "unittest import budget from importlib import reload reload(budget) class UnitTests(unittest TestCase): maxDiff = None def setUp(self): self food = budget Category(\"Food\") def test_deposit_no_description(self): self food deposit(45 56) actual = self food ledger[0] expected = {\"amount\": 45 56, \"description\": \"\"} self assertEqual(actual, expected, 'Expected calling \"deposit\" method with no description to create a blank description ') ); const testCode = from unittest import main from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t resultwasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nThe withdraw method should create a specific object in the ledger instance variable ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\ndef test_withdraw(self):\nself food deposit(900, \"deposit\")\nself food withdraw(45 67, \"milk, cereal, eggs, bacon, bread\")\nactual = self food ledger[1]\nexpected = {\"amount\": -45 67, \"description\": \"milk, cereal, eggs, bacon, bread\"}\nself assertEqual(actual, expected, 'Expected \"withdraw\" method to create a specific object in the ledger instance variable ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nCalling the withdraw method with no description should create a blank description ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\ndef test_withdraw_no_description(self):\nself food",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 3,
    "total_chunks": 23
  },
  {
    "id": "aa0c33046b6b4f6ede92cb46a87102f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t result wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` Calling the withdraw method with no description should create a blank description ``js ({ test: () => { pyodide FS writeFile('/home/pyodide/budget py', code); pyodide FS writeFile('/home/pyodide/test_module py', import unittest import budget from importlib import reload reload(budget) class UnitTests(unittest TestCase): maxDiff = None def setUp(self): self food = budget Category(\"Food\") def test_withdraw_no_description(self): self fooddeposit(900, \"deposit\")\ngood_withdraw = self food withdraw(45 67)\nactual = self food ledger[1]\nexpected = {\"amount\": -45 67, \"description\": \"\"}\nself assertEqual(actual, expected, 'Expected \"withdraw\" method with no description to create a blank description ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nThe withdraw method should return True if the withdrawal took place ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\ndef test_withdraw_no_description(self):\nself food deposit(900, \"deposit\")\ngood_withdraw = self food withdraw(45 67)\nself assertEqual(good_withdraw, True, 'Expected \"withdraw\" method to return \"True\" ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nCalling food deposit(900, 'deposit') and food withdraw(45 67, 'milk, cereal, eggs, bacon, bread') should return a balance of 854 33",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 4,
    "total_chunks": 23
  },
  {
    "id": "fca2426ff37d81da33f867b1a0c2532a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= budget Category(\"Food\") def test_withdraw_no_description(self): self food deposit(900, \"deposit\") good_withdraw = self food withdraw(45 67) self assertEqual(good_withdraw, True, 'Expected \"withdraw\" method to return \"True\" ') ); const testCode = from unittest import main from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t result wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` Calling food deposit(900, 'deposit') and food withdraw(45 67, 'milk, cereal, eggs, bacon, bread') should return a balance of 854 33``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\ndef test_get_balance(self):\nself food deposit(900, \"deposit\")\nself food withdraw(45 67, \"milk, cereal, eggs, bacon, bread\")\nactual = self food get_balance()\nexpected = 854 33\nself assertEqual(actual, expected, 'Expected balance to be 854 33')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nCalling the transfer method on a category object should create a specific ledger item in that category object ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\nself entertainment = budget Category(\"Entertainment\")\ndef test_transfer(self):\nself food deposit(900, \"deposit\")\nself food withdraw(45 67, \"milk, cereal, eggs, bacon, bread\")\ntransfer_amount = 20\ngood_transfer = self food",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 5,
    "total_chunks": 23
  },
  {
    "id": "e5d8424faf1cf2c8548061c61db2131f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "category object should create a specific ledger item in that category object ``js ({ test: () => { pyodide FS writeFile('/home/pyodide/budget py', code); pyodide FS writeFile('/home/pyodide/test_module py', import unittest import budget from importlib import reload reload(budget) class UnitTests(unittest TestCase): maxDiff = None def setUp(self): self food = budget Category(\"Food\") self entertainment = budget Category(\"Entertainment\") def test_transfer(self): self food deposit(900, \"deposit\") self food withdraw(45 67, \"milk, cereal, eggs, bacon, bread\") transfer_amount = 20 good_transfer = self foodtransfer(transfer_amount, self entertainment)\nactual = self food ledger[2]\nexpected = {\"amount\": -transfer_amount, \"description\": \"Transfer to Entertainment\"}\nself assertEqual(actual, expected, 'Expected \"transfer\" method to create a specific ledger item in food object ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nThe transfer method should return True if the transfer took place ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\nself entertainment = budget Category(\"Entertainment\")\ndef test_transfer(self):\nself food deposit(900, \"deposit\")\nself food withdraw(45 67, \"milk, cereal, eggs, bacon, bread\")\ntransfer_amount = 20\ngood_transfer = self food transfer(transfer_amount, self entertainment)\nself assertEqual(good_transfer, True, 'Expected \"transfer\" method to return \"True\" ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nCalling transfer on a category object should reduce the balance in the category object",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 6,
    "total_chunks": 23
  },
  {
    "id": "12a2c88cbbc19ac06c1d6105b3319b84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "deposit(900, \"deposit\") self food withdraw(45 67, \"milk, cereal, eggs, bacon, bread\") transfer_amount = 20 good_transfer = self food transfer(transfer_amount, self entertainment) self assertEqual(good_transfer, True, 'Expected \"transfer\" method to return \"True\" ') ); const testCode = from unittest import main from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t result wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` Calling transfer on a category object should reduce the balance in the category object``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\nself entertainment = budget Category(\"Entertainment\")\ndef test_transfer(self):\nself food deposit(900, \"deposit\")\nself food withdraw(45 67, \"milk, cereal, eggs, bacon, bread\")\ntransfer_amount = 20\nfood_balance_before = self food get_balance()\ngood_transfer = self food transfer(transfer_amount, self entertainment)\nfood_balance_after = self food get_balance()\nself assertEqual(food_balance_before - food_balance_after, transfer_amount, 'Expected \"transfer\" method to reduce balance in food object ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nThe transfer method should increase the balance of the category object passed as its argument ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\nself entertainment = budget Category(\"Entertainment\")\ndef test_transfer(self):\nself food deposit(900, \"deposit\")\nself food",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 7,
    "total_chunks": 23
  },
  {
    "id": "37a07c5c252daa721f2b218fa159c4e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "result wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` The transfer method should increase the balance of the category object passed as its argument ``js ({ test: () => { pyodide FS writeFile('/home/pyodide/budget py', code); pyodide FS writeFile('/home/pyodide/test_module py', import unittest import budget from importlib import reload reload(budget) class UnitTests(unittest TestCase): maxDiff = None def setUp(self): self food = budget Category(\"Food\") self entertainment = budget Category(\"Entertainment\") def test_transfer(self): self food deposit(900, \"deposit\") self foodwithdraw(45 67, \"milk, cereal, eggs, bacon, bread\")\ntransfer_amount = 20\nentertainment_balance_before = self entertainment get_balance()\ngood_transfer = self food transfer(transfer_amount, self entertainment)\nentertainment_balance_after = self entertainment get_balance()\nself assertEqual(entertainment_balance_after - entertainment_balance_before, transfer_amount, 'Expected \"transfer\" method to increase balance in entertainment object ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nThe transfer method should create a specific ledger item in the category object passed as its argument ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\nself entertainment = budget Category(\"Entertainment\")\ndef test_transfer(self):\nself food deposit(900, \"deposit\")\nself food withdraw(45 67, \"milk, cereal, eggs, bacon, bread\")\ntransfer_amount = 20\ngood_transfer = self food transfer(transfer_amount, self entertainment)\nactual = self entertainment ledger[0]\nexpected = {\"amount\": transfer_amount, \"description\": \"Transfer from Food\"}\nself assertEqual(actual, expected, 'Expected \"transfer\" method to create a specific ledger item in entertainment object",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 8,
    "total_chunks": 23
  },
  {
    "id": "0c920708c76ed2599c7ce6ae63cc1d73",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "from importlib import reload reload(budget) class UnitTests(unittest TestCase): maxDiff = None def setUp(self): self food = budget Category(\"Food\") self entertainment = budget Category(\"Entertainment\") def test_transfer(self): self food deposit(900, \"deposit\") self food withdraw(45 67, \"milk, cereal, eggs, bacon, bread\") transfer_amount = 20 good_transfer = self food transfer(transfer_amount, self entertainment) actual = self entertainment ledger[0] expected = {\"amount\": transfer_amount, \"description\": \"Transfer from Food\"} self assertEqual(actual, expected, 'Expected \"transfer\" method to create a specific ledger item in entertainment object')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nThe check_funds method should return False if the amount passed to the method is greater than the category balance ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\ndef test_check_funds(self):\nself food deposit(10, \"deposit\")\nactual = self food check_funds(20)\nexpected = False\nself assertEqual(actual, expected, 'Expected \"check_funds\" method to be False')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nThe check_funds method should return True if the amount passed to the method is not greater than the category balance ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 9,
    "total_chunks": 23
  },
  {
    "id": "d6d337bf464777c2b7bf09e348c3d35c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "reload import test_module reload(test_module) t = main(module='test_module', exit=False) t result wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` The check_funds method should return True if the amount passed to the method is not greater than the category balance ``js ({ test: () => { pyodide FS writeFile('/home/pyodide/budget py', code); pyodide FS writeFile('/home/pyodide/test_module py', import unittest import budget from importlib import reload reload(budget) class UnitTests(unittest TestCase): maxDiff = None def setUp(self): self food = budgetCategory(\"Food\")\ndef test_check_funds(self):\nself food deposit(10, \"deposit\")\nactual = self food check_funds(10)\nexpected = True\nself assertEqual(actual, expected, 'Expected \"check_funds\" method to be True')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nThe withdraw method should return False if the withdrawal didn't take place ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\ndef test_withdraw_no_funds(self):\nself food deposit(100, \"deposit\")\ngood_withdraw = self food withdraw(100 10)\nself assertEqual(good_withdraw, False, 'Expected \"withdraw\" method to return \"False\" ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nThe transfer method should return False if the transfer didn't take place ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 10,
    "total_chunks": 23
  },
  {
    "id": "3b610e4467e2f39e967dab842ef140b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "food deposit(100, \"deposit\") good_withdraw = self food withdraw(100 10) self assertEqual(good_withdraw, False, 'Expected \"withdraw\" method to return \"False\" ') ); const testCode = from unittest import main from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t result wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` The transfer method should return False if the transfer didn't take place ``js ({ test: () => { pyodide FS writeFile('/home/pyodide/budget py', code); pyodide FS writeFile('/home/pyodide/test_modulepy',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\nself entertainment = budget Category(\"Entertainment\")\ndef test_transfer_no_funds(self):\nself food deposit(100, \"deposit\")\ngood_transfer = self food transfer(200, self entertainment)\nself assertEqual(good_transfer, False, 'Expected \"transfer\" method to return \"False\" ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nPrinting a Category instance should give a different string representation of the object ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\nself entertainment = budget Category(\"Entertainment\")\ndef test_to_string(self):\nself food deposit(900, \"deposit\")\nself food withdraw(45 67, \"milk, cereal, eggs, bacon, bread\")\nself food transfer(20, self entertainment)\nactual = str(self food)\nexpected = \"*************Food*************\\\\ndeposit                 900 00\\\\nmilk, cereal, eggs, bac -45 67\\\\nTransfer to Entertainme -20 00\\\\nTotal: 834",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 11,
    "total_chunks": 23
  },
  {
    "id": "a52d0b69100931bca2dac9ae96d9e214",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{ pyodide FS writeFile('/home/pyodide/budget py', code); pyodide FS writeFile('/home/pyodide/test_module py', import unittest import budget from importlib import reload reload(budget) class UnitTests(unittest TestCase): maxDiff = None def setUp(self): self food = budget Category(\"Food\") self entertainment = budget Category(\"Entertainment\") def test_to_string(self): self food deposit(900, \"deposit\") self food withdraw(45 67, \"milk, cereal, eggs, bacon, bread\") self food transfer(20, self entertainment) actual = str(self food) expected = \"*************Food*************\\\\ndeposit 900 00\\\\nmilk, cereal, eggs, bac -45 67\\\\nTransfer to Entertainme -20 00\\\\nTotal: 83433\"\nself assertEqual(actual, expected, 'Expected different string representation of object ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nTitle at the top of create_spend_chart chart should say Percentage spent by category ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\ndef test_create_spend_chart(self):\nself food deposit(900, \"deposit\")\nself food withdraw(105 55)\nchart = budget create_spend_chart([self food])\nexpected = \"Percentage spent by category\"\nself assertEqual(chart split(\"\\\\n\")[0], expected, \"Chart should have correct title \")\n`);\nconst testCode = `\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\ncreate_spend_chart chart should have correct percentages down the left side ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 12,
    "total_chunks": 23
  },
  {
    "id": "9c2723891219a81e2259f6726f069f88",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "self food withdraw(105 55) chart = budget create_spend_chart([self food]) expected = \"Percentage spent by category\" self assertEqual(chart split(\"\\\\n\")[0], expected, \"Chart should have correct title \") `); const testCode = ` from unittest import main from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t result wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` create_spend_chart chart should have correct percentages down the left side ``js ({ test: () => { pyodide FS writeFile('/home/pyodide/budgetpy', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\ndef test_create_spend_chart(self):\nself food deposit(900, \"deposit\")\nself food withdraw(105 55)\nchart = budget create_spend_chart([self food])\npercentages = [\"100|\", \" 90|\", \" 80|\", \" 70|\", \" 60|\", \" 50|\", \" 40|\", \" 30|\", \" 20|\", \" 10|\", \"  0|\"]\nfor line, percent in zip(chart split(\"\\\\n\")[1:], percentages):\nself assertTrue(line startswith(percent), \"Chart correct percentages in the vertical axis \")\n`);\nconst testCode = `\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nThe height of each bar on the create_spend_chart chart should be rounded down to the nearest 10 ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\nself entertainment = budget Category(\"Entertainment\")\nself business = budget Category(\"Business\")\nself food",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 13,
    "total_chunks": 23
  },
  {
    "id": "b8220a1422fc52a740085b28a330aa53",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` The height of each bar on the create_spend_chart chart should be rounded down to the nearest 10 ``js ({ test: () => { pyodide FS writeFile('/home/pyodide/budget py', code); pyodide FS writeFile('/home/pyodide/test_module py', import unittest import budget from importlib import reload reload(budget) class UnitTests(unittest TestCase): maxDiff = None def setUp(self): self food = budget Category(\"Food\") self entertainment = budget Category(\"Entertainment\") self business = budget Category(\"Business\") self fooddeposit(900, \"deposit\")\nself entertainment deposit(900, \"deposit\")\nself business deposit(900, \"deposit\")\nself food withdraw(78)\nself entertainment withdraw(22)\nself business withdraw(8)\ndef test_create_spend_chart_rounding_close_to_upper_and_lower_ten(self):\nchart_lines = budget create_spend_chart([self food, self entertainment]) split(\"\\\\n\")[1:12]\nresult_lines = '''100|\n90|\n80|\n70| o\n60| o\n50| o\n40| o\n30| o\n20| o  o\n10| o  o\n0| o  o''' split(\"\\n\")\nself assertEqual(len(chart_lines), len(result_lines), \"Lines missing in chart \")\nfor actual, expected in zip(chart_lines, result_lines):\nself assertTrue(actual startswith(expected), \"Expected different rounding of bars \")\ndef test_create_spend_chart_rounding_single_digit(self):\nchart_lines = budget create_spend_chart([self business, self food, self entertainment]) split(\"\\\\n\")[1:12]\nresult_lines = '''100|\n90|\n80|\n70|    o\n60|    o\n50|    o\n40|    o\n30|    o\n20|    o  o\n10|    o  o\n0| o  o  o''' split(\"\\n\")\nself assertEqual(len(chart_lines), len(result_lines), \"Lines missing in chart \")\nfor actual, expected in zip(chart_lines, result_lines):\nself assertTrue(actual startswith(expected), \"Expected different rounding of bars \")\n`);\nconst testCode = `\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 14,
    "total_chunks": 23
  },
  {
    "id": "a52cd8c6d4664705c49ba3720fe0fb33",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "self food, self entertainment]) split(\"\\\\n\")[1:12] result_lines = '''100| 90| 80| 70| o 60| o 50| o 40| o 30| o 20| o o 10| o o 0| o o o''' split(\"\\n\") self assertEqual(len(chart_lines), len(result_lines), \"Lines missing in chart \") for actual, expected in zip(chart_lines, result_lines): self assertTrue(actual startswith(expected), \"Expected different rounding of bars \") `); const testCode = ` from unittest import main from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t resultwasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nEach line in create_spend_chart chart should have the same length Bars for different categories should be separated by two spaces, with additional two spaces after the final bar ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\nself entertainment = budget Category(\"Entertainment\")\nself business = budget Category(\"Business\")\nself food deposit(900, \"deposit\")\nself entertainment deposit(900, \"deposit\")\nself business deposit(900, \"deposit\")\nself food withdraw(78)\nself entertainment withdraw(22)\nself business withdraw(8)\ndef test_create_spend_chart_chart_lines_have_expected_length(self):\nchart_categories = [[self food, self entertainment], [self business, self food, self entertainment]]\nexpected_lengths = [len(line) for line in [\"  0| o  o  \", \"  0| o  o  o  \"]]\nexpected_chart_lines = 11\nfor categories, expected_length in zip(chart_categories, expected_lengths):\nchart_lines = budget create_spend_chart(categories) split(\"\\\\n\")[1:12]\nself assertEqual(len(chart_lines), expected_chart_lines, \"Lines missing in chart \")\nfor actual in chart_lines:\nself assertEqual(len(actual), expected_length, \"Expected different length of the chart line Check that all spacing is exact",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 15,
    "total_chunks": 23
  },
  {
    "id": "bf014e3c469e7c54fab5ce9c90359a91",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "self business withdraw(8) def test_create_spend_chart_chart_lines_have_expected_length(self): chart_categories = [[self food, self entertainment], [self business, self food, self entertainment]] expected_lengths = [len(line) for line in [\" 0| o o \", \" 0| o o o \"]] expected_chart_lines = 11 for categories, expected_length in zip(chart_categories, expected_lengths): chart_lines = budget create_spend_chart(categories) split(\"\\\\n\")[1:12] self assertEqual(len(chart_lines), expected_chart_lines, \"Lines missing in chart \") for actual in chart_lines: self assertEqual(len(actual), expected_length, \"Expected different length of the chart line Check that all spacing is exact\")\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\ncreate_spend_chart should correctly show horizontal line below the bars Using three - characters for each category, and in total going two characters past the final bar ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\nself entertainment = budget Category(\"Entertainment\")\nself business = budget Category(\"Business\")\nself food deposit(900, \"deposit\")\nself entertainment deposit(900, \"deposit\")\nself business deposit(900, \"deposit\")\nself food withdraw(105 55)\nself entertainment withdraw(33 40)\nself business withdraw(10 99)\ndef test_create_spend_chart_horizontal_bar(self):\nchart_categories = [[self business], [self business, self food], [self business, self food, self entertainment]]\nhorizontal_lines = [\"    ----\", \"    -------\", \"    ----------\"]\nfor categories, expected in zip(chart_categories, horizontal_lines):\nactual = budget create_spend_chart(categories) split(\"\\\\n\")[12]\nself assertEqual(actual, expected, \"Expected different horizontal bar Check that all spacing is exact",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 16,
    "total_chunks": 23
  },
  {
    "id": "23ed8cc748067b1c1548863a4b2d2ae1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "business = budget Category(\"Business\") self food deposit(900, \"deposit\") self entertainment deposit(900, \"deposit\") self business deposit(900, \"deposit\") self food withdraw(105 55) self entertainment withdraw(33 40) self business withdraw(10 99) def test_create_spend_chart_horizontal_bar(self): chart_categories = [[self business], [self business, self food], [self business, self food, self entertainment]] horizontal_lines = [\" ----\", \" -------\", \" ----------\"] for categories, expected in zip(chart_categories, horizontal_lines): actual = budget create_spend_chart(categories) split(\"\\\\n\")[12] self assertEqual(actual, expected, \"Expected different horizontal bar Check that all spacing is exact\")\n`);\nconst testCode = `\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\ncreate_spend_chart chart should not have new line character at the end ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\nself entertainment = budget Category(\"Entertainment\")\nself business = budget Category(\"Business\")\ndef test_create_spend_chart_no_ending_new_line(self):\nself food deposit(900, \"deposit\")\nself entertainment deposit(900, \"deposit\")\nself business deposit(900, \"deposit\")\nself food withdraw(105 55)\nself entertainment withdraw(33 40)\nself business withdraw(10 99)\nactual = budget create_spend_chart([self business, self food, self entertainment])\nself assertFalse(actual endswith(\"\\\\n\"), \"Expected chart to not have new line at the end \")\n`);\nconst testCode = `\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\ncreate_spend_chart chart should have each category name written vertically below the bar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 17,
    "total_chunks": 23
  },
  {
    "id": "414b2fa01c844c56ced613f5867de96b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "55) self entertainment withdraw(33 40) self business withdraw(10 99) actual = budget create_spend_chart([self business, self food, self entertainment]) self assertFalse(actual endswith(\"\\\\n\"), \"Expected chart to not have new line at the end \") `); const testCode = ` from unittest import main from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t result wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` create_spend_chart chart should have each category name written vertically below the barEach line should have the same length, each category should be separated by two spaces, with additional two spaces after the final category ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\nself entertainment = budget Category(\"Entertainment\")\nself business = budget Category(\"Business\")\nself food deposit(900, \"deposit\")\nself entertainment deposit(900, \"deposit\")\nself business deposit(900, \"deposit\")\nself food withdraw(105 55)\nself entertainment withdraw(33 40)\nself business withdraw(10 99)\ndef test_create_spend_chart_names_two_categories(self):\nchart = budget create_spend_chart([self food, self entertainment])\nactual = \"\\\\n\" join(chart split(\"\\\\n\")[13:]) rstrip(\"\\\\n\")\nexpected = \"     F  E  \\\\n     o  n  \\\\n     o  t  \\\\n     d  e  \\\\n        r  \\\\n        t  \\\\n        a  \\\\n        i  \\\\n        n  \\\\n        m  \\\\n        e  \\\\n        n  \\\\n        t  \"\nself assertEqual(actual, expected, \"Expected different category names written vertically below the bar Check that all spacing is exact \")\ndef test_create_spend_chart_names_three_categories(self):\nchart = budget create_spend_chart([self business, self food, self entertainment])\nactual = \"\\\\n\" join(chart split(\"\\\\n\")[13:])",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 18,
    "total_chunks": 23
  },
  {
    "id": "fb165adb97e190782881246b8128454a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "self entertainment]) actual = \"\\\\n\" join(chart split(\"\\\\n\")[13:]) rstrip(\"\\\\n\") expected = \" F E \\\\n o n \\\\n o t \\\\n d e \\\\n r \\\\n t \\\\n a \\\\n i \\\\n n \\\\n m \\\\n e \\\\n n \\\\n t \" self assertEqual(actual, expected, \"Expected different category names written vertically below the bar Check that all spacing is exact \") def test_create_spend_chart_names_three_categories(self): chart = budget create_spend_chart([self business, self food, self entertainment]) actual = \"\\\\n\" join(chart split(\"\\\\n\")[13:])rstrip(\"\\\\n\")\nexpected = \"     B  F  E  \\\\n     u  o  n  \\\\n     s  o  t  \\\\n     i  d  e  \\\\n     n     r  \\\\n     e     t  \\\\n     s     a  \\\\n     s     i  \\\\n           n  \\\\n           m  \\\\n           e  \\\\n           n  \\\\n           t  \"\nself assertEqual(actual, expected, \"Expected different category names written vertically below the bar Check that all spacing is exact \")\n`);\nconst testCode = `\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\ncreate_spend_chart should print a different chart representation Check that all spacing is exact Open your browser console with F12 for more details ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/budget py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport budget\nfrom importlib import reload\nreload(budget)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself food = budget Category(\"Food\")\nself entertainment = budget Category(\"Entertainment\")\nself business = budget Category(\"Business\")\ndef test_create_spend_chart(self):\nself food deposit(900, \"deposit\")\nself entertainment deposit(900, \"deposit\")\nself business deposit(900, \"deposit\")\nself food withdraw(105 55)\nself entertainment withdraw(33 40)\nself business withdraw(10 99)\nactual = budget create_spend_chart([self",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 19,
    "total_chunks": 23
  },
  {
    "id": "a5f5de54077fb4ab1b343f7d78314427",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "({ test: () => { pyodide FS writeFile('/home/pyodide/budget py', code); pyodide FS writeFile('/home/pyodide/test_module py', import unittest import budget from importlib import reload reload(budget) class UnitTests(unittest TestCase): maxDiff = None def setUp(self): self food = budget Category(\"Food\") self entertainment = budget Category(\"Entertainment\") self business = budget Category(\"Business\") def test_create_spend_chart(self): self food deposit(900, \"deposit\") self entertainment deposit(900, \"deposit\") self business deposit(900, \"deposit\") self food withdraw(105 55) self entertainment withdraw(33 40) self business withdraw(10 99) actual = budget create_spend_chart([selfbusiness, self food, self entertainment])\nexpected = \"Percentage spent by category\\\\n100|          \\\\n 90|          \\\\n 80|          \\\\n 70|    o     \\\\n 60|    o     \\\\n 50|    o     \\\\n 40|    o     \\\\n 30|    o     \\\\n 20|    o  o  \\\\n 10|    o  o  \\\\n  0| o  o  o  \\\\n    ----------\\\\n     B  F  E  \\\\n     u  o  n  \\\\n     s  o  t  \\\\n     i  d  e  \\\\n     n     r  \\\\n     e     t  \\\\n     s     a  \\\\n     s     i  \\\\n           n  \\\\n           m  \\\\n           e  \\\\n           n  \\\\n           t  \"\nself assertEqual(actual, expected, 'Expected different chart representation Check that all spacing is exact ')\n`);\nconst testCode = `\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\n--seed--\n--seed-contents--\n```py\nclass Category:\npass\ndef create_spend_chart(categories):\npass\n```\n--solutions--\n```py\nclass Category:\ndef __init__(self, name):\nself name = name\nself ledger = []\nself balance = 0\nself",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 20,
    "total_chunks": 23
  },
  {
    "id": "b03a1d85e85bf9a478c7988fab3266e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "self assertEqual(actual, expected, 'Expected different chart representation Check that all spacing is exact ') `); const testCode = ` from unittest import main from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t result wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` --seed-- --seed-contents-- ```py class Category: pass def create_spend_chart(categories): pass ``` --solutions-- ```py class Category: def __init__(self, name): self name = name self ledger = [] self balance = 0 selfspent = 0\ndef __str__(self):\nfirst_line = f'{self name center(30, \"*\")}\\n'\nlines = ''\ntotal = f'Total: {format(self balance, \" 2f\")}'\nfor n in range(len(self ledger)):\ndescr = self ledger[n][\"description\"][:23]\nam = format(float(self ledger[n][\"amount\"]), \" 2f\")[:7]\nlines = lines + f'{descr:<23}{am:>7}\\n'\nreturn f'{first_line}{lines}{total}'\ndef deposit(self, amount, description=''):\nself ledger append({\n'amount': float(amount),\n'description': description\n})\nself balance = self balance + float(amount)\ndef withdraw(self, amount, description=''):\nif self check_funds(amount):\nself ledger append({\n'amount': -float(amount),\n'description': description\n})\nself balance = self balance - float(amount)\nself spent = self spent + float(amount)\nreturn True\nelse:\nreturn False\ndef get_balance(self):\nreturn self balance\ndef transfer(self, amount, category):\nif self check_funds(amount):\n# withdraw\nself ledger append({\n'amount': -float(amount),\n'description': f'Transfer to {category name}'\n})\nself balance = self balance - float(amount)\n# deposit\ncategory deposit(amount, f'Transfer from {self name}')\nreturn True\nelse:\nreturn False\ndef check_funds(self, amount):\nif float(amount) > self balance:\nreturn False\nelse:\nreturn True\ndef create_spend_chart(categories):\ntotal_expenses = 0\nobj = {}\ncol1 = []\nstr = []\nfinal_str = 'Percentage spent by category\\n'\nlabel_max_length = 0\nlabel_strings = []\nfor category in categories:\ntotal_expenses = total_expenses + category spent\nobj[category",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 21,
    "total_chunks": 23
  },
  {
    "id": "c764118b0b041a5a12ead0beb2102528",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'description': f'Transfer to {category name}' }) self balance = self balance - float(amount) # deposit category deposit(amount, f'Transfer from {self name}') return True else: return False def check_funds(self, amount): if float(amount) > self balance: return False else: return True def create_spend_chart(categories): total_expenses = 0 obj = {} col1 = [] str = [] final_str = 'Percentage spent by category\\n' label_max_length = 0 label_strings = [] for category in categories: total_expenses = total_expenses + category spent obj[categoryname] = {'expenses': category spent}\nobj[category name]['label'] = list(category name)\nif len(obj[category name]['label']) > label_max_length:\nlabel_max_length = len(obj[category name]['label'])\nfor category in categories:\nobj[category name]['percent'] = (\n(category spent / total_expenses * 100) // 10) * 10\nobj[category name]['column'] = []\nfor i in range(0, 110, 10):\nif obj[category name]['percent'] >= i:\nobj[category name]['column'] insert(0, 'o')\nelse:\nobj[category name]['column'] insert(0, ' ')\nfor i in range(0, 110, 10):\ncol1 insert(0, i)\nfor i in range(11):\nstr append(\"\")\nfor key in obj:\nstr[i] += (f'{obj[key][\"column\"][i]}  ')\nfinal_str += f'{col1[i]:>3}| {str[i]}\\n'\nfinal_str += f'    {\"-\"*(1+3*len(obj))}\\n   '\nfor i in range(label_max_length):\nlabel_strings append('  ')\nfor k in obj:\nif len(obj[k]['label']) < label_max_length:\nobj[k]['label'] extend(\nf'{\" \"*(label_max_length-len(obj[k][\"label\"]))}')\nlabel_strings[i] += f'{obj[k][\"label\"][i]}  '\nif i < label_max_length - 1:\nlabel_strings[i] += '\\n   '\nfinal_str += label_strings[i]\nprint(final_str)\nreturn (final_str)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 38844,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-budget-app\\5e44413e903586ffb414c94e.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 22,
    "total_chunks": 23
  },
  {
    "id": "627a1dc76189f51ef1acf33612e6e0d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-colored-boxes\\66f3f6eb66ea9dc41cdc30df.md",
    "source_type": "git_repo",
    "title": "Colored Boxes",
    "content": "id: 66f3f6eb66ea9dc41cdc30df\ntitle: Design a Set of Colored Boxes\nchallengeType: 25\ndashedName: set-of-colored-boxes\ndemoType: onClick\n--description--\nIn this lab, you'll practice using CSS colors by designing boxes Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should set the background color for body to #f4f4f4 You should have a div with a class of color-grid to hold all your color elements You should have five div elements within the color-grid element The five div elements should each have a class of color-box and color#, where # is the number of the order of that div For example: color1 for the first div, color2 for the second, and so on The color-box class should have a set width and height so your div elements are visible on the page The color1 element should have a background-color that uses hexadecimal color value The color2 element should have a background-color that uses an RGB color value The color3 element should have a background-color that uses a predefined (word) color value The color4 element should have a background-color that uses a HSL color value The color5 element should have a background-color set Note: Be sure to link your stylesheet in your HTML and apply your CSS --hints--\nbody should have a background color of #f4f4f4 js\nconst body = document body;\nconst bodyBgColor = getComputedStyle(body) backgroundColor;\nassert strictEqual(bodyBgColor, 'rgb(244, 244, 244)');\nYou should have a div element with a class of color-grid js\nconst colorGrid = document querySelector('div color-grid');\nassert exists(colorGrid);\nYou should have five div elements within the color-grid element js\nconst colorGridChildren = document querySelectorAll('div color-grid > div');\nassert strictEqual(colorGridChildren length, 5);\nEach of the five div elements should each have a class of color-box and color#—substitute the order of the div for the # symbol ```js\nconst colorGridChildren = document querySelectorAll('div color-grid > div');\nassert strictEqual(colorGridChildren length, 5);\ncolorGridChildren forEach((child, index) => {\nconst colorClass = color${index + 1};\nassert isTrue(child classList contains('color-box'));\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8235,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-colored-boxes\\66f3f6eb66ea9dc41cdc30df.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "3896507ab3060feb210312dd3c0d113f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-colored-boxes\\66f3f6eb66ea9dc41cdc30df.md",
    "source_type": "git_repo",
    "title": "Colored Boxes",
    "content": "You should have five div elements within the color-grid element js const colorGridChildren = document querySelectorAll('div color-grid > div'); assert strictEqual(colorGridChildren length, 5); Each of the five div elements should each have a class of color-box and color#—substitute the order of the div for the # symbol ```js const colorGridChildren = document querySelectorAll('div color-grid > div'); assert strictEqual(colorGridChildren length, 5); colorGridChildren forEach((child, index) => { const colorClass = color${index + 1}; assert isTrue(child classList contains('color-box')); assertisTrue(child classList contains(colorClass));\n});\n```\nThe color-box element should have a set width and height ```js\nconst colorBox = document querySelector(' color-box');\nassert exists(colorBox);\nconst colorBoxStyles = getComputedStyle(colorBox);\nconst width = colorBoxStyles width;\nconst height = colorBoxStyles height;\nassert notStrictEqual(width, '0px');\nassert notStrictEqual(height, '0px');\n```\nThe color1 element should have a hexadecimal background color js\nconst hexChars = \"[0-9a-fA-F]\"\nconst hexRegex = new RegExp(`\\\\ color1\\\\s*{[^}]*\\\\bbackground-color\\\\s*:\\\\s*#((${hexChars}{3,4})||(${hexChars}{6})||(${hexChars}{8}))\\\\s*; [^}]*}`);\nassert match(__helpers removeCssComments(code), hexRegex);\nThe color2 element should have an RGB background color js\nassert match(__helpers removeCssComments(code), /\\ color2\\s*{[^}]*\\bbackground-color\\s*:\\s*rgb\\s*\\(\\s*\\d+( :\\ \\d+) \\s*(,|\\s+)\\s*\\d+( :\\ \\d+) \\s*\\1\\s*\\d+( :\\ \\d+) \\s*(\\/\\s*\\d{1,2}( :\\ \\d+) %\\s*) \\)\\s*; [^}]*}/);\nThe color3 element should have a predefined (word) background color",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8235,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-colored-boxes\\66f3f6eb66ea9dc41cdc30df.md",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "7f8653b8b73f88d0877dd03f1b3cf2b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-colored-boxes\\66f3f6eb66ea9dc41cdc30df.md",
    "source_type": "git_repo",
    "title": "Colored Boxes",
    "content": "const height = colorBoxStyles height; assert notStrictEqual(width, '0px'); assert notStrictEqual(height, '0px'); ``` The color1 element should have a hexadecimal background color js const hexChars = \"[0-9a-fA-F]\" const hexRegex = new RegExp(`\\\\ color1\\\\s*{[^}]*\\\\bbackground-color\\\\s*:\\\\s*#((${hexChars}{3,4})||(${hexChars}{6})||(${hexChars}{8}))\\\\s*; [^}]*}`); assert match(__helpers removeCssComments(code), hexRegex); The color2 element should have an RGB background color js assert match(__helpers removeCssComments(code), /\\ color2\\s*{[^}]*\\bbackground-color\\s*:\\s*rgb\\s*\\(\\s*\\d+( :\\ \\d+) \\s*(,|\\s+)\\s*\\d+( :\\ \\d+) \\s*\\1\\s*\\d+( :\\ \\d+) \\s*(\\/\\s*\\d{1,2}( :\\ \\d+) %\\s*) \\)\\s*; [^}]*}/); The color3 element should have a predefined (word) background colorjs\nconst colorSet = new Set([\"black\", \"silver\", \"gray\", \"white\", \"maroon\", \"red\", \"purple\", \"fuchsia\", \"green\", \"lime\", \"olive\", \"yellow\", \"navy\", \"blue\", \"teal\", \"aqua\", \"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\", \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\", \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\", \"cornsilk\", \"crimson\", \"cyan\", \"aqua\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\", \"darkgray\", \"darkgreen\", \"darkgrey\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\", \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\", \"darkslateblue\", \"darkslategray\", \"darkslategrey\", \"darkturquoise\", \"darkviolet\", \"deeppink\", \"deepskyblue\", \"dimgray\", \"dimgrey\", \"dodgerblue\", \"firebrick\", \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\", \"gold\", \"goldenrod\", \"gray\", \"green\", \"greenyellow\", \"grey\", \"gray\", \"honeydew\", \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\", \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\", \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightgrey\", \"lightpink\", \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\", \"lightslategrey\", \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\", \"fuchsia\", \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\", \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\", \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\", \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\", \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\", \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\", \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\", \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\", \"slateblue\", \"slategray\", \"slategrey\", \"snow\", \"springgreen\", \"steelblue\", \"tan\", \"teal\", \"thistle\", \"tomato\", \"transparent\", \"turquoise\", \"violet\", \"wheat\", \"white\", \"whitesmoke\", \"yellow\", \"yellowgreen\"]);\nconst matchedColor = __helpers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8235,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-colored-boxes\\66f3f6eb66ea9dc41cdc30df.md",
      "source_type": "git_repo"
    },
    "token_count": 1004,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "f1c9b522dd241cf1c501a1ba6327b01b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-colored-boxes\\66f3f6eb66ea9dc41cdc30df.md",
    "source_type": "git_repo",
    "title": "Colored Boxes",
    "content": "\"lightslategray\", \"lightslategrey\", \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\", \"fuchsia\", \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\", \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\", \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\", \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\", \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\", \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\", \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\", \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\", \"slateblue\", \"slategray\", \"slategrey\", \"snow\", \"springgreen\", \"steelblue\", \"tan\", \"teal\", \"thistle\", \"tomato\", \"transparent\", \"turquoise\", \"violet\", \"wheat\", \"white\", \"whitesmoke\", \"yellow\", \"yellowgreen\"]); const matchedColor = __helpersremoveCssComments(code) match(/\\ color3\\s*{[^}]*\\bbackground-color\\s*:\\s*( <color>[a-zA-Z]+)\\s*; [^}]*}/);\nassert isTrue(colorSet has(matchedColor groups color toLowerCase()));\nThe color4 element should have a HSL background color js\nconst absHSLVals = '\\\\s*(none|\\\\d+( :\\\\ \\\\d+) ( :deg) )\\\\s*\\\\d+( :\\\\ \\\\d+) % \\\\s*\\\\d+( :\\\\ \\\\d+) % \\\\s*(\\\\/\\\\s*\\\\d{1,2}( :\\\\ \\\\d+) %\\\\s*) ';\nconst legacyHSLVals = '\\\\s*\\\\d+( :\\\\ \\\\d+) ( :deg) \\\\s*,\\\\s*\\\\d+( :\\\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8235,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-colored-boxes\\66f3f6eb66ea9dc41cdc30df.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "9292c03fb1b9705830eae44e017960ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-colored-boxes\\66f3f6eb66ea9dc41cdc30df.md",
    "source_type": "git_repo",
    "title": "Colored Boxes",
    "content": "\"sienna\", \"silver\", \"skyblue\", \"slateblue\", \"slategray\", \"slategrey\", \"snow\", \"springgreen\", \"steelblue\", \"tan\", \"teal\", \"thistle\", \"tomato\", \"transparent\", \"turquoise\", \"violet\", \"wheat\", \"white\", \"whitesmoke\", \"yellow\", \"yellowgreen\"]); const matchedColor = __helpersremoveCssComments(code) match(/\\ color3\\s*{[^}]*\\bbackground-color\\s*:\\s*( <color>[a-zA-Z]+)\\s*; [^}]*}/); assert isTrue(colorSet has(matchedColor groups color toLowerCase())); The color4 element should have a HSL background color js const absHSLVals = '\\\\s*(none|\\\\d+( :\\\\ \\\\d+) ( :deg) )\\\\s*\\\\d+( :\\\\ \\\\d+) % \\\\s*\\\\d+( :\\\\ \\\\d+) % \\\\s*(\\\\/\\\\s*\\\\d{1,2}( :\\\\ \\\\d+) %\\\\s*) '; const legacyHSLVals = '\\\\s*\\\\d+( :\\\\ \\\\d+) ( :deg) \\\\s*,\\\\s*\\\\d+( :\\\\\\\\d+) %\\\\s*,\\\\s*\\\\d+( :\\\\ \\\\d+) %\\\\s*( :,\\\\s*\\\\d+( :\\\\ \\\\d+) \\\\s*) ';\nconst hslRegex = new RegExp(`\\\\ color4\\\\s*{[^}]*\\\\bbackground-color\\\\s*:\\\\s*hsl\\\\s*\\\\((${absHSLVals}|${legacyHSLVals})\\\\)\\\\s*; [^}]*}`);\nassert match(__helpers removeCssComments(code), hslRegex);\nThe color5 element should have a background color set js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(' color5') getPropVal('background-color', true));\n--seed--\n--seed-contents--\n```html\nColored Boxes\n```\n```css\n```\n--solutions--\n```html\nColored Boxes\nColored Boxes\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nmargin: 0;\npadding: 20px;\nbackground-color: #f4f4f4;\n}\nh1 {\nmargin-bottom: 20px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8235,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-colored-boxes\\66f3f6eb66ea9dc41cdc30df.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "f4be15f89b94620d430003a4e18ed5c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-colored-boxes\\66f3f6eb66ea9dc41cdc30df.md",
    "source_type": "git_repo",
    "title": "Colored Boxes",
    "content": ":\\\\ \\\\d+) %\\\\s*( :,\\\\s*\\\\d+( :\\\\ \\\\d+) \\\\s*) '; const hslRegex = new RegExp(`\\\\ color4\\\\s*{[^}]*\\\\bbackground-color\\\\s*:\\\\s*hsl\\\\s*\\\\((${absHSLVals}|${legacyHSLVals})\\\\)\\\\s*; [^}]*}`); assert match(__helpers removeCssComments(code), hslRegex); The color5 element should have a background color set js assert isNotEmpty(new __helpers CSSHelp(document) getStyle(' color5') getPropVal('background-color', true)); --seed-- --seed-contents-- ```html Colored Boxes ``` ```css ``` --solutions-- ```html Colored Boxes Colored Boxes ``` ```css body { font-family: Arial, sans-serif; display: flex; flex-direction: column; align-items: center; margin: 0; padding: 20px; background-color: #f4f4f4; } h1 { margin-bottom: 20px; }color-grid {\ndisplay: grid;\ngrid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\ngap: 10px;\nwidth: 100%;\nmax-width: 800px;\n} color-box {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nfont-weight: bold;\nborder-radius: 8px;\ntext-align: center;\nwidth: 100px;\nheight: 100px;\n} color1 {\nbackground-color: #33FF57;\n} color2 {\nbackground-color: rgb(128,0,128);\n} color3 {\nbackground-color: orange;\n} color4 {\nbackground-color: hsl(59, 61%, 26%);\n} color5 {\nbackground-color: red;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8235,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-colored-boxes\\66f3f6eb66ea9dc41cdc30df.md",
      "source_type": "git_repo"
    },
    "token_count": 376,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "77dba2b9fc88c4bede9f500517d0a0e4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-confidential-email-page\\66bba6fff611169359d9d36a.md",
    "source_type": "git_repo",
    "title": "Confidential Email",
    "content": "id: 66bba6fff611169359d9d36a\ntitle: Build a Confidential Email Page\nchallengeType: 25\ndashedName: build-a-confidential-email-page\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a main element with an id of email Your #email element should have padding of 50px, a top margin of 50px, a width of 500px, and a border that's 2px The total width of your #email element, including paddings and borders, should be 500px You should have two div elements, one with an id of confidential and the other with an id of top-secret, within your #email element Your #confidential and #top-secret elements should have a display of inline-block Your #confidential and #top-secret elements should have a padding, a left margin, and a border The #confidential element should have the text CONFIDENTIAL The #top-secret element should have the text TOP SECRET Your #confidential and #top-secret elements should be rotated using a CSS transform You should have at least three paragraph elements within your #email element You should have at least three span elements with a class of blurred, within your paragraph elements You should have a blurred selector that blurs the element 3px using a CSS filter --hints--\nYou should have a main element with an id of email js\nassert exists(document querySelector('main#email'));\nYou should have an #email selector that sets its elements' padding on all sides to 50px js\nassert equal(new __helpers CSSHelp(document) getStyle('#email') getPropertyValue('padding'), '50px');\nYou should have an #email selector that sets its elements' margin-top to 50px js\nassert equal(new __helpers CSSHelp(document) getStyle('#email') getPropertyValue('margin-top'), '50px');\nYou should have an #email selector that sets its elements' width to 500px js\nassert equal(new __helpers CSSHelp(document) getStyle('#email') getPropertyValue('width'), '500px');\nYour #email element should have a 2px border js\nassert equal(new __helpers CSSHelp(document) getStyle('#email') getPropertyValue('border-width'), '2px');\nYour #email element should have a box-sizing of border-box js\nassert equal(new __helpers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8093,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-confidential-email-page\\66bba6fff611169359d9d36a.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "38cd57c5906b543cff38e65e92e44bec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-confidential-email-page\\66bba6fff611169359d9d36a.md",
    "source_type": "git_repo",
    "title": "Confidential Email",
    "content": "__helpers CSSHelp(document) getStyle('#email') getPropertyValue('padding'), '50px'); You should have an #email selector that sets its elements' margin-top to 50px js assert equal(new __helpers CSSHelp(document) getStyle('#email') getPropertyValue('margin-top'), '50px'); You should have an #email selector that sets its elements' width to 500px js assert equal(new __helpers CSSHelp(document) getStyle('#email') getPropertyValue('width'), '500px'); Your #email element should have a 2px border js assert equal(new __helpers CSSHelp(document) getStyle('#email') getPropertyValue('border-width'), '2px'); Your #email element should have a box-sizing of border-box js assert equal(new __helpersCSSHelp(document) getStyle('#email') boxSizing, 'border-box');\nYou should have a div element with an id of confidential within your #email element js\nassert exists(document querySelector('#email > div#confidential'));\nYou should have a div element with an id of top-secret within your #email element js\nassert exists(document querySelector('#email > div#top-secret'));\nYour #confidential element should have its display set to inline-block js\nassert equal(window getComputedStyle(document querySelector('#confidential')) display, 'inline-block');\nYour #top-secret element should have its display set to inline-block js\nassert equal(window getComputedStyle(document querySelector('#top-secret')) display, 'inline-block');\nYour #confidential element should have a padding on all sides js\nconst style = window getComputedStyle(document querySelector('#confidential'));\nassert notEqual(style paddingTop, '0px');\nassert notEqual(style paddingRight, '0px');\nassert notEqual(style paddingBottom, '0px');\nassert notEqual(style paddingLeft, '0px');\nYour #top-secret element should have a padding on all sides js\nconst style = window getComputedStyle(document querySelector('#top-secret'));\nassert notEqual(style paddingTop, '0px');\nassert notEqual(style paddingRight, '0px');\nassert notEqual(style paddingBottom, '0px');\nassert notEqual(style paddingLeft, '0px');\nYour #confidential element should have a left margin js\nassert notEqual(window getComputedStyle(document querySelector('#confidential')) marginLeft, '0px');\nYour #top-secret element should have a left margin js\nassert notEqual(window getComputedStyle(document querySelector('#top-secret'))",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8093,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-confidential-email-page\\66bba6fff611169359d9d36a.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "a7758ebdac34e7e8bdd8e177548f184e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-confidential-email-page\\66bba6fff611169359d9d36a.md",
    "source_type": "git_repo",
    "title": "Confidential Email",
    "content": "notEqual(style paddingTop, '0px'); assert notEqual(style paddingRight, '0px'); assert notEqual(style paddingBottom, '0px'); assert notEqual(style paddingLeft, '0px'); Your #top-secret element should have a padding on all sides js const style = window getComputedStyle(document querySelector('#top-secret')); assert notEqual(style paddingTop, '0px'); assert notEqual(style paddingRight, '0px'); assert notEqual(style paddingBottom, '0px'); assert notEqual(style paddingLeft, '0px'); Your #confidential element should have a left margin js assert notEqual(window getComputedStyle(document querySelector('#confidential')) marginLeft, '0px'); Your #top-secret element should have a left margin js assert notEqual(window getComputedStyle(document querySelector('#top-secret'))marginLeft, '0px');\nYour #confidential element should have a border js\nassert notEqual(window getComputedStyle(document querySelector('#confidential')) borderWidth, '0px');\nYour #top-secret element should have a border js\nassert notEqual(window getComputedStyle(document querySelector('#top-secret')) borderWidth, '0px');\nYour #confidential element's text should be CONFIDENTIAL You have either omitted the text, or have a typo js\nassert equal(document querySelector('#confidential') innerText toLowerCase(), 'confidential' );\nYour #top-secret element's text should be TOP SECRET You have either omitted the text, or have a typo js\nassert equal(document querySelector('#top-secret') innerText toLowerCase(), 'top secret' );\nYour #confidential element should use a CSS transform to rotate the element js\nassert notEqual(window getComputedStyle(document querySelector('#confidential')) transform, 'none');\nYour #top-secret element should use a CSS transform to rotate the element js\nassert notEqual(window getComputedStyle(document querySelector('#top-secret')) transform, 'none');\nYou should have at least three paragraph elements within your #email element js\nassert isAtLeast(document querySelectorAll('#email > p') length, 3);\nYou should have at least three span elements with a class of blurred within your paragraphs js\nassert isAtLeast(document querySelectorAll('p > span blurred') length, 3);\nYour blurred elements should not be empty js\nconst els = document querySelectorAll(' blurred');\nassert isAtLeast(els length, 1);\nels forEach(el => assert isAtLeast(el innerText length , 1))\nYou should have a",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8093,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-confidential-email-page\\66bba6fff611169359d9d36a.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "19b050ee70ff6ad72ee4c77db81e4fad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-confidential-email-page\\66bba6fff611169359d9d36a.md",
    "source_type": "git_repo",
    "title": "Confidential Email",
    "content": "You should have at least three paragraph elements within your #email element js assert isAtLeast(document querySelectorAll('#email > p') length, 3); You should have at least three span elements with a class of blurred within your paragraphs js assert isAtLeast(document querySelectorAll('p > span blurred') length, 3); Your blurred elements should not be empty js const els = document querySelectorAll(' blurred'); assert isAtLeast(els length, 1); els forEach(el => assert isAtLeast(el innerText length , 1)) You should have ablurred selector that set its elements filter to blur(3px) js\nassert equal(new __helpers CSSHelp(document) getStyle(' blurred') filter, 'blur(3px)');\n--seed--\n--seed-contents--\n```html\nConfidential Email\n```\n```css\n```\n--solutions--\n```html\nSecret Marshmallow Mission\nCONFIDENTIAL\nDear Agent S'more,\nWe have an emergency The secret formula for our Mega Marshmallow has been\ncompromised This formula is what makes our marshmallows the fluffiest and most delicious We suspect that Professor Puff is behind this He has taken the formula to his\nhidden laboratory Your mission is to infiltrate the lab and secure the formula before it's too late Be sure to keep the lab's location confidential Any leak of this information could jeopardize the entire\noperation TOP SECRET\n```\n```css\nemail {\nbackground-color: SeaShell;\nmargin: 50px auto;\npadding: 50px;\nwidth: 500px;\nborder: 2px solid black;\nbox-shadow: 5px 3px 3px gray;\nbox-sizing: border-box;\n}\nconfidential {\ndisplay: inline-block;\nmargin-left: 100px;\npadding: 10px;\ntext-align: center;\nfont-size: 30px;\ntransform: rotate(-20deg);\ncolor: red;\nborder: 5px solid red;\nfont-weight: bold;\n}\ntop-secret {\nmargin-left: 200px;\ndisplay: inline-block;\npadding: 10px;\ntext-align: center;\nfont-size: 20px;\ntransform: rotate(15deg);\ncolor: red;\nborder: 5px solid red;\nfont-weight: bold;\n} blurred {\nfilter: blur(3px);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8093,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-confidential-email-page\\66bba6fff611169359d9d36a.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "bd7b120491e57d1dc0c6ec494b37acf8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-contact-form\\66f26c32ec6f90df01a44f60.md",
    "source_type": "git_repo",
    "title": "Contact Form",
    "content": "id: 66f26c32ec6f90df01a44f60\ntitle: Design a Contact Form\nchallengeType: 25\ndashedName: design-a-contact-form\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a div with a class of form-container to hold your form You should have a form element within the form-container element Within the form element, you should have the following elements and input fields:\nAn h2 element with some text A text input field for the name with the type set to text and id, name, required attributes An email input field with the type set to email and id, name, required attributes A textarea for the message with id, name, and the required attribute A button element with the text \"Submit\" and a type attribute of submit Each input and textarea elements should have their corresponding label element with a for attribute set to the element's id The form-container element should have a background color, and have values for border-radius, padding, and width The label elements should have a margin and a font color The input and textarea elements should have values for:\nwidth padding Margin on the bottom The button element should have a:\nBackground color\nFont size apart from the default The button should have a hover effect that changes the background color Note: Be sure to link your stylesheet in your HTML and apply your CSS --hints--\nYou should have a div with a class of form-container js\nconst el = document querySelector('div form-container');\nassert isNotNull(el);\nYou should have a form element within the form-container element js\nconst el = document querySelector(' form-container form');\nassert isNotNull(el);\nWithin the form, you should have an h2 element with some text ```js\nconst el = document querySelector(' form-container form h2');\nassert isNotEmpty(el innerText);\n// assert isAtLeast(document querySelector('h1') innerText length, 1);\n```\nWithin the form, you should have a text input field with the type set to text js\nconst el = document querySelector(' form-container form input[type=\"text\"]');\nassert isNotNull(el);\nYour type=text input field should have an id, a name, and a required attribute js\nconst el = document querySelector(' form-container form input[type=\"text\"]');\nassert exists(el);\nassert isTrue(el required);\nassert isNotEmpty(el getAttribute('id'));\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11712,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-contact-form\\66f26c32ec6f90df01a44f60.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "c3d636916f7163538c723a89a6ddc3bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-contact-form\\66f26c32ec6f90df01a44f60.md",
    "source_type": "git_repo",
    "title": "Contact Form",
    "content": "= document querySelector(' form-container form h2'); assert isNotEmpty(el innerText); // assert isAtLeast(document querySelector('h1') innerText length, 1); ``` Within the form, you should have a text input field with the type set to text js const el = document querySelector(' form-container form input[type=\"text\"]'); assert isNotNull(el); Your type=text input field should have an id, a name, and a required attribute js const el = document querySelector(' form-container form input[type=\"text\"]'); assert exists(el); assert isTrue(el required); assert isNotEmpty(el getAttribute('id')); assertisNotEmpty(el getAttribute('name'));\nWithin the form, you should have an email input field with the type set to email js\nconst el = document querySelector(' form-container form input[type=\"email\"]');\nassert isNotNull(el);\nYour type=email input field should have an id, a name, and a required attribute js\nconst el = document querySelector(' form-container form input[type=\"email\"]');\nassert isTrue(el required);\nassert isNotEmpty(el getAttribute('id'));\nassert isNotEmpty(el getAttribute('name'));\nWithin the form, you should have a textarea with an id, name, and a required attribute js\nconst el = document querySelector(' form-container form textarea');\nassert isNotNull(el);\nassert isNotNull(document querySelector(' form-container form textarea[required]'));\nassert isNotEmpty(el getAttribute('id'));\nassert isNotEmpty(el getAttribute('name'));\nWithin the form, you should have a button element with a type attribute of submit js\nconst el = document querySelector(' form-container form button');\nassert strictEqual(el getAttribute('type'), 'submit');\nYour button should have a text of \"Submit\" js\nconst el = document querySelector(' form-container form button');\nassert strictEqual(document querySelector(' form-container form button') textContent, 'Submit');\nYou should have a label element for the #name element with a for attribute matching the id value on the corresponding input ```js\nconst nameInput = document querySelector(' form-container form input[type=\"text\"]') getAttribute('id');\nconst labels = document querySelectorAll(' form-container form label');\nassert isAbove(labels length, 0);\n// check if id has a value\nassert isNotEmpty(nameInput);\nlet found = false;\nfor (let label of labels) {\nif (label getAttribute('for') === nameInput) {\nfound = true;\nbreak;\n}\n}\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11712,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-contact-form\\66f26c32ec6f90df01a44f60.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "44ea8242382915140887f1ab22469a88",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-contact-form\\66f26c32ec6f90df01a44f60.md",
    "source_type": "git_repo",
    "title": "Contact Form",
    "content": "You should have a label element for the #name element with a for attribute matching the id value on the corresponding input ```js const nameInput = document querySelector(' form-container form input[type=\"text\"]') getAttribute('id'); const labels = document querySelectorAll(' form-container form label'); assert isAbove(labels length, 0); // check if id has a value assert isNotEmpty(nameInput); let found = false; for (let label of labels) { if (label getAttribute('for') === nameInput) { found = true; break; } } assertisTrue(found);\n```\nYou should have a label element for the #email element with a for attribute matching the id value on the corresponding input ```js\nconst emailInput = document querySelector(' form-container form input[type=\"email\"]') getAttribute('id');\nconst labels = document querySelectorAll(' form-container form label');\nassert isAbove(labels length, 0);\n// check if id has a value\nassert isNotEmpty(emailInput);\nlet found = false;\nfor (let label of labels) {\nif (label getAttribute('for') === emailInput) {\nfound = true;\nbreak;\n}\n}\nassert isTrue(found);\n```\nYou should have a label element for the #message element with a for attribute matching the id value on the textarea ```js\nconst messageInput = document querySelector(' form-container form textarea') getAttribute('id');\nconst labels = document querySelectorAll(' form-container form label');\nassert isAbove(labels length, 0);\n// check if id has a value\nassert isNotEmpty(messageInput);\nassert exists(document querySelector(label[for=\"${messageInput}\"]));\n```\nThe labels shouldn't be empty ```js\nconst labels = document querySelectorAll(' form-container form label');\nassert isAbove(labels length, 0);\nfor (let label of labels) {\nconst labelText = label textContent trim();\nassert isNotEmpty(labelText);\n}\n```\nThe form-container element should have a background color js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(' form-container') backgroundColor);\nThe form-container element should have a border-radius js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(' form-container') borderRadius);\nThe form-container element should have padding js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(' form-container') padding);\nThe form-container element should have a width js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(' form-container')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11712,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-contact-form\\66f26c32ec6f90df01a44f60.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "b9415ad5bd9f9a23214f291ec309bfd6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-contact-form\\66f26c32ec6f90df01a44f60.md",
    "source_type": "git_repo",
    "title": "Contact Form",
    "content": "0); for (let label of labels) { const labelText = label textContent trim(); assert isNotEmpty(labelText); } ``` The form-container element should have a background color js assert isNotEmpty(new __helpers CSSHelp(document) getStyle(' form-container') backgroundColor); The form-container element should have a border-radius js assert isNotEmpty(new __helpers CSSHelp(document) getStyle(' form-container') borderRadius); The form-container element should have padding js assert isNotEmpty(new __helpers CSSHelp(document) getStyle(' form-container') padding); The form-container element should have a width js assert isNotEmpty(new __helpers CSSHelp(document) getStyle(' form-container')width);\nYour labels should have a margin and font color js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle('label') margin);\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle('label') color);\nYour input elements should have a width, padding, and a margin on the bottom ```js\n// Helper function to extract properties from multiple selectors\nfunction getStyleProperties(selectors, properties) {\nconst result = {};\nproperties forEach((property) => {\nresult[property] = selectors map((selector) => selector [property]) find(Boolean);\n});\nreturn result;\n}\n// Initializing selectors\nconst selectors = [\nnew __helpers CSSHelp(document) getStyle('input'),\nnew __helpers CSSHelp(document) getStyle('input, textarea'),\nnew __helpers CSSHelp(document) getStyle('textarea, input')\n];\n// Extract width, padding, and margin properties\nconst { width } = getStyleProperties(selectors, ['width']);\nassert isNotEmpty(width);\nconst {\npadding,\npaddingTop,\npaddingBottom,\npaddingLeft,\npaddingRight\n} = getStyleProperties(selectors, ['padding', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight']);\n// Assert padding properties\nassert isOk(\npadding ||\n(paddingTop && paddingBottom && paddingLeft && paddingRight)\n);\nconst { marginBottom } = getStyleProperties(selectors, ['marginBottom']);\nassert isNotEmpty(marginBottom);\n```\nYour textarea element should have a width, padding, margin on the bottom ```js\n// Helper function to extract properties from multiple selectors\nfunction getStyleProperties(selectors, properties) {\nconst result = {};\nproperties forEach((property) => {\nresult[property] = selectors map((selector) => selector [property]) find(Boolean);\n});\nreturn result;\n}\n// Initializing selectors\nconst selectors = [\nnew __helpers CSSHelp(document)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11712,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-contact-form\\66f26c32ec6f90df01a44f60.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "f170de6c864c53471ea5bfe3d1dc0a0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-contact-form\\66f26c32ec6f90df01a44f60.md",
    "source_type": "git_repo",
    "title": "Contact Form",
    "content": "padding || (paddingTop && paddingBottom && paddingLeft && paddingRight) ); const { marginBottom } = getStyleProperties(selectors, ['marginBottom']); assert isNotEmpty(marginBottom); ``` Your textarea element should have a width, padding, margin on the bottom ```js // Helper function to extract properties from multiple selectors function getStyleProperties(selectors, properties) { const result = {}; properties forEach((property) => { result[property] = selectors map((selector) => selector [property]) find(Boolean); }); return result; } // Initializing selectors const selectors = [ new __helpers CSSHelp(document)getStyle('textarea'),\nnew __helpers CSSHelp(document) getStyle('input, textarea'),\nnew __helpers CSSHelp(document) getStyle('textarea, input')\n];\n// Extract width, padding, and margin properties\nconst { width } = getStyleProperties(selectors, ['width']);\nassert isNotEmpty(width);\nconst {\npadding,\npaddingTop,\npaddingBottom,\npaddingLeft,\npaddingRight\n} = getStyleProperties(selectors, ['padding', 'paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight']);\n// Assert padding properties\nassert isOk(\npadding ||\n(paddingTop && paddingBottom && paddingLeft && paddingRight)\n);\nconst { marginBottom } = getStyleProperties(selectors, ['marginBottom']);\nassert isNotEmpty(marginBottom);\n```\nYour button element should have a background color js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle('button') backgroundColor);\nYour button element should have a font size js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle('button') fontSize);\nYour button element should have a hover effect that changes the background color js\nconst gs = (s) => new __helpers CSSHelp(document) getStyle(s);\nconst btn_hover = gs('button:hover') backgroundColor;\nassert isNotEmpty(btn_hover);\n--seed--\n--seed-contents--\n```html\nContact Form\n```\n```css\n```\n--solutions--\n```html\nStyled Form Project\nContact Us\nName:\nEmail:\nMessage:\nSubmit\n```\n```css\nbody {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nmargin: 0;\nbackground: linear-gradient(45deg, #83a4d4, #b6fbff);\nfont-family: Arial, sans-serif;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11712,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-contact-form\\66f26c32ec6f90df01a44f60.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "e88a8a6bc87230ebbd449f127315b69b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-contact-form\\66f26c32ec6f90df01a44f60.md",
    "source_type": "git_repo",
    "title": "Contact Form",
    "content": "isNotEmpty(new __helpers CSSHelp(document) getStyle('button') fontSize); Your button element should have a hover effect that changes the background color js const gs = (s) => new __helpers CSSHelp(document) getStyle(s); const btn_hover = gs('button:hover') backgroundColor; assert isNotEmpty(btn_hover); --seed-- --seed-contents-- ```html Contact Form ``` ```css ``` --solutions-- ```html Styled Form Project Contact Us Name: Email: Message: Submit ``` ```css body { display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0; background: linear-gradient(45deg, #83a4d4, #b6fbff); font-family: Arial, sans-serif; }form-container {\nbackground-color: white;\nborder-radius: 10px;\npadding: 20px;\nwidth: 300px;\ntext-align: center;\n}\nform h2 {\nmargin-bottom: 20px;\ncolor: #333;\n}\nlabel {\ndisplay: block;\nmargin: 10px 0 5px;\ncolor: #555;\n}\ninput{\nwidth: 100%;\npadding: 10px;\nmargin-bottom: 10px;\nborder: 1px solid #ddd;\nborder-radius: 5px;\nbox-sizing: border-box;\nresize: vertical;\n}\ntextarea {\nwidth: 100%;\npadding: 10px;\nmargin-bottom: 10px;\nborder: 1px solid #ddd;\nborder-radius: 5px;\nbox-sizing: border-box;\nresize: vertical;\n}\nbutton {\nbackground-color: #4CAF50;\ncolor: white;\npadding: 10px 15px;\nborder: none;\nborder-radius: 5px;\ncursor: pointer;\nfont-size: 1em;\n}\nbutton:hover {\nbackground-color: #45a049;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11712,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-contact-form\\66f26c32ec6f90df01a44f60.md",
      "source_type": "git_repo"
    },
    "token_count": 385,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "095ff5d6252032a26a664672729dd5a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-debug-camperbots-profile-page\\6823f9df49cc206af5471a30.md",
    "source_type": "git_repo",
    "title": "Purposefully removed the demo type because I don't want any example to show since this is a debugging project.",
    "content": "id: 6823f9df49cc206af5471a30\ntitle: Debug Camperbot's Profile Page\nchallengeType: 25\ndashedName: lab-debug-camperbots-profile-page\nPurposefully removed the demo type because I don't want any example to show since this is a debugging project --description--\nCamperbot is trying to build a profile page They asked a friend to look over their code and they said it has some errors Your job is to fix all of Camperbot's errors so they can continue building their profile page Complete the items in the user stories below and click \"Run the Tests\" to see if you fixed all the errors User Stories:\nCamperbot is trying to use a heading2 element, but that element does not exist Fix those tags so it uses a correct second-level heading element Camperbot is trying to add two paragraphs with pp, but those don't exist either Fix them so they use correct paragraph tags Camperbot is using an h3 element for the Background and Interests subheading but it has a syntax error Spot the issue and resolve it --hints--\nYou should have exactly one h1 element on the page js\nassert lengthOf(document querySelectorAll(\"h1\"), 1);\nYou should not remove the <h1>Hello from Camperbot </h1> element from the page js\nassert match(code, /\\<h1\\s*\\>\\s*Hello\\s*from\\s*Camperbot\\s* \\s*\\<\\/h1\\s*\\>/i);\nYou should have exactly one h2 element on the page js\nassert lengthOf(document querySelectorAll(\"h2\"), 1);\nYou should have an h2 element with the text About Here's an example: <h2>Text here</h2>\njs\nassert match(code, /\\<h2\\s*\\>\\s*About\\s*\\<\\/h2\\s*\\>/i);\nYou should have a paragraph element with the text My name is Camperbot and I love learning new things Here's an example: <p>Text here</p>\njs\nassert match(code, /\\<p\\s*\\>\\s*My\\s*name\\s*is\\s*camperbot\\s*and\\s*I\\s*love\\s*learning\\s*new\\s*things\\s*\\ \\s*\\<\\/p\\s*\\>/i);\nYou should have a paragraph element with the text I enjoy solving puzzles",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3146,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-debug-camperbots-profile-page\\6823f9df49cc206af5471a30.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0738b365c0db02552e0e9dc6b1a7a0bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-debug-camperbots-profile-page\\6823f9df49cc206af5471a30.md",
    "source_type": "git_repo",
    "title": "Purposefully removed the demo type because I don't want any example to show since this is a debugging project.",
    "content": "You should have exactly one h2 element on the page js assert lengthOf(document querySelectorAll(\"h2\"), 1); You should have an h2 element with the text About Here's an example: <h2>Text here</h2> js assert match(code, /\\<h2\\s*\\>\\s*About\\s*\\<\\/h2\\s*\\>/i); You should have a paragraph element with the text My name is Camperbot and I love learning new things Here's an example: <p>Text here</p> js assert match(code, /\\<p\\s*\\>\\s*My\\s*name\\s*is\\s*camperbot\\s*and\\s*I\\s*love\\s*learning\\s*new\\s*things\\s*\\ \\s*\\<\\/p\\s*\\>/i); You should have a paragraph element with the text I enjoy solving puzzlesHere's an example: <p>Text here</p>\njs\nassert match(code, /\\<p\\s*\\>\\s*I\\s*enjoy\\s*solving\\s*puzzles\\s*\\ \\s*\\<\\/p\\s*\\>/i);\nYou should have exactly two paragraph elements on the page js\nassert lengthOf(document querySelectorAll(\"p\"), 2);\nYou should have exactly one h3 element on the page js\nassert lengthOf(document querySelectorAll(\"h3\"), 1);\nYou should have an h3 element with the text Background and Interests Here's an example: <h3>Text here</h3>\njs\nassert match(code, /\\<h3\\s*\\>\\s*Background\\s*and\\s*Interests\\s*\\<\\/h3\\s*\\>/i);\nYou should have exactly five total elements on the page js\nassert lengthOf(document querySelectorAll(\"body *:not(script)\"), 5);\n--seed--\n--seed-contents--\n```html\nHello from Camperbot About\nMy name is Camperbot and I love learning new things Background and Interests\nI enjoy solving puzzles ```\n# --solutions--\n```html\nHello from Camperbot About\nMy name is Camperbot and I love learning new things Background and Interests\nI enjoy solving puzzles ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3146,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-debug-camperbots-profile-page\\6823f9df49cc206af5471a30.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "0dde38aed0ef0b94f008773ccb542f2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-currency-converter\\67eaa957114d373deb3a9149.md",
    "source_type": "git_repo",
    "title": "Currency Converter",
    "content": "id: 67eaa957114d373deb3a9149\ntitle: Build a Currency Converter\nchallengeType: 25\ndashedName: build-a-currency-converter\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYour CurrencyConverter component should render an input element to accept the amount to be converted from Your input element should accept numbers Your CurrencyConverter component should render two select elements to choose the currency to convert from and to Your select element should include options for at least USD, EUR, GBP, and JPY You may use any exchange rate, provided there is no one-to-one mapping between the currencies Here are some examples of good and bad mappings:\n```js\nconst badMapping = {\nUSD: 1,\nEUR: 1,\nGBP: 1,\nJPY: 1\n};\nconst goodMapping = {\nUSD: 1,\nEUR: 0 92,\nGBP: 0 78,\nJPY: 156 7\n};\n```\nYour CurrencyConverter component should memoize the calculation of the converted amounts for the from currency such that a change in the to select option will not recalculate the converted amounts Your CurrencyConverter component should render an element showing the converted amount in the format XX XX CCC, where XX XX is the converted amount and CCC is the currency code The converted amount should be rounded to two decimal places --hints--\nYou should export a CurrencyConverter component ```js\nasync () => {\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nassert property(exports, \"CurrencyConverter\");\n}\n```\nYou should have one input[type=\"number\"] element to accept the amount to be converted from js\nconst inp = document querySelectorAll('input[type=\"number\"]');\nassert equal(inp length, 1);\nYou should have two select elements js\nconst selects = document querySelectorAll('select');\nassert equal(selects length, 2);\nThe select elements should have options for at least USD, EUR, GBP, and JPY ```js\nconst selects = [ document querySelectorAll('select')];\nassert equal(selects length, 2);\nfor (const select of selects) {\nconst options = [ select options] map((o) => o value);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14452,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-currency-converter\\67eaa957114d373deb3a9149.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "a8abf325c794a2cc280e1fb93056265c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-currency-converter\\67eaa957114d373deb3a9149.md",
    "source_type": "git_repo",
    "title": "Currency Converter",
    "content": "to accept the amount to be converted from js const inp = document querySelectorAll('input[type=\"number\"]'); assert equal(inp length, 1); You should have two select elements js const selects = document querySelectorAll('select'); assert equal(selects length, 2); The select elements should have options for at least USD, EUR, GBP, and JPY ```js const selects = [ document querySelectorAll('select')]; assert equal(selects length, 2); for (const select of selects) { const options = [ select options] map((o) => o value); assertincludeMembers(options, [\"USD\", \"EUR\", \"GBP\", \"JPY\"]);\n}\n```\nChanging the value of the first select element should cause the converted amounts to be recalculated ```js\nasync () => {\nfunction spyOn(\nobj,\nmethod\n) {\nconst original = obj[method];\nconst calls = [];\nconst fn = (cb, deps) => {\nconst result = original(() => {calls push(1); return cb();}, deps);\nreturn result;\n};\nobj[method] = fn;\nfn calls = calls;\nreturn fn;\n}\nconst abuseMemo = spyOn(React, \"useMemo\");\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst s = await __helpers prepTestComponent(exports CurrencyConverter);\nconst [first, _second] = s querySelectorAll('select');\nassert exists(first);\nawait React act(async () => {\n// Find first option that is not selected\nconst notSelected = [ first options] find((o) => o selected);\nfirst value = notSelected value;\nconst ev = new Event(\"change\", { bubbles: true, cancelable: false });\nfirst[Object keys(first) find((k) => k startsWith(\"__reactProps\"))] onChange({ ev, target: first});\n});\nassert equal(abuseMemo calls length, 2);\n}\n```\nChanging the value of the second select element should not cause the converted amounts to be recalculated ```js\nasync () => {\nfunction spyOn(\nobj,\nmethod\n) {\nconst original = obj[method];\nconst calls = [];\nconst fn = (cb, deps) => {\nconst result = original(() => {calls push(1); return cb();}, deps);\nreturn result;\n};\nobj[method] = fn;\nfn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14452,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-currency-converter\\67eaa957114d373deb3a9149.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "8f926c9893a952ee8f7ae7d41f1a0d64",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-currency-converter\\67eaa957114d373deb3a9149.md",
    "source_type": "git_repo",
    "title": "Currency Converter",
    "content": "find((k) => k startsWith(\"__reactProps\"))] onChange({ ev, target: first}); }); assert equal(abuseMemo calls length, 2); } ``` Changing the value of the second select element should not cause the converted amounts to be recalculated ```js async () => { function spyOn( obj, method ) { const original = obj[method]; const calls = []; const fn = (cb, deps) => { const result = original(() => {calls push(1); return cb();}, deps); return result; }; obj[method] = fn; fncalls = calls;\nreturn fn;\n}\nconst abuseMemo = spyOn(React, \"useMemo\");\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nconst s = await __helpers prepTestComponent(exports CurrencyConverter);\nconst [_first, second] = s querySelectorAll('select');\nassert exists(second);\nawait React act(async () => {\n// Find first option that is not selected\nconst notSelected = [ second options] find((o) => o selected);\nsecond value = notSelected value;\nconst ev = new Event(\"change\", { bubbles: true, cancelable: false });\nsecond[Object keys(second) find((k) => k startsWith(\"__reactProps\"))] onChange({ ev, target: second});\n});\nassert equal(abuseMemo calls length, 1);\n}\n```\nChanging the value of the first select element should cause a textual change on the page ```js\nasync () => {\nconst s = await __helpers prepTestComponent(window index CurrencyConverter);\nconst nonFormContentBefore = getInnerTextExcept(s, \"input,select\");\nconst [first, _second] = s querySelectorAll('select');\nassert exists(first);\nawait React act(async () => {\n// Find first option that is not selected\nconst notSelected = [ first options] find((o) => o selected);\nfirst value = notSelected value;\nconst ev = new Event(\"change\", { bubbles: true, cancelable: false });\nfirst[Object keys(first) find((k) => k startsWith(\"__reactProps\"))] onChange({ ev, target: first});\n});\nconst nonFormContentAfter = getInnerTextExcept(s, \"input,select\");\ntry {\nassert notEqual(nonFormContentBefore, nonFormContentAfter);\n} catch (e) {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14452,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-currency-converter\\67eaa957114d373deb3a9149.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "f9a997f3a5dcdc09562818513c464873",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-currency-converter\\67eaa957114d373deb3a9149.md",
    "source_type": "git_repo",
    "title": "Currency Converter",
    "content": "getInnerTextExcept(s, \"input,select\"); const [first, _second] = s querySelectorAll('select'); assert exists(first); await React act(async () => { // Find first option that is not selected const notSelected = [ first options] find((o) => o selected); first value = notSelected value; const ev = new Event(\"change\", { bubbles: true, cancelable: false }); first[Object keys(first) find((k) => k startsWith(\"__reactProps\"))] onChange({ ev, target: first}); }); const nonFormContentAfter = getInnerTextExcept(s, \"input,select\"); try { assert notEqual(nonFormContentBefore, nonFormContentAfter); } catch (e) { consoleerror(e);\nthrow e;\n}\n}\n```\nChanging the value of the second select element should cause a textual change on the page ```js\nasync () => {\nconst s = await __helpers prepTestComponent(window index CurrencyConverter);\nconst nonFormContentBefore = getInnerTextExcept(s, \"input,select\");\nconst [_first, second] = s querySelectorAll('select');\nassert exists(second);\nawait React act(async () => {\n// Find first option that is not selected\nconst notSelected = [ second options] find((o) => o selected);\nsecond value = notSelected value;\nconst ev = new Event(\"change\", { bubbles: true, cancelable: false });\nsecond[Object keys(second) find((k) => k startsWith(\"__reactProps\"))] onChange({ ev, target: second});\n});\nconst nonFormContentAfter = getInnerTextExcept(s, \"input,select\");\ntry {\nassert notEqual(nonFormContentBefore, nonFormContentAfter);\n} catch (e) {\nconsole error(e);\nthrow e;\n}\n}\n```\nThe converted amount should be displayed in the format XX XX CCC, where XX XX is the converted amount rounded to two decimal places and CCC is the currency code ```js\nasync () => {\nconst s = await __helpers prepTestComponent(window index CurrencyConverter);\nconst inp = s querySelector('input[type=\"number\"]');\nassert exists(inp);\nconst [_first, second] = s querySelectorAll('select');\nassert exists(second);\nawait React act(async () => {\n// Find first option that is not selected\nconst notSelected = [ second options] find((o) => o selected);\nsecond value = notSelected",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14452,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-currency-converter\\67eaa957114d373deb3a9149.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "6020aa6ebdce9c8b683b0afd55628a8f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-currency-converter\\67eaa957114d373deb3a9149.md",
    "source_type": "git_repo",
    "title": "Currency Converter",
    "content": "XX CCC, where XX XX is the converted amount rounded to two decimal places and CCC is the currency code ```js async () => { const s = await __helpers prepTestComponent(window index CurrencyConverter); const inp = s querySelector('input[type=\"number\"]'); assert exists(inp); const [_first, second] = s querySelectorAll('select'); assert exists(second); await React act(async () => { // Find first option that is not selected const notSelected = [ second options] find((o) => o selected); second value = notSelectedvalue;\nconst ev = new Event(\"change\", { bubbles: true, cancelable: false });\nsecond[Object keys(second) find((k) => k startsWith(\"__reactProps\"))] onChange({ ev, target: second});\ninp value = 10;\nconst ev2 = new Event(\"change\", { bubbles: true, cancelable: false });\ninp[Object keys(inp) find((k) => k startsWith(\"__reactProps\"))] onChange({ ev2, target: inp});\n});\nconst nonFormContent = getInnerTextExcept(s, \"input,select\");\ntry {\nconst currencyCode = second value;\nconst reg = new RegExp(\\\\d+\\\\ \\\\d{2} ${currencyCode});\nassert match(nonFormContent, reg);\n} catch (e) {\nconsole error(e);\nthrow e;\n}\n}\n```\nThe converted amount should be different from the input amount ```js\nasync () => {\nconst s = await __helpers prepTestComponent(window index CurrencyConverter);\nconst inp = s querySelector('input[type=\"number\"]');\nassert exists(inp);\nconst [first, second] = s querySelectorAll('select');\nassert exists(first);\nassert exists(second);\nfor (let i = 0; i < first options length; i++) {\nfor (let j = 0; j < second options length; j++) {\nif (first options[i] value === second options[j] value) {\ncontinue;\n}\nawait React act(async () => {\nfirst value = first options[i] value;\nconst ev = new Event(\"change\", { bubbles: true, cancelable: false });\nfirst[Object keys(first) find((k) => k startsWith(\"__reactProps\"))] onChange({ ev, target: first});\nsecond value = second options[j] value;\nconst ev2 = new Event(\"change\", { bubbles: true, cancelable: false });\nsecond[Object keys(second) find((k) => k",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14452,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-currency-converter\\67eaa957114d373deb3a9149.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "75793bf56608540a231e38ef41e08823",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-currency-converter\\67eaa957114d373deb3a9149.md",
    "source_type": "git_repo",
    "title": "Currency Converter",
    "content": "j = 0; j < second options length; j++) { if (first options[i] value === second options[j] value) { continue; } await React act(async () => { first value = first options[i] value; const ev = new Event(\"change\", { bubbles: true, cancelable: false }); first[Object keys(first) find((k) => k startsWith(\"__reactProps\"))] onChange({ ev, target: first}); second value = second options[j] value; const ev2 = new Event(\"change\", { bubbles: true, cancelable: false }); second[Object keys(second) find((k) => kstartsWith(\"__reactProps\"))] onChange({ ev2, target: second});\ninp value = 10;\nconst ev3 = new Event(\"change\", { bubbles: true, cancelable: false });\ninp[Object keys(inp) find((k) => k startsWith(\"__reactProps\"))] onChange({ ev3, target: inp});\n});\nconst nonFormContent = getInnerTextExcept(s, \"input,select\");\nconst { amount } = nonFormContent match(/( <amount>\\d+\\ \\d{2}) [A-Z]{3}/) groups;\ntry {\nassert notEqual(Number(amount), Number(inp value));\n} catch (e) {\nconsole error(e);\nthrow e;\n}\n}\n}\n}\n```\n--before-all--\n```js\nasync function delay(time) {\nreturn new Promise((resolve) => setTimeout(resolve, time));\n}\nfunction getInnerTextExcept(doc, removingSelector) {\nconst body = doc cloneNode(true);\nconst squareElements = body querySelectorAll(removingSelector);\nsquareElements forEach(element => {\nelement parentNode removeChild(element)\n});\nreturn body innerText;\n}\n```\n--seed--\n--seed-contents--\n```html\nCurrency Converter\n```\n```css\n```\n```jsx\nconst { useState, useMemo } = React;\nexport function CurrencyConverter() {\n}\n```\n--solutions--\n```html\nCurrency Converter\n```\n```css\nbody {\nbackground-color: #0a0a23;\nfont-family: Lato, sans-serif;\n}\nmain {\nbackground-color: #1b1b32;\npadding: 20px;\nborder-radius: 8px;\nbox-shadow: 0px 4px 6px rgba(0, 0, 0, 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14452,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-currency-converter\\67eaa957114d373deb3a9149.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "946935c35bc69d86684aa2cbeb6a224a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-currency-converter\\67eaa957114d373deb3a9149.md",
    "source_type": "git_repo",
    "title": "Currency Converter",
    "content": "{ const body = doc cloneNode(true); const squareElements = body querySelectorAll(removingSelector); squareElements forEach(element => { element parentNode removeChild(element) }); return body innerText; } ``` --seed-- --seed-contents-- ```html Currency Converter ``` ```css ``` ```jsx const { useState, useMemo } = React; export function CurrencyConverter() { } ``` --solutions-- ```html Currency Converter ``` ```css body { background-color: #0a0a23; font-family: Lato, sans-serif; } main { background-color: #1b1b32; padding: 20px; border-radius: 8px; box-shadow: 0px 4px 6px rgba(0, 0, 0, 01);\ntext-align: center;\nwidth: 400px;\nmargin: 50px auto;\n}\nh1 {\nmargin-bottom: 16px;\ncolor: #f5f6f7;\n}\nlabel {\ncolor: #f5f6f7;\n}\ninput,\nselect {\nwidth: 100%;\ndisplay: block;\nbox-sizing: border-box;\npadding: 8px;\nmargin-bottom: 12px;\nmargin-top: 4px;\nborder: 1px solid #99c9ff;\nborder-radius: 4px;\n} conversion-display {\nfont-size: 16px;\ncolor: #f5f6f7;\nmargin-bottom: 10px;\n}\np {\nfont-size: 18px;\nfont-weight: bold;\ncolor: #acd157;\n}\n```\n```jsx\nexport function CurrencyConverter() {\nconst [amount, setAmount] = React useState(1);\nconst [startCurrency, setStartCurrency] = React useState(\"USD\");\nconst [endCurrency, setEndCurrency] = React useState(\"EUR\");\nconst exchangeRates = {\nUSD: 1,\nEUR: 0 85,\nGBP: 0 75,\nJPY: 110\n}\nconst convertedAmounts = React useMemo(() => {\nconst converted = {};\nObject keys(exchangeRates) forEach((curr) => {\nconverted[curr] = ((amount / exchangeRates[startCurrency]) * exchangeRates[curr]) toFixed(2);\n});\nreturn converted;\n}, [amount, startCurrency]);\nreturn (\nCurrency Converter\n{startCurrency} to {endCurrency} Conversion\nsetAmount(Number(e target value))}\n/>\nStart Currency:\nsetStartCurrency(e target value)}>\n{Object",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14452,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-currency-converter\\67eaa957114d373deb3a9149.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "fe4b9e7eb3fb655972ed6228d39b2099",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-currency-converter\\67eaa957114d373deb3a9149.md",
    "source_type": "git_repo",
    "title": "Currency Converter",
    "content": "useState(1); const [startCurrency, setStartCurrency] = React useState(\"USD\"); const [endCurrency, setEndCurrency] = React useState(\"EUR\"); const exchangeRates = { USD: 1, EUR: 0 85, GBP: 0 75, JPY: 110 } const convertedAmounts = React useMemo(() => { const converted = {}; Object keys(exchangeRates) forEach((curr) => { converted[curr] = ((amount / exchangeRates[startCurrency]) * exchangeRates[curr]) toFixed(2); }); return converted; }, [amount, startCurrency]); return ( Currency Converter {startCurrency} to {endCurrency} Conversion setAmount(Number(e target value))} /> Start Currency: setStartCurrency(e target value)}> {Objectkeys(exchangeRates) map((curr) => (\n{curr}\n))}\nTarget Currency:\nsetEndCurrency(e target value)}>\n{Object keys(exchangeRates) map((curr) => (\n{curr}\n))}\nConverted Amount: {convertedAmounts[endCurrency]} {endCurrency}\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14452,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-currency-converter\\67eaa957114d373deb3a9149.md",
      "source_type": "git_repo"
    },
    "token_count": 217,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "e64b693971a306e795d6209c2fa1f9de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-date-conversion\\66f686b8ebdb982fa8e14330.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66f686b8ebdb982fa8e14330\ntitle: Build a Date Conversion Program\nchallengeType: 26\ndashedName: lab-date-conversion\n--description--\nIn this lab, you will code a date conversion program that converts a given date to different formats For example, the current date Fri Sep 27 2024 16:04:43 GMT+0500 (Pakistan Standard Time) would be formatted in the following 2 ways:\n(MM/DD/YYYY): 9/27/2024 (Month Day, Year): September 27, 2024 Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create a variable named currentDate and assign it the current date and time using the Date object You should create a variable named currentDateFormat and assign it the string Current Date and Time: [current date] Replace [current date] with the result of the currentDate variable You should log the value of currentDateFormat to the console You should create a function named formatDateMMDDYYYY that takes the date object as a parameter You can name this parameter whatever you like Your formatDateMMDDYYYY function should convert the current date to month/day/year format and return the string Formatted Date (MM/DD/YYYY): [month]/[day]/[year] You should create a function named formatDateLong that takes the date object as a parameter Your formatDateLong function should convert the current date to Month Day, Year format and return the string Formatted Date (Month Day, Year): [formatted date] Note: For the tests to pass, make sure that you use en-US for the locale when formatting the dates --hints--\nYou should have a variable named currentDate that holds the current date and time using the Date object ```js\n// excluded timestamps\nconst expectedDate = new Date();\nconst expectedDateOnly = new Date(expectedDate getFullYear(), expectedDate getMonth(), expectedDate getDate());\nconst currentDateOnly = new Date(currentDate getFullYear(), currentDate getMonth(), currentDate getDate());\nassert equal(currentDateOnly toString(), expectedDateOnly toString());\n```\nYou should have a variable named currentDateFormat that holds the current date in the format Current Date and Time: <ddd> <MMM> <dd> <yyyy> <HH>:<mm>:<ss> <TIMEZONE> ``js\nconst expectedDateString =Current Date and Time: `;\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5248,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-date-conversion\\66f686b8ebdb982fa8e14330.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "ce0409287c00dd3c982c6e581a15c71f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-date-conversion\\66f686b8ebdb982fa8e14330.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "date and time using the Date object ```js // excluded timestamps const expectedDate = new Date(); const expectedDateOnly = new Date(expectedDate getFullYear(), expectedDate getMonth(), expectedDate getDate()); const currentDateOnly = new Date(currentDate getFullYear(), currentDate getMonth(), currentDate getDate()); assert equal(currentDateOnly toString(), expectedDateOnly toString()); ``` You should have a variable named currentDateFormat that holds the current date in the format Current Date and Time: <ddd> <MMM> <dd> <yyyy> <HH>:<mm>:<ss> <TIMEZONE> ``js const expectedDateString =Current Date and Time: `; assertinclude(currentDateFormat, expectedDateString);\nconst currentTimestamp = new Date(currentDateFormat replace(expectedDateString, '')) getTime();\nconst expectedTimestamp = new Date() getTime();\nassert approximately(currentTimestamp, expectedTimestamp, 2000);\n```\nYou should log the value of currentDateFormat to the console js\nassert match(code, /console\\ log\\(\\s*currentDateFormat\\s*\\)/);\nYou should have a function formatDateMMDDYYYY\njs\nassert isFunction(formatDateMMDDYYYY);\nThe function formatDateMMDDYYYY should take a single parameter js\nassert lengthOf(formatDateMMDDYYYY, 1);\nWhen the date object holds Fri Sep 27 2024 16:16:11 GMT+0500 (Pakistan Standard Time), the function formatDateMMDDYYYY should return Formatted Date (MM/DD/YYYY): 9/27/2024 ```js\nlet dateString = \"Fri Sep 27 2024 16:21:18 GMT+0500 (Pakistan Standard Time)\";\nlet dateObject = new Date(dateString);\nassert equal(formatDateMMDDYYYY(dateObject) toString(), \"Formatted Date (MM/DD/YYYY): 9/27/2024\");\n// prevent hardcoding\ndateString = \"Fri Sep 28 2024 18:31:18 GMT+0500 (Pakistan Standard Time)\";\ndateObject = new Date(dateString);\nassert strictEqual(formatDateMMDDYYYY(dateObject) toString(), \"Formatted Date (MM/DD/YYYY): 9/28/2024\");\n```\nYou should have a function formatDateLong\njs\nassert isFunction(formatDateLong);\nThe function formatDateLong should take a single a parameter js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5248,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-date-conversion\\66f686b8ebdb982fa8e14330.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "7599df85960c24bf914ab33a8ab17ada",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-date-conversion\\66f686b8ebdb982fa8e14330.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return Formatted Date (MM/DD/YYYY): 9/27/2024 ```js let dateString = \"Fri Sep 27 2024 16:21:18 GMT+0500 (Pakistan Standard Time)\"; let dateObject = new Date(dateString); assert equal(formatDateMMDDYYYY(dateObject) toString(), \"Formatted Date (MM/DD/YYYY): 9/27/2024\"); // prevent hardcoding dateString = \"Fri Sep 28 2024 18:31:18 GMT+0500 (Pakistan Standard Time)\"; dateObject = new Date(dateString); assert strictEqual(formatDateMMDDYYYY(dateObject) toString(), \"Formatted Date (MM/DD/YYYY): 9/28/2024\"); ``` You should have a function formatDateLong js assert isFunction(formatDateLong); The function formatDateLong should take a single a parameter js assertlengthOf(formatDateLong, 1);\nWhen the date object holds Fri Sep 27 2024 16:16:11 GMT+0500 (Pakistan Standard Time), the function formatDateLong should return Formatted Date (Month Day, Year): September 27, 2024 ```js\nlet testDate = new Date('Fri Sep 27 2024 16:21:18 GMT+0500 (Pakistan Standard Time)');\nlet result = formatDateLong(testDate);\nassert strictEqual(result,'Formatted Date (Month Day, Year): September 27, 2024', Test failed: ${result});\n// prevent hardcoding\ntestDate = new Date('Fri Sep 28 2024 18:31:18 GMT+0500 (Pakistan Standard Time)');\nresult = formatDateLong(testDate);\nassert strictEqual(result, 'Formatted Date (Month Day, Year): September 28, 2024');\n```\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n``js\nconst currentDate = new Date();\nconst currentDateFormat =Current Date and Time: ${currentDate}`;\nconsole log(currentDateFormat);\nfunction formatDateMMDDYYYY(date) {\nconst month = date getMonth() + 1;\nconst day = date getDate();\nconst year = date getFullYear();\nreturn Formatted Date (MM/DD/YYYY): ${month}/${day}/${year};\n}\nfunction formatDateLong(date) {\nconst longDateFormat =  date",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5248,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-date-conversion\\66f686b8ebdb982fa8e14330.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "cab586f56c46c59e76b9a55ce02b9bde",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-date-conversion\\66f686b8ebdb982fa8e14330.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Date('Fri Sep 28 2024 18:31:18 GMT+0500 (Pakistan Standard Time)'); result = formatDateLong(testDate); assert strictEqual(result, 'Formatted Date (Month Day, Year): September 28, 2024'); ``` --seed-- --seed-contents-- ```js ``` --solutions-- ``js const currentDate = new Date(); const currentDateFormat =Current Date and Time: ${currentDate}`; console log(currentDateFormat); function formatDateMMDDYYYY(date) { const month = date getMonth() + 1; const day = date getDate(); const year = date getFullYear(); return Formatted Date (MM/DD/YYYY): ${month}/${day}/${year}; } function formatDateLong(date) { const longDateFormat = datetoLocaleDateString('en-US', {\nyear: 'numeric',\nmonth: 'long',\nday: 'numeric'\n});\nreturn Formatted Date (Month Day, Year): ${longDateFormat};\n}\n// usage\nconsole log(formatDateMMDDYYYY(currentDate));\nconsole log(formatDateLong(currentDate));\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5248,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-date-conversion\\66f686b8ebdb982fa8e14330.md",
      "source_type": "git_repo"
    },
    "token_count": 218,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "ea7dfac0e03500c8e4f166836eb4689f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-debug-pet-adoption-page\\685239f0cad43c7a909cbd98.md",
    "source_type": "git_repo",
    "title": "Purposefully removed the demo type because I don't want any example to show since this is a debugging project.",
    "content": "id: 685239f0cad43c7a909cbd98\ntitle: Debug a Pet Adoption Page\nchallengeType: 25\ndashedName: lab-debug-pet-adoption-page\nPurposefully removed the demo type because I don't want any example to show since this is a debugging project --description--\nSally, a pet adoption store owner, has built her first web page but there are some issues Your job is to fix all of the errors so Sally can continue building her page Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nSally wants to use an image of some cats but it is not displaying correctly You will need to fix the following in the img element:\nReplace the href attribute with the correct attribute for the image source Replace the att attribute with the correct attribute representing short, descriptive text for images Remove the </img> closing tag because img elements are void elements and don't have closing tags Sally wants to use some links to direct users to the dog and cat pages But the links are not working correctly You will need to fix the following in the a elements:\nReplace both src attributes with the correct attributes used to specify URLs --hints--\nYour img element should have a src attribute instead of the href attribute js\nconst imgEl = document querySelector(\"img\");\nassert isTrue(imgEl hasAttribute(\"src\"));\nYour img element should have an alt attribute instead of the non-existent att attribute js\nconst imgEl = document querySelector(\"img\");\nassert isTrue(imgEl hasAttribute(\"alt\"));\nYour img element should not have a </img> closing tag js\nassert notMatch(code, /<\\/img>/);\nYour a element with the text Visit cats page needs to have an href attribute instead of a src attribute js\nconst anchors = document querySelectorAll(\"a\");\nconst catLink = Array from(anchors) find(a => a textContent trim() === \"Visit cats page\");\nassert isDefined(catLink);\nassert isTrue(catLink hasAttribute(\"href\"));\nYour a element with the text Visit dogs page needs to have an href attribute instead of a src attribute js\nconst anchors = document querySelectorAll(\"a\");\nconst dogLink = Array from(anchors) find(a => a textContent trim() === \"Visit dogs page\");\nassert isDefined(dogLink);\nassert isTrue(dogLink hasAttribute(\"href\"));\n--seed--\n--seed-contents--\n```html\nWelcome XYZ Pet Adoption",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3255,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-debug-pet-adoption-page\\685239f0cad43c7a909cbd98.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b85c53abbbc6a2a4ec1eea23890173b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-debug-pet-adoption-page\\685239f0cad43c7a909cbd98.md",
    "source_type": "git_repo",
    "title": "Purposefully removed the demo type because I don't want any example to show since this is a debugging project.",
    "content": "const anchors = document querySelectorAll(\"a\"); const catLink = Array from(anchors) find(a => a textContent trim() === \"Visit cats page\"); assert isDefined(catLink); assert isTrue(catLink hasAttribute(\"href\")); Your a element with the text Visit dogs page needs to have an href attribute instead of a src attribute js const anchors = document querySelectorAll(\"a\"); const dogLink = Array from(anchors) find(a => a textContent trim() === \"Visit dogs page\"); assert isDefined(dogLink); assert isTrue(dogLink hasAttribute(\"href\")); --seed-- --seed-contents-- ```html Welcome XYZ Pet AdoptionConsider adopting a pet today We have cats, dogs, rabbits and more See our cats Adopt a cat Visit cats page\nAdopt a dog Visit dogs page\n```\n--solutions--\n```html\nWelcome XYZ Pet Adoption Consider adopting a pet today We have cats, dogs, rabbits and more See our cats Adopt a cat Visit cats page\nAdopt a dog Visit dogs page\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3255,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-debug-pet-adoption-page\\685239f0cad43c7a909cbd98.md",
      "source_type": "git_repo"
    },
    "token_count": 213,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "d64d5b6a93bd61466180e66f57dbe2b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-email-masker\\66b205e6eacba4c4e54ea434.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66b205e6eacba4c4e54ea434\ntitle: Build an Email Masker\nchallengeType: 26\ndashedName: build-an-email-masker\n--description--\nIn this lab, you will mask the username part of an email address with asterisks Masking is a term used to hide or replace sensitive information with asterisks or other characters For example, if the email address was myEmail@email com, then the masked email address will be m*****l@email com Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nCreate a function named maskEmail that takes email as an argument Inside the function, you should mask the email and append the domain name to it Remember that you can use methods like slice, repeat, indexOf or even replace to help you Outside the function, declare a variable named email to store the email address you want to mask Call the maskEmail function with the email variable and output the result to the console maskEmail(\"apple pie@example com\") should return \"a*******e@example com\" maskEmail(\"freecodecamp@example com\") should return \"f**********p@example com\" maskEmail(\"info@test dev\") should return \"i**o@test dev\" maskEmail(\"user@domain org\") should return \"u**r@domain org\" --hints--\nYou should define a function named maskEmail js\nassert isFunction(maskEmail);\nThe maskEmail function should take a string, email as an argument js\nassert match(maskEmail toString(), /\\s*maskEmail\\(\\s*\\w+\\s*\\)/);\nOutside the function, you should have an email variable js\nassert isDefined(email);\nYou should assign a valid email address to your email variable js\nassert match(email, /^[a-zA-Z0-9 _%-]+\\+ [a-zA-Z0-9 _%-]+@[a-zA-Z0-9 -]+\\ [a-zA-Z]{2,}$/);\nmaskEmail(\"apple pie@example com\") should return \"a*******e@example com\" js\nassert strictEqual(maskEmail(\"apple pie@example com\"),\"a*******e@example com\");\nmaskEmail(\"freecodecamp@example com\") should return \"f**********p@example com\" js\nassert strictEqual(maskEmail(\"freecodecamp@example com\"), \"f**********p@example com\");\nmaskEmail(\"info@test dev\") should return \"i**o@test dev\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3568,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-email-masker\\66b205e6eacba4c4e54ea434.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "848f02519c449792e061d0e87baabc34",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-email-masker\\66b205e6eacba4c4e54ea434.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should take a string, email as an argument js assert match(maskEmail toString(), /\\s*maskEmail\\(\\s*\\w+\\s*\\)/); Outside the function, you should have an email variable js assert isDefined(email); You should assign a valid email address to your email variable js assert match(email, /^[a-zA-Z0-9 _%-]+\\+ [a-zA-Z0-9 _%-]+@[a-zA-Z0-9 -]+\\ [a-zA-Z]{2,}$/); maskEmail(\"apple pie@example com\") should return \"a*******e@example com\" js assert strictEqual(maskEmail(\"apple pie@example com\"),\"a*******e@example com\"); maskEmail(\"freecodecamp@example com\") should return \"f**********p@example com\" js assert strictEqual(maskEmail(\"freecodecamp@example com\"), \"f**********p@example com\"); maskEmail(\"info@test dev\") should return \"i**o@test dev\"js\nassert strictEqual(maskEmail(\"info@test dev\"), \"i**o@test dev\");\nmaskEmail(\"user@domain org\") should return \"u**r@domain org\" js\nassert strictEqual(maskEmail(\"user@domain org\"), \"u**r@domain org\");\nYour maskEmail should produce the correct result js\nassert strictEqual(maskEmail(\"johnappleseed@email com\"), \"j***********d@email com\");\nassert strictEqual(maskEmail(\"john doe@example com\"), \"j******e@example com\");\nassert strictEqual(maskEmail(\"jane smith@sample org\"), \"j********h@sample org\");\nassert strictEqual(maskEmail(\"michael jordan@testmail net\"), \"m************n@testmail net\");\nassert strictEqual(maskEmail(\"mike+nospam@testmail net\"), \"m*********m@testmail net\");\nYou should log the output of calling maskEmail with email as argument js\nassert match(__helpers removeJSComments(code), /console\\ log\\(maskEmail\\(email\\)\\)/);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nfunction maskEmail(email) {\nconst atIndex = email indexOf(\"@\");\nconst userName = email slice(0, atIndex);\nconst domain = email slice(atIndex);\nconst maskedName =\nuserName[0] + \"*\" repeat(userName length - 2) + userName[userName length - 1] + domain;\nreturn maskedName;\n}\nconst email = \"apple pie@example",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3568,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-email-masker\\66b205e6eacba4c4e54ea434.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "efe76dc352a3967b44885a66311d201d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-email-masker\\66b205e6eacba4c4e54ea434.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "net\"), \"m************n@testmail net\"); assert strictEqual(maskEmail(\"mike+nospam@testmail net\"), \"m*********m@testmail net\"); You should log the output of calling maskEmail with email as argument js assert match(__helpers removeJSComments(code), /console\\ log\\(maskEmail\\(email\\)\\)/); --seed-- --seed-contents-- ```js ``` --solutions-- ```js function maskEmail(email) { const atIndex = email indexOf(\"@\"); const userName = email slice(0, atIndex); const domain = email slice(atIndex); const maskedName = userName[0] + \"*\" repeat(userName length - 2) + userName[userName length - 1] + domain; return maskedName; } const email = \"apple pie@examplecom\";\nconsole log(maskEmail(email));\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3568,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-email-masker\\66b205e6eacba4c4e54ea434.md",
      "source_type": "git_repo"
    },
    "token_count": 169,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "181fe5fe85482841c8931654214e1308",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-flyer-page\\66e45c8140f9fda5c105ae26.md",
    "source_type": "git_repo",
    "title": "Build an Event Flyer Page",
    "content": "id: 66e45c8140f9fda5c105ae26\ntitle: Build an Event Flyer Page\nchallengeType: 25\ndashedName: build-an-event-flyer-page\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a header element within the body Your header element should have an image in it for your event, and an h1 in it with your event title, in that order You can use this image if you would like: https://cdn freecodecamp org/curriculum/labs/event jpg\nYou should have a main element within the body Your main element should have at least two section elements within it showcasing the event features Your section elements each should have an h2 within them Your body should have a top and bottom padding of 50px Your body should have a top and bottom margin of 0, and a left and right margin that centers itself Your body should have a width set relative to the width of the viewport Your body should use the calc function to set its min-height property to 100% of the viewport's height minus all padding applied to the top and bottom of the body You should have at least one hr within your flyer You should set the width of all hr and section elements to a percent value relative to its parent Note: Be sure to link your stylesheet in your HTML and apply your CSS --hints--\nYou should have a header element within the body element js\nassert exists(document querySelector('body > header'));\nYou should have an img element as the first child in the header js\nassert equal(document querySelector('header') children [0] tagName, 'IMG');\nYou should have an h1 element as the second child in the header js\nassert equal(document querySelector('header') children [1] tagName, 'H1');\nYou should only have one h1 element js\nassert lengthOf(document querySelectorAll('h1'), 1);\nYour h1 should have the title of your event js\nassert isAtLeast(document querySelector('h1') innerText length, 1);\nYou should have a main element within the body element js\nassert exists(document querySelector('body > main'));\nYou should have at least two section elements within your main element js\nassert isAtLeast(document querySelectorAll('main > section')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6727,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-flyer-page\\66e45c8140f9fda5c105ae26.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "b63c3292ce12ee61fd96419e299ab0b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-flyer-page\\66e45c8140f9fda5c105ae26.md",
    "source_type": "git_repo",
    "title": "Build an Event Flyer Page",
    "content": "the second child in the header js assert equal(document querySelector('header') children [1] tagName, 'H1'); You should only have one h1 element js assert lengthOf(document querySelectorAll('h1'), 1); Your h1 should have the title of your event js assert isAtLeast(document querySelector('h1') innerText length, 1); You should have a main element within the body element js assert exists(document querySelector('body > main')); You should have at least two section elements within your main element js assert isAtLeast(document querySelectorAll('main > section')length, 2);\nYour section elements should each have an h2 within them js\nconst sections = document querySelectorAll('main > section');\nconst headers = document querySelectorAll('main > section > h2');\nassert isAtLeast(sections length, 1);\nassert equal(sections length, headers length);\nYour h2 elements should not be empty js\nconst headers = document querySelectorAll('main > section > h2');\nassert isAtLeast(headers length, 1);\nheaders forEach(header => assert notEqual(header innerHTML trim(), ''));\nYour body element should have a top and bottom padding of 50px js\nconst body = window getComputedStyle(document querySelector('body'));\nassert equal(body paddingTop, '50px');\nassert equal(body paddingBottom, '50px');\nYour body element should have a top and bottom margin of 0 js\nconst body = new __helpers CSSHelp(document) getStyle('body');\nassert equal(body marginTop, '0px');\nassert equal(body marginBottom, '0px');\nYour body element should have a left and right margin of auto js\nconst body = new __helpers CSSHelp(document) getStyle('body');\nassert equal(body marginRight, 'auto');\nassert equal(body marginLeft, 'auto');\nYour body element should set its width using vw js\nassert isTrue(new __helpers CSSHelp(document) getStyle('body') width endsWith('vw'));\nYour body should use calc to set its min-height to 100vh - 100px js\nassert oneOf(new __helpers CSSHelp(document) getStyle('body') minHeight, ['calc(-100px + 100vh)', 'calc(100vh - 100px)']);\nYou should have at least one hr element js\nassert isAtLeast(document querySelectorAll('hr') length, 1);\nThe width of your hr elements should be set using a percent value",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6727,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-flyer-page\\66e45c8140f9fda5c105ae26.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "bde1e7d0e68b499fc7e42f57538eba02",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-flyer-page\\66e45c8140f9fda5c105ae26.md",
    "source_type": "git_repo",
    "title": "Build an Event Flyer Page",
    "content": "marginRight, 'auto'); assert equal(body marginLeft, 'auto'); Your body element should set its width using vw js assert isTrue(new __helpers CSSHelp(document) getStyle('body') width endsWith('vw')); Your body should use calc to set its min-height to 100vh - 100px js assert oneOf(new __helpers CSSHelp(document) getStyle('body') minHeight, ['calc(-100px + 100vh)', 'calc(100vh - 100px)']); You should have at least one hr element js assert isAtLeast(document querySelectorAll('hr') length, 1); The width of your hr elements should be set using a percent valuejs\nassert isTrue([ new __helpers CSSHelp(document) getCSSRules() values()] some(rule =>\nrule selectorText split(',') some(selector =>\nselector trim() === 'hr' &&\nrule style width endsWith('%')\n)\n));\nThe width of your section elements should be set using a percent value js\nassert isTrue([ new __helpers CSSHelp(document) getCSSRules() values()] some(rule =>\nrule selectorText split(',') some(selector =>\nselector trim() === 'section' &&\nrule style width endsWith('%')\n)\n));\n--seed--\n--seed-contents--\n```html\nBuild an Event Flyer Page\n```\n```css\n```\n--solutions--\n```html\nBuild an Event Flyer Page\nPet Rock Festival\nJoin us for the first annual Pet Rock Festival",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6727,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-flyer-page\\66e45c8140f9fda5c105ae26.md",
      "source_type": "git_repo"
    },
    "token_count": 299,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "c0d697b023458e119c93d34f96c97dc6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-flyer-page\\66e45c8140f9fda5c105ae26.md",
    "source_type": "git_repo",
    "title": "Build an Event Flyer Page",
    "content": "&& rule style width endsWith('%') ) )); The width of your section elements should be set using a percent value js assert isTrue([ new __helpers CSSHelp(document) getCSSRules() values()] some(rule => rule selectorText split(',') some(selector => selector trim() === 'section' && rule style width endsWith('%') ) )); --seed-- --seed-contents-- ```html Build an Event Flyer Page ``` ```css ``` --solutions-- ```html Build an Event Flyer Page Pet Rock Festival Join us for the first annual Pet Rock FestivalWhen: October 3rd Where: Boulder Park\nFestival Highlights\nPet Rock Obedience Shows\nBest Dressed Pet Rock Contest\nPet Rock Uphill Racing\nSpecial Guests\nJohn Gravel\nWendy Cobblestone\nFood Trucks\nRock 'n' Roll Tacos\nGranite Grill\nStone Cold Smoothies\n© 2025 Pet Rock Festival\n```\n```css\nhtml {\nbackground-color: gray;\n}\nbody {\npadding: 50px 10px;\nmargin: 0 auto;\nwidth: 90vw;\nmin-height: calc(100vh - 100px);\nbackground-color: white;\nfont-family: sans-serif;\ntext-align: center;\n}\nhr {\nmargin: 30px auto;\nwidth: 80%;\nbackground-color: black;\nheight: 2px;\n}\nmain {\nmargin: 0 auto;\n}\nsection {\ntext-align: center;\npadding: 50px 5px;\nvertical-align: top;\ndisplay: inline-block;\nmin-height: 100px;\nwidth: 30%;\n}\nul {\ntext-align: left;\nlist-style: inside;\npadding-left: 10px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6727,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-flyer-page\\66e45c8140f9fda5c105ae26.md",
      "source_type": "git_repo"
    },
    "token_count": 350,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "4e2a1c79ef54bc2a320865fd59510c4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
    "source_type": "git_repo",
    "title": "Customer Complaint Form",
    "content": "id: 67279fe50237291f80eed8b8\ntitle: Build a Customer Complaint Form\nchallengeType: 25\ndashedName: build-a-customer-complaint-form\ndemoType: onClick\n--description--\nFor this lab, you have been provided with all the HTML and CSS You will use JavaScript to validate the complaint form Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nWhen the form is submitted, you should ensure that:\n#full-name is not empty #email is a valid email address format #order-no is a sequence of ten numbers starting with 2024 #product-code follows the pattern XX##-X###-XX#, where X represents either a lowercase letter or an uppercase letter and # represents a number #quantity is a positive integer at least one checkbox from #complaints-group is checked #complaint-description contains at least twenty characters if the Other checkbox is checked a radio button from #solutions-group is selected #solution-description contains at least twenty characters if the Other radio button is selected You should have a function named validateForm that returns an object containing the following keys: full-name, email, order-no, product-code, quantity, complaints-group, complaint-description, solutions-group, and solution-description The value of each key should be true if the corresponding form field is correctly filled and false otherwise You should have a function named isValid that takes the object returned by validateForm as argument and returns true if every form field is correctly filled and false otherwise If a change event is triggered on a form field and it has a valid value, you should set its border color to green In case of checkbox and radio button groups, you should set the border color of the parent fieldset If a change event is triggered on a form field and it has an invalid value, you should set its border color to red In case of checkbox and radio button groups, you should set the border color of the parent fieldset When you try to submit the form you should call isValid to validate the form When you try to submit the form, if the form has any invalid field, each invalid field should be highlighted by setting the border color of each invalid input, textarea or fieldset (in case of checkbox and radio button groups) to red --hints--\nYou should have a function named validateForm js\nassert isFunction(validateForm);\nvalidateForm should return an object js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 16
  },
  {
    "id": "a08e56189fc7777a908881be632cd3ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
    "source_type": "git_repo",
    "title": "Customer Complaint Form",
    "content": "fieldset When you try to submit the form you should call isValid to validate the form When you try to submit the form, if the form has any invalid field, each invalid field should be highlighted by setting the border color of each invalid input, textarea or fieldset (in case of checkbox and radio button groups) to red --hints-- You should have a function named validateForm js assert isFunction(validateForm); validateForm should return an object js assertisObject(validateForm());\nvalidateForm()[\"full-name\"] should be false when #full-name is empty, and true otherwise js\nconst field = document getElementById(\"full-name\");\nfield value = \"\";\nassert isFalse(validateForm()[\"full-name\"]);\nfield value = \"testing\";\nassert isTrue(validateForm()[\"full-name\"]);\nWhen a change event is triggered on #full-name, you should set its border color to green if it contains a valid value, and red otherwise js\nconst field = document getElementById(\"full-name\");\nfield value = \"testing\"\nfield dispatchEvent(new Event(\"change\", { bubbles: true }));\nassert equal(field style borderColor, \"green\");\nfield value = \"\"\nfield dispatchEvent(new Event(\"change\", { bubbles: true }));\nassert equal(field style borderColor, \"red\");\nvalidateForm()[\"email\"] should be true when #email contains a valid email address, and false otherwise js\nconst field = document getElementById(\"email\");\nfield value = \"example@domain com\"\nassert isTrue(validateForm()[\"email\"]);\nfield value = \"testing\"\nassert isFalse(validateForm()[\"email\"]);\nWhen a change event is triggered on #email, you should set its border color to green if it contains a valid email address, and red otherwise js\nconst field = document getElementById(\"email\");\nfield value = \"example@domain com\"\nfield dispatchEvent(new Event(\"change\", { bubbles: true }));\nassert equal(field style borderColor, \"green\");\nfield value = \"\"\nfield dispatchEvent(new Event(\"change\", { bubbles: true }));\nassert equal(field style borderColor, \"red\");\nvalidateForm()[\"order-no\"] should be true when #order-no contains a valid value, and false otherwise js\nconst field = document getElementById(\"order-no\");\nfield value = \"2024001122\"\nassert isTrue(validateForm()[\"order-no\"]);\nfield value = \"testing\"\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 1,
    "total_chunks": 16
  },
  {
    "id": "7fd92cf7d7e4812265df4104fa3614af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
    "source_type": "git_repo",
    "title": "Customer Complaint Form",
    "content": "a valid email address, and red otherwise js const field = document getElementById(\"email\"); field value = \"example@domain com\" field dispatchEvent(new Event(\"change\", { bubbles: true })); assert equal(field style borderColor, \"green\"); field value = \"\" field dispatchEvent(new Event(\"change\", { bubbles: true })); assert equal(field style borderColor, \"red\"); validateForm()[\"order-no\"] should be true when #order-no contains a valid value, and false otherwise js const field = document getElementById(\"order-no\"); field value = \"2024001122\" assert isTrue(validateForm()[\"order-no\"]); field value = \"testing\" assertisFalse(validateForm()[\"order-no\"]);\nWhen a change event is triggered on #order-no, you should set its border color to green if it contains a valid value, and red otherwise js\nconst field = document getElementById(\"order-no\");\nfield value = \"2024001122\"\nfield dispatchEvent(new Event(\"change\", { bubbles: true }));\nassert equal(field style borderColor, \"green\");\nfield value = \"20240011\"\nfield dispatchEvent(new Event(\"change\", { bubbles: true }));\nassert equal(field style borderColor, \"red\");\nvalidateForm()[\"product-code\"] should be true when #product-code contains a valid value, and false otherwise js\nconst field = document getElementById(\"product-code\");\nfield value = \"Xa22-X123-Xb4\";\nassert isTrue(validateForm()[\"product-code\"]);\nfield value = \"testing\"\nassert isFalse(validateForm()[\"product-code\"]);\nWhen a change event is triggered on #product-code, you should set its border color to green if it contains a valid value, and red otherwise js\nconst field = document getElementById(\"product-code\");\nfield value = \"Xa22-X123-Xb4\"\nfield dispatchEvent(new Event(\"change\", { bubbles: true }));\nassert equal(field style borderColor, \"green\");\nfield value = \"Xa22-123-Xb4\"\nfield dispatchEvent(new Event(\"change\", { bubbles: true }));\nassert equal(field style borderColor, \"red\");\nvalidateForm()[\"quantity\"] should be true when #quantity contains a valid value, and false otherwise js\nconst field = document getElementById(\"quantity\");\nfield value = \"5\";\nassert isTrue(validateForm()[\"quantity\"]);\nfield value = \"0\";\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 2,
    "total_chunks": 16
  },
  {
    "id": "cf18be8fa6c88ebc2fb0006eb7391b6a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
    "source_type": "git_repo",
    "title": "Customer Complaint Form",
    "content": "it contains a valid value, and red otherwise js const field = document getElementById(\"product-code\"); field value = \"Xa22-X123-Xb4\" field dispatchEvent(new Event(\"change\", { bubbles: true })); assert equal(field style borderColor, \"green\"); field value = \"Xa22-123-Xb4\" field dispatchEvent(new Event(\"change\", { bubbles: true })); assert equal(field style borderColor, \"red\"); validateForm()[\"quantity\"] should be true when #quantity contains a valid value, and false otherwise js const field = document getElementById(\"quantity\"); field value = \"5\"; assert isTrue(validateForm()[\"quantity\"]); field value = \"0\"; assertisFalse(validateForm()[\"quantity\"]);\nWhen a change event is triggered on #quantity, you should set its border color to green if it contains a valid value, and red otherwise js\nconst field = document getElementById(\"quantity\");\nfield value = \"2\"\nfield dispatchEvent(new Event(\"change\", { bubbles: true }));\nassert equal(field style borderColor, \"green\");\nfield value = \"0\"\nfield dispatchEvent(new Event(\"change\", { bubbles: true }));\nassert equal(field style borderColor, \"red\");\nWhen at least one checkbox from #complaints-group is checked, validateForm()[\"complaints-group\"] should be true js\ndocument getElementById(\"damaged-product\") checked = true\nassert isTrue(validateForm()[\"complaints-group\"]);\nWhen none of the checkboxes from #complaints-group is checked, validateForm()[\"complaints-group\"] should be false js\ndocument getElementById(\"damaged-product\") checked = false;\ndocument getElementById(\"nonconforming-product\") checked = false;\ndocument getElementById(\"delayed-dispatch\") checked = false;\ndocument getElementById(\"other-complaint\") checked = false;\nassert isFalse(validateForm()[\"complaints-group\"]);\nOnce one checkbox from #complaints-group is checked, you should set #complaints-group's border color to green js\ndocument getElementById(\"nonconforming-product\") checked = false;\ndocument getElementById(\"delayed-dispatch\") checked = false;\ndocument getElementById(\"other-complaint\") checked = false;\nconst damagedProduct = document getElementById(\"damaged-product\");\ndamagedProduct checked = true;\ndamagedProduct dispatchEvent(new Event(\"change\", { bubbles: true }));\nconst fieldset = document getElementById(\"complaints-group\");\nassert equal(fieldset",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 3,
    "total_chunks": 16
  },
  {
    "id": "5a90ee799123e8c34d9939cd17b4ed0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
    "source_type": "git_repo",
    "title": "Customer Complaint Form",
    "content": "document getElementById(\"damaged-product\") checked = false; document getElementById(\"nonconforming-product\") checked = false; document getElementById(\"delayed-dispatch\") checked = false; document getElementById(\"other-complaint\") checked = false; assert isFalse(validateForm()[\"complaints-group\"]); Once one checkbox from #complaints-group is checked, you should set #complaints-group's border color to green js document getElementById(\"nonconforming-product\") checked = false; document getElementById(\"delayed-dispatch\") checked = false; document getElementById(\"other-complaint\") checked = false; const damagedProduct = document getElementById(\"damaged-product\"); damagedProduct checked = true; damagedProduct dispatchEvent(new Event(\"change\", { bubbles: true })); const fieldset = document getElementById(\"complaints-group\"); assert equal(fieldsetstyle borderColor, \"green\");\nWhen all of the checkboxes from #complaints-group are changed to the unchecked state, you should set #complaints-group's border color to red js\ndocument getElementById(\"damaged-product\") checked = false;\ndocument getElementById(\"delayed-dispatch\") checked = false;\ndocument getElementById(\"other-complaint\") checked = false;\nconst nonConfProduct = document getElementById(\"nonconforming-product\");\nnonConfProduct checked = false;\nnonConfProduct dispatchEvent(new Event(\"change\", { bubbles: true }));\nconst fieldset = document getElementById(\"complaints-group\");\nassert equal(fieldset style borderColor, \"red\");\nWhen #other-complaint is checked and #complaint-description contains at least twenty characters, validateForm()[\"complaint-description\"] should be true js\ndocument getElementById(\"other-complaint\") checked = true\ndocument getElementById(\"complaint-description\") value = \"A sentence with at least twenty characters\";\nassert isTrue(validateForm()[\"complaint-description\"]);\nWhen #other-complaint is checked and #complaint-description contains less than twenty characters, validateForm()[\"complaint-description\"] should be false js\ndocument getElementById(\"other-complaint\") checked = true\ndocument getElementById(\"complaint-description\") value = \"Less than 20 chars\";\nassert isFalse(validateForm()[\"complaint-description\"]);\nWhen #other-complaint is checked and the value of #complaint-description is changed to a valid value, you should set its border color to green js\ndocument getElementById(\"other-complaint\") checked = true;\nconst field = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 4,
    "total_chunks": 16
  },
  {
    "id": "0a06003751d41fa0b539db6766231a4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
    "source_type": "git_repo",
    "title": "Customer Complaint Form",
    "content": "getElementById(\"complaint-description\") value = \"A sentence with at least twenty characters\"; assert isTrue(validateForm()[\"complaint-description\"]); When #other-complaint is checked and #complaint-description contains less than twenty characters, validateForm()[\"complaint-description\"] should be false js document getElementById(\"other-complaint\") checked = true document getElementById(\"complaint-description\") value = \"Less than 20 chars\"; assert isFalse(validateForm()[\"complaint-description\"]); When #other-complaint is checked and the value of #complaint-description is changed to a valid value, you should set its border color to green js document getElementById(\"other-complaint\") checked = true; const field = documentgetElementById(\"complaint-description\");\nfield value = \"A sentence with at least twenty characters\"\nfield dispatchEvent(new Event(\"input\", { bubbles: true }));\nfield dispatchEvent(new Event(\"change\", { bubbles: true }));\nassert equal(field style borderColor, \"green\");\nWhen #other-complaint is checked and the value of #complaint-description is changed to an invalid value, you should set its border color to red js\ndocument getElementById(\"other-complaint\") checked = true;\nconst field = document getElementById(\"complaint-description\");\nfield value = \"Not enough chars\"\nfield dispatchEvent(new Event(\"input\", { bubbles: true }));\nfield dispatchEvent(new Event(\"change\", { bubbles: true }));\nassert equal(field style borderColor, \"red\");\nWhen a radio button from #solutions-group is checked, validateForm()[\"solutions-group\"] should be true js\ndocument getElementById(\"refund\") checked = true\nassert isTrue(validateForm()[\"solutions-group\"]);\nWhen none of the radio buttons from #solutions-group is checked, validateForm()[\"solutions-group\"] should be false js\ndocument getElementById(\"refund\") checked = false;\ndocument getElementById(\"exchange\") checked = false;\ndocument getElementById(\"other-solution\") checked = false;\nassert isFalse(validateForm()[\"solutions-group\"]);\nOnce a radio button from #solutions-group is checked, you should set #solutions-group's border color to green js\ndocument getElementById(\"exchange\") checked = false;\ndocument getElementById(\"other-solution\") checked = false;\nconst refundRadioBtn = document getElementById(\"refund\");\nrefundRadioBtn checked = true;\nrefundRadioBtn dispatchEvent(new Event(\"change\", { bubbles: true }));\nconst fieldset = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 5,
    "total_chunks": 16
  },
  {
    "id": "e53bbab3e529a678ffc4d39abb982ddf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
    "source_type": "git_repo",
    "title": "Customer Complaint Form",
    "content": "the radio buttons from #solutions-group is checked, validateForm()[\"solutions-group\"] should be false js document getElementById(\"refund\") checked = false; document getElementById(\"exchange\") checked = false; document getElementById(\"other-solution\") checked = false; assert isFalse(validateForm()[\"solutions-group\"]); Once a radio button from #solutions-group is checked, you should set #solutions-group's border color to green js document getElementById(\"exchange\") checked = false; document getElementById(\"other-solution\") checked = false; const refundRadioBtn = document getElementById(\"refund\"); refundRadioBtn checked = true; refundRadioBtn dispatchEvent(new Event(\"change\", { bubbles: true })); const fieldset = documentgetElementById(\"solutions-group\");\nassert equal(fieldset style borderColor, \"green\");\nWhen the form is submitted and all of the radio buttons from #solutions-group are in the unchecked state, you should set #solutions-group's border color to red js\ndocument getElementById(\"refund\") checked = false;\ndocument getElementById(\"other-solution\") checked = false;\nconst exchangeRadioBtn = document getElementById(\"exchange\");\nexchangeRadioBtn checked = false;\nexchangeRadioBtn dispatchEvent(new Event(\"change\", { bubbles: true }));\nconst fieldset = document getElementById(\"solutions-group\");\nassert equal(fieldset style borderColor, \"red\");\nWhen #other-solution is checked and #solution-description contains at least twenty characters, validateForm()[\"solution-description\"] should be true js\ndocument getElementById(\"other-solution\") checked = true\ndocument getElementById(\"solution-description\") value = \"A sentence with at least twenty characters\";\nassert isTrue(validateForm()[\"solution-description\"]);\nWhen #other-solution is checked and #solution-description contains less than twenty characters, validateForm()[\"solution-description\"] should be false js\ndocument getElementById(\"other-solution\") checked = true\ndocument getElementById(\"solution-description\") value = \"Less than 20 chars\";\nassert isFalse(validateForm()[\"solution-description\"]);\nWhen #other-solution is checked and the value of #solution-description is changed to a valid value, you should set its border color to green js\ndocument getElementById(\"other-solution\") checked = true;\nconst field = document getElementById(\"solution-description\");\nfield value = \"A sentence with at least twenty characters\"\nfield dispatchEvent(new Event(\"input\", { bubbles: true }));\nfield",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 6,
    "total_chunks": 16
  },
  {
    "id": "bda2dd158d6b6c6e3fea6f5db7d58d86",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
    "source_type": "git_repo",
    "title": "Customer Complaint Form",
    "content": "less than twenty characters, validateForm()[\"solution-description\"] should be false js document getElementById(\"other-solution\") checked = true document getElementById(\"solution-description\") value = \"Less than 20 chars\"; assert isFalse(validateForm()[\"solution-description\"]); When #other-solution is checked and the value of #solution-description is changed to a valid value, you should set its border color to green js document getElementById(\"other-solution\") checked = true; const field = document getElementById(\"solution-description\"); field value = \"A sentence with at least twenty characters\" field dispatchEvent(new Event(\"input\", { bubbles: true })); fielddispatchEvent(new Event(\"change\", { bubbles: true }));\nassert equal(field style borderColor, \"green\");\nWhen #other-solution is checked and the value of #solution-description is changed to an invalid value, you should set its border color to red js\ndocument getElementById(\"other-solution\") checked = true;\nconst field = document getElementById(\"solution-description\");\nfield value = \"Not enough chars\"\nfield dispatchEvent(new Event(\"input\", { bubbles: true }));\nfield dispatchEvent(new Event(\"change\", { bubbles: true }));\nassert equal(field style borderColor, \"red\");\nYou should have a function named isValid js\nassert isFunction(isValid);\nYour isValid function should take the validateForm() as its argument and return true when all the form fields have been filled correctly ```js\ndocument getElementById(\"full-name\") value = \"testing\"\ndocument getElementById(\"email\") value = \"example@domain com\"\ndocument getElementById(\"order-no\") value = \"2024001122\"\ndocument getElementById(\"product-code\") value = \"Xa22-X123-Xb4\"\ndocument getElementById(\"quantity\") value = \"5\"\ndocument getElementById(\"damaged-product\") checked = true\ndocument getElementById(\"other-complaint\") checked = false\ndocument getElementById(\"refund\") checked = true\ndocument getElementById(\"other-solution\") checked = false\nassert isTrue(isValid(validateForm()));\ndocument getElementById(\"other-complaint\") checked = true\ndocument getElementById(\"complaint-description\") value = \"A sentence with at least twenty characters\";\ndocument getElementById(\"other-solution\") checked = true\ndocument getElementById(\"solution-description\") value = \"A sentence with at least twenty characters\";\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 7,
    "total_chunks": 16
  },
  {
    "id": "ea58455c36013e83c03f61327d06d1c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
    "source_type": "git_repo",
    "title": "Customer Complaint Form",
    "content": "document getElementById(\"email\") value = \"example@domain com\" document getElementById(\"order-no\") value = \"2024001122\" document getElementById(\"product-code\") value = \"Xa22-X123-Xb4\" document getElementById(\"quantity\") value = \"5\" document getElementById(\"damaged-product\") checked = true document getElementById(\"other-complaint\") checked = false document getElementById(\"refund\") checked = true document getElementById(\"other-solution\") checked = false assert isTrue(isValid(validateForm())); document getElementById(\"other-complaint\") checked = true document getElementById(\"complaint-description\") value = \"A sentence with at least twenty characters\"; document getElementById(\"other-solution\") checked = true document getElementById(\"solution-description\") value = \"A sentence with at least twenty characters\"; assertisTrue(isValid(validateForm()));\n```\nYour isValid function should take the validateForm() as its argument and return false when not all the form fields have been filled correctly ```js\nconst name = document getElementById(\"full-name\");\nconst email = document getElementById(\"email\");\nconst orderNo = document getElementById(\"order-no\");\nconst prCode = document getElementById(\"product-code\");\nconst quantity = document getElementById(\"quantity\");\nconst damaged = document getElementById(\"damaged-product\");\nconst nonConforming = document getElementById(\"nonconforming-product\");\nconst delayed = document getElementById(\"delayed-dispatch\");\nconst otherC = document getElementById(\"other-complaint\");\nconst complaintDescr = document getElementById(\"complaint-description\");\nconst refund = document getElementById(\"refund\");\nconst exchange = document getElementById(\"exchange\");\nconst otherS = document getElementById(\"other-solution\");\nconst solutionDescr = document getElementById(\"solution-description\");\n// invalid full-name\nname value = \"\";\nemail value = \"example@domain com\";\norderNo value = \"2024001122\";\nprCode value = \"Xa22-X123-Xb4\";\nquantity value = \"5\";\ndamaged checked = true;\nrefund checked = true;\nassert isFalse(isValid(validateForm()));\n// invalid email\nname value = \"testing\";\nemail value = \"\";\nassert isFalse(isValid(validateForm()));\n// invalid order-no\nemail value = \"example@domain com\";\norderNo value = \"202400\";\nassert isFalse(isValid(validateForm()));\n// invalid product-code\norderNo value = \"2024001122\";\nprCode",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 8,
    "total_chunks": 16
  },
  {
    "id": "69a2082762729ad3377150ab1f607345",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
    "source_type": "git_repo",
    "title": "Customer Complaint Form",
    "content": "document getElementById(\"other-solution\"); const solutionDescr = document getElementById(\"solution-description\"); // invalid full-name name value = \"\"; email value = \"example@domain com\"; orderNo value = \"2024001122\"; prCode value = \"Xa22-X123-Xb4\"; quantity value = \"5\"; damaged checked = true; refund checked = true; assert isFalse(isValid(validateForm())); // invalid email name value = \"testing\"; email value = \"\"; assert isFalse(isValid(validateForm())); // invalid order-no email value = \"example@domain com\"; orderNo value = \"202400\"; assert isFalse(isValid(validateForm())); // invalid product-code orderNo value = \"2024001122\"; prCodevalue = \"1a22-Xa23-Xb4\";\nassert isFalse(isValid(validateForm()));\n// invalid quantity\nprCode value = \"Xa22-X123-Xb4\";\nquantity value = 0;\nassert isFalse(isValid(validateForm()));\n// invalid complaints-group\nquantity value = 5;\ndamaged checked = false;\nnonConforming checked = false;\ndelayed checked = false;\notherC checked = false;\nassert isFalse(isValid(validateForm()));\n// invalid complaint-description\notherC checked = true;\ncomplaintDescr value = \"not enough chars\";\nassert isFalse(isValid(validateForm()));\n// invalid solutions-group\ncomplaintDescr value = \"A sentence with at least twenty characters\";\nrefund checked = false;\nexchange checked = false;\notherS checked = false;\nassert isFalse(isValid(validateForm()));\n// invalid solutions-description\notherS checked = true;\nsolutionDescr value = \"not enough chars\";\nassert isFalse(isValid(validateForm()));\n```\nYou should call isValid when you try to submit the form js\nlet flag = false;\nconst temp = isValid;\ntry {\nisValid = (obj) => {flag = true};\ndocument getElementById(\"form\") dispatchEvent(new Event(\"submit\"));\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 9,
    "total_chunks": 16
  },
  {
    "id": "bcbffae014baf4176ed843be5617c9ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
    "source_type": "git_repo",
    "title": "Customer Complaint Form",
    "content": "invalid solutions-group complaintDescr value = \"A sentence with at least twenty characters\"; refund checked = false; exchange checked = false; otherS checked = false; assert isFalse(isValid(validateForm())); // invalid solutions-description otherS checked = true; solutionDescr value = \"not enough chars\"; assert isFalse(isValid(validateForm())); ``` You should call isValid when you try to submit the form js let flag = false; const temp = isValid; try { isValid = (obj) => {flag = true}; document getElementById(\"form\") dispatchEvent(new Event(\"submit\")); assertisTrue(flag);\n} finally {\nisValid = temp;\n}\n--seed--\n--seed-contents--\n```html\nCustomer Complaint Form\nComplaint Form\nFull Name:\nEmail Address:\nOrder No:\nProduct Code:\nQuantity:\nComplaint Reason:\nDamaged Product\nNonconforming Product\nDelayed Dispatch\nOther\nDescription of Complaint Reason\nDesired Solution\nRefund\nExchange\nOther\nDescription of Desired Solution\nSubmit\n```\n```css\n* {\nbox-sizing: border-box;\n}\nh1 {\ntext-align: center;\n}\nform {\nmax-width: 70%;\nmargin: auto;\nborder-radius: 10px;\nbox-shadow: rgba(0, 0, 0, 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 262,
    "chunk_index": 10,
    "total_chunks": 16
  },
  {
    "id": "c794aea9084f5908489b350cb1ed029e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
    "source_type": "git_repo",
    "title": "Customer Complaint Form",
    "content": "getElementById(\"form\") dispatchEvent(new Event(\"submit\")); assertisTrue(flag); } finally { isValid = temp; } --seed-- --seed-contents-- ```html Customer Complaint Form Complaint Form Full Name: Email Address: Order No: Product Code: Quantity: Complaint Reason: Damaged Product Nonconforming Product Delayed Dispatch Other Description of Complaint Reason Desired Solution Refund Exchange Other Description of Desired Solution Submit ``` ```css * { box-sizing: border-box; } h1 { text-align: center; } form { max-width: 70%; margin: auto; border-radius: 10px; box-shadow: rgba(0, 0, 0, 035) 0px 5px 15px;\npadding: 10px;\n}\ninput {\nborder-color: rgb(118, 118, 118);\n}\npersonal-info input, #product-info input {\nwidth: 100%;\nmargin-bottom: 10px;\n}\nfieldset {\nmargin-bottom: 10px;\nborder-radius: 5px;\nborder-color: rgb(118, 118, 118);\n}\ntextarea {\nwidth: 100%;\nborder-color: rgb(118, 118, 118);\n}\nbtn-container {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nsubmit-btn, #clear-btn {\nmargin: 10px 15px 0;\n}\n```\n```js\n```\n--solutions--\n```html\nCustomer Complaint Form\nComplaint Form\nFull Name:\nEmail Address:\nOrder No:\nProduct Code:\nQuantity:\nComplaint Reason:\nDamaged Product\nNonconforming Product\nDelayed Dispatch\nOther\nDescription of Complaint Reason\nDesired Solution\nRefund\nExchange\nOther\nDescription of Desired Solution\nSubmit\nClear\n```\n```css\n* {\nbox-sizing: border-box;\n}\nh1 {\ntext-align: center;\n}\nform {\nmax-width: 70%;\nmargin: auto;\nborder-radius: 10px;\nbox-shadow: rgba(0, 0, 0, 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 11,
    "total_chunks": 16
  },
  {
    "id": "c718d0d64d237d727329ad907eddf6d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
    "source_type": "git_repo",
    "title": "Customer Complaint Form",
    "content": "submit-btn, #clear-btn { margin: 10px 15px 0; } ``` ```js ``` --solutions-- ```html Customer Complaint Form Complaint Form Full Name: Email Address: Order No: Product Code: Quantity: Complaint Reason: Damaged Product Nonconforming Product Delayed Dispatch Other Description of Complaint Reason Desired Solution Refund Exchange Other Description of Desired Solution Submit Clear ``` ```css * { box-sizing: border-box; } h1 { text-align: center; } form { max-width: 70%; margin: auto; border-radius: 10px; box-shadow: rgba(0, 0, 0, 035) 0px 5px 15px;\npadding: 10px;\n}\ninput {\nborder-color: rgb(118, 118, 118);\n}\npersonal-info input, #product-info input {\nwidth: 100%;\nmargin-bottom: 10px;\n}\nfieldset {\nmargin-bottom: 10px;\nborder-radius: 5px;\nborder-color: rgb(118, 118, 118);\n}\ntextarea {\nwidth: 100%;\nborder-color: rgb(118, 118, 118);\n}\nbtn-container {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n}\nsubmit-btn, #clear-btn {\nmargin: 10px 15px 0;\n}\n```\n```js\nconst form = document getElementById(\"form\");\nconst fullName = document getElementById(\"full-name\");\nconst emailAddress = document getElementById(\"email\");\nconst orderNo = document getElementById(\"order-no\");\nconst productCode = document getElementById(\"product-code\");\nconst quantity = document getElementById(\"quantity\");\nconst complaints = document querySelectorAll('input[name=\"complaint\"]');\nconst complaintDescription = document getElementById(\"complaint-description\");\nconst complaintTextAreaDiv = document getElementById(\"complaint-description-container\");\nconst solutions = document querySelectorAll('input[name=\"solutions\"]');\nconst solutionDescription = document getElementById(\"solution-description\");\nconst solutionTextAreaDiv = document getElementById(\"solution-description-container\");\nconst submitBtn = document getElementById(\"submit-btn\");\nconst messageBox = document getElementById(\"message-box\");\nconst clearBtn = document getElementById(\"clear-btn\");\nconst hideTextareas = () => {\ncomplaintTextAreaDiv style display = \"none\";\nsolutionTextAreaDiv style",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 12,
    "total_chunks": 16
  },
  {
    "id": "7ba09be8543012e866f66293593f602d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
    "source_type": "git_repo",
    "title": "Customer Complaint Form",
    "content": "= document getElementById(\"email\"); const orderNo = document getElementById(\"order-no\"); const productCode = document getElementById(\"product-code\"); const quantity = document getElementById(\"quantity\"); const complaints = document querySelectorAll('input[name=\"complaint\"]'); const complaintDescription = document getElementById(\"complaint-description\"); const complaintTextAreaDiv = document getElementById(\"complaint-description-container\"); const solutions = document querySelectorAll('input[name=\"solutions\"]'); const solutionDescription = document getElementById(\"solution-description\"); const solutionTextAreaDiv = document getElementById(\"solution-description-container\"); const submitBtn = document getElementById(\"submit-btn\"); const messageBox = document getElementById(\"message-box\"); const clearBtn = document getElementById(\"clear-btn\"); const hideTextareas = () => { complaintTextAreaDiv style display = \"none\"; solutionTextAreaDiv styledisplay = \"none\";\n}\nhideTextareas();\nconst formFields = {\n\"full-name\": fullName,\n\"email\": emailAddress,\n\"order-no\": orderNo,\n\"product-code\": productCode,\n\"quantity\": quantity,\n\"complaints-group\": Array from(complaints),\n\"complaint-description\": complaintDescription,\n\"solutions-group\": Array from(solutions),\n\"solution-description\": solutionDescription\n}\nconst clearForm = () => {\nObject entries(formFields) forEach(entry => {\nconst [key, val] = entry;\nif (Array isArray(val)) {\nval forEach(i => i checked = false);\n} else {\nval value = \"\";\n}\nhideTextareas();\nmessageBox innerText = \"\";\ndocument getElementById(key) style borderColor = \"rgb(118, 118, 118)\";\n})\n}\nconst validateForm = () => {\nconst complaintsArr = Array from(complaints) map(i => i checked);\nconst solutionsArr = Array from(solutions) map(i => i checked);\nconst validationObject = {\n\"full-name\": Boolean(fullName value trim()),\n\"email\": /^\\S+@\\S+ \\S+$/ test(emailAddress value trim()),\n\"order-no\": /^2024\\d{6}$/ test(orderNo value trim()),\n\"product-code\": /[A-Z]{2}\\d{2}-[A-Z]\\d{3}-[A-Z]{2}\\d/i test(productCode value trim()),\n\"quantity\": Number(quantity value trim()) > 0,\n\"complaints-group\": complaintsArr some(i => i),\n\"complaint-description\": null,\n\"solutions-group\": solutionsArr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 13,
    "total_chunks": 16
  },
  {
    "id": "9bed976d44f2ac669126bca7321bbde0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
    "source_type": "git_repo",
    "title": "Customer Complaint Form",
    "content": "innerText = \"\"; document getElementById(key) style borderColor = \"rgb(118, 118, 118)\"; }) } const validateForm = () => { const complaintsArr = Array from(complaints) map(i => i checked); const solutionsArr = Array from(solutions) map(i => i checked); const validationObject = { \"full-name\": Boolean(fullName value trim()), \"email\": /^\\S+@\\S+ \\S+$/ test(emailAddress value trim()), \"order-no\": /^2024\\d{6}$/ test(orderNo value trim()), \"product-code\": /[A-Z]{2}\\d{2}-[A-Z]\\d{3}-[A-Z]{2}\\d/i test(productCode value trim()), \"quantity\": Number(quantity value trim()) > 0, \"complaints-group\": complaintsArr some(i => i), \"complaint-description\": null, \"solutions-group\": solutionsArrsome(i => i),\n\"solution-description\": null\n}\nif (complaintsArr[3]) {\ncomplaintTextAreaDiv style display = \"block\";\nconst complaintsDescriptionVal = complaintDescription value trim();\nif (complaintsDescriptionVal length < 20) {\nvalidationObject[\"complaint-description\"] = false;\n} else {\nvalidationObject[\"complaint-description\"] = true;\n}\n} else {\ncomplaintTextAreaDiv style display = \"none\";\n}\nif (solutionsArr[2]) {\nsolutionTextAreaDiv style display = \"block\";\nconst solutionDescriptionVal = solutionDescription value trim();\nif (solutionDescriptionVal length < 20) {\nvalidationObject[\"solution-description\"] = false;\n} else {\nvalidationObject[\"solution-description\"] = true;\n}\n} else {\nsolutionTextAreaDiv style display = \"none\";\n}\nif (validationObject[\"complaint-description\"] === null) delete validationObject[\"complaint-description\"];\nif (validationObject[\"solution-description\"] === null) delete validationObject[\"solution-description\"];\nreturn validationObject;\n}\nclearBtn addEventListener(\"click\", clearForm);\nObject keys(formFields) forEach(key => {\ndocument getElementById(key) addEventListener(\"change\", (e) => {\nconst validationObject = validateForm();\nif (Object values(validationObject) every(val => val)) messageBox innerText = \"\";\nif ( validationObject[key]) {\ndocument getElementById(key) style borderColor = \"red\";\n} else {\ndocument getElementById(key) style",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 14,
    "total_chunks": 16
  },
  {
    "id": "1198c4b40f4e240415aa28602aa32982",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
    "source_type": "git_repo",
    "title": "Customer Complaint Form",
    "content": "false; } else { validationObject[\"solution-description\"] = true; } } else { solutionTextAreaDiv style display = \"none\"; } if (validationObject[\"complaint-description\"] === null) delete validationObject[\"complaint-description\"]; if (validationObject[\"solution-description\"] === null) delete validationObject[\"solution-description\"]; return validationObject; } clearBtn addEventListener(\"click\", clearForm); Object keys(formFields) forEach(key => { document getElementById(key) addEventListener(\"change\", (e) => { const validationObject = validateForm(); if (Object values(validationObject) every(val => val)) messageBox innerText = \"\"; if ( validationObject[key]) { document getElementById(key) style borderColor = \"red\"; } else { document getElementById(key) styleborderColor = \"green\";\n}\n});\n});\nconst isValid = (validationObj) => Object values(validationObj) every(i => i);\nform addEventListener(\"submit\", (e) => {\ne preventDefault();\nconst validationObject = validateForm();\nif ( isValid(validationObject)) {\nmessageBox innerText = \"Please, fill out the required fields correctly before submitting \";\nObject keys(validationObject) forEach(key => {\nif ( validationObject[key]) {\ndocument getElementById(key) style borderColor = \"red\";\n} else {\ndocument getElementById(key) style borderColor = \"green\";\n}\n});\n} else {\nmessageBox innerText = \"\";\nalert(\"Form successfully submitted \");\nclearForm();\n}\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 31309,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-customer-complaint-form\\67279fe50237291f80eed8b8.md",
      "source_type": "git_repo"
    },
    "token_count": 294,
    "chunk_index": 15,
    "total_chunks": 16
  },
  {
    "id": "4ff4bba48114caed1fae8d7a1e0d1911",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
    "source_type": "git_repo",
    "title": "Drum Machine",
    "content": "id: 6762ec275cef87635acc4fe3\ntitle: Build a Drum Machine\nchallengeType: 25\ndashedName: build-drum-machine\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a div element with an id of drum-machine that contains all other elements Inside the #drum-machine element you should have another div with an id of pad-bank Inside the #drum-machine element you should have a p element with an id of display Inside your #pad-bank element you should have nine clickable drum pad elements each with a class of drum-pad, a unique id that describes the audio clip the drum pad will be set up to trigger, and an inner text that corresponds to one of the following keys on the keyboard: Q, W, E, A, S, D, Z, X, C The drum pads MUST be in this order Each drum-pad should have an audio element which has a class of clip, a src attribute that points to an audio clip, and an id corresponding to the inner text of its parent drum-pad element (e g id=\"Q\", id=\"W\", id=\"E\" etc ) When you click on a drum-pad element, the audio clip contained in its child audio element should be triggered When you press the trigger key associated with each drum-pad, the audio clip contained in its child audio element should be triggered (e g pressing the Q key should trigger the drum pad which contains the string Q, pressing the W key should trigger the drum pad which contains the string W, etc ) When a drum-pad is triggered, you should display a string describing the associated audio clip as the inner text of the #display element (each string must be unique) Some audio samples you can use for your drum machine can be found at https://cdn freecodecamp org/curriculum/drum/<fileName>, where <fileName> is as follows:\n| drum name | fileName |\n| --- | --- |\n| Heater 1 | Heater-1 mp3 |\n| Heater 2 | Heater-2 mp3 |\n| Heater 3 | Heater-3 mp3 |\n| Heater 4 | Heater-4_1 mp3 |\n| Clap | Heater-6 mp3 |\n| Open-HH | Dsc_Oh",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13818,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 11
  },
  {
    "id": "adb4a7e05e0c09b332c12c694c109029",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
    "source_type": "git_repo",
    "title": "Drum Machine",
    "content": "(each string must be unique) Some audio samples you can use for your drum machine can be found at https://cdn freecodecamp org/curriculum/drum/<fileName>, where <fileName> is as follows: | drum name | fileName | | --- | --- | | Heater 1 | Heater-1 mp3 | | Heater 2 | Heater-2 mp3 | | Heater 3 | Heater-3 mp3 | | Heater 4 | Heater-4_1 mp3 | | Clap | Heater-6 mp3 | | Open-HH | Dsc_Ohmp3 |\n| Kick-n'-Hat | Kick_n_Hat mp3 |\n| Kick | RP4_KICK_1 mp3 |\n| Closed-HH | Cev_H2 mp3 |\n--hints--\nYou should have a div element with an id of drum-machine that contains all other elements js\nassert isNotNull(document querySelector('div#drum-machine'));\nInside the #drum-machine element you should have another div with an id of pad-bank js\nassert isNotNull(document querySelector('#drum-machine div#pad-bank'));\nInside the #drum-machine element you should have a p element with an id of display js\nassert isNotNull(document querySelector('#drum-machine p#display'));\nInside your #pad-bank element you should have nine clickable drum pad elements each with a class of drum-pad js\nassert lengthOf(document querySelectorAll('#pad-bank drum-pad'), 9);\nEach drum-pad should have one of the following letters as innerText, in order: Q, W, E, A, S, D, Z, X, C js\nconst pads = document querySelectorAll(' drum-pad');\nconst letters = [`Q`, `W`, `E`, `A`, `S`, `D`, `Z`, `X`, `C`];\nfor (let i = 0; i < 9; i++) {\nassert equal(pads[i] innerText trim(), letters[i]);\n}\nEach drum-pad should have an audio element which has a class of clip, a src attribute that points to an audio clip, and an id corresponding to the inner text of its parent drum-pad element (e g id=\"Q\", id=\"W\", id=\"E\" etc ) ``js\nconst letters = [Q,W,E,A,S,D,Z,X,C`];\nconst audios = document querySelectorAll('#drum-machine",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13818,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 11
  },
  {
    "id": "1ae291542d438ba2ea0bfa8634189c57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
    "source_type": "git_repo",
    "title": "Drum Machine",
    "content": "`W`, `E`, `A`, `S`, `D`, `Z`, `X`, `C`]; for (let i = 0; i < 9; i++) { assert equal(pads[i] innerText trim(), letters[i]); } Each drum-pad should have an audio element which has a class of clip, a src attribute that points to an audio clip, and an id corresponding to the inner text of its parent drum-pad element (e g id=\"Q\", id=\"W\", id=\"E\" etc ) ``js const letters = [Q,W,E,A,S,D,Z,X,C`]; const audios = document querySelectorAll('#drum-machinedrum-pad audio');\nfor (let i = 0; i < 9; i++) {\nassert equal(audios[i] id, letters[i]);\nassert isTrue(audios[i] classList contains('clip'));\nassert isTrue(audios[i] hasAttribute('src'));\n}\n```\nWhen you click on a drum-pad element, the audio clip contained in its child audio element should be triggered js\nconst pads = document querySelectorAll(' drum-pad');\nassert isNotEmpty(pads);\npads forEach(el => {\nconst audio = el querySelector('audio');\nel click();\nassert isFalse(audio paused);\naudio pause();\n});\nWhen you press one of the keys Q, W, E, A, S, D, Z, X, C on your keyboard, the corresponding audio element should play the corresponding sound ``js\nconst letters = [Q,W,E,A,S,D,Z,X,C`];\nconst audios = document querySelectorAll('#drum-machine drum-pad audio');\nfor (let i = 0; i < 9; i++) {\nconst audio = audios[i];\ndocument dispatchEvent(\nnew KeyboardEvent('keydown', { key: letters[i] toLowerCase() })\n);\nassert isFalse(audio paused);\naudio pause();\n}\n```\nWhen a drum-pad is triggered, you should display a string describing the associated audio clip as the inner text of the #display element (each string must be unique) js\nconst collection = new Set();\nconst disp = document querySelector('#display');\nconst pads = document querySelectorAll(' drum-pad');\nassert lengthOf(pads, 9);\npads forEach(el => {\nconst audio = el querySelector('audio');\nel click();\ncollection add(disp innerText trim());\naudio pause();\n});\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13818,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 11
  },
  {
    "id": "5e1e6fe0dad4e44b6ddc69ea058ebd4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
    "source_type": "git_repo",
    "title": "Drum Machine",
    "content": "}) ); assert isFalse(audio paused); audio pause(); } ``` When a drum-pad is triggered, you should display a string describing the associated audio clip as the inner text of the #display element (each string must be unique) js const collection = new Set(); const disp = document querySelector('#display'); const pads = document querySelectorAll(' drum-pad'); assert lengthOf(pads, 9); pads forEach(el => { const audio = el querySelector('audio'); el click(); collection add(disp innerText trim()); audio pause(); }); assertlengthOf(collection, 9);\n--seed--\n--seed-contents--\n```html\nDrum Machine\n```\n```css\n```\n```js\n```\n--solutions--\n```html\nDrum Machine\nPower: On\nBank: Heater Kit\n```\n```css\n/ General Reset /\n* {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\nbody {\nfont-family: 'Arial', sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmin-height: 100vh;\nbackground-color: #282c34;\ncolor: white;\n} inner-container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nbackground: #3b3b5f;\nborder-radius: 8px;\npadding: 20px;\nwidth: 300px;\n}\n/ Drum Pad Styles /\npad-bank {\ndisplay: grid;\ngrid-template-columns: repeat(3, 1fr);\ngap: 10px;\nmargin-bottom: 15px;\n} drum-pad {\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nwidth: 70px;\nheight: 70px;\nbackground: #444;\nborder-radius: 5px;\nfont-size: 1 2em;\ncursor: pointer;\n} drum-pad active {\nbackground: #ffaa33;\n} controls-container {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nwidth: 100%;\n} control {\ndisplay: flex;\njustify-content: space-between;\nwidth: 100%;\nmargin: 10px 0;\n} select {\nwidth: 50px;\nheight: 20px;\nbackground: #555;\nborder-radius: 10px;\ncursor: pointer;\nposition: relative;\n} select",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13818,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 3,
    "total_chunks": 11
  },
  {
    "id": "1306e8bd4df3637fcce38585a982cc33",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
    "source_type": "git_repo",
    "title": "Drum Machine",
    "content": "grid; grid-template-columns: repeat(3, 1fr); gap: 10px; margin-bottom: 15px; } drum-pad { display: flex; align-items: center; justify-content: center; width: 70px; height: 70px; background: #444; border-radius: 5px; font-size: 1 2em; cursor: pointer; } drum-pad active { background: #ffaa33; } controls-container { display: flex; flex-direction: column; align-items: center; width: 100%; } control { display: flex; justify-content: space-between; width: 100%; margin: 10px 0; } select { width: 50px; height: 20px; background: #555; border-radius: 10px; cursor: pointer; position: relative; } selectinner {\nposition: absolute;\nwidth: 18px;\nheight: 18px;\nbackground: #ffaa33;\nborder-radius: 50%;\ntop: 1px;\nleft: calc(100% - 18px);\n}\ndisplay {\nmargin: 15px 0;\ntext-align: center;\nfont-size: 1em;\npadding: 20px;\nbackground: #444;\nborder-radius: 5px;\nwidth: 100%;\n} volume-slider input[type='range'] {\nwidth: 100%;\n-webkit-appearance: none;\nappearance: none;\nheight: 4px;\nbackground: #ffaa33;\nborder-radius: 2px;\nmargin-bottom: 10px;\n} volume-slider input[type='range']::-webkit-slider-thumb {\n-webkit-appearance: none;\nwidth: 12px;\nheight: 12px;\nbackground: #fff;\nborder-radius: 50%;\ncursor: pointer;\n}\n```\n```js\nconst projectName = 'drum-machine';\nconst bankOne = [\n{\nkeyCode: 81,\nkeyTrigger: 'Q',\nid: 'Heater-1',\nurl: 'https://cdn freecodecamp org/curriculum/drum/Heater-1 mp3'\n},\n{\nkeyCode: 87,\nkeyTrigger: 'W',\nid: 'Heater-2',\nurl: 'https://cdn freecodecamp org/curriculum/drum/Heater-2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13818,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 4,
    "total_chunks": 11
  },
  {
    "id": "8581709ba2de503b9aa5f5c5cdab3160",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
    "source_type": "git_repo",
    "title": "Drum Machine",
    "content": "20px; background: #444; border-radius: 5px; width: 100%; } volume-slider input[type='range'] { width: 100%; -webkit-appearance: none; appearance: none; height: 4px; background: #ffaa33; border-radius: 2px; margin-bottom: 10px; } volume-slider input[type='range']::-webkit-slider-thumb { -webkit-appearance: none; width: 12px; height: 12px; background: #fff; border-radius: 50%; cursor: pointer; } ``` ```js const projectName = 'drum-machine'; const bankOne = [ { keyCode: 81, keyTrigger: 'Q', id: 'Heater-1', url: 'https://cdn freecodecamp org/curriculum/drum/Heater-1 mp3' }, { keyCode: 87, keyTrigger: 'W', id: 'Heater-2', url: 'https://cdn freecodecamp org/curriculum/drum/Heater-2mp3'\n},\n{\nkeyCode: 69,\nkeyTrigger: 'E',\nid: 'Heater-3',\nurl: 'https://cdn freecodecamp org/curriculum/drum/Heater-3 mp3'\n},\n{\nkeyCode: 65,\nkeyTrigger: 'A',\nid: 'Heater-4',\nurl: 'https://cdn freecodecamp org/curriculum/drum/Heater-4_1 mp3'\n},\n{\nkeyCode: 83,\nkeyTrigger: 'S',\nid: 'Clap',\nurl: 'https://cdn freecodecamp org/curriculum/drum/Heater-6 mp3'\n},\n{\nkeyCode: 68,\nkeyTrigger: 'D',\nid: 'Open-HH',\nurl: 'https://cdn freecodecamp org/curriculum/drum/Dsc_Oh mp3'\n},\n{\nkeyCode: 90,\nkeyTrigger: 'Z',\nid: \"Kick-n'-Hat\",\nurl: 'https://cdn freecodecamp org/curriculum/drum/Kick_n_Hat mp3'\n},\n{\nkeyCode: 88,\nkeyTrigger: 'X',\nid: 'Kick',\nurl: 'https://cdn freecodecamp org/curriculum/drum/RP4_KICK_1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13818,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 5,
    "total_chunks": 11
  },
  {
    "id": "61fe76cee0060593112c16a022cbc20b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
    "source_type": "git_repo",
    "title": "Drum Machine",
    "content": "{ keyCode: 69, keyTrigger: 'E', id: 'Heater-3', url: 'https://cdn freecodecamp org/curriculum/drum/Heater-3 mp3' }, { keyCode: 65, keyTrigger: 'A', id: 'Heater-4', url: 'https://cdn freecodecamp org/curriculum/drum/Heater-4_1 mp3' }, { keyCode: 83, keyTrigger: 'S', id: 'Clap', url: 'https://cdn freecodecamp org/curriculum/drum/Heater-6 mp3' }, { keyCode: 68, keyTrigger: 'D', id: 'Open-HH', url: 'https://cdn freecodecamp org/curriculum/drum/Dsc_Oh mp3' }, { keyCode: 90, keyTrigger: 'Z', id: \"Kick-n'-Hat\", url: 'https://cdn freecodecamp org/curriculum/drum/Kick_n_Hat mp3' }, { keyCode: 88, keyTrigger: 'X', id: 'Kick', url: 'https://cdn freecodecamp org/curriculum/drum/RP4_KICK_1mp3'\n},\n{\nkeyCode: 67,\nkeyTrigger: 'C',\nid: 'Closed-HH',\nurl: 'https://cdn freecodecamp org/curriculum/drum/Cev_H2 mp3'\n}\n];\nconst bankTwo = [\n{\nkeyCode: 81,\nkeyTrigger: 'Q',\nid: 'Chord-1',\nurl: 'https://cdn freecodecamp org/curriculum/drum/Chord_1 mp3'\n},\n{\nkeyCode: 87,\nkeyTrigger: 'W',\nid: 'Chord-2',\nurl: 'https://cdn freecodecamp org/curriculum/drum/Chord_2 mp3'\n},\n{\nkeyCode: 69,\nkeyTrigger: 'E',\nid: 'Chord-3',\nurl: 'https://cdn freecodecamp org/curriculum/drum/Chord_3 mp3'\n},\n{\nkeyCode: 65,\nkeyTrigger: 'A',\nid: 'Shaker',\nurl: 'https://cdn freecodecamp org/curriculum/drum/Give_us_a_light",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13818,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 6,
    "total_chunks": 11
  },
  {
    "id": "d7fc38f981160dd7ff7b37b8a31102a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
    "source_type": "git_repo",
    "title": "Drum Machine",
    "content": "'X', id: 'Kick', url: 'https://cdn freecodecamp org/curriculum/drum/RP4_KICK_1mp3' }, { keyCode: 67, keyTrigger: 'C', id: 'Closed-HH', url: 'https://cdn freecodecamp org/curriculum/drum/Cev_H2 mp3' } ]; const bankTwo = [ { keyCode: 81, keyTrigger: 'Q', id: 'Chord-1', url: 'https://cdn freecodecamp org/curriculum/drum/Chord_1 mp3' }, { keyCode: 87, keyTrigger: 'W', id: 'Chord-2', url: 'https://cdn freecodecamp org/curriculum/drum/Chord_2 mp3' }, { keyCode: 69, keyTrigger: 'E', id: 'Chord-3', url: 'https://cdn freecodecamp org/curriculum/drum/Chord_3 mp3' }, { keyCode: 65, keyTrigger: 'A', id: 'Shaker', url: 'https://cdn freecodecamp org/curriculum/drum/Give_us_a_lightmp3'\n},\n{\nkeyCode: 83,\nkeyTrigger: 'S',\nid: 'Open-HH',\nurl: 'https://cdn freecodecamp org/curriculum/drum/Dry_Ohh mp3'\n},\n{\nkeyCode: 68,\nkeyTrigger: 'D',\nid: 'Closed-HH',\nurl: 'https://cdn freecodecamp org/curriculum/drum/Bld_H1 mp3'\n},\n{\nkeyCode: 90,\nkeyTrigger: 'Z',\nid: 'Punchy-Kick',\nurl: 'https://cdn freecodecamp org/curriculum/drum/punchy_kick_1 mp3'\n},\n{\nkeyCode: 88,\nkeyTrigger: 'X',\nid: 'Side-Stick',\nurl: 'https://cdn freecodecamp org/curriculum/drum/side_stick_1 mp3'\n},\n{\nkeyCode: 67,\nkeyTrigger: 'C',\nid: 'Snare',\nurl: 'https://cdn freecodecamp org/curriculum/drum/Brk_Snr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13818,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 7,
    "total_chunks": 11
  },
  {
    "id": "9d805c5c104027fb230b8d6ad1daac42",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
    "source_type": "git_repo",
    "title": "Drum Machine",
    "content": "}, { keyCode: 65, keyTrigger: 'A', id: 'Shaker', url: 'https://cdn freecodecamp org/curriculum/drum/Give_us_a_lightmp3' }, { keyCode: 83, keyTrigger: 'S', id: 'Open-HH', url: 'https://cdn freecodecamp org/curriculum/drum/Dry_Ohh mp3' }, { keyCode: 68, keyTrigger: 'D', id: 'Closed-HH', url: 'https://cdn freecodecamp org/curriculum/drum/Bld_H1 mp3' }, { keyCode: 90, keyTrigger: 'Z', id: 'Punchy-Kick', url: 'https://cdn freecodecamp org/curriculum/drum/punchy_kick_1 mp3' }, { keyCode: 88, keyTrigger: 'X', id: 'Side-Stick', url: 'https://cdn freecodecamp org/curriculum/drum/side_stick_1 mp3' }, { keyCode: 67, keyTrigger: 'C', id: 'Snare', url: 'https://cdn freecodecamp org/curriculum/drum/Brk_Snrmp3'\n}\n];\nconst state = {\npower: true,\ndisplay: ' ',\ncurrentPadBank: bankOne,\ncurrentPadBankId: 'Heater Kit',\nsliderVal: 0 3\n};\nconst display = document getElementById('display');\nconst setDisplay = text => {\nstate display = text;\ndisplay innerText = text;\n};\nconst adjustVolume = e => {\nif (state power) {\nstate sliderVal = e target value;\nsetDisplay(Volume: ${Math round(e target value * 100)});\nsetTimeout(() => setDisplay(' '), 1000);\ndocument querySelectorAll(' clip') forEach(sound => {\nsound volume = state sliderVal;\n});\n}\n};\nconst activatePad = pad => {\npad classList add('active');\nsetTimeout(() => pad classList remove('active'), 100);\n};\nconst playSound = (id, name) => {\nif ( state power) return;\nconst sound = document getElementById(id);\nsound currentTime = 0;\nsound play();\nactivatePad(sound parentNode);\nsetDisplay(name);\n};\nconst renderPadBank = () => {\nconst padBank = document querySelector('#pad-bank');\npadBank innerHTML = '';\nstate currentPadBank",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13818,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 8,
    "total_chunks": 11
  },
  {
    "id": "f309f4f52c32b64b8dcc1d67bfeb6d5c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
    "source_type": "git_repo",
    "title": "Drum Machine",
    "content": "'), 1000); document querySelectorAll(' clip') forEach(sound => { sound volume = state sliderVal; }); } }; const activatePad = pad => { pad classList add('active'); setTimeout(() => pad classList remove('active'), 100); }; const playSound = (id, name) => { if ( state power) return; const sound = document getElementById(id); sound currentTime = 0; sound play(); activatePad(sound parentNode); setDisplay(name); }; const renderPadBank = () => { const padBank = document querySelector('#pad-bank'); padBank innerHTML = ''; state currentPadBankforEach(drum => {\nconst pad = document createElement('div');\npad classList add('drum-pad');\npad id = drum id;\npad innerText = drum keyTrigger;\nconst audio = document createElement('audio');\naudio classList add('clip');\naudio id = drum keyTrigger;\naudio src = drum url;\npad appendChild(audio);\npad addEventListener('click', () =>\nplaySound(drum keyTrigger, drum id replace(/-/g, ' '))\n);\ndocument addEventListener('keydown', e => {\nif (e key === drum keyTrigger toLowerCase())\nplaySound(drum keyTrigger, drum id replace(/-/g, ' '));\n});\npadBank appendChild(pad);\n});\n};\nconst powerControl = () => {\nstate power = state power;\ndocument getElementById('power-status') textContent = state power 'On'\n: 'Off';\nsetDisplay('');\nconst powerSlider = document querySelector(' power-control select inner');\npowerSlider style left = state power 'calc(100% - 18px)' : '0';\n};\nconst selectBank = () => {\nif ( state power) return;\nsetDisplay(' ');\nstate currentPadBank =\nstate currentPadBankId === 'Heater Kit' bankTwo : bankOne;\nstate currentPadBankId =\nstate currentPadBankId === 'Heater Kit' 'Smooth Piano Kit' : 'Heater Kit';\nrenderPadBank();\ndocument getElementById('current-bank') textContent =\nstate currentPadBankId === 'Heater Kit' 'Heater Kit' : 'Smooth Piano Kit';\nconst bankControl = document querySelector(' bank-control select inner');\nbankControl style left =\nstate currentPadBankId === 'Heater Kit' 'calc(100% - 18px)' : '0';\n};\ndocument querySelector(' power-control') addEventListener('click', powerControl);\ndocument querySelector(' bank-control')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13818,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 9,
    "total_chunks": 11
  },
  {
    "id": "1cff64d24d465d32262f2319da2d102d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
    "source_type": "git_repo",
    "title": "Drum Machine",
    "content": "power) return; setDisplay(' '); state currentPadBank = state currentPadBankId === 'Heater Kit' bankTwo : bankOne; state currentPadBankId = state currentPadBankId === 'Heater Kit' 'Smooth Piano Kit' : 'Heater Kit'; renderPadBank(); document getElementById('current-bank') textContent = state currentPadBankId === 'Heater Kit' 'Heater Kit' : 'Smooth Piano Kit'; const bankControl = document querySelector(' bank-control select inner'); bankControl style left = state currentPadBankId === 'Heater Kit' 'calc(100% - 18px)' : '0'; }; document querySelector(' power-control') addEventListener('click', powerControl); document querySelector(' bank-control')addEventListener('click', selectBank);\ndocument querySelector(' volume-slider input') addEventListener('input', adjustVolume);\nrenderPadBank();\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13818,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-drum-machine\\6762ec275cef87635acc4fe3.md",
      "source_type": "git_repo"
    },
    "token_count": 189,
    "chunk_index": 10,
    "total_chunks": 11
  },
  {
    "id": "a29f8360fff2e2fb728ba2ec7e8a0125",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-factorial-calculator\\66c07238b01053abaf812065.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c07238b01053abaf812065\ntitle: Build a Factorial Calculator\nchallengeType: 26\ndashedName: build-a-factorial-calculator\n--description--\nA factorial is the product of an integer and all the integers below it For example, the factorial of 5 is 5 * 4 * 3 * 2 * 1 = 120 In this lab, you will create a factorial calculator that takes a number from the user and calculates the factorial of that number Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should declare a variable num and assign it a number of your choice The assigned number should be between 1 and 20 inclusive Create a function named factorialCalculator that takes a number as an argument and returns the factorial of that number Inside the function, declare a result variable and assign it the value of 1 Using a loop, loop through all numbers from 1 to the input number(inclusive) and for each number, multiply the result variable by the current number and assign the result to the result variable You can choose to use  either a for loop, while loop or do while loop here You should call the factorialCalculator function with num as the argument and assign the result to the variable factorial You should store the final output in the format Factorial of [num] is [factorial] and assign it to the variable resultMsg You should output the value of resultMsg to the console --hints--\nYou should have a num variable js\nassert isDefined(num);\nYou should assign a value to the num variable\njs\nassert isNotNull(num);\nThe value of num should be between 1 and 20 js\nassert isAtLeast(num, 1);\nassert isAtMost(num, 20);\nThe num value should be a number js\nassert isNumber(num);\nYou should have a function named factorialCalculator js\nassert isFunction(factorialCalculator);\nThe factorialCalculator function should take a number as an argument js\nassert match(factorialCalculator toString(), /\\s*factorialCalculator\\(\\s*\\w+\\s*\\)/);\nThe factorial of 5 should return 120 js\nassert strictEqual(factorialCalculator(5), 120);\nThe factorial of 7 should return 5040 js\nassert strictEqual(factorialCalculator(7), 5040);\nYou should call your factorialCalculator function with the num variable as the argument",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3736,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-factorial-calculator\\66c07238b01053abaf812065.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0586bfad2f27fa4eb23897eef4b9d6ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-factorial-calculator\\66c07238b01053abaf812065.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert isAtLeast(num, 1); assert isAtMost(num, 20); The num value should be a number js assert isNumber(num); You should have a function named factorialCalculator js assert isFunction(factorialCalculator); The factorialCalculator function should take a number as an argument js assert match(factorialCalculator toString(), /\\s*factorialCalculator\\(\\s*\\w+\\s*\\)/); The factorial of 5 should return 120 js assert strictEqual(factorialCalculator(5), 120); The factorial of 7 should return 5040 js assert strictEqual(factorialCalculator(7), 5040); You should call your factorialCalculator function with the num variable as the argumentjs\nassert match(__helpers removeJSComments(code), /factorialCalculator\\(\\s*num\\s*\\)\\s*; \\s $/m);\nYou should define a factorial variable and assign the result of the factorialCalculator function to it js\nassert isDefined(factorial);\nassert strictEqual(factorial, factorialCalculator(num));\nYour factorialCalculator should produce the correct result js\nassert strictEqual(factorialCalculator(6), 720);\nassert strictEqual(factorialCalculator(9), 362880);\nassert strictEqual(factorialCalculator(11), 39916800);\nYour resultMsg should contain a string in a format Factorial of [num] is [factorial] js\nassert strictEqual(resultMsg, `Factorial of ${num} is ${factorialCalculator(num)}`);\nassert notMatch(__helpers removeJSComments(code), /Factorial of \\d{1,2} is \\d+/);\nYou should output the value of resultMsg to the console js\nassert match(__helpers removeJSComments(code), /console\\ log\\(resultMsg\\)\\s*; \\s $/m);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nconst num = 5;\nfunction factorialCalculator(n) {\nlet result = 1;\nfor (let i = 2; i <= n; i++) {\nresult *= i;\n}\nreturn result;\n}\nconst factorial = factorialCalculator(num);\nconst resultMsg = Factorial of ${num} is ${factorial};\nconsole log(resultMsg);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3736,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-factorial-calculator\\66c07238b01053abaf812065.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "bc4a39e36f016efdbcb777a38c33d608",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-hub\\66ebd4ae2812430bb883c787.md",
    "source_type": "git_repo",
    "title": "Event Hub",
    "content": "id: 66ebd4ae2812430bb883c787\ntitle: Build an Event Hub\nchallengeType: 25\ndashedName: lab-event-hub\ndemoType: onClick\n--description--\nIn this lab you will utilize the semantic HTML elements to create the structure of a web page You'll add content and images to make it look like a real event hub Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a header element Inside the header element, you should have an h1 element that contains the text Event Hub, and a nav element Inside the nav element, you should have an unordered list of two items containing links to different sections of the page The first item should have the text Upcoming Events, and the second item should have the text Past Events Each link should be represented by an a element with an href attribute that links to the corresponding section of the page, #upcoming-events and #past-events respectively You should have a main element that contains the different sections of the page Inside the main element, you should have two section elements The first section element should have an id attribute with the value upcoming-events\nInside the #upcoming-events section, you should have:\nAn h2 element with the text Upcoming Events Two article elements Each article should represent an event, and it should have :\nAn h3 element for the event title A p element for the event description You can add a date at the bottom if you like The second section element should have an id attribute with the value past-events Inside the #past-events section, you should have:\nAn h2 element with the text Past Events Two article elements Each article element should represent a past event, and it should have:\nAn h3 element for the event title,\nA p element for the event description You can add a date at the bottom if you like An image element with the src attribute pointing to an image file and the alt attribute with a description of the image Note: You can use any text for the event descriptions and dates You can use the following image URLs for the images if you like:\nhttps://cdn freecodecamp org/curriculum/labs/past-event1 jpg https://cdn freecodecamp org/curriculum/labs/past-event2 jpg --hints--\nYou should have a header element js\nassert isNotNull(document querySelector(\"header\"));\nYour header element should come after the opening body tag",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11680,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-hub\\66ebd4ae2812430bb883c787.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "d0b56e6b857434f5aed33540fd1f78c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-hub\\66ebd4ae2812430bb883c787.md",
    "source_type": "git_repo",
    "title": "Event Hub",
    "content": "An image element with the src attribute pointing to an image file and the alt attribute with a description of the image Note: You can use any text for the event descriptions and dates You can use the following image URLs for the images if you like: https://cdn freecodecamp org/curriculum/labs/past-event1 jpg https://cdn freecodecamp org/curriculum/labs/past-event2 jpg --hints-- You should have a header element js assert isNotNull(document querySelector(\"header\")); Your header element should come after the opening body tagjs\nassert equal(document querySelector(\"body\") firstElementChild tagName, \"HEADER\");\nInside the header element, you should have an h1 element that contains the text Event Hub js\nconst h1Element = document querySelector('header h1');\nassert strictEqual(h1Element innerText trim(), \"Event Hub\");\nInside the header element, after the h1 element, you should have a nav element js\nassert isNotNull(document querySelector(\"header>h1+nav\"));\nYour nav element should contain an unordered list of two items ```js\nconst liElements = document querySelectorAll('header nav>ul>li');\nassert isNotNull('header nav>ul');\nassert strictEqual(liElements length, 2);\n```\nThe first item in the unordered list should be a link js\nconst firstLink = document querySelectorAll('header nav ul li a')[0];\nassert exists(firstLink);\nThe second item in the unordered list should be a link js\nconst secondLink = document querySelectorAll('header nav ul li a')[1];\nassert exists(secondLink);\nThe text of the first item in the unordered list should be Upcoming Events js\nconst firstLink = document querySelectorAll('header nav>ul>li>a')[0];\nassert strictEqual(firstLink innerText trim(), \"Upcoming Events\");\nThe first item in the unordered list should have the href set to #upcoming-events js\nconst anchorElement = document querySelectorAll(\"header nav>ul>li>a\")[0];\nconst hrefAttribute = anchorElement getAttribute(\"href\");\nassert strictEqual(hrefAttribute, \"#upcoming-events\");\nThe text of the second item in the unordered list should be Past Events js\nconst secondLink = document querySelectorAll('header nav>ul>li>a')[1];\nassert strictEqual(secondLink innerText trim(), \"Past Events\");\nThe second item in the unordered list should have the href set to #past-events",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11680,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-hub\\66ebd4ae2812430bb883c787.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "ba1cb4b7c7de4793e9399b330328df9c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-hub\\66ebd4ae2812430bb883c787.md",
    "source_type": "git_repo",
    "title": "Event Hub",
    "content": "assert strictEqual(firstLink innerText trim(), \"Upcoming Events\"); The first item in the unordered list should have the href set to #upcoming-events js const anchorElement = document querySelectorAll(\"header nav>ul>li>a\")[0]; const hrefAttribute = anchorElement getAttribute(\"href\"); assert strictEqual(hrefAttribute, \"#upcoming-events\"); The text of the second item in the unordered list should be Past Events js const secondLink = document querySelectorAll('header nav>ul>li>a')[1]; assert strictEqual(secondLink innerText trim(), \"Past Events\"); The second item in the unordered list should have the href set to #past-eventsjs\nconst anchorElement = document querySelectorAll(\"header nav>ul>li>a\")[1];\nconst hrefAttribute = anchorElement getAttribute(\"href\");\nassert strictEqual(hrefAttribute, \"#past-events\");\nYou should have a main element after the header element closing tag js\nconst mainElement = document querySelector(\"body>header+main\");\nassert isNotNull(mainElement);\nInside the main element, you should have two section elements js\nconst sectionElements = document querySelectorAll('body>header+main>section');\nassert strictEqual(sectionElements length, 2);\nYour first section element should have an id attribute with the value upcoming-events js\nconst firstSection = document querySelectorAll('body>header+main>section')[0];\nconst idAttribute = firstSection getAttribute(\"id\");\nassert strictEqual(idAttribute, \"upcoming-events\");\nYour second section element should have an id attribute with the value past-events js\nconst secondSection = document querySelectorAll('body>header+main>section')[1];\nconst idAttribute = secondSection getAttribute(\"id\");\nassert strictEqual(idAttribute, \"past-events\");\nInside the #upcoming-events section, you should have an h2 element with the text Upcoming Events js\nconst h2Element = document querySelector('#upcoming-events h2');\nassert strictEqual(h2Element innerText trim(), \"Upcoming Events\");\nInside the #upcoming-events section, you should have two article elements below the h2 element js\nconst articleElements = document querySelectorAll('#upcoming-events h2 ~ article');\nassert strictEqual(articleElements length, 2);\nBoth of the article elements inside the #upcoming-events section should have an h3 element for the event title js\nconst h3Elements = document querySelectorAll('#upcoming-events article h3');\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11680,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-hub\\66ebd4ae2812430bb883c787.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "5c8d5cf22a9629cb543c3f2e56b8a26e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-hub\\66ebd4ae2812430bb883c787.md",
    "source_type": "git_repo",
    "title": "Event Hub",
    "content": "have an h2 element with the text Upcoming Events js const h2Element = document querySelector('#upcoming-events h2'); assert strictEqual(h2Element innerText trim(), \"Upcoming Events\"); Inside the #upcoming-events section, you should have two article elements below the h2 element js const articleElements = document querySelectorAll('#upcoming-events h2 ~ article'); assert strictEqual(articleElements length, 2); Both of the article elements inside the #upcoming-events section should have an h3 element for the event title js const h3Elements = document querySelectorAll('#upcoming-events article h3'); assertstrictEqual(h3Elements length, 2);\nBoth of the article elements inside the #upcoming-events section should have a paragraph element for the event description js\nconst articles = document querySelectorAll('#upcoming-events article');\nassert isNotEmpty(articles);\narticles forEach(article => {\nassert isAtLeast(article querySelectorAll('h3 ~ p') length, 1);\n});\nInside the #past-events section, you should have an h2 element with the text Past Events js\nconst h2Element = document querySelector('#past-events h2');\nassert strictEqual(h2Element innerText trim(), \"Past Events\");\nInside the #past-events section, you should have two article elements below the h2 element js\nconst articleElements = document querySelectorAll('#past-events h2 ~ article');\nassert strictEqual(articleElements length, 2);\nBoth of the article elements inside the #past-events section should have an h3 element for the event title js\nconst h3Elements = document querySelectorAll('#past-events article h3');\nassert strictEqual(h3Elements length, 2);\nBoth of the article elements inside the #past-events section should have a paragraph element for the event description js\nconst articles = document querySelectorAll('#past-events article');\nassert isNotEmpty(articles);\narticles forEach(article => {\nassert isAtLeast(article querySelectorAll('h3 ~ p') length, 1);\n});\nBoth of the article elements inside the #past-events section should have an image element js\nconst imgElements = document querySelectorAll('#past-events article img');\nassert strictEqual(imgElements length, 2);\nBoth of the image elements inside the #past-events section should have the src attribute pointing to an image file ```js\nconst imgElements = document querySelectorAll('#past-events article img');\nassert strictEqual(imgElements",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11680,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-hub\\66ebd4ae2812430bb883c787.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "db9c1319658328d703d92b2966bf1428",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-hub\\66ebd4ae2812430bb883c787.md",
    "source_type": "git_repo",
    "title": "Event Hub",
    "content": "js const articles = document querySelectorAll('#past-events article'); assert isNotEmpty(articles); articles forEach(article => { assert isAtLeast(article querySelectorAll('h3 ~ p') length, 1); }); Both of the article elements inside the #past-events section should have an image element js const imgElements = document querySelectorAll('#past-events article img'); assert strictEqual(imgElements length, 2); Both of the image elements inside the #past-events section should have the src attribute pointing to an image file ```js const imgElements = document querySelectorAll('#past-events article img'); assert strictEqual(imgElementslength, 2);\nfor (let img of imgElements) {\nassert exists(img getAttribute(\"src\"));\n}\n```\nBoth of the image elements inside the #past-events section should have the alt attribute with a description of the image ```js\nconst imgElements = document querySelectorAll('#past-events article img');\nassert strictEqual(imgElements length, 2);\nfor (let img of imgElements) {\nassert exists(img getAttribute(\"alt\"));\n}\n```\nEach h3 element should have the event title js\nconst eventTitles = document querySelectorAll('h3');\nassert isNotEmpty(eventTitles);\neventTitles forEach((eventTitle => assert isNotEmpty(eventTitle innerText trim())));\nEach p element should have the event description js\nconst eventDescriptions = document querySelectorAll('p');\nassert isNotEmpty(eventDescriptions);\neventDescriptions forEach((eventDescription => assert isNotEmpty(eventDescription innerText trim())));\n--seed--\n--seed-contents--\n```html\nEvent Hub\n```\n--solutions--\n```html\nEvent Hub\nEvent Hub\nUpcoming Events\nPast Events\nUpcoming Events\nAI & Machine Learning Conference 2024\nJoin us for a deep dive into the latest advancements in artificial intelligence and machine learning Industry leaders will share insights and case studies on how AI is transforming various sectors Date: August 10, 2024\nWeb Development Bootcamp\nA hands-on workshop designed for developers looking to enhance their skills in modern web technologies including React, Node js, and GraphQL Perfect for both beginners and experienced developers Date: September 5, 2024\nPast Events\nCybersecurity Summit 2024\nAn event focusing on the latest trends and threats in cybersecurity Experts discussed strategies for protecting data and ensuring privacy in an increasingly digital world Date: June 15, 2024\nBlockchain Expo 2024\nA comprehensive event covering the future of blockchain technology",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11680,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-hub\\66ebd4ae2812430bb883c787.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "43542a66e92558a601aac1cfb4ca41eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-hub\\66ebd4ae2812430bb883c787.md",
    "source_type": "git_repo",
    "title": "Event Hub",
    "content": "workshop designed for developers looking to enhance their skills in modern web technologies including React, Node js, and GraphQL Perfect for both beginners and experienced developers Date: September 5, 2024 Past Events Cybersecurity Summit 2024 An event focusing on the latest trends and threats in cybersecurity Experts discussed strategies for protecting data and ensuring privacy in an increasingly digital world Date: June 15, 2024 Blockchain Expo 2024 A comprehensive event covering the future of blockchain technologyTopics included decentralized finance (DeFi), smart contracts, and the impact of blockchain on various industries Date: July 20, 2024\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11680,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-hub\\66ebd4ae2812430bb883c787.md",
      "source_type": "git_repo"
    },
    "token_count": 124,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "92eaa63d951ed75a8e50728b60fd7458",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-favorite-icon-toggler\\66bf6bacf178eac7b96d4f5e.md",
    "source_type": "git_repo",
    "title": "Favorite Icon Toggler",
    "content": "id: 66bf6bacf178eac7b96d4f5e\ntitle: Build a Favorite Icon Toggler\nchallengeType: 25\ndashedName: build-a-favorite-icon-toggler\ndemoType: onClick\n--description--\nIn this lab you will use JavaScript click events to toggle the appearance of a favorite icon When the heart icon is clicked, the appearance of the heart changes from empty to filled, and vice versa Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have an unordered list with three items The unordered list should have the class item-list The three list items should contain the item name followed by a button element with the class favorite-icon The button element should contain the code &#9825; initially to represent an empty heart When a button element containing a heart is clicked, you should add a class named filled to the clicked button if it's not already present, and remove it, if it is You should have a class selector that targets the filled class and sets some CSS properties When a button element containing a heart is clicked, the heart symbol should toggle between &#9825; (empty heart) and &#10084; (filled heart), depending on its current state Note: Be sure to link your JavaScript file in your HTML (Ex <script src=\"script js\"></script>)\n--hints--\nYou should have an unordered list js\nassert exists(document querySelector('ul'));\nYour unordered list should have 3 items js\nassert lengthOf(document querySelectorAll('ul li'), 3);\nYour unordered list should have the class item-list js\nassert exists(document querySelector('ul item-list'));\nYour individual list items should contain the item name js\nassert exists(document querySelector('ul li') textContent);\nYour individual list item should contain a button element with the class favorite-icon js\nassert exists(document querySelector('ul li button favorite-icon'));\nInitially, the button elements should contain the code &#9825; to represent an empty heart ```js\nconst inputs = document querySelectorAll('ul li button favorite-icon');\nassert isNotEmpty(inputs);\nfor (let input of inputs) {\nassert strictEqual(input innerHTML charCodeAt(0), 9825);\n}\n```\nYou should have a filled selector that sets some CSS properties js\nconst filled = new __helpers CSSHelp(document) getStyle(' filled');\nassert exists(filled);\nassert isNotEmpty([",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5801,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-favorite-icon-toggler\\66bf6bacf178eac7b96d4f5e.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "26d8faf9ab0f222993917266ce7e364a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-favorite-icon-toggler\\66bf6bacf178eac7b96d4f5e.md",
    "source_type": "git_repo",
    "title": "Favorite Icon Toggler",
    "content": "a button element with the class favorite-icon js assert exists(document querySelector('ul li button favorite-icon')); Initially, the button elements should contain the code &#9825; to represent an empty heart ```js const inputs = document querySelectorAll('ul li button favorite-icon'); assert isNotEmpty(inputs); for (let input of inputs) { assert strictEqual(input innerHTML charCodeAt(0), 9825); } ``` You should have a filled selector that sets some CSS properties js const filled = new __helpers CSSHelp(document) getStyle(' filled'); assert exists(filled); assert isNotEmpty([filled]);\nWhen the button element is clicked, and it contains the class filled, you should remove the class filled from the button element and change the innerHTML of the button element to &#9825; ```js\nconst buttonElements = document querySelectorAll(' favorite-icon');\nassert isNotEmpty(buttonElements);\nbuttonElements forEach(button => button classList add('filled'));\nbuttonElements forEach(button => {\nbutton dispatchEvent(new Event('click', { bubbles: true }));\nassert isFalse(button classList contains('filled'));\nassert equal(button innerHTML charCodeAt(0), 9825);\n});\n```\nWhen the button element is clicked, and it doesn't contain the class filled, you should add the class filled to the button element and change the innerHTML of the button element to &#10084; ```js\nconst buttonElements = document querySelectorAll(' favorite-icon');\nassert isNotEmpty(buttonElements);\nbuttonElements forEach(button => button classList remove('filled'));\nbuttonElements forEach(button => {\nbutton dispatchEvent(new Event('click', { bubbles: true }));\nassert isTrue(button classList contains('filled'));\nassert equal(button innerHTML charCodeAt(0), 10084);\n});\n```\n--seed--\n--seed-contents--\n```html\nFavorite Icon Toggler\n```\n```css\n```\n```js\n```\n--solutions--\n```html\nFavorite Icon Toggle\nArt Supplies\n120 gm paper\n♡\nWatercolor set\n♡\nLead pencil 6B\n♡\n```\n```css\nbody {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nmargin: 0;\nfont-family: Arial, sans-serif;\n}\nh1 {\nmargin-bottom: 20px;\n} item-list {\nlist-style-type: none;\npadding: 0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5801,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-favorite-icon-toggler\\66bf6bacf178eac7b96d4f5e.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "4328689d6b056069dc57018b0f868ee6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-favorite-icon-toggler\\66bf6bacf178eac7b96d4f5e.md",
    "source_type": "git_repo",
    "title": "Favorite Icon Toggler",
    "content": "{ bubbles: true })); assert isTrue(button classList contains('filled')); assert equal(button innerHTML charCodeAt(0), 10084); }); ``` --seed-- --seed-contents-- ```html Favorite Icon Toggler ``` ```css ``` ```js ``` --solutions-- ```html Favorite Icon Toggle Art Supplies 120 gm paper ♡ Watercolor set ♡ Lead pencil 6B ♡ ``` ```css body { display: flex; flex-direction: column; justify-content: center; align-items: center; height: 100vh; margin: 0; font-family: Arial, sans-serif; } h1 { margin-bottom: 20px; } item-list { list-style-type: none; padding: 0; }item-list li {\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 10px;\nborder-bottom: 1px solid #ddd;\nwidth: 200px;\n} favorite-icon {\nfont-size: 1 25rem;\nbackground-color: transparent;\nborder: none;\ncursor: pointer;\n} filled {\ncolor: #d22b2b;\n}\n```\n```js\ndocument addEventListener(\"DOMContentLoaded\", () => {\nconst favoriteIcons = document querySelectorAll(\" favorite-icon\");\nfavoriteIcons forEach(icon => {\nicon addEventListener(\"click\", () => {\nif (icon classList contains(\"filled\")) {\nicon classList remove(\"filled\");\nicon innerHTML = \"♡\"; // Empty heart\n} else {\nicon classList add(\"filled\");\nicon innerHTML = \"❤\"; // Filled black heart\n}\n});\n});\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5801,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-favorite-icon-toggler\\66bf6bacf178eac7b96d4f5e.md",
      "source_type": "git_repo"
    },
    "token_count": 331,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "6b375c0844cdceea3defab43d2254013",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-first-element-finder\\a6e40f1041b06c996f7b2406.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a6e40f1041b06c996f7b2406\ntitle: Build a First Element Finder\nchallengeType: 26\ndashedName: build-a-first-element-finder\n--description--\nIn this lab, you will create a function that looks through an array and returns the first element that passes a test function (also known as a \"truth test\") The function would iterate through the array and test each element using the provided test function At the end, it would return the first element where the test function returns true Example:\njs\nfindElement([1, 3, 5, 8], num => num % 2 === 0) // returns 8\nfindElement([1, 3, 5], num => num % 2 === 0)    // returns undefined\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a function named findElement that accepts an array and a function as arguments The function should return the first item in the array that passes a truth test This means that, calling the passed in function func, given an element x, the truth test is passed if func(x) is true If no element passes the test, the function should return undefined --hints--\nYou should have a findElement function js\nassert isFunction(findElement);\nfindElement([1, 3, 5, 8, 9, 10], function(num) { return num % 2 === 0; }) should return 8 js\nassert strictEqual(\nfindElement([1, 3, 5, 8, 9, 10], function (num) {\nreturn num % 2 === 0;\n}),\n8\n);\nfindElement([1, 3, 5, 9], function(num) { return num % 2 === 0; }) should return undefined js\nassert strictEqual(\nfindElement([1, 3, 5, 9], function (num) {\nreturn num % 2 === 0;\n}),\nundefined\n);\nfindElement([1, 2, 3, 4], function(num) { return num > 2; }) should return 3 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2977,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-first-element-finder\\a6e40f1041b06c996f7b2406.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "658c0d2df3097862326e7cc30680c678",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-first-element-finder\\a6e40f1041b06c996f7b2406.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "}) should return 8 js assert strictEqual( findElement([1, 3, 5, 8, 9, 10], function (num) { return num % 2 === 0; }), 8 ); findElement([1, 3, 5, 9], function(num) { return num % 2 === 0; }) should return undefined js assert strictEqual( findElement([1, 3, 5, 9], function (num) { return num % 2 === 0; }), undefined ); findElement([1, 2, 3, 4], function(num) { return num > 2; }) should return 3 js assertstrictEqual(\nfindElement([1, 2, 3, 4], function (num) {\nreturn num > 2;\n}),\n3\n);\nfindElement([\"hello\", \"world\", \"javascript\"], function(str) { return str length > 5; }) should return \"javascript\" js\nassert strictEqual(\nfindElement([\"hello\", \"world\", \"javascript\"], function (str) {\nreturn str length > 5;\n}),\n\"javascript\"\n);\nfindElement([\"cat\", \"dog\", \"bird\"], function(str) { return str length > 10; }) should return undefined js\nassert strictEqual(\nfindElement([\"cat\", \"dog\", \"bird\"], function (str) {\nreturn str length > 10;\n}),\nundefined\n);\nfindElement([2, 4, 6, 8], function(num) { return num % 2 === 0; }) should return 2 js\nassert strictEqual(\nfindElement([2, 4, 6, 8], function (num) {\nreturn num % 2 === 0;\n}),\n2\n);\nfindElement([], function(num) { return num > 0; }) should return undefined js\nassert strictEqual(\nfindElement([], function (num) {\nreturn num > 0;\n}),\nundefined\n);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nfunction findElement(arr, func) {\nreturn arr filter(func)[0];\n}\nfindElement([1, 2, 3, 4], num => num % 2 === 0);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2977,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-first-element-finder\\a6e40f1041b06c996f7b2406.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "54a0737976ee21d0d2d8d13abcb236ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fortune-teller\\66c06d618d075c7f7f1b890a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c06d618d075c7f7f1b890a\ntitle: Build a Fortune Teller\nchallengeType: 26\ndashedName: build-a-fortune-teller\n--description--\nIn this lab, you will define five fortunes and randomly select one of them to display the fortune to the user Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should initialize the five variables fortune1, fortune2, fortune3, fortune4, and fortune5 with a string value of your choice You can use the below options if you like:\n\"Your cat will look very cuddly today \"\n\"The weather will be nice tomorrow \"\n\"Be cautious of your new neighbors \"\n\"You will find a new hobby soon \"\n\"It would be wise to avoid the color red today \"\nYou should select a random number between 1 and 5, inclusive, and assign it to the variable randomNumber You should create a selectedFortune variable and assign the appropriate fortune based on these rules:\nIf randomNumber is 1, assign the value of fortune1 to selectedFortune If randomNumber is 2, assign the value of fortune2 to selectedFortune If randomNumber is 3, assign the value of fortune3 to selectedFortune If randomNumber is 4, assign the value of fortune4 to selectedFortune If randomNumber is 5, assign the value of fortune5 to selectedFortune You should log the selectedFortune to the console --hints--\nYou should initialize fortune1 with a string value js\nassert isNotNull(fortune1);\nassert isString(fortune1);\nYou should initialize fortune2 with a string value js\nassert isNotNull(fortune2);\nassert isString(fortune2);\nYou should initialize fortune3 with a string value js\nassert isNotNull(fortune3);\nassert isString(fortune3);\nYou should initialize fortune4 with a string value js\nassert isNotNull(fortune4);\nassert isString(fortune4);\nYou should initialize fortune5 with a string value js\nassert isNotNull(fortune5);\nassert isString(fortune5);\nYou should use the Math random() method to generate a random number js\nassert match(__helpers removeJSComments(code), /Math\\ random\\(\\)/);\nYou should generate a random number between 1 and 5, inclusive, and assign it to the variable randomNumber js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4128,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fortune-teller\\66c06d618d075c7f7f1b890a.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c0f837dbd2a8b5333618ecb01e39461e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fortune-teller\\66c06d618d075c7f7f1b890a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should initialize fortune3 with a string value js assert isNotNull(fortune3); assert isString(fortune3); You should initialize fortune4 with a string value js assert isNotNull(fortune4); assert isString(fortune4); You should initialize fortune5 with a string value js assert isNotNull(fortune5); assert isString(fortune5); You should use the Math random() method to generate a random number js assert match(__helpers removeJSComments(code), /Math\\ random\\(\\)/); You should generate a random number between 1 and 5, inclusive, and assign it to the variable randomNumber js assertisNotNull(randomNumber);\nassert include([1,2,3,4,5], randomNumber);\nYou should have a selectedFortune variable that is assigned a value based on the value of randomNumber js\nassert isNotNull(selectedFortune);\nThe randomNumber should correspond to its fortune For example, if randomNumber is 1, the selectedFortune should be equal to fortune1 and so on ```js\nconst condition1 = randomNumber === 1 && selectedFortune === fortune1;\nconst condition2 = randomNumber === 2 && selectedFortune === fortune2;\nconst condition3 = randomNumber === 3 && selectedFortune === fortune3;\nconst condition4 = randomNumber === 4 && selectedFortune === fortune4;\nconst condition5 = randomNumber === 5 && selectedFortune === fortune5;\nassert isTrue(condition1 || condition2 || condition3 || condition4 || condition5);\n```\nYou should output the selectedFortune to the console js\nassert match(__helpers removeJSComments(code), /console\\s*\\ \\s*log\\s*\\(\\s*selectedFortune\\s*\\)\\s*; /);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nconst fortune1 = \"Your cat will look very cuddly today \";\nconst fortune2 = \"The weather will be nice tomorrow \";\nconst fortune3 = \"Be cautious of your new neighbors \";\nconst fortune4 = \"You will find a new hobby soon \";\nconst fortune5 = \"It would be wise to avoid the color red today \";\nlet randomNumber = Math floor(Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4128,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fortune-teller\\66c06d618d075c7f7f1b890a.md",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "9fdc777acc816a3e0f0a5bf712cfed09",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fortune-teller\\66c06d618d075c7f7f1b890a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the console js assert match(__helpers removeJSComments(code), /console\\s*\\ \\s*log\\s*\\(\\s*selectedFortune\\s*\\)\\s*; /); --seed-- --seed-contents-- ```js ``` --solutions-- ```js const fortune1 = \"Your cat will look very cuddly today \"; const fortune2 = \"The weather will be nice tomorrow \"; const fortune3 = \"Be cautious of your new neighbors \"; const fortune4 = \"You will find a new hobby soon \"; const fortune5 = \"It would be wise to avoid the color red today \"; let randomNumber = Math floor(Mathrandom() * 5) + 1;\nlet selectedFortune;\nif (randomNumber === 1) {\nselectedFortune = fortune1;\n} else if (randomNumber === 2) {\nselectedFortune = fortune2;\n} else if (randomNumber === 3) {\nselectedFortune = fortune3;\n} else if (randomNumber === 4) {\nselectedFortune = fortune4;\n} else {\nselectedFortune = fortune5;\n}\nconsole log(selectedFortune);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4128,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fortune-teller\\66c06d618d075c7f7f1b890a.md",
      "source_type": "git_repo"
    },
    "token_count": 228,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "4119965ddc87381aa6266c7afcc119e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
    "source_type": "git_repo",
    "title": "Event RSVP",
    "content": "id: 67d936de7055982b02baf186\ntitle: Build an Event RSVP\nchallengeType: 25\ndashedName: build-an-event-rsvp\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create a form with fields for name, email, number of attendees, dietary preferences, and an option to indicate if you are bringing additional guests You should have a text input field where you would enter your name (mandatory) You should have an email input field where you would enter your email address (mandatory) The form should validate the format to ensure it is a proper email You should have a number input field where you would enter the number of attendees in the form (mandatory), and the number should not be less than one You should have a text input field where you would enter your dietary preferences, and this information should be optional You should be able to check or uncheck a checkbox to indicate whether you are bringing additional guests You should have a button which submits the form, and the form should not cause the page to reload upon submission You should see a confirmation message displayed below the form after submitting, followed by the details provided (name, email, number of attendees, dietary preferences, and optional additional guests) Here is an example message after submitting the form:\nmarkdown\nRSVP Submitted Name: John Doe\nEmail: example@example com\nNumber of attendees: 2\nDietary preferences: None\nBringing additional guests: Yes\n--hints--\nYou should have one form element to hold all your form content js\nconst forms = document querySelectorAll('form');\nassert equal(forms length, 1);\nYou should have two input elements of type text js\nconst inputs = document querySelectorAll('form input[type=\"text\"]');\nassert equal(inputs length, 2);\nYou should have one input element of type email js\ntry {\nconst inputs = document querySelectorAll('form input[type=\"email\"]');\nassert equal(inputs length, 1);\n} catch (e) {\nconsole log(e);\nthrow e;\n}\nYou should have one input element of type number js\ntry {\nconst inputs = document querySelectorAll('form input[type=\"number\"]');\nassert equal(inputs length, 1);\n} catch (e) {\nconsole log(e);\nthrow e;\n}\nYou should have one input element of type checkbox js\ntry {\nconst inputs = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23299,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 12
  },
  {
    "id": "8d0b1f5580d1c946708657b75aba9ec1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
    "source_type": "git_repo",
    "title": "Event RSVP",
    "content": "have one input element of type email js try { const inputs = document querySelectorAll('form input[type=\"email\"]'); assert equal(inputs length, 1); } catch (e) { console log(e); throw e; } You should have one input element of type number js try { const inputs = document querySelectorAll('form input[type=\"number\"]'); assert equal(inputs length, 1); } catch (e) { console log(e); throw e; } You should have one input element of type checkbox js try { const inputs = documentquerySelectorAll('form input[type=\"checkbox\"]');\nassert equal(inputs length, 1);\n} catch (e) {\nconsole log(e);\nthrow e;\n}\nOne input[type=\"text\"] element should be required js\ntry {\nconst input = document querySelectorAll('form input[type=\"text\"][required]');\nassert equal(input length, 1);\n} catch (e) {\nconsole log(e);\nthrow e;\n}\nThe input[type=\"email\"] element should be required js\ntry {\nconst input = document querySelector('form input[type=\"email\"][required]');\nassert exists(input);\n} catch (e) {\nconsole log(e);\nthrow e;\n}\nThe input[type=\"number\"] element should be required js\ntry {\nconst input = document querySelector('form input[type=\"number\"][required]');\nassert exists(input);\n} catch (e) {\nconsole log(e);\nthrow e;\n}\nChanging the value of the input[type=\"text\"] elements should update component state ```js\nasync () => {\ntry {\nconst abuseState = __helpers spyOn(React, 'useState');\nconst script = [ document querySelectorAll('script')] find(s => s dataset src === 'index jsx') innerText replace('_React useState', 'abuseState');\nconst exports = {};\nconst a = eval(script);\nconst s = await __helpers prepTestComponent(exports EventRSVPForm);\nconst inp = s querySelector('input[type=\"text\"]');\nawait React act(async () => {\ninp value = 'John Doe';\nconst ev = new InputEvent('change', { bubbles: true, cancelable: false });\ninp[Object keys(inp) find(k => k startsWith('__reactProps'))] onChange({ ev,\ntarget: inp\n});\n});\n// For all state in `abuseState returns`, there will be a multiple of two calls - one before the change, and one after const alteredStates = abuseState returns;\nconst initialStates = alteredStates splice(\n0,\nabuseState returns",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23299,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 1,
    "total_chunks": 12
  },
  {
    "id": "672546481648f7a2bf3c3924b397412b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
    "source_type": "git_repo",
    "title": "Event RSVP",
    "content": "EventRSVPForm); const inp = s querySelector('input[type=\"text\"]'); await React act(async () => { inp value = 'John Doe'; const ev = new InputEvent('change', { bubbles: true, cancelable: false }); inp[Object keys(inp) find(k => k startsWith('__reactProps'))] onChange({ ev, target: inp }); }); // For all state in `abuseState returns`, there will be a multiple of two calls - one before the change, and one after const alteredStates = abuseState returns; const initialStates = alteredStates splice( 0, abuseState returnslength / 2\n);\nconst stateChanged = initialStates some((s, i) => {\ntry {\nassert deepEqual(s[0], alteredStates[i][0]);\nreturn false;\n} catch (e) {\nreturn true;\n}\n});\nabuseState restore();\nassert isTrue(stateChanged);\n} catch (e) {\nconsole log(e);\nthrow e;\n}\n};\n```\nChanging the value of the input[type=\"email\"] elements should update component state ```js\nasync () => {\ntry {\nconst abuseState = __helpers spyOn(React, 'useState');\nconst script = [ document querySelectorAll('script')] find(s => s dataset src === 'index jsx') innerText replace('_React useState', 'abuseState');\nconst exports = {};\nconst a = eval(script);\nconst s = await __helpers prepTestComponent(exports EventRSVPForm);\nconst inp = s querySelector('input[type=\"email\"]');\nawait React act(async () => {\ninp value = 'fcc@freecodecamp org';\nconst ev = new InputEvent('change', { bubbles: true, cancelable: false });\ninp[Object keys(inp) find(k => k startsWith('__reactProps'))] onChange({ ev,\ntarget: inp\n});\n});\n// For all state in `abuseState returns`, there will be a multiple of two calls - one before the change, and one after const alteredStates = abuseState returns;\nconst initialStates = alteredStates splice(\n0,\nabuseState returns length / 2\n);\nconst stateChanged = initialStates some((s, i) => {\ntry {\nassert deepEqual(s[0], alteredStates[i][0]);\nreturn false;\n} catch (e) {\nreturn true;\n}\n});\nabuseState restore();\nassert isTrue(stateChanged);\n} catch (e) {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23299,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 2,
    "total_chunks": 12
  },
  {
    "id": "3c17463efdd3a9e88c7f2546c929caf8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
    "source_type": "git_repo",
    "title": "Event RSVP",
    "content": "target: inp }); }); // For all state in `abuseState returns`, there will be a multiple of two calls - one before the change, and one after const alteredStates = abuseState returns; const initialStates = alteredStates splice( 0, abuseState returns length / 2 ); const stateChanged = initialStates some((s, i) => { try { assert deepEqual(s[0], alteredStates[i][0]); return false; } catch (e) { return true; } }); abuseState restore(); assert isTrue(stateChanged); } catch (e) { consolelog(e);\nthrow e;\n}\n};\n```\nChanging the value of the input[type=\"number\"] elements should update component state ```js\nasync () => {\ntry {\nconst abuseState = __helpers spyOn(React, 'useState');\nconst script = [ document querySelectorAll('script')] find(s => s dataset src === 'index jsx') innerText replace('_React useState', 'abuseState');\nconst exports = {};\nconst a = eval(script);\nconst s = await __helpers prepTestComponent(exports EventRSVPForm);\nconst inp = s querySelector('input[type=\"number\"]');\nawait React act(async () => {\ninp value = 2;\nconst ev = new InputEvent('change', { bubbles: true, cancelable: false });\ninp[Object keys(inp) find(k => k startsWith('__reactProps'))] onChange({ ev,\ntarget: inp\n});\n});\n// For all state in `abuseState returns`, there will be a multiple of two calls - one before the change, and one after const alteredStates = abuseState returns;\nconst initialStates = alteredStates splice(\n0,\nabuseState returns length / 2\n);\nconst stateChanged = initialStates some((s, i) => {\ntry {\nassert deepEqual(s[0], alteredStates[i][0]);\nreturn false;\n} catch (e) {\nreturn true;\n}\n});\nabuseState restore();\nassert isTrue(stateChanged);\n} catch (e) {\nconsole log(e);\nthrow e;\n}\n};\n```\nChanging the value of the input[type=\"checkbox\"] elements should update component state ```js\nasync () => {\ntry {\nconst abuseState = __helpers spyOn(React, 'useState');\nconst script = [ document querySelectorAll('script')] find(s => s dataset src === 'index jsx') innerText replace('_React",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23299,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 3,
    "total_chunks": 12
  },
  {
    "id": "f088a8f4b891518ca1a2bf1d97c77d52",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
    "source_type": "git_repo",
    "title": "Event RSVP",
    "content": "= initialStates some((s, i) => { try { assert deepEqual(s[0], alteredStates[i][0]); return false; } catch (e) { return true; } }); abuseState restore(); assert isTrue(stateChanged); } catch (e) { console log(e); throw e; } }; ``` Changing the value of the input[type=\"checkbox\"] elements should update component state ```js async () => { try { const abuseState = __helpers spyOn(React, 'useState'); const script = [ document querySelectorAll('script')] find(s => s dataset src === 'index jsx') innerText replace('_ReactuseState', 'abuseState');\nconst exports = {};\nconst a = eval(script);\nconst s = await __helpers prepTestComponent(exports EventRSVPForm);\nconst inp = s querySelector('input[type=\"checkbox\"]');\nawait React act(async () => {\ninp checked = true;\nconst ev = new InputEvent('change', { bubbles: true, cancelable: false });\ninp[Object keys(inp) find(k => k startsWith('__reactProps'))] onChange({ ev,\ntarget: inp\n});\n});\n// For all state in `abuseState returns`, there will be a multiple of two calls - one before the change, and one after const alteredStates = abuseState returns;\nconst initialStates = alteredStates splice(\n0,\nabuseState returns length / 2\n);\nconst stateChanged = initialStates some((s, i) => {\ntry {\nassert deepEqual(s[0], alteredStates[i][0]);\nreturn false;\n} catch (e) {\nreturn true;\n}\n});\nabuseState restore();\nassert isTrue(stateChanged);\n} catch (e) {\nconsole log(e);\nthrow e;\n}\n};\n```\nSubmitting the form should not result in the page reloading ``js\nasync () => {\ntry {\n// Ideally,window onloadwould be watched However, the frame runner disables submissions causing window reloads // So, the test needs to manually check for the preventDefault` call const script = [ document querySelectorAll('script')] find(\ns => s dataset src === 'index jsx'\n) innerText;\nconst exports = {};\nconst a = eval(script);\nconst s = await __helpers prepTestComponent(exports EventRSVPForm);\nconst f = s querySelector('form');\nawait React act(async () => {\nlet c = 0;\nconst mockEv = {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23299,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 4,
    "total_chunks": 12
  },
  {
    "id": "254b509d426c9f80821b575dc5919fd2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
    "source_type": "git_repo",
    "title": "Event RSVP",
    "content": "Ideally,window onloadwould be watched However, the frame runner disables submissions causing window reloads // So, the test needs to manually check for the preventDefault` call const script = [ document querySelectorAll('script')] find( s => s dataset src === 'index jsx' ) innerText; const exports = {}; const a = eval(script); const s = await __helpers prepTestComponent(exports EventRSVPForm); const f = s querySelector('form'); await React act(async () => { let c = 0; const mockEv = {new SubmitEvent('submit'),\npreventDefault: () => {\nc++;\n}\n};\nf[Object keys(f) find(k => k startsWith('__reactProps'))] onSubmit(\nmockEv\n);\nassert equal(c, 1);\n});\n} catch (e) {\nconsole log(e);\nthrow e;\n}\n};\n```\nAfter submission, there should be an element on the page indicating the state of the name input ``js\nasync () => {\ntry {\nconst inp = document querySelector(input[type=\"text\"]`);\nassert exists(inp);\nconst setter = Object getOwnPropertyDescriptor(\nwindow HTMLInputElement prototype,\n'value'\n) set;\nawait React act(async () => {\n// In order for form to be submited, all required fields are give values await adjustAllRequired();\nsetter call(inp, 'John Doe');\ninp dispatchEvent(new Event('input', { bubbles: true }));\nsubmitForm();\n});\nconst nonInputText = getInnerTextExcept('input,script');\nassert include(nonInputText, 'John Doe');\n} catch (e) {\nconsole log(e);\nthrow e;\n}\n};\n```\nAfter submission, there should be an element on the page indicating the state of the email input ``js\nasync () => {\ntry {\nconst inp = document querySelector(input[type=\"email\"]`);\nassert exists(inp);\nconst setter = Object getOwnPropertyDescriptor(\nwindow HTMLInputElement prototype,\n'value'\n) set;\nawait React act(async () => {\n// In order for form to be submited, all required fields are give values await adjustAllRequired();\nsetter call(inp, 'fcc@freecodecamp org');\ninp dispatchEvent(new Event('input', { bubbles: true }));\nsubmitForm();\n});\nconst nonInputText = getInnerTextExcept('input,script');\nassert include(nonInputText, 'fcc@freecodecamp org');\n} catch (e) {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23299,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 5,
    "total_chunks": 12
  },
  {
    "id": "98351c548027a48cfb4d2e4acb83f402",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
    "source_type": "git_repo",
    "title": "Event RSVP",
    "content": "the email input ``js async () => { try { const inp = document querySelector(input[type=\"email\"]`); assert exists(inp); const setter = Object getOwnPropertyDescriptor( window HTMLInputElement prototype, 'value' ) set; await React act(async () => { // In order for form to be submited, all required fields are give values await adjustAllRequired(); setter call(inp, 'fcc@freecodecamp org'); inp dispatchEvent(new Event('input', { bubbles: true })); submitForm(); }); const nonInputText = getInnerTextExcept('input,script'); assert include(nonInputText, 'fcc@freecodecamp org'); } catch (e) { consolelog(e);\nthrow e;\n}\n};\n```\nAfter submission, there should be an element on the page indicating the state of the number of attendees input ``js\nasync () => {\ntry {\nconst inp = document querySelector(input[type=\"number\"]`);\nassert exists(inp);\nconst setter = Object getOwnPropertyDescriptor(\nwindow HTMLInputElement prototype,\n'value'\n) set;\nawait React act(async () => {\n// In order for form to be submited, all required fields are give values await adjustAllRequired();\nsetter call(inp, 2);\ninp dispatchEvent(new Event('input', { bubbles: true }));\nsubmitForm();\n});\nconst nonInputText = getInnerTextExcept('input,script');\nassert include(nonInputText, '2');\n} catch (e) {\nconsole log(e);\nthrow e;\n}\n};\n```\nAfter submission, there should be an element on the page indicating the state of the dietary preferences input ``js\nasync () => {\ntry {\nconst inp = document querySelector(input[type=\"text\"]:not(:required)`);\nassert exists(inp);\nconst setter = Object getOwnPropertyDescriptor(\nwindow HTMLInputElement prototype,\n'value'\n) set;\nawait React act(async () => {\n// In order for form to be submited, all required fields are give values await adjustAllRequired();\nsetter call(inp, 'diet');\ninp dispatchEvent(new Event('input', { bubbles: true }));\nsubmitForm();\n});\nconst nonInputText = getInnerTextExcept('input,script');\nassert include(nonInputText, 'diet');\n} catch (e) {\nconsole log(e);\nthrow e;\n}\n};\n```\nAfter submission, there should be an element on the page indicating the state of the additional guests input ``js\nasync () => {\ntry {\nlet inp = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23299,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 6,
    "total_chunks": 12
  },
  {
    "id": "32a2d75de858c73c789244b10b7de585",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
    "source_type": "git_repo",
    "title": "Event RSVP",
    "content": "{ // In order for form to be submited, all required fields are give values await adjustAllRequired(); setter call(inp, 'diet'); inp dispatchEvent(new Event('input', { bubbles: true })); submitForm(); }); const nonInputText = getInnerTextExcept('input,script'); assert include(nonInputText, 'diet'); } catch (e) { console log(e); throw e; } }; ``` After submission, there should be an element on the page indicating the state of the additional guests input ``js async () => { try { let inp = documentquerySelector(input[type=\"checkbox\"]`);\nassert exists(inp);\nawait React act(async () => {\n// In order for form to be submited, all required fields are give values await adjustAllRequired();\nconst setter = Object getOwnPropertyDescriptor(\nwindow HTMLInputElement prototype,\n'checked'\n) set;\nsetter call(inp, false);\ninp dispatchEvent(new Event('click', { bubbles: true }));\nsubmitForm();\n});\n// Test submission without checked input, then test submission with checked input - compare for difference const stateWithFalse = getInnerTextExcept('input,script');\ninp = document querySelector(`input[type=\"checkbox\"]`);\nawait React act(async () => {\nconst setter = Object getOwnPropertyDescriptor(\nwindow HTMLInputElement prototype,\n'checked'\n) set;\nsetter call(inp, true);\ninp dispatchEvent(new Event('click', { bubbles: true }));\nsubmitForm();\n});\nconst stateWithTrue = getInnerTextExcept('input,script');\nassert notEqual(stateWithFalse, stateWithTrue);\n} catch (e) {\nconsole log(e);\nthrow e;\n}\n};\n```\n--before-all--\n``js\n// Submit button can either be the only button within a form, or abutton[type=\"submit\"]` function submitForm() {\nconst maybeSubmit = document querySelectorAll(\"form button\");\nif (maybeSubmit length === 1) {\nreturn maybeSubmit[0] click();\n}\nconst submitBtn = document querySelector(\"button[type='submit']\");\nif (submitBtn) {\nreturn submitBtn click();\n}\n}\nasync function adjustAllRequired() {\nconst inps = document querySelectorAll(\n'input[required], select[required], textarea[required]'\n);\ninps forEach(inp => {\nlet setter = Object getOwnPropertyDescriptor(\nwindow HTMLInputElement prototype,\n'value'\n) set;\nswitch (inp type) {\ncase 'text':\nsetter call(inp, 'required text');\ninp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23299,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 7,
    "total_chunks": 12
  },
  {
    "id": "ab8ba43885c0a25824c445def0dca3d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
    "source_type": "git_repo",
    "title": "Event RSVP",
    "content": "within a form, or abutton[type=\"submit\"]` function submitForm() { const maybeSubmit = document querySelectorAll(\"form button\"); if (maybeSubmit length === 1) { return maybeSubmit[0] click(); } const submitBtn = document querySelector(\"button[type='submit']\"); if (submitBtn) { return submitBtn click(); } } async function adjustAllRequired() { const inps = document querySelectorAll( 'input[required], select[required], textarea[required]' ); inps forEach(inp => { let setter = Object getOwnPropertyDescriptor( window HTMLInputElement prototype, 'value' ) set; switch (inp type) { case 'text': setter call(inp, 'required text'); inpdispatchEvent(new Event('change', { bubbles: true }));\nbreak;\ncase 'email':\nsetter call(inp, 'required-email@freecodecamp org');\ninp dispatchEvent(new Event('change', { bubbles: true }));\nbreak;\ncase 'number':\nsetter call(inp, 1);\ninp dispatchEvent(new Event('change', { bubbles: true }));\nbreak;\ncase 'checkbox':\nsetter = Object getOwnPropertyDescriptor(\nwindow HTMLInputElement prototype,\n'checked'\n) set;\nsetter call(inp, true);\ninp dispatchEvent(new Event('click', { bubbles: true }));\nbreak;\n}\ninp dispatchEvent(new Event('change', { bubbles: true }));\n});\n}\nfunction getInnerTextExcept(removingSelector) {\nconst body = document body cloneNode(true);\nconst squareElements = body querySelectorAll(removingSelector);\nsquareElements forEach(element => {\nelement parentNode removeChild(element);\n});\nreturn body innerText;\n}\n```\n--seed--\n--seed-contents--\n```html\nEvent RSVP\n```\n```css\n```\n```jsx\nconst { useState } = React;\nexport function EventRSVPForm() {}\n```\n--solutions--\n```html\nEvent RSVP\n```\n```css\nbody {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nmargin: 0;\nfont-family: 'Helvetica Neue', Arial, sans-serif;\nbackground-color: #e0e0e0;\n} form-container {\nbackground-color: #ffffff;\npadding: 40px;\nborder-radius: 12px;\nbox-shadow: 0 8px 16px rgba(0, 0, 0, 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23299,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 8,
    "total_chunks": 12
  },
  {
    "id": "6a979cb68cdb3237d5e22ffc9371d154",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
    "source_type": "git_repo",
    "title": "Event RSVP",
    "content": "querySelectorAll(removingSelector); squareElements forEach(element => { element parentNode removeChild(element); }); return body innerText; } ``` --seed-- --seed-contents-- ```html Event RSVP ``` ```css ``` ```jsx const { useState } = React; export function EventRSVPForm() {} ``` --solutions-- ```html Event RSVP ``` ```css body { display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0; font-family: 'Helvetica Neue', Arial, sans-serif; background-color: #e0e0e0; } form-container { background-color: #ffffff; padding: 40px; border-radius: 12px; box-shadow: 0 8px 16px rgba(0, 0, 0, 02);\nwidth: 100%;\nmax-width: 450px;\ntext-align: center;\n}\nh2 {\nmargin-bottom: 20px;\nfont-size: 28px;\ncolor: #333;\nfont-weight: bold;\n}\nform {\ndisplay: flex;\nflex-direction: column;\n} form-group {\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nmargin-bottom: 20px;\n} form-group label {\nflex: 1;\ntext-align: left;\nmargin-right: 15px;\nfont-size: 15px;\ncolor: #555;\n} form-group input[type='text'], form-group input[type='email'], form-group input[type='number'] {\nflex: 2;\npadding: 10px 12px;\nborder: 1px solid #ccc;\nborder-radius: 8px;\nwidth: 100%;\nfont-size: 15px;\ntransition: border-color 0 3s ease;\n} form-group input:focus {\nborder-color: #4caf4f4f;\n} form-group input[type='checkbox'] {\nmargin-left: 10px;\n}\nbutton {\nbackground-color: #5957e4;\ncolor: white;\nborder: none;\npadding: 12px 25px;\nborder-radius: 8px;\ncursor: pointer;\nfont-size: 16px;\nfont-weight: bold;\nmargin-top: 15px;\ntransition: background-color 0 3s ease;\n}\nbutton:hover {\nbackground-color: #413fb3;\n} submitted-message {\nmargin-top: 30px;\ntext-align: left;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23299,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 9,
    "total_chunks": 12
  },
  {
    "id": "a0d051217521e76e11528cb4776aa203",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
    "source_type": "git_repo",
    "title": "Event RSVP",
    "content": "input[type='email'], form-group input[type='number'] { flex: 2; padding: 10px 12px; border: 1px solid #ccc; border-radius: 8px; width: 100%; font-size: 15px; transition: border-color 0 3s ease; } form-group input:focus { border-color: #4caf4f4f; } form-group input[type='checkbox'] { margin-left: 10px; } button { background-color: #5957e4; color: white; border: none; padding: 12px 25px; border-radius: 8px; cursor: pointer; font-size: 16px; font-weight: bold; margin-top: 15px; transition: background-color 0 3s ease; } button:hover { background-color: #413fb3; } submitted-message { margin-top: 30px; text-align: left; }submitted-message h3 {\ncolor: #5957e4;\nmargin-bottom: 10px;\nfont-size: 22px;\n}\n@media (max-width: 500px) { form-container {\nwidth: 90%;\npadding: 20px;\n} form-group {\nflex-direction: column;\nalign-items: flex-start;\n} form-group label {\ntext-align: left;\nmargin-bottom: 5px;\n} form-group input[type='text'], form-group input[type='email'], form-group input[type='number'] {\nwidth: 100%;\n}\n}\n```\n```jsx\nconst { useState } = React;\nexport function EventRSVPForm() {\nconst [formData, setFormData] = useState({\nname: '',\nemail: '',\nattendees: '',\ndietaryPreferences: '',\nbringingOthers: false\n});\nconst [submitted, setSubmitted] = useState(false);\nfunction handleChange(event) {\nconst { name, value, type, checked } = event target;\nsetFormData({ formData,\n[name]: type === 'checkbox' checked : value\n});\n}\nfunction handleSubmit(event) {\nevent preventDefault();\nsetSubmitted(true);\n}\nreturn (\nEvent RSVP Form\nName:\nEmail:\nNumber of Attendees:\nDietary Preferences:\nBringing additional guests Submit RSVP\n{submitted && (\nRSVP Submitted Name: {formData name}\nEmail: {formData email}\nNumber of Attendees: {formData attendees}\nDietary Preferences:{' '}\n{formData",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23299,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 10,
    "total_chunks": 12
  },
  {
    "id": "8cf09b2f04b7b9540bea0fe7a0b452aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
    "source_type": "git_repo",
    "title": "Event RSVP",
    "content": "bringingOthers: false }); const [submitted, setSubmitted] = useState(false); function handleChange(event) { const { name, value, type, checked } = event target; setFormData({ formData, [name]: type === 'checkbox' checked : value }); } function handleSubmit(event) { event preventDefault(); setSubmitted(true); } return ( Event RSVP Form Name: Email: Number of Attendees: Dietary Preferences: Bringing additional guests Submit RSVP {submitted && ( RSVP Submitted Name: {formData name} Email: {formData email} Number of Attendees: {formData attendees} Dietary Preferences:{' '} {formDatadietaryPreferences || 'None'}\nBringing Others:{' '}\n{formData bringingOthers 'Yes' : 'No'}\n)}\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23299,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-event-rsvp\\67d936de7055982b02baf186.md",
      "source_type": "git_repo"
    },
    "token_count": 152,
    "chunk_index": 11,
    "total_chunks": 12
  },
  {
    "id": "953a8db0199abc0943b472cb30e37c21",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-golf-score-translator\\689f7996426c1534fa5bea66.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 689f7996426c1534fa5bea66\ntitle: Build a Golf Score Translator\nchallengeType: 26\ndashedName: build-a-golf-score-translator\n--description--\nIn the game of Golf, each hole has a par, meaning the average number of strokes a golfer is expected to make in order to sink the ball in the hole to complete the play Depending on how far above or below par your strokes are, there is a different nickname In this lab, you will write a function that converts the par and strokes to their nickname Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create a function named golfScore golfScore should take two numeric arguments, which are the par for the course and the amount of strokes made golfScore should return a string golfScore should return \"Hole-in-one \" if strokes is 1 golfScore should return \"Eagle\" if strokes is less than or equal to par minus 2 golfScore should return \"Birdie\" if strokes is equal to par minus 1 golfScore should return \"Par\" if strokes is equal to par golfScore should return \"Bogey\" if strokes is equal to par plus 1 golfScore should return \"Double Bogey\" if strokes is equal to par plus 2 golfScore should return \"Go Home \" if strokes is greater than or equal to par plus 3 --hints--\nYou should create a function named golfScore js\nassert isFunction(golfScore);\ngolfScore should take two parameters js\nassert lengthOf(golfScore, 2);\ngolfScore should return a string\njs\nassert isString(golfScore(4,1));\ngolfScore(4, 1) should return the string Hole-in-one js\nassert strictEqual(golfScore(4,1), 'Hole-in-one ');\ngolfScore(4, 2) should return the string Eagle\njs\nassert strictEqual(golfScore(4,2), 'Eagle');\ngolfScore(5, 2) should return the string Eagle\njs\nassert strictEqual(golfScore(5,2), 'Eagle');\ngolfScore(4, 3) should return the string Birdie\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3481,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-golf-score-translator\\689f7996426c1534fa5bea66.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "7926aa54d154bd1270e3b594d8ea0d25",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-golf-score-translator\\689f7996426c1534fa5bea66.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "equal to par plus 3 --hints-- You should create a function named golfScore js assert isFunction(golfScore); golfScore should take two parameters js assert lengthOf(golfScore, 2); golfScore should return a string js assert isString(golfScore(4,1)); golfScore(4, 1) should return the string Hole-in-one js assert strictEqual(golfScore(4,1), 'Hole-in-one '); golfScore(4, 2) should return the string Eagle js assert strictEqual(golfScore(4,2), 'Eagle'); golfScore(5, 2) should return the string Eagle js assert strictEqual(golfScore(5,2), 'Eagle'); golfScore(4, 3) should return the string Birdie js assertstrictEqual(golfScore(4,3), 'Birdie');\ngolfScore(4, 4) should return the string Par\njs\nassert strictEqual(golfScore(4,4), 'Par');\ngolfScore(1, 1) should return the string Hole-in-one js\nassert strictEqual(golfScore(1,1), 'Hole-in-one ');\ngolfScore(5, 5) should return the string Par\njs\nassert strictEqual(golfScore(5,5), 'Par');\ngolfScore(4, 5) should return the string Bogey\njs\nassert strictEqual(golfScore(4,5), 'Bogey');\ngolfScore(4, 6) should return the string Double Bogey\njs\nassert strictEqual(golfScore(4,6), 'Double Bogey');\ngolfScore(4, 7) should return the string Go Home js\nassert strictEqual(golfScore(4,7), 'Go Home ');\ngolfScore(5, 9) should return the string Go Home js\nassert strictEqual(golfScore(5,9), 'Go Home ');\n--seed--\n--seed-contents--\n```js\nconst names = [\"Hole-in-one \", \"Eagle\", \"Birdie\", \"Par\", \"Bogey\", \"Double Bogey\", \"Go Home \"];\n```\n--solutions--\n```js\nfunction golfScore(par, strokes) {\nif (strokes === 1) {\nreturn \"Hole-in-one",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3481,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-golf-score-translator\\689f7996426c1534fa5bea66.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b7d476d10bf5feeba2c456c6cd2c5fea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-golf-score-translator\\689f7996426c1534fa5bea66.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "js assert strictEqual(golfScore(4,5), 'Bogey'); golfScore(4, 6) should return the string Double Bogey js assert strictEqual(golfScore(4,6), 'Double Bogey'); golfScore(4, 7) should return the string Go Home js assert strictEqual(golfScore(4,7), 'Go Home '); golfScore(5, 9) should return the string Go Home js assert strictEqual(golfScore(5,9), 'Go Home '); --seed-- --seed-contents-- ```js const names = [\"Hole-in-one \", \"Eagle\", \"Birdie\", \"Par\", \"Bogey\", \"Double Bogey\", \"Go Home \"]; ``` --solutions-- ```js function golfScore(par, strokes) { if (strokes === 1) { return \"Hole-in-one\";\n}\nif (strokes <= par - 2) {\nreturn \"Eagle\";\n}\nif (strokes === par - 1) {\nreturn \"Birdie\";\n}\nif (strokes === par) {\nreturn \"Par\";\n}\nif (strokes === par + 1) {\nreturn \"Bogey\";\n}\nif(strokes === par + 2) {\nreturn \"Double Bogey\";\n}\nreturn \"Go Home \";\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3481,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-golf-score-translator\\689f7996426c1534fa5bea66.md",
      "source_type": "git_repo"
    },
    "token_count": 275,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "e08939fe0d52f585814cb6a9582b1634",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
    "source_type": "git_repo",
    "title": "Build a Set of Football Team Cards",
    "content": "id: 66e7ee20b79186306fc12da5\ntitle: Build a Set of Football Team Cards\nchallengeType: 25\ndashedName: lab-football-team-cards\ndemoType: onClick\n--description--\nIn this lab, you will build a set of football team cards The user should be able to use the dropdown menu and filter between the different players based on their positions Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create a footballTeam object with the following properties: team, year, headCoach, players The team property should contain the name of the team as a string The year property should contain the year as a number The headCoach property should contain the name of the head coach as a string The players property should be an array containing at least four elements Each element in the players array should be an object with properties name, position, isCaptain The name property should contain the name of the player as a string The position property should have one of the following values: \"forward\", \"midfielder\", \"defender\", or \"goalkeeper\" The isCaptain property should have value of a boolean One of the players should have their isCaptain property set to true You should display the coach, team and year values on the page These values should be displayed in the HTML elements with the id values of head-coach, team and year You should display the players data on the page inside the #player-cards element, each player should be displayed in a div with class of player-card, and nested in it, an h2 containing the name of the player, and (Captain) in case of the player being captain, and a p containing Position: and the position of the player html\n<div class=\"player-card\">\n<h2>Sergio Batista</h2>\n<p>Position: midfielder</p>\n</div>\n<div class=\"player-card\">\n<h2>(Captain) Diego Maradona</h2>\n<p>Position: midfielder</p>\n</div>\nWhen the dropdown menu is used to select one of the positions, only the player-card elements for players of that position should be present If the \"All Players\" option is selected, then all of the players should display on the page --hints--\nYou should have a footballTeam variable js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16035,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "d7c6d9a6c55b259db086fc5467cdd876",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
    "source_type": "git_repo",
    "title": "Build a Set of Football Team Cards",
    "content": "a p containing Position: and the position of the player html <div class=\"player-card\"> <h2>Sergio Batista</h2> <p>Position: midfielder</p> </div> <div class=\"player-card\"> <h2>(Captain) Diego Maradona</h2> <p>Position: midfielder</p> </div> When the dropdown menu is used to select one of the positions, only the player-card elements for players of that position should be present If the \"All Players\" option is selected, then all of the players should display on the page --hints-- You should have a footballTeam variable js assertexists(footballTeam);\nThe footballTeam variable should be an object with four properties: team, year, headCoach and players js\nassert isObject(footballTeam);\nassert containsAllKeys(footballTeam, ['team', 'year', 'headCoach', 'players']);\nThe team property should be a string js\nassert isString(footballTeam team);\nThe year property should be a number js\nassert isNumber(footballTeam year);\nThe headCoach property should be a string js\nassert isString(footballTeam headCoach);\nThe players property should be an array of at least four objects, each object should have the keys name, position, isCaptain js\nassert isArray(footballTeam players);\nassert isAtLeast(footballTeam players length, 4);\nfootballTeam players forEach(player => {\nassert isObject(player);\nassert containsAllKeys(player, ['name', 'position', 'isCaptain']);\n})\nThe name property should have value of a string js\nfootballTeam players forEach(({name}) => assert isString(name));\nThe position property should have one of values \"forward\", \"midfielder\", \"defender\", or \"goalkeeper\" js\nfootballTeam players forEach(({position}) => {\nassert isString(position);\nassert oneOf(position, [\"forward\", \"midfielder\", \"defender\", \"goalkeeper\"]);\n});\nThe isCaptain property should have value of a boolean, and there should be only one captain js\nfootballTeam players forEach(({isCaptain}) => assert isBoolean(isCaptain));\nconst listOfCaptains = footballTeam players filter(({isCaptain}) => isCaptain);\nassert lengthOf(listOfCaptains, 1);\nYou should display the coach, team and year values from the footballTeam object in the HTML elements with the id values of head-coach, team and year",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16035,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "8b66ae3bfce42925748c4ac3dba89bfa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
    "source_type": "git_repo",
    "title": "Build a Set of Football Team Cards",
    "content": "\"goalkeeper\" js footballTeam players forEach(({position}) => { assert isString(position); assert oneOf(position, [\"forward\", \"midfielder\", \"defender\", \"goalkeeper\"]); }); The isCaptain property should have value of a boolean, and there should be only one captain js footballTeam players forEach(({isCaptain}) => assert isBoolean(isCaptain)); const listOfCaptains = footballTeam players filter(({isCaptain}) => isCaptain); assert lengthOf(listOfCaptains, 1); You should display the coach, team and year values from the footballTeam object in the HTML elements with the id values of head-coach, team and yearjs\nconst teamElement = document querySelector(' team-stats #team');\nconst yearElement = document querySelector(' team-stats #year');\nconst headCoachElement = document querySelector(' team-stats #head-coach');\nassert equal(teamElement innerText trim(), footballTeam team);\nassert equal(yearElement innerText trim(), footballTeam year);\nassert equal(headCoachElement innerText trim(), footballTeam headCoach);\nWhen the option All Players is selected, all players should be present within #player-cards ```js\nconst select = document querySelector('#players')\nselect value = 'all';\nselect dispatchEvent(new Event('change'))\nconst playerCards = document querySelectorAll(' player-card');\nconst arrayFromPage = Array from(playerCards) map(el => ({\nname: el querySelector('h2') innerText replace('(Captain)', '') trim(),\nposition: el querySelector('p') innerText replace('Position:', '') trim(),\nisCaptain: /Captain/ test(el querySelector('h2') innerText)\n}))\nassert sameDeepMembers(arrayFromPage, footballTeam players);\n```\nWhen the option Position Forward is selected, only forward players should be present within #player-cards ```js\nconst forwards = footballTeam players filter(({position}) => position === 'forward')\nconst select = document querySelector('#players')\nselect value = 'forward';\nselect dispatchEvent(new Event('change'))\nconst playerCards = document querySelectorAll(' player-card');\nconst arrayFromPage = Array from(playerCards) map(el => ({\nname: el querySelector('h2') innerText replace('(Captain)', '') trim(),\nposition: el querySelector('p') innerText replace('Position:', '') trim(),\nisCaptain: /Captain/ test(el querySelector('h2') innerText)\n}))\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16035,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "96fb5e4cc81eedbaec76cbe56f448593",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
    "source_type": "git_repo",
    "title": "Build a Set of Football Team Cards",
    "content": "footballTeam players); ``` When the option Position Forward is selected, only forward players should be present within #player-cards ```js const forwards = footballTeam players filter(({position}) => position === 'forward') const select = document querySelector('#players') select value = 'forward'; select dispatchEvent(new Event('change')) const playerCards = document querySelectorAll(' player-card'); const arrayFromPage = Array from(playerCards) map(el => ({ name: el querySelector('h2') innerText replace('(Captain)', '') trim(), position: el querySelector('p') innerText replace('Position:', '') trim(), isCaptain: /Captain/ test(el querySelector('h2') innerText) })) assertsameDeepMembers(arrayFromPage, forwards);\n```\nWhen the option Position Midfielder is selected, only midfielder players should be present within #player-cards ```js\nconst midfielders = footballTeam players filter(({position}) => position === 'midfielder')\nconst select = document querySelector('#players')\nselect value = 'midfielder';\nselect dispatchEvent(new Event('change'))\nconst playerCards = document querySelectorAll(' player-card');\nconst arrayFromPage = Array from(playerCards) map(el => ({\nname: el querySelector('h2') innerText replace('(Captain)', '') trim(),\nposition: el querySelector('p') innerText replace('Position:', '') trim(),\nisCaptain: /Captain/ test(el querySelector('h2') innerText)\n}))\nassert sameDeepMembers(arrayFromPage, midfielders);\n```\nWhen the option Position Defender is selected, only defender players should be present within #player-cards ```js\nconst defenders = footballTeam players filter(({position}) => position === 'defender')\nconst select = document querySelector('#players')\nselect value = 'defender';\nselect dispatchEvent(new Event('change'))\nconst playerCards = document querySelectorAll(' player-card');\nconst arrayFromPage = Array from(playerCards) map(el => ({\nname: el querySelector('h2') innerText replace('(Captain)', '') trim(),\nposition: el querySelector('p') innerText replace('Position:', '') trim(),\nisCaptain: /Captain/ test(el querySelector('h2') innerText)\n}))\nassert sameDeepMembers(arrayFromPage, defenders);\n```\nWhen the option Position Goalkeeper is selected, only goalkeeper players should be present ```js\nconst goalkeepers = footballTeam players filter(({position}) => position === 'goalkeeper')\nconst select = document querySelector('#players')\nselect",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16035,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
      "source_type": "git_repo"
    },
    "token_count": 516,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "3e5764d8c6558b450095c22b9842391c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
    "source_type": "git_repo",
    "title": "Build a Set of Football Team Cards",
    "content": "querySelector('#players') select value = 'defender'; select dispatchEvent(new Event('change')) const playerCards = document querySelectorAll(' player-card'); const arrayFromPage = Array from(playerCards) map(el => ({ name: el querySelector('h2') innerText replace('(Captain)', '') trim(), position: el querySelector('p') innerText replace('Position:', '') trim(), isCaptain: /Captain/ test(el querySelector('h2') innerText) })) assert sameDeepMembers(arrayFromPage, defenders); ``` When the option Position Goalkeeper is selected, only goalkeeper players should be present ```js const goalkeepers = footballTeam players filter(({position}) => position === 'goalkeeper') const select = document querySelector('#players') selectvalue = 'goalkeeper';\nselect dispatchEvent(new Event('change'))\nconst playerCards = document querySelectorAll(' player-card');\nconst arrayFromPage = Array from(playerCards) map(el => ({\nname: el querySelector('h2') innerText replace('(Captain)', '') trim(),\nposition: el querySelector('p') innerText replace('Position:', '') trim(),\nisCaptain: /Captain/ test(el querySelector('h2') innerText)\n}))\nassert sameDeepMembers(arrayFromPage, goalkeepers);\n```\n--seed--\n--seed-contents--\n```html\nBuild a Set of Football Team Cards\nTeam stats\nTeam:\nYear:\nHead coach:\nFilter Teammates:\nAll Players\nPosition Forward\nPosition Midfielder\nPosition Defender\nPosition Goalkeeper\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #0a0a23;\n--light-grey: #f5f6f7;\n--white: #ffffff;\n--black: #000;\n}\nbody {\nbackground-color: var(--dark-grey);\ntext-align: center;\npadding: 10px;\n} title, options-label, team-stats,\nfooter {\ncolor: var(--white);\n} title {\nmargin: 1 3rem 0;\n} team-stats {\ndisplay: flex;\njustify-content: space-around;\nflex-wrap: wrap;\nfont-size: 1 3rem;\nmargin: 1 2rem 0;\n} options-label {\nfont-size: 1 2rem;\n} cards {\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16035,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "29fa57255861feaecaa7181bb901040a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
    "source_type": "git_repo",
    "title": "Build a Set of Football Team Cards",
    "content": "{ box-sizing: border-box; margin: 0; padding: 0; } :root { --dark-grey: #0a0a23; --light-grey: #f5f6f7; --white: #ffffff; --black: #000; } body { background-color: var(--dark-grey); text-align: center; padding: 10px; } title, options-label, team-stats, footer { color: var(--white); } title { margin: 1 3rem 0; } team-stats { display: flex; justify-content: space-around; flex-wrap: wrap; font-size: 1 3rem; margin: 1 2rem 0; } options-label { font-size: 1 2rem; } cards { display: flex; flex-wrap: wrap; justify-content: center; align-items: center; }player-card {\nbackground-color: var(--light-grey);\npadding: 1 3rem;\nmargin: 1 2rem;\nwidth: 300px;\nborder-radius: 15px;\n}\n@media (max-width: 768px) { team-stats {\nflex-direction: column;\n}\n}\n```\n```js\n```\n--solutions--\n```html\nBuild a Set of Football Team Cards\nTeam stats\nTeam:\nYear:\nHead coach:\nFilter Teammates:\nAll Players\nPosition Forward\nPosition Midfielder\nPosition Defender\nPosition Goalkeeper\n© freeCodeCamp\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #0a0a23;\n--light-grey: #f5f6f7;\n--white: #ffffff;\n--black: #000;\n}\nbody {\nbackground-color: var(--dark-grey);\ntext-align: center;\npadding: 10px;\n} title, options-label, team-stats,\nfooter {\ncolor: var(--white);\n} title {\nmargin: 1 3rem 0;\n} team-stats {\ndisplay: flex;\njustify-content: space-around;\nflex-wrap: wrap;\nfont-size: 1 3rem;\nmargin: 1 2rem 0;\n} options-label {\nfont-size: 1 2rem;\n} cards {\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\nalign-items: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16035,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "48c41db513603d3ee5cebd2dddd2779f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
    "source_type": "git_repo",
    "title": "Build a Set of Football Team Cards",
    "content": "{ box-sizing: border-box; margin: 0; padding: 0; } :root { --dark-grey: #0a0a23; --light-grey: #f5f6f7; --white: #ffffff; --black: #000; } body { background-color: var(--dark-grey); text-align: center; padding: 10px; } title, options-label, team-stats, footer { color: var(--white); } title { margin: 1 3rem 0; } team-stats { display: flex; justify-content: space-around; flex-wrap: wrap; font-size: 1 3rem; margin: 1 2rem 0; } options-label { font-size: 1 2rem; } cards { display: flex; flex-wrap: wrap; justify-content: center; align-items: center; }player-card {\nbackground-color: var(--light-grey);\npadding: 1 3rem;\nmargin: 1 2rem;\nwidth: 300px;\nborder-radius: 15px;\n}\n@media (max-width: 768px) { team-stats {\nflex-direction: column;\n}\n}\n```\n```js\nconst teamName = document getElementById(\"team\");\nconst worldCupYear = document getElementById(\"year\");\nconst headCoach = document getElementById(\"head-coach\");\nconst playerCards = document getElementById(\"player-cards\");\nconst playersDropdownList = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16035,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
      "source_type": "git_repo"
    },
    "token_count": 300,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "8b8c95831d9815121e3dbe0a0137416b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
    "source_type": "git_repo",
    "title": "Build a Set of Football Team Cards",
    "content": "wrap; font-size: 1 3rem; margin: 1 2rem 0; } options-label { font-size: 1 2rem; } cards { display: flex; flex-wrap: wrap; justify-content: center; align-items: center; }player-card { background-color: var(--light-grey); padding: 1 3rem; margin: 1 2rem; width: 300px; border-radius: 15px; } @media (max-width: 768px) { team-stats { flex-direction: column; } } ``` ```js const teamName = document getElementById(\"team\"); const worldCupYear = document getElementById(\"year\"); const headCoach = document getElementById(\"head-coach\"); const playerCards = document getElementById(\"player-cards\"); const playersDropdownList = documentgetElementById(\"players\");\nconst footballTeam = {\nteam: \"Argentina\",\nyear: 1986,\nheadCoach: \"Carlos Bilardo\",\nplayers: [\n{\nname: \"Sergio Almirón\",\nposition: \"forward\",\nisCaptain: false,\n},\n{\nname: \"Sergio Batista\",\nposition: \"midfielder\",\nisCaptain: false,\n},\n{\nname: \"Ricardo Bochini\",\nposition: \"midfielder\",\nisCaptain: false,\n},\n{\nname: \"Claudio Borghi\",\nposition: \"midfielder\",\nisCaptain: false,\n},\n{\nname: \"José Luis Brown\",\nposition: \"defender\",\nisCaptain: false,\n},\n{\nname: \"Daniel Passarella\",\nposition: \"defender\",\nisCaptain: false,\n},\n{\nname: \"Jorge Burruchaga\",\nposition: \"forward\",\nisCaptain: false,\n},\n{\nname: \"Néstor Clausen\",\nposition: \"defender\",\nisCaptain: false,\n},\n{\nname: \"José Luis Cuciuffo\",\nposition: \"defender\",\nisCaptain: false,\n},\n{\nname: \"Diego Maradona\",\nposition: \"midfielder\",\nisCaptain: true,\n},\n{\nname: \"Jorge Valdano\",\nposition: \"forward\",\nisCaptain: false,\n},\n{\nname: \"Héctor Enrique\",\nposition: \"midfielder\",\nisCaptain: false,\n},\n{\nname: \"Oscar Garré\",\nposition: \"defender\",\nisCaptain: false,\n},\n{\nname: \"Ricardo Giusti\",\nposition: \"midfielder\",\nisCaptain: false,\n},\n{\nname: \"Luis Islas\",\nposition: \"goalkeeper\",\nisCaptain: false,\n},\n{\nname: \"Julio Olarticoechea\",\nposition: \"defender\",\nisCaptain: false,\n},\n{\nname: \"Pedro Pasculli\",\nposition: \"forward\",\nisCaptain: false,\n},\n{\nname: \"Nery Pumpido\",\nposition: \"goalkeeper\",\nisCaptain: false,\n},\n{\nname: \"Oscar Ruggeri\",\nposition: \"defender\",\nisCaptain: false,\n},\n{\nname: \"Carlos Tapia\",\nposition: \"midfielder\",\nisCaptain: false,\n},\n{\nname: \"Marcelo Trobbiani\",\nposition: \"midfielder\",\nisCaptain: false,\n},\n{\nname: \"Héctor Zelada\",\nposition: \"goalkeeper\",\nisCaptain: false,\n},\n],\n};\nconst { sport, team, year, players } = footballTeam;\nconst coachName = footballTeam",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16035,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
      "source_type": "git_repo"
    },
    "token_count": 717,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "d6cedef55806d832a2c12d9feabf3490",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
    "source_type": "git_repo",
    "title": "Build a Set of Football Team Cards",
    "content": "\"Julio Olarticoechea\", position: \"defender\", isCaptain: false, }, { name: \"Pedro Pasculli\", position: \"forward\", isCaptain: false, }, { name: \"Nery Pumpido\", position: \"goalkeeper\", isCaptain: false, }, { name: \"Oscar Ruggeri\", position: \"defender\", isCaptain: false, }, { name: \"Carlos Tapia\", position: \"midfielder\", isCaptain: false, }, { name: \"Marcelo Trobbiani\", position: \"midfielder\", isCaptain: false, }, { name: \"Héctor Zelada\", position: \"goalkeeper\", isCaptain: false, }, ], }; const { sport, team, year, players } = footballTeam; const coachName = footballTeamheadCoach;\nteamName textContent = team;\nworldCupYear textContent = year;\nheadCoach textContent = coachName;\nconst setPlayerCards = (arr = players) => {\nplayerCards innerHTML += arr map(\n({ name, position, isCaptain }) =>\n<div class=\"player-card\">\n<h2>${isCaptain \"(Captain)\" : \"\"} ${name}</h2>\n<p>Position: ${position}</p>\n</div>\n) join(\"\");\n};\nplayersDropdownList addEventListener(\"change\", (e) => {\nplayerCards innerHTML = \"\";\nswitch (e target value) {\ncase \"forward\":\nsetPlayerCards(players filter((player) => player position === \"forward\"));\nbreak;\ncase \"midfielder\":\nsetPlayerCards(\nplayers filter((player) => player position === \"midfielder\")\n);\nbreak;\ncase \"defender\":\nsetPlayerCards(\nplayers filter((player) => player position === \"defender\")\n);\nbreak;\ncase \"goalkeeper\":\nsetPlayerCards(\nplayers filter((player) => player position === \"goalkeeper\")\n);\nbreak;\ndefault:\nsetPlayerCards();\n}\n});\nsetPlayerCards();\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16035,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-football-team-cards\\66e7ee20b79186306fc12da5.md",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "dcd6dec4a3fd0800737c64cac9d2d2c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-gradebook-app\\66bb6a9c2dd58b73cd759034.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66bb6a9c2dd58b73cd759034\ntitle: Build a Gradebook App\nchallengeType: 26\ndashedName: build-a-gradebook-app\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a function named getAverage that takes an array of test scores as a parameter and returns the average score You should have a function named getGrade that takes a student score as a parameter and returns a string representing a letter grade based on the score Here are the scores and their corresponding letter grades:\n| Score Range | Grade   |\n| ----------- | ------- |\n| 100       | \"A+\"  |\n| 90 - 99   | \"A\"   |\n| 80 - 89   | \"B\"   |\n| 70 - 79   | \"C\"   |\n| 60 - 69   | \"D\"   |\n| 0 - 59    | \"F\"   |\nYou should have a function named hasPassingGrade that takes a score as a parameter and returns either true or false depending on if the score corresponds to a passing grade The hasPassingGrade function should use the getGrade function to get the letter grade, and use it to determine if the grade is passing A passing grade is anything different from \"F\" You should have a function named studentMsg that takes an array of scores and a student score as the parameters The function should return a string with the format:\n\"Class average: average-goes-here Your grade: grade-goes-here You passed the course \", if the student passed the course \"Class average: average-goes-here Your grade: grade-goes-here You failed the course \", if the student failed the course Replace average-goes-here with the average of total scores and grade-goes-here with the student's grade Use getAverage to get the average score and getGrade to get the student's grade --hints--\nYou should have a function named getAverage js\nassert isFunction(getAverage);\nYour getAverage function should return a number js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7878,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-gradebook-app\\66bb6a9c2dd58b73cd759034.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "535e69dc8eec9a92ec141f682eb48eb5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-gradebook-app\\66bb6a9c2dd58b73cd759034.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "You passed the course \", if the student passed the course \"Class average: average-goes-here Your grade: grade-goes-here You failed the course \", if the student failed the course Replace average-goes-here with the average of total scores and grade-goes-here with the student's grade Use getAverage to get the average score and getGrade to get the student's grade --hints-- You should have a function named getAverage js assert isFunction(getAverage); Your getAverage function should return a number js assertisNumber(getAverage([92, 88, 12, 77, 57, 100, 67, 38, 97, 89]));\ngetAverage([92, 88, 12, 77, 57, 100, 67, 38, 97, 89]) should return 71 7 js\nassert strictEqual(getAverage([92, 88, 12, 77, 57, 100, 67, 38, 97, 89]), 71 7);\ngetAverage([45, 87, 98, 100, 86, 94, 67, 88, 94, 95]) should return 85 4 js\nassert strictEqual(getAverage([45, 87, 98, 100, 86, 94, 67, 88, 94, 95]), 85 4);\ngetAverage([38, 99, 87, 100, 100, 100, 100, 100, 100, 100]) should return 92 4 js\nassert strictEqual(getAverage([38, 99, 87, 100, 100, 100, 100, 100, 100, 100]), 92 4);\ngetAverage([10, 20, 30, 40, 55, 65, 75, 83]) should return 47 25 js\nassert strictEqual(getAverage([10, 20, 30, 40, 55, 65, 75, 83]), 47 25);\ngetAverage([10, 20, 30, 40, 50, 60, 70, 97]) should return 47 125 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7878,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-gradebook-app\\66bb6a9c2dd58b73cd759034.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "e1beb4aa510eb4bdc74a6f9b68a87d93",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-gradebook-app\\66bb6a9c2dd58b73cd759034.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "98, 100, 86, 94, 67, 88, 94, 95]), 85 4); getAverage([38, 99, 87, 100, 100, 100, 100, 100, 100, 100]) should return 92 4 js assert strictEqual(getAverage([38, 99, 87, 100, 100, 100, 100, 100, 100, 100]), 92 4); getAverage([10, 20, 30, 40, 55, 65, 75, 83]) should return 47 25 js assert strictEqual(getAverage([10, 20, 30, 40, 55, 65, 75, 83]), 47 25); getAverage([10, 20, 30, 40, 50, 60, 70, 97]) should return 47 125 js assertstrictEqual(getAverage([10, 20, 30, 40, 50, 60, 70, 97]), 47 125);\nYour getAverage function should return the average score of the test scores js\nassert strictEqual(getAverage([52, 56, 60, 65, 70, 75, 80, 85, 90, 95]), 72 8);\nassert strictEqual(getAverage([45, 50, 55, 60, 65, 70, 75, 80, 85, 90]), 67 5);\nassert strictEqual(getAverage([38, 42, 46, 50, 54, 58, 62, 66, 70, 74]), 56);\nYou should have a function named getGrade js\nassert isFunction(getGrade);\nYour getGrade function should return \"A+\" if the score is 100 js\nassert strictEqual(getGrade(100), \"A+\");\nYour getGrade function should return \"A\" if the score is between 90 and 99 js\nassert strictEqual(getGrade(90), \"A\");\nassert strictEqual(getGrade(94), \"A\");\nassert strictEqual(getGrade(99), \"A\");\nYour getGrade function should return \"B\" if the score is between 80 and 89 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7878,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-gradebook-app\\66bb6a9c2dd58b73cd759034.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "2be9e4b807df10568e693be210765aaf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-gradebook-app\\66bb6a9c2dd58b73cd759034.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "strictEqual(getAverage([38, 42, 46, 50, 54, 58, 62, 66, 70, 74]), 56); You should have a function named getGrade js assert isFunction(getGrade); Your getGrade function should return \"A+\" if the score is 100 js assert strictEqual(getGrade(100), \"A+\"); Your getGrade function should return \"A\" if the score is between 90 and 99 js assert strictEqual(getGrade(90), \"A\"); assert strictEqual(getGrade(94), \"A\"); assert strictEqual(getGrade(99), \"A\"); Your getGrade function should return \"B\" if the score is between 80 and 89 js assertstrictEqual(getGrade(80), \"B\");\nassert strictEqual(getGrade(83), \"B\");\nassert strictEqual(getGrade(88), \"B\");\nYour getGrade function should return \"C\" if the score is between 70 and 79 js\nassert strictEqual(getGrade(70), \"C\");\nassert strictEqual(getGrade(75), \"C\");\nassert strictEqual(getGrade(79), \"C\");\nYour getGrade function should return \"D\" if the score is between 60 and 69 js\nassert strictEqual(getGrade(60), \"D\");\nassert strictEqual(getGrade(63), \"D\");\nassert strictEqual(getGrade(68), \"D\");\nYour getGrade function should return \"F\" if the score is between 0 and 59 js\nassert strictEqual(getGrade(0), \"F\");\nassert strictEqual(getGrade(30), \"F\");\nassert strictEqual(getGrade(43), \"F\");\nassert strictEqual(getGrade(59), \"F\");\nYou should have a function named hasPassingGrade js\nassert isFunction(hasPassingGrade);\nYour hasPassingGrade function should return a boolean value js\nassert isBoolean(hasPassingGrade(100));\nYour hasPassingGrade function should return true if the grade is an \"A\" js\nassert isTrue(hasPassingGrade(100));\nYour hasPassingGrade function should return false if the grade is an \"F\" js\nassert isFalse(hasPassingGrade(53));\nYour hasPassingGrade function should return true for all passing grades js\nassert isTrue(hasPassingGrade(87));\nassert isTrue(hasPassingGrade(60));\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7878,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-gradebook-app\\66bb6a9c2dd58b73cd759034.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "e65a86c597ce79e2c64886e5fe328aa3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-gradebook-app\\66bb6a9c2dd58b73cd759034.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert strictEqual(getGrade(30), \"F\"); assert strictEqual(getGrade(43), \"F\"); assert strictEqual(getGrade(59), \"F\"); You should have a function named hasPassingGrade js assert isFunction(hasPassingGrade); Your hasPassingGrade function should return a boolean value js assert isBoolean(hasPassingGrade(100)); Your hasPassingGrade function should return true if the grade is an \"A\" js assert isTrue(hasPassingGrade(100)); Your hasPassingGrade function should return false if the grade is an \"F\" js assert isFalse(hasPassingGrade(53)); Your hasPassingGrade function should return true for all passing grades js assert isTrue(hasPassingGrade(87)); assert isTrue(hasPassingGrade(60)); assertisTrue(hasPassingGrade(73));\nassert isTrue(hasPassingGrade(96));\nYou should have a function named studentMsg js\nassert isFunction(studentMsg);\nstudentMsg([92, 88, 12, 77, 57, 100, 67, 38, 97, 89], 37) should return the following message: \"Class average: 71 7 Your grade: F You failed the course \" js\nassert strictEqual(studentMsg([92, 88, 12, 77, 57, 100, 67, 38, 97, 89], 37), \"Class average: 71 7 Your grade: F You failed the course \");\nstudentMsg([56, 23, 89, 42, 75, 11, 68, 34, 91, 19], 100) should return the following message: \"Class average: 50 8 Your grade: A+ You passed the course \" js\nassert strictEqual(studentMsg([56, 23, 89, 42, 75, 11, 68, 34, 91, 19], 100), \"Class average: 50 8 Your grade: A+ You passed the course \");\nstudentMsg([12, 22, 32, 42, 52, 62, 72, 92], 85) should return the following message: \"Class average: 48 25 Your grade: B You passed the course \" js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7878,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-gradebook-app\\66bb6a9c2dd58b73cd759034.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "af361c819497193858fd0ec02cc693ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-gradebook-app\\66bb6a9c2dd58b73cd759034.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "11, 68, 34, 91, 19], 100) should return the following message: \"Class average: 50 8 Your grade: A+ You passed the course \" js assert strictEqual(studentMsg([56, 23, 89, 42, 75, 11, 68, 34, 91, 19], 100), \"Class average: 50 8 Your grade: A+ You passed the course \"); studentMsg([12, 22, 32, 42, 52, 62, 72, 92], 85) should return the following message: \"Class average: 48 25 Your grade: B You passed the course \" js assertstrictEqual(studentMsg([12, 22, 32, 42, 52, 62, 72, 92], 85), \"Class average: 48 25 Your grade: B You passed the course \");\nstudentMsg([15, 25, 35, 45, 55, 60, 70, 60], 75) should return the following message: \"Class average: 45 625 Your grade: C You passed the course \" js\nassert strictEqual(studentMsg([15, 25, 35, 45, 55, 60, 70, 60], 75), \"Class average: 45 625 Your grade: C You passed the course \");\nYour studentMsg function should return the correct message based on the student's score and the class average js\nassert strictEqual(studentMsg([33, 44, 55, 66, 77, 88, 99, 100], 92), \"Class average: 70 25 Your grade: A You passed the course \");\nassert strictEqual(studentMsg([33, 44, 55, 66, 77, 88, 99, 100], 57), \"Class average: 70 25 Your grade: F You failed the course \");\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nfunction getAverage(scores) {\nlet sum = 0;\nfor (const score of scores) {\nsum += score;\n}\nreturn sum / scores",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7878,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-gradebook-app\\66bb6a9c2dd58b73cd759034.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "b0371d8515a0ca0cc30b0aab8cebee75",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-gradebook-app\\66bb6a9c2dd58b73cd759034.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "and the class average js assert strictEqual(studentMsg([33, 44, 55, 66, 77, 88, 99, 100], 92), \"Class average: 70 25 Your grade: A You passed the course \"); assert strictEqual(studentMsg([33, 44, 55, 66, 77, 88, 99, 100], 57), \"Class average: 70 25 Your grade: F You failed the course \"); --seed-- --seed-contents-- ```js ``` --solutions-- ```js function getAverage(scores) { let sum = 0; for (const score of scores) { sum += score; } return sum / scoreslength;\n}\nfunction getGrade(score) {\nif (score === 100) {\nreturn \"A+\";\n} else if (score >= 90) {\nreturn \"A\";\n} else if (score >= 80) {\nreturn \"B\";\n} else if (score >= 70) {\nreturn \"C\";\n} else if (score >= 60) {\nreturn \"D\";\n} else {\nreturn \"F\";\n}\n}\nfunction hasPassingGrade(score) {\nreturn getGrade(score) == \"F\";\n}\nfunction studentMsg(totalScores, studentScore) {\nlet average = getAverage(totalScores);\nlet grade = getGrade(studentScore);\nreturn `Class average: ${average} Your grade: ${grade} You ${\nhasPassingGrade(studentScore) \"passed\" : \"failed\"\n} the course `;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7878,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-gradebook-app\\66bb6a9c2dd58b73cd759034.md",
      "source_type": "git_repo"
    },
    "token_count": 316,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "c98b136f0777b9e480685f6a7b483bd5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-html-entitiy-converter\\a6b0bb188d873cb2c8729495.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a6b0bb188d873cb2c8729495\ntitle: Implement an HTML Entity Converter\nchallengeType: 26\ndashedName: implement-an-html-entity-converter\n--description--\nThis lab is about converting special characters in a string with their corresponding HTML entities Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a convertHTML function that accepts a string as an argument The convertHTML function should return a new string by converting special characters in the argument string to their corresponding HTML entities & should be converted to &amp; < should be converted to &lt; > should be converted to &gt; \" should be converted to &quot; ' should be converted to &apos; --hints--\nYou should have a convertHTML function js\nassert isFunction(convertHTML);\nconvertHTML(\"Dolce & Gabbana\") should return the string Dolce &amp; Gabbana js\nassert match(convertHTML('Dolce & Gabbana'), /Dolce &amp; Gabbana/);\nconvertHTML(\"Hamburgers < Pizza < Tacos\") should return the string Hamburgers &lt; Pizza &lt; Tacos js\nassert match(\nconvertHTML('Hamburgers < Pizza < Tacos'),\n/Hamburgers &lt; Pizza &lt; Tacos/\n);\nconvertHTML(\"Sixty > twelve\") should return the string Sixty &gt; twelve js\nassert match(convertHTML('Sixty > twelve'), /Sixty &gt; twelve/);\nconvertHTML('Stuff in \"quotation marks\"') should return the string Stuff in &quot;quotation marks&quot; js\nassert match(\nconvertHTML('Stuff in \"quotation marks\"'),\n/Stuff in &quot;quotation marks&quot;/\n);\nconvertHTML(\"Schindler's List\") should return the string Schindler&apos;s List js\nassert match(convertHTML(\"Schindler's List\"), /Schindler&apos;s List/);\nconvertHTML(\"<>\") should return the string &lt;&gt; js\nassert match(convertHTML('<>'), /&lt;&gt;/);\nconvertHTML(\"abc\") should return the string abc js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2351,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-html-entitiy-converter\\a6b0bb188d873cb2c8729495.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "31726a1c1a4e529271628c56b3f51a0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-html-entitiy-converter\\a6b0bb188d873cb2c8729495.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Tacos/ ); convertHTML(\"Sixty > twelve\") should return the string Sixty &gt; twelve js assert match(convertHTML('Sixty > twelve'), /Sixty &gt; twelve/); convertHTML('Stuff in \"quotation marks\"') should return the string Stuff in &quot;quotation marks&quot; js assert match( convertHTML('Stuff in \"quotation marks\"'), /Stuff in &quot;quotation marks&quot;/ ); convertHTML(\"Schindler's List\") should return the string Schindler&apos;s List js assert match(convertHTML(\"Schindler's List\"), /Schindler&apos;s List/); convertHTML(\"<>\") should return the string &lt;&gt; js assert match(convertHTML('<>'), /&lt;&gt;/); convertHTML(\"abc\") should return the string abc js assertstrictEqual(convertHTML('abc'), 'abc');\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nconst map = {\n'&': '&',\n'<': '<',\n'>': '>',\n'\"': '\"',\n\"'\": '''\n};\nfunction convertHTML(str) {\nreturn str replace(/[&<>\"']/g, function(char) {\nreturn map[char];\n});\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2351,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-html-entitiy-converter\\a6b0bb188d873cb2c8729495.md",
      "source_type": "git_repo"
    },
    "token_count": 256,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4aa149452f002e71491e9d74745ac9cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-hash-table\\67ed03ac474c48692f41749e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67ed03ac474c48692f41749e\ntitle: Build a Hash Table\nchallengeType: 27\ndashedName: build-a-hash-table\n--description--\nIn this lab, you will build a hash table from scratch A hash table is a data structure that stores key-value pairs A hash table works by taking the key as an input and then hashing this key according to a specific hashing function For the purpose of this lab, the hashing function will be simple: it will sum the Unicode values of each character in the key The hash value will then be used as the actual key to store the associated value The same hash value would also be used to retrieve and delete the value associated with the key Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should define a class named HashTable with a collection attribute initialized to an empty dictionary when a new instance of HashTable is created The collection dictionary should store key-value pairs based on the hashed value of the key The HashTable class should have four instance methods: hash, add, remove, and lookup The hash method should:\nTake a string as a parameter Return a hashed value computed as the sum of the Unicode (ASCII) values of each character in the string You can use the ord function for this computation The add method should:\nTake two arguments representing a key-value pair, and compute the hash of the key Use the computed hash value to store the key-value pair inside the collection dictionary If multiple keys produce the same hash value, their key-value pairs should be stored in a nested dictionary under the same hash value The remove method should:\nTake a key as its argument and compute its hash Confirm if the key exists in the collection Remove the corresponding key-value pair from the hash table If the key does not exist in the collection, it should not raise an error or remove anything The lookup method should:\nTake a key as its argument Compute the hash of the key, and return the corresponding value stored inside the hash table If the key does not exist in the collection, it should return None --hints--\nYou should define a HashTable class js\n({\ntest: () => assert(runPython(`\n_Node(_code) has_class(\"HashTable\")\n`))\n})\nWhen a new instance of the HashTable class is created, its collection attribute should be initialized to an empty dictionary js\n({\ntest: () => runPython(`\nht = HashTable()\nassert ht",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-hash-table\\67ed03ac474c48692f41749e.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "d85d5cd1ba56ee9e859a7b4c6fcef3b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-hash-table\\67ed03ac474c48692f41749e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the hash of the key, and return the corresponding value stored inside the hash table If the key does not exist in the collection, it should return None --hints-- You should define a HashTable class js ({ test: () => assert(runPython(` _Node(_code) has_class(\"HashTable\") `)) }) When a new instance of the HashTable class is created, its collection attribute should be initialized to an empty dictionary js ({ test: () => runPython(` ht = HashTable() assert htcollection == {}\n`)\n})\nThe HashTable class should have a hash method js\n({test: () => {assert(runPython(`_Node(_code) find_class('HashTable') has_function('hash')`))}})\nThe hash method should take a string as a parameter js\n({ test: () => assert(runPython(`\nimport inspect\nht= HashTable()\nsig = inspect signature(ht hash)\nlen(sig parameters) == 1\n`))\n})\nThe hash method should take a string as its argument and return the sum of the Unicode values of each character in the string ``js\n({\ntest: () => runPython(\nht = HashTable()\nhash_result = ht hash(\"fcc\")\nassert hash_result == 300\n# prevent hardcoding\nassert ht hash(\"golf\") == 424\nassert ht hash(\"read\") == 412\n`) })\n```\nThe HashTable class should have an add method js\n({test: () => {assert(runPython(`_Node(_code) find_class('HashTable') has_function('add')`))}})\nThe add method should take a key and value as parameters js\n({ test: () => assert(runPython(`\nimport inspect\nht= HashTable()\nsig = inspect signature(ht add)\nlen(sig parameters) == 2\n`))\n})\nThe HashTable class should have a remove method js\n({test: () => {assert(runPython(`_Node(_code) find_class('HashTable') has_function('remove')`))}})\nThe remove method should take a key as a parameter js\n({ test: () => assert(runPython(`\nimport inspect\nht= HashTable()\nsig = inspect signature(ht remove)\nlen(sig parameters) == 1\n`))\n})\nWhen you try to remove a key that does not exist in the collection, it should not raise an error or remove anything ``js\n({\ntest: () => runPython(\nht = HashTable()\nht",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-hash-table\\67ed03ac474c48692f41749e.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "1e1b093c1a917713c2c7518b1aa6ff3c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-hash-table\\67ed03ac474c48692f41749e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should have a remove method js ({test: () => {assert(runPython(`_Node(_code) find_class('HashTable') has_function('remove')`))}}) The remove method should take a key as a parameter js ({ test: () => assert(runPython(` import inspect ht= HashTable() sig = inspect signature(ht remove) len(sig parameters) == 1 `)) }) When you try to remove a key that does not exist in the collection, it should not raise an error or remove anything ``js ({ test: () => runPython( ht = HashTable() htadd(\"rose\", \"flower\")\nindex = ht hash(\"rose\")\noriginal = ht collection copy()\nht remove(\"tulip\")\nassert ht collection == original\nassert \"rose\" in ht collection[index]\nassert \"tulip\" not in ht collection get(index, {})\n`)\n})\n```\nIf multiple keys hash to the same index, the remove method should only delete the specific key-value pair and not the entire dictionary at that index ``js\n({\ntest: () => runPython(\nht = HashTable()\nht add(\"rose\", \"flower\")\nht add(\"sore\", \"pain\")  # \"rose\" and \"sore\" both hash to the same index\nindex = ht hash(\"rose\")\nht remove(\"rose\")\nassert index in ht collection\nassert \"rose\" not in ht collection[index]\nassert \"sore\" in ht collection[index]\nassert ht collection[index][\"sore\"] == \"pain\"\n`)\n})\n```\nThe HashTable class should have a lookup method js\n({test: () => {assert(runPython(`_Node(_code) find_class('HashTable') has_function('lookup')`))}})\nThe lookup method should take a key as the parameter js\n({ test: () => assert(runPython(`\nimport inspect\nht= HashTable()\nsig = inspect signature(ht lookup)\nlen(sig parameters) == 1\n`))\n})\nHashTable hash('golf') should return 424 ``js\n({\ntest: () => runPython(\nht = HashTable()\nhash_result = ht hash(\"golf\")\nassert hash_result == 424\n# prevent hardcoding\nassert ht hash(\"dear\") == 412\nassert ht hash(\"cat\") == 312\n`)\n})\n```\nHashTable add('golf', 'sport') should add the key-value pair to the collection at key 424",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-hash-table\\67ed03ac474c48692f41749e.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "c191bd0100e54aa30ff2be0210b02bbb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-hash-table\\67ed03ac474c48692f41749e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "as the parameter js ({ test: () => assert(runPython(` import inspect ht= HashTable() sig = inspect signature(ht lookup) len(sig parameters) == 1 `)) }) HashTable hash('golf') should return 424 ``js ({ test: () => runPython( ht = HashTable() hash_result = ht hash(\"golf\") assert hash_result == 424 # prevent hardcoding assert ht hash(\"dear\") == 412 assert ht hash(\"cat\") == 312 `) }) ``` HashTable add('golf', 'sport') should add the key-value pair to the collection at key 424```js\n({\ntest: () => runPython(`\nht = HashTable()\nht add(\"golf\", \"sport\")\nexpected_value = {424: {'golf': 'sport'}}\nassert ht collection == expected_value\n`)\n})\n```\nHashTable add('dear', 'friend') and HashTable add('read', 'book') should add both the key-value pairs to the collection at index 412 as a nested dictionary ``js\n({\ntest: () => runPython(\nht = HashTable()\nht add(\"dear\", \"friend\")\nht add(\"read\", \"book\")\nexpected_value = {\n\"dear\": \"friend\",\n\"read\": \"book\"\n}\nassert ht collection get(412) == expected_value\n`)\n})\n```\nWhen a key exists in the hash table, the remove() method should remove the given key and its corresponding value from the collection ``js\n({\ntest: () => runPython(\nht = HashTable()\nht add(\"golf\", \"sport\")\nexpected_value_before_removal = {\n\"golf\": \"sport\"\n}\nindex = ht hash(\"golf\")\nassert ht collection get(index) == expected_value_before_removal\nht remove(\"golf\")\nassert \"golf\" not in ht collection get(index, {})\n`)\n})\n```\nWhen the 'golf', 'sport' key-value pair exists in the hash table, HashTable lookup('golf') should return sport ``js\n({\ntest: () => runPython(\nht = HashTable()\nht add(\"golf\", \"sport\")\nexpected_value = \"sport\"\nassert ht lookup(\"golf\") == expected_value\n`)\n})\n```\nWhen the 'golf', 'sport' key-value pair does not exist in the collection, HashTable lookup('golf') should return None",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-hash-table\\67ed03ac474c48692f41749e.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "8fa1f79e1ce56cb0ec9b3b0742a3c9f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-hash-table\\67ed03ac474c48692f41749e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "hash(\"golf\") assert ht collection get(index) == expected_value_before_removal ht remove(\"golf\") assert \"golf\" not in ht collection get(index, {}) `) }) ``` When the 'golf', 'sport' key-value pair exists in the hash table, HashTable lookup('golf') should return sport ``js ({ test: () => runPython( ht = HashTable() ht add(\"golf\", \"sport\") expected_value = \"sport\" assert ht lookup(\"golf\") == expected_value `) }) ``` When the 'golf', 'sport' key-value pair does not exist in the collection, HashTable lookup('golf') should return None``js\n({\ntest: () => runPython(\nht = HashTable()\nassert ht lookup(\"golf\") is None\n`) })\n```\nWhen you add ('rose', 'flower') to the hash table, its collection attribute should look like this: { 441: { 'rose': 'flower' }} ``js\n({\ntest: () => runPython(\nht = HashTable()\nht add(\"rose\", \"flower\")\nexpected_value = {\n\"rose\": \"flower\"\n}\nassert ht collection get(441) == expected_value\n# prevent hardcoding\nht2 = HashTable()\nht2 add(\"kebab\", \"food\")\nexpected_value = {\n\"kebab\": \"food\"\n}\nassert ht2 collection get(501) == expected_value\n`)\n})\n```\nWhen you add a key that hashes to the same value as an existing key, like fcc and cfc, the collection should look like this: { 300: { 'fcc': 'coding', 'cfc':  'chemical' }} ``js\n({\ntest: () => runPython(\nht = HashTable()\nht add(\"fcc\", \"coding\")\nht add(\"cfc\", \"chemical\")\nexpected_value = {\n\"fcc\": \"coding\",\n\"cfc\": \"chemical\"\n}\nassert ht collection get(300) == expected_value\n# prevent hardcoding\nht2 = HashTable()\nht2 add(\"cat\", \"animal\")\nht2 add(\"act\", \"verb\")\nexpected_value = {\n\"cat\": \"animal\",\n\"act\": \"verb\"\n}\nassert ht2 collection",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-hash-table\\67ed03ac474c48692f41749e.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "eaf8273079094769abc5e72c2a866f91",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-hash-table\\67ed03ac474c48692f41749e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "same value as an existing key, like fcc and cfc, the collection should look like this: { 300: { 'fcc': 'coding', 'cfc': 'chemical' }} ``js ({ test: () => runPython( ht = HashTable() ht add(\"fcc\", \"coding\") ht add(\"cfc\", \"chemical\") expected_value = { \"fcc\": \"coding\", \"cfc\": \"chemical\" } assert ht collection get(300) == expected_value # prevent hardcoding ht2 = HashTable() ht2 add(\"cat\", \"animal\") ht2 add(\"act\", \"verb\") expected_value = { \"cat\": \"animal\", \"act\": \"verb\" } assert ht2 collectionget(312) == expected_value\n`)\n})\n```\n--seed--\n--seed-contents--\n```py\n```\n--solutions--\n```py\nclass HashTable:\ndef init(self):\nself collection = {}\ndef hash(self, string):\nhashed = 0\nfor char in string:\nhashed += ord(char)\nreturn hashed\ndef add(self, key, val):\nthe_hash = self hash(key)\nif the_hash not in self collection:\nself collection[the_hash] = {}\nself collection[the_hash][key] = val\ndef remove(self, key):\nthe_hash = self hash(key)\nif the_hash in self collection and key in self collection[the_hash]:\ndel self collection[the_hash][key]\nif not self collection[the_hash]:\ndel self collection[the_hash]\ndef lookup(self, key):\nthe_hash = self hash(key)\nif the_hash in self collection and key in self collection[the_hash]:\nreturn self collection[the_hash][key]\nreturn None\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9850,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-hash-table\\67ed03ac474c48692f41749e.md",
      "source_type": "git_repo"
    },
    "token_count": 352,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "7efb3204b8f76c5334860455d256dfa1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
    "source_type": "git_repo",
    "title": "House Painting",
    "content": "id: 66d6a7a3e1aa411e94bf2346\ntitle: Build a House Painting\nchallengeType: 25\ndashedName: build-a-house-painting\ndemoType: onClick\n--description--\nIn this lab, you will use HTML to create the structure of a house Then, you will use CSS positioning to arrange the elements of your house like windows and doors Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a div with an id of house Your #house should have a position set to relative so its children can be positioned with respect to it Your #house should have a width of 500px and a height of 400px Your #house should have a background color and a border set You should have five div elements inside #house with the following id values: chimney, roof, window-1, window-2, and door All of the immediate children of the #house should have a position of absolute #roof, #chimney, #window-1, #window-2, and #door should have a width, height, border, and background color set Your #roof should have a top value of 0 Your #door should be placed at the bottom of your house Your windows should be placed below your #roof and at least higher than one third of your #door's height Both your windows and your door should have either left or right set to a value that places them within the house borders Your #chimney should have a top value that puts it at the top of your #house Your #chimney should have a z-index that puts it behind the house Note: Be sure to link your stylesheet in your HTML to apply your CSS --hints--\nYou should have a div with an id of house js\nassert exists(document querySelector(\"div#house\"));\nYou should target #house and set its position to relative js\nassert equal(new __helpers CSSHelp(document) getStyle('#house') getPropertyValue(\"position\"), \"relative\");\nYou should target #house and set its border property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#house\") getPropertyValue(\"border\"));\nYou should target #house and set its background-color property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#house\") getPropertyValue(\"background-color\"));\nYou should target #house and set its width to 500px",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16307,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 11
  },
  {
    "id": "acc589729112e893d95556c8c2f029d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
    "source_type": "git_repo",
    "title": "House Painting",
    "content": "CSS --hints-- You should have a div with an id of house js assert exists(document querySelector(\"div#house\")); You should target #house and set its position to relative js assert equal(new __helpers CSSHelp(document) getStyle('#house') getPropertyValue(\"position\"), \"relative\"); You should target #house and set its border property js assert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#house\") getPropertyValue(\"border\")); You should target #house and set its background-color property js assert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#house\") getPropertyValue(\"background-color\")); You should target #house and set its width to 500pxjs\nassert equal(new __helpers CSSHelp(document) getStyle(\"#house\") getPropertyValue(\"width\"), \"500px\")\nYou should target #house and set its height to 400px js\nassert equal(new __helpers CSSHelp(document) getStyle('#house') getPropertyValue(\"height\"), \"400px\")\nYou should have a div with an id of chimney within the #house js\nassert exists(document querySelector(\"div#house div#chimney\"));\n#chimney should have the position property set to absolute js\nassert equal(getComputedStyle(document querySelector(\"#chimney\")) getPropertyValue(\"position\"), \"absolute\");\nYou should target #chimney and set its width property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#chimney\") getPropertyValue(\"width\"));\nYou should target #chimney and set its height property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#chimney\") getPropertyValue(\"height\"));\nYou should target #chimney and set its border property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#chimney\") getPropertyValue(\"border\"));\nYou should target #chimney and set its background-color property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#chimney\") getPropertyValue(\"background-color\"));\nYou should have a div with an id of roof within the #house js\nassert exists(document querySelector(\"div#house  div#roof\"));\n#roof should have the position property set to absolute js\nassert equal(getComputedStyle(document querySelector(\"#roof\")) getPropertyValue(\"position\"), \"absolute\");\nYou should target #roof and set its width property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#roof\")",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16307,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 11
  },
  {
    "id": "eeb65a811dace9a8b9132b24e05b0988",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
    "source_type": "git_repo",
    "title": "House Painting",
    "content": "and set its border property js assert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#chimney\") getPropertyValue(\"border\")); You should target #chimney and set its background-color property js assert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#chimney\") getPropertyValue(\"background-color\")); You should have a div with an id of roof within the #house js assert exists(document querySelector(\"div#house div#roof\")); #roof should have the position property set to absolute js assert equal(getComputedStyle(document querySelector(\"#roof\")) getPropertyValue(\"position\"), \"absolute\"); You should target #roof and set its width property js assert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#roof\")getPropertyValue(\"width\"));\nYou should target #roof and set its height property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#roof\") getPropertyValue(\"height\"));\nYou should target #roof and set its border property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#roof\") getPropertyValue(\"border\"));\nYou should target #roof and set its background-color property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#roof\") getPropertyValue(\"background-color\"));\nYou should have a div with an id of window-1 within the #house js\nassert exists(document querySelector(\"div#house  div#window-1\"));\n#window-1 should have the position property set to absolute js\nassert equal(getComputedStyle(document querySelector(\"#window-1\")) getPropertyValue(\"position\"), \"absolute\");\nYou should target #window-1 and set its width property js\nconst window1 = new __helpers CSSHelp(document) getStyle(\"#window-1\") getPropertyValue(\"width\");\nconst windows = new __helpers CSSHelp(document) getStyle(\"#window-1, #window-2\") getPropertyValue(\"width\") || new __helpers CSSHelp(document) getStyle(\"#window-2, #window-1\") getPropertyValue(\"width\");\nassert isNotEmpty(window1 || windows);\nYou should target #window-1 and set its height property js\nconst window1 = new __helpers CSSHelp(document) getStyle(\"#window-1\") getPropertyValue(\"height\");\nconst windows = new __helpers CSSHelp(document) getStyle(\"#window-1, #window-2\") getPropertyValue(\"height\") || new __helpers CSSHelp(document) getStyle(\"#window-2, #window-1\") getPropertyValue(\"height\");\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16307,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 2,
    "total_chunks": 11
  },
  {
    "id": "9feff2a5e53316f5fd68acc2b95e13d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
    "source_type": "git_repo",
    "title": "House Painting",
    "content": "querySelector(\"#window-1\")) getPropertyValue(\"position\"), \"absolute\"); You should target #window-1 and set its width property js const window1 = new __helpers CSSHelp(document) getStyle(\"#window-1\") getPropertyValue(\"width\"); const windows = new __helpers CSSHelp(document) getStyle(\"#window-1, #window-2\") getPropertyValue(\"width\") || new __helpers CSSHelp(document) getStyle(\"#window-2, #window-1\") getPropertyValue(\"width\"); assert isNotEmpty(window1 || windows); You should target #window-1 and set its height property js const window1 = new __helpers CSSHelp(document) getStyle(\"#window-1\") getPropertyValue(\"height\"); const windows = new __helpers CSSHelp(document) getStyle(\"#window-1, #window-2\") getPropertyValue(\"height\") || new __helpers CSSHelp(document) getStyle(\"#window-2, #window-1\") getPropertyValue(\"height\"); assertisNotEmpty(window1 || windows);\nYou should target #window-1 and set its border property js\nconst window1 = new __helpers CSSHelp(document) getStyle(\"#window-1\") getPropertyValue(\"border\");\nconst windows = new __helpers CSSHelp(document) getStyle(\"#window-1, #window-2\") getPropertyValue(\"border\") || new __helpers CSSHelp(document) getStyle(\"#window-2, #window-1\") getPropertyValue(\"border\");\nassert isNotEmpty(window1 || windows);\nYou should target #window-1 and set its background-color property js\nconst window1 = new __helpers CSSHelp(document) getStyle(\"#window-1\") getPropertyValue(\"background-color\");\nconst windows = new __helpers CSSHelp(document) getStyle(\"#window-1, #window-2\") getPropertyValue(\"background-color\") || new __helpers CSSHelp(document) getStyle(\"#window-2, #window-1\") getPropertyValue(\"background-color\");\nassert isNotEmpty(window1 || windows);\nYou should have a div with an id of window-2 within the #house js\nassert exists(document querySelector(\"div#house  div#window-2\"));\n#window-2 should have the position property set to absolute js\nassert equal(getComputedStyle(document querySelector(\"#window-2\")) getPropertyValue(\"position\"), \"absolute\");\nYou should target #window-2 and set its width property js\nconst window2 = new __helpers CSSHelp(document) getStyle(\"#window-2\")",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16307,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 11
  },
  {
    "id": "e42e731a24c45922ea77653db7662270",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
    "source_type": "git_repo",
    "title": "House Painting",
    "content": "= new __helpers CSSHelp(document) getStyle(\"#window-1\") getPropertyValue(\"background-color\"); const windows = new __helpers CSSHelp(document) getStyle(\"#window-1, #window-2\") getPropertyValue(\"background-color\") || new __helpers CSSHelp(document) getStyle(\"#window-2, #window-1\") getPropertyValue(\"background-color\"); assert isNotEmpty(window1 || windows); You should have a div with an id of window-2 within the #house js assert exists(document querySelector(\"div#house div#window-2\")); #window-2 should have the position property set to absolute js assert equal(getComputedStyle(document querySelector(\"#window-2\")) getPropertyValue(\"position\"), \"absolute\"); You should target #window-2 and set its width property js const window2 = new __helpers CSSHelp(document) getStyle(\"#window-2\")getPropertyValue(\"width\");\nconst windows = new __helpers CSSHelp(document) getStyle(\"#window-1, #window-2\") getPropertyValue(\"width\") || new __helpers CSSHelp(document) getStyle(\"#window-2, #window-1\") getPropertyValue(\"width\");\nassert isNotEmpty(window2 || windows);\nYou should target #window-2 and set its height property js\nconst window2 = new __helpers CSSHelp(document) getStyle(\"#window-2\") getPropertyValue(\"height\");\nconst windows = new __helpers CSSHelp(document) getStyle(\"#window-1, #window-2\") getPropertyValue(\"height\") || new __helpers CSSHelp(document) getStyle(\"#window-2, #window-1\") getPropertyValue(\"height\");\nassert isNotEmpty(window2 || windows);\nYou should target #window-2 and set its border property js\nconst window2 = new __helpers CSSHelp(document) getStyle(\"#window-2\") getPropertyValue(\"border\");\nconst windows = new __helpers CSSHelp(document) getStyle(\"#window-1, #window-2\") getPropertyValue(\"border\") || new __helpers CSSHelp(document) getStyle(\"#window-2, #window-1\") getPropertyValue(\"border\");\nassert isNotEmpty(window2 || windows);\nYou should target #window-2 and set its background-color property js\nconst window2 = new __helpers CSSHelp(document) getStyle(\"#window-2\") getPropertyValue(\"background-color\");\nconst windows = new __helpers CSSHelp(document) getStyle(\"#window-1, #window-2\") getPropertyValue(\"background-color\") || new __helpers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16307,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 4,
    "total_chunks": 11
  },
  {
    "id": "ede3ca779f791c8e16f86f41f47b4bd0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
    "source_type": "git_repo",
    "title": "House Painting",
    "content": "CSSHelp(document) getStyle(\"#window-2, #window-1\") getPropertyValue(\"height\"); assert isNotEmpty(window2 || windows); You should target #window-2 and set its border property js const window2 = new __helpers CSSHelp(document) getStyle(\"#window-2\") getPropertyValue(\"border\"); const windows = new __helpers CSSHelp(document) getStyle(\"#window-1, #window-2\") getPropertyValue(\"border\") || new __helpers CSSHelp(document) getStyle(\"#window-2, #window-1\") getPropertyValue(\"border\"); assert isNotEmpty(window2 || windows); You should target #window-2 and set its background-color property js const window2 = new __helpers CSSHelp(document) getStyle(\"#window-2\") getPropertyValue(\"background-color\"); const windows = new __helpers CSSHelp(document) getStyle(\"#window-1, #window-2\") getPropertyValue(\"background-color\") || new __helpersCSSHelp(document) getStyle(\"#window-2, #window-1\") getPropertyValue(\"background-color\");\nassert isNotEmpty(window2 || windows);\nYou should have a div with an id of door within the #house js\nassert exists(document querySelector(\"div#house  div#door\"));\n#door should have the position property set to absolute js\nassert equal(getComputedStyle(document querySelector(\"#door\")) getPropertyValue(\"position\"), \"absolute\");\nYou should target #door and set its width property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#door\") getPropertyValue(\"width\"));\nYou should target #door and set its height property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#door\") getPropertyValue(\"height\"));\nYou should target #door and set its border property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#door\") getPropertyValue(\"border\"));\nYou should target #door and set its background-color property js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#door\") getPropertyValue(\"background-color\"));\nYour #roof should have the top property set to 0 js\nassert equal(getComputedStyle(document querySelector(\"#roof\")) getPropertyValue(\"top\"), \"0px\");\nYour #door should be placed at the bottom of the house js\nconst door = getComputedStyle(document querySelector(\"#door\"))\nconst doorBottom = Number(door getPropertyValue(\"bottom\") replace(\"px\", \"\"));\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16307,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 5,
    "total_chunks": 11
  },
  {
    "id": "d1c06785209a0eec1c421eb7dd326328",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
    "source_type": "git_repo",
    "title": "House Painting",
    "content": "CSSHelp(document) getStyle(\"#door\") getPropertyValue(\"height\")); You should target #door and set its border property js assert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#door\") getPropertyValue(\"border\")); You should target #door and set its background-color property js assert isNotEmpty(new __helpers CSSHelp(document) getStyle(\"#door\") getPropertyValue(\"background-color\")); Your #roof should have the top property set to 0 js assert equal(getComputedStyle(document querySelector(\"#roof\")) getPropertyValue(\"top\"), \"0px\"); Your #door should be placed at the bottom of the house js const door = getComputedStyle(document querySelector(\"#door\")) const doorBottom = Number(door getPropertyValue(\"bottom\") replace(\"px\", \"\")); assertstrictEqual(doorBottom, 0);\nYou should set either left or right on your #door and arrange it within the house borders js\nconst door = getComputedStyle(document querySelector(\"#door\"))\nconst doorLeft = Number(door getPropertyValue(\"left\") replace(\"px\", \"\"));\nconst doorRight = Number(door getPropertyValue(\"right\") replace(\"px\", \"\"));\nassert isAbove(doorLeft, 0);\nassert isAbove(doorRight, 0);\nYour #chimney should have a top value that puts it at the top of your #house js\nconst chimney = getComputedStyle(document querySelector(\"#chimney\"));\nassert approximately(parseFloat(chimney getPropertyValue(\"top\")), - parseFloat(chimney getPropertyValue(\"height\")), 2);\nYour #chimney should have a z-index that puts it behind the house js\nconst houseZIndex = getComputedStyle(document querySelector(\"#house\")) getPropertyValue(\"z-index\");\nconst chimneyZIndex = getComputedStyle(document querySelector(\"#chimney\")) getPropertyValue(\"z-index\");\nif (houseZIndex === \"auto\") {\nassert isBelow(Number(chimneyZIndex), 0)\n} else {\nassert isBelow(Number(chimneyZIndex), Number(houseZIndex));\n}\nYour windows should be placed below your #roof and at least higher than one third of your #door's height js\nconst window1 = getComputedStyle(document querySelector(\"#window-1\"))\nconst window2 = getComputedStyle(document querySelector(\"#window-2\"))\nconst door = getComputedStyle(document querySelector(\"#door\"))\nconst roof = getComputedStyle(document querySelector(\"#roof\"))\nconst w1Top = Number(window1 getPropertyValue(\"top\") replace(\"px\", \"\"));\nconst w1Bottom = Number(window1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16307,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 6,
    "total_chunks": 11
  },
  {
    "id": "420237188632848485503fee20822bf7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
    "source_type": "git_repo",
    "title": "House Painting",
    "content": "= getComputedStyle(document querySelector(\"#house\")) getPropertyValue(\"z-index\"); const chimneyZIndex = getComputedStyle(document querySelector(\"#chimney\")) getPropertyValue(\"z-index\"); if (houseZIndex === \"auto\") { assert isBelow(Number(chimneyZIndex), 0) } else { assert isBelow(Number(chimneyZIndex), Number(houseZIndex)); } Your windows should be placed below your #roof and at least higher than one third of your #door's height js const window1 = getComputedStyle(document querySelector(\"#window-1\")) const window2 = getComputedStyle(document querySelector(\"#window-2\")) const door = getComputedStyle(document querySelector(\"#door\")) const roof = getComputedStyle(document querySelector(\"#roof\")) const w1Top = Number(window1 getPropertyValue(\"top\") replace(\"px\", \"\")); const w1Bottom = Number(window1getPropertyValue(\"bottom\") replace(\"px\", \"\"));\nconst w2Top = Number(window2 getPropertyValue(\"top\") replace(\"px\", \"\"));\nconst w2Bottom = Number(window2 getPropertyValue(\"bottom\") replace(\"px\", \"\"));\nconst doorHeight = Number(door getPropertyValue(\"height\") replace(\"px\", \"\"));\nconst roofHeight = Number(roof getPropertyValue(\"height\") replace(\"px\", \"\"));\nassert isAbove(w1Top, roofHeight);\nassert isAbove(w1Bottom, doorHeight/3);\nassert isAbove(w2Top, roofHeight);\nassert isAbove(w2Bottom, doorHeight/3);\nYou should set either left or right on your windows and arrange them within the house borders js\nconst window1 = getComputedStyle(document querySelector(\"#window-1\"))\nconst window2 = getComputedStyle(document querySelector(\"#window-2\"))\nconst w1Left = Number(window1 getPropertyValue(\"left\") replace(\"px\", \"\"));\nconst w1Right = Number(window1 getPropertyValue(\"right\") replace(\"px\", \"\"));\nconst w2Left = Number(window2 getPropertyValue(\"left\") replace(\"px\", \"\"));\nconst w2Right = Number(window2 getPropertyValue(\"right\") replace(\"px\", \"\"));\nassert isAbove(w1Left, 0);\nassert isAbove(w1Right, 0);\nassert isAbove(w2Left, 0);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16307,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 7,
    "total_chunks": 11
  },
  {
    "id": "ccd2e041e7281389890a4f6c277c68af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
    "source_type": "git_repo",
    "title": "House Painting",
    "content": "roofHeight); assert isAbove(w1Bottom, doorHeight/3); assert isAbove(w2Top, roofHeight); assert isAbove(w2Bottom, doorHeight/3); You should set either left or right on your windows and arrange them within the house borders js const window1 = getComputedStyle(document querySelector(\"#window-1\")) const window2 = getComputedStyle(document querySelector(\"#window-2\")) const w1Left = Number(window1 getPropertyValue(\"left\") replace(\"px\", \"\")); const w1Right = Number(window1 getPropertyValue(\"right\") replace(\"px\", \"\")); const w2Left = Number(window2 getPropertyValue(\"left\") replace(\"px\", \"\")); const w2Right = Number(window2 getPropertyValue(\"right\") replace(\"px\", \"\")); assert isAbove(w1Left, 0); assert isAbove(w1Right, 0); assert isAbove(w2Left, 0); assertisAbove(w2Right, 0);\n--seed--\n--seed-contents--\n```html\nHouse Painting\n```\n```css\n```\n--solutions--\n```html\nHouse Painting\nWELCOME\n```\n```css\n* {\nbox-sizing: border-box;\n}\nbody {\nmargin: 0;\npadding: 0;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground: linear-gradient(\n#b3e6ff,\n#b3e6ff 60%,\ngreen 60%\n);\n}\n#house {\nflex: 0 0 auto;\nwidth: 500px;\nheight: 400px;\nposition: relative;\nbackground-color: #ff9980;\nborder: 6px solid #b35900;\n}\n#chimney {\nposition: absolute;\nwidth: 90px;\nheight: 100px;\ntop: -100px;\nleft: 65%;\nbackground: repeating-linear-gradient(\n#e6e6e6,\n#e6e6e6 10%,\nblack 10%,\nblack 12%\n);\nborder: 2px solid black;\nz-index: -1;\n}\n#smoke {\nwidth: 40px;\nheight: 40px;\nbackground-color: rgba(0,0,0,0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16307,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 8,
    "total_chunks": 11
  },
  {
    "id": "2e2341256ff3e542a648a4165fca11d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
    "source_type": "git_repo",
    "title": "House Painting",
    "content": "0; padding: 0; display: flex; justify-content: center; align-items: center; height: 100vh; background: linear-gradient( #b3e6ff, #b3e6ff 60%, green 60% ); } #house { flex: 0 0 auto; width: 500px; height: 400px; position: relative; background-color: #ff9980; border: 6px solid #b35900; } #chimney { position: absolute; width: 90px; height: 100px; top: -100px; left: 65%; background: repeating-linear-gradient( #e6e6e6, #e6e6e6 10%, black 10%, black 12% ); border: 2px solid black; z-index: -1; } #smoke { width: 40px; height: 40px; background-color: rgba(0,0,0,03);\nposition: absolute;\ntop: -20px;\nleft: 20px;\nborder-radius: 50%;\nbox-shadow: 0 -10px 10px 10px rgba(0,0,0,0 3);\nborder: none;\n}\n#roof {\nborder: 2px;\nwidth: 100%;\nheight: 110px;\nbackground-color: green;\nposition: absolute;\ntop: 0;\nbackground: repeating-linear-gradient(\n45deg,\n#b35900,\n#b35900 2%,\ntransparent 2%,\ntransparent 5%\n), repeating-linear-gradient(\n-45deg,\n#b35900,\n#b35900 2%,\n#ff9980 2%,\n#ff9980 5%\n)\n}\n#window-1, #window-2 {\nwidth: 100px;\nheight: 100px;\nbackground: linear-gradient(\nto right,\n#ffffb3,\n#ffffb3 48%,\n#b35900 48%,\n#b35900 52%,\n#ffffb3 52%,\n#ffffb3 100%\n);\nposition: absolute;\ntop: 40%;\nborder: 6px solid #b35900;\n}\n#window-1 {\nleft: 7 5%;\n}\n#window-2 {\nright: 7",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16307,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 9,
    "total_chunks": 11
  },
  {
    "id": "15abf68d29f0fd16787d274f2d797e7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
    "source_type": "git_repo",
    "title": "House Painting",
    "content": "border: 2px; width: 100%; height: 110px; background-color: green; position: absolute; top: 0; background: repeating-linear-gradient( 45deg, #b35900, #b35900 2%, transparent 2%, transparent 5% ), repeating-linear-gradient( -45deg, #b35900, #b35900 2%, #ff9980 2%, #ff9980 5% ) } #window-1, #window-2 { width: 100px; height: 100px; background: linear-gradient( to right, #ffffb3, #ffffb3 48%, #b35900 48%, #b35900 52%, #ffffb3 52%, #ffffb3 100% ); position: absolute; top: 40%; border: 6px solid #b35900; } #window-1 { left: 7 5%; } #window-2 { right: 75%;\n}\n#door {\nwidth: 130px;\nheight: 180px;\nposition: absolute;\nbottom: 0%;\nleft: 185px;\nbackground-color: #e6e6e6;\nborder: 6px solid #b35900;\ntransform: translateY(6px);\n}\n#door-knob {\nwidth: 20px;\nheight: 20px;\nbackground-color: #b35900;\nborder-radius: 50%;\nposition: absolute;\ntop: 50%;\nright: 5%;\n}\n#welcome {\nfont-family: sans-serif;\nfont-weight: bold;\nwidth: 130px;\nheight: 40px;\nposition: absolute;\nbottom: -47px;\nleft: 178px;\nbackground-color: #85e085;\nborder: 2px solid black;\ntransform: skewX(-20deg);\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16307,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-house-painting\\66d6a7a3e1aa411e94bf2346.md",
      "source_type": "git_repo"
    },
    "token_count": 402,
    "chunk_index": 10,
    "total_chunks": 11
  },
  {
    "id": "427acf18c94228b83051e2265bad63d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66d75dd0aa65a71600dc669b\ntitle: Build an Inventory Management Program\nchallengeType: 26\ndashedName: build-an-inventory-management-program\n--description--\nIn this lab, you will build an inventory management program that will allow you to add, update, find and remove products from the inventory You will use an array of objects to represent your inventory, where each object will have name and quantity as the keys Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should declare an empty array named inventory that will store product objects having a key name with the value of a lowercase string, and a key quantity with the value of an integer You should create a function named findProductIndex that takes the product name as its argument and returns the index of the corresponding product object inside the inventory array The function should always use the lowercase form of the product name to perform the search If the product is not found, the function should return -1 You should create a function named addProduct that takes a product object as its argument If the product is already present in the inventory, the addProduct function should update its quantity value and log to the console the product name followed by a space and quantity updated If the product is not present in the inventory, the addProduct function should push the product to the inventory array and log the product name to the console, followed by a space and added to inventory You should create a function named removeProduct that takes the product name and quantity as its arguments The removeProduct function should subtract the passed quantity from the corresponding product object inside the inventory and log the string Remaining <product-name> pieces: <product-quantity> to the console, where <product-name> should be replaced by the product name, and <product-quantity> should be replaced by the product quantity If the quantity after the subtraction is zero, removeProduct should remove the product object from the inventory If the quantity in the inventory is not enough to perform the subtraction, the removeProduct function should log the string Not enough <product-name> available, remaining pieces: <product-quantity> to the console If the product to remove is not present in the inventory, the removeProduct function should log <product-name> not found to the console Note: To prevent conflicts, keep only the logging mentioned in the user stories when running tests --hints--\nYou should declare an empty array named inventory js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12662,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "f2f9172eed88ef606a54d5ec2392ed4d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "in the inventory is not enough to perform the subtraction, the removeProduct function should log the string Not enough <product-name> available, remaining pieces: <product-quantity> to the console If the product to remove is not present in the inventory, the removeProduct function should log <product-name> not found to the console Note: To prevent conflicts, keep only the logging mentioned in the user stories when running tests --hints-- You should declare an empty array named inventory js assertmatch(__helpers removeJSComments(code), /(let|const|var)\\s+inventory\\s*=\\s*\\[\\s*\\]\\s*; /)\nYou should have a function named findProductIndex js\nassert isFunction(findProductIndex)\nfindProductIndex(\"flour\") should return the index of the object having name equal to \"flour\" inside the inventory array js\ninventory length = 0;\ninventory push({name: 'flour', quantity: 15});\ninventory push({name: 'rice', quantity: 10});\ninventory push({name: 'sugar', quantity: 5});\nassert strictEqual(findProductIndex(\"flour\"), 0);\nassert strictEqual(findProductIndex(\"rice\"), 1);\nassert strictEqual(findProductIndex(\"sugar\"), 2);\nfindProductIndex(\"FloUr\") should return the index of the object having name equal to \"flour\" inside the inventory array js\ninventory length = 0;\ninventory push({name: 'flour', quantity: 15});\ninventory push({name: 'rice', quantity: 10});\ninventory push({name: 'sugar', quantity: 5});\nassert strictEqual(findProductIndex(\"FLour\"), 0);\nassert strictEqual(findProductIndex(\"RICE\"), 1);\nassert strictEqual(findProductIndex(\"suGar\"), 2);\nfindProductIndex(\"Flour\") should return -1 when no object having name equal to \"flour\" is found inside the inventory array js\ninventory length = 0;\ninventory push({name: 'flour', quantity: 15});\ninventory push({name: 'rice', quantity: 10});\ninventory push({name: 'sugar', quantity: 5});\nassert strictEqual(findProductIndex(\"salt\"), -1)\nYou should have a function named addProduct js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12662,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "2aa5b2862c8378bfecb20ca8d8b64266",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= 0; inventory push({name: 'flour', quantity: 15}); inventory push({name: 'rice', quantity: 10}); inventory push({name: 'sugar', quantity: 5}); assert strictEqual(findProductIndex(\"FLour\"), 0); assert strictEqual(findProductIndex(\"RICE\"), 1); assert strictEqual(findProductIndex(\"suGar\"), 2); findProductIndex(\"Flour\") should return -1 when no object having name equal to \"flour\" is found inside the inventory array js inventory length = 0; inventory push({name: 'flour', quantity: 15}); inventory push({name: 'rice', quantity: 10}); inventory push({name: 'sugar', quantity: 5}); assert strictEqual(findProductIndex(\"salt\"), -1) You should have a function named addProduct js assertisFunction(addProduct)\naddProduct({name: \"FLOUR\", quantity: 5}) should add 5 to quantity value of the object having name equal to \"flour\" in the inventory array js\nconst temp = console log;\nconsole log = () => {};\ninventory length = 0;\ninventory push({name: 'flour', quantity: 15});\ninventory push({name: 'rice', quantity: 10});\ninventory push({name: 'sugar', quantity: 5});\naddProduct({name: 'Flour', quantity: 5});\naddProduct({name: 'RICE', quantity: 5});\naddProduct({name: 'SuGar', quantity: 5});\nconst expected = JSON stringify([{name: 'flour', quantity: 20}, {name: 'rice', quantity: 15}, {name: 'sugar', quantity: 10}]);\nconsole log = temp;\nassert equal(JSON stringify(inventory), expected)\naddProduct({name: \"FLOUR\", quantity: 5}) should log flour quantity updated when an object having name equal to \"flour\" is found in the inventory array js\nconst logArr = [];\nconst temp = console log;\nconsole log = function( args) {\nfor (const arg of args) {\nlogArr push(arg);\n}\n}\ninventory length = 0;\ninventory push({name: 'flour', quantity: 15});\ninventory push({name: 'rice', quantity: 10});\ninventory",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12662,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "43c1f39391bcf11f7450741d9d318c0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{name: 'sugar', quantity: 10}]); console log = temp; assert equal(JSON stringify(inventory), expected) addProduct({name: \"FLOUR\", quantity: 5}) should log flour quantity updated when an object having name equal to \"flour\" is found in the inventory array js const logArr = []; const temp = console log; console log = function( args) { for (const arg of args) { logArr push(arg); } } inventory length = 0; inventory push({name: 'flour', quantity: 15}); inventory push({name: 'rice', quantity: 10}); inventorypush({name: 'sugar', quantity: 5});\naddProduct({name: 'flOur', quantity: 5});\naddProduct({name: 'RICE', quantity: 5});\naddProduct({name: 'sugar', quantity: 5});\nconsole log = temp;\nassert lengthOf(logArr, 3);\nassert strictEqual(logArr[0], \"flour quantity updated\")\nassert strictEqual(logArr[1], \"rice quantity updated\")\nassert strictEqual(logArr[2], \"sugar quantity updated\")\naddProduct({name: \"FLOUR\", quantity: 5}) should push {name: \"flour\", quantity: 5} to the inventory array when no object having name equal to \"flour\" is found in the inventory js\nconst temp = console log;\nconsole log = () => {};\ninventory length = 0;\ninventory push({name: 'flour', quantity: 15});\ninventory push({name: 'rice', quantity: 10});\ninventory push({name: 'sugar', quantity: 5});\naddProduct({name: 'SALT', quantity: 8});\naddProduct({name: 'Spam', quantity: 1});\nconst expected = JSON stringify([{name: 'flour', quantity: 15}, {name: 'rice', quantity: 10}, {name: 'sugar', quantity: 5}, {name: 'salt', quantity: 8}, {name: 'spam', quantity: 1}]);\nconsole log = temp;\nassert equal(JSON stringify(inventory), expected);\naddProduct({name: \"FLOUR\", quantity: 5}) should log flour added to inventory when no object having name equal to \"flour\" is found in the inventory",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12662,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "70b49b908eff2dd272ec453c57d09d4a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'flour', quantity: 15}); inventory push({name: 'rice', quantity: 10}); inventory push({name: 'sugar', quantity: 5}); addProduct({name: 'SALT', quantity: 8}); addProduct({name: 'Spam', quantity: 1}); const expected = JSON stringify([{name: 'flour', quantity: 15}, {name: 'rice', quantity: 10}, {name: 'sugar', quantity: 5}, {name: 'salt', quantity: 8}, {name: 'spam', quantity: 1}]); console log = temp; assert equal(JSON stringify(inventory), expected); addProduct({name: \"FLOUR\", quantity: 5}) should log flour added to inventory when no object having name equal to \"flour\" is found in the inventoryjs\nconst logArr = [];\nconst temp = console log;\nconsole log = function( args) {\nfor (const arg of args) {\nlogArr push(arg);\n}\n}\ninventory length = 0;\ninventory push({name: 'flour', quantity: 15});\ninventory push({name: 'rice', quantity: 10});\ninventory push({name: 'sugar', quantity: 5});\naddProduct({name: 'SAlt', quantity: 5});\naddProduct({name: 'SPAM', quantity: 1});\nconsole log = temp;\nassert lengthOf(logArr, 2);\nassert equal(logArr[0], \"salt added to inventory\");\nassert equal(logArr[1], \"spam added to inventory\");\nYou should create a function named removeProduct js\nassert isFunction(removeProduct);\nremoveProduct(\"FLOUR\", 5) should log flour not found when no object having name equal to \"flour\" is found in the inventory array js\nconst logArr = [];\nconst temp = console log;\nconsole log = function( args) {\nfor (const arg of args) {\nlogArr push(arg);\n}\n}\ninventory length = 0;\ninventory push({name: 'flour', quantity: 15});\ninventory push({name: 'rice', quantity: 10});\ninventory push({name: 'sugar', quantity: 5});\nremoveProduct(\"SALT\", 2);\nremoveProduct(\"Spam\", 1);\nconsole log = temp;\nassert lengthOf(logArr, 2);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12662,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "6f8cab516a07485008f1154a731f5520",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should log flour not found when no object having name equal to \"flour\" is found in the inventory array js const logArr = []; const temp = console log; console log = function( args) { for (const arg of args) { logArr push(arg); } } inventory length = 0; inventory push({name: 'flour', quantity: 15}); inventory push({name: 'rice', quantity: 10}); inventory push({name: 'sugar', quantity: 5}); removeProduct(\"SALT\", 2); removeProduct(\"Spam\", 1); console log = temp; assert lengthOf(logArr, 2); assertequal(logArr[0], \"salt not found\");\nassert equal(logArr[1], \"spam not found\");\nremoveProduct(\"FLOUR\", 5) should subtract 5 from the quantity value of the object having name equal to \"flour\" inside the inventory array js\nconst temp = console log;\nconsole log = () => {};\ninventory length = 0;\ninventory push({name: 'flour', quantity: 15});\ninventory push({name: 'rice', quantity: 10});\ninventory push({name: 'sugar', quantity: 5});\nremoveProduct(\"flour\", 10);\nremoveProduct(\"RICE\", 5);\nremoveProduct(\"Sugar\", 2);\nconst expected = JSON stringify([{name: 'flour', quantity: 5}, {name: 'rice', quantity: 5}, {name: 'sugar', quantity: 3}]);\nconsole log = temp;\nassert equal(JSON stringify(inventory), expected)\nremoveProduct(\"FLOUR\", 5) should log Remaining flour pieces: 15 to the console, when inventory is equal to [{name: \"flour\", quantity: 20}, {name: \"rice\", quantity: 5}] js\nconst logArr = [];\nconst temp = console log;\nconsole log = function( args) {\nfor (const arg of args) {\nlogArr push(arg);\n}\n}\ninventory length = 0;\ninventory push({name: 'flour', quantity: 15});\ninventory push({name: 'rice', quantity: 10});\ninventory push({name: 'sugar', quantity: 5});\nremoveProduct(\"Flour\", 5);\nremoveProduct(\"RICE\", 5);\nremoveProduct(\"Sugar\", 2);\nconsole log = temp;\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12662,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "11ffa68bd3ba67817225a1e7a388e765",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Remaining flour pieces: 15 to the console, when inventory is equal to [{name: \"flour\", quantity: 20}, {name: \"rice\", quantity: 5}] js const logArr = []; const temp = console log; console log = function( args) { for (const arg of args) { logArr push(arg); } } inventory length = 0; inventory push({name: 'flour', quantity: 15}); inventory push({name: 'rice', quantity: 10}); inventory push({name: 'sugar', quantity: 5}); removeProduct(\"Flour\", 5); removeProduct(\"RICE\", 5); removeProduct(\"Sugar\", 2); console log = temp; assertlengthOf(logArr, 3);\nassert equal(logArr[0], \"Remaining flour pieces: 10\");\nassert equal(logArr[1], \"Remaining rice pieces: 5\");\nassert equal(logArr[2], \"Remaining sugar pieces: 3\");\nIf the quantity after the subtraction is zero, removeProduct should remove the product object from the inventory js\nconst temp = console log;\nconsole log = () => {};\ninventory length = 0;\ninventory push({name: 'flour', quantity: 15});\ninventory push({name: 'rice', quantity: 10});\ninventory push({name: 'sugar', quantity: 5});\nremoveProduct(\"flour\", 15);\nremoveProduct(\"rice\", 10);\nconst expected = JSON stringify([{name: 'sugar', quantity: 5}]);\nconsole log = temp;\nassert equal(JSON stringify(inventory), expected)\nremoveProduct(\"FLOUR\", 10) should log Not enough flour available, remaining pieces: 5 when inventory is equal to [{name: \"flour\", quantity: 5}, {name: \"rice\", quantity: 5}] js\nconst logArr = [];\nconst temp = console log;\nconsole log = function( args) {\nfor (const arg of args) {\nlogArr push(arg);\n}\n}\ninventory length = 0;\ninventory push({name: 'flour', quantity: 15});\ninventory push({name: 'rice', quantity: 10});\ninventory push({name: 'sugar', quantity: 5});\nremoveProduct(\"flour\", 20);\nremoveProduct(\"RICE\", 20);\nremoveProduct(\"Sugar\", 20);\nconsole log = temp;\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12662,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "4e95a596f4a3fbf2504ff338e101a02b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Not enough flour available, remaining pieces: 5 when inventory is equal to [{name: \"flour\", quantity: 5}, {name: \"rice\", quantity: 5}] js const logArr = []; const temp = console log; console log = function( args) { for (const arg of args) { logArr push(arg); } } inventory length = 0; inventory push({name: 'flour', quantity: 15}); inventory push({name: 'rice', quantity: 10}); inventory push({name: 'sugar', quantity: 5}); removeProduct(\"flour\", 20); removeProduct(\"RICE\", 20); removeProduct(\"Sugar\", 20); console log = temp; assertlengthOf(logArr, 3);\nassert equal(logArr[0], \"Not enough flour available, remaining pieces: 15\")\nassert equal(logArr[1], \"Not enough rice available, remaining pieces: 10\")\nassert equal(logArr[2], \"Not enough sugar available, remaining pieces: 5\")\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nconst inventory = [];\nconst findProductIndex = (productName) => {\nlet productIndex = -1;\ninventory forEach((element, index) => {\nif (element name === productName toLowerCase()) {\nproductIndex = index;\n}\n})\nreturn productIndex;\n}\nconst addProduct = (product) => {\nproduct name = product name toLowerCase();\nconst productIndex = findProductIndex(product name);\nif (productIndex < 0) {\ninventory push(product);\nconsole log(${product name} added to inventory)\nreturn;\n}\ninventory[productIndex] quantity += product quantity;\nconsole log(${product name} quantity updated)\n}\nconst removeProduct = (productName, productQuantity) => {\nproductName = productName toLowerCase();\nconst productIndex = findProductIndex(productName);\nif (productIndex < 0) {\nconsole log(${productName} not found);\nreturn;\n}\nconst foundProduct = inventory[productIndex];\nif (foundProduct quantity >= productQuantity) {\nfoundProduct quantity -= productQuantity;\nconsole log(Remaining ${productName} pieces: ${foundProduct quantity})\nif ( foundProduct quantity) {\ninventory splice(productIndex, 1);\n}\nreturn;\n}\nconsole log(Not enough ${productName} available, remaining pieces: ${foundProduct",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12662,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "23130d7f2db126dd65dcbd9d87950c3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "inventory[productIndex] quantity += product quantity; console log(${product name} quantity updated) } const removeProduct = (productName, productQuantity) => { productName = productName toLowerCase(); const productIndex = findProductIndex(productName); if (productIndex < 0) { console log(${productName} not found); return; } const foundProduct = inventory[productIndex]; if (foundProduct quantity >= productQuantity) { foundProduct quantity -= productQuantity; console log(Remaining ${productName} pieces: ${foundProduct quantity}) if ( foundProduct quantity) { inventory splice(productIndex, 1); } return; } console log(Not enough ${productName} available, remaining pieces: ${foundProductquantity});\n}\n// Example usage\nconst product1 = {\nname: 'flour',\nquantity: 15\n}\nconst product2 = {\nname: 'flour',\nquantity: 10\n}\nconst product3 = {\nname: 'sugar',\nquantity: 20\n}\nconst product4 = {\nname: 'salt',\nquantity: 12\n}\naddProduct(product1);\naddProduct(product2);\naddProduct(product3);\naddProduct(product4);\nremoveProduct('flour', 30);\nremoveProduct('flour', 20);\nremoveProduct('flour', 5);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12662,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-inventory-management-program\\66d75dd0aa65a71600dc669b.md",
      "source_type": "git_repo"
    },
    "token_count": 266,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "71284c09a545c4118e4e3a4384a4b531",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "id: 673c91f0b934834bc4a3ecc2\ntitle: Build an fCC Forum Leaderboard\nchallengeType: 25\ndashedName: build-an-fcc-forum-leaderboard\ndemoType: onClick\n--description--\nIn this lab, you will build a freeCodeCamp forum leaderboard that displays the latest topics, users, and replies from the freeCodeCamp forum The HTML, CSS and part of the JS have been provided for you Feel free to explore them Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a function named timeAgo that takes a timestamp in the ISO 8601 format as the argument The timeAgo function should compute the time difference between the time passed as an argument and the current time and return:\nxm ago (x represents minutes) if the amount of minutes that have passed is less than 60 xh ago (x represents hours) if the amount of hours that have passed is less than 24 xd ago (x represents days) otherwise You should have a function named viewCount that takes the number of views of a post as the argument If the value of the views passed as the argument is greater than or equal to 1000, the viewCount function should return a string with the views value divided by 1000, rounded down to the nearest whole number and the letter k appended to it Otherwise, it should return the views value You should have a function named forumCategory that takes the id of a selected category as the argument The forumCategory function should verify that the selected category id is a property of the allCategories object and should return a string containing an anchor element with:\nthe text of the category key of the selected category a class of category followed by the className property of the selected category an href with the value of <forumCategoryUrl>/<className>/<id>, where <className> is the className property of the selected category and id is the argument passed to forumCategory If the allCategories object does not have the selected category id as its property, category should be indicated as General and className should be indicated as general You should have a function named avatars that takes two arrays representing posters and users, respectively The avatars function should return a string made by joining img elements, one for each user_id in the posters array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 31
  },
  {
    "id": "eccce41c1d84183a5eb9108a702d2e4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "property of the selected category and id is the argument passed to forumCategory If the allCategories object does not have the selected category id as its property, category should be indicated as General and className should be indicated as general You should have a function named avatars that takes two arrays representing posters and users, respectively The avatars function should return a string made by joining img elements, one for each user_id in the posters arrayFind the img URL by looking up the user_id property in the posters array and find the matching id property in the users array The avatars function should set each avatar's size by accessing the avatar_template property and replacing {size} with 30 Each image element should have an alt text with the value of the name property of the poster Each image element should have a source with the value of the avatar_template property of the poster In case avatar_template contains a relative path, you should set the source to <avatarUrl>/<avatar_template> You should have a function named showLatestPosts that takes a single parameter The showLatestPosts should extract the users and topic_list properties from the object passed as argument Also, it should process the following properties of the objects from the topics array, which is contained in topic_list:\nid: the id of the post\ntitle: the title of the post\nviews: the number of views of the post\nposts_count: the number of replies to the topic\nslug: the slug of the post\nposters: the posters for that topic\ncategory_id: an integer indicating the category id for the post\nbumped_at: a timestamp in the ISO 8601 format\nThe showLatestPosts should set the inner HTML of #posts-container to a string made by joining tr elements, one for each item in topics Each tr element should have five td elements in it:\na td containing two anchor elements, one with the class of post-title, an href of <forumTopicUrl><slug>/<id>, an anchor text of <title>, and one obtained by calling forumCategory with category_id a td containing a div element with class avatar-container that contains the images returned by the avatars function called with posters and users as arguments a td containing the number of replies to the post Hint: use posts_count - 1 a td containing the number of views of the post a td containing the time passed since the last activity You should have an async function named fetchData",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 1,
    "total_chunks": 31
  },
  {
    "id": "e179ba0fe6f05940907f6ff29adfa0fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "and one obtained by calling forumCategory with category_id a td containing a div element with class avatar-container that contains the images returned by the avatars function called with posters and users as arguments a td containing the number of replies to the post Hint: use posts_count - 1 a td containing the number of views of the post a td containing the time passed since the last activity You should have an async function named fetchDataThe fetchData function should request data from forumLatest and call showLatestPosts passing it the response parsed as JSON If there's an error when fetching data, the fetchData function should log the error to the console You should specifically use console log for this --hints--\nYou should have a function named timeAgo that takes a single argument js\nassert isFunction(timeAgo);\nassert lengthOf(timeAgo, 1);\nWhen the time difference between the time passed as argument and the current time is 50 minutes, timeAgo should return 50m ago js\nconst generateTime = () => {\nconst currentTime = new Date();\nreturn new Date(currentTime - 1000 * 60 * 50) toISOString();\n};\nconst expected = '50m ago';\nconst actual = timeAgo(generateTime());\nassert equal(actual, expected);\nWhen the time difference between the time passed as argument and the current time is 60 minutes, timeAgo should return 1h ago js\nconst generateTime = () => {\nconst currentTime = new Date();\nreturn new Date(currentTime - 1000 * 60 * 60) toISOString();\n};\nconst expected = '1h ago';\nconst actual = timeAgo(generateTime());\nassert equal(actual, expected);\nWhen the time difference between the time passed as argument and the current time is 115 minutes, timeAgo should return 1h ago js\nconst generateTime = () => {\nconst currentTime = new Date();\nreturn new Date(currentTime - 1000 * (60 * 115)) toISOString();\n};\nconst expected = '1h ago';\nconst actual = timeAgo(generateTime());\nassert equal(actual, expected);\nWhen the time difference between the time passed as argument and the current time is 15 hours, timeAgo should return 15h ago js\nconst generateTime = () => {\nconst currentTime = new Date();\nreturn new Date(currentTime - 1000 * 60 * 60 * 15)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 2,
    "total_chunks": 31
  },
  {
    "id": "62665586bce3a32ffa7f8fa098cdd887",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "() => { const currentTime = new Date(); return new Date(currentTime - 1000 * (60 * 115)) toISOString(); }; const expected = '1h ago'; const actual = timeAgo(generateTime()); assert equal(actual, expected); When the time difference between the time passed as argument and the current time is 15 hours, timeAgo should return 15h ago js const generateTime = () => { const currentTime = new Date(); return new Date(currentTime - 1000 * 60 * 60 * 15)toISOString();\n};\nconst expected = '15h ago';\nconst actual = timeAgo(generateTime());\nassert equal(actual, expected);\nWhen the time difference between the time passed as argument and the current time is 24 hours, timeAgo should return 1d ago js\nconst generateTime = () => {\nconst currentTime = new Date();\nreturn new Date(currentTime - 1000 * 60 * 60 * 24) toISOString();\n};\nconst expected = '1d ago';\nconst actual = timeAgo(generateTime());\nassert equal(actual, expected);\nWhen the time difference between the time passed as argument and the current time is 46 hours, timeAgo should return 1d ago js\nconst generateTime = () => {\nconst currentTime = new Date();\nreturn new Date(currentTime - 1000 * 60 * 60 * 46) toISOString();\n};\nconst expected = '1d ago';\nconst actual = timeAgo(generateTime());\nassert equal(actual, expected);\nWhen the time difference between the time passed as argument and the current time is 3 days, timeAgo should return 3d ago js\nconst generateTime = () => {\nconst currentTime = new Date();\nreturn new Date(currentTime - 1000 * 60 * 60 * 24 * 3) toISOString();\n};\nconst expected = '3d ago';\nconst actual = timeAgo(generateTime());\nassert equal(actual, expected);\nYou should have a function named viewCount that takes a single argument js\nassert isFunction(viewCount);\nassert lengthOf(viewCount, 1);\nviewCount(597) should return 597 js\nassert strictEqual(597, viewCount(597));\nviewCount(1000) should return 1k js\nassert equal('1k', viewCount(1000));\nviewCount(2730) should return 2k",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 3,
    "total_chunks": 31
  },
  {
    "id": "08b053512cf62383884b28008c08e530",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "const generateTime = () => { const currentTime = new Date(); return new Date(currentTime - 1000 * 60 * 60 * 24 * 3) toISOString(); }; const expected = '3d ago'; const actual = timeAgo(generateTime()); assert equal(actual, expected); You should have a function named viewCount that takes a single argument js assert isFunction(viewCount); assert lengthOf(viewCount, 1); viewCount(597) should return 597 js assert strictEqual(597, viewCount(597)); viewCount(1000) should return 1k js assert equal('1k', viewCount(1000)); viewCount(2730) should return 2kjs\nassert equal('2k', viewCount(2730));\nYou should have a function named forumCategory that takes a single argument js\nassert isFunction(forumCategory);\nassert lengthOf(forumCategory, 1);\nforumCategory(299) should return a string containing an anchor element with the text Career Advice ```js\nlet actual = forumCategory(299);\nassert match(actual, /^<\\sa + >\\sCareer Advice\\s*<\\/a>$/);\n// prevent hardcoding\nactual = forumCategory(409);\nassert match(actual, /^<\\sa + >\\sProject Feedback\\s*<\\/a>$/);\n```\nforumCategory(299) should return a string containing an anchor element with href=\"https://forum freecodecamp org/c/career/299\" ```js\nlet actual = forumCategory(299);\nassert match(\nactual,\n/href=(\"|')https:\\/\\/forum freecodecamp org\\/c\\/career\\/299\\1/\n);\n// prevent hardcoding\nactual = forumCategory(409);\nassert match(\nactual,\n/href=(\"|')https:\\/\\/forum freecodecamp org\\/c\\/feedback\\/409\\1/\n);\n```\nforumCategory(299) should return a string containing an anchor element with class=\"category career\" ```js\nlet actual = forumCategory(299);\nassert match(actual, /class=(\"|')category\\s+career\\1/);\n// prevent hardcoding\nactual = forumCategory(409);\nassert match(actual, /class=(\"|')category\\s+feedback\\1/);\n```\nforumCategory(200) should return a string containing an anchor element with the text General js\nconst actual = forumCategory(200);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 4,
    "total_chunks": 31
  },
  {
    "id": "5a1a20518dfda7704fa9cdd79c55731c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "org/c/career/299\" ```js let actual = forumCategory(299); assert match( actual, /href=(\"|')https:\\/\\/forum freecodecamp org\\/c\\/career\\/299\\1/ ); // prevent hardcoding actual = forumCategory(409); assert match( actual, /href=(\"|')https:\\/\\/forum freecodecamp org\\/c\\/feedback\\/409\\1/ ); ``` forumCategory(299) should return a string containing an anchor element with class=\"category career\" ```js let actual = forumCategory(299); assert match(actual, /class=(\"|')category\\s+career\\1/); // prevent hardcoding actual = forumCategory(409); assert match(actual, /class=(\"|')category\\s+feedback\\1/); ``` forumCategory(200) should return a string containing an anchor element with the text General js const actual = forumCategory(200); assertmatch(actual, /^<\\s*a + >\\s*General\\s*<\\/a>$/);\nforumCategory(200) should return a string containing an anchor element with href=\"https://forum freecodecamp org/c/general/200\" ```js\nlet actual = forumCategory(200);\nassert match(\nactual,\n/href=(\"|')https:\\/\\/forum freecodecamp org\\/c\\/general\\/200/\n);\nactual = forumCategory(220);\nassert match(\nactual,\n/href=(\"|')https:\\/\\/forum freecodecamp org\\/c\\/general\\/220/\n);\n```\nforumCategory(200) should return a string containing an anchor element with class=\"category general\" js\nconst actual = forumCategory(200);\nassert match(actual, /class=(\"|')category\\s+general\\1/);\nYou should have a function named avatars that takes two arguments js\nassert isFunction(avatars);\nassert lengthOf(avatars, 2);\nThe avatars function should return a string made by joining img elements, one for each poster found in the user array js\nconst posters = [{ user_id: 6 }, { user_id: 285941 }, { user_id: 170865 }];\nconst users = [\n{\navatar_template:\n'/user_avatar/QuincyLarson_{size} png',\nid: 6,\nname: 'Quincy Larson',\nusername: 'QuincyLarson'\n},\n{\navatar_template:\n'/user_avatar/jwilkins oboe_{size}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 5,
    "total_chunks": 31
  },
  {
    "id": "12047a3a59a7b1c441f55a49692d1f7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "match(actual, /class=(\"|')category\\s+general\\1/); You should have a function named avatars that takes two arguments js assert isFunction(avatars); assert lengthOf(avatars, 2); The avatars function should return a string made by joining img elements, one for each poster found in the user array js const posters = [{ user_id: 6 }, { user_id: 285941 }, { user_id: 170865 }]; const users = [ { avatar_template: '/user_avatar/QuincyLarson_{size} png', id: 6, name: 'Quincy Larson', username: 'QuincyLarson' }, { avatar_template: '/user_avatar/jwilkins oboe_{size}png',\nid: 285941,\nname: 'Jessica Wilkins',\nusername: 'jwilkins oboe'\n},\n{\navatar_template:\n'/user_avatar/ilenia_{size} png',\nid: 170865,\nname: 'Ilenia',\nusername: 'ilenia'\n},\n{ id: 20 }\n];\nconst actual = avatars(posters, users);\nconst matches = actual match(/<\\s*img\\s+ + >/g);\nassert lengthOf(matches, 3);\nEach img element in the string returned by the avatars function should have an alt text with the value of the name property of the poster ```js\nconst posters = [{ user_id: 6 }, { user_id: 285941 }, { user_id: 170865 }];\nconst users = [\n{\navatar_template:\n'/user_avatar/QuincyLarson_{size} png',\nid: 6,\nname: 'Quincy Larson',\nusername: 'QuincyLarson'\n},\n{\navatar_template:\n'/user_avatar/jwilkins oboe_{size} png',\nid: 285941,\nname: 'Jessica Wilkins',\nusername: 'jwilkins oboe'\n},\n{\navatar_template:\n'/user_avatar/ilenia_{size} png',\nid: 170865,\nname: 'Ilenia',\nusername: 'ilenia'\n},\n{ id: 20 }\n];\nconst actual = avatars(posters, users);\nconst matches = actual match(/<\\s*img\\s+ + >/g);\nassert match(matches[0], /alt=('|\")Quincy Larson\\1/);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 6,
    "total_chunks": 31
  },
  {
    "id": "941e4b5084c443b0b3dc156fab634609",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "= [{ user_id: 6 }, { user_id: 285941 }, { user_id: 170865 }]; const users = [ { avatar_template: '/user_avatar/QuincyLarson_{size} png', id: 6, name: 'Quincy Larson', username: 'QuincyLarson' }, { avatar_template: '/user_avatar/jwilkins oboe_{size} png', id: 285941, name: 'Jessica Wilkins', username: 'jwilkins oboe' }, { avatar_template: '/user_avatar/ilenia_{size} png', id: 170865, name: 'Ilenia', username: 'ilenia' }, { id: 20 } ]; const actual = avatars(posters, users); const matches = actual match(/<\\s*img\\s+ + >/g); assert match(matches[0], /alt=('|\")Quincy Larson\\1/); assertmatch(matches[1], /alt=('|\")Jessica Wilkins\\1/);\nassert match(matches[2], /alt=('|\")Ilenia\\1/);\n```\nThe avatars function should set each avatar's size by accessing the avatar_template property and replacing {size} with 30 js\nconst posters = [{ user_id: 6 }, { user_id: 285941 }, { user_id: 170865 }];\nconst users = [\n{\navatar_template:\n'/user_avatar/QuincyLarson_{size} png',\nid: 6,\nname: 'Quincy Larson',\nusername: 'QuincyLarson'\n},\n{\navatar_template:\n'/user_avatar/jwilkins oboe_{size} png',\nid: 285941,\nname: 'Jessica Wilkins',\nusername: 'jwilkins oboe'\n},\n{\navatar_template:\n'/user_avatar/ilenia_{size} png',\nid: 170865,\nname: 'Ilenia',\nusername: 'ilenia'\n},\n{ id: 20 }\n];\nconst actual = avatars(posters, users);\nassert notMatch(actual, /\\{size\\}/);\nassert lengthOf(actual match(/_30/g), 3);\nEach img element in the string returned by the avatars function should have the src with the value of the avatar_template property of the poster In case avatar_template contains a relative path, it should be set to <avatarUrl>/<avatar_template>",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 7,
    "total_chunks": 31
  },
  {
    "id": "9ffcf6c7777b2ab78f3cf9e99202904a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "png', id: 285941, name: 'Jessica Wilkins', username: 'jwilkins oboe' }, { avatar_template: '/user_avatar/ilenia_{size} png', id: 170865, name: 'Ilenia', username: 'ilenia' }, { id: 20 } ]; const actual = avatars(posters, users); assert notMatch(actual, /\\{size\\}/); assert lengthOf(actual match(/_30/g), 3); Each img element in the string returned by the avatars function should have the src with the value of the avatar_template property of the poster In case avatar_template contains a relative path, it should be set to <avatarUrl>/<avatar_template>```js\nconst posters = [{ user_id: 6 }, { user_id: 285941 }, { user_id: 170865 }];\nconst users = [\n{\navatar_template:\n'/user_avatar/QuincyLarson_{size} png',\nid: 6,\nname: 'Quincy Larson',\nusername: 'QuincyLarson'\n},\n{\navatar_template:\n'/user_avatar/jwilkins oboe_{size} png',\nid: 285941,\nname: 'Jessica Wilkins',\nusername: 'jwilkins oboe'\n},\n{\navatar_template:\n'/user_avatar/ilenia_{size} png',\nid: 170865,\nname: 'Ilenia',\nusername: 'ilenia'\n},\n{ id: 20 }\n];\nconst actual = avatars(posters, users);\nconst matches = actual match(/<\\s*img\\s+ + >/g);\nassert match(\nmatches[0],\n/src=('|\")https:\\/\\/cdn freecodecamp org\\/curriculum\\/forum-latest\\/user_avatar\\/QuincyLarson_30 png\\1/\n);\nassert match(\nmatches[1],\n/src=('|\")https:\\/\\/cdn freecodecamp org\\/curriculum\\/forum-latest\\/user_avatar\\/jwilkins oboe_30 png\\1/\n);\nassert match(\nmatches[2],\n/src=('|\")https:\\/\\/cdn freecodecamp org\\/curriculum\\/forum-latest\\/user_avatar\\/ilenia_30 png\\1/\n);\n```\nYou should have a function named showLatestPosts that takes a single parameter js\nassert isFunction(showLatestPosts);\nassert lengthOf(showLatestPosts, 1);\nYou should have a function named fetchData js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 8,
    "total_chunks": 31
  },
  {
    "id": "965d22a24cfe33351140c63a7c9ebf0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "170865, name: 'Ilenia', username: 'ilenia' }, { id: 20 } ]; const actual = avatars(posters, users); const matches = actual match(/<\\s*img\\s+ + >/g); assert match( matches[0], /src=('|\")https:\\/\\/cdn freecodecamp org\\/curriculum\\/forum-latest\\/user_avatar\\/QuincyLarson_30 png\\1/ ); assert match( matches[1], /src=('|\")https:\\/\\/cdn freecodecamp org\\/curriculum\\/forum-latest\\/user_avatar\\/jwilkins oboe_30 png\\1/ ); assert match( matches[2], /src=('|\")https:\\/\\/cdn freecodecamp org\\/curriculum\\/forum-latest\\/user_avatar\\/ilenia_30 png\\1/ ); ``` You should have a function named showLatestPosts that takes a single parameter js assert isFunction(showLatestPosts); assert lengthOf(showLatestPosts, 1); You should have a function named fetchData js assertisFunction(fetchData);\nYour fetchData function should request data from https://cdn freecodecamp org/curriculum/forum-latest/latest json js\nconst testArr = [];\nconst temp = fetch;\ntry {\nfetch = source => {\ntestArr push(source);\nreturn temp(source);\n};\nfetchData();\nassert deepEqual(testArr, [\n'https://cdn freecodecamp org/curriculum/forum-latest/latest json'\n]);\n} finally {\nfetch = temp;\n}\nYour fetchData function should call showLatestPosts js\nconst testArr = [];\nconst temp = showLatestPosts;\nasync () => {\ntry {\nshowLatestPosts = data => {\ntestArr push(data);\nreturn temp(data);\n};\nawait fetchData();\nassert isNotEmpty(testArr);\n} catch (err) {\nthrow new Error(err);\n} finally {\nfetch = temp;\n}\n};\nIf there is an error, your fetchData function should log the error to the console, using console log js\nconst testArr = [];\nconst temp1 = fetch;\nconst temp2 = console log;\nasync () => {\ntry {\nconsole log = obj => {\ntestArr push(obj toString());\n};\nfetch = source => {\nthrow new Error('This is a test error');\n};\nawait fetchData();\nassert deepEqual(testArr, ['Error: This is a test error']);\n} finally {\nfetch = temp1;\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 9,
    "total_chunks": 31
  },
  {
    "id": "96cc72a8401166148e000a940e5f2125",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "is an error, your fetchData function should log the error to the console, using console log js const testArr = []; const temp1 = fetch; const temp2 = console log; async () => { try { console log = obj => { testArr push(obj toString()); }; fetch = source => { throw new Error('This is a test error'); }; await fetchData(); assert deepEqual(testArr, ['Error: This is a test error']); } finally { fetch = temp1; consolelog = temp2;\n}\n};\nshowLatestPosts should set the inner HTML of #posts-container to a string made by joining tr elements, one for each item in topics js\nconst data = {\nusers: [\n{\navatar_template:\n'/user_avatar/QuincyLarson_{size} png',\nid: 6,\nname: 'Quincy Larson',\nusername: 'QuincyLarson'\n},\n{\navatar_template:\n'/user_avatar/jwilkins oboe_{size} png',\nid: 285941,\nname: 'Jessica Wilkins',\nusername: 'jwilkins oboe'\n},\n{\navatar_template:\n'/user_avatar/ilenia_{size} png',\nid: 170865,\nname: 'Ilenia',\nusername: 'ilenia'\n}\n],\ntopic_list: {\ntopics: [\n{\nbumped_at: '2024-04-15T16:01:26 403Z',\ncategory_id: 1,\nid: 684569,\nposters: [{ user_id: 6 }, { user_id: 170865 }, { user_id: 285941 }],\nposts_count: 8,\nslug: 'the-freecodecamp-podcast-is-back-now-with-video',\ntitle: 'The freeCodeCamp Podcast is back – now with video',\nviews: 542\n},\n{\nbumped_at: '2024-04-19T13:52:03 523Z',\ncategory_id: 421,\nid: 686149,\nposters: [{ user_id: 170865 }],\nposts_count: 1,\nslug: 'problem-with-making-changes-to-styles-js',\ntitle: 'Problem with making changes to styles (JS)',\nviews: 9\n}\n]\n}\n};\nconst pContainer = document getElementById('posts-container');\npContainer innerHTML = '';\nshowLatestPosts(data);\nassert lengthOf(pContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 10,
    "total_chunks": 31
  },
  {
    "id": "6af7132545f7a73c2a27fe326fa2bbc2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "1, id: 684569, posters: [{ user_id: 6 }, { user_id: 170865 }, { user_id: 285941 }], posts_count: 8, slug: 'the-freecodecamp-podcast-is-back-now-with-video', title: 'The freeCodeCamp Podcast is back – now with video', views: 542 }, { bumped_at: '2024-04-19T13:52:03 523Z', category_id: 421, id: 686149, posters: [{ user_id: 170865 }], posts_count: 1, slug: 'problem-with-making-changes-to-styles-js', title: 'Problem with making changes to styles (JS)', views: 9 } ] } }; const pContainer = document getElementById('posts-container'); pContainer innerHTML = ''; showLatestPosts(data); assert lengthOf(pContainerquerySelectorAll('tr'), 2);\nEach tr element from the string returned by showLatestPosts should contain 5 td elements js\nconst data = {\nusers: [\n{\navatar_template:\n'/user_avatar/QuincyLarson_{size} png',\nid: 6,\nname: 'Quincy Larson',\nusername: 'QuincyLarson'\n},\n{\navatar_template:\n'/user_avatar/jwilkins oboe_{size} png',\nid: 285941,\nname: 'Jessica Wilkins',\nusername: 'jwilkins oboe'\n},\n{\navatar_template:\n'/user_avatar/ilenia_{size} png',\nid: 170865,\nname: 'Ilenia',\nusername: 'ilenia'\n}\n],\ntopic_list: {\ntopics: [\n{\nbumped_at: '2024-04-15T16:01:26 403Z',\ncategory_id: 1,\nid: 684569,\nposters: [{ user_id: 6 }, { user_id: 170865 }, { user_id: 285941 }],\nposts_count: 8,\nslug: 'the-freecodecamp-podcast-is-back-now-with-video',\ntitle: 'The freeCodeCamp Podcast is back – now with video',\nviews: 542\n},\n{\nbumped_at: '2024-04-19T13:52:03",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 11,
    "total_chunks": 31
  },
  {
    "id": "26461896051b5eb32c581795ede9741d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "'Quincy Larson', username: 'QuincyLarson' }, { avatar_template: '/user_avatar/jwilkins oboe_{size} png', id: 285941, name: 'Jessica Wilkins', username: 'jwilkins oboe' }, { avatar_template: '/user_avatar/ilenia_{size} png', id: 170865, name: 'Ilenia', username: 'ilenia' } ], topic_list: { topics: [ { bumped_at: '2024-04-15T16:01:26 403Z', category_id: 1, id: 684569, posters: [{ user_id: 6 }, { user_id: 170865 }, { user_id: 285941 }], posts_count: 8, slug: 'the-freecodecamp-podcast-is-back-now-with-video', title: 'The freeCodeCamp Podcast is back – now with video', views: 542 }, { bumped_at: '2024-04-19T13:52:03523Z',\ncategory_id: 421,\nid: 686149,\nposters: [{ user_id: 170865 }],\nposts_count: 1,\nslug: 'problem-with-making-changes-to-styles-js',\ntitle: 'Problem with making changes to styles (JS)',\nviews: 9\n}\n]\n}\n};\nconst pContainer = document getElementById('posts-container');\npContainer innerHTML = '';\nshowLatestPosts(data);\nassert lengthOf(pContainer querySelectorAll('tr:first-child>td'), 5);\nassert lengthOf(pContainer querySelectorAll('tr:last-child>td'), 5);\nThe first td element of each table row from the string returned by showLatestPosts should contain two anchor elements, the first with the class of post-title, an href of <forumTopicUrl><slug>/<id>, an anchor text of <title>, and the second obtained by calling forumCategory with category_id ```js\nconst data = {\nusers: [\n{\navatar_template:\n'/user_avatar/QuincyLarson_{size} png',\nid: 6,\nname: 'Quincy Larson',\nusername: 'QuincyLarson'\n},\n{\navatar_template:\n'/user_avatar/jwilkins oboe_{size} png',\nid: 285941,\nname: 'Jessica Wilkins',\nusername: 'jwilkins",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 12,
    "total_chunks": 31
  },
  {
    "id": "c7bb91594329691a3681460ff7add316",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "5); The first td element of each table row from the string returned by showLatestPosts should contain two anchor elements, the first with the class of post-title, an href of <forumTopicUrl><slug>/<id>, an anchor text of <title>, and the second obtained by calling forumCategory with category_id ```js const data = { users: [ { avatar_template: '/user_avatar/QuincyLarson_{size} png', id: 6, name: 'Quincy Larson', username: 'QuincyLarson' }, { avatar_template: '/user_avatar/jwilkins oboe_{size} png', id: 285941, name: 'Jessica Wilkins', username: 'jwilkinsoboe'\n},\n{\navatar_template:\n'/user_avatar/ilenia_{size} png',\nid: 170865,\nname: 'Ilenia',\nusername: 'ilenia'\n}\n],\ntopic_list: {\ntopics: [\n{\nbumped_at: '2024-04-15T16:01:26 403Z',\ncategory_id: 1,\nid: 684569,\nposters: [{ user_id: 6 }, { user_id: 170865 }, { user_id: 285941 }],\nposts_count: 8,\nslug: 'the-freecodecamp-podcast-is-back-now-with-video',\ntitle: 'The freeCodeCamp Podcast is back – now with video',\nviews: 542\n},\n{\nbumped_at: '2024-04-19T13:52:03 523Z',\ncategory_id: 421,\nid: 686149,\nposters: [{ user_id: 170865 }],\nposts_count: 1,\nslug: 'problem-with-making-changes-to-styles-js',\ntitle: 'Problem with making changes to styles (JS)',\nviews: 9\n}\n]\n}\n};\nconst pContainer = document getElementById('posts-container');\npContainer innerHTML = '';\nshowLatestPosts(data);\nconst anchors1 = pContainer querySelectorAll('tr:first-child>td>a');\nassert lengthOf(anchors1, 2);\nconst anchors2 = pContainer querySelectorAll('tr:last-child>td>a');\nassert lengthOf(anchors2, 2);\nassert equal(anchors1[0] classList[0], 'post-title');\nassert equal(\nanchors1[0] href,\n'https://forum freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 13,
    "total_chunks": 31
  },
  {
    "id": "e8d6b7b8a6d19700d7a76c336b067a39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "is back – now with video', views: 542 }, { bumped_at: '2024-04-19T13:52:03 523Z', category_id: 421, id: 686149, posters: [{ user_id: 170865 }], posts_count: 1, slug: 'problem-with-making-changes-to-styles-js', title: 'Problem with making changes to styles (JS)', views: 9 } ] } }; const pContainer = document getElementById('posts-container'); pContainer innerHTML = ''; showLatestPosts(data); const anchors1 = pContainer querySelectorAll('tr:first-child>td>a'); assert lengthOf(anchors1, 2); const anchors2 = pContainer querySelectorAll('tr:last-child>td>a'); assert lengthOf(anchors2, 2); assert equal(anchors1[0] classList[0], 'post-title'); assert equal( anchors1[0] href, 'https://forum freecodecamporg/t/the-freecodecamp-podcast-is-back-now-with-video/684569'\n);\nassert equal(\nanchors1[0] innerText trim(),\n'The freeCodeCamp Podcast is back – now with video'\n);\nassert equal(anchors1[1] classList[0], 'category');\nassert equal(anchors1[1] classList[1], 'general');\nassert equal(anchors1[1] href, 'https://forum freecodecamp org/c/general/1');\nassert equal(anchors2[0] classList[0], 'post-title');\nassert equal(\nanchors2[0] href,\n'https://forum freecodecamp org/t/problem-with-making-changes-to-styles-js/686149'\n);\nassert equal(\nanchors2[0] innerText trim(),\n'Problem with making changes to styles (JS)'\n);\nassert equal(anchors2[1] classList[0], 'category');\nassert equal(anchors2[1] classList[1], 'javascript');\nassert equal(\nanchors2[1] href,\n'https://forum freecodecamp org/c/javascript/421'\n);\n```\nThe second td element of each table row from the string returned by showLatestPosts should contain the images returned by the avatars function called with posters and users as arguments, nested within a div element with the class of avatar-container",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 14,
    "total_chunks": 31
  },
  {
    "id": "cd2a1eea5cbe70d04f21a5577e5cc99e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "anchors2[0] href, 'https://forum freecodecamp org/t/problem-with-making-changes-to-styles-js/686149' ); assert equal( anchors2[0] innerText trim(), 'Problem with making changes to styles (JS)' ); assert equal(anchors2[1] classList[0], 'category'); assert equal(anchors2[1] classList[1], 'javascript'); assert equal( anchors2[1] href, 'https://forum freecodecamp org/c/javascript/421' ); ``` The second td element of each table row from the string returned by showLatestPosts should contain the images returned by the avatars function called with posters and users as arguments, nested within a div element with the class of avatar-container```js\nconst data = {\nusers: [\n{\navatar_template:\n'/user_avatar/QuincyLarson_{size} png',\nid: 6,\nname: 'Quincy Larson',\nusername: 'QuincyLarson'\n},\n{\navatar_template:\n'/user_avatar/jwilkins oboe_{size} png',\nid: 285941,\nname: 'Jessica Wilkins',\nusername: 'jwilkins oboe'\n},\n{\navatar_template:\n'/user_avatar/ilenia_{size} png',\nid: 170865,\nname: 'Ilenia',\nusername: 'ilenia'\n}\n],\ntopic_list: {\ntopics: [\n{\nbumped_at: '2024-04-15T16:01:26 403Z',\ncategory_id: 1,\nid: 684569,\nposters: [{ user_id: 6 }, { user_id: 170865 }, { user_id: 285941 }],\nposts_count: 8,\nslug: 'the-freecodecamp-podcast-is-back-now-with-video',\ntitle: 'The freeCodeCamp Podcast is back – now with video',\nviews: 542\n},\n{\nbumped_at: '2024-04-19T13:52:03 523Z',\ncategory_id: 421,\nid: 686149,\nposters: [{ user_id: 170865 }],\nposts_count: 1,\nslug: 'problem-with-making-changes-to-styles-js',\ntitle: 'Problem with making changes to styles (JS)',\nviews: 9\n}\n]\n}\n};\nconst pContainer = document getElementById('posts-container');\npContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 15,
    "total_chunks": 31
  },
  {
    "id": "e851abeceefd97f527fec5d5b07b97c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "[ { bumped_at: '2024-04-15T16:01:26 403Z', category_id: 1, id: 684569, posters: [{ user_id: 6 }, { user_id: 170865 }, { user_id: 285941 }], posts_count: 8, slug: 'the-freecodecamp-podcast-is-back-now-with-video', title: 'The freeCodeCamp Podcast is back – now with video', views: 542 }, { bumped_at: '2024-04-19T13:52:03 523Z', category_id: 421, id: 686149, posters: [{ user_id: 170865 }], posts_count: 1, slug: 'problem-with-making-changes-to-styles-js', title: 'Problem with making changes to styles (JS)', views: 9 } ] } }; const pContainer = document getElementById('posts-container'); pContainerinnerHTML = '';\nshowLatestPosts(data);\nconst div1 = pContainer querySelector('tr:first-child>td:nth-child(2)>div');\nassert equal(div1 classList[0], 'avatar-container');\nconst div2 = pContainer querySelector('tr:last-child>td:nth-child(2)>div');\nassert equal(div2 classList[0], 'avatar-container');\nconst imgs1 = div1 querySelectorAll('img');\nassert lengthOf(imgs1, 3);\nassert equal(\nimgs1[0] src,\n'https://cdn freecodecamp org/curriculum/forum-latest/user_avatar/QuincyLarson_30 png'\n);\nassert equal(imgs1[0] alt, 'Quincy Larson');\nassert equal(\nimgs1[1] src,\n'https://cdn freecodecamp org/curriculum/forum-latest/user_avatar/ilenia_30 png'\n);\nassert equal(imgs1[1] alt, 'Ilenia');\nassert equal(\nimgs1[2] src,\n'https://cdn freecodecamp org/curriculum/forum-latest/user_avatar/jwilkins oboe_30 png'\n);\nassert equal(imgs1[2] alt, 'Jessica Wilkins');\nconst imgs2 = div2 querySelectorAll('img');\nassert lengthOf(imgs2, 1);\nassert equal(\nimgs2[0] src,\n'https://cdn freecodecamp org/curriculum/forum-latest/user_avatar/ilenia_30 png'\n);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 16,
    "total_chunks": 31
  },
  {
    "id": "0ff308dec65ef90f4837dbbfca9f9c20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "div2 = pContainer querySelector('tr:last-child>td:nth-child(2)>div'); assert equal(div2 classList[0], 'avatar-container'); const imgs1 = div1 querySelectorAll('img'); assert lengthOf(imgs1, 3); assert equal( imgs1[0] src, 'https://cdn freecodecamp org/curriculum/forum-latest/user_avatar/QuincyLarson_30 png' ); assert equal(imgs1[0] alt, 'Quincy Larson'); assert equal( imgs1[1] src, 'https://cdn freecodecamp org/curriculum/forum-latest/user_avatar/ilenia_30 png' ); assert equal(imgs1[1] alt, 'Ilenia'); assert equal( imgs1[2] src, 'https://cdn freecodecamp org/curriculum/forum-latest/user_avatar/jwilkins oboe_30 png' ); assert equal(imgs1[2] alt, 'Jessica Wilkins'); const imgs2 = div2 querySelectorAll('img'); assert lengthOf(imgs2, 1); assert equal( imgs2[0] src, 'https://cdn freecodecamp org/curriculum/forum-latest/user_avatar/ilenia_30 png' ); assertequal(imgs2[0] alt, 'Ilenia');\n```\nThe third td element of each table row from the string returned by showLatestPosts should contain the number of replies to the post Hint: use posts_count - 1 ```js\nconst data = {\nusers: [\n{\navatar_template:\n'/user_avatar/QuincyLarson_{size} png',\nid: 6,\nname: 'Quincy Larson',\nusername: 'QuincyLarson'\n},\n{\navatar_template:\n'/user_avatar/jwilkins oboe_{size} png',\nid: 285941,\nname: 'Jessica Wilkins',\nusername: 'jwilkins oboe'\n},\n{\navatar_template:\n'/user_avatar/ilenia_{size} png',\nid: 170865,\nname: 'Ilenia',\nusername: 'ilenia'\n}\n],\ntopic_list: {\ntopics: [\n{\nbumped_at: '2024-04-15T16:01:26",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 17,
    "total_chunks": 31
  },
  {
    "id": "04fe0f056bd25fd5759006b930cc6528",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "of each table row from the string returned by showLatestPosts should contain the number of replies to the post Hint: use posts_count - 1 ```js const data = { users: [ { avatar_template: '/user_avatar/QuincyLarson_{size} png', id: 6, name: 'Quincy Larson', username: 'QuincyLarson' }, { avatar_template: '/user_avatar/jwilkins oboe_{size} png', id: 285941, name: 'Jessica Wilkins', username: 'jwilkins oboe' }, { avatar_template: '/user_avatar/ilenia_{size} png', id: 170865, name: 'Ilenia', username: 'ilenia' } ], topic_list: { topics: [ { bumped_at: '2024-04-15T16:01:26403Z',\ncategory_id: 1,\nid: 684569,\nposters: [{ user_id: 6 }, { user_id: 170865 }, { user_id: 285941 }],\nposts_count: 8,\nslug: 'the-freecodecamp-podcast-is-back-now-with-video',\ntitle: 'The freeCodeCamp Podcast is back – now with video',\nviews: 542\n},\n{\nbumped_at: '2024-04-19T13:52:03 523Z',\ncategory_id: 421,\nid: 686149,\nposters: [{ user_id: 170865 }],\nposts_count: 1,\nslug: 'problem-with-making-changes-to-styles-js',\ntitle: 'Problem with making changes to styles (JS)',\nviews: 9\n}\n]\n}\n};\nconst pContainer = document getElementById('posts-container');\npContainer innerHTML = '';\nshowLatestPosts(data);\nassert equal(\npContainer querySelector('tr:first-child>td:nth-child(3)') innerText,\n'7'\n);\nassert equal(\npContainer querySelector('tr:last-child>td:nth-child(3)') innerText,\n'0'\n);\n```\nThe fourth td element of each table row from the string returned by showLatestPosts should contain the number of views of the post ```js\nconst data = {\nusers: [\n{\navatar_template:\n'/user_avatar/QuincyLarson_{size}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 18,
    "total_chunks": 31
  },
  {
    "id": "c595d6bfb57449e3a826d917915c4975",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "posts_count: 1, slug: 'problem-with-making-changes-to-styles-js', title: 'Problem with making changes to styles (JS)', views: 9 } ] } }; const pContainer = document getElementById('posts-container'); pContainer innerHTML = ''; showLatestPosts(data); assert equal( pContainer querySelector('tr:first-child>td:nth-child(3)') innerText, '7' ); assert equal( pContainer querySelector('tr:last-child>td:nth-child(3)') innerText, '0' ); ``` The fourth td element of each table row from the string returned by showLatestPosts should contain the number of views of the post ```js const data = { users: [ { avatar_template: '/user_avatar/QuincyLarson_{size}png',\nid: 6,\nname: 'Quincy Larson',\nusername: 'QuincyLarson'\n},\n{\navatar_template:\n'/user_avatar/jwilkins oboe_{size} png',\nid: 285941,\nname: 'Jessica Wilkins',\nusername: 'jwilkins oboe'\n},\n{\navatar_template:\n'/user_avatar/ilenia_{size} png',\nid: 170865,\nname: 'Ilenia',\nusername: 'ilenia'\n}\n],\ntopic_list: {\ntopics: [\n{\nbumped_at: '2024-04-15T16:01:26 403Z',\ncategory_id: 1,\nid: 684569,\nposters: [{ user_id: 6 }, { user_id: 170865 }, { user_id: 285941 }],\nposts_count: 8,\nslug: 'the-freecodecamp-podcast-is-back-now-with-video',\ntitle: 'The freeCodeCamp Podcast is back – now with video',\nviews: 542\n},\n{\nbumped_at: '2024-04-19T13:52:03 523Z',\ncategory_id: 421,\nid: 686149,\nposters: [{ user_id: 170865 }],\nposts_count: 1,\nslug: 'problem-with-making-changes-to-styles-js',\ntitle: 'Problem with making changes to styles (JS)',\nviews: 9\n}\n]\n}\n};\nconst pContainer = document getElementById('posts-container');\npContainer innerHTML = '';\nshowLatestPosts(data);\nassert equal(\npContainer querySelector('tr:first-child>td:nth-child(4)')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 19,
    "total_chunks": 31
  },
  {
    "id": "55a6ba5ffed3ce6962a880f4cf816653",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "684569, posters: [{ user_id: 6 }, { user_id: 170865 }, { user_id: 285941 }], posts_count: 8, slug: 'the-freecodecamp-podcast-is-back-now-with-video', title: 'The freeCodeCamp Podcast is back – now with video', views: 542 }, { bumped_at: '2024-04-19T13:52:03 523Z', category_id: 421, id: 686149, posters: [{ user_id: 170865 }], posts_count: 1, slug: 'problem-with-making-changes-to-styles-js', title: 'Problem with making changes to styles (JS)', views: 9 } ] } }; const pContainer = document getElementById('posts-container'); pContainer innerHTML = ''; showLatestPosts(data); assert equal( pContainer querySelector('tr:first-child>td:nth-child(4)')innerText,\n'542'\n);\nassert equal(\npContainer querySelector('tr:last-child>td:nth-child(4)') innerText,\n'9'\n);\n```\nThe fifth td element of each table row from the string returned by showLatestPosts should contain time passed since the last activity, generated using the timeAgo function ``js\nconst data = {\nusers: [\n{\navatar_template:\n'/user_avatar/QuincyLarson_{size} png',\nid: 6,\nname: 'Quincy Larson',\nusername: 'QuincyLarson'\n},\n{\navatar_template:\n'/user_avatar/jwilkins oboe_{size} png',\nid: 285941,\nname: 'Jessica Wilkins',\nusername: 'jwilkins oboe'\n},\n{\navatar_template:\n'/user_avatar/ilenia_{size} png',\nid: 170865,\nname: 'Ilenia',\nusername: 'ilenia'\n}\n],\ntopic_list: {\ntopics: [\n{\nbumped_at: '2024-04-15T16:01:26",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 20,
    "total_chunks": 31
  },
  {
    "id": "ee2ce171c1a4a53099401d058ea1efda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "element of each table row from the string returned by showLatestPosts should contain time passed since the last activity, generated using the timeAgo function ``js const data = { users: [ { avatar_template: '/user_avatar/QuincyLarson_{size} png', id: 6, name: 'Quincy Larson', username: 'QuincyLarson' }, { avatar_template: '/user_avatar/jwilkins oboe_{size} png', id: 285941, name: 'Jessica Wilkins', username: 'jwilkins oboe' }, { avatar_template: '/user_avatar/ilenia_{size} png', id: 170865, name: 'Ilenia', username: 'ilenia' } ], topic_list: { topics: [ { bumped_at: '2024-04-15T16:01:26403Z',\ncategory_id: 1,\nid: 684569,\nposters: [{ user_id: 6 }, { user_id: 170865 }, { user_id: 285941 }],\nposts_count: 8,\nslug: 'the-freecodecamp-podcast-is-back-now-with-video',\ntitle: 'The freeCodeCamp Podcast is back – now with video',\nviews: 542\n},\n{\nbumped_at: '2024-04-19T13:52:03 523Z',\ncategory_id: 421,\nid: 686149,\nposters: [{ user_id: 170865 }],\nposts_count: 1,\nslug: 'problem-with-making-changes-to-styles-js',\ntitle: 'Problem with making changes to styles (JS)',\nviews: 9\n}\n]\n}\n};\nconst calcTime = time => {\nconst currentTime = new Date();\nconst lastPost = new Date(time);\nconst timeDifference = currentTime - lastPost;\nconst msPerMinute = 1000 * 60;\nconst minutesAgo = Math floor(timeDifference / msPerMinute);\nconst hoursAgo = Math floor(minutesAgo / 60);\nconst daysAgo = Math floor(hoursAgo / 24);\nreturn${daysAgo}d ago`;\n};\nconst pContainer = document getElementById('posts-container');\npContainer innerHTML = '';\nshowLatestPosts(data);\nassert equal(\npContainer querySelector('tr:first-child>td:nth-child(5)') innerText,\ncalcTime('2024-04-15T16:01:26",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 21,
    "total_chunks": 31
  },
  {
    "id": "a38221ae5b98ac26b3b2d9b29f036bd5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "styles (JS)', views: 9 } ] } }; const calcTime = time => { const currentTime = new Date(); const lastPost = new Date(time); const timeDifference = currentTime - lastPost; const msPerMinute = 1000 * 60; const minutesAgo = Math floor(timeDifference / msPerMinute); const hoursAgo = Math floor(minutesAgo / 60); const daysAgo = Math floor(hoursAgo / 24); return${daysAgo}d ago`; }; const pContainer = document getElementById('posts-container'); pContainer innerHTML = ''; showLatestPosts(data); assert equal( pContainer querySelector('tr:first-child>td:nth-child(5)') innerText, calcTime('2024-04-15T16:01:26403Z')\n);\nassert equal(\npContainer querySelector('tr:last-child>td:nth-child(5)') innerText,\ncalcTime('2024-04-19T13:52:03 523Z')\n);\n```\n--seed--\n--seed-contents--\n```html\nfCC Forum Leaderboard\nLatest Topics\nTopics\nAvatars\nReplies\nViews\nActivity\n```\n```css\n* {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--main-bg-color: #2a2a40;\n--black: #000;\n--dark-navy: #0a0a23;\n--dark-grey: #d0d0d5;\n--medium-grey: #dfdfe2;\n--light-grey: #f5f6f7;\n--peach: #f28373;\n--salmon-color: #f0aea9;\n--light-blue: #8bd9f6;\n--light-orange: #f8b172;\n--light-green: #93cb5b;\n--golden-yellow: #f1ba33;\n--gold: #f9aa23;\n--green: #6bca6b;\n}\nbody {\nbackground-color: var(--main-bg-color);\n}\nnav {\nbackground-color: var(--dark-navy);\npadding: 10px 0;\n} fcc-logo {\nwidth: 210px;\ndisplay: block;\nmargin: auto;\n} title {\nmargin: 25px 0;\ntext-align: center;\ncolor: var(--light-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 22,
    "total_chunks": 31
  },
  {
    "id": "9f4c2f9d9b1e9ddd9970aee273d1c19f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "Views Activity ``` ```css * { margin: 0; padding: 0; box-sizing: border-box; } :root { --main-bg-color: #2a2a40; --black: #000; --dark-navy: #0a0a23; --dark-grey: #d0d0d5; --medium-grey: #dfdfe2; --light-grey: #f5f6f7; --peach: #f28373; --salmon-color: #f0aea9; --light-blue: #8bd9f6; --light-orange: #f8b172; --light-green: #93cb5b; --golden-yellow: #f1ba33; --gold: #f9aa23; --green: #6bca6b; } body { background-color: var(--main-bg-color); } nav { background-color: var(--dark-navy); padding: 10px 0; } fcc-logo { width: 210px; display: block; margin: auto; } title { margin: 25px 0; text-align: center; color: var(--light-grey); }table-wrapper {\npadding: 0 25px;\noverflow-x: auto;\n}\ntable {\nwidth: 100%;\ncolor: var(--dark-grey);\nmargin: auto;\ntable-layout: fixed;\nborder-collapse: collapse;\noverflow-x: scroll;\n}\ntopics {\ntext-align: start;\nwidth: 60%;\n}\nth {\nborder-bottom: 2px solid var(--dark-grey);\npadding-bottom: 10px;\nfont-size: 1 3rem;\n}\ntd:not(:first-child) {\ntext-align: center;\n}\ntd {\nborder-bottom: 1px solid var(--dark-grey);\npadding: 20px 0;\n} post-title {\nfont-size: 1 2rem;\ncolor: var(--medium-grey);\ntext-decoration: none;\n} category {\npadding: 3px;\ncolor: var(--black);\ntext-decoration: none;\ndisplay: block;\nwidth: fit-content;\nmargin: 10px 0 10px;\n} career {\nbackground-color: var(--salmon-color);\n} feedback, html-css {\nbackground-color: var(--light-blue);\n} support {\nbackground-color: var(--light-orange);\n} general {\nbackground-color: var(--light-green);\n} javascript {\nbackground-color: var(--golden-yellow);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 23,
    "total_chunks": 31
  },
  {
    "id": "65567d28998af844aa89851eefa0099d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "solid var(--dark-grey); padding-bottom: 10px; font-size: 1 3rem; } td:not(:first-child) { text-align: center; } td { border-bottom: 1px solid var(--dark-grey); padding: 20px 0; } post-title { font-size: 1 2rem; color: var(--medium-grey); text-decoration: none; } category { padding: 3px; color: var(--black); text-decoration: none; display: block; width: fit-content; margin: 10px 0 10px; } career { background-color: var(--salmon-color); } feedback, html-css { background-color: var(--light-blue); } support { background-color: var(--light-orange); } general { background-color: var(--light-green); } javascript { background-color: var(--golden-yellow); }backend {\nbackground-color: var(--gold);\n} python {\nbackground-color: var(--green);\n} motivation {\nbackground-color: var(--peach);\n} avatar-container {\ndisplay: flex;\njustify-content: center;\ngap: 10px;\nflex-wrap: wrap;\n} avatar-container img {\nwidth: 30px;\nheight: 30px;\n}\n@media (max-width: 750px) { table-wrapper {\npadding: 0 15px;\n}\ntable {\nwidth: 700px;\n}\nth {\nfont-size: 1 2rem;\n} post-title {\nfont-size: 1 1rem;\n}\n}\n```\n```js\nconst forumLatest =\n'https://cdn freecodecamp org/curriculum/forum-latest/latest json';\nconst forumTopicUrl = 'https://forum freecodecamp org/t/';\nconst forumCategoryUrl = 'https://forum freecodecamp org/c/';\nconst avatarUrl = 'https://cdn freecodecamp org/curriculum/forum-latest';\nconst allCategories = {\n299: { category: 'Career Advice', className: 'career' },\n409: { category: 'Project Feedback', className: 'feedback' },\n417: { category: 'freeCodeCamp Support', className: 'support' },\n421: { category: 'JavaScript', className: 'javascript' },\n423: { category: 'HTML - CSS', className: 'html-css' },\n424: { category: 'Python', className: 'python' },\n432: { category: 'You Can Do This",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 24,
    "total_chunks": 31
  },
  {
    "id": "a9757806c722f25b03fe16b366ab8086",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "const forumTopicUrl = 'https://forum freecodecamp org/t/'; const forumCategoryUrl = 'https://forum freecodecamp org/c/'; const avatarUrl = 'https://cdn freecodecamp org/curriculum/forum-latest'; const allCategories = { 299: { category: 'Career Advice', className: 'career' }, 409: { category: 'Project Feedback', className: 'feedback' }, 417: { category: 'freeCodeCamp Support', className: 'support' }, 421: { category: 'JavaScript', className: 'javascript' }, 423: { category: 'HTML - CSS', className: 'html-css' }, 424: { category: 'Python', className: 'python' }, 432: { category: 'You Can Do This', className: 'motivation' },\n560: { category: 'Backend Development', className: 'backend' }\n};\n```\n--solutions--\n```html\nfCC Forum Leaderboard\nLatest Topics\nTopics\nAvatars\nReplies\nViews\nActivity\n```\n```css\n* {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--main-bg-color: #2a2a40;\n--black: #000;\n--dark-navy: #0a0a23;\n--dark-grey: #d0d0d5;\n--medium-grey: #dfdfe2;\n--light-grey: #f5f6f7;\n--peach: #f28373;\n--salmon-color: #f0aea9;\n--light-blue: #8bd9f6;\n--light-orange: #f8b172;\n--light-green: #93cb5b;\n--golden-yellow: #f1ba33;\n--gold: #f9aa23;\n--green: #6bca6b;\n}\nbody {\nbackground-color: var(--main-bg-color);\n}\nnav {\nbackground-color: var(--dark-navy);\npadding: 10px 0;\n} fcc-logo {\nwidth: 210px;\ndisplay: block;\nmargin: auto;\n} title {\nmargin: 25px 0;\ntext-align: center;\ncolor: var(--light-grey);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 25,
    "total_chunks": 31
  },
  {
    "id": "66dd5b46bc333073ac150fb429c1cab8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "Views Activity ``` ```css * { margin: 0; padding: 0; box-sizing: border-box; } :root { --main-bg-color: #2a2a40; --black: #000; --dark-navy: #0a0a23; --dark-grey: #d0d0d5; --medium-grey: #dfdfe2; --light-grey: #f5f6f7; --peach: #f28373; --salmon-color: #f0aea9; --light-blue: #8bd9f6; --light-orange: #f8b172; --light-green: #93cb5b; --golden-yellow: #f1ba33; --gold: #f9aa23; --green: #6bca6b; } body { background-color: var(--main-bg-color); } nav { background-color: var(--dark-navy); padding: 10px 0; } fcc-logo { width: 210px; display: block; margin: auto; } title { margin: 25px 0; text-align: center; color: var(--light-grey); }table-wrapper {\npadding: 0 25px;\noverflow-x: auto;\n}\ntable {\nwidth: 100%;\ncolor: var(--dark-grey);\nmargin: auto;\ntable-layout: fixed;\nborder-collapse: collapse;\noverflow-x: scroll;\n}\ntopics {\ntext-align: start;\nwidth: 60%;\n}\nth {\nborder-bottom: 2px solid var(--dark-grey);\npadding-bottom: 10px;\nfont-size: 1 3rem;\n}\ntd:not(:first-child) {\ntext-align: center;\n}\ntd {\nborder-bottom: 1px solid var(--dark-grey);\npadding: 20px 0;\n} post-title {\nfont-size: 1 2rem;\ncolor: var(--medium-grey);\ntext-decoration: none;\n} category {\npadding: 3px;\ncolor: var(--black);\ntext-decoration: none;\ndisplay: block;\nwidth: fit-content;\nmargin: 10px 0 10px;\n} career {\nbackground-color: var(--salmon-color);\n} feedback, html-css {\nbackground-color: var(--light-blue);\n} support {\nbackground-color: var(--light-orange);\n} general {\nbackground-color: var(--light-green);\n} javascript {\nbackground-color: var(--golden-yellow);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 26,
    "total_chunks": 31
  },
  {
    "id": "48a503e17a1682cec35cabb5d646bf02",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "solid var(--dark-grey); padding-bottom: 10px; font-size: 1 3rem; } td:not(:first-child) { text-align: center; } td { border-bottom: 1px solid var(--dark-grey); padding: 20px 0; } post-title { font-size: 1 2rem; color: var(--medium-grey); text-decoration: none; } category { padding: 3px; color: var(--black); text-decoration: none; display: block; width: fit-content; margin: 10px 0 10px; } career { background-color: var(--salmon-color); } feedback, html-css { background-color: var(--light-blue); } support { background-color: var(--light-orange); } general { background-color: var(--light-green); } javascript { background-color: var(--golden-yellow); }backend {\nbackground-color: var(--gold);\n} python {\nbackground-color: var(--green);\n} motivation {\nbackground-color: var(--peach);\n} avatar-container {\ndisplay: flex;\njustify-content: center;\ngap: 10px;\nflex-wrap: wrap;\n} avatar-container img {\nwidth: 30px;\nheight: 30px;\n}\n@media (max-width: 750px) { table-wrapper {\npadding: 0 15px;\n}\ntable {\nwidth: 700px;\n}\nth {\nfont-size: 1 2rem;\n} post-title {\nfont-size: 1 1rem;\n}\n}\n```\n```js\nconst forumLatest =\n'https://cdn freecodecamp org/curriculum/forum-latest/latest json';\nconst forumTopicUrl = 'https://forum freecodecamp org/t/';\nconst forumCategoryUrl = 'https://forum freecodecamp org/c/';\nconst avatarUrl = 'https://cdn freecodecamp org/curriculum/forum-latest';\nconst postsContainer = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 395,
    "chunk_index": 27,
    "total_chunks": 31
  },
  {
    "id": "0c1ed3635b069d20cdfb92c10f7845b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "display: flex; justify-content: center; gap: 10px; flex-wrap: wrap; } avatar-container img { width: 30px; height: 30px; } @media (max-width: 750px) { table-wrapper { padding: 0 15px; } table { width: 700px; } th { font-size: 1 2rem; } post-title { font-size: 1 1rem; } } ``` ```js const forumLatest = 'https://cdn freecodecamp org/curriculum/forum-latest/latest json'; const forumTopicUrl = 'https://forum freecodecamp org/t/'; const forumCategoryUrl = 'https://forum freecodecamp org/c/'; const avatarUrl = 'https://cdn freecodecamp org/curriculum/forum-latest'; const postsContainer = documentgetElementById('posts-container');\nconst allCategories = {\n299: { category: 'Career Advice', className: 'career' },\n409: { category: 'Project Feedback', className: 'feedback' },\n417: { category: 'freeCodeCamp Support', className: 'support' },\n421: { category: 'JavaScript', className: 'javascript' },\n423: { category: 'HTML - CSS', className: 'html-css' },\n424: { category: 'Python', className: 'python' },\n432: { category: 'You Can Do This ', className: 'motivation' },\n560: { category: 'Backend Development', className: 'backend' }\n};\nconst forumCategory = id => {\nlet selectedCategory = {};\nif (allCategories hasOwnProperty(id)) {\nconst { className, category } = allCategories[id];\nselectedCategory className = className;\nselectedCategory category = category;\n} else {\nselectedCategory className = 'general';\nselectedCategory category = 'General';\nselectedCategory id = 1;\n}\nconst url = ${forumCategoryUrl}${selectedCategory className}/${id};\nconst linkText = selectedCategory category;\nconst linkClass = category ${selectedCategory className};\nreturn <a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\">\n${linkText}\n</a>;\n};\nconst timeAgo = time => {\nconst currentTime = new Date();\nconst lastPost = new Date(time);\nconst timeDifference = currentTime - lastPost;\nconst msPerMinute = 1000 * 60;\nconst minutesAgo = Math",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 28,
    "total_chunks": 31
  },
  {
    "id": "d52cfb28f9483171d35a06906b23d5db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "selectedCategory category = category; } else { selectedCategory className = 'general'; selectedCategory category = 'General'; selectedCategory id = 1; } const url = ${forumCategoryUrl}${selectedCategory className}/${id}; const linkText = selectedCategory category; const linkClass = category ${selectedCategory className}; return <a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\"> ${linkText} </a>; }; const timeAgo = time => { const currentTime = new Date(); const lastPost = new Date(time); const timeDifference = currentTime - lastPost; const msPerMinute = 1000 * 60; const minutesAgo = Mathfloor(timeDifference / msPerMinute);\nconst hoursAgo = Math floor(minutesAgo / 60);\nconst daysAgo = Math floor(hoursAgo / 24);\nif (minutesAgo < 60) {\nreturn ${minutesAgo}m ago;\n}\nif (hoursAgo < 24) {\nreturn ${hoursAgo}h ago;\n}\nreturn ${daysAgo}d ago;\n};\nconst viewCount = views => {\nconst thousands = Math floor(views / 1000);\nif (views >= 1000) {\nreturn ${thousands}k;\n}\nreturn views;\n};\nconst avatars = (posters, users) => {\nreturn posters map(poster => {\nconst user = users find(user => user id === poster user_id);\nif (user) {\nconst avatar = user avatar_template replace(/{size}/, 30);\nconst userAvatarUrl = avatar startsWith('/user_avatar/') avatarUrl concat(avatar)\n: avatar;\nreturn <img src=\"${userAvatarUrl}\" alt=\"${user name}\" />;\n}\n}) join('');\n};\nconst fetchData = async () => {\ntry {\nconst res = await fetch(forumLatest);\nconst data = await res json();\nshowLatestPosts(data);\n} catch (err) {\nconsole log(err);\n}\n};\nfetchData();\nconst showLatestPosts = data => {\nconst { topic_list, users } = data;\nconst { topics } = topic_list;\npostsContainer innerHTML = topics",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 29,
    "total_chunks": 31
  },
  {
    "id": "a1d7bf950d52cfba41ecf9620219d54c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
    "source_type": "git_repo",
    "title": "fCC Forum Leaderboard",
    "content": "user avatar_template replace(/{size}/, 30); const userAvatarUrl = avatar startsWith('/user_avatar/') avatarUrl concat(avatar) : avatar; return <img src=\"${userAvatarUrl}\" alt=\"${user name}\" />; } }) join(''); }; const fetchData = async () => { try { const res = await fetch(forumLatest); const data = await res json(); showLatestPosts(data); } catch (err) { console log(err); } }; fetchData(); const showLatestPosts = data => { const { topic_list, users } = data; const { topics } = topic_list; postsContainer innerHTML = topicsmap(item => {\nconst {\nid,\ntitle,\nviews,\nposts_count,\nslug,\nposters,\ncategory_id,\nbumped_at\n} = item;\nreturn `\n<tr>\n<td>\n<a class=\"post-title\" target=\"_blank\" href=\"${forumTopicUrl}${slug}/${id}\">\n${title}\n</a>\n${forumCategory(category_id)}\n</td>\n<td>\n<div class=\"avatar-container\">\n${avatars(posters, users)}\n</div>\n</td>\n<td>${posts_count - 1}</td>\n<td>${viewCount(views)}</td>\n<td>${timeAgo(bumped_at)}</td>\n</tr>`;\n}) join('');\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40692,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-fcc-forum-leaderboard\\673c91f0b934834bc4a3ecc2.md",
      "source_type": "git_repo"
    },
    "token_count": 262,
    "chunk_index": 30,
    "total_chunks": 31
  },
  {
    "id": "b33f7ff69f0924e348b0765b66bf21a8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-largest-number-finder\\a789b3483989747d63b0e427.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a789b3483989747d63b0e427\ntitle: Build the Largest Number Finder\nchallengeType: 26\ndashedName: build-the-largest-number-finder\n--description--\nIn this lab, you will build a function that returns an array consisting of the largest number from each provided sub-array Remember, you can iterate through an array with a simple for loop, and access each member with array syntax arr[i] Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create a function largestOfAll that takes an array of arrays as an argument The function should return an array containing the largest number from each sub-array --hints--\nYou should create a function named largestOfAll js\nassert isFunction(largestOfAll);\nlargestOfAll should take a single parameter js\nassert lengthOf(largestOfAll, 1);\nlargestOfAll([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]]) should return an array js\nassert isArray(\nlargestOfAll([\n[4, 5, 1, 3],\n[13, 27, 18, 26],\n[32, 35, 37, 39],\n[1000, 1001, 857, 1]\n])\n);\nlargestOfAll([[13, 27, 18, 26], [4, 5, 1, 3], [32, 35, 37, 39], [1000, 1001, 857, 1]]) should return [27, 5, 39, 1001] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-largest-number-finder\\a789b3483989747d63b0e427.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "894df04a823dfd59ad0e7aa8e0b29cf4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-largest-number-finder\\a789b3483989747d63b0e427.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "largestOfAll should take a single parameter js assert lengthOf(largestOfAll, 1); largestOfAll([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]]) should return an array js assert isArray( largestOfAll([ [4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1] ]) ); largestOfAll([[13, 27, 18, 26], [4, 5, 1, 3], [32, 35, 37, 39], [1000, 1001, 857, 1]]) should return [27, 5, 39, 1001] js assertdeepEqual(\nlargestOfAll([\n[13, 27, 18, 26],\n[4, 5, 1, 3],\n[32, 35, 37, 39],\n[1000, 1001, 857, 1]\n]),\n[27, 5, 39, 1001]\n);\nlargestOfAll([[4, 9, 1, 3], [13, 35, 18, 26], [32, 35, 97, 39], [1000000, 1001, 857, 1]]) should return [9, 35, 97, 1000000] js\nassert deepEqual(\nlargestOfAll([\n[4, 9, 1, 3],\n[13, 35, 18, 26],\n[32, 35, 97, 39],\n[1000000, 1001, 857, 1]\n]),\n[9, 35, 97, 1000000]\n);\nlargestOfAll([[17, 23, 25, 12], [25, 7, 34, 48], [4, -10, 18, 21], [-72, -3, -17, -10]]) should return [25, 48, 21, -3] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-largest-number-finder\\a789b3483989747d63b0e427.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "0dd959b1f208e3116d98ca36f8af325a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-largest-number-finder\\a789b3483989747d63b0e427.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "5, 39, 1001] ); largestOfAll([[4, 9, 1, 3], [13, 35, 18, 26], [32, 35, 97, 39], [1000000, 1001, 857, 1]]) should return [9, 35, 97, 1000000] js assert deepEqual( largestOfAll([ [4, 9, 1, 3], [13, 35, 18, 26], [32, 35, 97, 39], [1000000, 1001, 857, 1] ]), [9, 35, 97, 1000000] ); largestOfAll([[17, 23, 25, 12], [25, 7, 34, 48], [4, -10, 18, 21], [-72, -3, -17, -10]]) should return [25, 48, 21, -3] js assertdeepEqual(\nlargestOfAll([\n[17, 23, 25, 12],\n[25, 7, 34, 48],\n[4, -10, 18, 21],\n[-72, -3, -17, -10]\n]),\n[25, 48, 21, -3]\n);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nfunction largestOfAll(arr) {\nreturn arr map(subArr => Math max apply(null, subArr));\n}\nlargestOfAll([\n[4, 5, 1, 3],\n[13, 27, 18, 26],\n[32, 35, 37, 39],\n[1000, 1001, 857, 1]\n]);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2296,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-largest-number-finder\\a789b3483989747d63b0e427.md",
      "source_type": "git_repo"
    },
    "token_count": 393,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7ee48653eee5d80a68540270c1beb115",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-javascript-trivia-bot\\66ed41f912d0bb1dc62da5dd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66ed41f912d0bb1dc62da5dd\ntitle: Build a JavaScript Trivia Bot\nchallengeType: 26\ndashedName: lab-javascript-trivia-bot\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should log \"Hello I'm your coding fun fact guide \" to the console as a greeting message to the user You should create three variables: botName, botLocation, and favoriteLanguage, that store the bot's name, where it's from, and its favorite coding language, respectively You should use string concatenation to log \"My name is (botName) and I live on (botLocation) \" to the console You should use string concatenation to log \"My favorite programming language is (favoriteLanguage) \" to the console You should use let to create a codingFact variable and assign it a string that is a fun fact about your bot's favorite coding language and uses string concatenation to include the use of the favoriteLanguage variable You should log the codingFact to the console You should reassign the codingFact variable to a new fact about the bot's favorite language using the favoriteLanguage variable again You should log the codingFact to the console again You should reassign the codingFact variable again to another new fact about the bot's favorite language using the favoriteLanguage variable You should log the codingFact to the console a third time You should log \"It was fun sharing these facts with you Goodbye - (botName) from (botLocation) \" to the console as a farewell statement from the bot --before-each--\njs\nconst spy = __helpers spyOn(console, 'log');\nconst getLogs = () => spy calls map(call => call [0]);\n--hints--\nYou should log \"Hello I'm your coding fun fact guide \" to the console js\nassert equal(getLogs()[0], \"Hello I'm your coding fun fact guide \")\nYou should declare a botName variable Double check for any spelling or casing errors js\nassert exists(botName);\nYour botName variable should be a string js\nassert isString(botName);\nYou should declare a botLocation variable Double check for any spelling or casing errors js\nassert exists(botLocation);\nYour botLocation variable should be a string js\nassert isString(botLocation);\nYou should declare a favoriteLanguage variable Double check for any spelling or casing errors js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6973,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-javascript-trivia-bot\\66ed41f912d0bb1dc62da5dd.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "87944bf59f09ffee4e0189ada90efd87",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-javascript-trivia-bot\\66ed41f912d0bb1dc62da5dd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "your coding fun fact guide \") You should declare a botName variable Double check for any spelling or casing errors js assert exists(botName); Your botName variable should be a string js assert isString(botName); You should declare a botLocation variable Double check for any spelling or casing errors js assert exists(botLocation); Your botLocation variable should be a string js assert isString(botLocation); You should declare a favoriteLanguage variable Double check for any spelling or casing errors js assertexists(favoriteLanguage);\nYour favoriteLanguage variable should be a string js\nassert isString(favoriteLanguage);\nYou should log to the console \"My name is (botName) and I live on (botLocation) \" using concatenation to add the variables to the string js\nconst codeWithoutComments = __helpers removeJSComments(code);\nassert equal(getLogs()[1], `My name is ${botName} and I live on ${botLocation} `)\nassert match(codeWithoutComments, /is (\"|')\\s*\\+\\s*botName\\s*\\+\\s*(\"|') and I live on \\2\\s*\\+\\s*botLocation\\s*\\+\\s*('|\")\\ /)\nYou should log to the console \"My favorite programming language is (favoriteLanguage) \" using concatenation to add the variable to the string js\nconst codeWithoutComments = __helpers removeJSComments(code);\nassert equal(getLogs()[2], `My favorite programming language is ${favoriteLanguage} `)\nassert match(codeWithoutComments, /language is ('|\")\\s*\\+\\s*favoriteLanguage\\s*\\+\\s*('|\")\\ /);\nYou should use let to declare a new variable codingFact js\nconst codeWithoutComments = __helpers removeJSComments(code);\nassert match(code, /let\\s+codingFact/)\nYou should give codingFact a value that includes favoriteLanguage using concatenation js\nconst codeWithoutComments = __helpers removeJSComments(code);\nassert match(code, /let\\s+codingFact/);\nassert match(code, /codingFact\\s*=\\s*((\"|') + \\1 \\s*\\+\\s*|favoriteLanguage\\s*\\+\\s*((\"|') + \\3 ))/);\nassert exists(codingFact);\nassert isNotEmpty(codingFact);\nassert include(String(codingFact), favoriteLanguage);\nYou should log codingFact to the console js\nconst codeWithoutComments = __helpers removeJSComments(code);\nconst loggingCodingFacts = codeWithoutComments match(/console\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6973,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-javascript-trivia-bot\\66ed41f912d0bb1dc62da5dd.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "034438459cdc14cc513e567ad31f0483",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-javascript-trivia-bot\\66ed41f912d0bb1dc62da5dd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is ('|\")\\s*\\+\\s*favoriteLanguage\\s*\\+\\s*('|\")\\ /); You should use let to declare a new variable codingFact js const codeWithoutComments = __helpers removeJSComments(code); assert match(code, /let\\s+codingFact/) You should give codingFact a value that includes favoriteLanguage using concatenation js const codeWithoutComments = __helpers removeJSComments(code); assert match(code, /let\\s+codingFact/); assert match(code, /codingFact\\s*=\\s*((\"|') + \\1 \\s*\\+\\s*|favoriteLanguage\\s*\\+\\s*((\"|') + \\3 ))/); assert exists(codingFact); assert isNotEmpty(codingFact); assert include(String(codingFact), favoriteLanguage); You should log codingFact to the console js const codeWithoutComments = __helpers removeJSComments(code); const loggingCodingFacts = codeWithoutComments match(/console\\log\\(\\s*codingFact\\s*\\)/g)\nassert include(getLogs()[3], favoriteLanguage);\nassert isAtLeast(loggingCodingFacts length, 1);\nYou should assign a new value to codingFact that also contains favoriteLanguage, and log it to the console js\nconst codeWithoutComments = __helpers removeJSComments(code);\nconst loggingCodingFacts = codeWithoutComments match(/console\\ log\\(\\s*codingFact\\s*\\)/g)\nconst [first, second, third] = codeWithoutComments match(/(let ) \\s*codingFact\\s*=\\s*((\"|') + \\2 \\s*\\+\\s*|favoriteLanguage\\s*\\+\\s*((\"|') + \\2 ))/g);\nassert include(getLogs()[4], favoriteLanguage);\nassert notEqual(getLogs()[4], getLogs()[3]);\nassert isAtLeast(loggingCodingFacts length, 2);\nassert exists(second);\nassert isNotEmpty(codingFact);\nYou should assign a value to codingFact for the third time that also contains favoriteLanguage, and log it to the console js\nconst codeWithoutComments = __helpers removeJSComments(code);\nconst loggingCodingFacts = codeWithoutComments match(/console\\ log\\(\\s*codingFact\\s*\\)/g)\nconst [first, second, third] = codeWithoutComments match(/(let ) \\s*codingFact\\s*=\\s*((\"|') + \\2 \\s*\\+\\s*|favoriteLanguage\\s*\\+\\s*((\"|') + \\2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6973,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-javascript-trivia-bot\\66ed41f912d0bb1dc62da5dd.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "9b532f9b125aa711f0c34475e6b60bec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-javascript-trivia-bot\\66ed41f912d0bb1dc62da5dd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "const [first, second, third] = codeWithoutComments match(/(let ) \\s*codingFact\\s*=\\s*((\"|') + \\2 \\s*\\+\\s*|favoriteLanguage\\s*\\+\\s*((\"|') + \\2 ))/g); assert include(getLogs()[4], favoriteLanguage); assert notEqual(getLogs()[4], getLogs()[3]); assert isAtLeast(loggingCodingFacts length, 2); assert exists(second); assert isNotEmpty(codingFact); You should assign a value to codingFact for the third time that also contains favoriteLanguage, and log it to the console js const codeWithoutComments = __helpers removeJSComments(code); const loggingCodingFacts = codeWithoutComments match(/console\\ log\\(\\s*codingFact\\s*\\)/g) const [first, second, third] = codeWithoutComments match(/(let ) \\s*codingFact\\s*=\\s*((\"|') + \\2 \\s*\\+\\s*|favoriteLanguage\\s*\\+\\s*((\"|') + \\2))/g);\nassert include(getLogs()[5], favoriteLanguage);\nassert notEqual(getLogs()[5], getLogs()[4]);\nassert equal(getLogs()[5], codingFact);\nassert lengthOf(loggingCodingFacts, 3);\nassert exists(third);\nassert isNotEmpty(codingFact);\nYou should log to the console \"It was fun sharing these facts with you Goodbye - (botName) from (botLocation) \" using concatenation to add the values of the variables js\nconst codeWithoutComments = __helpers removeJSComments(code);\nassert equal(getLogs()[6], `It was fun sharing these facts with you Goodbye - ${botName} from ${botLocation} `);\nassert match(codeWithoutComments, /\\ Goodbye - (\"|')\\s*\\+\\s*botName\\s*\\+\\s*('|\") from \\2\\s*\\+\\s*botLocation\\s*\\+\\s*(\"|')\\ /)\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nconsole log(\"Hello I'm your coding fun fact guide \");\nconst botName = \"JsBot\";\nconst botLocation = \"planet Eris\";\nconst favoriteLanguage = \"JavaScript\";\nconsole log(\"My name is \" + botName + \" and I live on \" + botLocation + \" \");\nconsole log(\"My favorite programming language is \" + favoriteLanguage + \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6973,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-javascript-trivia-bot\\66ed41f912d0bb1dc62da5dd.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "2c89a9c1d9764bb0a5c37ad51d455d9d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-javascript-trivia-bot\\66ed41f912d0bb1dc62da5dd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "facts with you Goodbye - ${botName} from ${botLocation} `); assert match(codeWithoutComments, /\\ Goodbye - (\"|')\\s*\\+\\s*botName\\s*\\+\\s*('|\") from \\2\\s*\\+\\s*botLocation\\s*\\+\\s*(\"|')\\ /) --seed-- --seed-contents-- ```js ``` --solutions-- ```js console log(\"Hello I'm your coding fun fact guide \"); const botName = \"JsBot\"; const botLocation = \"planet Eris\"; const favoriteLanguage = \"JavaScript\"; console log(\"My name is \" + botName + \" and I live on \" + botLocation + \" \"); console log(\"My favorite programming language is \" + favoriteLanguage + \"\");\nlet codingFact = \"Did you know that \" + favoriteLanguage + \" was created in just 10 days \";\nconsole log(codingFact);\ncodingFact = \"Another fun fact: \" + favoriteLanguage + \"was originally called Mocha \";\nconsole log(codingFact);\ncodingFact = \"Also, \" + favoriteLanguage + \" is the most popular programming language in the world \";\nconsole log(codingFact);\nconsole log(\"It was fun sharing these facts with you Goodbye - \" + botName + \" from \" + botLocation + \" \");\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6973,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-javascript-trivia-bot\\66ed41f912d0bb1dc62da5dd.md",
      "source_type": "git_repo"
    },
    "token_count": 267,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "63f5fbf88b52c10232890c23bd2db7c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-leap-year-calculator\\66c06fad3475cd92421b9ac2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c06fad3475cd92421b9ac2\ntitle: Build a Leap Year Calculator\nchallengeType: 26\ndashedName: build-a-leap-year-calculator\n--description--\nA leap year is a year that is divisible by 4, except for years that are divisible by 100 and not divisible by 400 For example, 2000 is a leap year, but 1900 is not Also, a leap year has an extra day in February, which is the 29th day of the month Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nDefine a function called isLeapYear that takes a number as an argument Outside the function, declare a variable year that stores the value of the year you want to check Inside the function, use an if/ else statement or a ternary operator to check if the year is a leap year To check if the year is a leap year, fulfill the following conditions:\nIf the year is divisible by 4, then it is a leap year Unless the year is also divisible by 100, then it is not a leap year Unless the year is also divisible by 400, then it is a leap year If the year is a leap year, return [year] is a leap year Otherwise, return [year] is not a leap year You will replace [year] with the parameter defined in the isLeapYear function You should call the isLeapYear function with year as the argument and assign the result to a variable named result You should output the result variable to the console using console log() --hints--\nYou should define a function named isLeapYear js\nassert isFunction(isLeapYear);\nThe isLeapYear function should take a number as an argument js\nassert match(isLeapYear toString(), /\\s*isLeapYear\\(\\s*\\w+\\s*\\)/);\nYou should declare a variable year and assign it a value to check if it is a leap year js\nassert isDefined(year);\nThe year variable shouldn't be empty js\nassert isNotNull(year);\nWith 2024 as the value of the year variable, the result should be 2024 is a leap year js\nassert strictEqual(isLeapYear(2024), '2024 is a leap year ');\nWith 2000 as the value of the year variable, the result should be 2000 is a leap year js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3418,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-leap-year-calculator\\66c06fad3475cd92421b9ac2.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "520f9246104ed37d44ebf202d78e1de0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-leap-year-calculator\\66c06fad3475cd92421b9ac2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "declare a variable year and assign it a value to check if it is a leap year js assert isDefined(year); The year variable shouldn't be empty js assert isNotNull(year); With 2024 as the value of the year variable, the result should be 2024 is a leap year js assert strictEqual(isLeapYear(2024), '2024 is a leap year '); With 2000 as the value of the year variable, the result should be 2000 is a leap year js assertstrictEqual(isLeapYear(2000), '2000 is a leap year ');\nWith 1900 as the value of the year variable, the result should be 1900 is not a leap year ```js\nassert strictEqual(isLeapYear(1900), '1900 is not a leap year ');\n```\nYou should call the isLeapYear function and pass year as a parameter js\nassert match(__helpers removeJSComments(code), /isLeapYear\\(\\s*year\\s*\\)/);\nYou should declare a result variable js\nassert isDefined(result);\nYou should store the result of calling the isLeapYear function in a variable named result js\nassert match(__helpers removeJSComments(code), /result\\s*=\\s*isLeapYear\\(\\s*year\\s*\\)/);\nYou should output the result to the console using console log() js\nassert match(__helpers removeJSComments(code), /console\\ log\\(\\s*result\\s*\\)/);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nfunction isLeapYear(year) {\nif ((year % 4 === 0 && year % 100 == 0) || year % 400 === 0) {\nreturn(year + \" is a leap year \");\n} else {\nreturn(year + \" is not a leap year \");\n}\n}\nconst year = 2024;\nconst result = isLeapYear(year);\nconsole log(result);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3418,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-leap-year-calculator\\66c06fad3475cd92421b9ac2.md",
      "source_type": "git_repo"
    },
    "token_count": 401,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2a77067b3284c53c6b707b38fa575401",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-job-application-form\\66faac4139dbbd5dd632c860.md",
    "source_type": "git_repo",
    "title": "Job Application Form",
    "content": "id: 66faac4139dbbd5dd632c860\ntitle: Build a Job Application Form\nchallengeType: 25\ndashedName: lab-job-application-form\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a div element with the class container Inside the div element, you should have a form element The form should contain an input element with the type text and the id name for entering the user's full name You should have another input element with the type email and the id email for entering the user's email address The form should include a select element with the id position that allows users to select a job position You should have a fieldset element with class of radio-group Inside radio-group you should have a set of input elements with the type radio and relevant labels for selecting availability options (e g , Full-Time, Part-Time) The group name should be availability You should have a textarea element with the id message for entering a message You should associate every input element with a label element You should have a button element with the type submit for submitting the form Add a :focus pseudo-class to the input and textarea elements to change their border color when focused The input, select and textarea elements should have an :invalid pseudo-class that changes the border color to red when invalid input is detected The input, select and textarea elements should have a :valid pseudo-class that changes the border color to green when valid input is entered The button element should have a :hover pseudo-class that changes the background color when hovered over Use the :checked pseudo-class on radio-group input[type=\"radio\"] to add a border color, background color and a box shadow when the radio button is selected Use the :checked pseudo-class on radio buttons to change the text color of the associated label when the option is selected Add a :first-of-type pseudo-class to the input element to style the first input field differently (e g , rounded corners) Note: Be sure to link your stylesheet in your HTML and apply your CSS --hints--\nYou should have a div element with the class container js\nassert exists(document querySelector(\"div container\"));\nInside the div element, you should have a form element js\nassert exists(document querySelector(\"div container > form\"));\nThe form should contain an input element with the type text and the id name for entering the user's full name js\nassert exists(document querySelector(\"div",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-job-application-form\\66faac4139dbbd5dd632c860.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "332698117dbb516b9d8b1fa78a67de64",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-job-application-form\\66faac4139dbbd5dd632c860.md",
    "source_type": "git_repo",
    "title": "Job Application Form",
    "content": "g , rounded corners) Note: Be sure to link your stylesheet in your HTML and apply your CSS --hints-- You should have a div element with the class container js assert exists(document querySelector(\"div container\")); Inside the div element, you should have a form element js assert exists(document querySelector(\"div container > form\")); The form should contain an input element with the type text and the id name for entering the user's full name js assert exists(document querySelector(\"divcontainer > form input#name[type='text']\"));\nYou should have another input element with the type email and the id email for entering the user's email address js\nassert exists(document querySelector(\"div container > form input#email[type='email']\"));\nThe form should include a select element with the id position with some option elements js\nassert exists(document querySelector(\"div container > form select#position\"));\nassert isNotEmpty(document querySelectorAll(\"div container > form select#position > option\"))\nYou should have a fieldset or section element with the class radio-group js\nassert lengthOf(document querySelectorAll('form fieldset radio-group, form section radio-group'), 1)\nInside radio-group you should have a group of input elements with the type radio for selecting availability options The group name should be availability js\nassert isAtLeast(document querySelectorAll(\"div container > form radio-group input[type='radio'][name='availability']\") length, 2);\nassert isEmpty(document querySelectorAll(\"div container > form radio-group input[type='radio']:not([name='availability'])\"))\nYou should have a textarea element with the id message for entering a message js\nassert isNotEmpty(document querySelectorAll(\"div container > form textarea#message\"));\nYou should associate every input element with a label element js\nconst els = document querySelectorAll('input');\nassert isNotEmpty(els);\nels forEach(input => {\nconst label = document querySelector(`label[for=\"${input id}\"]`) || input parentElement;\nassert exists(label);\nassert equal(label tagName, \"LABEL\");\n})\nYou should have a button element with the type submit for submitting the form js\nassert isNotEmpty(document querySelectorAll(\"div container > form button[type='submit']\"));\nYou should add a :focus pseudo-class to the input and textarea elements to change their border color when focused Use a list selector in the given order js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle('input:focus, textarea:focus')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-job-application-form\\66faac4139dbbd5dd632c860.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "38b80d4bc204abffb5139110b63d14c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-job-application-form\\66faac4139dbbd5dd632c860.md",
    "source_type": "git_repo",
    "title": "Job Application Form",
    "content": "els forEach(input => { const label = document querySelector(`label[for=\"${input id}\"]`) || input parentElement; assert exists(label); assert equal(label tagName, \"LABEL\"); }) You should have a button element with the type submit for submitting the form js assert isNotEmpty(document querySelectorAll(\"div container > form button[type='submit']\")); You should add a :focus pseudo-class to the input and textarea elements to change their border color when focused Use a list selector in the given order js assert isNotEmpty(new __helpers CSSHelp(document) getStyle('input:focus, textarea:focus')getPropertyValue('border-color'))\nThe input, select and textarea elements should have an :invalid pseudo-class that changes the border color to red when invalid input is detected Use a list selector in the given order js\nassert equal(new __helpers CSSHelp(document) getStyle('input:invalid, select:invalid, textarea:invalid') getPropertyValue('border-color'), 'red')\nThe input, select and textarea elements should have a :valid pseudo-class that changes the border color to green when valid input is entered Use a list selector in the given order js\nassert equal(new __helpers CSSHelp(document) getStyle('input:valid, select:valid, textarea:valid') getPropertyValue('border-color'), 'green')\nThe button element should have a :hover pseudo-class that changes the background color when hovered over js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle('button:hover') getPropertyValue('background-color'))\nYou should use the :checked pseudo-class on radio-group input[type=\"radio\"] to add a border color when the radio button is selected js\nconst style = new __helpers CSSHelp(document) getStyle(' radio-group input[type=\"radio\"]:checked');\nassert isNotEmpty(style getPropertyValue('border-color'));\nYou should use the :checked pseudo-class on radio-group input[type=\"radio\"] to add a background color when the radio button is selected js\nconst style = new __helpers CSSHelp(document) getStyle(' radio-group input[type=\"radio\"]:checked');\nassert isNotEmpty(style getPropertyValue('background-color'));\nYou should use the :checked pseudo-class on radio-group input[type=\"radio\"] to add a box shadow when the radio button is selected js\nconst style = new __helpers CSSHelp(document) getStyle(' radio-group input[type=\"radio\"]:checked');\nassert isNotEmpty(style",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-job-application-form\\66faac4139dbbd5dd632c860.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "f02a372fa54114f81b7554cc83bdf8f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-job-application-form\\66faac4139dbbd5dd632c860.md",
    "source_type": "git_repo",
    "title": "Job Application Form",
    "content": "style = new __helpers CSSHelp(document) getStyle(' radio-group input[type=\"radio\"]:checked'); assert isNotEmpty(style getPropertyValue('border-color')); You should use the :checked pseudo-class on radio-group input[type=\"radio\"] to add a background color when the radio button is selected js const style = new __helpers CSSHelp(document) getStyle(' radio-group input[type=\"radio\"]:checked'); assert isNotEmpty(style getPropertyValue('background-color')); You should use the :checked pseudo-class on radio-group input[type=\"radio\"] to add a box shadow when the radio button is selected js const style = new __helpers CSSHelp(document) getStyle(' radio-group input[type=\"radio\"]:checked'); assert isNotEmpty(stylegetPropertyValue('box-shadow'));\nYou should use the :checked pseudo-class on radio buttons to change the text color of the associated label when the option is selected js\nconst els = document querySelectorAll('input[type=\"radio\"]');\nassert isNotEmpty(els);\nels forEach(input => {\nconst label = document querySelector(`label[for=\"${input id}\"]`) || input parentElement;\nassert equal(label tagName, \"LABEL\");\ninput checked = false;\nconst colorBefore = getComputedStyle(label) color;\ninput checked = true;\nconst colorAfter = getComputedStyle(label) color;\nassert notEqual(colorAfter, colorBefore);\n})\nAdd a :first-of-type pseudo-class to the input elements to style the first input field differently js\nconst pseudo = new __helpers CSSHelp(document) getStyle('input:first-of-type');\nassert exists(pseudo);\nassert isNotEmpty([ pseudo]);\n--seed--\n--seed-contents--\n```html\nJob Application Form\n```\n```css\n```\n--solutions--\n```html\nJob Application\nJob Application Form\nFull Name:\nEmail:\nPosition:\nSelect a position\nDeveloper\nDesigner\nManager\nAvailability:\nFull-Time\nPart-Time\nWhy do you want this job Submit Application\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\nbackground-color: white;\npadding: 20px;\n} container {\nmax-width: 600px;\nmargin: 0 auto;\nbackground-color: white;\npadding: 20px;\nborder-radius: 8px;\nbox-shadow: 0 4px 8px rgba(0, 0, 0, 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-job-application-form\\66faac4139dbbd5dd632c860.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "07bdb71858b4d6e294156f2ae9b30c4e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-job-application-form\\66faac4139dbbd5dd632c860.md",
    "source_type": "git_repo",
    "title": "Job Application Form",
    "content": "getStyle('input:first-of-type'); assert exists(pseudo); assert isNotEmpty([ pseudo]); --seed-- --seed-contents-- ```html Job Application Form ``` ```css ``` --solutions-- ```html Job Application Job Application Form Full Name: Email: Position: Select a position Developer Designer Manager Availability: Full-Time Part-Time Why do you want this job Submit Application ``` ```css body { font-family: Arial, sans-serif; background-color: white; padding: 20px; } container { max-width: 600px; margin: 0 auto; background-color: white; padding: 20px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 01);\n}\nh1 {\ntext-align: center;\n}\nlabel {\ndisplay: block;\nmargin-bottom: 5px;\nfont-weight: bold;\n}\ninput, select, textarea {\nwidth: 100%;\npadding: 10px;\nmargin-bottom: 15px;\nborder: 1px solid #ccc;\nborder-radius: 4px;\nbox-sizing: border-box;\n} radio-group {\ndisplay: flex;\nalign-items: center;\nmargin-top: 15px;\n} radio-group input[type=\"radio\"] {\nmargin-right: 10px;\n-webkit-appearance: none;\n-moz-appearance: none;\nappearance: none;\nwidth: 20px;\nheight: 20px;\nborder: 2px solid #ccc;\nborder-radius: 50%;\noutline: none;\ntransition: border-color 0 2s;\n} radio-group label {\nmargin: 0;\nfont-weight: normal;\ncursor: pointer;\n}\nbutton {\nwidth: 100%;\npadding: 10px;\nbackground-color: green;\nborder: none;\ncolor: white;\nborder-radius: 4px;\nfont-size: 16px;\ncursor: pointer;\n}\ninput:focus, textarea:focus {\nborder-color: blue;\noutline: none;\n}\ninput:invalid, select:invalid, textarea:invalid {\nborder-color: red;\n}\ninput:valid, select:valid, textarea:valid {\nborder-color: green;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-job-application-form\\66faac4139dbbd5dd632c860.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "aaeb1127195a1945e835f71bfae85ade",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-job-application-form\\66faac4139dbbd5dd632c860.md",
    "source_type": "git_repo",
    "title": "Job Application Form",
    "content": "margin-right: 10px; -webkit-appearance: none; -moz-appearance: none; appearance: none; width: 20px; height: 20px; border: 2px solid #ccc; border-radius: 50%; outline: none; transition: border-color 0 2s; } radio-group label { margin: 0; font-weight: normal; cursor: pointer; } button { width: 100%; padding: 10px; background-color: green; border: none; color: white; border-radius: 4px; font-size: 16px; cursor: pointer; } input:focus, textarea:focus { border-color: blue; outline: none; } input:invalid, select:invalid, textarea:invalid { border-color: red; } input:valid, select:valid, textarea:valid { border-color: green; }radio-group input[type=\"radio\"]:checked {\nborder-color: green;\nbackground-color: green;\nbox-shadow: inset 0 0 0 4px white;\n}\nbutton:hover {\nbackground-color: black;\n}\ninput[type=\"radio\"]:checked + label {\ncolor: green;\n}\nbutton:disabled {\nbackground-color: grey;\n}\ninput:first-of-type {\nborder-top-left-radius: 4px;\nborder-top-right-radius: 4px;\n}\ntextarea:nth-child(5) {\nborder-bottom-left-radius: 4px;\nborder-bottom-right-radius: 4px;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-job-application-form\\66faac4139dbbd5dd632c860.md",
      "source_type": "git_repo"
    },
    "token_count": 302,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "54e03794fbd0e8e212db3aab2b34e7e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-longest-word-in-a-string\\a26cbbe9ad8655a977e1ceb5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a26cbbe9ad8655a977e1ceb5\ntitle: Build a Longest Word Finder App\nchallengeType: 26\ndashedName: build-a-longest-word-finder-app\n--description--\nIn this lab, you will build a function that returns the length of the longest word in the provided sentence For example, in the sentence \"The quick brown fox jumped over the lazy dog\", the longest word is \"jumped\", which has a length of 6 Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create a function named findLongestWordLength that takes a string as an argument The function should return the length of the longest word in the string --hints--\nYou should create a function named findLongestWordLength js\nassert isFunction(findLongestWordLength);\nfindLongestWordLength should have a single parameter js\nassert lengthOf(findLongestWordLength, 1);\nfindLongestWordLength(\"The quick brown fox jumped over the lazy dog\") should return a number js\nassert isNumber(\nfindLongestWordLength('The quick brown fox jumped over the lazy dog')\n);\nfindLongestWordLength(\"The quick brown fox jumped over the lazy dog\") should return 6 js\nassert strictEqual(\nfindLongestWordLength('The quick brown fox jumped over the lazy dog'),\n6\n);\nfindLongestWordLength(\"May the force be with you\") should return 5 js\nassert strictEqual(findLongestWordLength('May the force be with you'), 5);\nfindLongestWordLength(\"Google do a barrel roll\") should return 6 js\nassert strictEqual(findLongestWordLength('Google do a barrel roll'), 6);\nfindLongestWordLength(\"What is the average airspeed velocity of an unladen swallow\") should return 8 js\nassert strictEqual(\nfindLongestWordLength(\n'What is the average airspeed velocity of an unladen swallow'\n),\n8\n);\nfindLongestWordLength(\"What if we try a super-long word such as otorhinolaryngology\") should return 19 js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-longest-word-in-a-string\\a26cbbe9ad8655a977e1ceb5.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "41f3c70df9db16468d78cfe6b87f0610",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-longest-word-in-a-string\\a26cbbe9ad8655a977e1ceb5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "be with you\") should return 5 js assert strictEqual(findLongestWordLength('May the force be with you'), 5); findLongestWordLength(\"Google do a barrel roll\") should return 6 js assert strictEqual(findLongestWordLength('Google do a barrel roll'), 6); findLongestWordLength(\"What is the average airspeed velocity of an unladen swallow\") should return 8 js assert strictEqual( findLongestWordLength( 'What is the average airspeed velocity of an unladen swallow' ), 8 ); findLongestWordLength(\"What if we try a super-long word such as otorhinolaryngology\") should return 19 js assertstrictEqual(\nfindLongestWordLength(\n'What if we try a super-long word such as otorhinolaryngology'\n),\n19\n);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nfunction findLongestWordLength(str) {\nreturn str split(' ') sort((a, b) => b length - a length)[0] length;\n}\nfindLongestWordLength('The quick brown fox jumped over the lazy dog');\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-longest-word-in-a-string\\a26cbbe9ad8655a977e1ceb5.md",
      "source_type": "git_repo"
    },
    "token_count": 246,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5eba0c380af31a23ff33f637a4ae1de5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 686b9720ee1d032bd77a480a\ntitle: Debug an ISBN Validator\nchallengeType: 27\ndashedName: debug-an-isbn-validator\n--description--\nThe ISBN (International Standard Book Number) is a unique identifier assigned to commercial books It can be either 10 or 13 digits long, and the last digit is a check digit calculated from the other digits Camperbot has tried to build their own ISBN validator However, they have made a few mistakes along the way In this lab, you will fix the existing code and make it function properly Expected behavior:\nWhen the user runs the program, it will show the prompt Enter ISBN and length: The user can enter the ISBN code they want to validate in ISBN,length format The ISBN code should not contain hyphens, followed by its length (10 or 13), separated by a comma Example inputs:\n1530051126,10 for ISBN-10 codes 9781530051120,13 for ISBN-13 codes How to find the check digit:\nYou don't have to know the detailed calculation logic in this lab The functions calculate_check_digit_10 and calculate_check_digit_13 will take care of the calculation and return the expected check digit in string The check digit for ISBN-10 codes can be a number from 0 to 9 or an uppercase letter X The check digit for ISBN-13 codes can be a number from 0 to 9 Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should fix the IndentationError in the current code Even if the user does not enter a comma separated value, the program should handle the IndexError without crashing When the user does not enter a comma separated value, they should see the message Enter comma-separated values in the console, and the program should terminate Even if the user enters a non-numeric value for the length, the program should handle the ValueError without crashing When the user enters a non-numeric value for the length, they should see the message Length must be a number in the console, and the program should terminate You should fix the off-by-one error in the validate_isbn function You should fix the TypeError in the current code that occurs when the user enters a valid ISBN code You should fix the IndexError in the current code when the user enters a valid ISBN code",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17543,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 12
  },
  {
    "id": "a9d70bca07a12dfa3a0c1161cf591815",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "without crashing When the user enters a non-numeric value for the length, they should see the message Length must be a number in the console, and the program should terminate You should fix the off-by-one error in the validate_isbn function You should fix the TypeError in the current code that occurs when the user enters a valid ISBN code You should fix the IndexError in the current code when the user enters a valid ISBN codeEven if the user enters an incorrect ISBN code with characters other than numbers, the program should handle the ValueError that occurs without crashing When the user enters an incorrect ISBN code with characters other than numbers, they should see the message Invalid character was found in the console When the user enters 1530051126,10, they should see the message Valid ISBN Code When the user enters 9781530051120,13, they should see the message Valid ISBN Code Important: you will need to comment out the main() call in the global space for the tests to run properly When you complete the project, the user should see the following messages depending on the values they enter | ISBN Code | Length | Message | Example input |\n|-----------|--------|---------| ------------- |\n| Valid | Valid | Valid ISBN Code | 1530051126,10 |\n| Invalid Number | Valid | Invalid ISBN Code | 1530051125,10 |\n| Does not match specified length or left blank | Valid | ISBN-10 code should be 10 digits long or ISBN-13 code should be 13 digits long , depending on the length they entered | 9781530051120,10 or 1530051126,13 |\n| Contains non-numeric characters (except for the check digit) | Valid | Invalid character was found | 15-0051126,10 |\n| Any | Invalid Number | Length should be 10 or 13 | 1530051126,9 |\n| Any | Contains non-numeric characters or left blank | Length must be a number | 1530051125,A |\n| Not comma-separated | Not comma-separated | Enter comma-separated values | 1530051125 |\nYou can use the following values to test your code manually if you would like",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17543,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 1,
    "total_chunks": 12
  },
  {
    "id": "bd4180bfb89cbd6b21febfdd8b37cf87",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "(except for the check digit) | Valid | Invalid character was found | 15-0051126,10 | | Any | Invalid Number | Length should be 10 or 13 | 1530051126,9 | | Any | Contains non-numeric characters or left blank | Length must be a number | 1530051125,A | | Not comma-separated | Not comma-separated | Enter comma-separated values | 1530051125 | You can use the following values to test your code manually if you would likeExample inputs for valid ISBN-10 codes:\n1530051126,10\n9971502100,10\n080442957X,10\nExample inputs for valid ISBN-13 codes:\n9781530051120,13\n9781947172104,13\n--hints--\nYou should comment out the call to the main function to allow for the rest of the tests to work properly js\n({\ntest: () => runPython('assert not _Node(_code) has_call(\"main()\")')\n})\nYou should have a validate_isbn function js\n({\ntest: () => runPython('assert _Node(_code) has_function(\"validate_isbn\")')\n})\nYou should have a calculate_check_digit_10 function js\n({\ntest: () => runPython('assert _Node(_code) has_function(\"calculate_check_digit_10\")')\n})\nYou should have a calculate_check_digit_13 function js\n({\ntest: () => runPython('assert _Node(_code) has_function(\"calculate_check_digit_13\")')\n})\nYou should have a main function js\n({\ntest: () => runPython('assert _Node(_code) has_function(\"main\")')\n})\nWhen the user inputs a value that is not a comma separated value, you should see the message Enter comma-separated values in the console ``js\n({test: () => {runPython(\nbuilt_in_print = print\nout = []\ndef input(args):\nreturn \"9781530051120\"\ndef custom_print(args, **kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\ntry:\nmain()\nexcept:\npass\nfinally:\nprint = built_in_print\nassert \"Enter comma-separated values \" in out\n`)\n}})\n```\nWhen the user inputs a non-numeric value for the length, you should see the message Length must be a number in the console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17543,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 2,
    "total_chunks": 12
  },
  {
    "id": "468213c88e99c720a5590e50078e6fe0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "comma-separated values in the console ``js ({test: () => {runPython( built_in_print = print out = [] def input(args): return \"9781530051120\" def custom_print(args, **kwargs): call_args = [arg for arg in args] out extend(call_args) print = custom_print try: main() except: pass finally: print = built_in_print assert \"Enter comma-separated values \" in out `) }}) ``` When the user inputs a non-numeric value for the length, you should see the message Length must be a number in the console``js\n({test: () => {runPython(\nbuilt_in_print = print\nout = []\ndef input(args):\nreturn \"9781530051120,a\"\ndef custom_print(args, **kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\ntry:\nmain()\nexcept:\npass\nfinally:\nprint = built_in_print\nassert \"Length must be a number \" in out\n`)\n}})\n```\nWhen the user enters an incorrect ISBN code with characters other than numbers, you should see the message Invalid character was found in the console ``js\n({test: () => {runPython(\nbuilt_in_print = print\nout = []\ndef input(args):\nreturn \"978IS3OOSII2O,13\"\ndef custom_print(args, **kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\ntry:\nmain()\nexcept:\npass\nfinally:\nprint = built_in_print\nassert \"Invalid character was found \" in out\n`)\n}})\n```\nWhen the user enters 1530051126,10, you should see the message Valid ISBN Code in the console ``js\n({test: () => {runPython(\nbuilt_in_print = print\nout = []\ndef input(args):\nreturn \"1530051126,10\"\ndef custom_print(args, **kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\ntry:\nmain()\nexcept:\npass\nfinally:\nprint = built_in_print\nassert \"Valid ISBN Code \" in out\n`)\n}})\n```\nWhen the user enters 9781530051120,13, you should see the message Valid ISBN Code",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17543,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 3,
    "total_chunks": 12
  },
  {
    "id": "04413a090a89b975f7d5b0a8a54a386b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the user enters 1530051126,10, you should see the message Valid ISBN Code in the console ``js ({test: () => {runPython( built_in_print = print out = [] def input(args): return \"1530051126,10\" def custom_print(args, **kwargs): call_args = [arg for arg in args] out extend(call_args) print = custom_print try: main() except: pass finally: print = built_in_print assert \"Valid ISBN Code \" in out `) }}) ``` When the user enters 9781530051120,13, you should see the message Valid ISBN Code``js\n({test: () => {runPython(\nbuilt_in_print = print\nout = []\ndef input(args):\nreturn \"9781530051120,13\"\ndef custom_print(args, **kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\ntry:\nmain()\nexcept:\npass\nfinally:\nprint = built_in_print\nassert \"Valid ISBN Code \" in out\n`)\n}})\n```\nWhen the user enters 1530051125,10, you should see the message Invalid ISBN Code ``js\n({test: () => {runPython(\nbuilt_in_print = print\nout = []\ndef input(args):\nreturn \"1530051125,10\"\ndef custom_print(args, **kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\ntry:\nmain()\nexcept:\npass\nfinally:\nprint = built_in_print\nassert \"Invalid ISBN Code \" in out\n`)\n}})\n```\nWhen the user enters 9781530051120,10, you should see the message ISBN-10 code should be 10 digits long ``js\n({test: () => {runPython(\nbuilt_in_print = print\nout = []\ndef input(args):\nreturn \"9781530051120,10\"\ndef custom_print(args, **kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\ntry:\nmain()\nexcept:\npass\nfinally:\nprint = built_in_print\nassert \"ISBN-10 code should be 10 digits long \" in out\n`)\n}})\n```\nWhen the user enters 1530051126,13, you should see the message ISBN-13 code should be 13 digits long",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17543,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 4,
    "total_chunks": 12
  },
  {
    "id": "97064744a09201886145487f6a99537b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "ISBN-10 code should be 10 digits long ``js ({test: () => {runPython( built_in_print = print out = [] def input(args): return \"9781530051120,10\" def custom_print(args, **kwargs): call_args = [arg for arg in args] out extend(call_args) print = custom_print try: main() except: pass finally: print = built_in_print assert \"ISBN-10 code should be 10 digits long \" in out `) }}) ``` When the user enters 1530051126,13, you should see the message ISBN-13 code should be 13 digits long``js\n({test: () => {runPython(\nbuilt_in_print = print\nout = []\ndef input(args):\nreturn \"1530051126,13\"\ndef custom_print(args, **kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\ntry:\nmain()\nexcept:\npass\nfinally:\nprint = built_in_print\nassert \"ISBN-13 code should be 13 digits long \" in out\n`)\n}})\n```\nWhen the user enters 15-0051126,10, you should see the message Invalid character was found ``js\n({test: () => {runPython(\nbuilt_in_print = print\nout = []\ndef input(args):\nreturn \"15-0051126,10\"\ndef custom_print(args, **kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\ntry:\nmain()\nexcept:\npass\nfinally:\nprint = built_in_print\nassert \"Invalid character was found \" in out\n`)\n}})\n```\nWhen the user enters 1530051126,9, you should see the message Length should be 10 or 13 ``js\n({test: () => {runPython(\nbuilt_in_print = print\nout = []\ndef input(args):\nreturn \"1530051126,9\"\ndef custom_print(args, **kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\ntry:\nmain()\nexcept:\npass\nfinally:\nprint = built_in_print\nassert \"Length should be 10 or 13 \" in out\n`)\n}})\n```\nWhen the user enters 1530051125,A, you should see the message Length must be a number",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17543,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 5,
    "total_chunks": 12
  },
  {
    "id": "74aa968bc9661d0861ee4f04a0b6bbe8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should see the message Length should be 10 or 13 ``js ({test: () => {runPython( built_in_print = print out = [] def input(args): return \"1530051126,9\" def custom_print(args, **kwargs): call_args = [arg for arg in args] out extend(call_args) print = custom_print try: main() except: pass finally: print = built_in_print assert \"Length should be 10 or 13 \" in out `) }}) ``` When the user enters 1530051125,A, you should see the message Length must be a number``js\n({test: () => {runPython(\nbuilt_in_print = print\nout = []\ndef input(args):\nreturn \"1530051125,A\"\ndef custom_print(args, **kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\ntry:\nmain()\nexcept:\npass\nfinally:\nprint = built_in_print\nassert \"Length must be a number \" in out\n`)\n}})\n```\nWhen the user enters 1530051125, you should see the message Enter comma-separated values ``js\n({test: () => {runPython(\nbuilt_in_print = print\nout = []\ndef input(args):\nreturn \"1530051125\"\ndef custom_print(args, **kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\ntry:\nmain()\nexcept:\npass\nfinally:\nprint = built_in_print\nassert \"Enter comma-separated values \" in out\n`)\n}})\n```\nWhen the user enters 9971502100,10, you should see the message Valid ISBN Code ``js\n({test: () => {runPython(\nbuilt_in_print = print\nout = []\ndef input(args):\nreturn \"9971502100,10\"\ndef custom_print(args, **kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\ntry:\nmain()\nexcept:\npass\nfinally:\nprint = built_in_print\nassert \"Valid ISBN Code \" in out\n`)\n}})\n```\nWhen the user enters 080442957X,10, you should see the message Valid ISBN Code",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17543,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 6,
    "total_chunks": 12
  },
  {
    "id": "2fbbd6ea0f147e575f1fb99ffc22b6ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "}}) ``` When the user enters 9971502100,10, you should see the message Valid ISBN Code ``js ({test: () => {runPython( built_in_print = print out = [] def input(args): return \"9971502100,10\" def custom_print(args, **kwargs): call_args = [arg for arg in args] out extend(call_args) print = custom_print try: main() except: pass finally: print = built_in_print assert \"Valid ISBN Code \" in out `) }}) ``` When the user enters 080442957X,10, you should see the message Valid ISBN Code``js\n({test: () => {runPython(\nbuilt_in_print = print\nout = []\ndef input(args):\nreturn \"080442957X,10\"\ndef custom_print(args, **kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\ntry:\nmain()\nexcept:\npass\nfinally:\nprint = built_in_print\nassert \"Valid ISBN Code \" in out\n`)\n}})\n```\nWhen the user enters 9781947172104,13, you should see the message Valid ISBN Code ``js\n({test: () => {runPython(\nbuilt_in_print = print\nout = []\ndef input(args):\nreturn \"9781947172104,13\"\ndef custom_print(args, **kwargs):\ncall_args = [arg for arg in args]\nout extend(call_args)\nprint = custom_print\ntry:\nmain()\nexcept:\npass\nfinally:\nprint = built_in_print\nassert \"Valid ISBN Code \" in out\n`)\n}})\n```\n--seed--\n--seed-contents--\n```py\ndef validate_isbn(isbn, length):\nif len(isbn, length) = length:\nprint(f'ISBN-{length} code should be {length} digits long ')\nreturn\nmain_digits = isbn[0:length]\ngiven_check_digit = isbn[length]\nmain_digits_list = [int(digit) for digit in main_digits]\n# Calculate the check digit from other digits\nif length == 10:\nexpected_check_digit = calculate_check_digit_10(main_digits_list)\nelse:\nexpected_check_digit = calculate_check_digit_13(main_digits_list)\n# Check if the given check digit matches with the calculated check digit\nif given_check_digit == expected_check_digit:\nprint('Valid ISBN Code ')\nelse:\nprint('Invalid ISBN Code",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17543,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 7,
    "total_chunks": 12
  },
  {
    "id": "f67dd02553d7cd4ea4a0136bb6c52492",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--seed-contents-- ```py def validate_isbn(isbn, length): if len(isbn, length) = length: print(f'ISBN-{length} code should be {length} digits long ') return main_digits = isbn[0:length] given_check_digit = isbn[length] main_digits_list = [int(digit) for digit in main_digits] # Calculate the check digit from other digits if length == 10: expected_check_digit = calculate_check_digit_10(main_digits_list) else: expected_check_digit = calculate_check_digit_13(main_digits_list) # Check if the given check digit matches with the calculated check digit if given_check_digit == expected_check_digit: print('Valid ISBN Code ') else: print('Invalid ISBN Code')\ndef calculate_check_digit_10(main_digits_list):\n# Note: You don't have to fully understand the logic in this function digits_sum = 0\n# Multiply each of the first 9 digits by its corresponding weight (10 to 2) and sum up the results\nfor index, digit in enumerate(main_digits_list):\ndigits_sum += digit * (10 - index)\n# Find the remainder of dividing the sum by 11, then subtract it from 11\nresult = 11 - digits_sum % 11\n# The calculation result can range from 1 to 11 # If the result is 11, use 0 # If the result is 10, use upper case X # Use the value as it is for other numbers if result == 11:\nexpected_check_digit = '0'\nelif result == 10:\nexpected_check_digit = 'X'\nelse:\nexpected_check_digit = str(result)\nreturn expected_check_digit\ndef calculate_check_digit_13(main_digits_list):\n# Note: You don't have to fully understand the logic in this function digits_sum = 0\n# Multiply each of the first 12 digits by 1 and 3 alternately (starting with 1), and sum up the results\nfor index, digit in enumerate(main_digits_list):\nif index % 2 == 0:\ndigits_sum += digit * 1\nelse:\ndigits_sum += digit * 3\n# Find the remainder of dividing the sum by 10, then subtract it from 10\nresult = 10 - digits_sum % 10\n# The calculation result can range from 1 to 10 # If the result is 10, use 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17543,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 8,
    "total_chunks": 12
  },
  {
    "id": "90200bed57e16d07697d784fa7297cde",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "digits by 1 and 3 alternately (starting with 1), and sum up the results for index, digit in enumerate(main_digits_list): if index % 2 == 0: digits_sum += digit * 1 else: digits_sum += digit * 3 # Find the remainder of dividing the sum by 10, then subtract it from 10 result = 10 - digits_sum % 10 # The calculation result can range from 1 to 10 # If the result is 10, use 0# Use the value as it is for other numbers if result == 10:\nexpected_check_digit = '0'\nelse:\nexpected_check_digit = str(result)\nreturn expected_check_digit\ndef main():\nuser_input = input('Enter ISBN and length: ')\nvalues = user_input split(',')\nisbn = values[0]\nlength = int(values[1])\nif length == 10 or length == 13:\nvalidate_isbn(isbn, length)\nelse:\nprint('Length should be 10 or 13 ')\nmain()\n```\n--solutions--\n```py\ndef validate_isbn(isbn, length):\nif len(isbn) = length:\nprint(f'ISBN-{length} code should be {length} digits long ')\nreturn\ncheck_digit_index = length - 1\nmain_digits = isbn[0:check_digit_index]\ngiven_check_digit = isbn[check_digit_index]\ntry:\nmain_digits_list = [int(digit) for digit in main_digits]\nexcept ValueError as e:\nprint('Invalid character was found ')\nreturn\n# Calculate the check digit from other digits\nif length == 10:\nexpected_check_digit = calculate_check_digit_10(main_digits_list)\nelse:\nexpected_check_digit = calculate_check_digit_13(main_digits_list)\n# Check if the given check digit matches with the calculated check digit\nif given_check_digit == expected_check_digit:\nprint('Valid ISBN Code ')\nelse:\nprint('Invalid ISBN Code ')\ndef calculate_check_digit_10(main_digits_list):\n# Note: You don't have to fully understand the logic in this function",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17543,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 9,
    "total_chunks": 12
  },
  {
    "id": "88a055dae3bb26eac0a7047f2cef0d41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= [int(digit) for digit in main_digits] except ValueError as e: print('Invalid character was found ') return # Calculate the check digit from other digits if length == 10: expected_check_digit = calculate_check_digit_10(main_digits_list) else: expected_check_digit = calculate_check_digit_13(main_digits_list) # Check if the given check digit matches with the calculated check digit if given_check_digit == expected_check_digit: print('Valid ISBN Code ') else: print('Invalid ISBN Code ') def calculate_check_digit_10(main_digits_list): # Note: You don't have to fully understand the logic in this functiondigits_sum = 0\n# Multiply each of the first 9 digits by its corresponding weight (10 to 2) and sum up the results\nfor index, digit in enumerate(main_digits_list):\ndigits_sum += digit * (10 - index)\n# Find the remainder of dividing the sum by 11, then subtract it from 11\nresult = 11 - digits_sum % 11\n# The calculation result can range from 1 to 11 # If the result is 11, use 0 # If the result is 10, use upper case X # Use the value as it is for other numbers if result == 11:\nexpected_check_digit = '0'\nelif result == 10:\nexpected_check_digit = 'X'\nelse:\nexpected_check_digit = str(result)\nreturn expected_check_digit\ndef calculate_check_digit_13(main_digits_list):\n# Note: You don't have to fully understand the logic in this function digits_sum = 0\n# Multiply each of the first 12 digits by 1 and 3 alternately (starting with 1), and sum up the results\nfor index, digit in enumerate(main_digits_list):\nif index % 2 == 0:\ndigits_sum += digit * 1\nelse:\ndigits_sum += digit * 3\n# Find the remainder of dividing the sum by 10, then subtract it from 10\nresult = 10 - digits_sum % 10\n# The calculation result can range from 1 to 10 # If the result is 10, use 0 # Use the value as it is for other numbers if result == 10:\nexpected_check_digit = '0'\nelse:\nexpected_check_digit = str(result)\nreturn expected_check_digit\ndef main():\nuser_input = input('Enter ISBN and length: ')\nvalues = user_input",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17543,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 10,
    "total_chunks": 12
  },
  {
    "id": "180890fba66b2e150e77e5d7b3ae9b16",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "3 # Find the remainder of dividing the sum by 10, then subtract it from 10 result = 10 - digits_sum % 10 # The calculation result can range from 1 to 10 # If the result is 10, use 0 # Use the value as it is for other numbers if result == 10: expected_check_digit = '0' else: expected_check_digit = str(result) return expected_check_digit def main(): user_input = input('Enter ISBN and length: ') values = user_inputsplit(',')\nisbn = values[0]\ntry:\nlength = int(values[1])\nexcept ValueError as e:\nprint('Length must be a number ')\nreturn\nexcept IndexError as e:\nprint('Enter comma-separated values ')\nreturn\nif length == 10 or length == 13:\nvalidate_isbn(isbn, length)\nelse:\nprint('Length should be 10 or 13 ')\nmain()\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17543,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-isbn-validator\\686b9720ee1d032bd77a480a.md",
      "source_type": "git_repo"
    },
    "token_count": 187,
    "chunk_index": 11,
    "total_chunks": 12
  },
  {
    "id": "d409f8e728716ff08dfa1470365a49fc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-luhn-algorithm\\68507cadbf36aa089a84ce2d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68507cadbf36aa089a84ce2d\ntitle: Implement the Luhn Algorithm\nchallengeType: 27\ndashedName: implement-the-luhn-algorithm\n--description--\nThe Luhn algorithm, also known as the \"modulus 10\" or \"mod 10\" algorithm, is a simple checksum formula used to validate a variety of identification numbers, like credit card numbers These are the steps to validate a number using the Luhn algorithm:\nStarting from the right, and excluding the rightmost digit (the check digit), double the value of every other digit If the result of doubling a digit is greater than 9, sum the digits to get a single digit Alternatively, you can subtract 9 from the result Take the sum of all the digits including the check digit If the sum of all the digits is a multiple of 10, then the number is valid; else it is not valid Let's say we have the number 453914881 The steps to validate it using the Luhn algorithm would be:\nmd\nAccount number      4   5   3   9   1   4   8   8   1\nDouble every other  4  10   3  18   1   8   8  16   1\nSum 2-char digits   4   1   3   9   1   8   8   7   1\nThen sum all numbers, 4 + 1 + 3 + 9 + 1 + 8 + 8 + 7 + 1 = 42 Since 42 is not a multiple of 10, the number is invalid In this lab, you will build a credit card validator using the Luhn algorithm Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should define a function named verify_card_number that takes a string of digits (representing a card number) and verifies whether it is valid according to the Luhn algorithm Within the verify_card_number function:\nYou should handle any dashes or spaces that may be present in the card number passed to it Return VALID if the card number is valid; otherwise, return INVALID",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4966,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-luhn-algorithm\\68507cadbf36aa089a84ce2d.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "fbd7f4ca5084fb58a33f1b904583c714",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-luhn-algorithm\\68507cadbf36aa089a84ce2d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "stories below and get all the tests to pass to complete the lab User Stories: You should define a function named verify_card_number that takes a string of digits (representing a card number) and verifies whether it is valid according to the Luhn algorithm Within the verify_card_number function: You should handle any dashes or spaces that may be present in the card number passed to it Return VALID if the card number is valid; otherwise, return INVALIDWhen you complete the project, you should see the following messages depending on the input:\n| Card Number         | Message  |\n| ------------------- | -------- |\n| 453914889           | VALID |\n| 4111-1111-1111-1111 | VALID |\n| 1234 5678 9012 3456 | INVALID |\n--hints--\nYou should have a function named verify_card_number js\n({\ntest: () => runPython(`\nassert _Node(_code) has_function('verify_card_number')\n`)\n})\nverify_card_number('453914889') should return VALID js\n({\ntest: () => runPython(`\nassert verify_card_number('453914889') == 'VALID '\n`)\n})\nverify_card_number('4111-1111-1111-1111') should return VALID js\n({\ntest: () => runPython(`\nassert verify_card_number('4111-1111-1111-1111') == 'VALID '\n`)\n})\nverify_card_number('453914881') should return INVALID js\n({\ntest: () => runPython(`\nassert verify_card_number('453914881') == 'INVALID '\n`)\n})\nverify_card_number('1234 5678 9012 3456') should return INVALID js\n({\ntest: () => runPython(`\nassert verify_card_number('1234 5678 9012 3456') == 'INVALID '\n`)\n})\nverify_card_number should return VALID when called with a valid credit card number js\n({\ntest: () => runPython(`\nassert verify_card_number('4539 1488 0343 6467') == 'VALID '\nassert verify_card_number('6011 1111 1111 1117') == 'VALID '\nassert verify_card_number('3782-822463-10005') == 'VALID '\nassert verify_card_number('5555 5555 5555 4444') == 'VALID '\nassert verify_card_number('3056 9309 0259 04') == 'VALID",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4966,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-luhn-algorithm\\68507cadbf36aa089a84ce2d.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "9f84c7f40ce255b98326455d84c2d2db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-luhn-algorithm\\68507cadbf36aa089a84ce2d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "5678 9012 3456') should return INVALID js ({ test: () => runPython(` assert verify_card_number('1234 5678 9012 3456') == 'INVALID ' `) }) verify_card_number should return VALID when called with a valid credit card number js ({ test: () => runPython(` assert verify_card_number('4539 1488 0343 6467') == 'VALID ' assert verify_card_number('6011 1111 1111 1117') == 'VALID ' assert verify_card_number('3782-822463-10005') == 'VALID ' assert verify_card_number('5555 5555 5555 4444') == 'VALID ' assert verify_card_number('3056 9309 0259 04') == 'VALID'\nassert verify_card_number('6011000990139424173') == 'VALID '\n`)\n})\nverify_card_number should return INVALID when called with an invalid credit card number js\n({\ntest: () => runPython(`\nassert verify_card_number('4539 1488 0343 6466') == 'INVALID '\nassert verify_card_number('6011 1111 1111 1116') == 'INVALID '\nassert verify_card_number('3782 822463 10004') == 'INVALID '\nassert verify_card_number('5555-5555-5555-4440') == 'INVALID '\nassert verify_card_number('3056 9309 0259 05') == 'INVALID '\nassert verify_card_number('6011000990139424175') == 'INVALID '\n`)\n})\n--seed--\n--seed-contents--\n```py\n```\n--solutions--\n```py\ndef verify_card_number(card_number):\ncard_translation = str maketrans({'-': '', ' ': ''})\ntranslated_card_number = card_number",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4966,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-luhn-algorithm\\68507cadbf36aa089a84ce2d.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "9b94b0280b0c063baeb79bec6fcb7b52",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-luhn-algorithm\\68507cadbf36aa089a84ce2d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "when called with an invalid credit card number js ({ test: () => runPython(` assert verify_card_number('4539 1488 0343 6466') == 'INVALID ' assert verify_card_number('6011 1111 1111 1116') == 'INVALID ' assert verify_card_number('3782 822463 10004') == 'INVALID ' assert verify_card_number('5555-5555-5555-4440') == 'INVALID ' assert verify_card_number('3056 9309 0259 05') == 'INVALID ' assert verify_card_number('6011000990139424175') == 'INVALID ' `) }) --seed-- --seed-contents-- ```py ``` --solutions-- ```py def verify_card_number(card_number): card_translation = str maketrans({'-': '', ' ': ''}) translated_card_number = card_numbertranslate(card_translation)\nsum_of_odd_digits = 0\ncard_number_reversed = translated_card_number[::-1]\nodd_digits = card_number_reversed[::2]\nfor digit in odd_digits:\nsum_of_odd_digits += int(digit)\nsum_of_even_digits = 0\neven_digits = card_number_reversed[1::2]\nfor digit in even_digits:\nnumber = int(digit) * 2\nif number >= 10:\nnumber = (number // 10) + (number % 10)\nsum_of_even_digits += number\ntotal = sum_of_odd_digits + sum_of_even_digits\nif total % 10 == 0:\nreturn 'VALID '\nelse:\nreturn 'INVALID '\nExample usage\nverify_card_number('4111-1111-4555-1142')\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4966,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-luhn-algorithm\\68507cadbf36aa089a84ce2d.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "592d6653111e2cd2c4a372e0b8f9381c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lightbox-viewer\\66db57ad34c7089b9b41bfd6.md",
    "source_type": "git_repo",
    "title": "Lightbox Viewer",
    "content": "id: 66db57ad34c7089b9b41bfd6\ntitle: Build a Lightbox Viewer\nchallengeType: 25\ndashedName: build-a-lightbox-viewer\ndemoType: onClick\n--description--\nA lightbox is used on websites to showcase multimedia content in a more engaging way through use of a popup or modal window over the page's main content In this lab, you will create a lightbox gallery that displays full-size images when a thumbnail is clicked For each image, two versions are provided: a thumbnail and a full-size image The full-size image is the same as the thumbnail, but without the -thumbnail suffix Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a div with a class of gallery within your body Within the gallery element, you should have three image thumbnails, each with a class of gallery-item You should use the following links for thumbnail images:\nhttps://cdn freecodecamp org/curriculum/labs/stonehenge-thumbnail jpg\nhttps://cdn freecodecamp org/curriculum/labs/storm-thumbnail jpg\nhttps://cdn freecodecamp org/curriculum/labs/trees-thumbnail jpg\nYou should have a div with a class of lightbox within your body You should have a button with an id of close-btn within your lightbox element You can use &times; as its text if you want You should have a img with an id of lightbox-image within your lightbox element Your lightbox element should have a fixed position so that the preview opens on top of the current images Your lightbox element should cover the entire viewport by setting the height and width to 100% of the container You should ensure that the lightbox element starts at the top left corner of the container lightbox should have a background color Initially, its display property should be set to none to hide it When you click one of your gallery-item elements, the lightbox element's display property should be set to flex to make the lightbox element and the two elements within it visible When you click one of your gallery-item elements, the #lightbox-image element's src should be set to a full-size version of the image clicked by removing -thumbnail from the image's src attribute The full-size images are located at the following links:\nhttps://cdn freecodecamp org/curriculum/labs/stonehenge jpg\nhttps://cdn freecodecamp",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11415,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lightbox-viewer\\66db57ad34c7089b9b41bfd6.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "f55d42169377814d23f62d3475aa35cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lightbox-viewer\\66db57ad34c7089b9b41bfd6.md",
    "source_type": "git_repo",
    "title": "Lightbox Viewer",
    "content": "When you click one of your gallery-item elements, the lightbox element's display property should be set to flex to make the lightbox element and the two elements within it visible When you click one of your gallery-item elements, the #lightbox-image element's src should be set to a full-size version of the image clicked by removing -thumbnail from the image's src attribute The full-size images are located at the following links: https://cdn freecodecamp org/curriculum/labs/stonehenge jpg https://cdn freecodecamporg/curriculum/labs/storm jpg\nhttps://cdn freecodecamp org/curriculum/labs/trees jpg\nWhen your lightbox element is visible and you click the #close-btn or the lightbox element, the lightbox element's display should be set back to none Note: Be sure to link your stylesheet and the JavaScript file in your HTML --hints--\nYou should have a div with the class of gallery inside your body element js\nassert equal(document querySelector(\"body gallery\") tagName, \"DIV\");\nWithin the gallery element, you should have three img elements with the class of gallery-item js\nassert lengthOf(document querySelectorAll(\" gallery gallery-item\"), 3)\nWithin the gallery element, you should have an img element with the src set to https://cdn freecodecamp org/curriculum/labs/stonehenge-thumbnail jpg ```js\nconst images = document querySelectorAll(\" gallery gallery-item\");\nlet srcCount = 0;\nconst targetSrc = \"https://cdn freecodecamp org/curriculum/labs/stonehenge-thumbnail jpg\";\nfor (let image of images) {\nif (image src === targetSrc) {\nsrcCount++;\n}\n}\nassert strictEqual(srcCount, 1);\n```\nWithin the gallery element, you should an img element with the src set to https://cdn freecodecamp org/curriculum/labs/storm-thumbnail jpg ```js\nconst images = document querySelectorAll(\" gallery gallery-item\");\nlet srcCount = 0;\nconst targetSrc = \"https://cdn freecodecamp org/curriculum/labs/storm-thumbnail jpg\";\nfor (let image of images) {\nif (image src === targetSrc) {\nsrcCount++;\n}\n}\nassert strictEqual(srcCount, 1);\n```\nWithin the gallery element, you should an img element with the src set to https://cdn freecodecamp org/curriculum/labs/trees-thumbnail",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11415,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lightbox-viewer\\66db57ad34c7089b9b41bfd6.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "c183328d0dee36c77f3d0616a77bbcf9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lightbox-viewer\\66db57ad34c7089b9b41bfd6.md",
    "source_type": "git_repo",
    "title": "Lightbox Viewer",
    "content": "strictEqual(srcCount, 1); ``` Within the gallery element, you should an img element with the src set to https://cdn freecodecamp org/curriculum/labs/storm-thumbnail jpg ```js const images = document querySelectorAll(\" gallery gallery-item\"); let srcCount = 0; const targetSrc = \"https://cdn freecodecamp org/curriculum/labs/storm-thumbnail jpg\"; for (let image of images) { if (image src === targetSrc) { srcCount++; } } assert strictEqual(srcCount, 1); ``` Within the gallery element, you should an img element with the src set to https://cdn freecodecamp org/curriculum/labs/trees-thumbnailjpg ```js\nconst images = document querySelectorAll(\" gallery gallery-item\");\nlet srcCount = 0;\nconst targetSrc = \"https://cdn freecodecamp org/curriculum/labs/trees-thumbnail jpg\";\nfor (let image of images) {\nif (image src === targetSrc) {\nsrcCount++;\n}\n}\nassert strictEqual(srcCount, 1);\n```\nYou should have a div element with the class of lightbox inside your body element js\nconst lightboxEl = document querySelector(\"body lightbox\");\nassert exists(lightboxEl);\nassert equal(lightboxEl tagName, \"DIV\");\nWithin your lightbox element, you should have a button element with the id set to close-btn js\nassert equal(document querySelector(\" lightbox #close-btn\") tagName, \"BUTTON\");\nWithin your lightbox element, you should have an img element with the id set to lightbox-image js\nassert equal(document querySelector(\" lightbox #lightbox-image\") tagName, \"IMG\");\nYour lightbox element should have fixed positioning js\nassert equal(new __helpers CSSHelp(document) getStyle(\" lightbox\") position, \"fixed\");\nYour lightbox element should cover the entire viewport js\nassert equal(new __helpers CSSHelp(document) getStyle(\" lightbox\") width, \"100%\");\nassert equal(new __helpers CSSHelp(document) getStyle(\" lightbox\") height, \"100%\");\nYour lightbox element should be aligned with top left corner of the container js\nassert equal(new __helpers CSSHelp(document) getStyle(\" lightbox\") top, \"0px\");\nassert equal(new __helpers CSSHelp(document) getStyle(\" lightbox\") left, \"0px\");\nYour lightbox element should have a background color js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(\" lightbox\") backgroundColor);\nYour",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11415,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lightbox-viewer\\66db57ad34c7089b9b41bfd6.md",
      "source_type": "git_repo"
    },
    "token_count": 520,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "9e29bfeb8442f92aeb5bcc90bb28dae3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lightbox-viewer\\66db57ad34c7089b9b41bfd6.md",
    "source_type": "git_repo",
    "title": "Lightbox Viewer",
    "content": "getStyle(\" lightbox\") position, \"fixed\"); Your lightbox element should cover the entire viewport js assert equal(new __helpers CSSHelp(document) getStyle(\" lightbox\") width, \"100%\"); assert equal(new __helpers CSSHelp(document) getStyle(\" lightbox\") height, \"100%\"); Your lightbox element should be aligned with top left corner of the container js assert equal(new __helpers CSSHelp(document) getStyle(\" lightbox\") top, \"0px\"); assert equal(new __helpers CSSHelp(document) getStyle(\" lightbox\") left, \"0px\"); Your lightbox element should have a background color js assert isNotEmpty(new __helpers CSSHelp(document) getStyle(\" lightbox\") backgroundColor); Yourlightbox element should be hidden initially js\nassert equal(new __helpers CSSHelp(document) getStyle(\" lightbox\") display, \"none\");\nWhen you click one of your gallery-item elements, the lightbox element's display property should be set to flex to make lightbox and the two elements within it visible ```js\nconst lightbox = document querySelector(\" lightbox\");\nfunction getComputedDisplay(element) {\nreturn window getComputedStyle(element) display;\n}\nassert strictEqual(getComputedDisplay(lightbox), \"none\");\nconst galleryItem = document querySelector(\" gallery-item\");\ngalleryItem dispatchEvent(new Event(\"click\"));\nassert strictEqual(getComputedDisplay(lightbox), \"flex\");\n```\nWhen you click one of your gallery-item elements, the #lightbox-image element's src should be set to a full-size version of the image clicked by removing -thumbnail from the image's src attribute ```js\nconst galleryItems = document querySelectorAll(\" gallery-item\");\nconst lightboxImage = document getElementById(\"lightbox-image\");\nassert isAbove(galleryItems length, 0);\nfunction getFullSizeImageUrl(thumbnailUrl) {\nreturn thumbnailUrl replace(\"-thumbnail\", \"\");\n}\ngalleryItems forEach((item) => {\nconst thumbnailUrl = item src;\nconst expectedFullSizeUrl = getFullSizeImageUrl(thumbnailUrl);\nitem dispatchEvent(new MouseEvent(\"click\", { bubbles: true }));\nassert strictEqual(lightboxImage src, expectedFullSizeUrl);\n});\n```\nWhen your lightbox element is visible and you click the #close-btn button, the lightbox element's display should be set back to none ```js\nconst lightbox = document querySelector(\" lightbox\");\nconst background = document getElementById(\"close-btn\");\nfunction getComputedDisplay(element) {\nreturn window getComputedStyle(element) display;\n}\nlightbox style",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11415,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lightbox-viewer\\66db57ad34c7089b9b41bfd6.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "398528d14cf55aff31688f302a5493f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lightbox-viewer\\66db57ad34c7089b9b41bfd6.md",
    "source_type": "git_repo",
    "title": "Lightbox Viewer",
    "content": "{ return thumbnailUrl replace(\"-thumbnail\", \"\"); } galleryItems forEach((item) => { const thumbnailUrl = item src; const expectedFullSizeUrl = getFullSizeImageUrl(thumbnailUrl); item dispatchEvent(new MouseEvent(\"click\", { bubbles: true })); assert strictEqual(lightboxImage src, expectedFullSizeUrl); }); ``` When your lightbox element is visible and you click the #close-btn button, the lightbox element's display should be set back to none ```js const lightbox = document querySelector(\" lightbox\"); const background = document getElementById(\"close-btn\"); function getComputedDisplay(element) { return window getComputedStyle(element) display; } lightbox styledisplay = \"flex\";\nbackground dispatchEvent(new Event(\"click\"));\nassert strictEqual(getComputedDisplay(lightbox), \"none\");\n```\nWhen your lightbox element is visible and you click the lightbox element, the lightbox element's display should be set back to none ```js\nconst lightbox = document querySelector(\" lightbox\");\nfunction getComputedDisplay(element) {\nreturn window getComputedStyle(element) display;\n}\nlightbox style display = \"flex\";\nlightbox dispatchEvent(new Event(\"click\"));\nassert strictEqual(getComputedDisplay(lightbox), \"none\");\n```\n--seed--\n--seed-contents--\n```html\nLightbox Viewer\n```\n```css\n```\n```js\n```\n--solutions--\n```html\nLightbox Viewer\nMuseum Gallery\n×\n```\n```css\nbody {\nmargin: 0;\npadding: 0;\nbackground-color: #f0f0f0;\ncolor: #333;\n} title {\nmargin-top: 100px;\ntext-align: center;\nbackground-color: rgb(211, 221, 224);\n} gallery {\ndisplay: flex;\nflex-wrap: wrap;\ngap: 10px;\njustify-content: center;\npadding: 20px;\n} gallery-item {\nwidth: 250px;\nheight: 300px;\nobject-fit: cover;\ncursor: pointer;\ntransition: transform 0 2s;\n} gallery-item:hover {\ntransform: scale(1 05);\n} lightbox {\ndisplay: none;\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100%;\nheight: 100%;\nbackground-color: rgba(0, 0, 0, 0 8);\njustify-content: center;\nalign-items: center;\nz-index: 1000;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11415,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lightbox-viewer\\66db57ad34c7089b9b41bfd6.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "c215c36149ea8e6ac388b274d6a23ded",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lightbox-viewer\\66db57ad34c7089b9b41bfd6.md",
    "source_type": "git_repo",
    "title": "Lightbox Viewer",
    "content": "#f0f0f0; color: #333; } title { margin-top: 100px; text-align: center; background-color: rgb(211, 221, 224); } gallery { display: flex; flex-wrap: wrap; gap: 10px; justify-content: center; padding: 20px; } gallery-item { width: 250px; height: 300px; object-fit: cover; cursor: pointer; transition: transform 0 2s; } gallery-item:hover { transform: scale(1 05); } lightbox { display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0 8); justify-content: center; align-items: center; z-index: 1000; }lightbox img {\nmax-width: 90%;\nmax-height: 90%;\n} close-btn {\nposition: absolute;\ntop: 20px;\nright: 10px;\nfont-size: 2em;\ncolor: white;\ncursor: pointer;\nborder: none;\nbackground-color: transparent;\n}\n```\n```js\nconst lightbox = document getElementById(\"lightbox\");\nconst lightboxImage = document getElementById(\"lightbox-image\");\nfunction openLightbox(src) {\nlightboxImage src = src;\nlightbox style display = \"flex\";\n}\nfunction closeLightbox() {\nlightbox style display = \"none\";\n}\nconst closeButton = document getElementById(\"close-btn\");\ncloseButton addEventListener(\"click\", closeLightbox);\nlightbox addEventListener(\"click\", (e) => {\nif (e target === lightbox) {\ncloseLightbox();\n}\n});\nconst galleryItems = document querySelectorAll(\" gallery-item\");\ngalleryItems forEach((item) => {\nitem addEventListener(\"click\", () => {\nopenLightbox(item src replace(\"-thumbnail\", \"\"));\n});\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11415,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lightbox-viewer\\66db57ad34c7089b9b41bfd6.md",
      "source_type": "git_repo"
    },
    "token_count": 396,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "b62163d41d5000806effbb444db541f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-magazine-layout\\6735a7370e0ae93a4577c689.md",
    "source_type": "git_repo",
    "title": "Magazine Layout",
    "content": "id: 6735a7370e0ae93a4577c689\ntitle: Design a Magazine Layout\nchallengeType: 25\ndashedName: design-a-magazine-layout\ndemoType: onClick\n--description--\nIn this lab, you will design a magazine layout using CSS Grid, including concepts like grid rows and grid columns Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a main element with the class magazine-cover Your magazine-cover should contain a header element for the title with the class title You should have four section elements in your page The first three sections for magazine articles and a fourth section element for a cover image The four section elements should have a class attribute of feature-article, small-article1, small-article2, and cover-image, respectively You should set the display property of magazine-cover to grid The magazine-cover should have a grid-template-areas property that defines the layout of the grid:\nThe title spanning the top row A feature article spanning two columns and a cover image in the second row Two small articles and the cover image in the third row The magazine-cover should have a grid-template-columns property that divides the space into three equal parts The magazine-cover should have a grid-template-rows property It should be set to auto for the first row, and divide equally the space occupied by the remaining two rows You should add a gap between grid items and set the width of the magazine-cover to occupy most of the viewport width Note: Be sure to link your stylesheet in your HTML and apply your CSS --hints--\nYou should have a main element js\nassert exists(document querySelector('main'));\nYour main element should have a class of magazine-cover js\nassert exists(document querySelector('main magazine-cover'));\nYou should have a header element within your main element js\nassert exists(document querySelector(\"main > header\"));\nYour header element should have a class of title and should contain some text js\nconst header = document querySelector(\"header title\");\nassert exists(header);\nassert isAbove(header innerText length, 0);\nYou should have a section element for each article and the cover image, with classes feature-article, small-article1, small-article2, and cover-image respectively ```js\nconst featureArticle = document querySelector('section feature-article');\nconst smallArticle1 = document querySelector('section small-article1');\nconst smallArticle2 = document querySelector('section",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7774,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-magazine-layout\\6735a7370e0ae93a4577c689.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "4cbc359cc95bf082cc06c2e32e57f7a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-magazine-layout\\6735a7370e0ae93a4577c689.md",
    "source_type": "git_repo",
    "title": "Magazine Layout",
    "content": "your main element js assert exists(document querySelector(\"main > header\")); Your header element should have a class of title and should contain some text js const header = document querySelector(\"header title\"); assert exists(header); assert isAbove(header innerText length, 0); You should have a section element for each article and the cover image, with classes feature-article, small-article1, small-article2, and cover-image respectively ```js const featureArticle = document querySelector('section feature-article'); const smallArticle1 = document querySelector('section small-article1'); const smallArticle2 = document querySelector('sectionsmall-article2');\nconst coverImage = document querySelector('section cover-image');\nassert exists(featureArticle);\nassert exists(smallArticle1);\nassert exists(smallArticle2);\nassert exists(coverImage);\n```\nThe display property of the magazine-cover should be set to grid js\nassert equal(getComputedStyle(document querySelector(' magazine-cover')) display, 'grid');\nYour magazine-cover should have a grid-template-areas property with title spanning all three columns of the first row js\nconst magazineCoverStyle = getComputedStyle(document querySelector(' magazine-cover'));\nassert match(magazineCoverStyle gridTemplateAreas, /^(\"|')title title title\\1/);\nThe second row of the grid template should contain a feature article spanning two columns and a cover image js\nconst magazineCoverStyle = getComputedStyle(document querySelector(' magazine-cover'));\nassert match(magazineCoverStyle gridTemplateAreas, / (\"|')feature-article feature-article cover-image\\1 /);\nThe third row of the grid template should contain small-article1, small-article2, and cover-image js\nconst magazineCoverStyle = getComputedStyle(document querySelector(' magazine-cover'));\nassert match(magazineCoverStyle gridTemplateAreas, /(\"|')small-article1 small-article2 cover-image\\1$/);\nYour magazine-cover selector should use the grid-template-columns property to divide the space into three equal parts Remember you can use either the repeat function or manually define each fractional unit js\nassert oneOf(\nnew __helpers CSSHelp(document) getStyle(' magazine-cover') gridTemplateColumns,\n['1fr 1fr 1fr', 'repeat(3, 1fr)']\n);\nYour magazine-cover class should have a grid-template-rows property set to auto 1fr 1fr js\nassert equal(new __helpers CSSHelp(document) getStyle(' magazine-cover')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7774,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-magazine-layout\\6735a7370e0ae93a4577c689.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "68a9d7701e8fc994851d8e8249c583d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-magazine-layout\\6735a7370e0ae93a4577c689.md",
    "source_type": "git_repo",
    "title": "Magazine Layout",
    "content": "magazineCoverStyle = getComputedStyle(document querySelector(' magazine-cover')); assert match(magazineCoverStyle gridTemplateAreas, /(\"|')small-article1 small-article2 cover-image\\1$/); Your magazine-cover selector should use the grid-template-columns property to divide the space into three equal parts Remember you can use either the repeat function or manually define each fractional unit js assert oneOf( new __helpers CSSHelp(document) getStyle(' magazine-cover') gridTemplateColumns, ['1fr 1fr 1fr', 'repeat(3, 1fr)'] ); Your magazine-cover class should have a grid-template-rows property set to auto 1fr 1fr js assert equal(new __helpers CSSHelp(document) getStyle(' magazine-cover')gridTemplateRows, 'auto 1fr 1fr');\nYou should add a gap of 10px between grid items js\nassert equal(new __helpers CSSHelp(document) getStyle(' magazine-cover') gap, '10px');\nThe title class should have a grid area of the same name js\nassert equal(new __helpers CSSHelp(document) getStyle(' title') gridArea, 'title');\nThe feature-article class should have a grid area of the same name js\nassert equal(new __helpers CSSHelp(document) getStyle(' feature-article') gridArea, 'feature-article');\nThe cover-image class should have a grid area of the same name js\nassert equal(new __helpers CSSHelp(document) getStyle(' cover-image') gridArea, 'cover-image');\n--seed--\n--seed-contents--\n```html\nMagazine Layout\n```\n```css\n```\n--solutions--\n```html\nAdventure Magazine\nAdventure Awaits\nTop 10 Exotic Destinations for 2024\nDiscover the most breathtaking places to visit this year, from hidden beaches to mountain retreats Our guide takes you through the best spots for your next adventure Gear Up: Must-Have Gadgets\nCheck out the latest tech and gear to make your travels more exciting and comfortable Meet the Explorers\nGet to know the modern adventurers who are pushing the boundaries of exploration ```\n```css\nbody {\nfont-family: Arial, sans-serif;\nmargin: 0;\npadding: 0;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f0f0f0;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7774,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-magazine-layout\\6735a7370e0ae93a4577c689.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "42dfef989023caf39c41ff6fd8422339",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-magazine-layout\\6735a7370e0ae93a4577c689.md",
    "source_type": "git_repo",
    "title": "Magazine Layout",
    "content": "year, from hidden beaches to mountain retreats Our guide takes you through the best spots for your next adventure Gear Up: Must-Have Gadgets Check out the latest tech and gear to make your travels more exciting and comfortable Meet the Explorers Get to know the modern adventurers who are pushing the boundaries of exploration ``` ```css body { font-family: Arial, sans-serif; margin: 0; padding: 0; display: flex; justify-content: center; align-items: center; height: 100vh; background-color: #f0f0f0; }magazine-cover {\ndisplay: grid;\ngrid-template-areas:\n\"title title title\"\n\"feature-article feature-article cover-image\"\n\"small-article1 small-article2 cover-image\";\ngrid-template-columns: 1fr 1fr 1fr;\ngrid-template-rows: auto 1fr 1fr;\ngap: 10px;\nwidth: 80%;\nbackground-color: #fff;\n} title {\ngrid-area: title;\nbackground-color: #1B1B32;\ncolor: white;\npadding: 10px;\ntext-align: center;\n} feature-article {\ngrid-area: feature-article;\nbackground-color: #f9f9f9;\npadding: 10px;\n} small-article1, small-article2 {\nbackground-color: #e9e9e9;\npadding: 10px;\n} cover-image {\ngrid-area: cover-image;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground-color: #ddd;\npadding: 10px;\n} cover-image img {\nmax-width: 100%;\nheight: auto;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7774,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-magazine-layout\\6735a7370e0ae93a4577c689.md",
      "source_type": "git_repo"
    },
    "token_count": 335,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "29ad6e60e9df8b9a86b97ed5060011c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-mood-board\\673b3d6b7ef7318eef926d5a.md",
    "source_type": "git_repo",
    "title": "Mood Board",
    "content": "id: 673b3d6b7ef7318eef926d5a\ntitle: Build a Mood Board\nchallengeType: 25\ndashedName: build-a-mood-board\ndemoType: onClick\n--description--\nA mood board is a collage of images and text that conveys a general idea, goal, or feeling about a particular topic In this lab, you will create a mood board using reusable React components The CSS has already been provided for you Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create and export a MoodBoardItem component that accepts three props: color, image, and description Your MoodBoardItem component should return a div with the class mood-board-item as its top-level element You should set the background color of the mood-board-item element to the value of the color prop using inline styles You should render an img element, with a class of mood-board-image and its src attribute set to the value of the image prop, within the mood-board-item element You should render an h3 element, with a class of mood-board-text and its text the value of the description prop, within the mood-board-item element You should create and export a MoodBoard Your MoodBoard component should return a div as its top-level element Your MoodBoard component should render an h1 element with a class of mood-board-heading and the text Destination Mood Board Your MoodBoard component should render a div with a class of mood-board Your MoodBoard component should render at least three MoodBoardItem components within the mood-board element, each should pass color, image, and description props with valid values You can use the following images in your Mood Board if you would like:\nhttps://cdn freecodecamp org/curriculum/labs/pathway jpg\nhttps://cdn freecodecamp org/curriculum/labs/shore jpg\nhttps://cdn freecodecamp org/curriculum/labs/grass jpg\nhttps://cdn freecodecamp org/curriculum/labs/ship jpg\nhttps://cdn freecodecamp org/curriculum/labs/santorini jpg\nhttps://cdn freecodecamp org/curriculum/labs/pigeon jpg\n--hints--\nYou should export a MoodBoardItem component js\nassert isFunction(window index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10271,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-mood-board\\673b3d6b7ef7318eef926d5a.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "d659622bbff9b8b750c8549150b46063",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-mood-board\\673b3d6b7ef7318eef926d5a.md",
    "source_type": "git_repo",
    "title": "Mood Board",
    "content": "of mood-board Your MoodBoard component should render at least three MoodBoardItem components within the mood-board element, each should pass color, image, and description props with valid values You can use the following images in your Mood Board if you would like: https://cdn freecodecamp org/curriculum/labs/pathway jpg https://cdn freecodecamp org/curriculum/labs/shore jpg https://cdn freecodecamp org/curriculum/labs/grass jpg https://cdn freecodecamp org/curriculum/labs/ship jpg https://cdn freecodecamp org/curriculum/labs/santorini jpg https://cdn freecodecamp org/curriculum/labs/pigeon jpg --hints-- You should export a MoodBoardItem component js assert isFunction(window indexMoodBoardItem, 1);\nYour MoodBoardItem component should return a div with a class of mood-board-item at its top-level element js\nconst item = document getElementsByClassName('mood-board-item')[0];\nassert exists(item);\nassert equal(item tagName, 'DIV');\nThe background color of the mood-board-item element should be set to the value of color prop using inline styles js\nasync () => {\nconst container = await __helpers prepTestComponent(window index MoodBoardItem, { color: \"red\" });\nconst moodBoardItem = container querySelector(\" mood-board-item\");\nassert equal(moodBoardItem style backgroundColor, \"red\");\n}\nYour MoodBoardItem component should render an img element with a class of mood-board-image and its src set to the value of the image prop js\nasync () => {\nconst container = await __helpers prepTestComponent(window index MoodBoardItem, { image: \"https://cdn freecodecamp org/curriculum/labs/pathway jpg\" });\nconst img = container querySelector(\" mood-board-image\");\nassert exists(img);\nassert equal(img tagName, \"IMG\");\nassert equal(img src, \"https://cdn freecodecamp org/curriculum/labs/pathway jpg\");\n}\nYour MoodBoardItem component should render an h3 element with a class of mood-board-text and its text set to the value of the description prop js\nasync () => {\nconst container = await __helpers prepTestComponent(window index MoodBoardItem, { description: \"Caribbean\" });\nconst text = container querySelector(\" mood-board-text\");\nassert exists(text);\nassert equal(text",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10271,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-mood-board\\673b3d6b7ef7318eef926d5a.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "e631ba5a6a4c7697cca750021d211d90",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-mood-board\\673b3d6b7ef7318eef926d5a.md",
    "source_type": "git_repo",
    "title": "Mood Board",
    "content": "\"https://cdn freecodecamp org/curriculum/labs/pathway jpg\" }); const img = container querySelector(\" mood-board-image\"); assert exists(img); assert equal(img tagName, \"IMG\"); assert equal(img src, \"https://cdn freecodecamp org/curriculum/labs/pathway jpg\"); } Your MoodBoardItem component should render an h3 element with a class of mood-board-text and its text set to the value of the description prop js async () => { const container = await __helpers prepTestComponent(window index MoodBoardItem, { description: \"Caribbean\" }); const text = container querySelector(\" mood-board-text\"); assert exists(text); assert equal(texttagName, \"H3\");\nassert equal(text textContent, \"Caribbean\");\n}\nYou should export a MoodBoard component js\nassert isFunction(window index MoodBoard, 1);\nYour MoodBoard component should return a div as its top-level element js\nconst root = document getElementById('root');\nassert equal(root children[0] tagName, 'DIV');\nYour MoodBoard component should render an h1 element with a class of mood-board-heading and the text Destination Mood Board js\nconst heading = document getElementsByClassName('mood-board-heading')[0];\nassert exists(heading);\nassert equal(heading tagName, 'H1');\nassert equal(heading textContent, 'Destination Mood Board');\nYour MoodBoard component should render at least three MoodBoardItem components, each should pass color, image, and description props with valid values ```js\nconst moodboard = document getElementsByClassName('mood-board')[0];\nconst items = moodboard querySelectorAll(\" mood-board-item\");\nassert isAtLeast(items length, 3);\nitems forEach((item) => {\nconst color = item style backgroundColor;\nconst img = item querySelector(\"img\");\nconst text = item querySelector(\"h3\");\nassert isAtLeast(color length, 1);\nassert isAtLeast(img src length, 1);\nassert isAtLeast(text textContent length, 1);\n});\n```\nYour MoodBoard component should be rendered to the page's #root element js\nconst root = document getElementById('root');\nconst moodBoard = root getElementsByClassName('mood-board')[0];\nassert exists(moodBoard);\n--seed--\n--seed-contents--\n```html\nMood Board\n```\n```css\nbody {\nbackground-color: #ffffcc;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10271,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-mood-board\\673b3d6b7ef7318eef926d5a.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "3862281d29f16fc872bbba0e49758f76",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-mood-board\\673b3d6b7ef7318eef926d5a.md",
    "source_type": "git_repo",
    "title": "Mood Board",
    "content": "assert isAtLeast(items length, 3); items forEach((item) => { const color = item style backgroundColor; const img = item querySelector(\"img\"); const text = item querySelector(\"h3\"); assert isAtLeast(color length, 1); assert isAtLeast(img src length, 1); assert isAtLeast(text textContent length, 1); }); ``` Your MoodBoard component should be rendered to the page's #root element js const root = document getElementById('root'); const moodBoard = root getElementsByClassName('mood-board')[0]; assert exists(moodBoard); --seed-- --seed-contents-- ```html Mood Board ``` ```css body { background-color: #ffffcc; }mood-board-heading {\ntext-align: center;\nfont-size: 2 5em;\ncolor: #333;\nmargin-top: 20px;\n} mood-board {\ndisplay: grid;\ngrid-template-columns: repeat(3, 1fr);\ngap: 20px;\npadding: 20px;\nmax-width: 900px;\nmargin: 0 auto;\n} mood-board-item {\nborder-radius: 10px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\ncolor: #fff;\nbox-shadow: 0 4px 8px rgba(0, 0, 0, 0 2);\ntext-align: center;\nheight: 250px;\n} mood-board-image {\nborder-radius: 5px;\nwidth: 180px;\nheight: 150px;\nobject-fit: cover;\n} mood-board-text {\nmargin-top: 20px;\nfont-size: 1 2em;\n}\n```\n```jsx\n```\n--solutions--\n```html\nMood Board\n```\n```css\nbody {\nbackground-color: #ffffcc;\n} mood-board-heading {\ntext-align: center;\nfont-size: 2 5em;\ncolor: #333;\nmargin-top: 20px;\n} mood-board {\ndisplay: grid;\ngrid-template-columns: repeat(3, 1fr);\ngap: 20px;\npadding: 20px;\nmax-width: 900px;\nmargin: 0 auto;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10271,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-mood-board\\673b3d6b7ef7318eef926d5a.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "80fd13d55a31529e2831e32ef6118251",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-mood-board\\673b3d6b7ef7318eef926d5a.md",
    "source_type": "git_repo",
    "title": "Mood Board",
    "content": "box-shadow: 0 4px 8px rgba(0, 0, 0, 0 2); text-align: center; height: 250px; } mood-board-image { border-radius: 5px; width: 180px; height: 150px; object-fit: cover; } mood-board-text { margin-top: 20px; font-size: 1 2em; } ``` ```jsx ``` --solutions-- ```html Mood Board ``` ```css body { background-color: #ffffcc; } mood-board-heading { text-align: center; font-size: 2 5em; color: #333; margin-top: 20px; } mood-board { display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px; padding: 20px; max-width: 900px; margin: 0 auto; }mood-board-item {\nborder-radius: 10px;\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\ncolor: #fff;\nbox-shadow: 0 4px 8px rgba(0, 0, 0, 0 2);\ntext-align: center;\nheight: 250px;\n} mood-board-image {\nborder-radius: 5px;\nwidth: 180px;\nheight: 150px;\nobject-fit: cover;\n} mood-board-text {\nmargin-top: 20px;\nfont-size: 1 2em;\n}\n```\n```jsx\nexport function MoodBoardItem(props) {\nreturn (\n{props description}\n);\n}\nexport function MoodBoard() {\nreturn (\nDestination Mood Board\n);\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10271,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-mood-board\\673b3d6b7ef7318eef926d5a.md",
      "source_type": "git_repo"
    },
    "token_count": 355,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "14193a397cfdd92532671e8419e837fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66db529d37ad966480ebb633\ntitle: Build a Lunch Picker Program\nchallengeType: 26\ndashedName: build-a-lunch-picker-program\n--description--\nIn this lab, you'll build a program that helps in managing lunch options You'll work with an array of lunches, add and remove items from the array, and randomly select a lunch option Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create a lunches variable and assign it an empty array that will be used to store lunch items You should create a function addLunchToEnd that takes an array as the first argument and a string as the second argument The function should:\nAdd the string to the end of the array Log the string \"[Lunch Item] added to the end of the lunch menu \" to the console, where [Lunch Item] is the string passed to the function Return the updated array You should create a function addLunchToStart that takes an array as the first argument and a string as the second argument The function should:\nAdd the string to the start of the array Log the string \"[Lunch Item] added to the start of the lunch menu \" to the console, where [Lunch Item] is the string passed to the function Return the updated array You should create a function removeLastLunch that takes an array as its argument The function should:\nRemove the last element from the array If  the removal is successful, log the string \"[Lunch Item] removed from the end of the lunch menu \" to the console, where [Lunch Item] is the element removed from the array If the array is empty, log the string \"No lunches to remove \" to the console Return the updated array You should create a function removeFirstLunch that takes an array as its argument The function should:\nRemove the first element from the array If the removal is successful, log the string \"[Lunch Item] removed from the start of the lunch menu \" to the console, where [Lunch Item] is the element removed from the array If the array is empty, log the string \"No lunches to remove \" to the console Return the updated array You should create a function getRandomLunch that takes an array as its argument The function should:\nSelect a random element from the array",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "9e152698f6741677fb1802512020c2f8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "array If the removal is successful, log the string \"[Lunch Item] removed from the start of the lunch menu \" to the console, where [Lunch Item] is the element removed from the array If the array is empty, log the string \"No lunches to remove \" to the console Return the updated array You should create a function getRandomLunch that takes an array as its argument The function should: Select a random element from the arrayIf successful, log the string \"Randomly selected lunch: [Lunch Item]\" to the console, where [Lunch Item] is a random element in the array If the array is empty, log the string \"No lunches available \" to the console You should create a function showLunchMenu that takes an array as its argument and:\nIf there are elements in the array, logs the string \"Menu items: [Lunch Item], [Lunch Item] \" to the console, where each [Lunch item] is one of the elements in the array, in order If the array is empty, logs the string \"The menu is empty \" to the console --hints--\nYou should declare a variable lunches and assign it an empty array to store the lunch items js\nassert isArray(lunches);\nYou should define a function addLunchToEnd js\nassert isFunction(addLunchToEnd);\nThe function addLunchToEnd should have two parameters js\nassert lengthOf(addLunchToEnd, 2);\naddLunchToEnd(lunches, \"Tacos\") should log the string \"Tacos added to the end of the lunch menu \" to the console js\nconst tempArr = [];\nconst temp = console log;\nconst testLunches = []\ntry {\nconsole log = obj => tempArr push(obj);\naddLunchToEnd(testLunches, \"Tacos\");\nassert strictEqual(tempArr[0], \"Tacos added to the end of the lunch menu \");\naddLunchToEnd(testLunches, \"Pizza\");\nassert strictEqual(tempArr[1], \"Pizza added to the end of the lunch menu \");\n} finally {\nconsole log = temp;\n}\naddLunchToEnd([\"Pizza\", \"Tacos\"], \"Burger\") should return [\"Pizza\", \"Tacos\", \"Burger\"] js\nconst temp = console log;\nconsole log = () => {}\ntry {\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "167f07961ed0b9561f5488c7d7f3383b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "temp = console log; const testLunches = [] try { console log = obj => tempArr push(obj); addLunchToEnd(testLunches, \"Tacos\"); assert strictEqual(tempArr[0], \"Tacos added to the end of the lunch menu \"); addLunchToEnd(testLunches, \"Pizza\"); assert strictEqual(tempArr[1], \"Pizza added to the end of the lunch menu \"); } finally { console log = temp; } addLunchToEnd([\"Pizza\", \"Tacos\"], \"Burger\") should return [\"Pizza\", \"Tacos\", \"Burger\"] js const temp = console log; console log = () => {} try { assertdeepStrictEqual(addLunchToEnd([\"Pizza\", \"Tacos\"], \"Burger\"), [\"Pizza\", \"Tacos\", \"Burger\"]);\nassert deepStrictEqual(addLunchToEnd([\"Fries\"], \"Tacos\"), [\"Fries\", \"Tacos\"]);\n} finally {\nconsole log = temp;\n}\nYou should define a function addLunchToStart js\nassert isFunction(addLunchToStart);\nThe function addLunchToStart should have two parameters js\nassert lengthOf(addLunchToStart, 2);\naddLunchToStart(lunches, \"Sushi\") should log the string \"Sushi added to the start of the lunch menu \" to the console js\nconst tempArr = [];\nconst testLunches = [];\nconst temp = console log;\ntry {\nconsole log = obj => tempArr push(obj);\naddLunchToStart(testLunches, \"Sushi\");\nassert strictEqual(tempArr[0], \"Sushi added to the start of the lunch menu \");\naddLunchToStart(testLunches, \"Burger\");\nassert strictEqual(tempArr[1], \"Burger added to the start of the lunch menu \");\n} finally {\nconsole log = temp;\n}\naddLunchToStart([\"Burger\", \"Sushi\"], \"Pizza\") should return [\"Pizza\", \"Burger\", \"Sushi\"] js\nconst temp = console log;\nconsole log = () => {}\ntry {\nassert deepStrictEqual(addLunchToStart([\"Burger\", \"Sushi\"], \"Pizza\"), [\"Pizza\", \"Burger\", \"Sushi\"]);\nassert deepStrictEqual(addLunchToStart([\"Noodles\"], \"Sushi\"), [\"Sushi\", \"Noodles\"]);\n} finally {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "c32435c79fc72d73d6d7a3dfd62d2b84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "tempArr push(obj); addLunchToStart(testLunches, \"Sushi\"); assert strictEqual(tempArr[0], \"Sushi added to the start of the lunch menu \"); addLunchToStart(testLunches, \"Burger\"); assert strictEqual(tempArr[1], \"Burger added to the start of the lunch menu \"); } finally { console log = temp; } addLunchToStart([\"Burger\", \"Sushi\"], \"Pizza\") should return [\"Pizza\", \"Burger\", \"Sushi\"] js const temp = console log; console log = () => {} try { assert deepStrictEqual(addLunchToStart([\"Burger\", \"Sushi\"], \"Pizza\"), [\"Pizza\", \"Burger\", \"Sushi\"]); assert deepStrictEqual(addLunchToStart([\"Noodles\"], \"Sushi\"), [\"Sushi\", \"Noodles\"]); } finally { consolelog = temp;\n}\nYou should define a function removeLastLunch js\nassert isFunction(removeLastLunch)\nThe function removeLastLunch should have one parameter js\nassert lengthOf(removeLastLunch, 1);\nWhen the input array is empty, the function removeLastLunch should log the string \"No lunches to remove \" to the console js\nconst testLunches = [];\nconst tempArr = [];\nconst temp = console log;\ntry {\nconsole log = obj => tempArr push(obj);\nremoveLastLunch(testLunches);\nassert strictEqual(tempArr[0], \"No lunches to remove \");\n} finally {\nconsole log = temp;\n}\nremoveLastLunch([\"Stew\", \"Soup\", \"Toast\"]) should log the string \"Toast removed from the end of the lunch menu \" to the console js\nlet testLunches = [\"Stew\", \"Soup\", \"Toast\"];\nconst tempArr = [];\nconst temp = console log;\ntry {\nconsole log = obj => tempArr push(obj);\nremoveLastLunch(testLunches);\nassert strictEqual(tempArr[0], \"Toast removed from the end of the lunch menu \");\ntestLunches = [\"Rice\", \"Pizza\"];\nremoveLastLunch(testLunches);\nassert strictEqual(tempArr[1], \"Pizza removed from the end of the lunch menu \");\n} finally {\nconsole log = temp;\n}\nremoveLastLunch([\"Sushi\", \"Pizza\", \"Noodles\"]) should return [\"Sushi\", \"Pizza\"] js\nconst temp = console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "a87025b8e07275414916f3f6031eeb5c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "console js let testLunches = [\"Stew\", \"Soup\", \"Toast\"]; const tempArr = []; const temp = console log; try { console log = obj => tempArr push(obj); removeLastLunch(testLunches); assert strictEqual(tempArr[0], \"Toast removed from the end of the lunch menu \"); testLunches = [\"Rice\", \"Pizza\"]; removeLastLunch(testLunches); assert strictEqual(tempArr[1], \"Pizza removed from the end of the lunch menu \"); } finally { console log = temp; } removeLastLunch([\"Sushi\", \"Pizza\", \"Noodles\"]) should return [\"Sushi\", \"Pizza\"] js const temp = consolelog;\nconsole log = () => {}\ntry {\nassert deepStrictEqual(removeLastLunch([\"Sushi\", \"Pizza\", \"Noodles\"]), [\"Sushi\", \"Pizza\"]);\nassert deepStrictEqual(removeLastLunch([\"Pizza\", \"Burger\"]), [\"Pizza\"]);\n} finally {\nconsole log = temp;\n}\nYou should define a function removeFirstLunch js\nassert isFunction(removeFirstLunch);\nThe function removeFirstLunch should have a single parameter js\nassert lengthOf(removeFirstLunch, 1);\nWhen the input array is empty, the function removeFirstLunch should log the string \"No lunches to remove \" to the console js\nconst testLunches = [];\nconst tempArr = [];\nconst temp = console log;\ntry {\nconsole log = obj => tempArr push(obj);\nremoveFirstLunch(testLunches);\nassert strictEqual(tempArr[0], \"No lunches to remove \");\n} finally {\nconsole log = temp;\n}\nremoveFirstLunch([\"Salad\", \"Eggs\", \"Cheese\"]) should log the string \"Salad removed from the start of the lunch menu \" to the console js\nlet testLunches = [\"Salad\", \"Eggs\", \"Cheese\"];\nconst tempArr = [];\nconst temp = console log;\ntry {\nconsole log = obj => tempArr push(obj);\nremoveFirstLunch(testLunches);\nassert strictEqual(tempArr[0], \"Salad removed from the start of the lunch menu \");\ntestLunches = [\"Stew\", \"Soup\", \"Toast\"]\nremoveFirstLunch(testLunches);\nassert strictEqual(tempArr[1], \"Stew removed from the start of the lunch menu \");\n} finally {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "26e4de8cb618c6f87f367e2cdd891917",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "log the string \"Salad removed from the start of the lunch menu \" to the console js let testLunches = [\"Salad\", \"Eggs\", \"Cheese\"]; const tempArr = []; const temp = console log; try { console log = obj => tempArr push(obj); removeFirstLunch(testLunches); assert strictEqual(tempArr[0], \"Salad removed from the start of the lunch menu \"); testLunches = [\"Stew\", \"Soup\", \"Toast\"] removeFirstLunch(testLunches); assert strictEqual(tempArr[1], \"Stew removed from the start of the lunch menu \"); } finally { consolelog = temp;\n}\nremoveFirstLunch([\"Sushi\", \"Pizza\", \"Burger\"]) should return [\"Pizza\", \"Burger\"] js\nconst temp = console log;\nconsole log = () => {}\ntry {\nassert deepStrictEqual(removeFirstLunch([\"Sushi\", \"Pizza\", \"Burger\"]), [\"Pizza\", \"Burger\"]);\nassert deepStrictEqual(removeFirstLunch([\"Pizza\", \"Burger\"]), [\"Burger\"]);\n} finally {\nconsole log = temp;\n}\naddLunchToEnd, addLunchToStart, removeLastLunch, and removeFirstLunch should return the same array passed as an argument after updating it js\nconst temp = console log;\nconsole log = () => {}\nconst testLunches = [\"Spam\"];\ntry {\nassert equal(addLunchToEnd(testLunches, \"Pizza\"), testLunches);\nassert equal(addLunchToStart(testLunches, \"Caviar\"), testLunches);\nassert equal(removeLastLunch(testLunches), testLunches);\nassert equal(removeFirstLunch(testLunches), testLunches);\n} finally {\nconsole log = temp;\n}\nYou should define a function getRandomLunch js\nassert isFunction(getRandomLunch);\nThe function getRandomLunch should have a single parameter js\nassert lengthOf(getRandomLunch, 1);\nWhen the input array is empty, the function getRandomLunch should log the string \"No lunches available \" to the console js\nconst testLunches = [];\nconst tempArr = [];\nconst temp = console log;\ntry {\nconsole log = obj => tempArr push(obj);\ngetRandomLunch(testLunches);\nassert strictEqual(tempArr[0], \"No lunches available \");\n} finally {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "f32017c699ae319d086d39b181218790",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "} You should define a function getRandomLunch js assert isFunction(getRandomLunch); The function getRandomLunch should have a single parameter js assert lengthOf(getRandomLunch, 1); When the input array is empty, the function getRandomLunch should log the string \"No lunches available \" to the console js const testLunches = []; const tempArr = []; const temp = console log; try { console log = obj => tempArr push(obj); getRandomLunch(testLunches); assert strictEqual(tempArr[0], \"No lunches available \"); } finally { consolelog = temp;\n}\nWhen the input array is not empty, the function getRandomLunch should log a string in the format \"Randomly selected lunch: [Lunch Item]\" to the console ```js\nconst testLunches = [\"Fish\", \"Fries\", \"Roast\"];\nconst tempRandom = Math random;\nconst tempArr = [];\nconst temp = console log;\ntry {\nconsole log = obj => tempArr push(obj);\n// check that it correctly outputs the first item\nMath random = () => 0;\ngetRandomLunch([ testLunches]);\nassert strictEqual(tempArr[0], Randomly selected lunch: ${testLunches[0]});\n// Second item\nMath random = () => 0 4;\ngetRandomLunch([ testLunches]);\nassert strictEqual(tempArr[1], Randomly selected lunch: ${testLunches[1]});\n// Third item\nMath random = () => 0 8;\ngetRandomLunch([ testLunches]);\nassert strictEqual(tempArr[2], Randomly selected lunch: ${testLunches[2]});\n} finally {\nMath random = tempRandom;\nconsole log = temp;\n}\n```\nThe getRandomLunch function should not change the array passed to it as argument ```js\nconst testLunches = [\"Fish\", \"Fries\", \"Roast\"];\nlet originalLunches = [ testLunches];\nconst tempRandom = Math random;\ntry {\nMath random = () => 0;\ngetRandomLunch(testLunches);\nassert sameOrderedMembers(testLunches, originalLunches);\nMath random = () => 0 4;\ngetRandomLunch(testLunches);\nassert sameOrderedMembers(testLunches, originalLunches);\nMath random = () => 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "a68b5838d6a4466c112773d9b65e9319",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Randomly selected lunch: ${testLunches[2]}); } finally { Math random = tempRandom; console log = temp; } ``` The getRandomLunch function should not change the array passed to it as argument ```js const testLunches = [\"Fish\", \"Fries\", \"Roast\"]; let originalLunches = [ testLunches]; const tempRandom = Math random; try { Math random = () => 0; getRandomLunch(testLunches); assert sameOrderedMembers(testLunches, originalLunches); Math random = () => 0 4; getRandomLunch(testLunches); assert sameOrderedMembers(testLunches, originalLunches); Math random = () => 08;\ngetRandomLunch(testLunches);\nassert sameOrderedMembers(testLunches, originalLunches);\nconst emptyLunches = [];\nlet originalEmpty = [ emptyLunches];\ngetRandomLunch(emptyLunches);\nassert sameOrderedMembers(emptyLunches, originalEmpty);\n} finally {\nMath random = tempRandom;\n}\n```\nYou should define a function showLunchMenu js\nassert isFunction(showLunchMenu);\nThe function showLunchMenu should have a single parameter js\nassert lengthOf(showLunchMenu, 1);\nWhen the input array is empty, the function showLunchMenu should log the string \"The menu is empty \" to the console js\nconst testLunches = [];\nconst tempArr = [];\nconst temp = console log;\ntry {\nconsole log = obj => tempArr push(obj);\nshowLunchMenu(testLunches);\nassert strictEqual(tempArr[0], \"The menu is empty \");\n} finally {\nconsole log = temp;\n}\nshowLunchMenu([\"Greens\", \"Corns\", \"Beans\"]) should log \"Menu items: Greens, Corns, Beans\" to the console js\nconst testLunches = [\"Greens\", \"Corns\", \"Beans\"];\nconst tempArr = [];\nconst temp = console log;\ntry {\nconsole log = obj => tempArr push(obj);\nshowLunchMenu(testLunches);\nassert strictEqual(tempArr[0], `Menu items: ${testLunches join(\", \")}`);\n} finally {\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "d1202ce5580b13967fd921d023f856cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "log; try { console log = obj => tempArr push(obj); showLunchMenu(testLunches); assert strictEqual(tempArr[0], \"The menu is empty \"); } finally { console log = temp; } showLunchMenu([\"Greens\", \"Corns\", \"Beans\"]) should log \"Menu items: Greens, Corns, Beans\" to the console js const testLunches = [\"Greens\", \"Corns\", \"Beans\"]; const tempArr = []; const temp = console log; try { console log = obj => tempArr push(obj); showLunchMenu(testLunches); assert strictEqual(tempArr[0], `Menu items: ${testLunches join(\", \")}`); } finally { consolelog = temp;\n}\nshowLunchMenu([\"Pizza\", \"Burger\", \"Fries\", \"Salad\"]) should log \"Menu items: Pizza, Burger, Fries, Salad\" to the console js\nconst testLunches = [\"Pizza\", \"Burger\", \"Fries\", \"Salad\"];\nconst tempArr = [];\nconst temp = console log;\ntry {\nconsole log = obj => tempArr push(obj);\nshowLunchMenu(testLunches);\nassert strictEqual(tempArr[0], `Menu items: ${testLunches join(\", \")}`);\n} finally {\nconsole log = temp;\n}\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nconst lunches = [];\n// Add a new lunch to the end of the list\nfunction addLunchToEnd(lunches, newLunch) {\nlunches push(newLunch);\nconsole log(${newLunch} added to the end of the lunch menu );\nreturn lunches;\n}\n// Add a new lunch to the start of the list\nfunction addLunchToStart(lunches, newLunch) {\nlunches unshift(newLunch);\nconsole log(${newLunch} added to the start of the lunch menu );\nreturn lunches;\n}\n// Remove the last lunch from the list\nfunction removeLastLunch(lunches) {\nconst removedLunch = lunches pop();\nif (removedLunch) {\nconsole log(${removedLunch} removed from the end of the lunch menu );\n} else {\nconsole log(\"No lunches to remove",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "ea4582829446585cf7a812b1245d6a08",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the lunch menu ); return lunches; } // Add a new lunch to the start of the list function addLunchToStart(lunches, newLunch) { lunches unshift(newLunch); console log(${newLunch} added to the start of the lunch menu ); return lunches; } // Remove the last lunch from the list function removeLastLunch(lunches) { const removedLunch = lunches pop(); if (removedLunch) { console log(${removedLunch} removed from the end of the lunch menu ); } else { console log(\"No lunches to remove\");\n}\nreturn lunches;\n}\n// Remove the first lunch from the list\nfunction removeFirstLunch(lunches) {\nconst removedLunch = lunches shift();\nif (removedLunch) {\nconsole log(${removedLunch} removed from the start of the lunch menu );\n} else {\nconsole log(\"No lunches to remove \");\n}\nreturn lunches;\n}\n// Function to get a random lunch from the list\nfunction getRandomLunch(lunches) {\nif (lunches length === 0) {\nconsole log(\"No lunches available \");\n}\nelse {\nconst randomIndex = Math floor(Math random() * lunches length);\nconst randomLunch = lunches[randomIndex];\nconsole log(Randomly selected lunch: ${randomLunch});\n}\n}\n// Function to display all the lunches in the list\nfunction showLunchMenu(lunches) {\nif (lunches length === 0) {\nconsole log(\"The menu is empty \");\n}\nelse {\nconsole log(Menu items: ${lunches join(', ')});\n}\n}\naddLunchToEnd(lunches, \"Tacos\");\naddLunchToStart(lunches, \"Sushi\");\nremoveLastLunch(lunches);\nremoveFirstLunch(lunches);\ngetRandomLunch(lunches);\nshowLunchMenu(lunches);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-lunch-picker-program\\66db529d37ad966480ebb633.md",
      "source_type": "git_repo"
    },
    "token_count": 385,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "894c7f4f4c7e28f2a78d851d2e93a77c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-movie-review-page\\67ef8f695db52583424bd118.md",
    "source_type": "git_repo",
    "title": "Movie Review",
    "content": "id: 67ef8f695db52583424bd118\ntitle: Design a Movie Review Page\nchallengeType: 25\ndashedName: design-a-movie-review-page\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a main element Inside the main element, you should have an h1 element for the movie title Below the h1 element, you should have an img element displaying the movie cover Your img element should have a descriptive alt text describing the image You are free to use the following image if you like: https://cdn freecodecamp org/curriculum/labs/rise-beyond-2 png You should have a p element containing a brief movie description You should have another p element to display the movie rating Within it, you should have these items in the listed order:\nA strong element with the text Movie Rating: A span element with an aria-hidden attribute set to true containing a visual representation of the rating using stars ⭐⭐⭐⭐⭐⭐⭐⭐⭐☆ A numerical value, representing the rating, in parentheses (e g 9 2/10) after the span You should have an h2 element with the text Cast Members You should have a ul element Inside the ul element, you should have multiple li elements each containing a strong element for the actor's name followed by the corresponding character name preceded by the text as (e g , James Holloway as Ethan Carter) --hints--\nYou should have a main element js\nassert isNotNull(document querySelector(\"main\"));\nInside the main element, you should have an h1 element containing the movie title js\nconst h1 = document querySelector(\"main > h1\");\nassert isAbove(h1 innerText trim() length, 0);\nBelow the h1 element, you should have an img element with a descriptive alt attribute js\nconst img = document querySelector(\"main > h1 + img\");\nassert isNotNull(img);\nassert isNotEmpty(img getAttribute(\"alt\"));\nYou should have a p element after the image that contains the movie description js\nconst description = document querySelector(\"main img + p\");\nassert isNotNull(description);\nassert isNotEmpty(description innerText trim());\nYou should have another p element that contains the rating js\nconst paragraphs = document querySelectorAll(\"main p\");\nassert isAtLeast(paragraphs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7249,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-movie-review-page\\67ef8f695db52583424bd118.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "7522fef113ec8802caa3dcda7cffb6e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-movie-review-page\\67ef8f695db52583424bd118.md",
    "source_type": "git_repo",
    "title": "Movie Review",
    "content": "h1 element, you should have an img element with a descriptive alt attribute js const img = document querySelector(\"main > h1 + img\"); assert isNotNull(img); assert isNotEmpty(img getAttribute(\"alt\")); You should have a p element after the image that contains the movie description js const description = document querySelector(\"main img + p\"); assert isNotNull(description); assert isNotEmpty(description innerText trim()); You should have another p element that contains the rating js const paragraphs = document querySelectorAll(\"main p\"); assert isAtLeast(paragraphslength, 2);\nInside the second p element, you should have a strong element with the text Movie Rating: js\nconst strongEl = document querySelector(\"main p:nth-of-type(2) strong\");\nassert match(strongEl innerText trim(), /^Movie Rating: $/);\nThere should be a span element inside the rating paragraph js\nconst spanEl = document querySelector(\"main p:nth-of-type(2) span\");\nassert isNotNull(spanEl);\nThe span element inside the rating paragraph should have ten stars, either filled in (⭐) or empty (☆), followed by a numerical value in parentheses after the span ```js\nconst spanEl = document querySelector(\"main p:nth-of-type(2) span\");\nconst fullRatingText = document querySelector(\"main p:nth-of-type(2)\") textContent replace(/\\s+/g, ' ') trim();\nassert match(spanEl innerText trim(), /^[⭐☆]{10}$/);\nassert match(fullRatingText, /Movie Rating: \\s[⭐☆]{10}\\s(\\s\\d+( : \\d+) \\s\\/\\s10\\s)$/);\n```\nThe span element inside the rating paragraph should have an aria-hidden attribute set to true js\nconst spanEl = document querySelector(\"main p:nth-of-type(2) span\");\nassert strictEqual(spanEl getAttribute(\"aria-hidden\"), \"true\");\nYou should have an h2 element js\nassert exists(document querySelector(\"h2\"));\nYour h2 should come after your second p element ```js\nconst allParagraphs = document querySelectorAll(\"p\");\nassert isAtLeast(allParagraphs length, 2);\nconst h2 = document querySelector(\"h2\");\nconst main = document querySelector(\"main\");\nassert exists(h2);\nassert exists(main);\nconst elements = Array from(main querySelectorAll(\"*\"));\nconst lastPIndex = elements indexOf(allParagraphs[1]);\nconst h2Index = elements indexOf(h2);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7249,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-movie-review-page\\67ef8f695db52583424bd118.md",
      "source_type": "git_repo"
    },
    "token_count": 516,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "40c02230fa3304f8a4ab4c26b6576715",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-movie-review-page\\67ef8f695db52583424bd118.md",
    "source_type": "git_repo",
    "title": "Movie Review",
    "content": "attribute set to true js const spanEl = document querySelector(\"main p:nth-of-type(2) span\"); assert strictEqual(spanEl getAttribute(\"aria-hidden\"), \"true\"); You should have an h2 element js assert exists(document querySelector(\"h2\")); Your h2 should come after your second p element ```js const allParagraphs = document querySelectorAll(\"p\"); assert isAtLeast(allParagraphs length, 2); const h2 = document querySelector(\"h2\"); const main = document querySelector(\"main\"); assert exists(h2); assert exists(main); const elements = Array from(main querySelectorAll(\"*\")); const lastPIndex = elements indexOf(allParagraphs[1]); const h2Index = elements indexOf(h2); assertisAbove(h2Index, lastPIndex);\n```\nYour h2 should have the text Cast Members js\nconst h2 = document querySelector(\"h2\");\nassert equal(h2 textContent trim(), \"Cast Members\");\nYou should have a ul element after the h2 js\nconst ul = document querySelector(\"main h2 + ul\");\nassert isNotNull(ul);\nThe ul should contain multiple li elements js\nconst liItems = document querySelectorAll(\"main ul li\");\nassert isAbove(liItems length, 1);\nEach li should contain a strong element for the actor name followed by the corresponding character name preceded by the text as (e g , James Holloway as Ethan Carter) js\nconst liItems = document querySelectorAll(\"main ul li\");\nassert isNotEmpty(liItems);\nliItems forEach(li => {\nconst strong = li querySelector(\"strong\");\nassert isNotNull(strong);\nconst fullText = li textContent trim();\nconst actorName = strong textContent trim();\nassert isTrue(fullText startsWith(actorName));\nconst characterPart = fullText slice(actorName length) trim();\nassert match(characterPart, /^as\\s +/);\n});\n--seed--\n--seed-contents--\n```html\nMovie Review\n```\n--solutions--\n```html\nMovie Review\nMovie Review: Rise Beyond\nRise Beyond is an uplifting drama that tells the story of Ethan Carter,\na young man from a small town who dreams of becoming a world-class\nmusician Facing financial struggles and self-doubt, Ethan embarks on a\njourney of resilience, guided by his mentor Professor Adams and\nchildhood friend Lena Mitchell",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7249,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-movie-review-page\\67ef8f695db52583424bd118.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "7331ff4d1df18ce599facecf116ee048",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-movie-review-page\\67ef8f695db52583424bd118.md",
    "source_type": "git_repo",
    "title": "Movie Review",
    "content": "const characterPart = fullText slice(actorName length) trim(); assert match(characterPart, /^as\\s +/); }); --seed-- --seed-contents-- ```html Movie Review ``` --solutions-- ```html Movie Review Movie Review: Rise Beyond Rise Beyond is an uplifting drama that tells the story of Ethan Carter, a young man from a small town who dreams of becoming a world-class musician Facing financial struggles and self-doubt, Ethan embarks on a journey of resilience, guided by his mentor Professor Adams and childhood friend Lena MitchellThrough setbacks, failures, and moments\nof triumph, Rise Beyond reminds us that our greatest potential lies\nbeyond our fears Movie Rating:\n⭐⭐⭐⭐⭐⭐⭐⭐⭐☆ (9 2/10)\nCast Members\nJames Holloway as Ethan Carter\nOlivia Sterling as Lena Mitchell\nWilliam Lancaster as Professor Adams\nMaria Collins as Evelyn Carter (Ethan’s Mother)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7249,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-movie-review-page\\67ef8f695db52583424bd118.md",
      "source_type": "git_repo"
    },
    "token_count": 198,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "f4506f1176739b745cb707584a81c569",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-moon-orbit\\66a37f37ef5823a313de8c26.md",
    "source_type": "git_repo",
    "title": "Moon Orbit",
    "content": "id: 66a37f37ef5823a313de8c26\ntitle: Build a Moon Orbit\nchallengeType: 25\ndashedName: build-a-moon-orbit\ndemoType: onClick\n--description--\nIn this lab, you will create a simple animation of the Moon's orbit around the Earth using HTML and CSS The Earth will be at the center of the system, and the Moon will orbit around it Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should align all the elements to the center of the page by setting the height to 100% of the viewport and setting a flexbox layout in the body element You should have a div with the class space Inside the space element, there should be two more div elements with the class earth and orbit, respectively, in order Inside the orbit element, there should be another div with the class moon The div element with a class of space should be centered on the page and have a width and height of 200px The div element with a class of space should use relative positioning The earth element should use absolute positioning Position the center of the earth element at the halfway point of its parent on both the vertical (top) and horizontal (left) axes After that, shift the earth element back by half its own width and height, to center it within its parent, the space element The earth element should have a width and height of 100px The orbit element should have a width and height of 200px The orbit element should be positioned using absolute positioning Its bottom right corner should be at the center of the space element using a transform property that shifts it by -50% on both the vertical and horizontal axes The orbit path for the moon around the Earth should be a circle The moon element should be positioned using absolute positioning and have a width and height of 30px The moon element should position itself at the top of the orbit element and be centered horizontally You should further adjust the horizontal positioning of the moon element by moving the element to the left by half of its width The earth selector should have a background color and a border-radius of 50% The moon selector should have a background color and a border-radius of 50% You should define a @keyframes orbit animation that rotates the orbit element 360 degrees around its center You should apply this animation to the",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11559,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-moon-orbit\\66a37f37ef5823a313de8c26.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "9ec91e95bd8ba47cc723a6d7273f3b9e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-moon-orbit\\66a37f37ef5823a313de8c26.md",
    "source_type": "git_repo",
    "title": "Moon Orbit",
    "content": "be centered horizontally You should further adjust the horizontal positioning of the moon element by moving the element to the left by half of its width The earth selector should have a background color and a border-radius of 50% The moon selector should have a background color and a border-radius of 50% You should define a @keyframes orbit animation that rotates the orbit element 360 degrees around its center You should apply this animation to theorbit element with a duration of 5 seconds, a linear timing function, and infinite iterations Note: Be sure to link your stylesheet in your HTML and apply your CSS --hints--\nThe contents of the body element should be centered on the page by setting the height to 100% of the viewport height, display to flex, justify-content, and align-items to center ```js\nassert strictEqual(new __helpers CSSHelp(document) getStyle('body') height, '100vh')\nassert strictEqual(new __helpers CSSHelp(document) getStyle('body') display, 'flex');\nassert strictEqual(new __helpers CSSHelp(document) getStyle('body') justifyContent, 'center');\nassert strictEqual(new __helpers CSSHelp(document) getStyle('body') alignItems, 'center');\n```\nYou should have a main div with the class space js\nassert strictEqual(document querySelector('div') getAttribute('class'), 'space');\nThe space element should have a width and height of 200px js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' space') width, '200px')\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' space') height, '200px');\nThe space element should have a position property of relative js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' space') position, 'relative')\nYou should have a div with a class of earth inside the div with a class of space js\nassert exists(document querySelector('div space div earth'));\nThe earth element should be the first child of the space element js\nassert strictEqual(document querySelector(' space > div') getAttribute('class'), 'earth');\nThe earth element should have a width and height of 100px js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' earth') width, '100px');\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' earth') height, '100px');\nThe earth element should use absolute positioning js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' earth') position, 'absolute');\nThe",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11559,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-moon-orbit\\66a37f37ef5823a313de8c26.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "cbcc18b36649260479a12cb5a6b6568c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-moon-orbit\\66a37f37ef5823a313de8c26.md",
    "source_type": "git_repo",
    "title": "Moon Orbit",
    "content": "class of space js assert exists(document querySelector('div space div earth')); The earth element should be the first child of the space element js assert strictEqual(document querySelector(' space > div') getAttribute('class'), 'earth'); The earth element should have a width and height of 100px js assert strictEqual(new __helpers CSSHelp(document) getStyle(' earth') width, '100px'); assert strictEqual(new __helpers CSSHelp(document) getStyle(' earth') height, '100px'); The earth element should use absolute positioning js assert strictEqual(new __helpers CSSHelp(document) getStyle(' earth') position, 'absolute'); Theearth element should have a top and left position of 50% js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' earth') top, '50%')\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' earth') left, '50%');\nThe earth element should be moved back and up by 50% by setting the transform property to translate(-50%, -50%) js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' earth') transform, 'translate(-50%, -50%)');\nYou should have a div with the class orbit inside the space element js\nassert exists(document querySelector('div space div orbit'));\nThe orbit element should come after the earth element js\nassert isTrue(document querySelector(' earth') nextElementSibling classList contains('orbit'));\nThe orbit element should have a width and height of 200px js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' orbit') width, '200px')\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' orbit') height, '200px');\nThe orbit element should use absolute positioning js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' orbit') position, 'absolute');\nThe orbit element should be positioned at the center of the space element using a transform property that shifts it by -50% on both the vertical and horizontal axes js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' orbit') transform, 'translate(-50%, -50%)');\nYou should have a div with the class moon inside the orbit element js\nassert exists(document querySelector('div space div orbit div moon'));\nThe moon element should have a width and height of 30px js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' moon') width, '30px')\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11559,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-moon-orbit\\66a37f37ef5823a313de8c26.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "416270c5342f6dd5378d0be4e5c52f2a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-moon-orbit\\66a37f37ef5823a313de8c26.md",
    "source_type": "git_repo",
    "title": "Moon Orbit",
    "content": "at the center of the space element using a transform property that shifts it by -50% on both the vertical and horizontal axes js assert strictEqual(new __helpers CSSHelp(document) getStyle(' orbit') transform, 'translate(-50%, -50%)'); You should have a div with the class moon inside the orbit element js assert exists(document querySelector('div space div orbit div moon')); The moon element should have a width and height of 30px js assert strictEqual(new __helpers CSSHelp(document) getStyle(' moon') width, '30px') assertstrictEqual(new __helpers CSSHelp(document) getStyle(' moon') height, '30px');\nThe moon element should be positioned using absolute positioning js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' moon') position, 'absolute');\nThe top edge of the moon element should be aligned with the top edge of its containing block js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' moon') top, '0px');\nYou should move the left edge of the moon element to the center of the containing block (50% from the left side) js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' moon') left, '50%');\nThe moon element should be adjusted horizontally by translating it to -50% across the x-axis js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' moon') transform, 'translateX(-50%)');\nThe earth selector should have a background color js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(' earth') backgroundColor);\nThe earth selector should have border-radius of 50% js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' earth') borderRadius, '50%');\nThe moon selector should have a background color js\nassert isNotEmpty(new __helpers CSSHelp(document) getStyle(' moon') backgroundColor);\nThe moon selector should have border-radius of 50% js\nassert strictEqual(new __helpers CSSHelp(document) getStyle(' moon') borderRadius, '50%');\nYou should have a @keyframes rule js\nassert lengthOf(new __helpers CSSHelp(document) getCSSRules('keyframes'), 1);\nYour new @keyframes rule should be named orbit js\nassert strictEqual(new __helpers CSSHelp(document) getCSSRules('keyframes') [0] name, 'orbit');\nYour @keyframes orbit rule should have a 0% selector",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11559,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-moon-orbit\\66a37f37ef5823a313de8c26.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "ddc5c382b4c80a6d1c3c6454489ad532",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-moon-orbit\\66a37f37ef5823a313de8c26.md",
    "source_type": "git_repo",
    "title": "Moon Orbit",
    "content": "getStyle(' earth') borderRadius, '50%'); The moon selector should have a background color js assert isNotEmpty(new __helpers CSSHelp(document) getStyle(' moon') backgroundColor); The moon selector should have border-radius of 50% js assert strictEqual(new __helpers CSSHelp(document) getStyle(' moon') borderRadius, '50%'); You should have a @keyframes rule js assert lengthOf(new __helpers CSSHelp(document) getCSSRules('keyframes'), 1); Your new @keyframes rule should be named orbit js assert strictEqual(new __helpers CSSHelp(document) getCSSRules('keyframes') [0] name, 'orbit'); Your @keyframes orbit rule should have a 0% selectorjs\nconst rules = new __helpers CSSHelp(document) getCSSRules('keyframes') [0] cssRules;\nassert strictEqual(rules [0] keyText, '0%');\nYour @keyframes orbit rule should have a 100% selector js\nconst rules = new __helpers CSSHelp(document) getCSSRules('keyframes') [0] cssRules\nassert isTrue(rules [0] keyText === '100%' || rules [1] keyText === '100%');\nYour 0% selector should have a transform property set to rotate(0deg) translate(-50%, -50%) js\nassert strictEqual(new __helpers CSSHelp(document) getCSSRules('keyframes') [0] cssRules [0] style transform, 'rotate(0deg) translate(-50%, -50%)');\nYour 100% selector should come after your 0% selector js\nassert strictEqual(new __helpers CSSHelp(document) getCSSRules('keyframes') [0] cssRules [1] keyText, '100%')\nYour 100% selector should have a transform property set to rotate(360deg) translate(-50%, -50%) js\nassert strictEqual(new __helpers CSSHelp(document) getCSSRules('keyframes') [0] cssRules [1] style transform, 'rotate(360deg) translate(-50%, -50%)')\nYour orbit selector should have an animation property set to orbit 5s linear infinite ```js\nconst orbitStyles = new __helpers CSSHelp(document) getStyle(' orbit');\nassert strictEqual(orbitStyles animationName, \"orbit\");\nassert strictEqual(orbitStyles animationDuration, \"5s\");\nassert strictEqual(orbitStyles",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11559,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-moon-orbit\\66a37f37ef5823a313de8c26.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "2da89647967d5faf9414847d7eec8373",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-moon-orbit\\66a37f37ef5823a313de8c26.md",
    "source_type": "git_repo",
    "title": "Moon Orbit",
    "content": "come after your 0% selector js assert strictEqual(new __helpers CSSHelp(document) getCSSRules('keyframes') [0] cssRules [1] keyText, '100%') Your 100% selector should have a transform property set to rotate(360deg) translate(-50%, -50%) js assert strictEqual(new __helpers CSSHelp(document) getCSSRules('keyframes') [0] cssRules [1] style transform, 'rotate(360deg) translate(-50%, -50%)') Your orbit selector should have an animation property set to orbit 5s linear infinite ```js const orbitStyles = new __helpers CSSHelp(document) getStyle(' orbit'); assert strictEqual(orbitStyles animationName, \"orbit\"); assert strictEqual(orbitStyles animationDuration, \"5s\"); assert strictEqual(orbitStylesanimationTimingFunction, \"linear\");\nassert strictEqual(orbitStyles animationIterationCount, \"infinite\");\n```\n--seed--\n--seed-contents--\n```html\nMoon Orbit\n```\n```css\n```\n--solutions--\n```html\nMoon Orbiting Earth\n```\n```css\nbody {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nmargin: 0;\nbackground-color: #000;\n} space {\nposition: relative;\nwidth: 200px;\nheight: 200px;\n} earth {\nwidth: 100px;\nheight: 100px;\nbackground-color: blue;\nborder-radius: 50%;\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbox-shadow: 0 0 20px rgba(0, 0, 255, 0 5);\n} orbit {\nwidth: 200px;\nheight: 200px;\nposition: absolute;\ntransform: translate(-50%, -50%);\nanimation: orbit 5s linear infinite;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11559,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-moon-orbit\\66a37f37ef5823a313de8c26.md",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "b91d3dbd967cb41f1201342067dac18b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-moon-orbit\\66a37f37ef5823a313de8c26.md",
    "source_type": "git_repo",
    "title": "Moon Orbit",
    "content": "```html Moon Orbiting Earth ``` ```css body { display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0; background-color: #000; } space { position: relative; width: 200px; height: 200px; } earth { width: 100px; height: 100px; background-color: blue; border-radius: 50%; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); box-shadow: 0 0 20px rgba(0, 0, 255, 0 5); } orbit { width: 200px; height: 200px; position: absolute; transform: translate(-50%, -50%); animation: orbit 5s linear infinite; }moon {\nwidth: 30px;\nheight: 30px;\nbackground-color: gray;\nborder-radius: 50%;\nposition: absolute;\ntop: 0;\nleft: 50%;\ntransform: translateX(-50%);\nbox-shadow: 0 0 10px rgb(255, 255, 255);\n}\n@keyframes orbit {\n0% {\ntransform: rotate(0deg) translate(-50%, -50%);\n}\n100% {\ntransform: rotate(360deg) translate(-50%, -50%);\n}\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11559,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-moon-orbit\\66a37f37ef5823a313de8c26.md",
      "source_type": "git_repo"
    },
    "token_count": 285,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "2f65b109756132f66950c622d4d622c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-multimedia-player\\67fccc2463253b213a000142.md",
    "source_type": "git_repo",
    "title": "Multimedia Player",
    "content": "id: 67fccc2463253b213a000142\ntitle: Build a Multimedia Player\nchallengeType: 25\ndashedName: lab-multimedia-player\ndemoType: onClick\n--description--\nIn the prior lectures, you were introduced to working with audio and video elements In this lab, you will build out a multimedia player that will display an audio track and video with a transcript For the audio element, you will need to include a source element which is used to specify the media being used Here is an example:\nhtml\n<audio controls aria-label=\"descriptive label goes here\">\n<source src=\"url-to-audio-goes-here\" type=\"audio/mpeg\">\n</audio>\nThe source element can also be used in the video element like this:\n```html\n```\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have an h1 element for the main title of the page You should have three section elements Inside the first section element, you should have an h2 element for the title of song playing Below the h2 element, you should have an audio element with controls attribute and an aria-label attribute Inside the audio element, you should have a source element with a src attribute pointing to an audio file and a type attribute You are free to use this audio URL if you like: https://cdn freecodecamp org/curriculum/js-music-player/sailing-away mp3\nInside the second section element, you should have an h2 element for the title of the video playing Below the h2 element, you should have a video element with controls, width attributes and an aria-label attribute Inside the video element, you should have a source element with a src attribute pointing to a video file and a type attribute You are free to use this video URL if you like: https://cdn freecodecamp org/curriculum/labs/What is the map method and how does it work mp4\nBelow the source element, you should have a track element with a src attribute pointing to a subtitles file and a kind attribute, a srclang attribute and a label attribute Inside the third section element, you should have an h2 element for the title of the section eg \"Transcript\" Below the h2 element, you should have a p element with the transcript of the video --hints--\nYou should have an h1 element js\nassert isNotNull(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11481,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-multimedia-player\\67fccc2463253b213a000142.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "dbeef46c478d4179f91ab115de5b6de9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-multimedia-player\\67fccc2463253b213a000142.md",
    "source_type": "git_repo",
    "title": "Multimedia Player",
    "content": "mp4 Below the source element, you should have a track element with a src attribute pointing to a subtitles file and a kind attribute, a srclang attribute and a label attribute Inside the third section element, you should have an h2 element for the title of the section eg \"Transcript\" Below the h2 element, you should have a p element with the transcript of the video --hints-- You should have an h1 element js assert isNotNull(documentquerySelector(\"h1\"));\nYour h1 should have some text representing the main title of the page js\nassert isNotEmpty(document querySelector(\"h1\") textContent trim());\nYou should have three section elements js\nconst sectionElements = document querySelectorAll(\"section\");\nassert lengthOf(sectionElements, 3);\nThe first section should contain an h2 element js\nconst sectionElements = document querySelectorAll(\"section\");\nconst firstSection = sectionElements[0];\nassert isNotNull(firstSection querySelector(\"h2\"));\nYour h2 should have some text representing the title of the song playing js\nconst firstSection = document querySelectorAll(\"section\")[0];\nassert isNotEmpty(firstSection querySelector(\"h2\") textContent trim());\nThe first section should contain an audio element js\nconst firstSection = document querySelectorAll(\"section\")[0];\nconst audio = firstSection querySelector(\"audio\");\nassert isNotNull(audio);\nYour audio element should have a controls attribute js\nconst firstSection = document querySelectorAll(\"section\")[0];\nconst audio = firstSection querySelector(\"audio\");\nassert isTrue(audio hasAttribute(\"controls\"));\nYour audio element should have an aria-label attribute with text describing the audio ```js\nconst firstSection = document querySelectorAll(\"section\")[0];\nconst audio = firstSection querySelector(\"audio\");\nassert isTrue(audio hasAttribute(\"aria-label\"));\nconst ariaLabel = audio getAttribute(\"aria-label\");\nassert isString(ariaLabel);\nassert isNotEmpty(ariaLabel trim());\n```\nYour audio element should have a source element js\nconst firstSection = document querySelectorAll(\"section\")[0];\nconst audio = firstSection querySelector(\"audio\");\nconst source = audio querySelector(\"source\");\nassert isNotNull(source);\nYour source element should have a src attribute pointing to an audio file js\nconst firstSection = document querySelectorAll(\"section\")[0];\nconst audio = firstSection querySelector(\"audio\");\nconst source = audio querySelector(\"source\");\nassert isTrue(source hasAttribute(\"src\"));\nassert isTrue(source getAttribute(\"src\") trim()",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11481,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-multimedia-player\\67fccc2463253b213a000142.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "633a9ea114094d1acfbd6dd5bbd2a3b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-multimedia-player\\67fccc2463253b213a000142.md",
    "source_type": "git_repo",
    "title": "Multimedia Player",
    "content": "assert isTrue(audio hasAttribute(\"aria-label\")); const ariaLabel = audio getAttribute(\"aria-label\"); assert isString(ariaLabel); assert isNotEmpty(ariaLabel trim()); ``` Your audio element should have a source element js const firstSection = document querySelectorAll(\"section\")[0]; const audio = firstSection querySelector(\"audio\"); const source = audio querySelector(\"source\"); assert isNotNull(source); Your source element should have a src attribute pointing to an audio file js const firstSection = document querySelectorAll(\"section\")[0]; const audio = firstSection querySelector(\"audio\"); const source = audio querySelector(\"source\"); assert isTrue(source hasAttribute(\"src\")); assert isTrue(source getAttribute(\"src\") trim()length > 0);\nYour source element should have a type attribute with a value specifying the type of the audio ```js\nconst firstSection = document querySelectorAll(\"section\")[0];\nconst audio = firstSection querySelector(\"audio\");\nconst source = audio querySelector(\"source\");\nassert isTrue(source hasAttribute(\"type\"));\nassert isTrue(source getAttribute(\"type\") trim() length > 0);\n```\nThe second section should contain an h2 element js\nconst sectionElements = document querySelectorAll(\"section\");\nconst h2 = sectionElements[1] querySelector(\"h2\");\nassert isNotNull(h2);\nYour h2 should have some text representing the title of the video playing js\nassert isNotEmpty(document querySelector(\"h2\") textContent trim());\nThe second section should contain a video element js\nconst secondSection = document querySelectorAll(\"section\")[1];\nconst video = secondSection querySelector(\"video\");\nassert isNotNull(video);\nYour video element should have a controls attribute js\nconst secondSection = document querySelectorAll(\"section\")[1];\nconst video = secondSection querySelector(\"video\");\nassert isTrue(video hasAttribute(\"controls\"));\nYour video element should have a width attribute with a value specifying the width of the video ```js\nconst secondSection = document querySelectorAll(\"section\")[1];\nconst video = secondSection querySelector(\"video\");\nassert isTrue(video hasAttribute(\"width\"));\nconst width = video getAttribute(\"width\");\nassert isTrue(width trim() length > 0);\n```\nThe video element should have a source element js\nconst secondSection = document querySelectorAll(\"section\")[1];\nconst video = secondSection querySelector(\"video\");\nconst source = video querySelector(\"source\");\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11481,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-multimedia-player\\67fccc2463253b213a000142.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "98d934d4de12a5431fa36ad69c1248c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-multimedia-player\\67fccc2463253b213a000142.md",
    "source_type": "git_repo",
    "title": "Multimedia Player",
    "content": "const video = secondSection querySelector(\"video\"); assert isTrue(video hasAttribute(\"controls\")); Your video element should have a width attribute with a value specifying the width of the video ```js const secondSection = document querySelectorAll(\"section\")[1]; const video = secondSection querySelector(\"video\"); assert isTrue(video hasAttribute(\"width\")); const width = video getAttribute(\"width\"); assert isTrue(width trim() length > 0); ``` The video element should have a source element js const secondSection = document querySelectorAll(\"section\")[1]; const video = secondSection querySelector(\"video\"); const source = video querySelector(\"source\"); assertisNotNull(source);\nThe source element should have a src attribute pointing to a video file js\nconst secondSection = document querySelectorAll(\"section\")[1];\nconst video = secondSection querySelector(\"video\");\nconst source = video querySelector(\"source\");\nassert isTrue(source hasAttribute(\"src\"));\nassert isTrue(source getAttribute(\"src\") trim() length > 0);\nThe source element should have a type attribute with a value specifying the type of video js\nconst secondSection = document querySelectorAll(\"section\")[1];\nconst video = secondSection querySelector(\"video\");\nconst source = video querySelector(\"source\");\nassert isTrue(source hasAttribute(\"type\"));\nassert isTrue(source getAttribute(\"type\") trim() length > 0);\nYour video element should have a track element js\nconst secondSection = document querySelectorAll(\"section\")[1];\nconst video = secondSection querySelector(\"video\");\nconst track = video querySelector(\"track\");\nassert isNotNull(track);\nYour track element should have a src attribute pointing to a subtitles file js\nconst secondSection = document querySelectorAll(\"section\")[1];\nconst video = secondSection querySelector(\"video\");\nconst track = video querySelector(\"track\");\nassert isTrue(track hasAttribute(\"src\"));\nassert isTrue(track getAttribute(\"src\") trim() length > 0);\nYour track element should have a kind attribute with text describing the kind of file js\nconst secondSection = document querySelectorAll(\"section\")[1];\nconst video = secondSection querySelector(\"video\");\nconst track = video querySelector(\"track\");\nassert isTrue(track hasAttribute(\"kind\"));\nassert isTrue(track getAttribute(\"kind\") trim() length > 0);\nYour track element should have a srclang attribute with text describing the language of the subtitles js\nconst secondSection = document querySelectorAll(\"section\")[1];\nconst video = secondSection",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11481,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-multimedia-player\\67fccc2463253b213a000142.md",
      "source_type": "git_repo"
    },
    "token_count": 514,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "e3fa8b9d009dd3de812b1df86f840e2f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-multimedia-player\\67fccc2463253b213a000142.md",
    "source_type": "git_repo",
    "title": "Multimedia Player",
    "content": "isTrue(track hasAttribute(\"src\")); assert isTrue(track getAttribute(\"src\") trim() length > 0); Your track element should have a kind attribute with text describing the kind of file js const secondSection = document querySelectorAll(\"section\")[1]; const video = secondSection querySelector(\"video\"); const track = video querySelector(\"track\"); assert isTrue(track hasAttribute(\"kind\")); assert isTrue(track getAttribute(\"kind\") trim() length > 0); Your track element should have a srclang attribute with text describing the language of the subtitles js const secondSection = document querySelectorAll(\"section\")[1]; const video = secondSectionquerySelector(\"video\");\nconst track = video querySelector(\"track\");\nassert isTrue(track hasAttribute(\"srclang\"));\nassert isTrue(track getAttribute(\"srclang\") trim() length > 0);\nYour track element should have a label attribute with text describing the language of the subtitles js\nconst secondSection = document querySelectorAll(\"section\")[1];\nconst video = secondSection querySelector(\"video\");\nconst track = video querySelector(\"track\");\nassert isTrue(track hasAttribute(\"label\"));\nassert isTrue(track getAttribute(\"label\") trim() length > 0);\nThe third section should contain an h2 element js\nconst sectionElements = document querySelectorAll(\"section\");\nconst thirdSection = sectionElements[2];\nassert isNotNull(thirdSection querySelector(\"h2\"));\nYour h2 should have some text representing the title of the section js\nassert isNotEmpty(document querySelector(\"h2\") textContent trim());\nThe third section should contain a p element for the transcript js\nconst thirdSection = document querySelectorAll(\"section\")[2];\nconst transcript = thirdSection querySelector(\"p\");\nassert isNotNull(transcript);\nassert isAbove(transcript textContent trim() length, 0);\n--seed--\n--seed-contents--\n```html\nMultimedia Player\n```\n--solutions--\n```html\nMultimedia Player\nMultimedia Player\nNow Playing: Sailing Away\nWhat is a map method and how does it work Transcript\nWhat is a map method and how does it work The map method is a powerful and widely used function in JavaScript that operates on arrays It's designed to create a new array by applying a given function to each element of the original array This method does not modify the original array, but instead returns the new array containing the results of the function applied to each element ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11481,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-multimedia-player\\67fccc2463253b213a000142.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "4898f887e2f080e8ec37a215b4fd161e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-mutations\\af2170cad53daa0770fabdea.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: af2170cad53daa0770fabdea\ntitle: Implement the Mutations Algorithm\nchallengeType: 26\ndashedName: implement-the-mutations-algorithm\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nCreate a function named mutation that takes an array as its argument mutation should return true if the string in the first element of the array contains all of the letters of the string in the second element of the array, and false otherwise For example:\nmutation([\"hello\", \"Hello\"]), should return true because all of the letters in the second string are present in the first, ignoring case mutation([\"hello\", \"hey\"]) should return false because the string hello does not contain a y mutation([\"Alien\", \"line\"]), should return true because all of the letters in line are present in Alien --hints--\nmutation([\"hello\", \"hey\"]) should return false js\nassert isFalse(mutation(['hello', 'hey']));\nmutation([\"hello\", \"Hello\"]) should return true js\nassert isTrue(mutation(['hello', 'Hello']));\nmutation([\"zyxwvutsrqponmlkjihgfedcba\", \"qrstu\"]) should return true js\nassert isTrue(mutation(['zyxwvutsrqponmlkjihgfedcba', 'qrstu']));\nmutation([\"Mary\", \"Army\"]) should return true js\nassert isTrue(mutation(['Mary', 'Army']));\nmutation([\"Mary\", \"Aarmy\"]) should return true js\nassert isTrue(mutation(['Mary', 'Aarmy']));\nmutation([\"Alien\", \"line\"]) should return true js\nassert isTrue(mutation(['Alien', 'line']));\nmutation([\"floor\", \"for\"]) should return true js\nassert isTrue(mutation(['floor', 'for']));\nmutation([\"hello\", \"neo\"]) should return false js\nassert isFalse(mutation(['hello', 'neo']));\nmutation([\"voodoo\", \"no\"]) should return false js\nassert isFalse(mutation(['voodoo', 'no']));\nmutation([\"ate\", \"date\"]) should return false js\nassert isFalse(mutation(['ate', 'date']));\nmutation([\"Tiger\", \"Zebra\"]) should return false js\nassert isFalse(mutation(['Tiger', 'Zebra']));\nmutation([\"Noel\", \"Ole\"]) should return true js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2606,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-mutations\\af2170cad53daa0770fabdea.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d8c35b3c322a62cc2f0ce3c3e69a8231",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-mutations\\af2170cad53daa0770fabdea.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return true js assert isTrue(mutation(['Mary', 'Army'])); mutation([\"Mary\", \"Aarmy\"]) should return true js assert isTrue(mutation(['Mary', 'Aarmy'])); mutation([\"Alien\", \"line\"]) should return true js assert isTrue(mutation(['Alien', 'line'])); mutation([\"floor\", \"for\"]) should return true js assert isTrue(mutation(['floor', 'for'])); mutation([\"hello\", \"neo\"]) should return false js assert isFalse(mutation(['hello', 'neo'])); mutation([\"voodoo\", \"no\"]) should return false js assert isFalse(mutation(['voodoo', 'no'])); mutation([\"ate\", \"date\"]) should return false js assert isFalse(mutation(['ate', 'date'])); mutation([\"Tiger\", \"Zebra\"]) should return false js assert isFalse(mutation(['Tiger', 'Zebra'])); mutation([\"Noel\", \"Ole\"]) should return true js assertisTrue(mutation(['Noel', 'Ole']));\n--seed--\n--seed-contents--\njs\n--solutions--\n```js\nfunction mutation(arr) {\nlet hash = Object create(null);\narr[0] toLowerCase() split('') forEach(c => (hash[c] = true));\nreturn arr[1] toLowerCase() split('') filter(c => hash[c]) length;\n}\nmutation(['hello', 'hey']);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2606,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-mutations\\af2170cad53daa0770fabdea.md",
      "source_type": "git_repo"
    },
    "token_count": 283,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a097290f4950d18a9ded3b30f4546e13",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-number-guessing-game\\602da04c22201c65d2a019f4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 602da04c22201c65d2a019f4\ntitle: Build a Number Guessing Game\nchallengeType: 13\nurl: freeCodeCamp/learn-number-guessing-game\ndashedName: lab-number-guessing-game\n--description--\nFor this lab, you will use Bash scripting, PostgreSQL, and Git to create a number guessing game that runs in the terminal and saves user information.\n--instructions--\nImportant: After you pass all the project tests, save a dump of your database into a number_guess.sql file, as well as your number_guess.sh file, so you can complete step 2. There will be instructions on how to do that within the virtual machine.\n--notes--\nRequired files: number_guess.sql, number_guess.sh\n--hints--\n--seed--\n--solutions--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 729,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-number-guessing-game\\602da04c22201c65d2a019f4.md",
      "source_type": "git_repo"
    },
    "token_count": 171,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c107f499291c6bfa4f2111940cf16973",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-number-pattern-generator\\6842a6cd9836f0114a5b7a8a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6842a6cd9836f0114a5b7a8a\ntitle: Build a Number Pattern Generator\nchallengeType: 27\ndashedName: build-a-number-pattern-generator\n--description--\nIn this lab you will practice the basics of Python by building a small app that creates a number pattern Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should define a function named number_pattern that takes a single parameter n (representing a positive integer) number_pattern should use a for loop number_pattern(n) should return a string with all the integers starting from 1 up to n (included) separated by a space For example, number_pattern(4) should return the string 1 2 3 4 If the argument passed to the function is not an integer value, the function should return Argument must be an integer value If the argument passed to the function is less than 1, the function should return Argument must be an integer greater than 0 --hints--\nYou should have a number_patter function js\n({\ntest: () => runPython(`\nassert _Node(_code) has_function('number_pattern')\n`)\n})\nThe number_pattern function should have one parameter named n js\n({\ntest: () => runPython(`\nassert _Node(_code) find_function('number_pattern') has_args('n')\n`)\n})\nnumber_pattern(4) should return 1 2 3 4 js\n({\ntest: () => runPython(`\nassert number_pattern(4) == '1 2 3 4'\n`)\n})\nnumber_pattern(12) should return 1 2 3 4 5 6 7 8 9 10 11 12 js\n({\ntest: () => runPython(`\nassert number_pattern(12) == '1 2 3 4 5 6 7 8 9 10 11 12'\n`)\n})\nnumber_pattern should return a space separated list of numbers for any positive integer ``js\n({\ntest: () => runPython(\nfrom random import randint\nn = randint(1,65)\nls = ' ' join(map(lambda n: str(n), list(range(1, n+1))))\nassert number_pattern(n) == ls\nn2 = randint(34,122)\nls2 = ' '",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3264,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-number-pattern-generator\\6842a6cd9836f0114a5b7a8a.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0be384a79cd190592a95d8d39b6e6ced",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-number-pattern-generator\\6842a6cd9836f0114a5b7a8a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "6 7 8 9 10 11 12 js ({ test: () => runPython(` assert number_pattern(12) == '1 2 3 4 5 6 7 8 9 10 11 12' `) }) number_pattern should return a space separated list of numbers for any positive integer ``js ({ test: () => runPython( from random import randint n = randint(1,65) ls = ' ' join(map(lambda n: str(n), list(range(1, n+1)))) assert number_pattern(n) == ls n2 = randint(34,122) ls2 = ' 'join(map(lambda n: str(n), list(range(1, n2+1))))\nassert number_pattern(n2) == ls2\n`)\n})\n```\nnumber_pattern should return Argument must be an integer value when passed a value that is not an integer js\n({\ntest: () => runPython(`\nstring = 'Argument must be an integer value '\nassert number_pattern('a') == string\nassert number_pattern(3 5) == string\nassert number_pattern(lambda n: n) == string\n`)\n})\nnumber_pattern should return Argument must be an integer greater than 0 when passed a non-positive integer js\n({\ntest: () => runPython(`\nfrom random import randint\nstring = 'Argument must be an integer greater than 0 '\nassert number_pattern(0) == string\nassert number_pattern(-1185) == string\nassert number_pattern(-45) == string\nassert number_pattern(randint(-9999999, 0)) == string\n`)\n})\n--seed--\n--seed-contents--\n```py\n```\n--solutions--\n```py\ndef number_pattern(n):\nresult = \"1\"\nif isinstance(n, int):\nif n > 0:\nfor i in range(2, n + 1):\nresult += f\" {i}\"\nreturn result\nreturn \"Argument must be an integer greater than 0 \"\nreturn \"Argument must be an integer value \"\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3264,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-number-pattern-generator\\6842a6cd9836f0114a5b7a8a.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "bc7f6faf0628c3383511dcbd529caac9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-newspaper-article\\66ba762af611169359d9d369.md",
    "source_type": "git_repo",
    "title": "Newspaper Article",
    "content": "id: 66ba762af611169359d9d369\ntitle: Build a Newspaper Article\nchallengeType: 25\ndashedName: build-a-newspaper-article\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should set the root font-size of your HTML document to 24px You should have an element with a class of newspaper that contains all your other elements Your newspaper element should have a font-size of 16px and a font of Open Sans with a fallback font of sans-serif Within your newspaper element, you should have at least seven more elements: one for the newspaper name that has a class of name, one for the date of the article with a class of date, one for the headline with a class of headline, one for the sub-headline with a class of sub-headline, one for the author with a class of author, and two paragraphs each with a class of text All of these elements should be filled with your article information Your name element should have a font-size that is twice the root element's font-size and should use the Times New Roman font, with a fallback font of serif Your name and author elements should use CSS to make all their characters uppercase Your headline element should have a font-size that is twice its parent element's font-size and should be bold Your sub-headline element should have a font-weight of 100, a font-size that is 1 5 times its parent element's font-size, and should be italicized Your author should use CSS to make it bold Your text elements should have a text-indent of 20px Your text elements should have a line-height that is twice their parent element's font-size The first letter of your text elements should be bold and twice the size of their parent element's font-size Use the ::first-letter selector for this --hints--\nYou should have an html selector that sets its font-size to 24px js\nassert equal(new __helpers CSSHelp(document) getStyle('html') fontSize, '24px');\nYou should have an element with a class of newspaper js\nassert exists(document querySelector(' newspaper'));\nYou should have a newspaper selector that sets its elements' font-size to 16px js\nassert equal(new __helpers CSSHelp(document) getStyle(' newspaper') fontSize, '16px');\nYou should have a",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10650,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-newspaper-article\\66ba762af611169359d9d369.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "99796b2d04eac7ba6a41679081336b06",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-newspaper-article\\66ba762af611169359d9d369.md",
    "source_type": "git_repo",
    "title": "Newspaper Article",
    "content": "twice the size of their parent element's font-size Use the ::first-letter selector for this --hints-- You should have an html selector that sets its font-size to 24px js assert equal(new __helpers CSSHelp(document) getStyle('html') fontSize, '24px'); You should have an element with a class of newspaper js assert exists(document querySelector(' newspaper')); You should have a newspaper selector that sets its elements' font-size to 16px js assert equal(new __helpers CSSHelp(document) getStyle(' newspaper') fontSize, '16px'); You should have anewspaper selector that sets its elements' font-family to 'Open Sans', sans-serif js\nassert oneOf(new __helpers CSSHelp(document) getStyle(' newspaper') fontFamily, ['\"Open Sans\", sans-serif', 'Open Sans, sans-serif']);\nYou should have an element with a class of name within your newspaper element js\nassert exists(document querySelector(' newspaper > name'));\nYour name element should have the name of your newspaper js\nassert isAtLeast(document querySelector(' newspaper > name') innerText length, 1);\nYou should have an element with a class of date within your newspaper element js\nassert exists(document querySelector(' newspaper > date'));\nYour date element should have the date js\nassert isAtLeast(document querySelector(' newspaper > date') innerText length, 1);\nYou should have an element with a class of headline within your newspaper element js\nassert exists(document querySelector(' newspaper > headline'));\nYour headline element should have your article headline js\nassert isAtLeast(document querySelector(' newspaper > headline') innerText length, 1);\nYou should have an element with a class of sub-headline within your newspaper element js\nassert exists(document querySelector(' newspaper > sub-headline'));\nYour sub-headline element should have your article sub-headline js\nassert isAtLeast(document querySelector(' newspaper > sub-headline') innerText length, 1);\nYou should have an element with a class of author within your newspaper element js\nassert isAtLeast(document querySelectorAll(' newspaper > author') length, 1);\nYour author element should have your article author js\nassert isAtLeast(document querySelector(' newspaper > author') innerText length, 1);\nYou should have at least two paragraph elements, each with a class of text, within your",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10650,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-newspaper-article\\66ba762af611169359d9d369.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "5072415c740602f0cca982e1c611c80d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-newspaper-article\\66ba762af611169359d9d369.md",
    "source_type": "git_repo",
    "title": "Newspaper Article",
    "content": "sub-headline')); Your sub-headline element should have your article sub-headline js assert isAtLeast(document querySelector(' newspaper > sub-headline') innerText length, 1); You should have an element with a class of author within your newspaper element js assert isAtLeast(document querySelectorAll(' newspaper > author') length, 1); Your author element should have your article author js assert isAtLeast(document querySelector(' newspaper > author') innerText length, 1); You should have at least two paragraph elements, each with a class of text, within yournewspaper element js\nassert isAtLeast(document querySelectorAll(' newspaper > text') length, 2);\nYour text elements should have your article text js\nconst textEls = document querySelectorAll(' newspaper > text');\nassert isAtLeast(textEls length, 1);\ntextEls forEach(el => assert isAtLeast(el innerText length, 1))\nYou should have a name selector that sets its elements' font-size to 2rem js\nassert equal(new __helpers CSSHelp(document) getStyle(' name') fontSize, '2rem');\nYou should have a name selector that sets its elements' font-family to 'Times New Roman', serif js\nassert oneOf(new __helpers CSSHelp(document) getStyle(' name') fontFamily, ['\"Times New Roman\", serif', 'Times New Roman, serif']);\nThe name element should have the text-transform property set to uppercase js\nconst condition1 = new __helpers CSSHelp(document) getStyle(' name') textTransform === 'uppercase';\nconst condition2 = new __helpers CSSHelp(document) getStyle(' author, name') textTransform === 'uppercase';\nconst condition3 = new __helpers CSSHelp(document) getStyle(' name, author') textTransform === 'uppercase';\nassert isTrue(condition1 || condition2 || condition3);\nThe author element should have the text-transform property set to uppercase js\nconst condition1 = new __helpers CSSHelp(document) getStyle(' author') textTransform === 'uppercase';\nconst condition2 = new __helpers CSSHelp(document) getStyle(' author, name') textTransform === 'uppercase';\nconst condition3 = new __helpers CSSHelp(document) getStyle(' name, author') textTransform === 'uppercase';\nassert isTrue(condition1 || condition2 || condition3);\nYou should have a headline selector that sets its elements' font-size to 2em js\nassert equal(new __helpers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10650,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-newspaper-article\\66ba762af611169359d9d369.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "81de886bcad49f1175e49cb7d902a933",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-newspaper-article\\66ba762af611169359d9d369.md",
    "source_type": "git_repo",
    "title": "Newspaper Article",
    "content": "assert isTrue(condition1 || condition2 || condition3); The author element should have the text-transform property set to uppercase js const condition1 = new __helpers CSSHelp(document) getStyle(' author') textTransform === 'uppercase'; const condition2 = new __helpers CSSHelp(document) getStyle(' author, name') textTransform === 'uppercase'; const condition3 = new __helpers CSSHelp(document) getStyle(' name, author') textTransform === 'uppercase'; assert isTrue(condition1 || condition2 || condition3); You should have a headline selector that sets its elements' font-size to 2em js assert equal(new __helpersCSSHelp(document) getStyle(' headline') fontSize, '2em');\nYou should have a headline selector that sets its elements' font-weight to bold js\nassert oneOf(new __helpers CSSHelp(document) getStyle(' headline') fontWeight, ['bold', '700']);\nYou should have a sub-headline selector that sets its elements' font-weight to 100 js\nassert equal(new __helpers CSSHelp(document) getStyle(' sub-headline') fontWeight, '100');\nYou should have a sub-headline selector that sets its elements' font-size to 1 5em js\nassert equal(new __helpers CSSHelp(document) getStyle(' sub-headline') fontSize, '1 5em');\nYou should have a sub-headline selector that sets its elements' font-style to italic js\nassert equal(new __helpers CSSHelp(document) getStyle(' sub-headline') fontStyle, 'italic');\nYou should have an author selector that sets its elements' font-weight to bold js\nassert oneOf(new __helpers CSSHelp(document) getStyle(' author') fontWeight, ['bold', '700']);\nYou should have a text selector that sets its elements' text-indent to 20px js\nassert equal(new __helpers CSSHelp(document) getStyle(' text') textIndent, '20px');\nYou should have a text selector that sets its elements' line-height to 2em js\nassert equal(new __helpers CSSHelp(document) getStyle(' text') lineHeight, '2em');\nYou should have a text::first-letter selector that sets its elements' font-weight to bold js\nassert oneOf(new __helpers CSSHelp(document) getStyle(' text::first-letter') fontWeight, ['bold', '700']);\nYou should have an text::first-letter selector that sets its elements' font-size to 2em js\nassert equal(new __helpers CSSHelp(document)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10650,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-newspaper-article\\66ba762af611169359d9d369.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "efa0c3f9c20cb0d37b878a6523d50575",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-newspaper-article\\66ba762af611169359d9d369.md",
    "source_type": "git_repo",
    "title": "Newspaper Article",
    "content": "elements' text-indent to 20px js assert equal(new __helpers CSSHelp(document) getStyle(' text') textIndent, '20px'); You should have a text selector that sets its elements' line-height to 2em js assert equal(new __helpers CSSHelp(document) getStyle(' text') lineHeight, '2em'); You should have a text::first-letter selector that sets its elements' font-weight to bold js assert oneOf(new __helpers CSSHelp(document) getStyle(' text::first-letter') fontWeight, ['bold', '700']); You should have an text::first-letter selector that sets its elements' font-size to 2em js assert equal(new __helpers CSSHelp(document)getStyle(' text::first-letter') fontSize, '2em');\n--seed--\n--seed-contents--\n```html\nNewspaper Article\n```\n```css\n```\n--solutions--\n```html\nDaily Chuckles\nDaily Chuckles\nJuly 5, 2024\nBreaking: Grandma Edna Saves Earth\nAlien Invasion Foiled by Tech-Savvy Grandma's Wi-Fi Password\nBy Jane Doe\nIn an extraordinary twist of fate, Grandma Edna found herself at the forefront of a potential crisis\nwhen her clever Wi-Fi security measures unexpectedly thwarted an alien invasion As alien spacecraft descended\nupon the town, panic spread until Grandma Edna calmly intervened, resetting her router with a cryptic passphrase\nknown only to her The aliens, encountering unforeseen technological barriers, struggled to breach Grandma Edna's\nfortified network Frustrated and bewildered, they eventually retreated to reassess their invasion strategy,\nleaving residents both relieved and amazed at Grandma Edna's resourcefulness ```\n```css\nhtml {\nfont-size: 24px;\nbackground-color: MintCream;\npadding-top: 100px;\n} newspaper {\nfont-family: 'Open Sans', sans-serif;\nmax-width: 800px;\nmargin: 20px auto;\npadding: 20px;\nbackground-color: white;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0 1);\nfont-size: 16px;\n} name {\nfont-family: 'Times New Roman', serif;\nfont-size: 2rem;\ntext-transform: uppercase;\ntext-align: center;\nmargin-bottom: 10px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10650,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-newspaper-article\\66ba762af611169359d9d369.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "41d46e0491bb3234f291d684f4ce424a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-newspaper-article\\66ba762af611169359d9d369.md",
    "source_type": "git_repo",
    "title": "Newspaper Article",
    "content": "network Frustrated and bewildered, they eventually retreated to reassess their invasion strategy, leaving residents both relieved and amazed at Grandma Edna's resourcefulness ``` ```css html { font-size: 24px; background-color: MintCream; padding-top: 100px; } newspaper { font-family: 'Open Sans', sans-serif; max-width: 800px; margin: 20px auto; padding: 20px; background-color: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0 1); font-size: 16px; } name { font-family: 'Times New Roman', serif; font-size: 2rem; text-transform: uppercase; text-align: center; margin-bottom: 10px; }date {\nfont-size: 1em;\ntext-align: center;\nmargin-bottom: 20px;\n} headline {\nfont-size: 2em;\nfont-weight: bold;\nline-height: 1 2;\nmargin-bottom: 10px;\n} sub-headline {\nfont-size: 1 5em;\nfont-style: italic;\nfont-weight: 100;\nline-height: 1 4;\nmargin-bottom: 15px;\n} author {\nfont-size: 1em;\ntext-transform: uppercase;\nfont-weight: bold;\nmargin-bottom: 20px;\n} text {\ntext-indent: 20px;\nfont-size: 1em;\nline-height: 2em;\nmargin-bottom: 15px;\n} text::first-letter {\nfont-size: 2em;\nfont-weight: bold;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10650,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-newspaper-article\\66ba762af611169359d9d369.md",
      "source_type": "git_repo"
    },
    "token_count": 334,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "bf4a750032095ba357d41de000f9c643",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
    "source_type": "git_repo",
    "title": "Music Shopping Cart Page",
    "content": "id: 685dbd19200ad656d48b77ff\ntitle: Build a Music Shopping Cart Page\nchallengeType: 25\ndashedName: lab-music-shopping-cart-page\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have an element with an id called shopping-cart-container Your #shopping-cart-container element should use the correct utility class for setting the element to a Flexbox layout Your #shopping-cart-container element should set the direction of flex items to column for smaller devices and row for larger devices Remember that Tailwind CSS utilizes the mobile first approach and you will use the lg: breakpoint prefix to target larger devices Inside your #shopping-cart-container element, you should have an element with an id called products-container Your #products-container element should have at least two child elements each with a class called card Each card element should have the following elements nested inside:\nAn h2 element with text representing the product name, and a utility class that sets the font size using only predefined size classes such as text-sm, text-md, text-lg, text-xl, text-2xl, etc An element with a class called quantity and text for the number of cart items for that product An element with a class called price and text for the price A button with a class called remove-button and text Remove Your button should have utility classes for a predefined  red background color of your choosing and different predefined red background color for the hover state Examples of predefined red background colors include bg-red-500, bg-red-600, etc Examples of predefined hover red background colors include hover:bg-red-500, hover:bg-red-600, etc Inside your #shopping-cart-container element, you should have an element with an id called order-summary-container Your #order-summary-container element should have the following styles:\nA utility class of your choosing for predefined rounded corners Examples include rounded, rounded-lg, rounded-full, etc A utility class of your choosing for setting the border width on all sides Your #order-summary-container element should have the following elements nested inside:\nAn h2 element with the text Order Summary and a utility class of your choosing that sets the font size An element with the text Total: and id set to total This element should also use utility classes to set the font weight to a predefined Tailwind CSS font weight and font size of your choosing for the element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23088,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "7907a6f5580d4207678dbcc6a8e701a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
    "source_type": "git_repo",
    "title": "Music Shopping Cart Page",
    "content": "setting the border width on all sides Your #order-summary-container element should have the following elements nested inside: An h2 element with the text Order Summary and a utility class of your choosing that sets the font size An element with the text Total: and id set to total This element should also use utility classes to set the font weight to a predefined Tailwind CSS font weight and font size of your choosing for the elementAn element with an id set to total-amount to display the total for all items in the cart A link with the text Checkout and the correct utility class for centering the text The href value should be set to # Your link should also have a utility class for setting the background color to a predefined Tailwind CSS blue color of your choosing and a different blue background color for the hover state --hints--\nYou should have an element with an id set to shopping-cart-container js\nassert exists(document getElementById(\"shopping-cart-container\"));\nYour #shopping-cart-container element should use the flex utility class to set the element to a Flexbox layout js\nconst shoppingCartContainer = document getElementById(\"shopping-cart-container\");\nassert isTrue(shoppingCartContainer classList contains(\"flex\"));\nYour #shopping-cart-container element should use the correct utility class to set the direction of flex items to column js\nconst shoppingCartContainer = document getElementById(\"shopping-cart-container\");\nassert isTrue(shoppingCartContainer classList contains(\"flex-col\"));\nYour #shopping-cart-container element should use the lg: breakpoint prefix followed by the correct utility class to set the direction of flex items to row for larger devices js\nconst shoppingCartContainer = document getElementById(\"shopping-cart-container\");\nassert isTrue(shoppingCartContainer classList contains(\"lg:flex-row\"));\nYou should have an element with an id set to products-container inside your #shopping-cart-container element js\nconst shoppingCartContainer = document getElementById(\"shopping-cart-container\");\nassert exists(shoppingCartContainer);\nconst productsContainer = document getElementById(\"products-container\");\nassert exists(productsContainer);\nassert isTrue(shoppingCartContainer contains(productsContainer));\nYour #products-container element should have at least two child elements each with a class called card js\nconst productsContainer = document getElementById(\"products-container\");\nconst cards = productsContainer querySelectorAll(\"#products-container card\");\nassert isAtLeast(cards length, 2);\nEach card element should have an h2 element with text representing the product name ```js\nconst productsContainer = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23088,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "e53e2c4717b06639284fa0b53327550a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
    "source_type": "git_repo",
    "title": "Music Shopping Cart Page",
    "content": "set to products-container inside your #shopping-cart-container element js const shoppingCartContainer = document getElementById(\"shopping-cart-container\"); assert exists(shoppingCartContainer); const productsContainer = document getElementById(\"products-container\"); assert exists(productsContainer); assert isTrue(shoppingCartContainer contains(productsContainer)); Your #products-container element should have at least two child elements each with a class called card js const productsContainer = document getElementById(\"products-container\"); const cards = productsContainer querySelectorAll(\"#products-container card\"); assert isAtLeast(cards length, 2); Each card element should have an h2 element with text representing the product name ```js const productsContainer = documentgetElementById(\"products-container\");\nconst cards = productsContainer querySelectorAll(\"#products-container card\");\ncards forEach((card) => {\nconst productName = card querySelector(\"h2\");\nassert exists(productName);\nassert isNotEmpty(productName textContent);\n});\n```\nEach h2 element inside of the card element should use a utility class that sets the font size using only predefined size classes such as text-sm, text-base, text-lg, text-xl, text-2xl, etc ```js\nconst productsContainer = document getElementById(\"products-container\");\nconst cards = productsContainer querySelectorAll(\"#products-container card\");\nconst predefinedSizes = [\n\"text-xs\",\n\"text-sm\",\n\"text-base\",\n\"text-lg\",\n\"text-xl\",\n\"text-2xl\",\n\"text-3xl\",\n\"text-4xl\",\n\"text-5xl\",\n\"text-6xl\",\n\"text-7xl\",\n\"text-8xl\",\n\"text-9xl\"\n];\ncards forEach((card) => {\nconst productName = card querySelector(\"h2\");\nassert exists(productName);\nconst hasPredefinedSize = predefinedSizes some(size => productName classList contains(size));\nassert isTrue(hasPredefinedSize);\n});\n```\nEach card element should have an element with a class called quantity ```js\nconst productsContainer = document getElementById(\"products-container\");\nconst cards = productsContainer querySelectorAll(\"#products-container card\");\ncards forEach((card) => {\nconst quantity = card querySelector(\" quantity\");\nassert exists(quantity);\n});\n```\nEach quantity element should have text representing the number of cart items for that product ```js\nconst productsContainer = document getElementById(\"products-container\");\nconst cards = productsContainer querySelectorAll(\"#products-container card\");\ncards forEach((card) => {\nconst quantity = card querySelector(\" quantity\");\nassert exists(quantity);\nassert isNotEmpty(quantity textContent trim());\n});\n```\nEach",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23088,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "85b1135559bb3db78060ba37481d7cd0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
    "source_type": "git_repo",
    "title": "Music Shopping Cart Page",
    "content": "a class called quantity ```js const productsContainer = document getElementById(\"products-container\"); const cards = productsContainer querySelectorAll(\"#products-container card\"); cards forEach((card) => { const quantity = card querySelector(\" quantity\"); assert exists(quantity); }); ``` Each quantity element should have text representing the number of cart items for that product ```js const productsContainer = document getElementById(\"products-container\"); const cards = productsContainer querySelectorAll(\"#products-container card\"); cards forEach((card) => { const quantity = card querySelector(\" quantity\"); assert exists(quantity); assert isNotEmpty(quantity textContent trim()); }); ``` Eachcard element should have an element with a class called price ```js\nconst productsContainer = document getElementById(\"products-container\");\nconst cards = productsContainer querySelectorAll(\"#products-container card\");\ncards forEach((card) => {\nconst price = card querySelector(\" price\");\nassert exists(price);\n});\n```\nEach price element should have text representing the price ```js\nconst productsContainer = document getElementById(\"products-container\");\nconst cards = productsContainer querySelectorAll(\"#products-container card\");\ncards forEach((card) => {\nconst price = card querySelector(\" price\");\nassert exists(price);\nassert isNotEmpty(price textContent trim());\n});\n```\nEach card element should have a button element with a class called remove-button and text Remove ```js\nconst productsContainer = document getElementById(\"products-container\");\nconst cards = productsContainer querySelectorAll(\"#products-container card\");\ncards forEach((card) => {\nconst removeButton = card querySelector(\"button remove-button\");\nassert exists(removeButton);\nassert equal(removeButton textContent trim(), \"Remove\");\n});\n```\nEach button element should have a utility class for a red background color of your choosing ```js\nconst productsContainer = document getElementById(\"products-container\");\nconst cards = productsContainer querySelectorAll(\"#products-container card\");\nconst predefinedRedColors = [\n\"bg-red-50\",\n\"bg-red-100\",\n\"bg-red-200\",\n\"bg-red-300\",\n\"bg-red-400\",\n\"bg-red-500\",\n\"bg-red-600\",\n\"bg-red-700\",\n\"bg-red-800\",\n\"bg-red-900\",\n\"bg-red-950\"\n];\ncards forEach((card) => {\nconst removeButton = card querySelector(\"button remove-button\");\nassert exists(removeButton);\nconst hasRedBackground = predefinedRedColors some(color => removeButton classList contains(color));\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23088,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "bf981383a088c3a4500217c4edd398f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
    "source_type": "git_repo",
    "title": "Music Shopping Cart Page",
    "content": "remove-button\"); assert exists(removeButton); assert equal(removeButton textContent trim(), \"Remove\"); }); ``` Each button element should have a utility class for a red background color of your choosing ```js const productsContainer = document getElementById(\"products-container\"); const cards = productsContainer querySelectorAll(\"#products-container card\"); const predefinedRedColors = [ \"bg-red-50\", \"bg-red-100\", \"bg-red-200\", \"bg-red-300\", \"bg-red-400\", \"bg-red-500\", \"bg-red-600\", \"bg-red-700\", \"bg-red-800\", \"bg-red-900\", \"bg-red-950\" ]; cards forEach((card) => { const removeButton = card querySelector(\"button remove-button\"); assert exists(removeButton); const hasRedBackground = predefinedRedColors some(color => removeButton classList contains(color)); assertisTrue(hasRedBackground);\n});\n```\nEach button element should have different red background color for the hover state ```js\nconst productsContainer = document getElementById(\"products-container\");\nconst cards = productsContainer querySelectorAll(\"#products-container card\");\nconst predefinedRedHoverColors = [\n\"hover:bg-red-50\",\n\"hover:bg-red-100\",\n\"hover:bg-red-200\",\n\"hover:bg-red-300\",\n\"hover:bg-red-400\",\n\"hover:bg-red-500\",\n\"hover:bg-red-600\",\n\"hover:bg-red-700\",\n\"hover:bg-red-800\",\n\"hover:bg-red-900\",\n\"hover:bg-red-950\"\n];\ncards forEach((card) => {\nconst removeButton = card querySelector(\"button remove-button\");\nassert exists(removeButton);\nconst classList = removeButton classList;\nconst hoverBgClass = [ classList] find(cls => cls startsWith(\"hover:bg-red-\"));\nconst bgClass = [ classList] find(cls => cls startsWith(\"bg-red-\") && cls startsWith(\"hover:\"));\nassert notEqual(bgClass, hoverBgClass replace(\"hover:\", \"\"));\n});\n```\nYou should have an element with an id called order-summary-container inside your #shopping-cart-container element js\nconst orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\");\nassert exists(orderSummaryContainer);\nYour #order-summary-container element should have a utility class of your choosing for setting the rounded corners ```js\nconst orderSummaryContainer = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23088,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "d478451e99993e85bef08c12ec6c1cca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
    "source_type": "git_repo",
    "title": "Music Shopping Cart Page",
    "content": "classList = removeButton classList; const hoverBgClass = [ classList] find(cls => cls startsWith(\"hover:bg-red-\")); const bgClass = [ classList] find(cls => cls startsWith(\"bg-red-\") && cls startsWith(\"hover:\")); assert notEqual(bgClass, hoverBgClass replace(\"hover:\", \"\")); }); ``` You should have an element with an id called order-summary-container inside your #shopping-cart-container element js const orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\"); assert exists(orderSummaryContainer); Your #order-summary-container element should have a utility class of your choosing for setting the rounded corners ```js const orderSummaryContainer = documentquerySelector(\"#shopping-cart-container #order-summary-container\");\nconst predefinedRoundedCorners = [\n\"rounded-none\",\n\"rounded-sm\",\n\"rounded\",\n\"rounded-md\",\n\"rounded-lg\",\n\"rounded-xl\",\n\"rounded-2xl\",\n\"rounded-3xl\",\n\"rounded-full\"\n];\nconst hasRoundedCorners = predefinedRoundedCorners some(corner => orderSummaryContainer classList contains(corner));\nassert isTrue(hasRoundedCorners);\n```\nYour #order-summary-container element should have a utility class of your choosing for setting the border width on all sides ```js\nconst orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\");\n// border classes can vary in width, so this check is for the presence of any border class\nconst hasBorder = [ orderSummaryContainer classList] some(className => className startsWith(\"border-\") || className === \"border\");\nassert isTrue(hasBorder);\n```\nYour #order-summary-container element should have an h2 element with the text Order Summary js\nconst orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\");\nconst orderSummaryTitle = orderSummaryContainer querySelector(\"h2\");\nassert exists(orderSummaryTitle);\nassert equal(orderSummaryTitle textContent trim(), \"Order Summary\");\nYour h2 inside of the #order-summary-container element should use a utility class of your choosing that sets the font size ```js\nconst orderSummaryContainer = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23088,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "32d7addf2366c1dd242abe340f7ba74b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
    "source_type": "git_repo",
    "title": "Music Shopping Cart Page",
    "content": "class const hasBorder = [ orderSummaryContainer classList] some(className => className startsWith(\"border-\") || className === \"border\"); assert isTrue(hasBorder); ``` Your #order-summary-container element should have an h2 element with the text Order Summary js const orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\"); const orderSummaryTitle = orderSummaryContainer querySelector(\"h2\"); assert exists(orderSummaryTitle); assert equal(orderSummaryTitle textContent trim(), \"Order Summary\"); Your h2 inside of the #order-summary-container element should use a utility class of your choosing that sets the font size ```js const orderSummaryContainer = documentquerySelector(\"#shopping-cart-container #order-summary-container\");\nconst predefinedSizes = [\n\"text-xs\",\n\"text-sm\",\n\"text-base\",\n\"text-lg\",\n\"text-xl\",\n\"text-2xl\",\n\"text-3xl\",\n\"text-4xl\",\n\"text-5xl\",\n\"text-6xl\",\n\"text-7xl\",\n\"text-8xl\",\n\"text-9xl\"\n];\nconst orderSummaryTitle = orderSummaryContainer querySelector(\"h2\");\nassert exists(orderSummaryTitle);\nconst hasPredefinedSize = predefinedSizes some(size => orderSummaryTitle classList contains(size));\nassert isTrue(hasPredefinedSize);\n```\nYour #order-summary-container element should have an element with the text Total: and id set to total js\nconst orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\");\nconst totalElement = orderSummaryContainer querySelector(\"#total\");\nassert exists(totalElement);\nassert equal(totalElement textContent trim(), \"Total:\");\nYour #total element should use a utility class to set the font weight ```js\nconst orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\");\nconst totalElement = orderSummaryContainer querySelector(\"#total\");\nconst predefinedFontWeights = [\n\"font-thin\",\n\"font-extralight\",\n\"font-light\",\n\"font-normal\",\n\"font-medium\",\n\"font-semibold\",\n\"font-bold\",\n\"font-extrabold\",\n\"font-black\"\n];\nconst hasFontWeight = predefinedFontWeights some(weight => totalElement classList contains(weight));\nassert isTrue(hasFontWeight);\n```\nYour #total element should use a utility class to set the font size ```js\nconst orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\");\nconst totalElement = orderSummaryContainer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23088,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "87532fc67408f6bf28057cbc9b7c7185",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
    "source_type": "git_repo",
    "title": "Music Shopping Cart Page",
    "content": "\"Total:\"); Your #total element should use a utility class to set the font weight ```js const orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\"); const totalElement = orderSummaryContainer querySelector(\"#total\"); const predefinedFontWeights = [ \"font-thin\", \"font-extralight\", \"font-light\", \"font-normal\", \"font-medium\", \"font-semibold\", \"font-bold\", \"font-extrabold\", \"font-black\" ]; const hasFontWeight = predefinedFontWeights some(weight => totalElement classList contains(weight)); assert isTrue(hasFontWeight); ``` Your #total element should use a utility class to set the font size ```js const orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\"); const totalElement = orderSummaryContainerquerySelector(\"#total\");\nconst predefinedSizes = [\n\"text-xs\",\n\"text-sm\",\n\"text-base\",\n\"text-lg\",\n\"text-xl\",\n\"text-2xl\",\n\"text-3xl\",\n\"text-4xl\",\n\"text-5xl\",\n\"text-6xl\",\n\"text-7xl\",\n\"text-8xl\",\n\"text-9xl\"\n];\nconst hasPredefinedSize = predefinedSizes some(size => totalElement classList contains(size));\nassert isTrue(hasPredefinedSize);\n```\nYour #order-summary-container element should have an element with the id set to total-amount to display the total for all items in the cart js\nconst orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\");\nconst totalElement = orderSummaryContainer querySelector(\"#total-amount\");\nassert exists(totalElement);\nassert isNotEmpty(totalElement textContent trim());\nYour #order-summary-container element should have a link with the text Checkout and a # for the href value js\nconst orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\");\nconst checkoutLink = orderSummaryContainer querySelector(\"a\");\nassert exists(checkoutLink);\nassert equal(checkoutLink textContent trim(), \"Checkout\");\nassert equal(checkoutLink getAttribute(\"href\"), \"#\");\nYour Checkout link should have a utility class for centering the text js\nconst orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\");\nconst checkoutLink = orderSummaryContainer querySelector(\"a\");\nconst hasTextCentering = checkoutLink classList contains(\"text-center\");\nassert isTrue(hasTextCentering);\nYour Checkout link should have a utility class for setting the background color to a predefined Tailwind CSS blue color of your choosing",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23088,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "534c9e89a42584a0f3ef1cb0d05bca25",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
    "source_type": "git_repo",
    "title": "Music Shopping Cart Page",
    "content": "orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\"); const checkoutLink = orderSummaryContainer querySelector(\"a\"); assert exists(checkoutLink); assert equal(checkoutLink textContent trim(), \"Checkout\"); assert equal(checkoutLink getAttribute(\"href\"), \"#\"); Your Checkout link should have a utility class for centering the text js const orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\"); const checkoutLink = orderSummaryContainer querySelector(\"a\"); const hasTextCentering = checkoutLink classList contains(\"text-center\"); assert isTrue(hasTextCentering); Your Checkout link should have a utility class for setting the background color to a predefined Tailwind CSS blue color of your choosing```js\nconst orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\");\nconst checkoutLink = orderSummaryContainer querySelector(\"a\");\nconst predefinedBlueColors = [\n\"bg-blue-50\",\n\"bg-blue-100\",\n\"bg-blue-200\",\n\"bg-blue-300\",\n\"bg-blue-400\",\n\"bg-blue-500\",\n\"bg-blue-600\",\n\"bg-blue-700\",\n\"bg-blue-800\",\n\"bg-blue-900\",\n\"bg-blue-950\"\n];\nconst hasBlueBackground = predefinedBlueColors some(color => checkoutLink classList contains(color));\nassert isTrue(hasBlueBackground);\n```\nYour Checkout link should have a different blue background color for the hover state ```js\nconst orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\");\nconst checkoutLink = orderSummaryContainer querySelector(\"a\");\nconst predefinedBlueHoverColors = [\n\"hover:bg-blue-50\",\n\"hover:bg-blue-100\",\n\"hover:bg-blue-200\",\n\"hover:bg-blue-300\",\n\"hover:bg-blue-400\",\n\"hover:bg-blue-500\",\n\"hover:bg-blue-600\",\n\"hover:bg-blue-700\",\n\"hover:bg-blue-800\",\n\"hover:bg-blue-900\",\n\"hover:bg-blue-950\"\n];\nconst classList = checkoutLink classList;\nconst hoverBgClass = [ classList] find(cls => cls startsWith(\"hover:bg-blue-\"));\nconst bgClass = [ classList] find(cls => cls startsWith(\"bg-blue-\") && cls startsWith(\"hover:\"));\nassert notEqual(bgClass, hoverBgClass",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23088,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "d0539b783ebdfb61139d38d1574f86cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
    "source_type": "git_repo",
    "title": "Music Shopping Cart Page",
    "content": "classList contains(color)); assert isTrue(hasBlueBackground); ``` Your Checkout link should have a different blue background color for the hover state ```js const orderSummaryContainer = document querySelector(\"#shopping-cart-container #order-summary-container\"); const checkoutLink = orderSummaryContainer querySelector(\"a\"); const predefinedBlueHoverColors = [ \"hover:bg-blue-50\", \"hover:bg-blue-100\", \"hover:bg-blue-200\", \"hover:bg-blue-300\", \"hover:bg-blue-400\", \"hover:bg-blue-500\", \"hover:bg-blue-600\", \"hover:bg-blue-700\", \"hover:bg-blue-800\", \"hover:bg-blue-900\", \"hover:bg-blue-950\" ]; const classList = checkoutLink classList; const hoverBgClass = [ classList] find(cls => cls startsWith(\"hover:bg-blue-\")); const bgClass = [ classList] find(cls => cls startsWith(\"bg-blue-\") && cls startsWith(\"hover:\")); assert notEqual(bgClass, hoverBgClassreplace(\"hover:\", \"\"));\n```\n--seed--\n--seed-contents--\n```html\nMusic Shopping Cart Page\n```\n--solutions--\n```html\nMusic Shopping Cart Page\nShopping Cart Page\nLudwig Supraphonic Snare Drum Chrome\n-\n2\n+\n$1398 00\nRemove\nShure SM58S Mic With Switch Standard\n-\n1\n+\n$119 00\nRemove\nFender American Professional II Stratocaster\n-\n1\n+\n$1700 00\nRemove\nMoog Subsequent 37 Analog Synthesizer\n-\n1\n+\n$1799 00\nRemove\nOrder Summary\nSubtotal:\n$5,016 00\nShipping:\nCalculated in checkout\nTotal:\n$5,016 00\nCheckout\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 23088,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-music-shopping-cart-page\\685dbd19200ad656d48b77ff.md",
      "source_type": "git_repo"
    },
    "token_count": 369,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "d74634bf1639e9f33f298832f17c7c93",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-page-of-playing-cards\\66be24cb4144f955b6bcc550.md",
    "source_type": "git_repo",
    "title": "Playing Cards",
    "content": "id: 66be24cb4144f955b6bcc550\ntitle: Build a Page of Playing Cards\nchallengeType: 25\ndashedName: build-a-page-of-playing-cards\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should build a webpage that displays at least three playing cards You should have a main element with an ID of playing-cards Within your #playing-cards element, you should have at least three div elements, each with a class of card Within each card element, you should have three div elements, the first with a class of left, the second with a class of middle, and the third with a class of right Your #playing-cards element should use flexbox to horizontally center its children, allow them to wrap, and put a 20px space between them Each of your card elements should use flexbox to justify its children using space-between Each of your left elements should use flexbox item properties to align itself at the start of its' parent container Each of your middle elements should use flexbox item properties to align itself in the center of its' parent container Each of your right elements should use flexbox item properties to align itself at the end of its parent container Each of your middle elements should use flexbox to display its children in a column Here are some characters you can copy and paste to use in your cards if you want: ♠, ♣, ♥, and ♦ --hints--\nYou should have a main element with an id of playing-cards js\nassert exists(document querySelector('main#playing-cards'));\nYou should have at least three div elements with a class of card within your #playing-cards element js\nassert isAtLeast(document querySelectorAll('#playing-cards > div card') length, 3);\nEach of your card elements should have a width and height js\nconst els = document querySelectorAll(' card');\nassert isAtLeast(els length, 1);\nels forEach(el => {\nassert isAbove(el clientWidth, 0);\nassert isAbove(el clientHeight, 0);\n});\nEach of your card elements should have exactly three div elements as children js\nconst els = document querySelectorAll(' card');\nassert isAtLeast(els length, 1);\nels forEach(el => {\nconst children = el children;\nassert lengthOf(children, 3);\nArray",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8755,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-page-of-playing-cards\\66be24cb4144f955b6bcc550.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "505938960bac34df196eca6a82014588",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-page-of-playing-cards\\66be24cb4144f955b6bcc550.md",
    "source_type": "git_repo",
    "title": "Playing Cards",
    "content": "div card') length, 3); Each of your card elements should have a width and height js const els = document querySelectorAll(' card'); assert isAtLeast(els length, 1); els forEach(el => { assert isAbove(el clientWidth, 0); assert isAbove(el clientHeight, 0); }); Each of your card elements should have exactly three div elements as children js const els = document querySelectorAll(' card'); assert isAtLeast(els length, 1); els forEach(el => { const children = el children; assert lengthOf(children, 3); Arrayfrom(children) forEach(child => {\nassert equal(child tagName, 'DIV');\n});\n});\nYou should have a div with a class of left within each card element js\nconst els = document querySelectorAll(' card');\nassert isAtLeast(els length, 1);\nels forEach(el => assert exists(el querySelector('div left')));\nYou should have a div with a class of middle within each card element js\nconst els = document querySelectorAll(' card');\nassert isAtLeast(els length, 1);\nels forEach(el => assert exists(el querySelector('div middle')));\nYou should have a div with a class of right within each card element js\nconst els = document querySelectorAll(' card');\nassert isAtLeast(els length, 1);\nels forEach(el => assert exists(el querySelector('div right')));\nYou should have a #playing-cards selector that sets its elements' display to flex js\nassert equal(new __helpers CSSHelp(document) getStyle('#playing-cards') display, 'flex');\nYou should have a #playing-cards selector that sets its elements' justify-content to center js\nassert equal(new __helpers CSSHelp(document) getStyle('#playing-cards') justifyContent, 'center');\nYou should have a #playing-cards selector that sets its elements' flex-wrap to wrap js\nassert equal(new __helpers CSSHelp(document) getStyle('#playing-cards') flexWrap, 'wrap');\nYou should have a #playing-cards selector that sets its elements' gap to 20px js\nassert equal(new __helpers CSSHelp(document) getStyle('#playing-cards') gap, '20px');\nYou should have a card selector that sets its elements' display to flex js\nassert equal(new __helpers CSSHelp(document) getStyle(' card') display, 'flex');\nYou should have a card selector that sets its elements' justify-content to space-between js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8755,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-page-of-playing-cards\\66be24cb4144f955b6bcc550.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "eb6ec3f7270bbfd4b84f0e39090ee438",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-page-of-playing-cards\\66be24cb4144f955b6bcc550.md",
    "source_type": "git_repo",
    "title": "Playing Cards",
    "content": "a #playing-cards selector that sets its elements' flex-wrap to wrap js assert equal(new __helpers CSSHelp(document) getStyle('#playing-cards') flexWrap, 'wrap'); You should have a #playing-cards selector that sets its elements' gap to 20px js assert equal(new __helpers CSSHelp(document) getStyle('#playing-cards') gap, '20px'); You should have a card selector that sets its elements' display to flex js assert equal(new __helpers CSSHelp(document) getStyle(' card') display, 'flex'); You should have a card selector that sets its elements' justify-content to space-between js assertequal(new __helpers CSSHelp(document) getStyle(' card') justifyContent, 'space-between');\nYou should have a left selector that sets its elements' align-self to flex-start js\nassert equal(new __helpers CSSHelp(document) getStyle(' left') alignSelf, 'flex-start');\nYou should have a middle selector that sets its elements' align-self to center js\nassert equal(new __helpers CSSHelp(document) getStyle(' middle') alignSelf, 'center');\nYou should have a right selector that sets its elements' align-self to flex-end js\nassert equal(new __helpers CSSHelp(document) getStyle(' right') alignSelf, 'flex-end');\nYou should have a middle selector that sets its elements' display to flex js\nassert equal(new __helpers CSSHelp(document) getStyle(' middle') display, 'flex');\nYou should have a flex-direction set to column in your middle class js\nassert equal(new __helpers CSSHelp(document) getStyle(' middle') flexDirection, 'column');\n--seed--\n--seed-contents--\n```html\nPlaying Cards\n```\n```css\n```\n--solutions--\n```html\nStraight\nA\n♠\n♠\n♠\nA\n2\n♣\n♣\n♣\n♣\n2\n3\n♥\n♥\n♥\n♥\n♥\n3\n4\n♣\n♣\n♣\n♣\n♣\n♣\n4\n5\n♦\n♦\n♦\n♦\n♦\n♦\n♦\n5\n```\n```css\nbody {\nbackground-color: Thistle;\nmin-height: 100vh;\n} red {\ncolor: red;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8755,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-page-of-playing-cards\\66be24cb4144f955b6bcc550.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "8ba227069998c2b94335cd8cc1bcc698",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-page-of-playing-cards\\66be24cb4144f955b6bcc550.md",
    "source_type": "git_repo",
    "title": "Playing Cards",
    "content": "set to column in your middle class js assert equal(new __helpers CSSHelp(document) getStyle(' middle') flexDirection, 'column'); --seed-- --seed-contents-- ```html Playing Cards ``` ```css ``` --solutions-- ```html Straight A ♠ ♠ ♠ A 2 ♣ ♣ ♣ ♣ 2 3 ♥ ♥ ♥ ♥ ♥ 3 4 ♣ ♣ ♣ ♣ ♣ ♣ 4 5 ♦ ♦ ♦ ♦ ♦ ♦ ♦ 5 ``` ```css body { background-color: Thistle; min-height: 100vh; } red { color: red; }flipped {\ntransform: rotate(180deg);\n}\nplaying-cards {\nmargin-top: 100px;\ndisplay: flex;\njustify-content: center;\ngap: 20px;\nflex-wrap: wrap;\n} card {\nbackground-color: white;\nborder: 1px solid black;\nborder-radius: 10px;\nbox-shadow: 2px 2px 2px gray;\nmin-width: 250px;\nmax-width: 250px;\nheight: 350px;\nfont-size: 30px;\nfont-weight: bold;\npadding: 5px;\nbox-sizing: border-box;\ndisplay: flex;\njustify-content: space-between;\ntext-align: center;\n} left {\nalign-self: flex-start;\n} middle {\nalign-self: center;\ndisplay: flex;\nfont-size: 80px;\nflex-direction: column;\n} right {\nalign-self: flex-end;\n} middle-section {\ndisplay: flex;\njustify-content: center;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8755,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-page-of-playing-cards\\66be24cb4144f955b6bcc550.md",
      "source_type": "git_repo"
    },
    "token_count": 334,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "a5d4bb0f460f0bc4a657cb33d5ddcd64",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "id: 66f55eac933ff64ce654ca74\ntitle: Build a Markdown to HTML Converter\nchallengeType: 25\ndashedName: build-a-markdown-to-html-converter\ndemoType: onClick\n--description--\nMarkdown is a markup language used to add formatting elements to plain-text documents For this lab, all the HTML and CSS has been provided to you You will use JavaScript to complete the Markdown to HTML Converter app so that it can handle the conversion of basic Markdown constructs into HTML elements Note: The final result won't be a comprehensive Markdown to HTML converter, but you can add extra functionalities to it if you would like Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a function named convertMarkdown that takes no parameters The convertMarkdown function should use regular expressions to convert the markdown input from #markdown-input into HTML and should return a string containing the HTML code The convertMarkdown function should convert headings of level one, two, and three into the corresponding h1, h2, and h3 elements A heading in markdown is indicated by as many # character as its level followed by a space and the heading text # characters should either be placed at the beginning of the line or be preceded by space characters The convertMarkdown function should convert bold text into strong elements Bold text in markdown is indicated either by a pair of double asterisks or a pair of double underscores enclosing the text The convertMarkdown function should convert italic text into em elements Italic text in markdown is indicated either by a pair of asterisks or a pair of underscores enclosing the text The convertMarkdown function should convert images into img elements An image in markdown is indicated by [alt-text](image-source), where alt-text is the value of the alt attribute and image-source is the value of the src attribute The convertMarkdown function should convert links into anchor elements A link in markdown is indicated by [link text](URL), where link text is the text to enclosed within the anchor tags and URL is the value of href attribute The convertMarkdown function should convert quotes into blockquote elements A quote in markdown is indicated by a > followed by a space and the quote text The > character should be either placed at the beginning of the line or be preceded by space characters When you input text inside #markdown-input, the raw HTML code returned by convertMarkdown should be displayed inside #html-output",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 26
  },
  {
    "id": "07fa063ed2b4b96c05b7985306e244ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "enclosed within the anchor tags and URL is the value of href attribute The convertMarkdown function should convert quotes into blockquote elements A quote in markdown is indicated by a > followed by a space and the quote text The > character should be either placed at the beginning of the line or be preceded by space characters When you input text inside #markdown-input, the raw HTML code returned by convertMarkdown should be displayed inside #html-outputWhen you input text inside #markdown-input, the HTML code returned by convertMarkdown should be rendered inside #preview Here's a table containing all the markdown that convertMarkdown should be able to handle and the expected HTML after conversion:\nMarkdown\nHTML\n# heading 1\n&lth1&gtheading 1</h1>\n## heading 2\n&lth2&gtheading 2</h2>\n### heading 3\n&lth3&gtheading 3</h3>\n**bold text** or __bold text__\n&ltstrong&gtbold text</strong>\n*italic text* or _italic text_\n&ltem&gtitalic text</em> [alt-text](image-source)\n&ltimg alt=\"alt-text\" src=\"image-source\">\n[link text](URL)\n&lta href=\"URL\"&gtlink text</a>\n> quote\n&ltblockquote&gtquote</blockquote>\nNote: Be sure to link your JavaScript file in your HTML --hints--\nYou should have a function named convertMarkdown js\nassert isFunction(convertMarkdown);\nWhen the value of #markdown-input is # title 1, convertMarkdown() should return <h1>title 1</h1> js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"# title 1\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst headings = testDiv querySelectorAll(\"h1\");\nassert lengthOf(headings, 1);\nassert lengthOf(testDiv children, 1);\nassert equal(headings[0] innerText, \"title 1\");\nWhen the value of #markdown-input is # title 1, <h1>title 1</h1> should be displayed inside #html-output js\nconst input = document querySelector(\"#markdown-input\");\nconst output = document querySelector(\"#html-output\");\noutput innerText = \"\";\ninput value = \"# title 1\";\ninput dispatchEvent(new Event(\"input\"));\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = output",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 1,
    "total_chunks": 26
  },
  {
    "id": "6a00f5b75add74c093e4617d412ba0db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "1\"; const testDiv = document createElement(\"div\"); testDiv innerHTML = convertMarkdown(); const headings = testDiv querySelectorAll(\"h1\"); assert lengthOf(headings, 1); assert lengthOf(testDiv children, 1); assert equal(headings[0] innerText, \"title 1\"); When the value of #markdown-input is # title 1, <h1>title 1</h1> should be displayed inside #html-output js const input = document querySelector(\"#markdown-input\"); const output = document querySelector(\"#html-output\"); output innerText = \"\"; input value = \"# title 1\"; input dispatchEvent(new Event(\"input\")); const testDiv = document createElement(\"div\"); testDiv innerHTML = outputinnerText;\nconst headings = testDiv querySelectorAll(\"h1\");\nassert lengthOf(headings, 1);\nassert lengthOf(testDiv children, 1);\nassert equal(headings[0] innerText, \"title 1\");\nWhen the value of #markdown-input is # title 1, an h1 element with the text of title 1 should be appended as a child of #preview js\nconst input = document querySelector(\"#markdown-input\");\nconst preview = document querySelector(\"#preview\");\npreview innerHTML = \"\";\ninput value = \"# title 1\";\ninput dispatchEvent(new Event(\"input\"));\nconst headings = preview querySelectorAll(\"h1\");\nassert lengthOf(headings, 1);\nassert lengthOf(preview children, 1);\nassert equal(headings[0] innerText, \"title 1\");\nWhen the value of #markdown-input is some text # title 1, convertMarkdown() should not convert # title 1 into an h1 element js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"some text # title 1\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst testH1 = testDiv querySelector(\"h1\")\nassert notExists(testH1);\nassert equal(testDiv innerText, input value)\nWhen the value of #markdown-input is # title 1 followed by # alternate title on a new line, convertMarkdown() should return <h1>title 1</h1><h1>alternate title</h1> js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"# title 1\\n# alternate title\";\nconst testDiv = document createElement(\"div\");\ntestDiv",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 2,
    "total_chunks": 26
  },
  {
    "id": "7672480024c15a6f9641520c60f97114",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "= document querySelector(\"#markdown-input\"); input value = \"some text # title 1\"; const testDiv = document createElement(\"div\"); testDiv innerHTML = convertMarkdown(); const testH1 = testDiv querySelector(\"h1\") assert notExists(testH1); assert equal(testDiv innerText, input value) When the value of #markdown-input is # title 1 followed by # alternate title on a new line, convertMarkdown() should return <h1>title 1</h1><h1>alternate title</h1> js const input = document querySelector(\"#markdown-input\"); input value = \"# title 1\\n# alternate title\"; const testDiv = document createElement(\"div\"); testDivinnerHTML = convertMarkdown();\nconst headings = testDiv querySelectorAll(\"h1\");\nassert lengthOf(headings, 2);\nassert lengthOf(testDiv children, 2);\nassert equal(headings[0] innerText, \"title 1\");\nassert equal(headings[1] innerText, \"alternate title\");\nWhen the value of #markdown-input is ## title 2, convertMarkdown() should return <h2>title 2</h2> js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"## title 2\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst headings = testDiv querySelectorAll(\"h2\");\nassert lengthOf(headings, 1);\nassert lengthOf(testDiv children, 1);\nassert equal(headings[0] innerText, \"title 2\");\nWhen the value of #markdown-input is ## title 2, <h2>title 2</h2> should be displayed inside #html-output js\nconst input = document querySelector(\"#markdown-input\");\nconst output = document querySelector(\"#html-output\");\noutput innerText = \"\";\ninput value = \"## title 2\";\ninput dispatchEvent(new Event(\"input\"));\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = output innerText;\nconst headings = testDiv querySelectorAll(\"h2\");\nassert lengthOf(headings, 1);\nassert lengthOf(testDiv children, 1)\nassert equal(headings[0] innerText, \"title 2\");\nWhen the value of #markdown-input is ## title 2, an h2 element with the text of title 2 should be appended as a child of #preview js\nconst input = document querySelector(\"#markdown-input\");\nconst preview = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 3,
    "total_chunks": 26
  },
  {
    "id": "1cc864c04928e66a7563456c06e32fdd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "output innerText = \"\"; input value = \"## title 2\"; input dispatchEvent(new Event(\"input\")); const testDiv = document createElement(\"div\"); testDiv innerHTML = output innerText; const headings = testDiv querySelectorAll(\"h2\"); assert lengthOf(headings, 1); assert lengthOf(testDiv children, 1) assert equal(headings[0] innerText, \"title 2\"); When the value of #markdown-input is ## title 2, an h2 element with the text of title 2 should be appended as a child of #preview js const input = document querySelector(\"#markdown-input\"); const preview = documentquerySelector(\"#preview\");\npreview innerHTML = \"\";\ninput value = \"## title 2\";\ninput dispatchEvent(new Event(\"input\"));\nconst headings = preview querySelectorAll(\"h2\");\nassert lengthOf(headings, 1);\nassert lengthOf(preview children, 1)\nassert equal(headings[0] innerText, \"title 2\");\nWhen the value of #markdown-input is some text ## title 2, convertMarkdown() should not convert ## title 2 into an h2 element js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"some text ## title 2\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst testH2 = testDiv querySelector(\"h2\")\nassert notExists(testH2);\nassert equal(testDiv innerText, input value)\nWhen the value of #markdown-input is ## title 2 followed by ## title 2 alt on a new line, convertMarkdown() should return <h2>title 2</h2><h2>title 2 alt</h2> js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"## title 2\\n## title 2 alt\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst headings = testDiv querySelectorAll(\"h2\");\nassert lengthOf(headings, 2);\nassert lengthOf(testDiv children, 2);\nassert equal(headings[0] innerText, \"title 2\");\nassert equal(headings[1] innerText, \"title 2 alt\");\nWhen the value of #markdown-input is ### title 3, convertMarkdown() should return <h3>title 3</h3> js\nconst input = document querySelector(\"#markdown-input\");\ninput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 26
  },
  {
    "id": "83e83f779f54545723566cd11f841132",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "line, convertMarkdown() should return <h2>title 2</h2><h2>title 2 alt</h2> js const input = document querySelector(\"#markdown-input\"); input value = \"## title 2\\n## title 2 alt\"; const testDiv = document createElement(\"div\"); testDiv innerHTML = convertMarkdown(); const headings = testDiv querySelectorAll(\"h2\"); assert lengthOf(headings, 2); assert lengthOf(testDiv children, 2); assert equal(headings[0] innerText, \"title 2\"); assert equal(headings[1] innerText, \"title 2 alt\"); When the value of #markdown-input is ### title 3, convertMarkdown() should return <h3>title 3</h3> js const input = document querySelector(\"#markdown-input\"); inputvalue = \"### title 3\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst headings = testDiv querySelectorAll(\"h3\");\nassert lengthOf(headings, 1);\nassert lengthOf(testDiv children, 1);\nassert equal(headings[0] innerText, \"title 3\");\nWhen the value of #markdown-input is ### title 3, <h3>title 3</h3> should be displayed inside #html-output js\nconst input = document querySelector(\"#markdown-input\");\nconst output = document querySelector(\"#html-output\");\noutput innerText = \"\";\ninput value = \"### title 3\";\ninput dispatchEvent(new Event(\"input\"));\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = output innerText;\nconst headings = testDiv querySelectorAll(\"h3\");\nassert lengthOf(headings, 1);\nassert lengthOf(testDiv children, 1);\nassert equal(headings[0] innerText, \"title 3\");\nWhen the value of #markdown-input is ### title 3, an h3 element with the text of title 3 should be appended as a child of #preview js\nconst input = document querySelector(\"#markdown-input\");\nconst preview = document querySelector(\"#preview\");\npreview innerHTML = \"\";\ninput value = \"### title 3\";\ninput dispatchEvent(new Event(\"input\"));\nconst headings = preview querySelectorAll(\"h3\");\nassert lengthOf(headings, 1);\nassert lengthOf(preview children, 1);\nassert equal(headings[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 5,
    "total_chunks": 26
  },
  {
    "id": "c191f3c37d3d50f1b65f0923a4b57dc4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "assert lengthOf(headings, 1); assert lengthOf(testDiv children, 1); assert equal(headings[0] innerText, \"title 3\"); When the value of #markdown-input is ### title 3, an h3 element with the text of title 3 should be appended as a child of #preview js const input = document querySelector(\"#markdown-input\"); const preview = document querySelector(\"#preview\"); preview innerHTML = \"\"; input value = \"### title 3\"; input dispatchEvent(new Event(\"input\")); const headings = preview querySelectorAll(\"h3\"); assert lengthOf(headings, 1); assert lengthOf(preview children, 1); assert equal(headings[0]innerText, \"title 3\");\nWhen the value of #markdown-input is some text ### title 3, convertMarkdown() should not convert ### title 3 into an h3 element js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"some text ### title 3\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst testH3 = testDiv querySelector(\"h3\")\nassert notExists(testH3);\nassert equal(testDiv innerText, input value)\nWhen the value of #markdown-input is ### title 3 followed by ### third title on a new line, convertMarkdown() should return <h3>title 3</h3><h3>third title</h3> js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"### title 3\\n### third title\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst headings = testDiv querySelectorAll(\"h3\");\nassert lengthOf(headings, 2);\nassert lengthOf(testDiv children, 2);\nassert equal(headings[0] innerText, \"title 3\");\nassert equal(headings[1] innerText, \"third title\");\nWhen the value of #markdown-input is **this is bold**, convertMarkdown() should return <strong>this is bold</strong> js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"**this is bold**\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst strongs = testDiv querySelectorAll(\"strong\");\nassert lengthOf(strongs, 1);\nassert lengthOf(testDiv children, 1);\nassert equal(strongs[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 6,
    "total_chunks": 26
  },
  {
    "id": "c9920f6092194f3717737b3f43341ba7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "testDiv innerHTML = convertMarkdown(); const headings = testDiv querySelectorAll(\"h3\"); assert lengthOf(headings, 2); assert lengthOf(testDiv children, 2); assert equal(headings[0] innerText, \"title 3\"); assert equal(headings[1] innerText, \"third title\"); When the value of #markdown-input is **this is bold**, convertMarkdown() should return <strong>this is bold</strong> js const input = document querySelector(\"#markdown-input\"); input value = \"**this is bold**\"; const testDiv = document createElement(\"div\"); testDiv innerHTML = convertMarkdown(); const strongs = testDiv querySelectorAll(\"strong\"); assert lengthOf(strongs, 1); assert lengthOf(testDiv children, 1); assert equal(strongs[0]innerText, \"this is bold\");\nWhen the value of #markdown-input is **this is bold**, <strong>this is bold</strong> should be displayed inside #html-output js\nconst input = document querySelector(\"#markdown-input\");\nconst output = document querySelector(\"#html-output\");\noutput innerText = \"\";\ninput value = \"**this is bold**\";\ninput dispatchEvent(new Event(\"input\"));\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = output innerText;\nconst strongs = testDiv querySelectorAll(\"strong\");\nassert lengthOf(strongs, 1);\nassert lengthOf(testDiv children, 1)\nassert equal(strongs[0] innerText, \"this is bold\");\nWhen the value of #markdown-input is **this is bold**, a strong element with the text of this is bold should be appended as a child of #preview js\nconst input = document querySelector(\"#markdown-input\");\nconst preview = document querySelector(\"#preview\");\npreview innerHTML = \"\";\ninput value = \"**this is bold**\";\ninput dispatchEvent(new Event(\"input\"));\nconst strongs = preview querySelectorAll(\"strong\");\nassert lengthOf(strongs, 1);\nassert lengthOf(preview children, 1)\nassert equal(strongs[0] innerText, \"this is bold\");\nWhen the value of #markdown-input is **this is bold** followed by **this is also bold** on a new line, convertMarkdown() should return <strong>this is bold</strong><strong>this is also bold</strong> js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"**this is bold**\\n**this is also bold**\";\nconst testDiv = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 7,
    "total_chunks": 26
  },
  {
    "id": "11946c24bd7a07c404b6d77314b92591",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "= \"\"; input value = \"**this is bold**\"; input dispatchEvent(new Event(\"input\")); const strongs = preview querySelectorAll(\"strong\"); assert lengthOf(strongs, 1); assert lengthOf(preview children, 1) assert equal(strongs[0] innerText, \"this is bold\"); When the value of #markdown-input is **this is bold** followed by **this is also bold** on a new line, convertMarkdown() should return <strong>this is bold</strong><strong>this is also bold</strong> js const input = document querySelector(\"#markdown-input\"); input value = \"**this is bold**\\n**this is also bold**\"; const testDiv = documentcreateElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst strongs = testDiv querySelectorAll(\"strong\");\nassert lengthOf(strongs, 2);\nassert lengthOf(testDiv children, 2);\nassert equal(strongs[0] innerText, \"this is bold\");\nassert equal(strongs[1] innerText, \"this is also bold\");\nWhen the value of #markdown-input is __this is bold__, <strong>this is bold</strong> should be displayed inside #html-output js\nconst input = document querySelector(\"#markdown-input\");\nconst output = document querySelector(\"#html-output\");\noutput innerText = \"\";\ninput value = \"__this is bold__\";\ninput dispatchEvent(new Event(\"input\"));\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = output innerText;\nconst strongs = testDiv querySelectorAll(\"strong\");\nassert lengthOf(strongs, 1);\nassert lengthOf(testDiv children, 1)\nassert equal(strongs[0] innerText, \"this is bold\");\nWhen the value of #markdown-input is __this is bold__, a strong element with the text of this is bold should be appended as a child of #preview js\nconst input = document querySelector(\"#markdown-input\");\nconst preview = document querySelector(\"#preview\");\npreview innerHTML = \"\";\ninput value = \"__this is bold__\";\ninput dispatchEvent(new Event(\"input\"));\nconst strongs = preview querySelectorAll(\"strong\");\nassert lengthOf(strongs, 1);\nassert lengthOf(preview children, 1)\nassert equal(strongs[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 8,
    "total_chunks": 26
  },
  {
    "id": "e46343cb29ce23a18eaae57a01618fd0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "1); assert lengthOf(testDiv children, 1) assert equal(strongs[0] innerText, \"this is bold\"); When the value of #markdown-input is __this is bold__, a strong element with the text of this is bold should be appended as a child of #preview js const input = document querySelector(\"#markdown-input\"); const preview = document querySelector(\"#preview\"); preview innerHTML = \"\"; input value = \"__this is bold__\"; input dispatchEvent(new Event(\"input\")); const strongs = preview querySelectorAll(\"strong\"); assert lengthOf(strongs, 1); assert lengthOf(preview children, 1) assert equal(strongs[0]innerText, \"this is bold\");\nWhen the value of #markdown-input is __this is bold__ followed by __this is also bold__ on a new line, convertMarkdown() should return <strong>this is bold</strong><strong>this is also bold</strong> js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"__this is bold__\\n__this is also bold__\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst strongs = testDiv querySelectorAll(\"strong\");\nassert lengthOf(strongs, 2);\nassert lengthOf(testDiv children, 2);\nassert equal(strongs[0] innerText, \"this is bold\");\nassert equal(strongs[1] innerText, \"this is also bold\");\nWhen the value of #markdown-input is *this is italic*, convertMarkdown() should return <em>this is italic</em> js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"*this is italic*\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst italics = testDiv querySelectorAll(\"em\");\nassert lengthOf(italics, 1);\nassert lengthOf(testDiv children, 1);\nassert equal(italics[0] innerText, \"this is italic\");\nWhen the value of #markdown-input is *this is italic*, <em>this is italic</em> should be displayed inside #html-output js\nconst input = document querySelector(\"#markdown-input\");\nconst output = document querySelector(\"#html-output\");\noutput innerText = \"\";\ninput value = \"*this is italic*\";\ninput dispatchEvent(new Event(\"input\"));\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = output innerText;\nconst italics = testDiv",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 9,
    "total_chunks": 26
  },
  {
    "id": "0740d8cbcc35b0a1e688d7b6661ac5b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "innerHTML = convertMarkdown(); const italics = testDiv querySelectorAll(\"em\"); assert lengthOf(italics, 1); assert lengthOf(testDiv children, 1); assert equal(italics[0] innerText, \"this is italic\"); When the value of #markdown-input is *this is italic*, <em>this is italic</em> should be displayed inside #html-output js const input = document querySelector(\"#markdown-input\"); const output = document querySelector(\"#html-output\"); output innerText = \"\"; input value = \"*this is italic*\"; input dispatchEvent(new Event(\"input\")); const testDiv = document createElement(\"div\"); testDiv innerHTML = output innerText; const italics = testDivquerySelectorAll(\"em\");\nassert lengthOf(italics, 1);\nassert lengthOf(testDiv children, 1);\nassert equal(italics[0] innerText, \"this is italic\");\nWhen the value of #markdown-input is *this is italic*, an em element with the text of this is italic should be appended as a child of #preview js\nconst input = document querySelector(\"#markdown-input\");\nconst preview = document querySelector(\"#preview\");\npreview innerHTML = \"\";\ninput value = \"*this is italic*\";\ninput dispatchEvent(new Event(\"input\"));\nconst italics = preview querySelectorAll(\"em\");\nassert lengthOf(italics, 1);\nassert lengthOf(preview children, 1);\nassert equal(italics[0] innerText, \"this is italic\");\nWhen the value of #markdown-input is *this is italic* followed by *this is also italic* on a new line, convertMarkdown() should return <em>this is italic</em><em>this is also italic</em> js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"*this is italic*\\n*this is also italic*\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst italics = testDiv querySelectorAll(\"em\");\nassert lengthOf(italics, 2);\nassert lengthOf(testDiv children, 2);\nassert equal(italics[0] innerText, \"this is italic\");\nassert equal(italics[1] innerText, \"this is also italic\");\nWhen the value of #markdown-input is _this is italic_, convertMarkdown() should return <em>this is italic</em> js\nconst input = document querySelector(\"#markdown-input\");\ninput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 10,
    "total_chunks": 26
  },
  {
    "id": "b5807773bbe6204ee33b698412976cbf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "is italic</em><em>this is also italic</em> js const input = document querySelector(\"#markdown-input\"); input value = \"*this is italic*\\n*this is also italic*\"; const testDiv = document createElement(\"div\"); testDiv innerHTML = convertMarkdown(); const italics = testDiv querySelectorAll(\"em\"); assert lengthOf(italics, 2); assert lengthOf(testDiv children, 2); assert equal(italics[0] innerText, \"this is italic\"); assert equal(italics[1] innerText, \"this is also italic\"); When the value of #markdown-input is _this is italic_, convertMarkdown() should return <em>this is italic</em> js const input = document querySelector(\"#markdown-input\"); inputvalue = \"_this is italic_\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst italics = testDiv querySelectorAll(\"em\");\nassert lengthOf(italics, 1);\nassert lengthOf(testDiv children, 1);\nassert equal(italics[0] innerText, \"this is italic\");\nWhen the value of #markdown-input is _this is italic_, <em>this is italic</em> should be displayed inside #html-output js\nconst input = document querySelector(\"#markdown-input\");\nconst output = document querySelector(\"#html-output\");\noutput innerText = \"\";\ninput value = \"_this is italic_\";\ninput dispatchEvent(new Event(\"input\"));\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = output innerText;\nconst italics = testDiv querySelectorAll(\"em\");\nassert lengthOf(italics, 1);\nassert lengthOf(testDiv children, 1);\nassert equal(italics[0] innerText, \"this is italic\");\nWhen the value of #markdown-input is _this is italic_, an em element with the text of this is italic should be appended as a child of #preview js\nconst input = document querySelector(\"#markdown-input\");\nconst preview = document querySelector(\"#preview\");\npreview innerHTML = \"\";\ninput value = \"_this is italic_\";\ninput dispatchEvent(new Event(\"input\"));\nconst italics = preview querySelectorAll(\"em\");\nassert lengthOf(italics, 1);\nassert lengthOf(preview children, 1);\nassert equal(italics[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 11,
    "total_chunks": 26
  },
  {
    "id": "c414af94b1f31cfba0cb8e20e3a262a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "1); assert lengthOf(testDiv children, 1); assert equal(italics[0] innerText, \"this is italic\"); When the value of #markdown-input is _this is italic_, an em element with the text of this is italic should be appended as a child of #preview js const input = document querySelector(\"#markdown-input\"); const preview = document querySelector(\"#preview\"); preview innerHTML = \"\"; input value = \"_this is italic_\"; input dispatchEvent(new Event(\"input\")); const italics = preview querySelectorAll(\"em\"); assert lengthOf(italics, 1); assert lengthOf(preview children, 1); assert equal(italics[0]innerText, \"this is italic\");\nWhen the value of #markdown-input is _this is italic_ followed by _this is also italic_ on a new line, convertMarkdown() should return <em>this is italic</em><em>this is also italic</em> js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"_this is italic_\\n_this is also italic_\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst italics = testDiv querySelectorAll(\"em\");\nassert lengthOf(italics, 2);\nassert lengthOf(testDiv children, 2);\nassert equal(italics[0] innerText, \"this is italic\");\nassert equal(italics[1] innerText, \"this is also italic\");\nWhen the value of #markdown-input is either # **title 1** or # __title 1__, convertMarkdown() should return <h1><strong>title 1</strong></h1> ```js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"# title 1\";\nconst testDiv1 = document createElement(\"div\");\ntestDiv1 innerHTML = convertMarkdown();\nlet headings = testDiv1 querySelectorAll(\"h1\");\nlet testStrong = testDiv1 querySelector(\"h1>strong\")\nassert lengthOf(testDiv1 children, 1);\nassert lengthOf(headings, 1);\nassert lengthOf(headings[0] children, 1);\nassert exists(testStrong);\nassert equal(testStrong innerText, \"title 1\");\ninput value = \"# title 1\";\nconst testDiv2 = document createElement(\"div\");\ntestDiv2 innerHTML = convertMarkdown();\nheadings = testDiv2 querySelectorAll(\"h1\");\ntestStrong = testDiv2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 12,
    "total_chunks": 26
  },
  {
    "id": "56f4b0a7311e07505699399dc5c2a1b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "convertMarkdown() should return <h1><strong>title 1</strong></h1> ```js const input = document querySelector(\"#markdown-input\"); input value = \"# title 1\"; const testDiv1 = document createElement(\"div\"); testDiv1 innerHTML = convertMarkdown(); let headings = testDiv1 querySelectorAll(\"h1\"); let testStrong = testDiv1 querySelector(\"h1>strong\") assert lengthOf(testDiv1 children, 1); assert lengthOf(headings, 1); assert lengthOf(headings[0] children, 1); assert exists(testStrong); assert equal(testStrong innerText, \"title 1\"); input value = \"# title 1\"; const testDiv2 = document createElement(\"div\"); testDiv2 innerHTML = convertMarkdown(); headings = testDiv2 querySelectorAll(\"h1\"); testStrong = testDiv2querySelector(\"h1>strong\")\nassert lengthOf(testDiv2 children, 1);\nassert lengthOf(headings, 1);\nassert lengthOf(headings[0] children, 1);\nassert exists(testStrong);\nassert equal(testStrong innerText, \"title 1\");\n```\nWhen the value of #markdown-input is either # **title 1** or # __title 1__, <h1><strong>title 1</strong></h1> should be displayed inside #html-output ```js\nconst input = document querySelector(\"#markdown-input\");\nconst output = document querySelector(\"#html-output\");\noutput innerText = \"\";\ninput value = \"# title 1\";\ninput dispatchEvent(new Event(\"input\"));\nconst testDiv1 = document createElement(\"div\");\ntestDiv1 innerHTML = output innerText;\nlet headings = testDiv1 querySelectorAll(\"h1\")\nlet testStrong = testDiv1 querySelector(\"h1>strong\")\nassert lengthOf(testDiv1 children, 1);\nassert lengthOf(headings, 1);\nassert lengthOf(headings[0] children, 1);\nassert exists(testStrong);\nassert equal(testStrong innerText, \"title 1\");\noutput innerText = \"\";\ninput value = \"# title 1\";\ninput dispatchEvent(new Event(\"input\"));\nconst testDiv2 = document createElement(\"div\");\ntestDiv2 innerHTML = output innerText;\nheadings = testDiv2 querySelectorAll(\"h1\")\ntestStrong = testDiv2 querySelector(\"h1>strong\")\nassert lengthOf(testDiv2 children, 1);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 13,
    "total_chunks": 26
  },
  {
    "id": "30201bfd0fcf327f74599edd59524936",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "dispatchEvent(new Event(\"input\")); const testDiv1 = document createElement(\"div\"); testDiv1 innerHTML = output innerText; let headings = testDiv1 querySelectorAll(\"h1\") let testStrong = testDiv1 querySelector(\"h1>strong\") assert lengthOf(testDiv1 children, 1); assert lengthOf(headings, 1); assert lengthOf(headings[0] children, 1); assert exists(testStrong); assert equal(testStrong innerText, \"title 1\"); output innerText = \"\"; input value = \"# title 1\"; input dispatchEvent(new Event(\"input\")); const testDiv2 = document createElement(\"div\"); testDiv2 innerHTML = output innerText; headings = testDiv2 querySelectorAll(\"h1\") testStrong = testDiv2 querySelector(\"h1>strong\") assert lengthOf(testDiv2 children, 1); assertlengthOf(headings, 1);\nassert lengthOf(headings[0] children, 1);\nassert exists(testStrong);\nassert equal(testStrong innerText, \"title 1\");\n```\nWhen the value of #markdown-input is either # **title 1** or # __title 1__, you set the inner HTML of #preview to <h1><strong>title 1</strong></h1> ```js\nconst input = document querySelector(\"#markdown-input\");\nconst preview = document querySelector(\"#preview\");\npreview innerHTML = \"\";\ninput value = \"# title 1\";\ninput dispatchEvent(new Event(\"input\"));\nlet headings = preview querySelectorAll(\"h1\")\nlet testStrong = preview querySelector(\"h1>strong\")\nassert lengthOf(preview children, 1);\nassert lengthOf(headings, 1);\nassert lengthOf(headings[0] children, 1);\nassert exists(testStrong);\nassert equal(testStrong innerText, \"title 1\");\npreview innerHTML = \"\";\ninput value = \"# title 1\";\ninput dispatchEvent(new Event(\"input\"));\nheadings = preview querySelectorAll(\"h1\")\ntestStrong = preview querySelector(\"h1>strong\")\nassert lengthOf(preview children, 1);\nassert lengthOf(headings, 1);\nassert lengthOf(headings[0] children, 1);\nassert exists(testStrong);\nassert equal(testStrong innerText, \"title 1\");\n```\nWhen the value of #markdown-input is",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 14,
    "total_chunks": 26
  },
  {
    "id": "499900a85307a92ea210ebfb19776f2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "dispatchEvent(new Event(\"input\")); let headings = preview querySelectorAll(\"h1\") let testStrong = preview querySelector(\"h1>strong\") assert lengthOf(preview children, 1); assert lengthOf(headings, 1); assert lengthOf(headings[0] children, 1); assert exists(testStrong); assert equal(testStrong innerText, \"title 1\"); preview innerHTML = \"\"; input value = \"# title 1\"; input dispatchEvent(new Event(\"input\")); headings = preview querySelectorAll(\"h1\") testStrong = preview querySelector(\"h1>strong\") assert lengthOf(preview children, 1); assert lengthOf(headings, 1); assert lengthOf(headings[0] children, 1); assert exists(testStrong); assert equal(testStrong innerText, \"title 1\"); ``` When the value of #markdown-input is[alt-text](image-source), convertMarkdown() should return <img alt=\"alt-text\" src=\"image-source\"> js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \" [alt-text](image-source)\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst imgs = testDiv querySelectorAll(\"img\");\nassert lengthOf(testDiv children, 1);\nassert lengthOf(imgs, 1);\nassert equal(imgs[0] alt, \"alt-text\");\nassert isTrue(imgs[0] src endsWith(\"image-source\"));\nWhen the value of #markdown-input is [alt-text](image-source), <img alt=\"alt-text\" src=\"image-source\"> should be displayed inside #html-output js\nconst input = document querySelector(\"#markdown-input\");\nconst output = document querySelector(\"#html-output\");\noutput innerText = \"\";\ninput value = \" [alt-text](image-source)\";\ninput dispatchEvent(new Event(\"input\"));\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = output innerText;\nconst imgs = testDiv querySelectorAll(\"img\");\nassert lengthOf(testDiv children, 1)\nassert lengthOf(imgs, 1);\nassert equal(imgs[0] alt, \"alt-text\");\nassert isTrue(imgs[0] src endsWith(\"image-source\"));\nWhen the value of #markdown-input is [alt-text](image-source), <img alt=\"alt-text\" src=\"image-source\"> should be appended as a child of #preview js\nconst input = document querySelector(\"#markdown-input\");\nconst preview = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 511,
    "chunk_index": 15,
    "total_chunks": 26
  },
  {
    "id": "dddf5956305ba894f6e866683ebd0b4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "querySelector(\"#markdown-input\"); const output = document querySelector(\"#html-output\"); output innerText = \"\"; input value = \" [alt-text](image-source)\"; input dispatchEvent(new Event(\"input\")); const testDiv = document createElement(\"div\"); testDiv innerHTML = output innerText; const imgs = testDiv querySelectorAll(\"img\"); assert lengthOf(testDiv children, 1) assert lengthOf(imgs, 1); assert equal(imgs[0] alt, \"alt-text\"); assert isTrue(imgs[0] src endsWith(\"image-source\")); When the value of #markdown-input is [alt-text](image-source), <img alt=\"alt-text\" src=\"image-source\"> should be appended as a child of #preview js const input = document querySelector(\"#markdown-input\"); const preview = documentquerySelector(\"#preview\");\npreview innerHTML = \"\";\ninput value = \" [alt-text](image-source)\";\ninput dispatchEvent(new Event(\"input\"));\nconst imgs = preview querySelectorAll(\"img\");\nassert lengthOf(preview children, 1)\nassert lengthOf(imgs, 1);\nassert equal(imgs[0] alt, \"alt-text\");\nassert isTrue(imgs[0] src endsWith(\"image-source\"));\nWhen the value of #markdown-input is [alt-text](image-source) followed by [alt-text-2](image-source-2) on a new line, convertMarkdown() should return <img alt=\"alt-text\" src=\"image-source\"><img alt=\"alt-text-2\" src=\"image-source-2\"> js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \" [alt-text](image-source)\\n [alt-text-2](image-source-2)\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst imgs = testDiv querySelectorAll(\"img\");\nassert lengthOf(testDiv children, 2);\nassert lengthOf(imgs, 2);\nassert equal(imgs[0] alt, \"alt-text\");\nassert isTrue(imgs[0] src endsWith(\"image-source\"));\nassert equal(imgs[1] alt, \"alt-text-2\");\nassert isTrue(imgs[1] src endsWith(\"image-source-2\"));\nWhen the value of #markdown-input is [link text](URL), convertMarkdown() should return <a href=\"URL\">link text</a> js\nconst input = document querySelector(\"#markdown-input\");\ninput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 16,
    "total_chunks": 26
  },
  {
    "id": "286710211cd9d1e1db8cf24abf2d2c3f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "return <img alt=\"alt-text\" src=\"image-source\"><img alt=\"alt-text-2\" src=\"image-source-2\"> js const input = document querySelector(\"#markdown-input\"); input value = \" [alt-text](image-source)\\n [alt-text-2](image-source-2)\"; const testDiv = document createElement(\"div\"); testDiv innerHTML = convertMarkdown(); const imgs = testDiv querySelectorAll(\"img\"); assert lengthOf(testDiv children, 2); assert lengthOf(imgs, 2); assert equal(imgs[0] alt, \"alt-text\"); assert isTrue(imgs[0] src endsWith(\"image-source\")); assert equal(imgs[1] alt, \"alt-text-2\"); assert isTrue(imgs[1] src endsWith(\"image-source-2\")); When the value of #markdown-input is [link text](URL), convertMarkdown() should return <a href=\"URL\">link text</a> js const input = document querySelector(\"#markdown-input\"); inputvalue = \"[link text](URL)\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst anchors = testDiv querySelectorAll(\"a\");\nassert lengthOf(testDiv children, 1);\nassert lengthOf(anchors, 1);\nassert isTrue(anchors[0] href endsWith(\"URL\"));\nassert equal(anchors[0] innerText, \"link text\");\nWhen the value of #markdown-input is [link text](URL), <a href=\"URL\">link text</a> should be displayed inside #html-output js\nconst input = document querySelector(\"#markdown-input\");\nconst output = document querySelector(\"#html-output\");\noutput innerText = \"\";\ninput value = \"[link text](URL)\";\ninput dispatchEvent(new Event(\"input\"));\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = output innerText;\nconst anchors = testDiv querySelectorAll(\"a\");\nassert lengthOf(testDiv children, 1);\nassert lengthOf(anchors, 1);\nassert isTrue(anchors[0] href endsWith(\"URL\"));\nassert equal(anchors[0] innerText, \"link text\");\nWhen the value of #markdown-input is [link text](URL), <a href=\"URL\">link text</a> should be appended as a child of #preview js\nconst input = document querySelector(\"#markdown-input\");\nconst preview = document querySelector(\"#preview\");\npreview innerHTML = \"\";\ninput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 17,
    "total_chunks": 26
  },
  {
    "id": "703916df0a0d7270fed5a692bc3256ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "= \"\"; input value = \"[link text](URL)\"; input dispatchEvent(new Event(\"input\")); const testDiv = document createElement(\"div\"); testDiv innerHTML = output innerText; const anchors = testDiv querySelectorAll(\"a\"); assert lengthOf(testDiv children, 1); assert lengthOf(anchors, 1); assert isTrue(anchors[0] href endsWith(\"URL\")); assert equal(anchors[0] innerText, \"link text\"); When the value of #markdown-input is [link text](URL), <a href=\"URL\">link text</a> should be appended as a child of #preview js const input = document querySelector(\"#markdown-input\"); const preview = document querySelector(\"#preview\"); preview innerHTML = \"\"; inputvalue = \"[link text](URL)\";\ninput dispatchEvent(new Event(\"input\"));\nconst anchors = preview querySelectorAll(\"a\");\nassert lengthOf(preview children, 1);\nassert lengthOf(anchors, 1);\nassert isTrue(anchors[0] href endsWith(\"URL\"));\nassert equal(anchors[0] innerText, \"link text\");\nWhen the value of #markdown-input is [link text](URL) followed by [link text 2](URL2) on a new line, convertMarkdown() should return <a href=\"URL\">link text</a><a href=\"URL2\">link text 2</a> js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"[link text](URL)\\n[link text 2](URL2)\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst anchors = testDiv querySelectorAll(\"a\");\nassert lengthOf(testDiv children, 2);\nassert lengthOf(anchors, 2);\nassert isTrue(anchors[0] href endsWith(\"URL\"));\nassert equal(anchors[0] innerText, \"link text\");\nassert isTrue(anchors[1] href endsWith(\"URL2\"));\nassert equal(anchors[1] innerText, \"link text 2\");\nWhen the value of #markdown-input is > this is a quote, convertMarkdown() should return <blockquote>this is a quote</blockquote> js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"> this is a quote\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst quotes = testDiv querySelectorAll(\"blockquote\");\nassert lengthOf(testDiv children, 1);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 18,
    "total_chunks": 26
  },
  {
    "id": "999b42d3bd026c63cee56a36b37ed199",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "lengthOf(testDiv children, 2); assert lengthOf(anchors, 2); assert isTrue(anchors[0] href endsWith(\"URL\")); assert equal(anchors[0] innerText, \"link text\"); assert isTrue(anchors[1] href endsWith(\"URL2\")); assert equal(anchors[1] innerText, \"link text 2\"); When the value of #markdown-input is > this is a quote, convertMarkdown() should return <blockquote>this is a quote</blockquote> js const input = document querySelector(\"#markdown-input\"); input value = \"> this is a quote\"; const testDiv = document createElement(\"div\"); testDiv innerHTML = convertMarkdown(); const quotes = testDiv querySelectorAll(\"blockquote\"); assert lengthOf(testDiv children, 1); assertlengthOf(quotes, 1);\nassert equal(quotes[0] innerText, \"this is a quote\");\nWhen the value of #markdown-input is > this is a quote, <blockquote>this is a quote</blockquote> should be displayed inside #html-output js\nconst input = document querySelector(\"#markdown-input\");\nconst output = document querySelector(\"#html-output\");\noutput innerText = \"\";\ninput value = \"> this is a quote\";\ninput dispatchEvent(new Event(\"input\"));\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = output innerText;\nconst quotes = testDiv querySelectorAll(\"blockquote\");\nassert lengthOf(testDiv children, 1);\nassert lengthOf(quotes, 1);\nassert equal(quotes[0] innerText, \"this is a quote\");\nWhen the value of #markdown-input is > this is a quote, <blockquote>this is a quote</blockquote> should be appended as a child of #preview js\nconst input = document querySelector(\"#markdown-input\");\nconst preview = document querySelector(\"#preview\");\npreview innerHTML = \"\";\ninput value = \"> this is a quote\";\ninput dispatchEvent(new Event(\"input\"));\nconst quotes = preview querySelectorAll(\"blockquote\");\nassert lengthOf(preview children, 1);\nassert lengthOf(quotes, 1);\nassert equal(quotes[0] innerText, \"this is a quote\");\nWhen the value of #markdown-input is > this is a quote followed by > this is another quote on a new line, convertMarkdown() should return <blockquote>this is a quote</blockquote><blockquote>this is another quote</blockquote> js\nconst input = document querySelector(\"#markdown-input\");\ninput",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 19,
    "total_chunks": 26
  },
  {
    "id": "6b0bbfa45fe8b74b4a4acc0260d7f3a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "= document querySelector(\"#preview\"); preview innerHTML = \"\"; input value = \"> this is a quote\"; input dispatchEvent(new Event(\"input\")); const quotes = preview querySelectorAll(\"blockquote\"); assert lengthOf(preview children, 1); assert lengthOf(quotes, 1); assert equal(quotes[0] innerText, \"this is a quote\"); When the value of #markdown-input is > this is a quote followed by > this is another quote on a new line, convertMarkdown() should return <blockquote>this is a quote</blockquote><blockquote>this is another quote</blockquote> js const input = document querySelector(\"#markdown-input\"); inputvalue = \"> this is a quote\\n> this is another quote\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst quotes = testDiv querySelectorAll(\"blockquote\");\nassert lengthOf(testDiv children, 2);\nassert lengthOf(quotes, 2);\nassert equal(quotes[0] innerText, \"this is a quote\");\nassert equal(quotes[1] innerText, \"this is another quote\");\nWhen the value of #markdown-input is some text > not a quote anymore, convertMarkdown() should not convert > not a quote anymore into a blockquote element js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"some text > not a quote anymore\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst testQuote = testDiv querySelector(\"blockquote\")\nassert notExists(testQuote);\nassert equal(testDiv innerText, input value)\nWhen the value of #markdown-input is > **this is a *quote***, convertMarkdown() should return <blockquote><strong>this is a <em>quote</em></strong></blockquote> js\nconst input = document querySelector(\"#markdown-input\");\ninput value = \"> **this is a *quote***\";\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = convertMarkdown();\nconst quotes = testDiv querySelectorAll(\"blockquote\");\nconst strongs = testDiv querySelectorAll(\"blockquote>strong\");\nconst italics = testDiv querySelectorAll(\"blockquote>strong>em\");\nassert lengthOf(testDiv children, 1);\nassert lengthOf(quotes, 1);\nassert lengthOf(quotes[0] children, 1);\nassert lengthOf(strongs, 1);\nassert lengthOf(strongs[0] children, 1);\nassert equal(strongs[0]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 20,
    "total_chunks": 26
  },
  {
    "id": "bc447cc2bfa089c57c608a2718bd9776",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "When the value of #markdown-input is > **this is a *quote***, convertMarkdown() should return <blockquote><strong>this is a <em>quote</em></strong></blockquote> js const input = document querySelector(\"#markdown-input\"); input value = \"> **this is a *quote***\"; const testDiv = document createElement(\"div\"); testDiv innerHTML = convertMarkdown(); const quotes = testDiv querySelectorAll(\"blockquote\"); const strongs = testDiv querySelectorAll(\"blockquote>strong\"); const italics = testDiv querySelectorAll(\"blockquote>strong>em\"); assert lengthOf(testDiv children, 1); assert lengthOf(quotes, 1); assert lengthOf(quotes[0] children, 1); assert lengthOf(strongs, 1); assert lengthOf(strongs[0] children, 1); assert equal(strongs[0]innerText, \"this is a quote\");\nassert lengthOf(italics, 1);\nassert equal(italics[0] innerText, \"quote\");\nWhen the value of #markdown-input is > **this is a *quote***, <blockquote><strong>this is a <em>quote</em></strong></blockquote> should be displayed inside #html-output js\nconst input = document querySelector(\"#markdown-input\");\nconst output = document querySelector(\"#html-output\");\noutput innerText = \"\";\ninput value = \"> **this is a *quote***\";\ninput dispatchEvent(new Event(\"input\"));\nconst testDiv = document createElement(\"div\");\ntestDiv innerHTML = output innerText;\nconst quotes = testDiv querySelectorAll(\"blockquote\");\nconst strongs = testDiv querySelectorAll(\"blockquote>strong\");\nconst italics = testDiv querySelectorAll(\"blockquote>strong>em\");\nassert lengthOf(testDiv children, 1);\nassert lengthOf(quotes, 1);\nassert lengthOf(quotes[0] children, 1);\nassert lengthOf(strongs, 1);\nassert lengthOf(strongs[0] children, 1);\nassert equal(strongs[0] innerText, \"this is a quote\");\nassert lengthOf(italics, 1);\nassert equal(italics[0] innerText, \"quote\");\nWhen the value of #markdown-input is > **this is a *quote***, you should set the inner HTML of #preview to <blockquote><strong>this is a <em>quote</em></strong></blockquote> js\nconst input = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 21,
    "total_chunks": 26
  },
  {
    "id": "c8507cdb7b64355285c8dfd66aa785f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "const quotes = testDiv querySelectorAll(\"blockquote\"); const strongs = testDiv querySelectorAll(\"blockquote>strong\"); const italics = testDiv querySelectorAll(\"blockquote>strong>em\"); assert lengthOf(testDiv children, 1); assert lengthOf(quotes, 1); assert lengthOf(quotes[0] children, 1); assert lengthOf(strongs, 1); assert lengthOf(strongs[0] children, 1); assert equal(strongs[0] innerText, \"this is a quote\"); assert lengthOf(italics, 1); assert equal(italics[0] innerText, \"quote\"); When the value of #markdown-input is > **this is a *quote***, you should set the inner HTML of #preview to <blockquote><strong>this is a <em>quote</em></strong></blockquote> js const input = documentquerySelector(\"#markdown-input\");\nconst preview = document querySelector(\"#preview\");\npreview innerHTML = \"\";\ninput value = \"> **this is a *quote***\";\ninput dispatchEvent(new Event(\"input\"));\nconst quotes = preview querySelectorAll(\"blockquote\");\nconst strongs = preview querySelectorAll(\"blockquote>strong\");\nconst italics = preview querySelectorAll(\"blockquote>strong>em\");\nassert lengthOf(preview children, 1);\nassert lengthOf(quotes, 1);\nassert lengthOf(quotes[0] children, 1);\nassert lengthOf(strongs, 1);\nassert lengthOf(strongs[0] children, 1);\nassert equal(strongs[0] innerText, \"this is a quote\");\nassert lengthOf(italics, 1);\nassert equal(italics[0] innerText, \"quote\");\nYou should have only one script element in your HTML js\nassert lengthOf(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 22,
    "total_chunks": 26
  },
  {
    "id": "295e8fe67f9c4c43319c84c4ecfc616a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "querySelector(\"#preview\"); preview innerHTML = \"\"; input value = \"> **this is a *quote***\"; input dispatchEvent(new Event(\"input\")); const quotes = preview querySelectorAll(\"blockquote\"); const strongs = preview querySelectorAll(\"blockquote>strong\"); const italics = preview querySelectorAll(\"blockquote>strong>em\"); assert lengthOf(preview children, 1); assert lengthOf(quotes, 1); assert lengthOf(quotes[0] children, 1); assert lengthOf(strongs, 1); assert lengthOf(strongs[0] children, 1); assert equal(strongs[0] innerText, \"this is a quote\"); assert lengthOf(italics, 1); assert equal(italics[0] innerText, \"quote\"); You should have only one script element in your HTML js assert lengthOf(documentquerySelectorAll(\"script\"), 1);\n--seed--\n--seed-contents--\n```html\nMarkdown to HTML Converter\nMarkdown to HTML Converter\nMarkdown Input:\nRaw HTML Output:\nHTML Preview:\n```\ncss\n* {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\npadding: 20px;\n}\n#markdown-input {\nwidth: 100%;\nheight: 100px;\n}\n#html-output, #preview {\nheight: 100px;\ndisplay: inline-block;\nwidth: 100%;\nborder: 1px solid #ccc;\npadding: 10px;\nmargin: auto;\nwhite-space: pre-wrap;\nbackground-color: #f9f9f9;\n}\n@media (min-width: 600px) {\n#markdown-input, #html-output, #preview {\nheight: 200px;\nmargin: 0;\n}\n#container {\ndisplay: flex;\njustify-content: space-evenly;\ngap: 10px;\n}\n}\n```js\n```\n--solutions--\n```html\nMarkdown to HTML Converter\nMarkdown to HTML Converter\nMarkdown Input:\nRaw HTML Output:\nHTML Preview:\n```\ncss\n* {\nbox-sizing: border-box;\n}\nbody {\nfont-family: Arial, sans-serif;\npadding: 20px;\n}\n#markdown-input {\nwidth: 100%;\nheight: 100px;\n}\n#html-output, #preview {\nheight: 100px;\ndisplay: inline-block;\nwidth: 100%;\nborder: 1px solid #ccc;\npadding: 10px;\nmargin: auto;\nwhite-space: pre-wrap;\nbackground-color: #f9f9f9;\n}\n@media (min-width: 600px) {\n#markdown-input, #html-output, #preview {\nheight: 200px;\nmargin: 0;\n}\n#container {\ndisplay: flex;\njustify-content: space-evenly;\ngap: 10px;\n}\n}\n```js\nconst patternReplacementArray = [\n{ h6: [/^[ \\t]###### \\t/gm, \"$1\"] },\n{ h5: [/^[ \\t]##### \\t/gm, \"$1\"] },\n{ h4: [/^[ \\t]#### \\t/gm, \"$1\"] },\n{ h3: [/^[ \\t]### \\t/gm, \"$1\"] },\n{ h2: [/^[ \\t]## \\t/gm, \"$1\"] },\n{ h1: [/^[ \\t]# \\t/gm, \"$1\"] },\n{ hr: [/(",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 698,
    "chunk_index": 23,
    "total_chunks": 26
  },
  {
    "id": "f5f8245469f8539927ea603a00aec04b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": "background-color: #f9f9f9; } @media (min-width: 600px) { #markdown-input, #html-output, #preview { height: 200px; margin: 0; } #container { display: flex; justify-content: space-evenly; gap: 10px; } } ```js const patternReplacementArray = [ { h6: [/^[ \\t]###### \\t/gm, \"$1\"] }, { h5: [/^[ \\t]##### \\t/gm, \"$1\"] }, { h4: [/^[ \\t]#### \\t/gm, \"$1\"] }, { h3: [/^[ \\t]### \\t/gm, \"$1\"] }, { h2: [/^[ \\t]## \\t/gm, \"$1\"] }, { h1: [/^[ \\t]# \\t/gm, \"$1\"] }, { hr: [/(<=\\n|^)---( =\\n|$)/, \"\"] },\n{ strong: [/(( :*|_){2})( )\\1/g, \"$2\"] },\n{ em: [/(*|_)( )\\1/g, \"$2\"] },\n{ img: [/ [\\s( )\\s](\\s( )\\s)/g, ''] },\n{ a: [/[( )](\\s( )\\s)/g, '$1'] },\n{ blockquote1: [/^[ \\t]> ([^\\n]+ )$/gm, \"$1\\n\"] },\n{ blockquote2: [/( <=)( + )<\\/blockquote>\\n\\n^([^<\\n]+ )$/gm, \"$1 $2\\n\"] },\n{ ul: [/( :^[-+]\\s+ $\\n)+\\s /gm, \"\\n$&\"] },\n{ ol: [/( :^\\d \\s+ \\w $\\n)+\\s /gm, \"\\n$&\"] },\n{ uli: [/^[-+]\\s+( $)\\n/gm, \"$1\\n\"] },\n{ oli: [/^\\d \\s+ ( $)\\n/gm, \"$1\\n\"] },\n{ p1: [/^([^<>\\s] )( =\\n\\s$)/gsm, \"$1\"] },\n{ p2: [/^\\w ( :|) +( :<\\/strong>|<\\/em>)\\s\\w [ \\t]*$/gm, \"$&\"] }\n]\nconst markdownInput = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 24,
    "total_chunks": 26
  },
  {
    "id": "1fe145bb667170ba9930d28be10f00ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
    "source_type": "git_repo",
    "title": "Markdown to HTML Converter",
    "content": ")\\s)/g, '$1'] }, { blockquote1: [/^[ \\t]> ([^\\n]+ )$/gm, \"$1\\n\"] }, { blockquote2: [/( <=)( + )<\\/blockquote>\\n\\n^([^<\\n]+ )$/gm, \"$1 $2\\n\"] }, { ul: [/( :^[-+]\\s+ $\\n)+\\s /gm, \"\\n$&\"] }, { ol: [/( :^\\d \\s+ \\w $\\n)+\\s /gm, \"\\n$&\"] }, { uli: [/^[-+]\\s+( $)\\n/gm, \"$1\\n\"] }, { oli: [/^\\d \\s+ ( $)\\n/gm, \"$1\\n\"] }, { p1: [/^([^<>\\s] )( =\\n\\s$)/gsm, \"$1\"] }, { p2: [/^\\w ( :|) +( :<\\/strong>|<\\/em>)\\s\\w [ \\t]*$/gm, \"$&\"] } ] const markdownInput = documentgetElementById('markdown-input');\nconst convertMarkdown = () => {\nlet markdown = markdownInput value;\nlet matchUList = false;\nlet matchOList = false;\npatternReplacementArray forEach((item) => {\nconst [key] = Object keys(item);\nconst [pattern, replacement] = Object values(item)[0];\nif (key === \"blockquote2\") {\nwhile (markdown match(pattern)) {\nmarkdown = markdown replace(pattern, replacement);\n}\n} else if (key === \"ul\") {\nif (markdown match(pattern)) {\nmatchUList = true;\nmarkdown = markdown replace(pattern, replacement);\n}\n} else if (key === \"ol\") {\nif (markdown match(pattern)) {\nmatchOList = true;\nmarkdown = markdown replace(pattern, replacement);\n}\n} else if (key === \"uli\" && matchUList) {\nreturn;\n} else if (key === \"oli\" && matchOList) {\nreturn;\n} else {\nmarkdown = markdown replace(pattern, replacement);\n}\n})\nreturn markdown;\n}\nmarkdownInput addEventListener('input', () => {\nconst html = convertMarkdown();\nconst out = document getElementById('html-output');\nconst preview = document getElementById('preview');\nout textContent = html;\npreview innerHTML = html;\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 40297,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-markdown-to-html-converter\\66f55eac933ff64ce654ca74.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 25,
    "total_chunks": 26
  },
  {
    "id": "3a07e466b495b8f3793359903065542d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-periodic-table-database\\602d9ff222201c65d2a019f2.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 602d9ff222201c65d2a019f2\ntitle: Build a Periodic Table Database\nchallengeType: 13\nurl: freeCodeCamp/learn-periodic-table-database\ndashedName: lab-periodic-table-database\n--description--\nFor this lab, you will create a Bash script to get information about chemical elements from a periodic table database.\n--instructions--\nImportant: After you pass all the project tests, save a dump of your database into a periodic_table.sql file, as well as your element.sh file, so you can complete step 2. There will be instructions on how to do that within the virtual machine.\n--notes--\nRequired files: periodic_table.sql, element.sh\n--hints--\n--seed--\n--solutions--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 701,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-periodic-table-database\\602d9ff222201c65d2a019f2.md",
      "source_type": "git_repo"
    },
    "token_count": 161,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f2235925eca8e076a8d4e36ad3b3ccc8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-one-time-password-generator\\67c562286b29447da020d407.md",
    "source_type": "git_repo",
    "title": "OTP Generator",
    "content": "id: 67c562286b29447da020d407\ntitle: Build a One-Time Password Generator\nchallengeType: 25\ndashedName: build-a-one-time-password-generator\ndemoType: onClick\n--description--\nIn this lab, you will generate a 6-digit OTP (One-Time Password) and display it to the user The OTP will expire after 5 seconds, and a new OTP will be generated when the user clicks the \"Generate New OTP\" button Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should use the useEffect hook to manage the countdown timer Your OTPGenerator component should return a div element with the class name container The div having the class container should include the following elements:\nAn h1 element with the ID otp-title and text \"OTP Generator\" An h2 element with the ID otp-display that either displays the message \"Click 'Generate OTP' to get a code\" or shows the generated OTP if one is available A p element with the ID otp-timer and aria-live attribute set to a valid value that:\nStarts off empty Displays \"Expires in: X seconds\" after the button is clicked, where X represents the remaining time before the OTP expires Shows the message \"OTP expired Click the button to generate a new OTP \" once the countdown reaches 0 A button element with the ID generate-otp-button labeled \"Generate OTP\" When clicked, it should generate a new OTP and start a 5-second countdown The \"Generate OTP\" button must be disabled while the countdown is active You should ensure the countdown timer stops automatically once it reaches 0 seconds to prevent unnecessary updates The generated OTP should be 6 digits long --before-all--\njs\nlet clock = __FakeTimers install();\n--hints--\nYou should not remove the existing const { useState, useEffect, useRef } = React; assignment from the code js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11899,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-one-time-password-generator\\67c562286b29447da020d407.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "b1916614a59d29972e401561d7e788f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-one-time-password-generator\\67c562286b29447da020d407.md",
    "source_type": "git_repo",
    "title": "OTP Generator",
    "content": "it should generate a new OTP and start a 5-second countdown The \"Generate OTP\" button must be disabled while the countdown is active You should ensure the countdown timer stops automatically once it reaches 0 seconds to prevent unnecessary updates The generated OTP should be 6 digits long --before-all-- js let clock = __FakeTimers install(); --hints-- You should not remove the existing const { useState, useEffect, useRef } = React; assignment from the code js assertmatch(code, /{\\s*(useState\\s*,\\s*useEffect\\s*,\\s*useRef|useState\\s*,\\s*useRef\\s*,\\s*useEffect|useEffect\\s*,\\s*useState\\s*,\\s*useRef|useEffect\\s*,\\s*useRef\\s*,\\s*useState|useRef\\s*,\\s*useState\\s*,\\s*useEffect|useRef\\s*,\\s*useEffect\\s*,\\s*useState|useState|useEffect|useRef)\\s*}\\s*=\\s*React;/);\nYou should render a div with the class container js\nconst containerDiv = document querySelector(' container');\nassert exists(containerDiv);\nThe container should contain an h1 element with the ID otp-title the text \"OTP Generator\" js\nconst h1 = document querySelector(\" container h1#otp-title\");\nassert exists(h1);\nassert equal(h1 textContent, \"OTP Generator\");\nThe container should contain an h2 element with the ID otp-display that displays the OTP when generated js\nconst h2 = document querySelector(\" container h2#otp-display\");\nassert exists(h2);\nInitially, the h2 inside container should display the message \"Click 'Generate OTP' to get a code\" js\nassert strictEqual(document querySelector(' container h2#otp-display') textContent trim(), \"Click 'Generate OTP' to get a code\");\nThe container element should contain a p element with the ID otp-timer js\nconst container = document querySelector(' container');\nassert exists(container, \"The container element should exist\");\nconst pElements = container querySelectorAll('p');\nassert strictEqual(pElements length, 1);\nassert strictEqual(pElements[0] id, \"otp-timer\", \"The p element should have the id otp-timer\");\nThe p element should have an aria-live attribute set to assertive or polite js\nconst pElement = document querySelector(' container p');\nassert exists(pElement ariaLive);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11899,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-one-time-password-generator\\67c562286b29447da020d407.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "66188107085136fa0bfad01a5d1e54cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-one-time-password-generator\\67c562286b29447da020d407.md",
    "source_type": "git_repo",
    "title": "OTP Generator",
    "content": "to get a code\"); The container element should contain a p element with the ID otp-timer js const container = document querySelector(' container'); assert exists(container, \"The container element should exist\"); const pElements = container querySelectorAll('p'); assert strictEqual(pElements length, 1); assert strictEqual(pElements[0] id, \"otp-timer\", \"The p element should have the id otp-timer\"); The p element should have an aria-live attribute set to assertive or polite js const pElement = document querySelector(' container p'); assert exists(pElement ariaLive); assertoneOf(pElement ariaLive, [\"assertive\", \"polite\"]);\nInitially, the p element should be empty js\nconst pElement = document querySelector(' container p');\nassert strictEqual(pElement innerText, \"\", \"The `p` element should be empty\");\nThe container should contain a button element with the ID generate-otp-button and text \"Generate OTP\" js\nconst button = document querySelector(' container button#generate-otp-button') textContent;\nassert exists(button);\nassert strictEqual(button, 'Generate OTP');\nWhen the button is clicked, it should display a new OTP in the h2 element with id otp-display ```js\nasync() => {\ntry {\n// allow the page to render\nclock tick(1)\nconst button = document querySelector(\" container button#generate-otp-button\");\nconst h2 = document querySelector(\" container h2#otp-display\");\nbutton click();\nclock tick(300)\nassert match(h2 textContent trim(), /[0-9]/, \"OTP should be a number\");\n} finally {\n// we need to wait for the countdown to finish for the next test to work otherwise the button will be disabled\nawait clock runAllAsync();\n}\n}\n```\nThe generated OTP should be 6 digits long ```js\nasync() => {\ntry {\nconst button = document querySelector(\" container button#generate-otp-button\");\nbutton click();\nclock tick(1);\nconst h2 = document querySelector(\" container h2#otp-display\");\nassert match(h2 textContent trim(), /^[0-9]{6}$/, \"OTP should be a 6-digit number\");\n} finally {\n// we need to wait for the countdown to finish for the next test to work otherwise the button will be disabled\nawait clock runAllAsync();\n}\n}\n```\nWhen the button is clicked, the p element with id of otp-timer should show a 5-second countdown",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11899,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-one-time-password-generator\\67c562286b29447da020d407.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "49d6da44762e04cfe80702e3b336cdc6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-one-time-password-generator\\67c562286b29447da020d407.md",
    "source_type": "git_repo",
    "title": "OTP Generator",
    "content": "button = document querySelector(\" container button#generate-otp-button\"); button click(); clock tick(1); const h2 = document querySelector(\" container h2#otp-display\"); assert match(h2 textContent trim(), /^[0-9]{6}$/, \"OTP should be a 6-digit number\"); } finally { // we need to wait for the countdown to finish for the next test to work otherwise the button will be disabled await clock runAllAsync(); } } ``` When the button is clicked, the p element with id of otp-timer should show a 5-second countdown```js\nasync() => {\ntry {\n// allow the page to render\nclock tick(1)\nconst button = document querySelector(\" container button#generate-otp-button\");\nconst h2 = document querySelector(\" container h2#otp-display\");\nbutton click();\nclock tick(300)\nconst p = document querySelector(\" container p#otp-timer\");\nassert match(p textContent, /Expires in: 5 seconds/, \"Countdown should start at 5 seconds\");\n} finally {\n// we need to wait for the countdown to finish for the next test to work otherwise the button will be disabled\nawait clock runAllAsync();\n}\n}\n```\nThe message in the p element with id otp-timer should update every second to show the remaining time js\nasync() => {\nconst button = document querySelector(\" container button#generate-otp-button\");\nbutton click();\nclock tick(1)\nlet p = document querySelector(\" container p#otp-timer\");\nassert match(p textContent, /Expires in: 5 seconds/);\nawait clock tickAsync(1000)\np = document querySelector(\" container p#otp-timer\");\nassert match(p textContent, /Expires in: 4 seconds/, \"Countdown should update to 4 seconds after 1 second\");\n}\nThe \"Generate OTP\" button should be disabled while the countdown timer is running ```js\nasync () => {\ntry {\nconst button = document querySelector(\" container button#generate-otp-button\");\nbutton click();\nclock tick(1);\nassert isTrue(button disabled);\n} finally {\nawait clock runAllAsync();\n}\n}\n```\nThe \"Generate OTP\" button should be enabled once the countdown timer reaches 0 ```js\nasync () => {\nconst button = document querySelector(\" container button#generate-otp-button\");\nbutton click();\nawait clock tickAsync(6000);\nassert isFalse(button",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11899,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-one-time-password-generator\\67c562286b29447da020d407.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "c3c1fa14bfe7d2d72febd4a0b4c6df9b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-one-time-password-generator\\67c562286b29447da020d407.md",
    "source_type": "git_repo",
    "title": "OTP Generator",
    "content": "} The \"Generate OTP\" button should be disabled while the countdown timer is running ```js async () => { try { const button = document querySelector(\" container button#generate-otp-button\"); button click(); clock tick(1); assert isTrue(button disabled); } finally { await clock runAllAsync(); } } ``` The \"Generate OTP\" button should be enabled once the countdown timer reaches 0 ```js async () => { const button = document querySelector(\" container button#generate-otp-button\"); button click(); await clock tickAsync(6000); assert isFalse(buttondisabled);\n}\n```\nWhen the countdown timer reaches 0, you should display the message OTP expired Click the button to generate a new OTP ```js\nasync () => {\nconst button = document querySelector(\" container button#generate-otp-button\");\nbutton click();\nawait clock tickAsync(6000);\nconst p = document querySelector(\" container p#otp-timer\");\nassert equal(p textContent trim(), \"OTP expired Click the button to generate a new OTP \");\n}\n```\nYou should export the OTPGenerator component js\nassert isFunction(window index OTPGenerator);\nUninstall the clock, ignore this test\njs\nasync () => {\nclock uninstall()\n}\n--seed--\n--seed-contents--\n```html\nOTP Generator\n```\n```css\n```\n```jsx\nconst { useState, useEffect, useRef } = React;\nexport const OTPGenerator = () => {};\n```\n--solutions--\n```html\nOTP Generator\n```\n```css\nbody {\nfont-family: 'Castoro Titling', cursive;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11899,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-one-time-password-generator\\67c562286b29447da020d407.md",
      "source_type": "git_repo"
    },
    "token_count": 325,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "0e290a417645c638d6800d8ce4b99f11",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-one-time-password-generator\\67c562286b29447da020d407.md",
    "source_type": "git_repo",
    "title": "OTP Generator",
    "content": "\"OTP expired Click the button to generate a new OTP \"); } ``` You should export the OTPGenerator component js assert isFunction(window index OTPGenerator); Uninstall the clock, ignore this test js async () => { clock uninstall() } --seed-- --seed-contents-- ```html OTP Generator ``` ```css ``` ```jsx const { useState, useEffect, useRef } = React; export const OTPGenerator = () => {}; ``` --solutions-- ```html OTP Generator ``` ```css body { font-family: 'Castoro Titling', cursive; }container {\ntext-align: center;\nmargin-top: 50px;\n}\nh1 {\nfont-size: 30px;\ncolor: #333;\n}\nh2 {\nfont-size: 25px;\ncolor: #555;\n}\np {\nfont-size: 16px;\ncolor: #888;\n}\nbutton {\npadding: 10px 20px;\nmargin-top: 20px;\nfont-size: 16px;\nborder: none;\nbackground-color: #383f59;\ncolor: white;\nborder-radius: 5px;\n}\nbutton:disabled {\nbackground-color:#57585c;\ncursor: not-allowed;\n}\nbutton:hover {\nbackground-color: #444;\n}\n```\n```jsx\nconst { useState, useEffect, useRef } = React;\nexport const OTPGenerator = () => {\nconst intervalId = useRef(null);\nconst [otp, setOtp] = useState(null);\nconst [secondsLeft, setSecondsLeft] = useState(5);\nconst [isCounting, setIsCounting] = useState(false);\nconst [hasGeneratedOtp, setHasGeneratedOtp] = useState(false);\nconst generateOTP = () => Math floor(100000 + Math random() * 900000);\nconst handleGenerateOtp = () => {\nsetOtp(generateOTP());\nsetSecondsLeft(5);\nsetIsCounting(true);\nsetHasGeneratedOtp(true);\nintervalId current = setInterval(() => {\nsetSecondsLeft(prevSeconds => prevSeconds - 1);\n}, 1000);\n};\nuseEffect(() => {\nif (secondsLeft === 0) {\nsetIsCounting(false);\nclearInterval(intervalId current);\n}\n}, [secondsLeft]);\nuseEffect(\n() => () => {\nclearInterval(intervalId current);\n},\n[]\n);\nreturn (\nOTP Generator\n{otp otp : \"Click 'Generate OTP' to get a code\"}\n{isCounting",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11899,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-one-time-password-generator\\67c562286b29447da020d407.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "0fb575042a498ceef3015e74d8aff6f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-one-time-password-generator\\67c562286b29447da020d407.md",
    "source_type": "git_repo",
    "title": "OTP Generator",
    "content": "const generateOTP = () => Math floor(100000 + Math random() * 900000); const handleGenerateOtp = () => { setOtp(generateOTP()); setSecondsLeft(5); setIsCounting(true); setHasGeneratedOtp(true); intervalId current = setInterval(() => { setSecondsLeft(prevSeconds => prevSeconds - 1); }, 1000); }; useEffect(() => { if (secondsLeft === 0) { setIsCounting(false); clearInterval(intervalId current); } }, [secondsLeft]); useEffect( () => () => { clearInterval(intervalId current); }, [] ); return ( OTP Generator {otp otp : \"Click 'Generate OTP' to get a code\"} {isCountingExpires in: ${secondsLeft} seconds\n: hasGeneratedOtp &&\n\"OTP expired Click the button to generate a new OTP \"}\nGenerate OTP\n);\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11899,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-one-time-password-generator\\67c562286b29447da020d407.md",
      "source_type": "git_repo"
    },
    "token_count": 180,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "f5c7c1571f006b04b343d4171492490f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-password-generator\\66f53dc2c5bd6a11d6c3282f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66f53dc2c5bd6a11d6c3282f\ntitle: Build a Password Generator App\nchallengeType: 26\ndashedName: lab-password-generator\n--description--\nIn this lab, you'll practice using functions by building a random password generator Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create a function called generatePassword that takes a parameter, indicating the length of generated password You can name the parameter whatever you like Your function should return a string which represents a randomly generated password You should use the following string and different Math methods to help you return a new string with random characters in it: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789 @#$%^&*() You should define a variable called password and assign it the result of calling the generatePassword function with a numeric argument that represents the desired password length You should have a console log that logs a single string made by concatenating the message Generated password: and the password variable separated by a space --hints--\nYou should have a generatePassword function with a parameter You can name the parameter whatever you like js\nassert isFunction(generatePassword);\nassert lengthOf(generatePassword, 1);\nYour generatePassword function should return a string js\nconst result = generatePassword(5);\nassert isString(result);\nYour generatePassword function should return a new string that is the correct length js\nconst length = 8;\nconst password = generatePassword(length);\nassert lengthOf(password, length);\nYour function should return a randomly generated password with valid characters js\nconst validChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789 @#$%^&*()\";\nconst password = generatePassword(10);\nfor (let char of password) {\nassert include(validChars, char);\n}\nYour function should return a new random string each time it is called js\nconst password1 = generatePassword(10);\nconst password2 = generatePassword(10);\nassert notStrictEqual(password1, password2);\nYou should have a password variable js\nassert isDefined(password);\nYour password variable should be a string js\nassert isString(password);\nYou should call the generatePassword function with a numeric argument and store the returned password in the password variable js\nassert isDefined(password);\nassert isString(password);\nassert match(password, /^[A-Za-z0-9",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3867,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-password-generator\\66f53dc2c5bd6a11d6c3282f.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f18fe47ddbf9142faee4a5fdbc5a25d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-password-generator\\66f53dc2c5bd6a11d6c3282f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{ assert include(validChars, char); } Your function should return a new random string each time it is called js const password1 = generatePassword(10); const password2 = generatePassword(10); assert notStrictEqual(password1, password2); You should have a password variable js assert isDefined(password); Your password variable should be a string js assert isString(password); You should call the generatePassword function with a numeric argument and store the returned password in the password variable js assert isDefined(password); assert isString(password); assert match(password, /^[A-Za-z0-9@#$%^&*()]+$/);\nconst length2 = 10;\nconst password3 = generatePassword(length2);\nassert lengthOf(password3, length2);\nassert equal(password3 length, generatePassword(length2) length);\nassert match(__helpers removeJSComments(code), /(let|const|var)\\s+password\\s*=\\s*generatePassword\\(\\d+\\)\\; /);\nYou should log a single string combining Generated password: and the password separated by a single space using + or a template literal js\nconst cleanCode = __helpers removeJSComments(code);\nconst condition1 = /console\\ log\\(\\s*[\"']Generated\\s+password:\\s*[\"']\\s*\\+\\s*password\\s*\\); /gm test(cleanCode);\nconst condition2 = /console\\ log\\(\\s*`Generated\\s+password:\\s*\\$\\{password\\}`\\s*\\); /gm test(cleanCode);\nassert isTrue(condition1 || condition2);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nconst generatePassword = (length) => {\nconst chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789 @#$%^&*()\";\nlet password = \"\";\nfor (let i = 0; i < length; i++) {\nconst randomIndex = Math floor(Math random() * chars length);\npassword += chars[randomIndex];\n}\nreturn password;\n};\nconst password = generatePassword(12);\nconsole log(Generated password: ${password});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3867,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-password-generator\\66f53dc2c5bd6a11d6c3282f.md",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1ee166f83af4779f8b5c99c928346414",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-permutation-generator\\66fe4f33a2cc9b33f4d5cd9b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66fe4f33a2cc9b33f4d5cd9b\ntitle: Build a Permutation Generator\nchallengeType: 26\ndashedName: build-a-permutation-generator\n--description--\nIn this lab, you will build a permutation generator that will take a string and return all possible permutations of the characters in the string For example, the possible permutations of the string cat are cat, cta, act, atc, tac, and tca Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create a function named permuteString The permuteString function should take three parameters- a string, a prefix value and an empty array for storing and returning the results The prefix value would accumulate characters to form a permutation Inside the function, you should check if the length of the passed string is 0 If it is, push the current prefix to the results and return the results Iterate over each character in the input string and for each iteration, remove the current character from the string and call the permuteString function recursively with updated arguments to build the remaining permutations You should return the final results array You should ensure that the permutations are unique by removing duplicates --hints--\nYou should have a function permuteString js\nassert isFunction(permuteString);\nYou should use recursion in your permuteString function js\nassert match(permuteString toString(), /permuteString\\s*\\(/);\npermuteString(\"far\") should return [ \"far\", \"fra\", \"afr\", \"arf\", \"rfa\", \"raf\" ] js\nassert sameMembers(permuteString(\"far\"), [ \"far\", \"fra\", \"afr\", \"arf\", \"rfa\", \"raf\" ]);\npermuteString(\"fcc\") should return [ \"fcc\", \"cfc\", \"ccf\" ] js\nassert sameMembers(permuteString(\"fcc\"), [ \"fcc\", \"cfc\", \"ccf\" ]);\npermuteString(\"p\") should return [ \"p\" ] js\nassert deepStrictEqual(permuteString(\"p\"), [\"p\"]);\npermuteString(\"\") should return [\"\"] ```js\nlet emptyArr= permuteString(\"\");\n// 1 because the empty string is being pushed and is a permutation of itself\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4041,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-permutation-generator\\66fe4f33a2cc9b33f4d5cd9b.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "9df07c00272922d011eddfb032a5c8a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-permutation-generator\\66fe4f33a2cc9b33f4d5cd9b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert match(permuteString toString(), /permuteString\\s*\\(/); permuteString(\"far\") should return [ \"far\", \"fra\", \"afr\", \"arf\", \"rfa\", \"raf\" ] js assert sameMembers(permuteString(\"far\"), [ \"far\", \"fra\", \"afr\", \"arf\", \"rfa\", \"raf\" ]); permuteString(\"fcc\") should return [ \"fcc\", \"cfc\", \"ccf\" ] js assert sameMembers(permuteString(\"fcc\"), [ \"fcc\", \"cfc\", \"ccf\" ]); permuteString(\"p\") should return [ \"p\" ] js assert deepStrictEqual(permuteString(\"p\"), [\"p\"]); permuteString(\"\") should return [\"\"] ```js let emptyArr= permuteString(\"\"); // 1 because the empty string is being pushed and is a permutation of itself assertlengthOf(emptyArr, 1);\n```\npermuteString(\"walk\") should return [\"walk\", \"wakl\", \"wlak\", \"wlka\", \"wkla\", \"wkal\", \"awlk\", \"awkl\", \"alwk\", \"alkw\", \"aklw\", \"akwl\", \"lawk\", \"lakw\", \"lwak\", \"lwka\", \"lkaw\", \"lkwa\", \"kawl\", \"kalw\", \"kwal\", \"kwla\", \"klaw\", \"klwa\"] ` js\nassert sameMembers(permuteString(\"walk\"), [\"walk\", \"wakl\", \"wlak\", \"wlka\", \"wkla\", \"wkal\", \"awlk\", \"awkl\", \"alwk\", \"alkw\", \"aklw\", \"akwl\", \"lawk\", \"lakw\", \"lwak\", \"lwka\", \"lkaw\", \"lkwa\", \"kawl\", \"kalw\", \"kwal\", \"kwla\", \"klaw\", \"klwa\"]);\npermuteString should return the correct results ```js\n// tests to prevent hard coding\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4041,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-permutation-generator\\66fe4f33a2cc9b33f4d5cd9b.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "717bfbf0e8fdc72cedcdf667669c5b56",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-permutation-generator\\66fe4f33a2cc9b33f4d5cd9b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a permutation of itself assertlengthOf(emptyArr, 1); ``` permuteString(\"walk\") should return [\"walk\", \"wakl\", \"wlak\", \"wlka\", \"wkla\", \"wkal\", \"awlk\", \"awkl\", \"alwk\", \"alkw\", \"aklw\", \"akwl\", \"lawk\", \"lakw\", \"lwak\", \"lwka\", \"lkaw\", \"lkwa\", \"kawl\", \"kalw\", \"kwal\", \"kwla\", \"klaw\", \"klwa\"] ` js assert sameMembers(permuteString(\"walk\"), [\"walk\", \"wakl\", \"wlak\", \"wlka\", \"wkla\", \"wkal\", \"awlk\", \"awkl\", \"alwk\", \"alkw\", \"aklw\", \"akwl\", \"lawk\", \"lakw\", \"lwak\", \"lwka\", \"lkaw\", \"lkwa\", \"kawl\", \"kalw\", \"kwal\", \"kwla\", \"klaw\", \"klwa\"]); permuteString should return the correct results ```js // tests to prevent hard coding assertsameMembers(permuteString(\"road\"), [ \"road\",\n\"roda\",\n\"raod\",\n\"rado\",\n\"rdoa\",\n\"rdao\",\n\"orad\",\n\"orda\",\n\"oard\",\n\"oadr\",\n\"odra\",\n\"odar\",\n\"arod\",\n\"ardo\",\n\"aord\",\n\"aodr\",\n\"adro\",\n\"ador\",\n\"droa\",\n\"drao\",\n\"dora\",\n\"doar\",\n\"daro\",\n\"daor\" ]);\nassert sameMembers(permuteString(\"fog\"), [ \"fog\",\n\"fgo\",\n\"ofg\",\n\"ogf\",\n\"gfo\",\n\"gof\" ]);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4041,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-permutation-generator\\66fe4f33a2cc9b33f4d5cd9b.md",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "60f4dd10582e17c7d5b9e57f9989f448",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-permutation-generator\\66fe4f33a2cc9b33f4d5cd9b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "sameMembers(permuteString(\"walk\"), [\"walk\", \"wakl\", \"wlak\", \"wlka\", \"wkla\", \"wkal\", \"awlk\", \"awkl\", \"alwk\", \"alkw\", \"aklw\", \"akwl\", \"lawk\", \"lakw\", \"lwak\", \"lwka\", \"lkaw\", \"lkwa\", \"kawl\", \"kalw\", \"kwal\", \"kwla\", \"klaw\", \"klwa\"]); permuteString should return the correct results ```js // tests to prevent hard coding assertsameMembers(permuteString(\"road\"), [ \"road\", \"roda\", \"raod\", \"rado\", \"rdoa\", \"rdao\", \"orad\", \"orda\", \"oard\", \"oadr\", \"odra\", \"odar\", \"arod\", \"ardo\", \"aord\", \"aodr\", \"adro\", \"ador\", \"droa\", \"drao\", \"dora\", \"doar\", \"daro\", \"daor\" ]); assert sameMembers(permuteString(\"fog\"), [ \"fog\", \"fgo\", \"ofg\", \"ogf\", \"gfo\", \"gof\" ]); assertsameMembers(permuteString(\"bird\"), [ \"bird\",\n\"bidr\",\n\"brid\",\n\"brdi\",\n\"bdir\",\n\"bdri\",\n\"ibrd\",\n\"ibdr\",\n\"irbd\",\n\"irdb\",\n\"idbr\",\n\"idrb\",\n\"rbid\",\n\"rbdi\",\n\"ribd\",\n\"ridb\",\n\"rdbi\",\n\"rdib\",\n\"dbir\",\n\"dbri\",\n\"dibr\",\n\"dirb\",\n\"drbi\",\n\"drib\" ]);\n```\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nconst permuteString = (str, prefix = \"\", result = []) => {\nif (str length === 0) {\nresult push(prefix);\nreturn result;\n}\n// Sort the string initially to group duplicates\nconst sortedStr = str split(\"\") sort() join(\"\");\nfor (let i = 0; i < sortedStr length; i++) {\nif (i > 0 && sortedStr[i] === sortedStr[i - 1]) {\n// Skip duplicate characters\ncontinue;\n}\nconst rem = sortedStr slice(0, i) + sortedStr",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4041,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-permutation-generator\\66fe4f33a2cc9b33f4d5cd9b.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "5628b53f25765e8eac4fb91f36f9f288",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-permutation-generator\\66fe4f33a2cc9b33f4d5cd9b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--solutions-- ```js const permuteString = (str, prefix = \"\", result = []) => { if (str length === 0) { result push(prefix); return result; } // Sort the string initially to group duplicates const sortedStr = str split(\"\") sort() join(\"\"); for (let i = 0; i < sortedStr length; i++) { if (i > 0 && sortedStr[i] === sortedStr[i - 1]) { // Skip duplicate characters continue; } const rem = sortedStr slice(0, i) + sortedStrslice(i + 1);\npermuteString(rem, prefix + sortedStr[i], result);\n}\nreturn result;\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4041,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-permutation-generator\\66fe4f33a2cc9b33f4d5cd9b.md",
      "source_type": "git_repo"
    },
    "token_count": 142,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "6f7e96bf50106c56c67b519276b847b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-photography-exhibit\\686e64be3cd9db25282a956d.md",
    "source_type": "git_repo",
    "title": "Photography Exhibit",
    "content": "id: 686e64be3cd9db25282a956d\ntitle: Design a Photography Exhibit\nchallengeType: 25\ndashedName: lab-photography-exhibit\ndemoType: onClick\n--description--\nIn this lab, you'll create a photography exhibit layout using Tailwind CSS utility classes For the images, you can use the following URLs if you like:\nhttps://cdn freecodecamp org/curriculum/labs/colosseo jpg\nhttps://cdn freecodecamp org/curriculum/labs/alps jpg\nhttps://cdn freecodecamp org/curriculum/labs/sea jpg\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have an element with a class called main-container Your main-container element should also have the following Tailwind CSS utility classes:\nthe correct utility class for creating a CSS Grid container a utility class for defining the number of columns within the grid You should use the utility class that utilizes the fixed number of columns Ex grid-cols-<number> a utility class for setting the row and column gap for the grid items Inside your main-container element, there should be at least three elements each with a class called card Each of your card elements should also have the following Tailwind CSS utility classes:\na utility class for setting a rounded border of your choice a utility class for setting padding of your choice You should use this format p-<number> Inside each of your card elements, you should have the following elements:\nan image element with src and alt attributes an element with the class called subheading an element with the class called description Each of your image elements should have a utility class for setting a rounded border of your choice Each of your subheading elements should use utility classes to set the font weight and size of your choosing Each of your description elements should use a utility class to set the font size of your choosing --hints--\nYou should have an element with a class called main-container js\nassert exists(document querySelector(\" main-container\"));\nYour main-container element should use the correct Tailwind CSS utility class for creating a CSS Grid container js\nconst mainContainer = document querySelector(\" main-container\");\nassert isTrue(mainContainer classList contains(\"grid\"));\nYour main-container element should use a utility class for defining the number of columns within the grid js\nconst mainContainer = document querySelector(\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12481,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-photography-exhibit\\686e64be3cd9db25282a956d.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "ab1f2e08fb7bdb28ce9f0a50a1c20639",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-photography-exhibit\\686e64be3cd9db25282a956d.md",
    "source_type": "git_repo",
    "title": "Photography Exhibit",
    "content": "class to set the font size of your choosing --hints-- You should have an element with a class called main-container js assert exists(document querySelector(\" main-container\")); Your main-container element should use the correct Tailwind CSS utility class for creating a CSS Grid container js const mainContainer = document querySelector(\" main-container\"); assert isTrue(mainContainer classList contains(\"grid\")); Your main-container element should use a utility class for defining the number of columns within the grid js const mainContainer = document querySelector(\"main-container\");\n// Grid classes can vary, so this check is for the presence of any grid-cols class\nconst hasGridCols = [ mainContainer classList] some(className => className startsWith(\"grid-cols-\"));\nassert isTrue(hasGridCols);\nYour main-container element should use a utility class for setting the row and column gap for the grid items ```js\nconst mainContainer = document querySelector(\" main-container\");\n// Check for any gap class including gap-x and gap-y\nconst hasGap = [ mainContainer classList] some(c => c startsWith(\"gap-\")) ||\n(classList some(c => c startsWith(\"gap-x-\")) &&\nclassList some(c => c startsWith(\"gap-y-\")));\nassert isTrue(hasGap);\n```\nYour main-container element should contain at least three elements each with a class called card js\nconst cards = document querySelectorAll(\" main-container card\");\nassert isAtLeast(cards length, 3);\nEach of your card elements should have a utility class for setting a rounded border ```js\nconst cards = document querySelectorAll(\" main-container card\");\nassert isNotEmpty(cards);\nconst predefinedRoundedCorners = [\n\"rounded-none\",\n\"rounded-sm\",\n\"rounded\",\n\"rounded-md\",\n\"rounded-lg\",\n\"rounded-xl\",\n\"rounded-2xl\",\n\"rounded-3xl\",\n\"rounded-full\"\n];\ncards forEach(card => {\nconst hasRoundedCorners = predefinedRoundedCorners some(corner => card classList contains(corner));\nassert isTrue(hasRoundedCorners);\n})\n```\nEach of your card elements should have a utility class for setting padding js\nconst cards = document querySelectorAll(\" main-container card\");\nassert isNotEmpty(cards);\nconst hasPadding = [ cards] every(card => {\nreturn [ card classList] some(c => c startsWith(\"p-\"));\n});\nassert isTrue(hasPadding);\nEach of your card elements should contain an image element js\nconst images = document querySelectorAll(\" main-container card img\");\nassert isAtLeast(images",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12481,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-photography-exhibit\\686e64be3cd9db25282a956d.md",
      "source_type": "git_repo"
    },
    "token_count": 514,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "ca0c60013ae8df0cb5e09fe35535ffdb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-photography-exhibit\\686e64be3cd9db25282a956d.md",
    "source_type": "git_repo",
    "title": "Photography Exhibit",
    "content": "const hasRoundedCorners = predefinedRoundedCorners some(corner => card classList contains(corner)); assert isTrue(hasRoundedCorners); }) ``` Each of your card elements should have a utility class for setting padding js const cards = document querySelectorAll(\" main-container card\"); assert isNotEmpty(cards); const hasPadding = [ cards] every(card => { return [ card classList] some(c => c startsWith(\"p-\")); }); assert isTrue(hasPadding); Each of your card elements should contain an image element js const images = document querySelectorAll(\" main-container card img\"); assert isAtLeast(imageslength, 3);\nEach of your img elements should have a src attribute js\nconst images = document querySelectorAll(\" main-container card img\");\nassert isAtLeast(images length, 3);\nimages forEach(img => assert isTrue(img hasAttribute(\"src\")));\nimages forEach(img => assert isTrue(img getAttribute(\"src\") length > 0));\nEach of your img elements should have an alt attribute js\nconst images = document querySelectorAll(\" main-container card img\");\nassert isAtLeast(images length, 3);\nimages forEach(img => assert isTrue(img hasAttribute(\"alt\")));\nimages forEach(img => assert isTrue(img getAttribute(\"alt\") length > 0));\nEach of your card elements should contain an element with the class called subheading js\nconst subheadings = document querySelectorAll(\" main-container card subheading\");\nassert isAtLeast(subheadings length, 3);\nEach of your subheading elements should have some text content ```js\nconst subheadings = document querySelectorAll(\" main-container card subheading\");\n// Ensure we are not dealing with an empty NodeList\nassert isNotEmpty(subheadings);\nsubheadings forEach(subheading => {\nassert isNotEmpty(subheading textContent trim());\n});\n```\nEach of your card elements should contain an element with the class called description js\nconst descriptions = document querySelectorAll(\" main-container card description\");\nassert isAtLeast(descriptions length, 3);\nEach of your description elements should have some text content ```js\nconst descriptions = document querySelectorAll(\" main-container card description\");\n// Ensure we are not dealing with an empty NodeList\nassert isNotEmpty(descriptions);\ndescriptions forEach(description => {\nassert isNotEmpty(description textContent trim());\n});\n```\nEach of your img elements should have a utility class for setting a rounded border ```js\nconst images = document querySelectorAll(\" main-container card img\");\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12481,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-photography-exhibit\\686e64be3cd9db25282a956d.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "5400f2ac80f92f27f745f7acfeeb5f8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-photography-exhibit\\686e64be3cd9db25282a956d.md",
    "source_type": "git_repo",
    "title": "Photography Exhibit",
    "content": "= document querySelectorAll(\" main-container card description\"); assert isAtLeast(descriptions length, 3); Each of your description elements should have some text content ```js const descriptions = document querySelectorAll(\" main-container card description\"); // Ensure we are not dealing with an empty NodeList assert isNotEmpty(descriptions); descriptions forEach(description => { assert isNotEmpty(description textContent trim()); }); ``` Each of your img elements should have a utility class for setting a rounded border ```js const images = document querySelectorAll(\" main-container card img\"); assertisNotEmpty(images);\nconst predefinedRoundedCorners = [\n\"rounded-none\",\n\"rounded-sm\",\n\"rounded\",\n\"rounded-md\",\n\"rounded-lg\",\n\"rounded-xl\",\n\"rounded-2xl\",\n\"rounded-3xl\",\n\"rounded-full\"\n];\nimages forEach(img => {\nconst hasRoundedCorners = predefinedRoundedCorners some(corner => img classList contains(corner));\nassert isTrue(hasRoundedCorners);\n});\n```\nEach of your subheading elements should use utility classes to set the font weight ```js\nconst subheadings = document querySelectorAll(\" main-container card subheading\");\nassert isNotEmpty(subheadings);\nconst predefinedFontWeights = [\n\"font-thin\",\n\"font-extralight\",\n\"font-light\",\n\"font-normal\",\n\"font-medium\",\n\"font-semibold\",\n\"font-bold\",\n\"font-extrabold\",\n\"font-black\"\n];\nsubheadings forEach(subheading => {\nconst hasFontWeight = predefinedFontWeights some(weight => subheading classList contains(weight));\nassert isTrue(hasFontWeight);\n});\n```\nEach of your subheading elements should use utility classes to set the font size ```js\nconst subheadings = document querySelectorAll(\" main-container card subheading\");\nassert isNotEmpty(subheadings);\nconst predefinedSizes = [\n\"text-xs\",\n\"text-sm\",\n\"text-base\",\n\"text-lg\",\n\"text-xl\",\n\"text-2xl\",\n\"text-3xl\",\n\"text-4xl\",\n\"text-5xl\",\n\"text-6xl\",\n\"text-7xl\",\n\"text-8xl\",\n\"text-9xl\"\n];\nsubheadings forEach(subheading => {\nconst hasFontSize = predefinedSizes some(size => subheading classList contains(size));\nassert isTrue(hasFontSize);\n});\n```\nEach of your description elements should use a utility class to set the font size ```js\nconst descriptions = document querySelectorAll(\" description\");\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12481,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-photography-exhibit\\686e64be3cd9db25282a956d.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "83205010c55aa5d9b6c4ddb35525254a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-photography-exhibit\\686e64be3cd9db25282a956d.md",
    "source_type": "git_repo",
    "title": "Photography Exhibit",
    "content": "utility classes to set the font size ```js const subheadings = document querySelectorAll(\" main-container card subheading\"); assert isNotEmpty(subheadings); const predefinedSizes = [ \"text-xs\", \"text-sm\", \"text-base\", \"text-lg\", \"text-xl\", \"text-2xl\", \"text-3xl\", \"text-4xl\", \"text-5xl\", \"text-6xl\", \"text-7xl\", \"text-8xl\", \"text-9xl\" ]; subheadings forEach(subheading => { const hasFontSize = predefinedSizes some(size => subheading classList contains(size)); assert isTrue(hasFontSize); }); ``` Each of your description elements should use a utility class to set the font size ```js const descriptions = document querySelectorAll(\" description\"); assertisNotEmpty(descriptions);\nconst predefinedSizes = [\n\"text-xs\",\n\"text-sm\",\n\"text-base\",\n\"text-lg\",\n\"text-xl\",\n\"text-2xl\",\n\"text-3xl\",\n\"text-4xl\",\n\"text-5xl\",\n\"text-6xl\",\n\"text-7xl\",\n\"text-8xl\",\n\"text-9xl\"\n];\ndescriptions forEach(description => {\nconst hasFontSize = predefinedSizes some(size => description classList contains(size));\nassert isTrue(hasFontSize);\n});\n```\n--seed--\n--seed-contents--\n```html\nPhotography Exhibit\n```\n--solutions--\n```html\nPhotography Exhibit\nPhotography Exhibit\nColosseum, Rome\nThere is so much history and beauty The light hits it just right Like\nView Details\nThe Alps\nThe mountains go on forever and the view is breathtaking Like\nView Details\nSeascape\nThe water was still, the air was cool and the feeling is pure peace Like\nView Details\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12481,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-photography-exhibit\\686e64be3cd9db25282a956d.md",
      "source_type": "git_repo"
    },
    "token_count": 362,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "28ca8806e21099626fca65c447cca4f8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
    "source_type": "git_repo",
    "title": "Palindrome Checker",
    "content": "id: 657bdc55a322aae1eac3838f\ntitle: Build a Palindrome Checker\nchallengeType: 25\ndashedName: build-a-palindrome-checker\ndemoType: onClick\n--description--\nA palindrome is a word or phrase that can be read the same way forwards and backwards, ignoring punctuation, case, and spacing Note: You'll need to remove all non-alphanumeric characters (punctuation, spaces and symbols) and turn everything into the same case (lower or upper case) in order to check for palindromes Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have an input element with an id of \"text-input\" You should have a button element with an id of \"check-btn\" You should have a div, span or p element with an id of \"result\" When you click on the #check-btn element without entering a value into the #text-input element, an alert should appear with the text Please input a value When the #text-input element only contains the letter A and the #check-btn element is clicked, the #result element should contain the text A is a palindrome When the #text-input element contains the text eye and the #check-btn element is clicked, the #result element should contain the text eye is a palindrome When the #text-input element contains the text _eye and the #check-btn element is clicked, the #result element should contain the text _eye is a palindrome When the #text-input element contains the text race car and the #check-btn element is clicked, the #result element should contain the text race car is a palindrome When the #text-input element contains the text not a palindrome and the #check-btn element is clicked, the #result element should contain the text not a palindrome is not a palindrome When the #text-input element contains the text A man, a plan, a canal Panama and the #check-btn element is clicked, the #result element should contain the text A man, a plan, a canal Panama is a palindrome When the #text-input element contains the text never odd or even and the #check-btn element is clicked, the #result element should contain the text never odd or even is a palindrome",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 12
  },
  {
    "id": "17a8c139bc8f90c01ed2fe5464fc65d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
    "source_type": "git_repo",
    "title": "Palindrome Checker",
    "content": "text not a palindrome is not a palindrome When the #text-input element contains the text A man, a plan, a canal Panama and the #check-btn element is clicked, the #result element should contain the text A man, a plan, a canal Panama is a palindrome When the #text-input element contains the text never odd or even and the #check-btn element is clicked, the #result element should contain the text never odd or even is a palindromeWhen the #text-input element contains the text nope and the #check-btn element is clicked, the #result element should contain the text nope is not a palindrome When the #text-input element contains the text almostomla and the #check-btn element is clicked, the #result element should contain the text almostomla is not a palindrome When the #text-input element contains the text My age is 0, 0 si ega ym and the #check-btn element is clicked, the #result element should contain the text My age is 0, 0 si ega ym is a palindrome When the #text-input element contains the text 1 eye for of 1 eye and the #check-btn element is clicked, the #result element should contain the text 1 eye for of 1 eye is not a palindrome When the #text-input element contains the text 0_0 (: /-\\ :) 0-0 and the #check-btn element is clicked, the #result element should contain the text 0_0 (: /-\\ :) 0-0 is a palindrome When the #text-input element contains the text five|\\_/|four and the #check-btn element is clicked, the #result element should contain the text five|\\_/|four is not a palindrome --hints--\nYou should have an input element with an id of \"text-input\" js\nconst el = document getElementById('text-input');\nassert strictEqual(el nodeName toLowerCase(), 'input');\nYou should have a button element with an id of \"check-btn\" js\nconst el = document getElementById('check-btn');\nassert strictEqual(el nodeName toLowerCase(), 'button');\nYou should have a div, span, or p element with an id of \"result\" js\nconst el = document getElementById('result');\nassert oneOf(el nodeName",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 1,
    "total_chunks": 12
  },
  {
    "id": "e16bb8d1abdbac457d158cdcf3f76e1a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
    "source_type": "git_repo",
    "title": "Palindrome Checker",
    "content": "contain the text five|\\_/|four is not a palindrome --hints-- You should have an input element with an id of \"text-input\" js const el = document getElementById('text-input'); assert strictEqual(el nodeName toLowerCase(), 'input'); You should have a button element with an id of \"check-btn\" js const el = document getElementById('check-btn'); assert strictEqual(el nodeName toLowerCase(), 'button'); You should have a div, span, or p element with an id of \"result\" js const el = document getElementById('result'); assert oneOf(el nodeNametoLowerCase(), ['div', 'span', 'p']);\nWhen you click on the #check-btn element without entering a value into the #text-input element, an alert should appear with the text Please input a value ```js\nconst inputEl = document getElementById('text-input');\nconst checkBtn = document getElementById('check-btn');\nlet alertMessage;\nwindow alert = (message) => alertMessage = message; // Override alert and store message\ninputEl value = '';\ninputEl dispatchEvent(new Event('change'))\ncheckBtn click();\nassert strictEqual(alertMessage trim() replace(/[ , ]+$/g, '') toLowerCase(), 'please input a value');\n```\nWhen the #text-input element only contains the letter A and the #check-btn element is clicked, the #result element should contain the text A is a palindrome ```js\nconst inputEl = document getElementById('text-input');\nconst checkBtn = document getElementById('check-btn');\nconst resultEl = document getElementById('result');\ninputEl value = 'A';\ninputEl dispatchEvent(new Event('change'))\ncheckBtn click();\nassert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '') toLowerCase(), 'a is a palindrome');\n```\nWhen the #text-input element contains the text eye and the #check-btn element is clicked, the #result element should contain the text eye is a palindrome ```js\nconst inputEl = document getElementById('text-input');\nconst checkBtn = document getElementById('check-btn');\nconst resultEl = document getElementById('result');\ninputEl value = 'eye';\ninputEl dispatchEvent(new Event('change'))\ncheckBtn click();\nassert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 2,
    "total_chunks": 12
  },
  {
    "id": "2819f39bbe6683c87b37c5ce71f925ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
    "source_type": "git_repo",
    "title": "Palindrome Checker",
    "content": "dispatchEvent(new Event('change')) checkBtn click(); assert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '') toLowerCase(), 'a is a palindrome'); ``` When the #text-input element contains the text eye and the #check-btn element is clicked, the #result element should contain the text eye is a palindrome ```js const inputEl = document getElementById('text-input'); const checkBtn = document getElementById('check-btn'); const resultEl = document getElementById('result'); inputEl value = 'eye'; inputEl dispatchEvent(new Event('change')) checkBtn click(); assert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '')toLowerCase(), 'eye is a palindrome');\n```\nWhen the #text-input element contains the text _eye and the #check-btn element is clicked, the #result element should contain the text _eye is a palindrome ```js\nconst inputEl = document getElementById('text-input');\nconst checkBtn = document getElementById('check-btn');\nconst resultEl = document getElementById('result');\ninputEl value = '_eye';\ninputEl dispatchEvent(new Event('change'))\ncheckBtn click();\nassert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '') toLowerCase(), '_eye is a palindrome');\n```\nWhen the #text-input element contains the text race car and the #check-btn element is clicked, the #result element should contain the text race car is a palindrome ```js\nconst inputEl = document getElementById('text-input');\nconst checkBtn = document getElementById('check-btn');\nconst resultEl = document getElementById('result');\ninputEl value = 'race car';\ninputEl dispatchEvent(new Event('change'))\ncheckBtn click();\nassert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '') toLowerCase(), 'race car is a palindrome');\n```\nWhen the #text-input element contains the text not a palindrome and the #check-btn element is clicked, the #result element should contain the text not a palindrome is not a palindrome ```js\nconst inputEl = document getElementById('text-input');\nconst checkBtn = document getElementById('check-btn');\nconst resultEl = document getElementById('result');\ninputEl value = 'not a palindrome';\ninputEl dispatchEvent(new Event('change'))\ncheckBtn click();\nassert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 3,
    "total_chunks": 12
  },
  {
    "id": "8da11919df5d426c9bbe347a32478abb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
    "source_type": "git_repo",
    "title": "Palindrome Checker",
    "content": "replace(/[ , ]+$/g, '') toLowerCase(), 'race car is a palindrome'); ``` When the #text-input element contains the text not a palindrome and the #check-btn element is clicked, the #result element should contain the text not a palindrome is not a palindrome ```js const inputEl = document getElementById('text-input'); const checkBtn = document getElementById('check-btn'); const resultEl = document getElementById('result'); inputEl value = 'not a palindrome'; inputEl dispatchEvent(new Event('change')) checkBtn click(); assert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '')toLowerCase(), 'not a palindrome is not a palindrome');\n```\nWhen the #text-input element contains the text A man, a plan, a canal Panama and the #check-btn element is clicked, the #result element should contain the text A man, a plan, a canal Panama is a palindrome ```js\nconst inputEl = document getElementById('text-input');\nconst checkBtn = document getElementById('check-btn');\nconst resultEl = document getElementById('result');\ninputEl value = 'A man, a plan, a canal Panama';\ninputEl dispatchEvent(new Event('change'))\ncheckBtn click();\nassert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '') toLowerCase(), 'a man, a plan, a canal panama is a palindrome');\n```\nWhen the #text-input element contains the text never odd or even and the #check-btn element is clicked, the #result element should contain the text never odd or even is a palindrome ```js\nconst inputEl = document getElementById('text-input');\nconst checkBtn = document getElementById('check-btn');\nconst resultEl = document getElementById('result');\ninputEl value = 'never odd or even';\ninputEl dispatchEvent(new Event('change'))\ncheckBtn click();\nassert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '') toLowerCase(), 'never odd or even is a palindrome');\n```\nWhen the #text-input element contains the text nope and the #check-btn element is clicked, the #result element should contain the text nope is not a palindrome ```js\nconst inputEl = document getElementById('text-input');\nconst checkBtn = document getElementById('check-btn');\nconst resultEl = document getElementById('result');\ninputEl value = 'nope';\ninputEl",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 4,
    "total_chunks": 12
  },
  {
    "id": "2d400f5cb6da1027a7f5096ccfa856c6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
    "source_type": "git_repo",
    "title": "Palindrome Checker",
    "content": "inputEl value = 'never odd or even'; inputEl dispatchEvent(new Event('change')) checkBtn click(); assert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '') toLowerCase(), 'never odd or even is a palindrome'); ``` When the #text-input element contains the text nope and the #check-btn element is clicked, the #result element should contain the text nope is not a palindrome ```js const inputEl = document getElementById('text-input'); const checkBtn = document getElementById('check-btn'); const resultEl = document getElementById('result'); inputEl value = 'nope'; inputEldispatchEvent(new Event('change'))\ncheckBtn click();\nassert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '') toLowerCase(), 'nope is not a palindrome');\n```\nWhen the #text-input element contains the text almostomla and the #check-btn element is clicked, the #result element should contain the text almostomla is not a palindrome ```js\nconst inputEl = document getElementById('text-input');\nconst checkBtn = document getElementById('check-btn');\nconst resultEl = document getElementById('result');\ninputEl value = 'almostomla';\ninputEl dispatchEvent(new Event('change'))\ncheckBtn click();\nassert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '') toLowerCase(), 'almostomla is not a palindrome');\n```\nWhen the #text-input element contains the text My age is 0, 0 si ega ym and the #check-btn element is clicked, the #result element should contain the text My age is 0, 0 si ega ym is a palindrome ```js\nconst inputEl = document getElementById('text-input');\nconst checkBtn = document getElementById('check-btn');\nconst resultEl = document getElementById('result');\ninputEl value = 'My age is 0, 0 si ega ym ';\ninputEl dispatchEvent(new Event('change'))\ncheckBtn click();\nassert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '') toLowerCase(), 'my age is 0, 0 si ega ym is a palindrome');\n```\nWhen the #text-input element contains the text 1 eye for of 1 eye and the #check-btn element is clicked, the #result element should contain the text 1 eye for of 1 eye",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 5,
    "total_chunks": 12
  },
  {
    "id": "10a332ae34d56408db036713cff696c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
    "source_type": "git_repo",
    "title": "Palindrome Checker",
    "content": "getElementById('check-btn'); const resultEl = document getElementById('result'); inputEl value = 'My age is 0, 0 si ega ym '; inputEl dispatchEvent(new Event('change')) checkBtn click(); assert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '') toLowerCase(), 'my age is 0, 0 si ega ym is a palindrome'); ``` When the #text-input element contains the text 1 eye for of 1 eye and the #check-btn element is clicked, the #result element should contain the text 1 eye for of 1 eyeis not a palindrome ```js\nconst inputEl = document getElementById('text-input');\nconst checkBtn = document getElementById('check-btn');\nconst resultEl = document getElementById('result');\ninputEl value = '1 eye for of 1 eye ';\ninputEl dispatchEvent(new Event('change'))\ncheckBtn click();\nassert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '') toLowerCase(), '1 eye for of 1 eye is not a palindrome');\n```\nWhen the #text-input element contains the text 0_0 (: /-\\ :) 0-0 and the #check-btn element is clicked, the #result element should contain the text 0_0 (: /-\\ :) 0-0 is a palindrome ```js\nconst inputEl = document getElementById('text-input');\nconst checkBtn = document getElementById('check-btn');\nconst resultEl = document getElementById('result');\ninputEl value = '0_0 (: /-\\ :) 0-0';\ninputEl dispatchEvent(new Event('change'))\ncheckBtn click();\nassert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '') toLowerCase(), '0_0 (: /-\\ :) 0-0 is a palindrome');\n```\nWhen the #text-input element contains the text five|\\_/|four and the #check-btn element is clicked, the #result element should contain the text five|\\_/|four is not a palindrome ```js\nconst inputEl = document getElementById('text-input');\nconst checkBtn = document getElementById('check-btn');\nconst resultEl = document getElementById('result');\ninputEl value = 'five|_/|four';\ninputEl dispatchEvent(new Event('change'))\ncheckBtn click();\nassert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 6,
    "total_chunks": 12
  },
  {
    "id": "d408da589db8e020f386f8137a6df197",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
    "source_type": "git_repo",
    "title": "Palindrome Checker",
    "content": "strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '') toLowerCase(), '0_0 (: /-\\ :) 0-0 is a palindrome'); ``` When the #text-input element contains the text five|\\_/|four and the #check-btn element is clicked, the #result element should contain the text five|\\_/|four is not a palindrome ```js const inputEl = document getElementById('text-input'); const checkBtn = document getElementById('check-btn'); const resultEl = document getElementById('result'); inputEl value = 'five|_/|four'; inputEl dispatchEvent(new Event('change')) checkBtn click(); assert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '')toLowerCase(), 'five|_/|four is not a palindrome');\n```\nWhen the #text-input element contains an alphanumeric palindrome, the #result element should correctly identify it as a palindrome ```js\nconst inputEl = document getElementById('text-input');\nconst checkBtn = document getElementById('check-btn');\nconst resultEl = document getElementById('result');\nconst characters = 'abcdefghijklmnopqrstuvwxyz0123456789';\nconst charactersLength = characters length;\nconst firstLetter = characters charAt(Math floor(Math random() * charactersLength));\nconst secondLetter = characters charAt(Math floor(Math random() * charactersLength));\nconst thirdLetter = characters charAt(Math floor(Math random() * charactersLength));\nconst fourthLetter = characters charAt(Math floor(Math random() * charactersLength));\nconst phrase = firstLetter + secondLetter + thirdLetter + fourthLetter + fourthLetter + thirdLetter + secondLetter + firstLetter;\ninputEl value = phrase;\ninputEl dispatchEvent(new Event('change'))\ncheckBtn click();\nassert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '') toLowerCase(), phrase + ' is a palindrome');\n```\nWhen the #text-input element contains a random sequence of alphanumeric characters that is not a palindrome, the #result element should say it is not a palindrome ```js\nconst inputEl = document getElementById('text-input');\nconst checkBtn = document getElementById('check-btn');\nconst resultEl = document getElementById('result');\nlet characters = 'abcdefghijklmnopqrstuvwxyz0123456789';\nlet charactersLength = characters length;\nconst firstIndex = Math floor(Math random() * charactersLength);\nconst firstLetter = characters charAt(firstIndex);\ncharacters = characters slice(0,firstIndex) + characters",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 7,
    "total_chunks": 12
  },
  {
    "id": "726c2547847d5eff26a2baacb0e1fc22",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
    "source_type": "git_repo",
    "title": "Palindrome Checker",
    "content": "+ ' is a palindrome'); ``` When the #text-input element contains a random sequence of alphanumeric characters that is not a palindrome, the #result element should say it is not a palindrome ```js const inputEl = document getElementById('text-input'); const checkBtn = document getElementById('check-btn'); const resultEl = document getElementById('result'); let characters = 'abcdefghijklmnopqrstuvwxyz0123456789'; let charactersLength = characters length; const firstIndex = Math floor(Math random() * charactersLength); const firstLetter = characters charAt(firstIndex); characters = characters slice(0,firstIndex) + charactersslice(firstIndex + 1);\ncharactersLength--;\nconst secondIndex = Math floor(Math random() * charactersLength);\nconst secondLetter = characters charAt(secondIndex);\ncharacters = characters slice(0,secondIndex) + characters slice(secondIndex + 1);\ncharactersLength--;\nconst thirdIndex = Math floor(Math random() * charactersLength);\nconst thirdLetter = characters charAt(thirdIndex);\ncharacters = characters slice(0,thirdIndex) + characters slice(thirdIndex + 1);\ncharactersLength--;\nconst fourthIndex = Math floor(Math random() * charactersLength);\nconst fourthLetter = characters charAt(fourthIndex);\ncharacters = characters slice(0,fourthIndex) + characters slice(fourthIndex + 1);\ncharactersLength--;\nconst phrase = firstLetter + secondLetter + thirdLetter + fourthLetter;\ninputEl value = phrase;\ninputEl dispatchEvent(new Event('change'))\ncheckBtn click();\nassert strictEqual(resultEl innerText trim() replace(/[ , ]+$/g, '') toLowerCase(), phrase + ' is not a palindrome');\n```\n--seed--\n--seed-contents--\n```html\nPalindrome Checker\n```\n```css\n```\n```js\n```\n--solutions--\n```html\nPalindrome Checker\nIs it a Palindrome Enter in text to check for a palindrome:\nCheck\n💡\nA palindrome is a word or sentence that's spelled the same\nway both forward and backward, ignoring punctuation, case, and\nspacing ```\n```css\n* {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nfont-family: Verdana, Geneva, Tahoma, sans-serif;\nbackground-color: #0a0a23;\ncolor: #ffffff;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 8,
    "total_chunks": 12
  },
  {
    "id": "83db5da4f66e793bdcc7bbaf7532fa4a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
    "source_type": "git_repo",
    "title": "Palindrome Checker",
    "content": "not a palindrome'); ``` --seed-- --seed-contents-- ```html Palindrome Checker ``` ```css ``` ```js ``` --solutions-- ```html Palindrome Checker Is it a Palindrome Enter in text to check for a palindrome: Check 💡 A palindrome is a word or sentence that's spelled the same way both forward and backward, ignoring punctuation, case, and spacing ``` ```css * { margin: 0; padding: 0; box-sizing: border-box; } body { font-family: Verdana, Geneva, Tahoma, sans-serif; background-color: #0a0a23; color: #ffffff; }container {\nwidth: 100%;\nmin-height: 100vh;\nposition: relative;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction: column;\n} freecodecamp-logo {\nheight: 30px;\nmargin-bottom: 20px;\n} title {\ntext-align: center;\npadding: 10px 0;\nfont-size: 2 5rem;\nmargin-bottom: 20px;\n} palindrome-div {\nwidth: min(100vw, 450px);\nmin-height: 100px;\nborder-radius: 20px;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-wrap: wrap;\npadding: 20px;\nmargin: 10px 0;\nbackground-color: white;\nbox-shadow: 0 6px 6px #002ead;\n}\nlabel {\ncolor: #0a0a23;\nmargin-bottom: 20px;\n} palindrome-btn {\nwidth: 90px;\nborder: none;\npadding: 10px;\nborder-radius: 15px;\nbackground-color: #5a01a7;\ncolor: #fff;\ncursor: pointer;\n} palindrome-input {\nheight: 30px;\nwidth: 250px;\ntext-align: center;\nfont-size: 1 2rem;\nmargin: 10px;\nborder: none;\nborder-bottom: 2px solid #5a01a7;\n} palindrome-input:focus {\nborder-bottom: 3px solid #5a01a7;\n} palindrome-input::placeholder {\ntext-align: center;\n} user-input {\nfont-size: 1 4rem;\nmargin-top: 10px;\ntext-align: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 9,
    "total_chunks": 12
  },
  {
    "id": "643d6a3882422b7135f1a911311517d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
    "source_type": "git_repo",
    "title": "Palindrome Checker",
    "content": "10px 0; background-color: white; box-shadow: 0 6px 6px #002ead; } label { color: #0a0a23; margin-bottom: 20px; } palindrome-btn { width: 90px; border: none; padding: 10px; border-radius: 15px; background-color: #5a01a7; color: #fff; cursor: pointer; } palindrome-input { height: 30px; width: 250px; text-align: center; font-size: 1 2rem; margin: 10px; border: none; border-bottom: 2px solid #5a01a7; } palindrome-input:focus { border-bottom: 3px solid #5a01a7; } palindrome-input::placeholder { text-align: center; } user-input { font-size: 1 4rem; margin-top: 10px; text-align: center; }results-div {\noverflow-y: auto;\nword-wrap: break-word;\nmin-height: 50px;\ncolor: black;\n} hidden {\ndisplay: none;\n} palindrome-definition-div {\nwidth: min(100vw, 450px);\nfont-size: 1 3rem;\nmin-height: 140px;\nbackground-color: #00471b;\nmargin-top: 20px;\npadding: 20px;\nborder-radius: 20px;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n} palindrome-definition {\nvertical-align: middle;\ntext-align: center;\n}\n```\n```js\nconst userInput = document getElementById(\"text-input\");\nconst checkPalindromeBtn = document getElementById(\"check-btn\");\nconst resultDiv = document getElementById(\"result\");\nconst checkForPalindrome = (input) => {\nconst originalInput = input; // Store for later output\nif (input === \"\") {\nalert(\"Please input a value\");\nreturn;\n}\n// Remove the previous result\nresultDiv replaceChildren();\nconst lowerCaseStr = input replace(/[^A-Za-z0-9]/gi, \"\") toLowerCase();\nlet resultMsg = <strong>${originalInput}</strong> ${\nlowerCaseStr === [ lowerCaseStr] reverse() join(\"\") \"is\" : \"is not\"\n} a palindrome ;\nconst pTag = document createElement(\"p\");\npTag className = \"user-input\";\npTag innerHTML = resultMsg;\nresultDiv appendChild(pTag);\n// Show the result",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 10,
    "total_chunks": 12
  },
  {
    "id": "c979498d861b38a4c103ac3146dc9289",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
    "source_type": "git_repo",
    "title": "Palindrome Checker",
    "content": "= (input) => { const originalInput = input; // Store for later output if (input === \"\") { alert(\"Please input a value\"); return; } // Remove the previous result resultDiv replaceChildren(); const lowerCaseStr = input replace(/[^A-Za-z0-9]/gi, \"\") toLowerCase(); let resultMsg = <strong>${originalInput}</strong> ${ lowerCaseStr === [ lowerCaseStr] reverse() join(\"\") \"is\" : \"is not\" } a palindrome ; const pTag = document createElement(\"p\"); pTag className = \"user-input\"; pTag innerHTML = resultMsg; resultDiv appendChild(pTag); // Show the resultresultDiv classList remove(\"hidden\");\n};\ncheckPalindromeBtn addEventListener(\"click\", () => {\ncheckForPalindrome(userInput value);\nuserInput value = \"\";\n});\nuserInput addEventListener(\"keydown\", (e) => {\nif (e key === \"Enter\") {\ncheckForPalindrome(userInput value);\nuserInput value = \"\";\n}\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19470,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-palindrome-checker\\657bdc55a322aae1eac3838f.md",
      "source_type": "git_repo"
    },
    "token_count": 208,
    "chunk_index": 11,
    "total_chunks": 12
  },
  {
    "id": "30562778280fec50d4ff499ac58091d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-personal-portfolio\\bd7158d8c242eddfaeb5bd13.md",
    "source_type": "git_repo",
    "title": "Personal Portfolio",
    "content": "id: bd7158d8c242eddfaeb5bd13\ntitle: Build a Personal Portfolio\nchallengeType: 25\ndashedName: build-a-personal-portfolio\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYour portfolio should have a welcome section with an id of welcome-section The welcome section should have an h1 element that contains text Your portfolio should have a projects section with an id of project-section The projects section should contain at least one element with a class of project-tile to hold a project The projects section should contain at least one link to a project Your portfolio should have a navbar with an id of navbar The navbar should contain at least one link that you can click on to navigate to different sections of the page Your portfolio should have a link with an id of profile-link, which opens your GitHub or freeCodeCamp profile in a new tab Your portfolio should have at least one media query The height of the welcome section should be equal to the height of the viewport The navbar should always be at the top of the viewport Note: Be sure to link your stylesheet in your HTML and apply your CSS --hints--\nYour portfolio should have a \"Welcome\" section with an id of welcome-section js\nconst el = document getElementById('welcome-section');\nassert isNotNull(el);\nYour #welcome-section element should contain an h1 element js\nassert isAbove(\ndocument querySelectorAll('#welcome-section h1') length,\n0,\n'Welcome section should contain an h1 element '\n);\nYou should not have any empty h1 elements within #welcome-section element js\nassert isAbove(\ndocument querySelectorAll('#welcome-section h1') [0] innerText length,\n0,\n'h1 element in welcome section should contain your name or camper ' + 'name '\n);\nYou should have a \"Projects\" section with an id of project-section js\nconst el = document getElementById('project-section');\nassert isNotNull(el);\nYour portfolio should contain at least one element with a class of project-tile js\nassert isAbove(\ndocument querySelectorAll('#project-section project-tile') length,\n0\n);\nYour #project-section element should contain at least one a element js\nassert isAbove(document querySelectorAll('#project-section a') length, 0);\nYour portfolio should have a navbar with an id of navbar js\nconst el = document getElementById('navbar');\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16165,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-personal-portfolio\\bd7158d8c242eddfaeb5bd13.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "edc56d6a372984b16ce07e6b6654d5b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-personal-portfolio\\bd7158d8c242eddfaeb5bd13.md",
    "source_type": "git_repo",
    "title": "Personal Portfolio",
    "content": "You should have a \"Projects\" section with an id of project-section js const el = document getElementById('project-section'); assert isNotNull(el); Your portfolio should contain at least one element with a class of project-tile js assert isAbove( document querySelectorAll('#project-section project-tile') length, 0 ); Your #project-section element should contain at least one a element js assert isAbove(document querySelectorAll('#project-section a') length, 0); Your portfolio should have a navbar with an id of navbar js const el = document getElementById('navbar'); assertisNotNull(el);\nYour #navbar element should contain at least one a element whose href attribute starts with # ```js\nconst links = [ document querySelectorAll('#navbar a')] filter(\nnav => (nav getAttribute('href') || '') substring(0, 1) === '#'\n);\nassert isAbove(links length, 0, 'Navbar should contain an anchor link ');\n```\nYour portfolio should have an a element with an id of profile-link js\nconst el = document getElementById('profile-link');\nassert isNotNull(el);\nassert strictEqual(el tagName, 'A');\nYour #profile-link element should have a target attribute of _blank js\nconst el = document getElementById('profile-link');\nassert isNotNull(el);\nassert strictEqual(el target, '_blank');\nYour portfolio should use at least one media query js\nconst htmlSourceAttr = Array from(document querySelectorAll('source')) map(el => el getAttribute('media'))\nconst cssCheck = new __helpers CSSHelp(document) getCSSRules('media')\nassert isTrue(cssCheck length > 0 || htmlSourceAttr length > 0);\nYour #navbar element should always be at the top of the viewport ```js\n(async () => {\nconst timeout = milliseconds =>\nnew Promise(resolve => setTimeout(resolve, milliseconds));\nconst navbar = document getElementById('navbar');\nassert approximately(\nnavbar getBoundingClientRect() top,\n0,\n15,\n\"Navbar's parent should be body and it should be at the top of \" +\n'the viewport '\n);\nwindow scroll(0, 500);\nawait timeout(1);\nassert approximately(\nnavbar getBoundingClientRect() top,\n0,\n15,\n'Navbar should be at the top of the viewport even after ' + 'scrolling '\n);\nwindow",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16165,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-personal-portfolio\\bd7158d8c242eddfaeb5bd13.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "3618f14e068f358d86f3a900c6843572",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-personal-portfolio\\bd7158d8c242eddfaeb5bd13.md",
    "source_type": "git_repo",
    "title": "Personal Portfolio",
    "content": "viewport ```js (async () => { const timeout = milliseconds => new Promise(resolve => setTimeout(resolve, milliseconds)); const navbar = document getElementById('navbar'); assert approximately( navbar getBoundingClientRect() top, 0, 15, \"Navbar's parent should be body and it should be at the top of \" + 'the viewport ' ); window scroll(0, 500); await timeout(1); assert approximately( navbar getBoundingClientRect() top, 0, 15, 'Navbar should be at the top of the viewport even after ' + 'scrolling ' ); windowscroll(0, 0);\n})();\n```\n--seed--\n--seed-contents--\n```html\nPersonal Portfolio\n```\n```css\n```\n--solutions--\n```html\nAbout\nWork\nContact\nHey I am Mimic\na web developer\nThese are some of my projects\n<\nTribute Page\n/>\n<\nRandom Quote Machine\n/>\n<\nJavaScript Calculator\n/>\n<\nMap Data Across the Globe\n/>\n<\nWikipedia Viewer\n/>\n<\nTic Tac Toe Game\n/>\nShow all\nLet's work together How do you take your coffee Facebook\nGitHub\nTwitter\nSend a mail\nCall me\n**This is just a fake portfolio All the projects and contact details\ngiven are not real © Created for\nfreeCodeCamp\n```\n```css\n/ Custom properties/variables  /\n:root {\n--main-white: #f0f0f0;\n--main-red: #be3144;\n--main-blue: #45567d;\n--main-gray: #303841;\n}\n/ Base reset /\n* {\nmargin: 0;\npadding: 0;\n}\n/ box-sizing and font sizing /\n,\n::before,\n*::after {\nbox-sizing: inherit;\n}\nhtml {\nbox-sizing: border-box;\n/ Set font size for easy rem calculations\n* default document font size = 16px, 1rem = 16px, 100% = 16px\n* (100% / 16px) * 10 = 62 5%, 1rem = 10px, 62 5% = 10px\n/\nfont-size: 62 5%;\nscroll-behavior: smooth;\n}\n/ A few media query to set some font sizes at different screen sizes * This helps automate a bit of responsiveness * The trick is to use the rem unit for size values, margin and padding",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16165,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-personal-portfolio\\bd7158d8c242eddfaeb5bd13.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "9911fd18571e63ef3bd4582ad28889cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-personal-portfolio\\bd7158d8c242eddfaeb5bd13.md",
    "source_type": "git_repo",
    "title": "Personal Portfolio",
    "content": "easy rem calculations * default document font size = 16px, 1rem = 16px, 100% = 16px * (100% / 16px) * 10 = 62 5%, 1rem = 10px, 62 5% = 10px / font-size: 62 5%; scroll-behavior: smooth; } / A few media query to set some font sizes at different screen sizes * This helps automate a bit of responsiveness * The trick is to use the rem unit for size values, margin and padding* Because rem is relative to the document font size\n* when we scale up or down the font size on the document\n* it will affect all properties using rem units for the values /\n/ I am using the em unit for breakpoints\n* The calculation is the following\n* screen size divided by browser base font size\n* As an example: a breakpoint at 980px\n* 980px / 16px = 61 25em\n/\n/ 1200px / 16px = 75em /\n@media (max-width: 75em) {\nhtml {\nfont-size: 60%;\n}\n}\n/ 980px / 16px = 61 25em /\n@media (max-width: 61 25em) {\nhtml {\nfont-size: 58%;\n}\n}\n/ 460px / 16px = 28 75em /\n@media (max-width: 28 75em) {\nhtml {\nfont-size: 55%;\n}\n}\n/ Base styles /\nbody {\nfont-family: 'Poppins', sans-serif;\nfont-size: 1 8rem;\n/ 18px /\nfont-weight: 400;\nline-height: 1 4;\ncolor: var(--main-white);\n}\nh1,\nh2 {\nfont-family: 'Raleway', sans-serif;\nfont-weight: 700;\ntext-align: center;\n}\nh1 {\nfont-size: 6rem;\n}\nh2 {\nfont-size: 4 2rem;\n}\nul {\nlist-style: none;\n}\na {\ntext-decoration: none;\ncolor: var(--main-white);\n}\nimg {\ndisplay: block;\nwidth: 100%;\n}\n/ nav /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16165,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-personal-portfolio\\bd7158d8c242eddfaeb5bd13.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "2e51fe3bdbb517722e1de47e96470c2a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-personal-portfolio\\bd7158d8c242eddfaeb5bd13.md",
    "source_type": "git_repo",
    "title": "Personal Portfolio",
    "content": "28 75em) { html { font-size: 55%; } } / Base styles / body { font-family: 'Poppins', sans-serif; font-size: 1 8rem; / 18px / font-weight: 400; line-height: 1 4; color: var(--main-white); } h1, h2 { font-family: 'Raleway', sans-serif; font-weight: 700; text-align: center; } h1 { font-size: 6rem; } h2 { font-size: 4 2rem; } ul { list-style: none; } a { text-decoration: none; color: var(--main-white); } img { display: block; width: 100%; } / nav /nav {\ndisplay: flex;\njustify-content: flex-end;\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100%;\nbackground: var(--main-red);\nbox-shadow: 0 2px 0 rgba(0, 0, 0, 0 4);\nz-index: 10;\n} nav-list {\ndisplay: flex;\nmargin-right: 2rem;\n}\n@media (max-width: 28 75em) { nav {\njustify-content: center;\n} nav-list {\nmargin: 0 1rem;\n}\n} nav-list a {\ndisplay: block;\nfont-size: 2 2rem;\npadding: 2rem;\n} nav-list a:hover {\nbackground: var(--main-blue);\n}\n/ Welcome section / welcome-section {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nwidth: 100%;\nheight: 100vh;\nbackground-color: #000;\nbackground-image: linear-gradient(62deg, #3a3d40 0%, #181719 100%);\n} welcome-section > p {\nfont-size: 3rem;\nfont-weight: 200;\nfont-style: italic;\ncolor: var(--main-red);\n}\n/ Projects section / projects-section {\ntext-align: center;\npadding: 10rem 2rem;\nbackground: var(--main-blue);\n} projects-section-header {\nmax-width: 640px;\nmargin: 0 auto 6rem auto;\nborder-bottom: 0 2rem solid var(--main-white);\n}\n@media (max-width: 28 75em) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16165,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-personal-portfolio\\bd7158d8c242eddfaeb5bd13.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "87edae040f7d75048f33701de32854c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-personal-portfolio\\bd7158d8c242eddfaeb5bd13.md",
    "source_type": "git_repo",
    "title": "Personal Portfolio",
    "content": "var(--main-blue); } / Welcome section / welcome-section { display: flex; flex-direction: column; justify-content: center; align-items: center; width: 100%; height: 100vh; background-color: #000; background-image: linear-gradient(62deg, #3a3d40 0%, #181719 100%); } welcome-section > p { font-size: 3rem; font-weight: 200; font-style: italic; color: var(--main-red); } / Projects section / projects-section { text-align: center; padding: 10rem 2rem; background: var(--main-blue); } projects-section-header { max-width: 640px; margin: 0 auto 6rem auto; border-bottom: 0 2rem solid var(--main-white); } @media (max-width: 28 75em) {projects-section-header {\nfont-size: 4rem;\n}\n}\n/ \"Automagic\" image grid using no media queries / projects-grid {\ndisplay: grid;\ngrid-template-columns: repeat(auto-fit, minmax(320px, 1fr));\ngrid-gap: 4rem;\nwidth: 100%;\nmax-width: 1280px;\nmargin: 0 auto;\nmargin-bottom: 6rem;\n}\n@media (max-width: 30 625em) { projects-section {\npadding: 6rem 1rem;\n} projects-grid {\ngrid-template-columns: 1fr;\n}\n} project {\nbackground: var(--main-gray);\nbox-shadow: 1px 1px 2px rgba(0, 0, 0, 0 5);\nborder-radius: 2px;\n} code {\ncolor: var(--main-gray);\ntransition: color 0 3s ease-out;\n} project:hover code {\ncolor: #ff7f50;\n} project-image {\nheight: calc(100% - 6 8rem);\nwidth: 100%;\nobject-fit: cover;\n} project-title {\nfont-size: 2rem;\npadding: 2rem 0 5rem;\n} btn {\ndisplay: inline-block;\npadding: 1rem 2rem;\nborder-radius: 2px;\n} btn-show-all {\nfont-size: 2rem;\nbackground: var(--main-gray);\ntransition: background 0 3s ease-out;\n} btn-show-all:hover {\nbackground: var(--main-red);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16165,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-personal-portfolio\\bd7158d8c242eddfaeb5bd13.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "f19bcd5f210686403844bf4f8bb9b8ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-personal-portfolio\\bd7158d8c242eddfaeb5bd13.md",
    "source_type": "git_repo",
    "title": "Personal Portfolio",
    "content": "box-shadow: 1px 1px 2px rgba(0, 0, 0, 0 5); border-radius: 2px; } code { color: var(--main-gray); transition: color 0 3s ease-out; } project:hover code { color: #ff7f50; } project-image { height: calc(100% - 6 8rem); width: 100%; object-fit: cover; } project-title { font-size: 2rem; padding: 2rem 0 5rem; } btn { display: inline-block; padding: 1rem 2rem; border-radius: 2px; } btn-show-all { font-size: 2rem; background: var(--main-gray); transition: background 0 3s ease-out; } btn-show-all:hover { background: var(--main-red); }btn-show-all:hover > i {\ntransform: translateX(2px);\n} btn-show-all > i {\nmargin-left: 10px;\ntransform: translateX(0);\ntransition: transform 0 3s ease-out;\n}\n/ Contact section / contact-section {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ntext-align: center;\nwidth: 100%;\nheight: 80vh;\npadding: 0 2rem;\nbackground: var(--main-gray);\n} contact-section-header > h2 {\nfont-size: 6rem;\n}\n@media (max-width: 28 75em) { contact-section-header > h2 {\nfont-size: 4rem;\n}\n} contact-section-header > p {\nfont-style: italic;\n} contact-links {\ndisplay: flex;\njustify-content: center;\nwidth: 100%;\nmax-width: 980px;\nmargin-top: 4rem;\nflex-wrap: wrap;\n} contact-details {\nfont-size: 2 4rem;\ntext-shadow: 2px 2px 1px #1f1f1f;\ntransition: transform 0 3s ease-out;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16165,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-personal-portfolio\\bd7158d8c242eddfaeb5bd13.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "2e912e5caefec56eb7022d1247c7dbeb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-personal-portfolio\\bd7158d8c242eddfaeb5bd13.md",
    "source_type": "git_repo",
    "title": "Personal Portfolio",
    "content": "flex-direction: column; justify-content: center; align-items: center; text-align: center; width: 100%; height: 80vh; padding: 0 2rem; background: var(--main-gray); } contact-section-header > h2 { font-size: 6rem; } @media (max-width: 28 75em) { contact-section-header > h2 { font-size: 4rem; } } contact-section-header > p { font-style: italic; } contact-links { display: flex; justify-content: center; width: 100%; max-width: 980px; margin-top: 4rem; flex-wrap: wrap; } contact-details { font-size: 2 4rem; text-shadow: 2px 2px 1px #1f1f1f; transition: transform 0 3s ease-out; }contact-details:hover {\ntransform: translateY(8px);\n}\n/ Footer /\nfooter {\nfont-weight: 300;\ndisplay: flex;\njustify-content: space-evenly;\npadding: 2rem;\nbackground: var(--main-gray);\nborder-top: 4px solid var(--main-red);\n}\nfooter > p {\nmargin: 2rem;\n}\nfooter i {\nvertical-align: middle;\n}\n@media (max-width: 28 75em) {\nfooter {\nflex-direction: column;\ntext-align: center;\n}\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16165,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-personal-portfolio\\bd7158d8c242eddfaeb5bd13.md",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "010fb2ac4f47984cb624ec7590ad4cd2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-profile-lookup\\5688e62ea601b2482ff8422b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5688e62ea601b2482ff8422b\ntitle: Build a Profile Lookup\nchallengeType:  26\ndashedName: lab-profile-lookup\n--description--\nIn this lab, you will build a profile lookup that looks up information about people in a contacts list For this example imagine there is a contact named Akira Laine, the lookUpProfile(\"Akira\", \"lastName\") should return Laine Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create a function named lookUpProfile that takes a name and a property as arguments You should retrieve contact information from the provided contacts array If the function receives a contact name and the property exists on the related contact, then the property's value should be returned If the name passed to the function does not match any contacts in the contacts array, then the function should return \"No such contact\" If the property does not exist on a found contact, then the function should return \"No such property\" --before-each--\njs\ncontacts = [\n{\nfirstName: \"Akira\",\nlastName: \"Laine\",\nnumber: \"0543236543\",\nlikes: [\"Pizza\", \"Coding\", \"Brownie Points\"],\n},\n{\nfirstName: \"Harry\",\nlastName: \"Potter\",\nnumber: \"0994372684\",\nlikes: [\"Hogwarts\", \"Magic\", \"Hagrid\"],\n},\n{\nfirstName: \"Sherlock\",\nlastName: \"Holmes\",\nnumber: \"0487345643\",\nlikes: [\"Intriguing Cases\", \"Violin\"],\n},\n{\nfirstName: \"Kristian\",\nlastName: \"Vos\",\nnumber: \"unknown\",\nlikes: [\"JavaScript\", \"Gaming\", \"Foxes\"],\n},\n];\n--hints--\nThe contacts array should still be present in the global scope Reset the lesson to recover it if you deleted it js\nassert isArray(contacts);\nYou should have a function named lookUpProfile js\nassert isFunction(lookUpProfile);\nlookUpProfile(\"Kristian\", \"lastName\") should return a string js\nassert isString(lookUpProfile(\"Kristian\", \"lastName\"));\nlookUpProfile(\"Kristian\", \"lastName\") should return the string Vos\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4298,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-profile-lookup\\5688e62ea601b2482ff8422b.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "1dcaa2c4b480fff4b1f90e028887f68a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-profile-lookup\\5688e62ea601b2482ff8422b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "lastName: \"Holmes\", number: \"0487345643\", likes: [\"Intriguing Cases\", \"Violin\"], }, { firstName: \"Kristian\", lastName: \"Vos\", number: \"unknown\", likes: [\"JavaScript\", \"Gaming\", \"Foxes\"], }, ]; --hints-- The contacts array should still be present in the global scope Reset the lesson to recover it if you deleted it js assert isArray(contacts); You should have a function named lookUpProfile js assert isFunction(lookUpProfile); lookUpProfile(\"Kristian\", \"lastName\") should return a string js assert isString(lookUpProfile(\"Kristian\", \"lastName\")); lookUpProfile(\"Kristian\", \"lastName\") should return the string Vos js assertstrictEqual(lookUpProfile('Kristian', 'lastName'), 'Vos');\nlookUpProfile(\"Sherlock\", \"likes\") should return [\"Intriguing Cases\", \"Violin\"]\njs\nassert deepEqual(lookUpProfile('Sherlock', 'likes'), [\n'Intriguing Cases',\n'Violin'\n]);\nlookUpProfile(\"Harry\", \"likes\") should return an array\njs\nassert isArray(lookUpProfile('Harry', 'likes'));\nlookUpProfile(\"Bob\", \"number\") should return the string No such contact\njs\nassert strictEqual(lookUpProfile('Bob', 'number'),'No such contact');\nlookUpProfile(\"Bob\", \"potato\") should return the string No such contact\njs\nassert strictEqual(lookUpProfile('Bob', 'potato'), 'No such contact');\nlookUpProfile(\"Akira\", \"address\") should return the string No such property\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4298,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-profile-lookup\\5688e62ea601b2482ff8422b.md",
      "source_type": "git_repo"
    },
    "token_count": 349,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "e438dd9462da75a6d54c7ca7d795141c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-profile-lookup\\5688e62ea601b2482ff8422b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return the string Vos js assertstrictEqual(lookUpProfile('Kristian', 'lastName'), 'Vos'); lookUpProfile(\"Sherlock\", \"likes\") should return [\"Intriguing Cases\", \"Violin\"] js assert deepEqual(lookUpProfile('Sherlock', 'likes'), [ 'Intriguing Cases', 'Violin' ]); lookUpProfile(\"Harry\", \"likes\") should return an array js assert isArray(lookUpProfile('Harry', 'likes')); lookUpProfile(\"Bob\", \"number\") should return the string No such contact js assert strictEqual(lookUpProfile('Bob', 'number'),'No such contact'); lookUpProfile(\"Bob\", \"potato\") should return the string No such contact js assert strictEqual(lookUpProfile('Bob', 'potato'), 'No such contact'); lookUpProfile(\"Akira\", \"address\") should return the string No such property js assertstrictEqual(lookUpProfile('Akira', 'address'), 'No such property');\n--seed--\n--seed-contents--\n```js\nlet contacts = [\n{\nfirstName: \"Akira\",\nlastName: \"Laine\",\nnumber: \"0543236543\",\nlikes: [\"Pizza\", \"Coding\", \"Brownie Points\"],\n},\n{\nfirstName: \"Harry\",\nlastName: \"Potter\",\nnumber: \"0994372684\",\nlikes: [\"Hogwarts\", \"Magic\", \"Hagrid\"],\n},\n{\nfirstName: \"Sherlock\",\nlastName: \"Holmes\",\nnumber: \"0487345643\",\nlikes: [\"Intriguing Cases\", \"Violin\"],\n},\n{\nfirstName: \"Kristian\",\nlastName: \"Vos\",\nnumber: \"unknown\",\nlikes: [\"JavaScript\", \"Gaming\", \"Foxes\"],\n},\n];\n```\n--solutions--\n```js\nlet contacts = [\n{\nfirstName: \"Akira\",\nlastName: \"Laine\",\nnumber: \"0543236543\",\nlikes: [\"Pizza\", \"Coding\", \"Brownie Points\"],\n},\n{\nfirstName: \"Harry\",\nlastName: \"Potter\",\nnumber: \"0994372684\",\nlikes: [\"Hogwarts\", \"Magic\", \"Hagrid\"],\n},\n{\nfirstName: \"Sherlock\",\nlastName: \"Holmes\",\nnumber: \"0487345643\",\nlikes: [\"Intriguing Cases\", \"Violin\"],\n},\n{\nfirstName: \"Kristian\",\nlastName: \"Vos\",\nnumber: \"unknown\",\nlikes: [\"JavaScript\", \"Gaming\", \"Foxes\"],\n},\n];\nfunction lookUpProfile(name, prop) {\nfor (let i in contacts) {\nif (contacts[i]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4298,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-profile-lookup\\5688e62ea601b2482ff8422b.md",
      "source_type": "git_repo"
    },
    "token_count": 535,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "abb59e98fb0401aba234e59c7954adfb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-profile-lookup\\5688e62ea601b2482ff8422b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "\"unknown\", likes: [\"JavaScript\", \"Gaming\", \"Foxes\"], }, ]; ``` --solutions-- ```js let contacts = [ { firstName: \"Akira\", lastName: \"Laine\", number: \"0543236543\", likes: [\"Pizza\", \"Coding\", \"Brownie Points\"], }, { firstName: \"Harry\", lastName: \"Potter\", number: \"0994372684\", likes: [\"Hogwarts\", \"Magic\", \"Hagrid\"], }, { firstName: \"Sherlock\", lastName: \"Holmes\", number: \"0487345643\", likes: [\"Intriguing Cases\", \"Violin\"], }, { firstName: \"Kristian\", lastName: \"Vos\", number: \"unknown\", likes: [\"JavaScript\", \"Gaming\", \"Foxes\"], }, ]; function lookUpProfile(name, prop) { for (let i in contacts) { if (contacts[i]firstName === name) {\nreturn contacts[i][prop] || \"No such property\";\n}\n}\nreturn \"No such contact\";\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4298,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-profile-lookup\\5688e62ea601b2482ff8422b.md",
      "source_type": "git_repo"
    },
    "token_count": 216,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "6190692e342d32479371ac6af8c732d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-pyramid-generator\\66f2836c459cfb16ae76f24f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66f2836c459cfb16ae76f24f\ntitle: Build a Pyramid Generator\nchallengeType: 26\ndashedName: lab-pyramid-generator\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a function named pyramid that takes three arguments The first argument should be a string representing the pattern character to repeat in your pyramid The second argument should be an integer representing the number of rows in the pyramid The third argument should be a Boolean value The pyramid function should return a string in which the pattern character is repeated and arranged to form a pyramid having the vertex facing upwards when the third argument is false When the third argument is true the pyramid should have the vertex facing downwards The vertex row should have a single pattern character, and each other row should have two pattern characters more than the previous one Each row should start with a number of spaces sufficient to put the center character of each row in the same column and there should not be any spaces at the end of each row The pyramid should start and end with a newline character For example, calling pyramid(\"o\", 4, false) should give this output:\n```js\no\nooo\nooooo\nooooooo\n```\n--hints--\nYou should have a function named pyramid js\nassert isFunction(pyramid);\nYour pyramid function should have three parameters js\nassert lengthOf(pyramid, 3);\npyramid(\"o\", 4, false) should return \"\\n   o\\n  ooo\\n ooooo\\nooooooo\\n\" js\nassert equal(pyramid(\"o\", 4, false), \"\\n   o\\n  ooo\\n ooooo\\nooooooo\\n\")\npyramid(\"p\", 5, true) should return \"\\nppppppppp\\n ppppppp\\n  ppppp\\n   ppp\\n    p\\n\" js\nassert equal(pyramid(\"p\", 5, true), \"\\nppppppppp\\n ppppppp\\n  ppppp\\n   ppp\\n    p\\n\")\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nfunction pyramid(char, count, isInverted) {\nconst rows = []\nfor (let i = 1; i <= count; i++) {\nif (isInverted) {\nrows unshift(\" \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2364,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-pyramid-generator\\66f2836c459cfb16ae76f24f.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "fd6a24e584a5c9d4de9c84ecf3f4f5d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-pyramid-generator\\66f2836c459cfb16ae76f24f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "have three parameters js assert lengthOf(pyramid, 3); pyramid(\"o\", 4, false) should return \"\\n o\\n ooo\\n ooooo\\nooooooo\\n\" js assert equal(pyramid(\"o\", 4, false), \"\\n o\\n ooo\\n ooooo\\nooooooo\\n\") pyramid(\"p\", 5, true) should return \"\\nppppppppp\\n ppppppp\\n ppppp\\n ppp\\n p\\n\" js assert equal(pyramid(\"p\", 5, true), \"\\nppppppppp\\n ppppppp\\n ppppp\\n ppp\\n p\\n\") --seed-- --seed-contents-- ```js ``` --solutions-- ```js function pyramid(char, count, isInverted) { const rows = [] for (let i = 1; i <= count; i++) { if (isInverted) { rows unshift(\" \"repeat(count - i) + char repeat(2 * i - 1))\n} else {\nrows push(\" \" repeat(count - i) + char repeat(2 * i - 1))\n}\n}\nreturn \"\\n\" + rows join(\"\\n\") + \"\\n\";\n}\nconsole log(pyramid(\"#\", 10, false))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2364,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-pyramid-generator\\66f2836c459cfb16ae76f24f.md",
      "source_type": "git_repo"
    },
    "token_count": 261,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5d8e85991ff4d6069ea4e329aea89e20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
    "source_type": "git_repo",
    "title": "Product Landing Page",
    "content": "id: 587d78af367417b2b2512b04\ntitle: Build a Product Landing Page\nchallengeType: 25\ndashedName: build-a-product-landing-page\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYour product landing page should have a header element with a corresponding id=\"header\" You should have an image within the header element with a corresponding id=\"header-img\" (A logo would make a good image here) Within the #header element, you should have a nav element with a corresponding id=\"nav-bar\" You should have at least three clickable elements inside the nav element, each with the class nav-link When you click a nav-link button in the nav element, you should be taken to the corresponding section of the landing page You should have an embedded product video with id=\"video\" Your landing page should have a form element with a corresponding id=\"form\" Within the form, there should be an input field with id=\"email\" where you can enter an email address The #email input field should have placeholder text to let users know what the field is for The #email input field should use HTML5 validation to confirm that the entered text is an email address Within the form, there should be a submit input with a corresponding id=\"submit\" When you click the #submit element, the email should be submitted to a static page (use this mock URL: https://www freecodecamp org/email-submit) The navbar should always be at the top of the viewport Your product landing page should have at least one media query Your product landing page should utilize CSS flexbox at least once Note: Be sure to link your stylesheet in your HTML and apply your CSS --hints--\nYou should have a header element with an id of header js\nconst el = document getElementById('header');\nassert exists(el);\nassert strictEqual(el tagName, 'HEADER');\nYou should have an img element with an id of header-img js\nconst el = document getElementById('header-img');\nassert exists(el);\nassert strictEqual(el tagName, 'IMG');\nYour #header-img should be a descendant of the #header js\nconst els = document querySelectorAll('#header #header-img');\nassert isNotEmpty(els);\nYour #header-img should have a src attribute js\nconst el = document getElementById('header-img');\nassert exists(el);\nassert exists(el",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "a69860c775e0cb2de90184abfbe9b443",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
    "source_type": "git_repo",
    "title": "Product Landing Page",
    "content": "element with an id of header js const el = document getElementById('header'); assert exists(el); assert strictEqual(el tagName, 'HEADER'); You should have an img element with an id of header-img js const el = document getElementById('header-img'); assert exists(el); assert strictEqual(el tagName, 'IMG'); Your #header-img should be a descendant of the #header js const els = document querySelectorAll('#header #header-img'); assert isNotEmpty(els); Your #header-img should have a src attribute js const el = document getElementById('header-img'); assert exists(el); assert exists(elsrc);\nYour #header-img's src value should be a valid URL (starts with http) js\nconst el = document getElementById('header-img');\nassert exists(el);\nassert isNotEmpty(el getAttribute('src'));\nassert match(el src, /^http/);\nYou should have a nav element with an id of nav-bar js\nconst el = document getElementById('nav-bar');\nassert exists(el);\nassert strictEqual(el tagName, \"NAV\");\nYour #nav-bar should be a descendant of the #header js\nconst els = document querySelectorAll('#header #nav-bar');\nassert isNotEmpty(els);\nYou should have at least 3 nav-link elements within the #nav-bar js\nconst els = document querySelectorAll('#nav-bar nav-link');\nassert isAtLeast(els length, 3);\nEach nav-link element should have an href attribute js\nconst els = document querySelectorAll(' nav-link')\nels forEach(el => {\nassert exists(el href);\nassert isNotEmpty(el href);\n})\nassert isNotEmpty(els);\nEach nav-link element should link to a corresponding element on the landing page (has an href with a value of another element's id e g #footer) js\nconst els = document querySelectorAll(' nav-link')\nels forEach(el => {\nconst linkDestination = el getAttribute('href') slice(1)\nassert exists(document getElementById(linkDestination));\n})\nassert isNotEmpty(els);\nYou should have a video or iframe element with an id of video js\nconst el = document getElementById('video');\nassert exists(el);\nassert oneOf(el tagName, ['VIDEO','IFRAME']);\nYour #video should have a src attribute js\nlet el = document getElementById('video')\nconst sourceNode = el children;\nlet sourceElement = null;\nif (sourceNode length) {\nsourceElement = [ video children] filter(el => el",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "de51c81fe0c0d55649fb4f9f57a30336",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
    "source_type": "git_repo",
    "title": "Product Landing Page",
    "content": "nav-link') els forEach(el => { const linkDestination = el getAttribute('href') slice(1) assert exists(document getElementById(linkDestination)); }) assert isNotEmpty(els); You should have a video or iframe element with an id of video js const el = document getElementById('video'); assert exists(el); assert oneOf(el tagName, ['VIDEO','IFRAME']); Your #video should have a src attribute js let el = document getElementById('video') const sourceNode = el children; let sourceElement = null; if (sourceNode length) { sourceElement = [ video children] filter(el => ellocalName === 'source')[0];\n}\nif (sourceElement) {\nel = sourceElement;\n}\nassert isTrue(el hasAttribute('src'));\nYou should have a form element with an id of form js\nconst el = document getElementById('form');\nassert exists(el);\nassert strictEqual(el tagName, \"FORM\");\nYou should have an input element with an id of email js\nconst el = document getElementById('email');\nassert exists(el);\nassert strictEqual(el tagName, \"INPUT\");\nYour #email should be a descendant of the #form js\nconst els = document querySelectorAll('#form #email')\nassert isNotEmpty(els);\nYour #email should have the placeholder attribute with placeholder text js\nconst el = document getElementById('email');\nassert exists(el);\nassert exists(el placeholder);\nassert isNotEmpty(el placeholder);\nYour #email should use HTML5 validation by setting its type to email js\nconst el = document getElementById('email');\nassert exists(el);\nassert strictEqual(el type, \"email\");\nYou should have an input element with an id of submit js\nconst el = document getElementById('submit');\nassert exists(el);\nassert strictEqual(el tagName, \"INPUT\");\nYour #submit should be a descendant of the #form js\nconst els = document querySelectorAll('#form #submit');\nassert isNotEmpty(els);\nYour #submit should have a type of submit js\nconst el = document getElementById('submit');\nassert exists(el);\nassert strictEqual(el type, 'submit');\nYour #form should have an action attribute of https://www freecodecamp org/email-submit js\nconst el = document getElementById('form');\nassert exists(el);\nassert strictEqual(el action, 'https://www freecodecamp org/email-submit');\nYour #email should have a name attribute of email js\nconst el = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "cbe04d343b5ce05cdd59f3831596f34b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
    "source_type": "git_repo",
    "title": "Product Landing Page",
    "content": "#submit should be a descendant of the #form js const els = document querySelectorAll('#form #submit'); assert isNotEmpty(els); Your #submit should have a type of submit js const el = document getElementById('submit'); assert exists(el); assert strictEqual(el type, 'submit'); Your #form should have an action attribute of https://www freecodecamp org/email-submit js const el = document getElementById('form'); assert exists(el); assert strictEqual(el action, 'https://www freecodecamp org/email-submit'); Your #email should have a name attribute of email js const el = documentgetElementById('email');\nassert exists(el);\nassert strictEqual(el name, 'email');\nYour #nav-bar should always be at the top of the viewport ```js\n(async () => {\nconst timeout = (milliseconds) => new Promise((resolve) => setTimeout(resolve, milliseconds));\nconst header = document getElementById('header');\nconst headerChildren = header children;\nconst navbarCandidates = [header, headerChildren];\n// Return smallest top position of all navbar candidates\nconst getNavbarPosition = (candidates = []) => {\nreturn candidates reduce(\n(min, candidate) =>\nMath min(min, Math abs(candidate getBoundingClientRect() top)),\nInfinity\n);\n};\nassert approximately(\ngetNavbarPosition(navbarCandidates),\n0,\n15,\n'#header or one of its children should be at the top of the viewport '\n);\nwindow scroll(0, 500);\nawait timeout(1);\nassert approximately(\ngetNavbarPosition(navbarCandidates),\n0,\n15,\n'#header or one of its children should be at the top of the ' +\n'viewport even after scrolling '\n);\nwindow scroll(0, 0);\n})();\n```\nYour Product Landing Page should use at least one media query js\nconst htmlSourceAttr = Array from(document querySelectorAll('source')) map(el => el getAttribute('media'))\nconst cssCheck = new __helpers CSSHelp(document) getCSSRules('media');\nassert isTrue(cssCheck length > 0 || htmlSourceAttr length > 0);\nYour Product Landing Page should use CSS Flexbox at least once js\nconst hasFlex = (rule) => [\"flex\", \"inline-flex\"] includes(rule style display)\nconst stylesheet = new __helpers CSSHelp(document) getStyleSheet()\nconst cssRules = new __helpers CSSHelp(document) styleSheetToCssRulesArray(stylesheet)\nconst mediaRules = new __helpers CSSHelp(document)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "9d6945bebf4fb278e0b19cf7477193bf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
    "source_type": "git_repo",
    "title": "Product Landing Page",
    "content": "use at least one media query js const htmlSourceAttr = Array from(document querySelectorAll('source')) map(el => el getAttribute('media')) const cssCheck = new __helpers CSSHelp(document) getCSSRules('media'); assert isTrue(cssCheck length > 0 || htmlSourceAttr length > 0); Your Product Landing Page should use CSS Flexbox at least once js const hasFlex = (rule) => [\"flex\", \"inline-flex\"] includes(rule style display) const stylesheet = new __helpers CSSHelp(document) getStyleSheet() const cssRules = new __helpers CSSHelp(document) styleSheetToCssRulesArray(stylesheet) const mediaRules = new __helpers CSSHelp(document)getCSSRules('media')\nconst usesFlex = cssRules find(rule => hasFlex(rule))\nconst usesFlexMedia = mediaRules find(mediaRule => {\nreturn [ mediaRule cssRules] find(rule => hasFlex(rule))\n})\nassert exists(usesFlex || usesFlexMedia);\n--seed--\n--seed-contents--\n```html\nProduct Landing Page\n```\n```css\n```\n--solutions--\n```html\nFeatures\nHow It Works\nPricing\nHandcrafted, home-made masterpieces\nPremium Materials\nOur trombones use the shiniest brass which is sourced locally This will increase the longevity of your purchase Fast Shipping\nWe make sure you receive your trombone as soon as we have\nfinished making it We also provide free returns if you are not\nsatisfied Quality Assurance\nFor every purchase you make, we will ensure there are no damages\nor faults and we will check and test the pitch of your\ninstrument Tenor Trombone\n$600\nGood for beginners\nExcellent sound quality\nGreat for Jazz Bands\nNice and shiny\nSelect\nBass Trombone\n$900\nSound quality is unmatched\nBest for professionals\nAbsolutely stunning\nDurable and long lasting\nSelect\nValve Trombone\n$1200\nPlays similar to a Trumpet\nGreat for Jazz Bands\nBeautiful in sound and appearance\nJust amazing\nSelect\nPrivacy\nTerms\nContact\nCopyright 2016, Original Trombones\n```\n```css\n/ global element styling /\n@import 'https://fonts googleapis com/css",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "580af85847b13bdb4e4c693d7b4dec35",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
    "source_type": "git_repo",
    "title": "Product Landing Page",
    "content": "pitch of your instrument Tenor Trombone $600 Good for beginners Excellent sound quality Great for Jazz Bands Nice and shiny Select Bass Trombone $900 Sound quality is unmatched Best for professionals Absolutely stunning Durable and long lasting Select Valve Trombone $1200 Plays similar to a Trumpet Great for Jazz Bands Beautiful in sound and appearance Just amazing Select Privacy Terms Contact Copyright 2016, Original Trombones ``` ```css / global element styling / @import 'https://fonts googleapis com/cssfamily=Lato:400,700';\n{\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\nbody {\nbackground-color: #eee;\nfont-family: 'Lato', sans-serif;\n}\npage-wrapper {\nposition: relative;\n}\nli {\nlist-style: none;\n}\na {\ncolor: #000;\ntext-decoration: none;\n}\n/ global classes styling / container {\nmax-width: 1000px;\nwidth: 100%;\nmargin: 0 auto;\n} btn {\npadding: 0 20px;\nheight: 40px;\nfont-size: 1em;\nfont-weight: 900;\ntext-transform: uppercase;\nborder: 3px black solid;\nborder-radius: 2px;\nbackground: transparent;\ncursor: pointer;\n} grid {\ndisplay: flex;\n}\nheader {\nposition: fixed;\ntop: 0;\nmin-height: 75px;\npadding: 0px 20px;\ndisplay: flex;\njustify-content: space-around;\nalign-items: center;\nbackground-color: #eee;\n}\n@media (max-width: 600px) {\nheader {\nflex-wrap: wrap;\n}\n} logo {\nwidth: 60vw;\n}\n@media (max-width: 650px) { logo {\nmargin-top: 15px;\nwidth: 100%;\nposition: relative;\n}\n} logo>img {\nwidth: 100%;\nheight: 100%;\nmax-width: 300px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ntext-align: center;\nmargin-left: 20px;\n}\n@media (max-width: 650px) {",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "50ae281cfd09eeca304bcadeed3be469",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
    "source_type": "git_repo",
    "title": "Product Landing Page",
    "content": "{ display: flex; } header { position: fixed; top: 0; min-height: 75px; padding: 0px 20px; display: flex; justify-content: space-around; align-items: center; background-color: #eee; } @media (max-width: 600px) { header { flex-wrap: wrap; } } logo { width: 60vw; } @media (max-width: 650px) { logo { margin-top: 15px; width: 100%; position: relative; } } logo>img { width: 100%; height: 100%; max-width: 300px; display: flex; justify-content: center; align-items: center; text-align: center; margin-left: 20px; } @media (max-width: 650px) {logo>img {\nmargin: 0 auto;\n}\n}\nnav {\nfont-weight: 400;\n}\n@media (max-width: 650px) {\nnav {\nmargin-top: 10px;\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ntext-align: center;\npadding: 0 50px;\n}\nnav li {\npadding-bottom: 5px;\n}\n}\nnav>ul {\nwidth: 35vw;\ndisplay: flex;\nflex-direction: row;\njustify-content: space-around;\n}\n@media (max-width: 650px) {\nnav>ul {\nflex-direction: column;\n}\n}\nhero {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\ntext-align: center;\nheight: 200px;\nmargin-top: 50px;\n}\nhero>h2 {\nmargin-bottom: 20px;\nword-wrap: break-word;\n}\nhero input[type='email'] {\nmax-width: 275px;\nwidth: 100%;\npadding: 5px;\n}\nhero input[type='submit'] {\nmax-width: 150px;\nwidth: 100%;\nheight: 30px;\nmargin: 15px 0;\nborder: 0;\nbackground-color: #f1c40f;\n}\nhero input[type='submit']:hover {\nbackground-color: orange;\ntransition: background-color 1s;\n}\n@media (max-width: 650px) {\n#hero {\nmargin-top: 120px;\n}\n}\nfeatures {\nmargin-top: 30px;\n}\nfeatures",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "63f197229888f2f69f6b9993dfd545b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
    "source_type": "git_repo",
    "title": "Product Landing Page",
    "content": "hero { display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center; height: 200px; margin-top: 50px; } hero>h2 { margin-bottom: 20px; word-wrap: break-word; } hero input[type='email'] { max-width: 275px; width: 100%; padding: 5px; } hero input[type='submit'] { max-width: 150px; width: 100%; height: 30px; margin: 15px 0; border: 0; background-color: #f1c40f; } hero input[type='submit']:hover { background-color: orange; transition: background-color 1s; } @media (max-width: 650px) { #hero { margin-top: 120px; } } features { margin-top: 30px; } featuresicon {\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nheight: 125px;\nwidth: 20vw;\ncolor: darkorange;\n}\n@media (max-width: 550px) {\n#features icon {\ndisplay: none;\n}\n}\nfeatures desc {\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nheight: 125px;\nwidth: 80vw;\npadding: 5px;\n}\n@media (max-width: 550px) {\n#features desc {\nwidth: 100%;\ntext-align: center;\npadding: 0;\nheight: 150px;\n}\n}\n@media (max-width: 650px) {\n#features {\nmargin-top: 0;\n}\n}\nhow-it-works {\nmargin-top: 50px;\ndisplay: flex;\njustify-content: center;\n}\nhow-it-works>iframe {\nmax-width: 560px;\nwidth: 100%;\n}\npricing {\nmargin-top: 60px;\ndisplay: flex;\nflex-direction: row;\njustify-content: center;\n} product {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ntext-align: center;\nwidth: calc(100% / 3);\nmargin: 10px;\nborder: 1px solid #000;\nborder-radius: 3px;\n} product> level {\nbackground-color: #ddd;\ncolor: black;\npadding: 15px 0;\nwidth: 100%;\ntext-transform: uppercase;\nfont-weight: 700;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "8c05d6d60b329b6aa2c2011f737cfc51",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
    "source_type": "git_repo",
    "title": "Product Landing Page",
    "content": "(max-width: 650px) { #features { margin-top: 0; } } how-it-works { margin-top: 50px; display: flex; justify-content: center; } how-it-works>iframe { max-width: 560px; width: 100%; } pricing { margin-top: 60px; display: flex; flex-direction: row; justify-content: center; } product { display: flex; flex-direction: column; align-items: center; text-align: center; width: calc(100% / 3); margin: 10px; border: 1px solid #000; border-radius: 3px; } product> level { background-color: #ddd; color: black; padding: 15px 0; width: 100%; text-transform: uppercase; font-weight: 700; }product>h2 {\nmargin-top: 15px;\n} product>ol {\nmargin: 15px 0;\n} product>ol>li {\npadding: 5px 0;\n} product>button {\nborder: 0;\nmargin: 15px 0;\nbackground-color: #f1c40f;\nfont-weight: 400;\n} product>button:hover {\nbackground-color: orange;\ntransition: background-color 1s;\n}\n@media (max-width: 800px) {\n#pricing {\nflex-direction: column;\n} product {\nmax-width: 300px;\nwidth: 100%;\nmargin: 0 auto;\nmargin-bottom: 10px;\n}\n}\nfooter {\nmargin-top: 30px;\nbackground-color: #ddd;\npadding: 20px;\n}\nfooter>ul {\ndisplay: flex;\njustify-content: flex-end;\n}\nfooter>ul>li {\npadding: 0 10px;\n}\nfooter>span {\nmargin-top: 5px;\ndisplay: flex;\njustify-content: flex-end;\nfont-size: 0 9em;\ncolor: #444;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18453,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-product-landing-page\\587d78af367417b2b2512b04.md",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "f3c76eae784e195ae56ab71b0d080259",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-quicksort\\681dbcca65bbda5f286dc0ca.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 681dbcca65bbda5f286dc0ca\ntitle: Implement the Quicksort Algorithm\nchallengeType: 27\ndashedName: implement-the-quicksort-algorithm\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should define a function named quick_sort to implement the quicksort algorithm The quick_sort function should take a list of integers as input and return a new list of these integers in sorted order from least to greatest To implement the algorithm, you should:\nChoose a pivot value from the elements of the input list (use the first or the last element of the list) Partition the input list into three sublists: one with elements less than the pivot, one with elements equal to the pivot, and one with elements greater than the pivot Recursively call quick_sort to sort the sublists and concatenate the sorted sublists to produce the final sorted list --hints--\nYou should have a function named quick_sort js\n({ test: () => runPython(`assert _Node(_code) has_function(\"quick_sort\")`) })\nYour quick_sort function should take a single parameter js\n({ test: () => runPython(`\nfrom inspect import signature\nsig = signature(quick_sort)\nassert len(sig parameters) == 1\n`) })\nquick_sort([]) should return an empty list js\n({ test: () => runPython(`assert quick_sort([]) == []`) })\nYour quick_sort function should not modify the list passed to it as the argument js\n({ test: () => runPython(`\n_test_list = [20, 3, 14, 1, 5]\nquick_sort(_test_list)\nassert _test_list == [20, 3, 14, 1, 5]\n`) })\nquick_sort([20, 3, 14, 1, 5]) should return [1, 3, 5, 14, 20] js\n({ test: () => runPython(`assert quick_sort([20, 3, 14, 1, 5]) == [1, 3, 5, 14, 20]`) })\nquick_sort([83, 4, 24, 2]) should return [2, 4, 24, 83]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3200,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-quicksort\\681dbcca65bbda5f286dc0ca.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "72b2880f7d3eec774d082df0e2623c8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-quicksort\\681dbcca65bbda5f286dc0ca.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "function should not modify the list passed to it as the argument js ({ test: () => runPython(` _test_list = [20, 3, 14, 1, 5] quick_sort(_test_list) assert _test_list == [20, 3, 14, 1, 5] `) }) quick_sort([20, 3, 14, 1, 5]) should return [1, 3, 5, 14, 20] js ({ test: () => runPython(`assert quick_sort([20, 3, 14, 1, 5]) == [1, 3, 5, 14, 20]`) }) quick_sort([83, 4, 24, 2]) should return [2, 4, 24, 83]js\n({ test: () => runPython(`assert quick_sort([83, 4, 24, 2]) == [2, 4, 24, 83]`) })\nquick_sort([4, 42, 16, 23, 15, 8]) should return [4, 8, 15, 16, 23, 42] js\n({ test: () => runPython(`assert quick_sort([4, 42, 16, 23, 15, 8]) == [4, 8, 15, 16, 23, 42]`) })\nquick_sort([87, 11, 23, 18, 18, 23, 11, 56, 87, 56]) should return [11, 11, 18, 18, 23, 23, 56, 56, 87, 87] js\n({ test: () => runPython(`assert quick_sort([87, 11, 23, 18, 18, 23, 11, 56, 87, 56]) == [11, 11, 18, 18, 23, 23, 56, 56, 87, 87]`) })\nYou should not use the built-in sorted() function in your code js\n({ test: () => runPython(`\nassert not _Node(_code) block_has_call(\"sorted\")\n`) })\nYou should not use the sort() method in your code",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3200,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-quicksort\\681dbcca65bbda5f286dc0ca.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "4fdbf5132d1ec0d22552bbe0b4ec4234",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-quicksort\\681dbcca65bbda5f286dc0ca.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "56, 87, 56]) should return [11, 11, 18, 18, 23, 23, 56, 56, 87, 87] js ({ test: () => runPython(`assert quick_sort([87, 11, 23, 18, 18, 23, 11, 56, 87, 56]) == [11, 11, 18, 18, 23, 23, 56, 56, 87, 87]`) }) You should not use the built-in sorted() function in your code js ({ test: () => runPython(` assert not _Node(_code) block_has_call(\"sorted\") `) }) You should not use the sort() method in your codejs\n({ test: () => runPython(`\nassert not _Node(_code) block_has_call(\"sort\")\n`) })\n--seed--\n--seed-contents--\n```py\n```\n--solutions--\npy\ndef quick_sort(numbers):\nif not numbers:\nreturn []\npivot = numbers[0]\nlesser = []\nequal = []\ngreater = []\nfor number in numbers:\nif number < pivot:\nlesser append(number)\nelif number > pivot:\ngreater append(number)\nelse:\nequal append(number)\nreturn quick_sort(lesser) + equal + quick_sort(greater)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3200,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-quicksort\\681dbcca65bbda5f286dc0ca.md",
      "source_type": "git_repo"
    },
    "token_count": 280,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "dd8bce6b7d792435f6ede872c9c1d83a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5e444147903586ffb414c94f\ntitle: Build a Polygon Area Calculator\nchallengeType: 27\ndashedName: build-a-polygon-area-calculator\n--description--\nIn this project, you will use object-oriented programming to create a Rectangle class and a Square class The Square class should be a subclass of Rectangle and inherit its methods and attributes Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create a Rectangle class When a Rectangle object is created, it should be initialized with width and height attributes The class should also contain the following methods:\nset_width: Sets the width of the rectangle set_height: Sets the height of the rectangle get_area: Returns area (\\( \\text{width} \\times \\text{height} \\)) get_perimeter: Returns perimeter \\( 2(\\text{width} + \\text{height}) \\) get_diagonal: Returns diagonal \\( \\sqrt{\\text{width}^2 + \\text{height}^2} \\) get_picture: Returns a string that represents the shape using lines of * The number of lines should be equal to the height and the number of * in each line should be equal to the width There should be a new line (\\n) at the end of each line If the width or height is larger than 50, this should return the string: Too big for picture get_amount_inside: Takes another shape (square or rectangle) as an argument Returns the number of times the passed in shape could fit inside the shape (with no rotations) For instance, a rectangle with a width of 4 and a height of 8 could fit in two squares with sides of 4 If an instance of a Rectangle is represented as a string, it should look like: Rectangle(width=5, height=10) You should create a Square class that subclasses Rectangle When a Square object is created, it should be initialized with a single side length The __init__ method should store the side length in both the width and height attributes from the Rectangle class The Square class should contain the following methods:\nset_width: Overrides the set_width method from the Rectangle class It should set the width and height to the side length set_height: Overrides the set_height method from the Rectangle class It should set the width and height to the side length set_side: Sets the height and width of the square equal to the side length",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 24499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 15
  },
  {
    "id": "42431f00101dac1c474a29bbb81489fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the side length in both the width and height attributes from the Rectangle class The Square class should contain the following methods: set_width: Overrides the set_width method from the Rectangle class It should set the width and height to the side length set_height: Overrides the set_height method from the Rectangle class It should set the width and height to the side length set_side: Sets the height and width of the square equal to the side lengthThe Square class should be able to access the Rectangle class methods If an instance of a Square is represented as a string, it should look like: Square(side=9) Usage example\n```py\nrect = Rectangle(10, 5)\nprint(rect get_area())\nrect set_height(3)\nprint(rect get_perimeter())\nprint(rect)\nprint(rect get_picture())\nsq = Square(9)\nprint(sq get_area())\nsq set_side(4)\nprint(sq get_diagonal())\nprint(sq)\nprint(sq get_picture())\nrect set_height(8)\nrect set_width(16)\nprint(rect get_amount_inside(sq))\n```\nThat code should return:\n```bash\n50\n26\nRectangle(width=10, height=3)\n81\n5 656854249492381\nSquare(side=4)\n8\n```\n--hints--\nYou should have a Rectangle class js\n({ test: () => assert(runPython(`_Node(_code) has_class(\"Rectangle\")`)) })\nYou should have a Square class js\n({ test: () => assert(runPython(`_Node(_code) has_class(\"Square\")`)) })\nThe Square class should be a subclass of the Rectangle class ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef test_subclass(self):\nactual = issubclass(shape_calculator Square, shape_calculator Rectangle)\nexpected = True\nself assertEqual(actual, expected, 'Expected Square class to be a subclass of the Rectangle class ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 24499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 1,
    "total_chunks": 15
  },
  {
    "id": "7fd37b1fdf5aae888cd627e9a83056e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "({ test: () => { pyodide FS writeFile('/home/pyodide/shape_calculator py', code); pyodide FS writeFile('/home/pyodide/test_module py', import unittest import shape_calculator from importlib import reload reload(shape_calculator) class UnitTests(unittest TestCase): maxDiff = None def test_subclass(self): actual = issubclass(shape_calculator Square, shape_calculator Rectangle) expected = True self assertEqual(actual, expected, 'Expected Square class to be a subclass of the Rectangle class ') ); const testCode = from unittest import main from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t resultwasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nThe Square class should be a distinct class from the Rectangle class ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef test_distinct_classes(self):\nactual = shape_calculator Square is not shape_calculator Rectangle\nexpected = True\nself assertEqual(actual, expected, 'Expected Square class to be a distinct class from the Rectangle class ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nA square object should be an instance of the Square class and the Rectangle class ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself sq = shape_calculator Square(5)\ndef test_square_is_square_and_rectangle(self):\nactual = isinstance(self sq, shape_calculator Square) and isinstance(self sq, shape_calculator Rectangle)\nexpected = True\nself",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 24499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 15
  },
  {
    "id": "83bc1bd9031d3d60dc29a6e958d0aecf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "out = runPython(testCode); assert(out); } }) ``` A square object should be an instance of the Square class and the Rectangle class ``js ({ test: () => { pyodide FS writeFile('/home/pyodide/shape_calculator py', code); pyodide FS writeFile('/home/pyodide/test_module py', import unittest import shape_calculator from importlib import reload reload(shape_calculator) class UnitTests(unittest TestCase): maxDiff = None def setUp(self): self sq = shape_calculator Square(5) def test_square_is_square_and_rectangle(self): actual = isinstance(self sq, shape_calculator Square) and isinstance(self sq, shape_calculator Rectangle) expected = True selfassertEqual(actual, expected, 'Expected square object to be an instance of the Square class and the Rectangle class ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nThe string representation of Rectangle(3, 6) should be Rectangle(width=3, height=6) ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself rect = shape_calculator Rectangle(3, 6)\ndef test_rectangle_string(self):\nactual = str(self rect)\nexpected = \"Rectangle(width=3, height=6)\"\nself assertEqual(actual, expected, 'Expected string representation of rectangle to be \"Rectangle(width=3, height=6)\"')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nThe string representation of Square(5) should be Square(side=5) ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 24499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 3,
    "total_chunks": 15
  },
  {
    "id": "150646dc9deb8c08c16b453276d53941",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "6) def test_rectangle_string(self): actual = str(self rect) expected = \"Rectangle(width=3, height=6)\" self assertEqual(actual, expected, 'Expected string representation of rectangle to be \"Rectangle(width=3, height=6)\"') ); const testCode = from unittest import main from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t result wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` The string representation of Square(5) should be Square(side=5) ``js ({ test: () => { pyodide FS writeFile('/home/pyodide/shape_calculator py', code); pyodide FS writeFile('/home/pyodide/test_modulepy',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself sq = shape_calculator Square(5)\ndef test_square_string(self):\nactual = str(self sq)\nexpected = \"Square(side=5)\"\nself assertEqual(actual, expected, 'Expected string representation of square to be \"Square(side=5)\"')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nRectangle(3, 6) get_area() should return 18 ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself rect = shape_calculator Rectangle(3, 6)\ndef test_area(self):\nactual = self rect get_area()\nexpected = 18\nself assertEqual(actual, expected, 'Expected area of rectangle to be 18')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nSquare(5)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 24499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 4,
    "total_chunks": 15
  },
  {
    "id": "8527b6f603bb1d08a7ca0f64fe3bd66c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "py', import unittest import shape_calculator from importlib import reload reload(shape_calculator) class UnitTests(unittest TestCase): maxDiff = None def setUp(self): self rect = shape_calculator Rectangle(3, 6) def test_area(self): actual = self rect get_area() expected = 18 self assertEqual(actual, expected, 'Expected area of rectangle to be 18') ); const testCode = from unittest import main from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t result wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` Square(5)get_area() should return 25 ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself sq = shape_calculator Square(5)\ndef test_area(self):\nactual = self sq get_area()\nexpected = 25\nself assertEqual(actual, expected, 'Expected area of square to be 25')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nRectangle(3, 6) get_perimeter() should return 18 ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself rect = shape_calculator Rectangle(3, 6)\ndef test_perimeter(self):\nactual = self rect get_perimeter()\nexpected = 18\nself assertEqual(actual, expected, 'Expected perimeter of rectangle to be 18')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 24499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 5,
    "total_chunks": 15
  },
  {
    "id": "0e27590a19d3f60c725024fa63c5d06d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "() => { pyodide FS writeFile('/home/pyodide/shape_calculator py', code); pyodide FS writeFile('/home/pyodide/test_module py', import unittest import shape_calculator from importlib import reload reload(shape_calculator) class UnitTests(unittest TestCase): maxDiff = None def setUp(self): self rect = shape_calculator Rectangle(3, 6) def test_perimeter(self): actual = self rect get_perimeter() expected = 18 self assertEqual(actual, expected, 'Expected perimeter of rectangle to be 18') ); const testCode = from unittest import main from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t resultwasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nSquare(5) get_perimeter() should return 20 ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself sq = shape_calculator Square(5)\ndef test_perimeter(self):\nactual = self sq get_perimeter()\nexpected = 20\nself assertEqual(actual, expected, 'Expected perimeter of square to be 20')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nRectangle(3, 6) get_diagonal() should return 6 708203932499369 ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself rect = shape_calculator Rectangle(3, 6)\ndef test_diagonal(self):\nactual = self rect get_diagonal()\nexpected = 6 708203932499369\nself",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 24499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 6,
    "total_chunks": 15
  },
  {
    "id": "3fe326a99d43ff73e81c064f5226ae44",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "import test_module reload(test_module) t = main(module='test_module', exit=False) t result wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` Rectangle(3, 6) get_diagonal() should return 6 708203932499369 ``js ({ test: () => { pyodide FS writeFile('/home/pyodide/shape_calculator py', code); pyodide FS writeFile('/home/pyodide/test_module py', import unittest import shape_calculator from importlib import reload reload(shape_calculator) class UnitTests(unittest TestCase): maxDiff = None def setUp(self): self rect = shape_calculator Rectangle(3, 6) def test_diagonal(self): actual = self rect get_diagonal() expected = 6 708203932499369 selfassertEqual(actual, expected, 'Expected diagonal of rectangle to be 6 708203932499369')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nSquare(5) get_diagonal() should return 7 0710678118654755 ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself sq = shape_calculator Square(5)\ndef test_diagonal(self):\nactual = self sq get_diagonal()\nexpected = 7 0710678118654755\nself assertEqual(actual, expected, 'Expected diagonal of square to be 7 0710678118654755')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nAn instance of the Rectangle class should have a different string representation after setting new values ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 24499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 7,
    "total_chunks": 15
  },
  {
    "id": "60fa1015e751e70b24db7629c40fd1c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "actual = self sq get_diagonal() expected = 7 0710678118654755 self assertEqual(actual, expected, 'Expected diagonal of square to be 7 0710678118654755') ); const testCode = from unittest import main from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t result wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` An instance of the Rectangle class should have a different string representation after setting new values ``js ({ test: () => { pyodide FS writeFile('/home/pyodide/shape_calculatorpy', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself rect = shape_calculator Rectangle(3, 6)\ndef test_set_attributes(self):\nself rect set_width(7)\nself rect set_height(8)\nactual = str(self rect)\nexpected = \"Rectangle(width=7, height=8)\"\nself assertEqual(actual, expected, 'Expected string representation of rectangle after setting new values to be \"Rectangle(width=7, height=8)\"')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nAn instance of the Square class should have a different string representation after setting new values by using set_side() ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself sq = shape_calculator Square(5)\ndef test_set_attributes(self):\nself sq set_side(2)\nactual = str(self sq)\nexpected = \"Square(side=2)\"\nself",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 24499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 8,
    "total_chunks": 15
  },
  {
    "id": "18208756258cb196fddbe4af30986663",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "out = runPython(testCode); assert(out); } }) ``` An instance of the Square class should have a different string representation after setting new values by using set_side() ``js ({ test: () => { pyodide FS writeFile('/home/pyodide/shape_calculator py', code); pyodide FS writeFile('/home/pyodide/test_module py', import unittest import shape_calculator from importlib import reload reload(shape_calculator) class UnitTests(unittest TestCase): maxDiff = None def setUp(self): self sq = shape_calculator Square(5) def test_set_attributes(self): self sq set_side(2) actual = str(self sq) expected = \"Square(side=2)\" selfassertEqual(actual, expected, 'Expected string representation of square after setting new values to be \"Square(side=2)\"')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nAn instance of the Square class should have a different string representation after setting new values by using set_width() or set_height() ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself sq = shape_calculator Square(5)\ndef test_set_attributes(self):\nself sq set_height(2)\nactual = str(self sq)\nexpected = \"Square(side=2)\"\nself assertEqual(actual, expected, 'Expected string representation of square after setting new values to be \"Square(side=2)\"')\nself sq set_width(4)\nactual = str(self sq)\nexpected = \"Square(side=4)\"\nself assertEqual(actual, expected, 'Expected string representation of square after setting width to be \"Square(side=4)\"')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nThe",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 24499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 9,
    "total_chunks": 15
  },
  {
    "id": "34866c0295461a8aba753fae5129a10a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "str(self sq) expected = \"Square(side=2)\" self assertEqual(actual, expected, 'Expected string representation of square after setting new values to be \"Square(side=2)\"') self sq set_width(4) actual = str(self sq) expected = \"Square(side=4)\" self assertEqual(actual, expected, 'Expected string representation of square after setting width to be \"Square(side=4)\"') ); const testCode = from unittest import main from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t result wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` Theget_picture() method should return a different string representation of a Rectangle instance ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself rect = shape_calculator Rectangle(3, 6)\ndef test_rectangle_picture(self):\nself rect set_width(7)\nself rect set_height(3)\nactual = self rect get_picture()\nexpected = \"*******\\\\n*******\\\\n*******\\\\n\"\nself assertEqual(actual, expected, 'Expected rectangle picture to be different ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nThe get_picture() method should return a different string representation of a Square instance ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself sq = shape_calculator Square(5)\ndef test_square_picture(self):\nself sq set_side(2)\nactual = self sq get_picture()\nexpected = \"**\\\\n**\\\\n\"\nself assertEqual(actual, expected, 'Expected square picture to be different",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 24499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 10,
    "total_chunks": 15
  },
  {
    "id": "32021e6aed2bc91dfc6ff07db07f4a81",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert(out); } }) ``` The get_picture() method should return a different string representation of a Square instance ``js ({ test: () => { pyodide FS writeFile('/home/pyodide/shape_calculator py', code); pyodide FS writeFile('/home/pyodide/test_module py', import unittest import shape_calculator from importlib import reload reload(shape_calculator) class UnitTests(unittest TestCase): maxDiff = None def setUp(self): self sq = shape_calculator Square(5) def test_square_picture(self): self sq set_side(2) actual = self sq get_picture() expected = \"**\\\\n**\\\\n\" self assertEqual(actual, expected, 'Expected square picture to be different')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nThe get_picture() method should return the string Too big for picture if the width or height attributes are larger than 50 ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself rect = shape_calculator Rectangle(3, 6)\ndef test_big_picture(self):\nself rect set_width(51)\nself rect set_height(3)\nactual = self rect get_picture()\nexpected = \"Too big for picture \"\nself assertEqual(actual, expected, 'Expected message: \"Too big for picture \"')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nRectangle(15,10) get_amount_inside(Square(5)) should return 6 ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 24499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 11,
    "total_chunks": 15
  },
  {
    "id": "64a5436da98b22156ba8c38badfd412b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "set_width(51) self rect set_height(3) actual = self rect get_picture() expected = \"Too big for picture \" self assertEqual(actual, expected, 'Expected message: \"Too big for picture \"') ); const testCode = from unittest import main from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t result wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` Rectangle(15,10) get_amount_inside(Square(5)) should return 6 ``js ({ test: () => { pyodide FS writeFile('/home/pyodide/shape_calculator py', code); pyodide FS writeFile('/home/pyodide/test_modulepy',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself rect = shape_calculator Rectangle(3, 6)\nself sq = shape_calculator Square(5)\ndef test_get_amount_inside(self):\nself rect set_height(10)\nself rect set_width(15)\nactual = self rect get_amount_inside(self sq)\nexpected = 6\nself assertEqual(actual, expected, 'Expected \"get_amount_inside\" to return 6 ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nRectangle(4,8) get_amount_inside(Rectangle(3, 6)) should return 1 ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself rect = shape_calculator Rectangle(3, 6)\ndef test_get_amount_inside_two_rectangles(self):\nrect2 = shape_calculator Rectangle(4, 8)\nactual = rect2 get_amount_inside(self rect)\nexpected = 1\nself assertEqual(actual, expected, 'Expected \"get_amount_inside\" to return 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 24499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 12,
    "total_chunks": 15
  },
  {
    "id": "8b376735a7212812aa58705821c14e40",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "`; const out = runPython(testCode); assert(out); } }) ``` Rectangle(4,8) get_amount_inside(Rectangle(3, 6)) should return 1 ``js ({ test: () => { pyodide FS writeFile('/home/pyodide/shape_calculator py', code); pyodide FS writeFile('/home/pyodide/test_module py', import unittest import shape_calculator from importlib import reload reload(shape_calculator) class UnitTests(unittest TestCase): maxDiff = None def setUp(self): self rect = shape_calculator Rectangle(3, 6) def test_get_amount_inside_two_rectangles(self): rect2 = shape_calculator Rectangle(4, 8) actual = rect2 get_amount_inside(self rect) expected = 1 self assertEqual(actual, expected, 'Expected \"get_amount_inside\" to return 1')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\nRectangle(2,3) get_amount_inside(Rectangle(3, 6)) should return 0 ``js\n({\ntest: () => {\npyodide FS writeFile('/home/pyodide/shape_calculator py', code);\npyodide FS writeFile('/home/pyodide/test_module py',\nimport unittest\nimport shape_calculator\nfrom importlib import reload\nreload(shape_calculator)\nclass UnitTests(unittest TestCase):\nmaxDiff = None\ndef setUp(self):\nself rect = shape_calculator Rectangle(3, 6)\ndef test_get_amount_inside_none(self):\nrect2 = shape_calculator Rectangle(2, 3)\nactual = rect2 get_amount_inside(self rect)\nexpected = 0\nself assertEqual(actual, expected, 'Expected \"get_amount_inside\" to return 0 ')\n);\nconst testCode =\nfrom unittest import main\nfrom importlib import reload\nimport test_module\nreload(test_module)\nt = main(module='test_module', exit=False)\nt result wasSuccessful()\n`;\nconst out = runPython(testCode);\nassert(out);\n}\n})\n```\n--seed--\n--seed-contents--\n```py\n```\n--solutions--\n```py\nclass Rectangle:\ndef init(self, width, height):\nself width = width\nself",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 24499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 13,
    "total_chunks": 15
  },
  {
    "id": "eac757f28a5cf3656b05e4d0f5ab1e58",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= shape_calculator Rectangle(3, 6) def test_get_amount_inside_none(self): rect2 = shape_calculator Rectangle(2, 3) actual = rect2 get_amount_inside(self rect) expected = 0 self assertEqual(actual, expected, 'Expected \"get_amount_inside\" to return 0 ') ); const testCode = from unittest import main from importlib import reload import test_module reload(test_module) t = main(module='test_module', exit=False) t result wasSuccessful() `; const out = runPython(testCode); assert(out); } }) ``` --seed-- --seed-contents-- ```py ``` --solutions-- ```py class Rectangle: def init(self, width, height): self width = width selfheight = height\ndef __str__(self):\nreturn f'Rectangle(width={self width}, height={self height})'\ndef set_width(self, width):\nself width = width\ndef set_height(self, height):\nself height = height\ndef get_area(self):\narea = self width * self height\nreturn area\ndef get_perimeter(self):\nperimeter = self width * 2 + self height * 2\nreturn perimeter\ndef get_diagonal(self):\ndiagonal = (self width ** 2 + self height ** 2) ** 0 5\nreturn diagonal\ndef get_picture(self):\nif self width < 50 and self height < 50:\npicture = f'{\"*\"*self width}\\n'*self height\nreturn picture\nelse:\nreturn 'Too big for picture '\ndef get_amount_inside(self, polygon):\nh_number = self height // polygon height\nw_number = self width // polygon width\nrepetition = h_number * w_number\nreturn repetition\nclass Square(Rectangle):\ndef init(self, side):\nself width = side\nself height = side\ndef __str__(self):\nreturn f'Square(side={self width})'\ndef set_width(self, side):\nself width = side\nself height = side\ndef set_height(self, side):\nself height = side\nself width = side\ndef set_side(self,side):\nself width = side\nself height = side\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 24499,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-polygon-area-calculator\\5e444147903586ffb414c94f.md",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 14,
    "total_chunks": 15
  },
  {
    "id": "2e5a515f961b6c627eba0467de3a37a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-project-idea-board\\67051431a73f1ca25d9a6f25.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67051431a73f1ca25d9a6f25\ntitle: Build a Project Idea Board\nchallengeType: 26\ndashedName: build-a-project-idea-board\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should define an object constant named projectStatus with the three keys: PENDING, SUCCESS, and FAILURE Each status should be assigned an object with a description key with the value Pending Execution, Executed Successfully, and Execution Failed, respectively You should define a class named ProjectIdea with a constructor that takes title and description as parameters Initialize the title and description properties with the provided parameters The class should also have a property named status that is set to the value projectStatus PENDING by default You should define a method named updateProjectStatus inside the ProjectIdea class This method should accept a newStatus parameter and update the status property to the given value You should define a ProjectIdeaBoard class with a constructor that accepts a title and initializes an empty array named ideas to hold instances of the ProjectIdea class You should define a method named pin inside the ProjectIdeaBoard class that accepts an instance of the ProjectIdea class and pushes the given instance to the ideas array You should define a method named unpin inside the ProjectIdeaBoard class This method should accept an instance of the ProjectIdea class and removes it from the ideas array You should define a method named count that returns the number of project ideas in the given ProjectIdeaBoard array You should define a method named formatToString that returns the name of the projects ideas, their description and status in the format:\njs\n<ProjectIdeaBoard title> has <ProjectIdeaBoard count> idea(s)\n<ProjectIdea title> (<ProjectIdea status description>) - <ProjectIdea description>\n<ProjectIdea title> (<ProjectIdea status description>) - <ProjectIdea description> --hints--\nYou should define an object constant named projectStatus with the correct project statuses and descriptions js\nassert isObject(projectStatus);\nassert sameMembers(Object keys(projectStatus), [\"PENDING\", \"SUCCESS\", \"FAILURE\"]);\nassert deepEqual(projectStatus PENDING, { description: \"Pending Execution\" });\nassert deepEqual(projectStatus SUCCESS, { description: \"Executed Successfully\" });\nassert deepEqual(projectStatus FAILURE, { description: \"Execution Failed\" });\nYou should have a ProjectIdea class",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12476,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-project-idea-board\\67051431a73f1ca25d9a6f25.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "d065b1699791dcd75cca1b7c92fab4a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-project-idea-board\\67051431a73f1ca25d9a6f25.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "title> has <ProjectIdeaBoard count> idea(s) <ProjectIdea title> (<ProjectIdea status description>) - <ProjectIdea description> <ProjectIdea title> (<ProjectIdea status description>) - <ProjectIdea description> --hints-- You should define an object constant named projectStatus with the correct project statuses and descriptions js assert isObject(projectStatus); assert sameMembers(Object keys(projectStatus), [\"PENDING\", \"SUCCESS\", \"FAILURE\"]); assert deepEqual(projectStatus PENDING, { description: \"Pending Execution\" }); assert deepEqual(projectStatus SUCCESS, { description: \"Executed Successfully\" }); assert deepEqual(projectStatus FAILURE, { description: \"Execution Failed\" }); You should have a ProjectIdea classjs\nassert isFunction(ProjectIdea);\nassert isObject(new ProjectIdea());\nYour ProjectIdea class should initialize the title property and description property based on the parameters passed It should also set the status to projectStatus PENDING js\nconst test = new ProjectIdea(\"sample title\", \"sample description\");\nassert isAbove(test title length, 0);\nassert isAbove(test description length, 0);\nassert strictEqual(test status description, \"Pending Execution\");\nYour ProjectIdea class should have a updateProjectStatus method js\nconst projectIdea = new ProjectIdea();\nassert isFunction(projectIdea updateProjectStatus);\nYou should have a ProjectIdeaBoard class js\nassert isFunction(ProjectIdeaBoard);\nassert isObject(new ProjectIdeaBoard());\nYour ProjectIdeaBoard should initialize the title property based on the parameter passed and initialize an empty array named ideas to hold instances of the ProjectIdea class js\nconst test = new ProjectIdeaBoard(\"Sample Title\");\nassert isArray(test ideas);\nassert lengthOf(test ideas, 0);\nassert exists(test title);\nYour ProjectIdeaBoard class should have a pin method js\nconst projectIdeaBoard = new ProjectIdeaBoard();\nassert isFunction(projectIdeaBoard pin);\nYour ProjectIdeaBoard class should have an unpin method js\nconst projectIdeaBoard = new ProjectIdeaBoard();\nassert isFunction(projectIdeaBoard unpin);\nYour ProjectIdeaBoard class should have a count method js\nconst projectIdeaBoard = new ProjectIdeaBoard();\nassert isFunction(projectIdeaBoard count);\nYour ProjectIdeaBoard class should have a formatToString method js\nconst projectIdeaBoard = new ProjectIdeaBoard();\nassert isFunction(projectIdeaBoard",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12476,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-project-idea-board\\67051431a73f1ca25d9a6f25.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "e3dfef7088a5eb8560f3f6ad8acebee9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-project-idea-board\\67051431a73f1ca25d9a6f25.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "isArray(test ideas); assert lengthOf(test ideas, 0); assert exists(test title); Your ProjectIdeaBoard class should have a pin method js const projectIdeaBoard = new ProjectIdeaBoard(); assert isFunction(projectIdeaBoard pin); Your ProjectIdeaBoard class should have an unpin method js const projectIdeaBoard = new ProjectIdeaBoard(); assert isFunction(projectIdeaBoard unpin); Your ProjectIdeaBoard class should have a count method js const projectIdeaBoard = new ProjectIdeaBoard(); assert isFunction(projectIdeaBoard count); Your ProjectIdeaBoard class should have a formatToString method js const projectIdeaBoard = new ProjectIdeaBoard(); assert isFunction(projectIdeaBoardformatToString);\nnew ProjectIdea(\"Smart Window Locks\", \"An automation project allowing users to lock, unlock windows automatically based on weather conditions \") should return { title: 'Smart Window Locks', description: 'An automation project allowing users to lock, unlock windows automatically based on weather conditions ', status: { description: 'Pending Execution' } } js\nconst windowLocks = new ProjectIdea(\n\"Smart Window Locks\",\n\"An automation project allowing users to lock, unlock windows automatically based on weather conditions \"\n);\nassert deepEqual(windowLocks, {\ntitle: \"Smart Window Locks\",\ndescription:\n\"An automation project allowing users to lock, unlock windows automatically based on weather conditions \",\nstatus: { description: \"Pending Execution\" },\n});\nCalling updateProjectStatus(projectStatus SUCCESS) on new ProjectIdea(\"Fitness Tracker App\", \"An app that tracks user workouts, diet, and sleep patterns \") should update the status to { description: 'Executed Successfully' } ```js\nlet mobileApp = new ProjectIdea(\n\"Fitness Tracker App\",\n\"An app that tracks user workouts, diet, and sleep patterns \"\n);\n// Update the project status to SUCCESS\nmobileApp updateProjectStatus(projectStatus SUCCESS);\nassert deepEqual(mobileApp, {\ntitle: \"Fitness Tracker App\",\ndescription: \"An app that tracks user workouts, diet, and sleep patterns \",\nstatus: { description: \"Executed Successfully\" },\n});\n```\nCalling updateProjectStatus(projectStatus FAILURE) on new ProjectIdea(\"Breakfast Chef Robot\", \"A robot that can follow a given list of instructions and prepare breakfast for the user and let them know through their phone",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12476,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-project-idea-board\\67051431a73f1ca25d9a6f25.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "0be0dbdbe7dc8712a3c125871de6e48b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-project-idea-board\\67051431a73f1ca25d9a6f25.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "user workouts, diet, and sleep patterns \" ); // Update the project status to SUCCESS mobileApp updateProjectStatus(projectStatus SUCCESS); assert deepEqual(mobileApp, { title: \"Fitness Tracker App\", description: \"An app that tracks user workouts, diet, and sleep patterns \", status: { description: \"Executed Successfully\" }, }); ``` Calling updateProjectStatus(projectStatus FAILURE) on new ProjectIdea(\"Breakfast Chef Robot\", \"A robot that can follow a given list of instructions and prepare breakfast for the user and let them know through their phone\") should update the status to { description: 'Execution Failed' } ```js\nlet breakfastChef = new ProjectIdea(\n\"Breakfast Chef Robot\",\n\"A robot that can follow a given list of instructions and prepare breakfast for the user and let them know through their phone \"\n);\n// Update the project status to FAILURE\nbreakfastChef updateProjectStatus(projectStatus FAILURE);\nassert deepEqual(breakfastChef, {\ntitle: \"Breakfast Chef Robot\",\ndescription:\n\"A robot that can follow a given list of instructions and prepare breakfast for the user and let them know through their phone \",\nstatus: { description: \"Execution Failed\" },\n});\n```\nCalling updateProjectStatus(projectStatus SUCCESS) on new ProjectIdea(\"Online Used Video Games Store\", \"An online platform where users can buy second hand physical copies of video games from other users \") should update the status to { description: 'Executed Successfully' } ```js\nlet usedVideoGamesStore = new ProjectIdea(\n\"Online Used Video Games Store\",\n\"An online platform where users can buy second hand physical copies of video games from other users \"\n);\n// Update the project status set to SUCCESS\nusedVideoGamesStore updateProjectStatus(projectStatus SUCCESS);\nassert deepEqual(usedVideoGamesStore, {\ntitle: \"Online Used Video Games Store\",\ndescription:\n\"An online platform where users can buy second hand physical copies of video games from other users \",\nstatus: { description: \"Executed Successfully\" },\n});\n```\nYou should be able to pin a ProjectIdea object to your ProjectIdeaBoard using the pin method ```js\nlet smartHome = new ProjectIdea(\n\"Smart Home System\",\n\"An integrated system to control lighting, temperature, and security devices remotely \"\n);\n// Create a project board and pin the idea\nlet techProjects = new ProjectIdeaBoard(\"Tech Projects Board\");\ntechProjects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12476,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-project-idea-board\\67051431a73f1ca25d9a6f25.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "e99d957cae29e3dbf6c56bab761bdb9c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-project-idea-board\\67051431a73f1ca25d9a6f25.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "can buy second hand physical copies of video games from other users \", status: { description: \"Executed Successfully\" }, }); ``` You should be able to pin a ProjectIdea object to your ProjectIdeaBoard using the pin method ```js let smartHome = new ProjectIdea( \"Smart Home System\", \"An integrated system to control lighting, temperature, and security devices remotely \" ); // Create a project board and pin the idea let techProjects = new ProjectIdeaBoard(\"Tech Projects Board\"); techProjectspin(smartHome);\n// Correct the assertion to compare the first idea in the array\nassert deepEqual(techProjects ideas[0], {\ntitle: 'Smart Home System',\ndescription: 'An integrated system to control lighting, temperature, and security devices remotely ',\nstatus: { description: 'Pending Execution' }\n});\n```\nYou should be able to unpin a ProjectIdea object to your ProjectIdeaBoard using the unpin method ```js\nlet smartHome = new ProjectIdea(\n\"Smart Home System\",\n\"An integrated system to control lighting, temperature, and security devices remotely \"\n);\n// Create a project board and pin ideas\nlet techProjects = new ProjectIdeaBoard(\"Tech Projects Board\");\ntechProjects pin(smartHome);\ntechProjects unpin(smartHome);\nassert isEmpty(techProjects ideas);\n```\nWhen new ProjectIdeaBoard(\"Empty Board\") is empty, emptyBoard formatToString() should return Empty Board has 0 idea(s)\\n ```js\nlet smartHome = new ProjectIdea(\n\"Smart Home System\",\n\"An integrated system to control lighting, temperature, and security devices remotely \"\n);\n// Create a project board and pin ideas\nlet techProjects = new ProjectIdeaBoard(\"Tech Projects Board\");\n// Create an empty board\nlet emptyBoard = new ProjectIdeaBoard(\"Empty Board\");\n// Attempt to unpin a project from an empty board\nemptyBoard unpin(smartHome);\nassert equal(emptyBoard formatToString(), \"Empty Board has 0 idea(s)\\n\");\n```\nWhen you pin new ProjectIdea(\"Smart Home System\", \"An integrated system to control lighting, temperature, and security devices remotely \") to new ProjectIdeaBoard(\"Tech Projects Board\"), techProjects formatToString() should return Tech Projects Board has 1 idea(s)\\nSmart Home System (Pending Execution) - An integrated system to control lighting, temperature, and security devices remotely \\n",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12476,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-project-idea-board\\67051431a73f1ca25d9a6f25.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "eb1d4c056c7440e9e735dd00c19e3c74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-project-idea-board\\67051431a73f1ca25d9a6f25.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= new ProjectIdeaBoard(\"Empty Board\"); // Attempt to unpin a project from an empty board emptyBoard unpin(smartHome); assert equal(emptyBoard formatToString(), \"Empty Board has 0 idea(s)\\n\"); ``` When you pin new ProjectIdea(\"Smart Home System\", \"An integrated system to control lighting, temperature, and security devices remotely \") to new ProjectIdeaBoard(\"Tech Projects Board\"), techProjects formatToString() should return Tech Projects Board has 1 idea(s)\\nSmart Home System (Pending Execution) - An integrated system to control lighting, temperature, and security devices remotely \\n```js\nlet techProjectsBoard = new ProjectIdeaBoard(\"Tech Projects Board\");\nlet smartHome = new ProjectIdea(\"Smart Home System\", \"An integrated system to control lighting, temperature, and security devices remotely \");\ntechProjectsBoard pin(smartHome);\nassert equal(techProjectsBoard formatToString(), \"Tech Projects Board has 1 idea(s)\\nSmart Home System (Pending Execution) - An integrated system to control lighting, temperature, and security devices remotely \\n\");\n```\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nconst projectStatus = {\nPENDING: { description: \"Pending Execution\" },\nSUCCESS: { description: \"Executed Successfully\" },\nFAILURE: { description: \"Execution Failed\" },\n};\nclass ProjectIdea {\nconstructor(title, description) {\nthis title = title;\nthis description = description;\nthis status = projectStatus PENDING;\n}\nupdateProjectStatus(newStatus) {\nthis status = newStatus;\n}\n}\nclass ProjectIdeaBoard {\nconstructor(title) {\nthis title = title;\nthis ideas = [];\n}\npin(newIdea) {\nthis ideas push(newIdea);\n}\nunpin(idea) {\nthis ideas splice(this ideas indexOf(idea), 1);\n}\ncount() {\nreturn this ideas length;\n}\nformatToString() {\nlet representation = ${this title} has ${this count()} idea(s)\\n;\nthis ideas forEach(\n(idea) =>\n(representation += `${idea title} (${idea status description}) - ${idea description}\\n`),\n);\nreturn representation;\n}\n}\nlet windowLocks = new ProjectIdea(\n\"Smart Window Locks\",\n\"An automation project allowing users to lock, unlock windows automatically based on weather conditions",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12476,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-project-idea-board\\67051431a73f1ca25d9a6f25.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "aeebca2bfa49d6f58c1e7da9b1eda9f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-project-idea-board\\67051431a73f1ca25d9a6f25.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "} pin(newIdea) { this ideas push(newIdea); } unpin(idea) { this ideas splice(this ideas indexOf(idea), 1); } count() { return this ideas length; } formatToString() { let representation = ${this title} has ${this count()} idea(s)\\n; this ideas forEach( (idea) => (representation += `${idea title} (${idea status description}) - ${idea description}\\n`), ); return representation; } } let windowLocks = new ProjectIdea( \"Smart Window Locks\", \"An automation project allowing users to lock, unlock windows automatically based on weather conditions\"\n);\nlet breakfastChef = new ProjectIdea(\n\"Breakfast Chef Robot\",\n\"A robot that can follow a given list of instructions and prepare breakfast for the user and let them know through their phone \"\n);\nbreakfastChef updateProjectStatus(projectStatus FAILURE);\nlet usedVideoGamesStore = new ProjectIdea(\n\"Online Used Video Games Store\",\n\"An online platform where users can buy second hand physical copies of video games from other users \"\n);\nusedVideoGamesStore updateProjectStatus(projectStatus SUCCESS);\nlet hardwareProjectIdeas = new ProjectIdeaBoard(\"Hardware Project Board\");\nhardwareProjectIdeas pin(windowLocks);\nhardwareProjectIdeas pin(breakfastChef);\nlet softwareProjectIdeas = new ProjectIdeaBoard(\"Software Project Board\");\nsoftwareProjectIdeas pin(usedVideoGamesStore);\nconsole log(softwareProjectIdeas formatToString());\nconsole log(hardwareProjectIdeas formatToString());\nhardwareProjectIdeas unpin(breakfastChef);\nconsole log(hardwareProjectIdeas formatToString());\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 12476,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-project-idea-board\\67051431a73f1ca25d9a6f25.md",
      "source_type": "git_repo"
    },
    "token_count": 335,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "f238fcc5351cb5ba2bef366cb18be886",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-quiz-game\\66f17db06803d11a1bd19a20.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66f17db06803d11a1bd19a20\ntitle: Build a Quiz Game\nchallengeType: 26\ndashedName: lab-quiz-game\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create an array named questions The questions array should contain at least five objects, each having the keys category, question, choices, and answer The category key should have the value of a string representing a question category The question key should have the value of a string representing a question The choices key should have the value of an array containing three strings, which are alternative answers to the question The answer key should have the value of a string, representing the correct answer to the question Also, the value of answer should be included in the choices array You should have a function named getRandomQuestion that takes an array of questions as a parameter and returns a random question object from the array You should have a function named getRandomComputerChoice that takes the array of the available choices as a parameter, and returns a random answer to the selected question You should have a function named getResults that takes the question object as the first parameter and the computer's choice as the second parameter The function should return The computer's choice is correct if the answer is correct Otherwise, it returns The computer's choice is wrong The correct answer is: <correct-answer>, where <correct-answer> is the value of the correct answer to the chosen question --hints--\nYou should create an array named questions js\nassert isArray(questions);\nThe questions array should contain at least five objects, each having the keys category, question, choices, and answer ```js\nassert isAtLeast(questions length, 5);\nquestions forEach(question => {\nassert isObject(question);\nassert hasAllKeys(question, ['category', 'choices', 'question', 'answer']);\n});\n```\nThe category key should have the value of a string representing a question category js\nassert isNotEmpty(questions);\nquestions forEach(({category}) => assert isString(category));\nThe question key should have the value of a string representing a question js\nassert isNotEmpty(questions);\nquestions forEach(({question}) => {\nassert isString(question);\nassert include(question, ' ');\n})\nThe choices key should have the value of an array containing three strings js\nassert isNotEmpty(questions);\nquestions forEach(({choices}) => {\nassert isArray(choices);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-quiz-game\\66f17db06803d11a1bd19a20.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "2ea21662f568dc0c4707ef9a7a8707b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-quiz-game\\66f17db06803d11a1bd19a20.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'question', 'answer']); }); ``` The category key should have the value of a string representing a question category js assert isNotEmpty(questions); questions forEach(({category}) => assert isString(category)); The question key should have the value of a string representing a question js assert isNotEmpty(questions); questions forEach(({question}) => { assert isString(question); assert include(question, ' '); }) The choices key should have the value of an array containing three strings js assert isNotEmpty(questions); questions forEach(({choices}) => { assert isArray(choices); assertlengthOf(choices, 3);\nchoices forEach(choice => assert isString(choice));\n})\nThe answer key should have the value of a string js\nassert isNotEmpty(questions);\nquestions forEach(({answer}) => assert isString(answer));\nThe value of answer should be included in the choices array js\nassert isNotEmpty(questions);\nquestions forEach(({answer, choices}) => assert oneOf(answer, choices));\nYou should have a function named getRandomQuestion that takes an array of questions as a parameter and returns a random question object from the array ```js\nconst parameters = __helpers getFunctionParams(getRandomQuestion toString());\nassert isFunction(getRandomQuestion);\nassert lengthOf(parameters, 1);\nassert lengthOf(getRandomQuestion, 1);\nassert isObject(getRandomQuestion(questions));\nassert deepInclude(questions, getRandomQuestion(questions), \"getRandomQuestion did not return one of the objects inside questions\");\n```\nYou should have a function named getRandomComputerChoice that takes the array of the available choices as a parameter, and returns a random answer to the selected question js\nassert isFunction(getRandomComputerChoice);\nconst randomArray = ['a', 'b', 'c'];\nassert oneOf(getRandomComputerChoice(randomArray), randomArray)\nYou should have a function named getResults js\nassert isFunction(getResults);\nYour getResults function should take the question object as the first parameter and the computer's choice as the second parameter js\nassert equal(getResults(questions[0], questions[0] answer), `The computer's choice is correct `);\nassert notEqual(getResults(questions[0] answer, questions[0]), `The computer's choice is correct `);\nIf the computer choice matches the answer, getResults should return The computer's choice is correct js\nassert equal(getResults(questions[0], questions[0] answer), `The computer's choice is correct",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-quiz-game\\66f17db06803d11a1bd19a20.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "e9a228cc6db1ad5598eaf7d7adbc8f0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-quiz-game\\66f17db06803d11a1bd19a20.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "You should have a function named getResults js assert isFunction(getResults); Your getResults function should take the question object as the first parameter and the computer's choice as the second parameter js assert equal(getResults(questions[0], questions[0] answer), `The computer's choice is correct `); assert notEqual(getResults(questions[0] answer, questions[0]), `The computer's choice is correct `); If the computer choice matches the answer, getResults should return The computer's choice is correct js assert equal(getResults(questions[0], questions[0] answer), `The computer's choice is correct`);\nIf the computer choice doesn't match the answer, getResults should return The computer's choice is wrong The correct answer is: <correct-answer>, where <correct-answer> is the value of the correct answer to the chosen question js\nassert equal(getResults({category: 'misc', choices: ['a', 'b', 'c'], question: \"question \", answer: \"b\"}, \"a\"), `The computer's choice is wrong The correct answer is: b`)\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nconst questions = [\n{\ncategory: \"science\",\nquestion: \"What is the chemical symbol for potassium \",\nchoices: [\"P\", \"K\", \"Pt\"],\nanswer: \"K\"\n},\n{\ncategory: \"science\",\nquestion: \"What is the unit of electrical resistance \",\nchoices: [\"Ohm\", \"Coulomb\", \"Sievert\"],\nanswer: \"Ohm\"\n},\n{\ncategory: \"geography\",\nquestion: \"What is the capital city of Australia \",\nchoices: [\"Sidney\", \"Canberra\", \"Wellington\"],\nanswer: \"Canberra\"\n},\n{\ncategory: \"literature\",\nquestion: 'Who wrote \"1984\" ',\nchoices: [\"Ray Bradbury\", \"Aldous Huxley\", \"George Orwell\"],\nanswer: \"George Orwell\"\n},\n{\ncategory: \"sport\",\nquestion: \"How many players are on a standard volleyball team \",\nchoices: [\"6\", \"7\", \"12\"],\nanswer: \"6\"\n}\n]\nfunction getRandomQuestion(questionList) {\nconst randomIndex = Math floor(Math random() * questionList length);\nreturn questionList[randomIndex];\n}\nfunction getRandomComputerChoice(choices) {\nconst randomIndex = Math floor(Math random() * choices",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-quiz-game\\66f17db06803d11a1bd19a20.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "78b4ac3b6a50cfaab0503e80702cffe3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-quiz-game\\66f17db06803d11a1bd19a20.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Australia \", choices: [\"Sidney\", \"Canberra\", \"Wellington\"], answer: \"Canberra\" }, { category: \"literature\", question: 'Who wrote \"1984\" ', choices: [\"Ray Bradbury\", \"Aldous Huxley\", \"George Orwell\"], answer: \"George Orwell\" }, { category: \"sport\", question: \"How many players are on a standard volleyball team \", choices: [\"6\", \"7\", \"12\"], answer: \"6\" } ] function getRandomQuestion(questionList) { const randomIndex = Math floor(Math random() * questionList length); return questionList[randomIndex]; } function getRandomComputerChoice(choices) { const randomIndex = Math floor(Math random() * choiceslength);\nreturn choices[randomIndex];\n}\nfunction getResults(obj, computerChoice) {\nreturn computerChoice === obj answer \"The computer's choice is correct \"\n: The computer's choice is wrong The correct answer is: ${obj answer};\n}\nconst questionObj = getRandomQuestion(questions);\nconst { question, choices } = questionObj;\nconsole log(question);\nconsole log(Choices: ${choices});\nconst computerChoice = getRandomComputerChoice(choices);\nconsole log(Computer chooses: ${computerChoice});\nconst results = getResults(questionObj, computerChoice);\nconsole log(results);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6880,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-quiz-game\\66f17db06803d11a1bd19a20.md",
      "source_type": "git_repo"
    },
    "token_count": 263,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "e54799d11f49cd12318169ac4ff7ff48",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-real-time-counter\\66bb3e20d3dc5b6d0a21f5dd.md",
    "source_type": "git_repo",
    "title": "Real Time Counter",
    "content": "id: 66bb3e20d3dc5b6d0a21f5dd\ntitle: Build a Real Time Counter\nchallengeType: 25\ndashedName: build-a-real-time-counter\ndemoType: onClick\n--description--\nIn this lab, you will build a real-time character counter by using JavaScript The character counter will display the number of characters entered in a textarea element The counter will update in real-time as the user types in the textarea Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a textarea element with the id of text-input There should be a p element with the id of char-count It should initially contain the text Character Count: 0/50 This placeholder text should be replaced with the current count of characters in the textarea element When the #text-input element contains the text hello coder the #char-count element should contain the text \"Character Count: 11/50\"\nWhen the #text-input element contains the text i am a programmer the #char-count element should contain the text \"Character Count: 17/50\"\nWhen the #text-input element contains the text hello world the #char-count element should contain the text \"Character Count: 11/50\"\nWhen the #text-input element contains the text I am learning a new language and it is called c++ the #char-count element should contain the text \"Character Count: 50/50\" NOTE: While the maxlength attribute would achieve the correct functionality, this lab requires a JavaScript only solution The user should not be able to enter more than 50 characters in the textarea element When the character count reaches 50, any extra input should be automatically trimmed and the text Character Count: 50/50 should be displayed in red Note: Be sure to link your stylesheet and the JavaScript file in your HTML --hints--\nYou should have a textarea element with the id of text-input js\nconst textInput = document querySelector('textarea');\nassert equal(textInput id, 'text-input');\nYou should have a p element with the id of char-count js\nconst charCount = document querySelector('p');\nassert equal(charCount id, 'char-count');\nThe #char-count element should initially contain the text Character Count: 0/50 js\nconst charCount = document querySelector('p') innerText;\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6032,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-real-time-counter\\66bb3e20d3dc5b6d0a21f5dd.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "3a6f71fd8814fcaee0b7b10605322b86",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-real-time-counter\\66bb3e20d3dc5b6d0a21f5dd.md",
    "source_type": "git_repo",
    "title": "Real Time Counter",
    "content": "Note: Be sure to link your stylesheet and the JavaScript file in your HTML --hints-- You should have a textarea element with the id of text-input js const textInput = document querySelector('textarea'); assert equal(textInput id, 'text-input'); You should have a p element with the id of char-count js const charCount = document querySelector('p'); assert equal(charCount id, 'char-count'); The #char-count element should initially contain the text Character Count: 0/50 js const charCount = document querySelector('p') innerText; assertequal(charCount, 'Character Count: 0/50');\nWhen the #text-input element contains the text hello coder the #char-count element should contain the text \"Character Count: 11/50\"\njs\nconst textInput = document getElementById('text-input');\nconst charCount = document getElementById('char-count');\ntextInput value = \"hello coder\";\ntextInput dispatchEvent(new Event('input'));\ntextInput dispatchEvent(new Event('change'));\nassert strictEqual(charCount innerText trim(), 'Character Count: 11/50');\nWhen the character count is 50, the text should be displayed in red js\nconst textInput = document getElementById('text-input');\nconst charCount = document getElementById('char-count');\ntextInput value = \"I am learning a new language and it is called c++ \";\ntextInput dispatchEvent(new Event('input'));\ntextInput dispatchEvent(new Event('change'));\nconst computedStyle = window getComputedStyle(charCount);\nassert oneOf(computedStyle color, [\n\"red\",\n\"rgb(255, 0, 0)\",\n\"rgb(100%, 0%, 0%)\",\n\"rgba(255, 0, 0, 1)\",\n\"rgba(100%, 0%, 0%, 1)\",\n\"hsl(0, 100%, 50%)\",\n\"hsla(0, 100%, 50%, 1)\"\n]);\nIf character count is greater than or equal to 50, the extra input should be trimmed js\nconst textInput = document getElementById('text-input');\ntextInput value = \"I am learning a new programming language and it is called c++ \";\ntextInput dispatchEvent(new Event('input'));\ntextInput dispatchEvent(new Event('change'));\nassert strictEqual(textInput value",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6032,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-real-time-counter\\66bb3e20d3dc5b6d0a21f5dd.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "fa8f58ef4fcdf11ff114a438d094f0be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-real-time-counter\\66bb3e20d3dc5b6d0a21f5dd.md",
    "source_type": "git_repo",
    "title": "Real Time Counter",
    "content": "window getComputedStyle(charCount); assert oneOf(computedStyle color, [ \"red\", \"rgb(255, 0, 0)\", \"rgb(100%, 0%, 0%)\", \"rgba(255, 0, 0, 1)\", \"rgba(100%, 0%, 0%, 1)\", \"hsl(0, 100%, 50%)\", \"hsla(0, 100%, 50%, 1)\" ]); If character count is greater than or equal to 50, the extra input should be trimmed js const textInput = document getElementById('text-input'); textInput value = \"I am learning a new programming language and it is called c++ \"; textInput dispatchEvent(new Event('input')); textInput dispatchEvent(new Event('change')); assert strictEqual(textInput valuelength, 50);\n--seed--\n--seed-contents--\n```html\nReal Time Counter\n```\n```css\n```\n```js\n```\n--solutions--\n```html\nReal-time Character Counter\nReal-Time Character Counter\nCharacter Count: 0/50\n```\n```css\nbody {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nfont-family: Arial, sans-serif;\nbackground-color: #c0c1ec;\nmargin: 0;\n}\nh1{\nbackground-color: #f2f48b;\npadding-left: 10px;\npadding-right: 10px;\n} container {\ntext-align: center;\n}\ntextarea {\nwidth: 300px;\nheight: 100px;\nfont-size: 18px;\npadding: 10px;\nborder: 1px solid #ccc;\nborder-radius: 5px;\nresize: none;\ndisplay: block;\nmargin: 0 auto;\nborder: 1px solid slategray;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0 1);\n}\ntextarea:focus {\noutline: none;\nborder-color: #f2f48b;\n}\nchar-count {\nmargin-top: 10px;\nfont-size: 18px;\ncolor: darkslategray;\nfont-weight: bold;\n}\n```\n```js\ndocument getElementById(\"text-input\") addEventListener(\"input\", function () {\nlet textInput = document getElementById(\"text-input\");\nlet charCount = textInput value",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6032,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-real-time-counter\\66bb3e20d3dc5b6d0a21f5dd.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "c26ebe3eaa5de10e46876212e4629ab9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-real-time-counter\\66bb3e20d3dc5b6d0a21f5dd.md",
    "source_type": "git_repo",
    "title": "Real Time Counter",
    "content": "text-align: center; } textarea { width: 300px; height: 100px; font-size: 18px; padding: 10px; border: 1px solid #ccc; border-radius: 5px; resize: none; display: block; margin: 0 auto; border: 1px solid slategray; box-shadow: 0 0 10px rgba(0, 0, 0, 0 1); } textarea:focus { outline: none; border-color: #f2f48b; } char-count { margin-top: 10px; font-size: 18px; color: darkslategray; font-weight: bold; } ``` ```js document getElementById(\"text-input\") addEventListener(\"input\", function () { let textInput = document getElementById(\"text-input\"); let charCount = textInput valuelength;\nif (charCount > 50) {\ntextInput value = textInput value substring(0, 50);\ncharCount = 50;\n}\nlet charCountDisplay = document getElementById(\"char-count\");\ncharCountDisplay innerHTML = Character Count: ${charCount}/50;\nif (charCount === 50) {\ncharCountDisplay style color = \"red\";\n}\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6032,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-real-time-counter\\66bb3e20d3dc5b6d0a21f5dd.md",
      "source_type": "git_repo"
    },
    "token_count": 262,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "66ddf5734b559d23e6668df795fa970d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-random-background-color-changer\\66b62d0ad68488dd76228d6c.md",
    "source_type": "git_repo",
    "title": "Debug a random background color changer",
    "content": "id: 66b62d0ad68488dd76228d6c\ntitle: Debug a Random Background Color Changer\nchallengeType: 25\ndashedName: debug-a-random-background-color-changer\ndemoType: onClick\n--description--\nCamperbot is learning JavaScript and has tried to build their own Random Background Color Changer However, they have made a few mistakes along the way Objective: Fulfill the user stories below and get all the tests to pass so the lab is functioning properly User Stories:\nYou should fix the syntax errors in the darkColorsArr array You should fix the ReferenceError thrown when the math object is referenced inside the getRandomIndex function You should round down randomIndex to the nearest whole number You should update the value of the body variable to use the correct method name and fix the related TypeError You should fix bgHexCodeSpanElement so that it correctly selects the element with the id of bg-hex-code You should modify the color variable inside changeBackgroundColor so that it is set to a random color from the darkColorsArr array You should update the btn variable so that it targets the button element Open up the index html to see the correct id name for that button element You should fix the line that adds an event listener for the click event to btn by passing a reference to the changeBackgroundColor function to the method Your background should randomly change to one of the colors in darkColorsArr each time the #btn is clicked --hints--\nYou should resolve the syntax errors in the darkColorsArr array Remember that array elements should be separated by commas js\nassert isArray(darkColorsArr);\nYou should fix the capitalization error in the math random() line js\nassert match(getRandomIndex toString(), /\\s*darkColorsArr\\ length\\s*\\*\\s*Math\\ random\\(\\s*\\)\\s*/);\nYou should round darkColorsArr length * Math random() down to the nearest whole number js\nassert match(getRandomIndex toString(), /Math\\ floor\\(\\s*(darkColorsArr\\ length\\s*\\*\\s*Math\\ random\\(\\s*\\)|Math\\ random\\(\\s*\\)\\s*\\*\\s*darkColorsArr\\ length)\\s*\\)/);\nYou should update the value of your body variable so that queryselector uses camel case js\nassert match(code, /const\\s+body\\s*=\\s*document\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7445,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-random-background-color-changer\\66b62d0ad68488dd76228d6c.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "2de5faf6cdb2d0c9e81722a4a5f481c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-random-background-color-changer\\66b62d0ad68488dd76228d6c.md",
    "source_type": "git_repo",
    "title": "Debug a random background color changer",
    "content": "the darkColorsArr array Remember that array elements should be separated by commas js assert isArray(darkColorsArr); You should fix the capitalization error in the math random() line js assert match(getRandomIndex toString(), /\\s*darkColorsArr\\ length\\s*\\*\\s*Math\\ random\\(\\s*\\)\\s*/); You should round darkColorsArr length * Math random() down to the nearest whole number js assert match(getRandomIndex toString(), /Math\\ floor\\(\\s*(darkColorsArr\\ length\\s*\\*\\s*Math\\ random\\(\\s*\\)|Math\\ random\\(\\s*\\)\\s*\\*\\s*darkColorsArr\\ length)\\s*\\)/); You should update the value of your body variable so that queryselector uses camel case js assert match(code, /const\\s+body\\s*=\\s*document\\querySelector\\s*\\(\\s*(\"|')body\\1\\s*\\)/);\nYou should fix \"bg-hex-code\" so it correctly references the id of bg-hex-code Remember that id selectors in CSS start with a hash symbol (#) js\nassert match(bgHexCodeSpanElement id, /bg-hex-code/);\nYou should call the getRandomIndex function inside the darkColorsArr[getRandomIndex] line js\nassert match(changeBackgroundColor toString(), /darkColorsArr\\[\\s*getRandomIndex\\(\\s*\\)\\s*\\]/);\nYou should fix the id name of \"#click-btn\" line to match the correct id name in the index html file js\nassert match(btn id, /btn/);\nYou should not call the changeBackgroundColor function Instead, you should pass the function reference to the addEventListener method js\nassert match(code, /btn\\ addEventListener\\s*\\(\\s*(\"|')click\\1\\s*,\\s*changeBackgroundColor\\s*\\)/);\n--seed--\n--seed-contents--\n```html\nDebug a random background color changer\nRandom Background Color changer\nHex Code: #110815\nChange Background Color\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n--dark-purple: #110815;\n--light-grey: #efefef;\n}\nbody {\nbackground-color: var(--dark-purple);\ncolor: var(--light-grey);\ntext-align: center;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7445,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-random-background-color-changer\\66b62d0ad68488dd76228d6c.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "24577c7f1ce89d6851e6ca579c16aadb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-random-background-color-changer\\66b62d0ad68488dd76228d6c.md",
    "source_type": "git_repo",
    "title": "Debug a random background color changer",
    "content": "/btn/); You should not call the changeBackgroundColor function Instead, you should pass the function reference to the addEventListener method js assert match(code, /btn\\ addEventListener\\s*\\(\\s*(\"|')click\\1\\s*,\\s*changeBackgroundColor\\s*\\)/); --seed-- --seed-contents-- ```html Debug a random background color changer Random Background Color changer Hex Code: #110815 Change Background Color ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --yellow: #f1be32; --golden-yellow: #feac32; --dark-purple: #110815; --light-grey: #efefef; } body { background-color: var(--dark-purple); color: var(--light-grey); text-align: center; }bg-information-container {\nmargin: 15px 0 25px;\nfont-size: 1 2rem;\n} btn {\ncursor: pointer;\npadding: 10px;\nmargin: 10px;\ncolor: var(--dark-purple);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n} btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\n```\n```js\nconst darkColorsArr = [\n\"#2C3E50\",\n\"#34495E\",\n\"#2C2C2C\"\n\"#616A6B\"\n\"#4A235A\"\n\"#2F4F4F\",\n\"#0E4B5A\",\n\"#36454F\",\n\"#2C3E50\",\n\"#800020\",\n];\nfunction getRandomIndex() {\nconst randomIndex = darkColorsArr length * math random();\nreturn randomIndex;\n}\nconsole log(getRandomIndex())\nconst body = document queryselector(\"body\");\nconst bgHexCodeSpanElement = document querySelector(\"bg-hex-code\");\nconsole log(bgHexCodeSpanElement)\nfunction changeBackgroundColor() {\nconst color = darkColorsArr[getRandomIndex];\nbgHexCodeSpanElement innerText = color;\nbody style backgroundColor = color;\n}\nconst btn = document querySelector(\"#click-btn\");\nconsole log(btn)\nbtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7445,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-random-background-color-changer\\66b62d0ad68488dd76228d6c.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "1c54a2bfb3147b07a9fa6764f97d7814",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-random-background-color-changer\\66b62d0ad68488dd76228d6c.md",
    "source_type": "git_repo",
    "title": "Debug a random background color changer",
    "content": "btn:hover { background-image: linear-gradient(#ffcc4c, #f89808); } ``` ```js const darkColorsArr = [ \"#2C3E50\", \"#34495E\", \"#2C2C2C\" \"#616A6B\" \"#4A235A\" \"#2F4F4F\", \"#0E4B5A\", \"#36454F\", \"#2C3E50\", \"#800020\", ]; function getRandomIndex() { const randomIndex = darkColorsArr length * math random(); return randomIndex; } console log(getRandomIndex()) const body = document queryselector(\"body\"); const bgHexCodeSpanElement = document querySelector(\"bg-hex-code\"); console log(bgHexCodeSpanElement) function changeBackgroundColor() { const color = darkColorsArr[getRandomIndex]; bgHexCodeSpanElement innerText = color; body style backgroundColor = color; } const btn = document querySelector(\"#click-btn\"); console log(btn) btnaddEventListener(\"click\", changeBackgroundColor());\n```\n--solutions--\n```html\nDebug a random background color changer\nRandom Background Color changer\nHex Code: #110815\nChange Background Color\n```\n```css\n,\n::before,\n*::after {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n:root {\n--yellow: #f1be32;\n--golden-yellow: #feac32;\n--dark-purple: #110815;\n--light-grey: #efefef;\n}\nbody {\nbackground-color: var(--dark-purple);\ncolor: var(--light-grey);\ntext-align: center;\n} bg-information-container {\nmargin: 15px 0 25px;\nfont-size: 1 2rem;\n} btn {\ncursor: pointer;\npadding: 10px;\nmargin: 10px;\ncolor: var(--dark-purple);\nbackground-color: var(--golden-yellow);\nbackground-image: linear-gradient(#fecc4c, #ffac33);\nborder-color: var(--golden-yellow);\nborder-width: 3px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7445,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-random-background-color-changer\\66b62d0ad68488dd76228d6c.md",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "d98ed1f7d547116c3d69f956b94fc515",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-random-background-color-changer\\66b62d0ad68488dd76228d6c.md",
    "source_type": "git_repo",
    "title": "Debug a random background color changer",
    "content": "background color changer Random Background Color changer Hex Code: #110815 Change Background Color ``` ```css , ::before, *::after { margin: 0; padding: 0; box-sizing: border-box; } :root { --yellow: #f1be32; --golden-yellow: #feac32; --dark-purple: #110815; --light-grey: #efefef; } body { background-color: var(--dark-purple); color: var(--light-grey); text-align: center; } bg-information-container { margin: 15px 0 25px; font-size: 1 2rem; } btn { cursor: pointer; padding: 10px; margin: 10px; color: var(--dark-purple); background-color: var(--golden-yellow); background-image: linear-gradient(#fecc4c, #ffac33); border-color: var(--golden-yellow); border-width: 3px; }btn:hover {\nbackground-image: linear-gradient(#ffcc4c, #f89808);\n}\n```\n```js\nconst darkColorsArr = [\n\"#2C3E50\",\n\"#34495E\",\n\"#2C2C2C\",\n\"#616A6B\",\n\"#4A235A\",\n\"#2F4F4F\",\n\"#0E4B5A\",\n\"#36454F\",\n\"#2C3E50\",\n\"#800020\",\n];\nfunction getRandomIndex() {\nconst randomIndex = Math floor(darkColorsArr length * Math random());\nreturn randomIndex;\n}\nconst body = document querySelector(\"body\");\nconst bgHexCodeSpanElement = document querySelector(\"#bg-hex-code\");\nfunction changeBackgroundColor() {\nconst color = darkColorsArr[getRandomIndex()];\nbgHexCodeSpanElement innerText = color;\nbody style backgroundColor = color;\n}\nconst btn = document querySelector(\"#btn\");\nbtn addEventListener(\"click\", changeBackgroundColor);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7445,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-random-background-color-changer\\66b62d0ad68488dd76228d6c.md",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "37711665b143a563d69ff12f936105b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-repeat-a-string\\afcc8d540bea9ea2669306b6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: afcc8d540bea9ea2669306b6\ntitle: Build a String Repeating Function\nchallengeType: 26\ndashedName: build-a-string-repeating-function\n--description--\nIn this lab, you will create a function that repeats a given string a specific number of times For the purpose of this lab, do not use the built-in repeat() method Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create a function named repeatStringNumTimes that takes two parameters: a string and a number The function should return the string repeated the specified number of times If the number is less than or equal to zero, the function should return an empty string --hints--\nYou should create a function named repeatStringNumTimes js\nassert isFunction(repeatStringNumTimes);\nrepeatStringNumTimes should take two parameters js\nassert lengthOf(repeatStringNumTimes, 2);\nThe function repeatStringNumTimes should always return a string js\nassert isString(repeatStringNumTimes('hello', 3));\nrepeatStringNumTimes(\"*\", 3) should return the string *** js\nassert strictEqual(repeatStringNumTimes('*', 3), '***');\nrepeatStringNumTimes(\"abc\", 3) should return the string abcabcabc js\nassert strictEqual(repeatStringNumTimes('abc', 3), 'abcabcabc');\nrepeatStringNumTimes(\"abc\", 4) should return the string abcabcabcabc js\nassert strictEqual(repeatStringNumTimes('abc', 4), 'abcabcabcabc');\nrepeatStringNumTimes(\"abc\", 1) should return the string abc js\nassert strictEqual(repeatStringNumTimes('abc', 1), 'abc');\nrepeatStringNumTimes(\"*\", 8) should return the string ******** js\nassert strictEqual(repeatStringNumTimes('*', 8), '********');\nrepeatStringNumTimes(\"abc\", -2) should return an empty string (\"\") js\nassert isEmpty(repeatStringNumTimes('abc', -2));\nrepeatStringNumTimes(\"abc\", 0) should return \"\" js\nassert isEmpty(repeatStringNumTimes('abc', 0));\nThe built-in repeat() method should not be used js\nassert notMatch(__helpers removeJSComments(code), /\\",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2426,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-repeat-a-string\\afcc8d540bea9ea2669306b6.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9726bf4ca6163359e131c7e25cace211",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-repeat-a-string\\afcc8d540bea9ea2669306b6.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "abcabcabc js assert strictEqual(repeatStringNumTimes('abc', 3), 'abcabcabc'); repeatStringNumTimes(\"abc\", 4) should return the string abcabcabcabc js assert strictEqual(repeatStringNumTimes('abc', 4), 'abcabcabcabc'); repeatStringNumTimes(\"abc\", 1) should return the string abc js assert strictEqual(repeatStringNumTimes('abc', 1), 'abc'); repeatStringNumTimes(\"*\", 8) should return the string ******** js assert strictEqual(repeatStringNumTimes('*', 8), '********'); repeatStringNumTimes(\"abc\", -2) should return an empty string (\"\") js assert isEmpty(repeatStringNumTimes('abc', -2)); repeatStringNumTimes(\"abc\", 0) should return \"\" js assert isEmpty(repeatStringNumTimes('abc', 0)); The built-in repeat() method should not be used js assert notMatch(__helpers removeJSComments(code), /\\repeat/g);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nfunction repeatStringNumTimes(str, num) {\nif (num < 1) return '';\nreturn num === 1 str : str + repeatStringNumTimes(str, num - 1);\n}\nrepeatStringNumTimes('abc', 3);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2426,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-repeat-a-string\\afcc8d540bea9ea2669306b6.md",
      "source_type": "git_repo"
    },
    "token_count": 279,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "504f0239b093c12a64e991c547812392",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-record-collection\\56533eb9ac21ba0edf2244cf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 56533eb9ac21ba0edf2244cf\ntitle: Build a Record Collection\nchallengeType: 26\ndashedName: build-a-record-collection\n--description--\nYou are creating a function that aids in the maintenance of a musical album collection The collection is organized as an object that contains multiple albums which are also objects Each album is represented in the collection with a unique id as the property name Within each album object, there are various properties describing information about the album Not all albums have complete information The updateRecords function takes 4 arguments represented by the following function parameters:\nrecords - an object containing several individual albums\nid - a number representing a specific album in the records object\nprop - a string representing the name of the album’s property to update\nvalue - a string containing the information used to update the album’s property\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYour function must always return the entire records object If value is an empty string, delete the given prop property from the album If prop isn't tracks and value isn't an empty string, assign the value to that album's prop If prop is tracks and value isn't an empty string, but the album doesn't have a tracks property, create an empty array and add value to it If prop is tracks and value isn't an empty string, add value to the end of the album's existing tracks array Note: A copy of the recordCollection object is used for the tests Your function should not directly refer to the recordCollection object, only the function parameter --before-each--\njs\nconst _recordCollection = {\n2548: {\nalbumTitle: 'Slippery When Wet',\nartist: 'Bon Jovi',\ntracks: ['Let It Rock', 'You Give Love a Bad Name']\n},\n2468: {\nalbumTitle: '1999',\nartist: 'Prince',\ntracks: ['1999', 'Little Red Corvette']\n},\n1245: {\nartist: 'Robert Palmer',\ntracks: []\n},\n5439: {\nalbumTitle: 'ABBA Gold'\n}\n};\n--hints--\nYou should have a updateRecords function js\nassert isFunction(updateRecords);\nAfter updateRecords(recordCollection, 5439, \"artist\", \"ABBA\"), artist should be the string ABBA\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5211,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-record-collection\\56533eb9ac21ba0edf2244cf.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "dcd3fd47eee853d1b857bc49cccbc615",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-record-collection\\56533eb9ac21ba0edf2244cf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--before-each-- js const _recordCollection = { 2548: { albumTitle: 'Slippery When Wet', artist: 'Bon Jovi', tracks: ['Let It Rock', 'You Give Love a Bad Name'] }, 2468: { albumTitle: '1999', artist: 'Prince', tracks: ['1999', 'Little Red Corvette'] }, 1245: { artist: 'Robert Palmer', tracks: [] }, 5439: { albumTitle: 'ABBA Gold' } }; --hints-- You should have a updateRecords function js assert isFunction(updateRecords); After updateRecords(recordCollection, 5439, \"artist\", \"ABBA\"), artist should be the string ABBA js assertequal(\nupdateRecords(_recordCollection, 5439, 'artist', 'ABBA')[5439]['artist'],\n'ABBA'\n);\nAfter updateRecords(recordCollection, 5439, \"tracks\", \"Take a Chance on Me\"), tracks should have the string Take a Chance on Me as the last and only element js\nupdateRecords(_recordCollection, 5439, 'tracks', 'Take a Chance on Me');\nassert lengthOf(_recordCollection[5439]['tracks'], 1);\nassert equal(_recordCollection[5439]['tracks'] pop(), 'Take a Chance on Me');\nAfter updateRecords(recordCollection, 2548, \"artist\", \"\"), artist should not be set\njs\nupdateRecords(_recordCollection, 2548, 'artist', '');\nassert isFalse(_recordCollection[2548] hasOwnProperty('artist'));\nAfter updateRecords(recordCollection, 1245, \"tracks\", \"Addicted to Love\"), tracks should have the string Addicted to Love as the last element js\nassert equal(\nupdateRecords(_recordCollection, 1245, 'tracks', 'Addicted to Love')[1245][\n'tracks'\n] pop(), 'Addicted to Love'\n);\nAfter updateRecords(recordCollection, 2468, \"tracks\", \"Free\"), tracks should have the string 1999 as the first element js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5211,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-record-collection\\56533eb9ac21ba0edf2244cf.md",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "e2f3647b729cd6501d1601b05e3d09c7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-record-collection\\56533eb9ac21ba0edf2244cf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "pop(), 'Take a Chance on Me'); After updateRecords(recordCollection, 2548, \"artist\", \"\"), artist should not be set js updateRecords(_recordCollection, 2548, 'artist', ''); assert isFalse(_recordCollection[2548] hasOwnProperty('artist')); After updateRecords(recordCollection, 1245, \"tracks\", \"Addicted to Love\"), tracks should have the string Addicted to Love as the last element js assert equal( updateRecords(_recordCollection, 1245, 'tracks', 'Addicted to Love')[1245][ 'tracks' ] pop(), 'Addicted to Love' ); After updateRecords(recordCollection, 2468, \"tracks\", \"Free\"), tracks should have the string 1999 as the first element js assertequal(\nupdateRecords(_recordCollection, 2468, 'tracks', 'Free')[2468][\n'tracks'\n][0], '1999'\n);\nAfter updateRecords(recordCollection, 2548, \"tracks\", \"\"), tracks should not be set\njs\nupdateRecords(_recordCollection, 2548, 'tracks', '');\nassert isFalse(_recordCollection[2548] hasOwnProperty('tracks'));\nAfter updateRecords(recordCollection, 1245, \"albumTitle\", \"Riptide\"), albumTitle should be the string Riptide\njs\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5211,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-record-collection\\56533eb9ac21ba0edf2244cf.md",
      "source_type": "git_repo"
    },
    "token_count": 276,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "5e8dbde9157f780dbe3cfd85e9b909b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-record-collection\\56533eb9ac21ba0edf2244cf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "as the last element js assert equal( updateRecords(_recordCollection, 1245, 'tracks', 'Addicted to Love')[1245][ 'tracks' ] pop(), 'Addicted to Love' ); After updateRecords(recordCollection, 2468, \"tracks\", \"Free\"), tracks should have the string 1999 as the first element js assertequal( updateRecords(_recordCollection, 2468, 'tracks', 'Free')[2468][ 'tracks' ][0], '1999' ); After updateRecords(recordCollection, 2548, \"tracks\", \"\"), tracks should not be set js updateRecords(_recordCollection, 2548, 'tracks', ''); assert isFalse(_recordCollection[2548] hasOwnProperty('tracks')); After updateRecords(recordCollection, 1245, \"albumTitle\", \"Riptide\"), albumTitle should be the string Riptide js assertequal(\nupdateRecords(_recordCollection, 1245, 'albumTitle', 'Riptide')[1245][\n'albumTitle'\n], 'Riptide'\n);\n--seed--\n--seed-contents--\n```js\nconst recordCollection = {\n2548: {\nalbumTitle: 'Slippery When Wet',\nartist: 'Bon Jovi',\ntracks: ['Let It Rock', 'You Give Love a Bad Name']\n},\n2468: {\nalbumTitle: '1999',\nartist: 'Prince',\ntracks: ['1999', 'Little Red Corvette']\n},\n1245: {\nartist: 'Robert Palmer',\ntracks: []\n},\n5439: {\nalbumTitle: 'ABBA Gold'\n}\n};\n```\n--solutions--\n```js\nconst recordCollection = {\n2548: {\nalbumTitle: 'Slippery When Wet',\nartist: 'Bon Jovi',\ntracks: ['Let It Rock', 'You Give Love a Bad Name']\n},\n2468: {\nalbumTitle: '1999',\nartist: 'Prince',\ntracks: ['1999', 'Little Red Corvette']\n},\n1245: {\nartist: 'Robert Palmer',\ntracks: []\n},\n5439: {\nalbumTitle: 'ABBA Gold'\n}\n};\nfunction updateRecords(records, id, prop, value) {\nif (value === '') delete records[id][prop];\nelse if (prop === 'tracks') {\nrecords[id][prop] = records[id][prop] || [];\nrecords[id][prop]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5211,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-record-collection\\56533eb9ac21ba0edf2244cf.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "6fa6f1ed259afba2efc456b58bb216be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-record-collection\\56533eb9ac21ba0edf2244cf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "```js const recordCollection = { 2548: { albumTitle: 'Slippery When Wet', artist: 'Bon Jovi', tracks: ['Let It Rock', 'You Give Love a Bad Name'] }, 2468: { albumTitle: '1999', artist: 'Prince', tracks: ['1999', 'Little Red Corvette'] }, 1245: { artist: 'Robert Palmer', tracks: [] }, 5439: { albumTitle: 'ABBA Gold' } }; function updateRecords(records, id, prop, value) { if (value === '') delete records[id][prop]; else if (prop === 'tracks') { records[id][prop] = records[id][prop] || []; records[id][prop]push(value);\n} else {\nrecords[id][prop] = value;\n}\nreturn records;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5211,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-record-collection\\56533eb9ac21ba0edf2244cf.md",
      "source_type": "git_repo"
    },
    "token_count": 174,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "a9d4420a9b3e3857630a470ee0063622",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-reverse-a-string\\a202eed8fc186c8434cb6d61.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a202eed8fc186c8434cb6d61\ntitle: Build a String Inverter\nchallengeType: 26\ndashedName: build-a-string-inverter\n--description--\nIn this lab, you will build a simple string inverter that reverses the characters of a given string.\nFor example, \"hello\" should become \"olleh\".\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab.\nUser Stories:\nYou should create a function named reverseString that takes a string as an argument.\nThe function should return the reversed string.\n--hints--\nYou should have a function named reverseString.\njs\nassert.isFunction(reverseString);\nreverseString should take a string as an argument.\njs\nassert.match(reverseString.toString(), /\\s*function\\s+reverseString\\s*\\(\\s*\\w+\\s*\\)/);\nreverseString(\"hello\") should return a string.\njs\nassert.isString(reverseString('hello'));\nreverseString(\"hello\") should return the string olleh.\njs\nassert.strictEqual(reverseString('hello'), 'olleh');\nreverseString(\"Howdy\") should return the string ydwoH.\njs\nassert.strictEqual(reverseString('Howdy'), 'ydwoH');\nreverseString(\"Greetings from Earth\") should return the string htraE morf sgniteerG.\njs\nassert.strictEqual(\nreverseString('Greetings from Earth'),\n'htraE morf sgniteerG'\n);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nfunction reverseString(str) {\nreturn str.split('').reverse().join('');\n}\nreverseString('hello');\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1526,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-reverse-a-string\\a202eed8fc186c8434cb6d61.md",
      "source_type": "git_repo"
    },
    "token_count": 343,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7d96d7848f2c5487c6e29c8ce80df337",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-recipe-page\\668f08ea07b99b1f4a91acab.md",
    "source_type": "git_repo",
    "title": "Chocolate chip cookies recipe",
    "content": "id: 668f08ea07b99b1f4a91acab\ntitle: Build a Recipe Page\nchallengeType: 25\ndashedName: build-a-recipe-page\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a DOCTYPE html declaration You should have an html element with lang set to en You should have a head element containing a title element with the name of your recipe, and a meta element with a charset attribute set to UTF-8 You should have a body element You should have an h1 element with the name of your recipe You should have a p element that introduces the recipe below the h1 You should have one h2 element with the text Ingredients for the ingredients section You should have an unordered list (ul element) with at least four list items (li elements) that lists your ingredients below the first h2 element You should have a second h2 element with the text Instructions for the instructions section You should have an ordered list (ol element) with at least four list items that lists the recipe steps in order, below the second h2 You should have one img element with a src attribute set to a valid image, you can use https://cdn freecodecamp org/curriculum/labs/recipe jpg if you would like, and an alt attribute describing the image --hints--\nYour recipe page should have a DOCTYPE html declaration js\nassert match(code, /< DOCTYPE html>/i);\nYou should have an html element with lang set to en js\nassert match(code, /<html\\s+lang\\s*=\\s*('|\")en\\1\\s*>[\\s\\S]*<\\/\\s*html\\s*>/gi);\nYou should have a head element within the html element js\nassert match(code, /<html[\\s\\S]*>[\\s\\S]*<\\s*head\\s*>[\\s\\S]*<\\/\\s*head\\s*>[\\s\\S]*<\\/\\s*html\\s*>/i);\nYou should have title element within your head element js\nassert match(code, /<\\s*head\\s*>[\\s\\S]*<\\s*title\\s*>[\\s\\S]*<\\/\\s*title\\s*>[\\s\\S]*<\\/\\s*head\\s*>/i);\nYour title element should have your recipe title js\nassert isAbove(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6939,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-recipe-page\\668f08ea07b99b1f4a91acab.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "41eef69e1b8af49e6dc98c0df4e4088e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-recipe-page\\668f08ea07b99b1f4a91acab.md",
    "source_type": "git_repo",
    "title": "Chocolate chip cookies recipe",
    "content": "and an alt attribute describing the image --hints-- Your recipe page should have a DOCTYPE html declaration js assert match(code, /< DOCTYPE html>/i); You should have an html element with lang set to en js assert match(code, /<html\\s+lang\\s*=\\s*('|\")en\\1\\s*>[\\s\\S]*<\\/\\s*html\\s*>/gi); You should have a head element within the html element js assert match(code, /<html[\\s\\S]*>[\\s\\S]*<\\s*head\\s*>[\\s\\S]*<\\/\\s*head\\s*>[\\s\\S]*<\\/\\s*html\\s*>/i); You should have title element within your head element js assert match(code, /<\\s*head\\s*>[\\s\\S]*<\\s*title\\s*>[\\s\\S]*<\\/\\s*title\\s*>[\\s\\S]*<\\/\\s*head\\s*>/i); Your title element should have your recipe title js assert isAbove(documentquerySelector('title') innerText trim() length, 0);\nYou should have a meta element within your head element js\nassert match(code, /<\\s*head\\s*>[\\s\\S]*<\\s*meta[\\s\\S]*>[\\s\\S]*<\\/\\s*head\\s*>/i);\nYour meta element should have its charset attribute set to UTF-8 js\nassert match(code, /<\\s*meta[\\s\\S]+ charset\\s*=\\s*('|\")UTF-8\\1/i);\nYou should have a body element within your html element js\nassert match(code, /<\\s*html[\\s\\S]*>[\\s\\S]*<\\s*head\\s*>[\\s\\S]*<\\/\\s*head\\s*>[\\s\\S]*<\\s*body\\s*>[\\s\\S]*<\\/\\s*body\\s*>[\\s\\S]*<\\/\\s*html\\s*>/i);\nYou should have an h1 element with the name of your recipe js\nassert isAbove(document querySelector('h1') innerText length, 0);\nYou should only have one h1 element js\nassert lengthOf(document querySelectorAll('h1'), 1);\nYou should have a p element below your h1 element js\nassert strictEqual(document querySelector('h1') nextElementSibling, document querySelector('p'));\nYour first p element should describe your recipe js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6939,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-recipe-page\\668f08ea07b99b1f4a91acab.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "841bcea759c02654c8dffe51a568db57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-recipe-page\\668f08ea07b99b1f4a91acab.md",
    "source_type": "git_repo",
    "title": "Chocolate chip cookies recipe",
    "content": "assert match(code, /<\\s*meta[\\s\\S]+ charset\\s*=\\s*('|\")UTF-8\\1/i); You should have a body element within your html element js assert match(code, /<\\s*html[\\s\\S]*>[\\s\\S]*<\\s*head\\s*>[\\s\\S]*<\\/\\s*head\\s*>[\\s\\S]*<\\s*body\\s*>[\\s\\S]*<\\/\\s*body\\s*>[\\s\\S]*<\\/\\s*html\\s*>/i); You should have an h1 element with the name of your recipe js assert isAbove(document querySelector('h1') innerText length, 0); You should only have one h1 element js assert lengthOf(document querySelectorAll('h1'), 1); You should have a p element below your h1 element js assert strictEqual(document querySelector('h1') nextElementSibling, document querySelector('p')); Your first p element should describe your recipe js assertisNotEmpty(document querySelector('p') textContent trim());\nYour first h2 element should have the text Ingredients js\nassert equal(document querySelectorAll('h2')[0] innerText, 'Ingredients');\nYou should have an unordered list element below your first h2 element js\nassert strictEqual(document querySelector('ul') previousElementSibling tagName, 'H2');\nYou should have at least four list item elements in your unordered list with the ingredients js\nconst els = document querySelectorAll('ul > li');\nassert isAbove(els length, 3);\nels forEach(el => assert isAbove(el innerText trim() length, 0))\nYour second h2 element should have the text Instructions js\nassert equal(document querySelectorAll('h2')[1] innerText, 'Instructions');\nYou should have an ordered list element below your second h2 element js\nassert strictEqual(document querySelectorAll('h2') [1] nextElementSibling tagName, \"OL\");\nYou should have at least four list item elements in your ordered list with the instructions js\nconst els = document querySelectorAll('ol > li');\nassert isAbove(els length, 3);\nels forEach(el => assert isAbove(el innerText trim() length, 0))\nYou should have at least one img element js\nassert exists(document querySelector('img'));\nAll your img elements should have a valid src attribute and value ```js\nconst img = document querySelector('img');\nconst rawSrc = img",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6939,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-recipe-page\\668f08ea07b99b1f4a91acab.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "d0b759c732a60dfb70892dbb4017a984",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-recipe-page\\668f08ea07b99b1f4a91acab.md",
    "source_type": "git_repo",
    "title": "Chocolate chip cookies recipe",
    "content": "querySelectorAll('h2') [1] nextElementSibling tagName, \"OL\"); You should have at least four list item elements in your ordered list with the instructions js const els = document querySelectorAll('ol > li'); assert isAbove(els length, 3); els forEach(el => assert isAbove(el innerText trim() length, 0)) You should have at least one img element js assert exists(document querySelector('img')); All your img elements should have a valid src attribute and value ```js const img = document querySelector('img'); const rawSrc = imggetAttribute('src');\nconst resolvedSrc = img src;\nconst re = new RegExp(window location href, \"ig\");\nassert isAbove(rawSrc trim() length, 0, \"The 'src' attribute must be explicitly set \");\nassert notMatch(resolvedSrc, re, \"The 'src' should not start with the current page URL\");\nimg onload = () => {\nconsole log('Image loaded successfully ');\n};\nimg onerror = (error) => {\nconsole error('Image failed to load:', error);\nassert fail(\"Your image's URL should be valid \"); // Make the test instafail\n};\nif (img complete) {\nimg onload && img onload();\n};\n```\nAll your img elements should have an alt attribute to describe the image js\nassert isAbove(document querySelector('img') alt length, 0);\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\nChocolate chip cookies recipe\nChocolate Chip Cookies\nWelcome to the ultimate guide for making mini chocolate chip cookies These bite-sized treats are perfect for\nsatisfying your sweet tooth without overindulging Follow this simple recipe to create delicious,\ncrispy-on-the-outside, chewy-on-the-inside mini chocolate chip cookies that everyone will love Ingredients\n1 cup all-purpose flour\n1/2 teaspoon baking soda\n1/4 cup unsalted butter, softened\n1/4 cup granulated sugar\n1/2 teaspoon vanilla extract\n1/2 cup mini chocolate chips\nInstructions\nPreheat your oven to 350°F (175°C) and line a baking sheet with parchment paper In a bowl, whisk together the flour and baking soda In another bowl, beat the butter, sugar, and vanilla extract until creamy Gradually add the dry ingredients to the wet mixture, then fold in the mini chocolate chips",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6939,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-recipe-page\\668f08ea07b99b1f4a91acab.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "98d83d46c3a058b7609d5897d4541031",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-recipe-page\\668f08ea07b99b1f4a91acab.md",
    "source_type": "git_repo",
    "title": "Chocolate chip cookies recipe",
    "content": "flour 1/2 teaspoon baking soda 1/4 cup unsalted butter, softened 1/4 cup granulated sugar 1/2 teaspoon vanilla extract 1/2 cup mini chocolate chips Instructions Preheat your oven to 350°F (175°C) and line a baking sheet with parchment paper In a bowl, whisk together the flour and baking soda In another bowl, beat the butter, sugar, and vanilla extract until creamy Gradually add the dry ingredients to the wet mixture, then fold in the mini chocolate chipsDrop small spoonfuls of dough onto the baking sheet Bake for 8-10 minutes, then let cool before enjoying ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6939,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-recipe-page\\668f08ea07b99b1f4a91acab.md",
      "source_type": "git_repo"
    },
    "token_count": 132,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "442a9f7457755788cecb5e6f0135c53c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-reusable-footer\\673b02b03134b04637bf7055.md",
    "source_type": "git_repo",
    "title": "Reusable Footer Component",
    "content": "id: 673b02b03134b04637bf7055\ntitle: Build a Reusable Footer\nchallengeType: 25\ndashedName: build-a-reusable-footer\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should export a Footer component Your Footer component should return a footer element that contains all the other elements Your footer element should have:\nAt least three unordered lists, each with at least two list items At least one paragraph element with a copyright © symbol At least three links with the href value set to # and the link content set to an icon or text of your choice --hints--\nYou should export a Footer component js\nassert isFunction(window index Footer);\nYour Footer component should return a footer element js\nconst footer = document getElementById('root') firstElementChild;\nassert equal(footer tagName, 'FOOTER');\nYour Footer component should only contain a single footer element js\nassert lengthOf(document querySelectorAll('footer'), 1);\nYour footer element should not have any siblings js\nassert lengthOf(document getElementById('root') children, 1);\nYour footer element should contain at least three unordered lists js\nassert isAtLeast(document querySelectorAll('ul') length, 3);\nEach of your unordered lists should have at least two list items js\nconst uls = [ document querySelectorAll('ul')];\nuls forEach(ul => {\nassert isAtLeast(ul querySelectorAll('li') length, 2);\n}\n);\nYour footer should have at least one paragraph element js\nassert isAtLeast(document querySelectorAll('p') length, 1);\nYou should have a copyright (©) symbol within one of your paragraphs js\nconst texts = [ document querySelectorAll('p')] map(p => p textContent);\nconst hasCopyright = texts some(text => text includes('©'));\nassert isTrue(hasCopyright);\nYour footer should have at least three links with the href value set to # js\nconst links = document querySelectorAll('a[href=\"#\"]');\nassert isAtLeast(links length, 3);\nNone of your links should be empty js\nconst links = [ document querySelectorAll('a[href=\"#\"]')];\nlinks forEach(link => {\nassert isNotEmpty(link",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5990,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-reusable-footer\\673b02b03134b04637bf7055.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f1eeec5dc562d5a421b64449d22ecce5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-reusable-footer\\673b02b03134b04637bf7055.md",
    "source_type": "git_repo",
    "title": "Reusable Footer Component",
    "content": "have a copyright (©) symbol within one of your paragraphs js const texts = [ document querySelectorAll('p')] map(p => p textContent); const hasCopyright = texts some(text => text includes('©')); assert isTrue(hasCopyright); Your footer should have at least three links with the href value set to # js const links = document querySelectorAll('a[href=\"#\"]'); assert isAtLeast(links length, 3); None of your links should be empty js const links = [ document querySelectorAll('a[href=\"#\"]')]; links forEach(link => { assert isNotEmpty(linktextContent);\n}\n);\n--seed--\n--seed-contents--\n```html\nReusable Footer Component\n```\n```css\n```\njsx\nexport const Footer = () => {};\n--solutions--\n```html\nReusable Footer Component\n```\n```css footer {\nbackground-color: #e3e1eb;\npadding: 20px;\ntext-align: center;\nborder-top: 1px solid #e5e7eb;\nfont-family: Arial, sans-serif;\n} footer-section {\ndisplay: grid;\ngrid-template-columns: repeat(3, 1fr);\ngap: 20px;\njustify-content: center;\nmargin-bottom: 20px;\nalign-items: center;\n} footer ul {\nlist-style: none;\npadding: 0;\nmargin: 0;\n} footer li {\nmargin-bottom: 10px;\n} footer a {\ntext-decoration: none;\ncolor: #1f2937;\n} footer a:hover {\ncolor: #6366f1;\n} footer p {\ncolor: #6b7280;\nmargin-top: 20px;\n} footer-icons {\nmargin-top: 20px;\ndisplay: flex;\njustify-content: center;\n} footer-icons a {\nmargin: 0 10px;\nfont-size: 24px;\ncolor: #6b7280;\ntext-decoration: none;\n} footer-icons a:hover {\ncolor: #6366f1;\n}\n```\n```jsx\nexport const Footer = () => (\nFitness Dashboard\nServices\nWatch Videos\nDiscord\nPrivacy Policy\nTerms & Conditions\n© 2024 Fitness Dashboard All Rights Reserved 🎮\n🐦\n💻\n🏀\n);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5990,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-reusable-footer\\673b02b03134b04637bf7055.md",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8cfdf48cce1f90f9c4103fca7cd5ebd7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-salon-appointment-scheduler\\5f87ac112ae598023a42df1a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5f87ac112ae598023a42df1a\ntitle: Build a Salon Appointment Scheduler\nchallengeType: 13\nurl: freeCodeCamp/learn-salon-appointment-scheduler\ndashedName: lab-salon-appointment-scheduler\n--description--\nFor this lab, you will create an interactive Bash program that uses PostgreSQL to track the customers and appointments for your salon.\n--instructions--\nImportant: After you pass all the project tests, save a dump of your database into a salon.sql file, as well as your salon.sh file, so you can complete step 2. There will be instructions how to do that within the virtual machine.\n--notes--\nRequired files: salon.sql, salon.sh\n--hints--\n--seed--\n--solutions--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 704,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-salon-appointment-scheduler\\5f87ac112ae598023a42df1a.md",
      "source_type": "git_repo"
    },
    "token_count": 160,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8fde201cad2dc5ad3bde0ea979612d42",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-selection-sort\\680b3ef395479b0e449ecb6e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 680b3ef395479b0e449ecb6e\ntitle: Implement the Selection Sort Algorithm\nchallengeType: 27\ndashedName: implement-selection-sort-algorithm\n--description--\nSelection sort is another popular sorting algorithm taught in most computer science courses This algorithm works by repeatedly finding the smallest element from the unsorted portion of the list and swapping it with the first unsorted element It begins by selecting the minimum value in the entire list and swapping it with the first element Then it moves to the second position, finds the smallest value in the remaining unsorted elements, and swaps it with the second element This process continues, moving through the list one element at a time, until the entire list is sorted Selection sort results in a quadratic time complexity in the best, average, and worst case scenarios The space complexity will be constant O(1) because the sorting is done in place and a constant amount of memory is being used regardless of the size of the list Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should define a function named selection_sort Your selection_sort function should have one parameter that represents the list of items Your selection_sort function should take a list and sort the items in place from smallest to largest Your selection_sort function should not use either the built-in sort() method or sorted() function --hints--\nYou should have a function named selection_sort js\n({test: () => {\nrunPython(`\nassert _Node(_code) has_function('selection_sort')\n`)\n}})\nYour selection_sort function should have one parameter js\n(\n{test: () => {\nrunPython(`\nimport inspect\nsig = inspect signature(selection_sort)\nassert len(sig parameters) == 1\n`)\n}}\n)\nYou should not use the built-in sort() method or sorted() function in your code js\n(\n{\ntest: () => runPython(`\nassert not _Node(_code) block_has_call(\"sort\")\nassert not _Node(_code) block_has_call(\"sorted\")\n`)\n}\n)\nselection_sort([33, 1, 89, 2, 67, 245]) should return [1, 2, 33, 89, 67, 245]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-selection-sort\\680b3ef395479b0e449ecb6e.md",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "0c64eddb38f2ecbb6eeb60d27de8f7e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-selection-sort\\680b3ef395479b0e449ecb6e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "`) }}) Your selection_sort function should have one parameter js ( {test: () => { runPython(` import inspect sig = inspect signature(selection_sort) assert len(sig parameters) == 1 `) }} ) You should not use the built-in sort() method or sorted() function in your code js ( { test: () => runPython(` assert not _Node(_code) block_has_call(\"sort\") assert not _Node(_code) block_has_call(\"sorted\") `) } ) selection_sort([33, 1, 89, 2, 67, 245]) should return [1, 2, 33, 89, 67, 245]``js\n(\n{\ntest: () => runPython(\nassert selection_sort([33, 1, 89, 2, 67, 245]) == [1, 2, 33, 67, 89, 245]\n`)\n}\n)\n```\nselection_sort([5, 16, 99, 12, 567, 23, 15, 72, 3]) should return [3, 5, 12, 15, 16, 23, 72, 99, 567] ``js\n(\n{\ntest: () => runPython(\nassert selection_sort([5, 16, 99, 12, 567, 23, 15, 72, 3]) == [3, 5, 12, 15, 16, 23, 72, 99, 567]\n`)\n}\n)\n```\nselection_sort([1, 4, 2, 8, 345, 123, 43, 32, 5643, 63, 123, 43, 2, 55, 1, 234, 92]) should return [1, 1, 2, 2, 4, 8, 32, 43, 43, 55, 63, 92, 123, 123, 234, 345, 5643]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-selection-sort\\680b3ef395479b0e449ecb6e.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "eedf055041f3b03f7254b36d2c8ba4f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-selection-sort\\680b3ef395479b0e449ecb6e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[3, 5, 12, 15, 16, 23, 72, 99, 567] ``js ( { test: () => runPython( assert selection_sort([5, 16, 99, 12, 567, 23, 15, 72, 3]) == [3, 5, 12, 15, 16, 23, 72, 99, 567] `) } ) ``` selection_sort([1, 4, 2, 8, 345, 123, 43, 32, 5643, 63, 123, 43, 2, 55, 1, 234, 92]) should return [1, 1, 2, 2, 4, 8, 32, 43, 43, 55, 63, 92, 123, 123, 234, 345, 5643]``js\n(\n{\ntest: () => runPython(\nassert selection_sort([1, 4, 2, 8, 345, 123, 43, 32, 5643, 63, 123, 43, 2, 55, 1, 234, 92]) == [1, 1, 2, 2, 4, 8, 32, 43, 43, 55, 63, 92, 123, 123, 234, 345, 5643]\n`)\n}\n)\n```\nYour selection_sort function should sort correctly any list of numbers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-selection-sort\\680b3ef395479b0e449ecb6e.md",
      "source_type": "git_repo"
    },
    "token_count": 345,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "7e1edc33792c887e87249f303d120afa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-selection-sort\\680b3ef395479b0e449ecb6e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "92]) should return [1, 1, 2, 2, 4, 8, 32, 43, 43, 55, 63, 92, 123, 123, 234, 345, 5643]``js ( { test: () => runPython( assert selection_sort([1, 4, 2, 8, 345, 123, 43, 32, 5643, 63, 123, 43, 2, 55, 1, 234, 92]) == [1, 1, 2, 2, 4, 8, 32, 43, 43, 55, 63, 92, 123, 123, 234, 345, 5643] `) } ) ``` Your selection_sort function should sort correctly any list of numbers``js\n(\n{\ntest: () => runPython(\nassert selection_sort([42, 17, 93, 8, 61, 29]) == [8, 17, 29, 42, 61, 93]\nassert selection_sort([11, 4, 78, 23, 55, 198, 65, 90, 2]) == [2, 4, 11, 23, 55, 65, 78, 90, 198]\nassert selection_sort([9, 27, 3, 7, 101, 66, 34, 52, 87, 42, 12, 29]) == [3, 7, 9, 12, 27, 29, 34, 42, 52, 66, 87, 101]\nassert selection_sort([5, 14, 33, 77, 2, 18, 92, 1, 100, 45, 73, 64, 28, 56]) == [1, 2, 5, 14, 18, 28, 33, 45, 56, 64, 73, 77, 92, 100]\n`)\n}\n)\n```\n--seed--\n--seed-contents--\n```py\n```\n--solutions--\n```py\ndef selection_sort(nums):\nfor i, _ in enumerate(nums):\nmin_index = i\nfor j in range(i + 1, len(nums)):\nif nums[j] < nums[min_index]:\nmin_index = j\nif min_index",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-selection-sort\\680b3ef395479b0e449ecb6e.md",
      "source_type": "git_repo"
    },
    "token_count": 537,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "722d35c36858efc656ba5dd9e7955eae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-selection-sort\\680b3ef395479b0e449ecb6e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "9, 12, 27, 29, 34, 42, 52, 66, 87, 101] assert selection_sort([5, 14, 33, 77, 2, 18, 92, 1, 100, 45, 73, 64, 28, 56]) == [1, 2, 5, 14, 18, 28, 33, 45, 56, 64, 73, 77, 92, 100] `) } ) ``` --seed-- --seed-contents-- ```py ``` --solutions-- ```py def selection_sort(nums): for i, _ in enumerate(nums): min_index = i for j in range(i + 1, len(nums)): if nums[j] < nums[min_index]: min_index = j if min_index= i:\nnums[i], nums[min_index] = nums[min_index], nums[i]\nreturn nums\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4212,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-selection-sort\\680b3ef395479b0e449ecb6e.md",
      "source_type": "git_repo"
    },
    "token_count": 206,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "d33e7eb8f177208bd1bac2d90a881d89",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-rpg-character\\67d83df6f82eda3868dd2a84.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67d83df6f82eda3868dd2a84\ntitle: Build an RPG Character\nchallengeType: 27\ndashedName: build-an-rpg-character\n--description--\nIn this lab you will practice the basics of Python by building a small app that creates a character for an RPG adventure Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a function named create_character The function should accept, in order, a character name followed by three stats: strength, intelligence, and charisma The character name should be validated:\nIf the character name is not a string, the function should return The character name should be a string If the character name is longer than 10 characters, the function should return The character name is too long If the character name contains spaces, the function should return The character name should not contain spaces The stats should also be validated:\nIf one or more stats are not integers, the function should return All stats should be integers If one or more stats are less than 1, the function should return All stats should be no less than 1 If one or more stats are more than 4, the function should return All stats should be no more than 4 If the sum of all stats is different than 7, the function should return The character should start with 7 points If all values pass the verification, the function should return a string with four lines:\nthe first line should contain the character name\nlines 2-4 should start with the stat abbreviation, STR, INT or CHA (in this order), then a space, and then a number of full dots (●) equal to the value of the stat, and a number of empty dots (○) to reach 10 Example: if the value of strength is 3 there must be 3 full dots followed by 7 empty dots The dots are given in the editor",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-rpg-character\\67d83df6f82eda3868dd2a84.md",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "ee0cfb51ab92b79cc7c906b933299823",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-rpg-character\\67d83df6f82eda3868dd2a84.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "first line should contain the character name lines 2-4 should start with the stat abbreviation, STR, INT or CHA (in this order), then a space, and then a number of full dots (●) equal to the value of the stat, and a number of empty dots (○) to reach 10 Example: if the value of strength is 3 there must be 3 full dots followed by 7 empty dots The dots are given in the editorHere's the string create_character(\"ren\", 4, 2, 1) should return:\nmd\nren\nSTR ●●●●○○○○○○\nINT ●●○○○○○○○○\nCHA ●○○○○○○○○○\nNOTE: while str and int are common abbreviations for the stats, remember that those are reserved keywords in Python and should not be used as variable names --hints--\nYou should have a function named create_character js\n({\ntest: () => runPython(\n`\nassert _Node(_code) has_function('create_character')\n`\n)\n})\nWhen create_character is called with a first argument that is not a string it should return The character name should be a string ``js\n({\ntest: () => runPython(\nwrong_types = [3, 5, {\"a\": 3}, 3 1, [1, 2], (1, 2), {1, 2}]\nfor wrong_type in wrong_types:\nassert create_character(wrong_type, 1, 2, 4) == 'The character name should be a string'\neven if wrong numbers, wrong type has precedence\nassert create_character(1, 1, 1, 1) == 'The character name should be a string'\n`\n)\n})\n```\nWhen create_character is called with a first argument that is longer than 10 characters it should return The character name is too long js\n({\ntest: () => runPython(\n`\nassert create_character(\"aaabbbcccdd\", 4, 2, 1) == 'The character name is too long'\n`\n)\n})\nWhen create_character is called with a first argument that contains a space it should return The character name should not contain spaces",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-rpg-character\\67d83df6f82eda3868dd2a84.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "0af2f279abff7a4bd66fab15cb31c8ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-rpg-character\\67d83df6f82eda3868dd2a84.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "name should be a string' ` ) }) ``` When create_character is called with a first argument that is longer than 10 characters it should return The character name is too long js ({ test: () => runPython( ` assert create_character(\"aaabbbcccdd\", 4, 2, 1) == 'The character name is too long' ` ) }) When create_character is called with a first argument that contains a space it should return The character name should not contain spacesjs\n({\ntest: () => runPython(\n`\nassert create_character(\"cha cha\", 4, 1, 2) == 'The character name should not contain spaces'\n`\n)\n})\nWhen create_character is called with a second, third or fourth argument that is not an integer it should return All stats should be integers js\n({\ntest: () => runPython(\n`\nwrong_types = [\"3\", \"5\", {\"a\": 3}, 3 1, [1, 2], (1, 2), {1, 2}, \"str\", \"friend\"]\nfor wrong_type in wrong_types:\nassert create_character(\"friend\", wrong_type, 2, 1) == 'All stats should be integers'\nassert create_character(\"friend\", 2, wrong_type, 1) == 'All stats should be integers'\nassert create_character(\"friend\", 2, 1, wrong_type) == 'All stats should be integers'\n`\n)\n})\nWhen create_character is called with a second, third or fourth argument that is lower than 1 it should return All stats should be no less than 1 ``js\n({\ntest: () => runPython(\nexpected = \"All stats should be no less than 1\"\nassert create_character(\"ren\", 0, 4, 3) == expected\nassert create_character(\"ren\", 4, 0, 3) == expected\nassert create_character(\"ren\", 4, 3, 0) == expected\nassert create_character(\"ren\", -1, 4, 4) == expected\nassert create_character(\"ren\", 4, -1, 4) == expected\nassert create_character(\"ren\", 4, 4, -1) == expected\n`\n)\n})\n```\nWhen create_character is called with a second, third or fourth argument that is higher than 4 it should return All stats should be no more than 4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-rpg-character\\67d83df6f82eda3868dd2a84.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "d6eea9318d33b6cc3c3b6720755f0843",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-rpg-character\\67d83df6f82eda3868dd2a84.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "less than 1\" assert create_character(\"ren\", 0, 4, 3) == expected assert create_character(\"ren\", 4, 0, 3) == expected assert create_character(\"ren\", 4, 3, 0) == expected assert create_character(\"ren\", -1, 4, 4) == expected assert create_character(\"ren\", 4, -1, 4) == expected assert create_character(\"ren\", 4, 4, -1) == expected ` ) }) ``` When create_character is called with a second, third or fourth argument that is higher than 4 it should return All stats should be no more than 4js\n({\ntest: () => runPython(\n`\nassert create_character(\"ren\", 1, 5, 1) == 'All stats should be no more than 4'\nassert create_character(\"ren\", 5, 1, 1) == 'All stats should be no more than 4'\nassert create_character(\"ren\", 1, 1, 5) == 'All stats should be no more than 4'\nassert create_character(\"ren\", 1, 1, 7) == 'All stats should be no more than 4'\nassert create_character(\"ren\", 1, 7, 1) == 'All stats should be no more than 4'\nassert create_character(\"ren\", 7, 1, 1) == 'All stats should be no more than 4'\n`\n)\n})\nWhen create_character is called with a second, third or fourth argument that do not sum to 7 it should return The character should start with 7 points",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-rpg-character\\67d83df6f82eda3868dd2a84.md",
      "source_type": "git_repo"
    },
    "token_count": 349,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "c6ac53bf5212b35fb7e1fbacf57f33ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-rpg-character\\67d83df6f82eda3868dd2a84.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "no more than 4' assert create_character(\"ren\", 1, 1, 7) == 'All stats should be no more than 4' assert create_character(\"ren\", 1, 7, 1) == 'All stats should be no more than 4' assert create_character(\"ren\", 7, 1, 1) == 'All stats should be no more than 4' ` ) }) When create_character is called with a second, third or fourth argument that do not sum to 7 it should return The character should start with 7 pointsjs\n({\ntest: () => runPython(\n`\nassert create_character(\"ren\", 4, 4, 4) == 'The character should start with 7 points'\nassert create_character(\"ren\", 1, 1, 1) == 'The character should start with 7 points'\nassert create_character(\"ren\", 1, 2, 3) == 'The character should start with 7 points'\n`\n)\n})\ncreate_character(\"ren\", 4, 2, 1) should return ren\\nSTR ●●●●○○○○○○\\nINT ●●○○○○○○○○\\nCHA ●○○○○○○○○○ js\n({\ntest: () => runPython(\n`\nassert create_character(\"ren\", 4, 2, 1) == f'ren\\\\nSTR ●●●●○○○○○○\\\\nINT ●●○○○○○○○○\\\\nCHA ●○○○○○○○○○'\n`\n)\n})\nWhen create_character is called with valid values it should output the character stats as required",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-rpg-character\\67d83df6f82eda3868dd2a84.md",
      "source_type": "git_repo"
    },
    "token_count": 403,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "a430217c3911d83959e22b993a097c04",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-rpg-character\\67d83df6f82eda3868dd2a84.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "7 points' assert create_character(\"ren\", 1, 1, 1) == 'The character should start with 7 points' assert create_character(\"ren\", 1, 2, 3) == 'The character should start with 7 points' ` ) }) create_character(\"ren\", 4, 2, 1) should return ren\\nSTR ●●●●○○○○○○\\nINT ●●○○○○○○○○\\nCHA ●○○○○○○○○○ js ({ test: () => runPython( ` assert create_character(\"ren\", 4, 2, 1) == f'ren\\\\nSTR ●●●●○○○○○○\\\\nINT ●●○○○○○○○○\\\\nCHA ●○○○○○○○○○' ` ) }) When create_character is called with valid values it should output the character stats as required``js\n({\ntest: () => runPython(\nassert create_character(\"Bob\", 1, 2, 4) == f'Bob\\nSTR ●○○○○○○○○○\\nINT ●●○○○○○○○○\\nCHA ●●●●○○○○○○'\nassert create_character(\"aaabbbcccd\", 4, 2, 1) == f'aaabbbcccd\\nSTR ●●●●○○○○○○\\nINT ●●○○○○○○○○\\nCHA ●○○○○○○○○○'\n`\n)\n})\n```\n--seed--\n--seed-contents--\n```py\nfull_dot = '●'\nempty_dot = '○'\n```\n--solutions--\n```py\nfull_dot = '●'\nempty_dot = '○'\ndef create_character(character_name, strength, intelligence, charisma):\nif type(character_name)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-rpg-character\\67d83df6f82eda3868dd2a84.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "53f5ef79ca75bbf243fb562f8d6e2b5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-rpg-character\\67d83df6f82eda3868dd2a84.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "f'ren\\\\nSTR ●●●●○○○○○○\\\\nINT ●●○○○○○○○○\\\\nCHA ●○○○○○○○○○' ` ) }) When create_character is called with valid values it should output the character stats as required``js ({ test: () => runPython( assert create_character(\"Bob\", 1, 2, 4) == f'Bob\\nSTR ●○○○○○○○○○\\nINT ●●○○○○○○○○\\nCHA ●●●●○○○○○○' assert create_character(\"aaabbbcccd\", 4, 2, 1) == f'aaabbbcccd\\nSTR ●●●●○○○○○○\\nINT ●●○○○○○○○○\\nCHA ●○○○○○○○○○' ` ) }) ``` --seed-- --seed-contents-- ```py full_dot = '●' empty_dot = '○' ``` --solutions-- ```py full_dot = '●' empty_dot = '○' def create_character(character_name, strength, intelligence, charisma): if type(character_name)= str:\nreturn \"The character name should be a string\"\nif len(character_name) > 10:\nreturn \"The character name is too long\"\nif ' ' in character_name:\nreturn \"The character name should not contain spaces\"\nif type(strength) = int or type(intelligence) = int or type(charisma) = int:\nreturn \"All stats should be integers\"\nif strength < 1 or intelligence < 1 or charisma < 1:\nreturn \"All stats should be no less than 1\"\nif strength > 4 or intelligence > 4 or charisma > 4:\nreturn \"All stats should be no more than 4\"\nif strength + intelligence + charisma",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-rpg-character\\67d83df6f82eda3868dd2a84.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "33f263f2341547e3850bf3966c84815f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-rpg-character\\67d83df6f82eda3868dd2a84.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "in character_name: return \"The character name should not contain spaces\" if type(strength) = int or type(intelligence) = int or type(charisma) = int: return \"All stats should be integers\" if strength < 1 or intelligence < 1 or charisma < 1: return \"All stats should be no less than 1\" if strength > 4 or intelligence > 4 or charisma > 4: return \"All stats should be no more than 4\" if strength + intelligence + charisma= 7:\nreturn \"The character should start with 7 points\"\ncharacter_sheet = f'{character_name}\\n'\ncharacter_sheet += f'STR {full_dot * strength}{empty_dot * (10 - strength)}\\n'\ncharacter_sheet += f'INT {full_dot * intelligence}{empty_dot * (10 - intelligence)}\\n'\ncharacter_sheet += f'CHA {full_dot * charisma}{empty_dot * (10 - charisma)}'\nreturn character_sheet\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8071,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-rpg-character\\67d83df6f82eda3868dd2a84.md",
      "source_type": "git_repo"
    },
    "token_count": 203,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "b8260632772162ed55de5b228215b09c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-slice-and-splice\\579e2a2c335b9d72dd32e05c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 579e2a2c335b9d72dd32e05c\ntitle: Implement the Slice and Splice Algorithm\nchallengeType: 26\ndashedName: implement-the-slice-and-splice-algorithm\n--description--\nIn this lab, you will need to create an algorithm to merge two arrays Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nCreate a frankenSplice function that accepts two arrays and an index Copy each element of the first array into the second array, in order, beginning at the given index, and return the resulting array The input arrays should remain the same after the function runs --hints--\nfrankenSplice([1, 2, 3], [4, 5], 1) should return [4, 1, 2, 3, 5] js\nassert deepEqual(frankenSplice([1, 2, 3], [4, 5], 1), [4, 1, 2, 3, 5]);\nfrankenSplice([1, 2], [\"a\", \"b\"], 1) should return [\"a\", 1, 2, \"b\"] js\nlet testArr1 = [1, 2];\nlet testArr2 = ['a', 'b'];\nassert deepEqual(frankenSplice(testArr1, testArr2, 1), ['a', 1, 2, 'b']);\nfrankenSplice([\"claw\", \"tentacle\"], [\"head\", \"shoulders\", \"knees\", \"toes\"], 2) should return [\"head\", \"shoulders\", \"claw\", \"tentacle\", \"knees\", \"toes\"] js\nassert deepEqual(\nfrankenSplice(\n['claw', 'tentacle'],\n['head', 'shoulders', 'knees', 'toes'],\n2\n),\n['head', 'shoulders', 'claw', 'tentacle', 'knees', 'toes']\n);\nAll elements from the first array should be added to the second array in their original order frankenSplice([1, 2, 3, 4], [], 0) should return [1, 2, 3, 4] js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2262,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-slice-and-splice\\579e2a2c335b9d72dd32e05c.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3f9e7a75e51c825306a53873efb8fb52",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-slice-and-splice\\579e2a2c335b9d72dd32e05c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= ['a', 'b']; assert deepEqual(frankenSplice(testArr1, testArr2, 1), ['a', 1, 2, 'b']); frankenSplice([\"claw\", \"tentacle\"], [\"head\", \"shoulders\", \"knees\", \"toes\"], 2) should return [\"head\", \"shoulders\", \"claw\", \"tentacle\", \"knees\", \"toes\"] js assert deepEqual( frankenSplice( ['claw', 'tentacle'], ['head', 'shoulders', 'knees', 'toes'], 2 ), ['head', 'shoulders', 'claw', 'tentacle', 'knees', 'toes'] ); All elements from the first array should be added to the second array in their original order frankenSplice([1, 2, 3, 4], [], 0) should return [1, 2, 3, 4] js assertdeepEqual(frankenSplice([1, 2, 3, 4], [], 0), [1, 2, 3, 4]);\nThe first array should remain the same after the function runs js\nlet testArr1 = [1, 2];\nlet testArr2 = ['a', 'b'];\nfrankenSplice(testArr1, testArr2, 1);\nassert deepEqual(testArr1, [1, 2]);\nThe second array should remain the same after the function runs js\nlet testArr1 = [1, 2];\nlet testArr2 = ['a', 'b'];\nfrankenSplice(testArr1, testArr2, 1);\nassert deepEqual(testArr2, ['a', 'b']);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\njs\nfunction frankenSplice(arr1, arr2, n) {\nlet result = arr2 slice();\nfor (let i = 0; i < arr1 length; i++) {\nresult splice(n + i, 0, arr1[i]);\n}\nreturn result;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2262,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-slice-and-splice\\579e2a2c335b9d72dd32e05c.md",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3ac2ca967fb306de8d20ed77645ff0d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sentence-maker\\66c057041df6394ca796bf33.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 66c057041df6394ca796bf33\ntitle: Build a Sentence Maker\nchallengeType: 26\ndashedName: build-a-sentence-maker\n--description--\nIn this lab, you will create two different stories using a sentence template You will use variables to store different parts of the story and then output the stories to the console Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should declare the following variables using let:\nadjective\nnoun\nverb\nplace\nadjective2\nnoun2\nYou should assign the above variables some string values of your choice You should declare a firstStory variable You should use the following story template to create the first story and assign it to the firstStory variable: \"Once upon a time, there was a(n) [adjective] [noun] who loved to eat [noun2] The [noun] lived in a [place] and had [adjective2] nostrils that blew fire when it was [verb] \";\nYou should output your first story to the console using the message \"First story: [firstStory]\" You should assign new values to your adjective, noun, verb, place, adjective2, and noun2 variables You should declare a secondStory variable Create another story using the same template and assign it to the secondStory variable You should output your second story to the console using the message \"Second story: [secondStory]\" --hints--\nYou should declare an adjective variable js\nassert isNotNull(adjective);\nYou should declare a noun variable js\nassert isNotNull(noun);\nYou should declare a verb variable js\nassert isNotNull(verb);\nYou should declare a place variable js\nassert isNotNull(place);\nYou should declare an adjective2 variable js\nassert isNotNull(adjective2);\nYou should declare a noun2 variable js\nassert isNotNull(noun2);\nYou should assign a string value to the adjective variable js\nassert isString(adjective);\nYou should assign a string value to the noun variable js\nassert isString(noun);\nYou should assign a string value to the verb variable js\nassert isString(verb);\nYou should assign a string value to the place variable js\nassert isString(place);\nYou should assign a string value to the adjective2 variable js\nassert isString(adjective2);\nYou should assign a string value to the noun2 variable js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6720,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sentence-maker\\66c057041df6394ca796bf33.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "3025e0c08d09bb71839d2a1e8f738d05",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sentence-maker\\66c057041df6394ca796bf33.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "should assign a string value to the adjective variable js assert isString(adjective); You should assign a string value to the noun variable js assert isString(noun); You should assign a string value to the verb variable js assert isString(verb); You should assign a string value to the place variable js assert isString(place); You should assign a string value to the adjective2 variable js assert isString(adjective2); You should assign a string value to the noun2 variable js assertisString(noun2);\nYou should declare a firstStory variable js\nassert isNotNull(firstStory);\nYou should use the correct story format for the first story: \"Once upon a time, there was a(n) [adjective] [noun] who loved to eat [noun2] The [noun] lived in a [place] and had [adjective2] nostrils that blew fire when it was [verb] \" Pay attention to spaces ``js\nconst _initialValues = {}\nfor (const name of ['adjective', 'noun', 'noun2', 'place', 'verb', 'adjective2']) {\nconst match = code match(new RegExp(String raw${name}\\s=\\s('|\"|${''})( <${name}> * )\\1( :,|;|\\s|$), 'm'));\n_initialValues[name] = match match groups[name] : null;\n}\nconst expected = Once upon a time, there was a(n) ${_initialValues['adjective']} ${_initialValues['noun']} who loved to eat ${_initialValues['noun2']} The ${_initialValues['noun']} lived in a ${_initialValues['place']} and had ${_initialValues['adjective2']} nostrils that blew fire when it was ${_initialValues['verb']} ;\nassert strictEqual(firstStory, expected);\n```\nYou should log your first story using the message \"First story: [firstStory]\" js\nconst condition1 = /console\\ log\\(\\s*[\"']First\\s+story:\\s+[\"']\\s*\\+\\s*firstStory\\s*\\); /gm test(code);\nconst condition2 = /console\\ log\\(\\s*`First\\s+story:\\s+\\$\\{firstStory\\}`\\s*\\); /gm test(code);\nassert isTrue(condition1 || condition2);\nYou should declare a secondStory variable js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6720,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sentence-maker\\66c057041df6394ca796bf33.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "e1156a250098fcc78e96c95203204684",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sentence-maker\\66c057041df6394ca796bf33.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= Once upon a time, there was a(n) ${_initialValues['adjective']} ${_initialValues['noun']} who loved to eat ${_initialValues['noun2']} The ${_initialValues['noun']} lived in a ${_initialValues['place']} and had ${_initialValues['adjective2']} nostrils that blew fire when it was ${_initialValues['verb']} ; assert strictEqual(firstStory, expected); ``` You should log your first story using the message \"First story: [firstStory]\" js const condition1 = /console\\ log\\(\\s*[\"']First\\s+story:\\s+[\"']\\s*\\+\\s*firstStory\\s*\\); /gm test(code); const condition2 = /console\\ log\\(\\s*`First\\s+story:\\s+\\$\\{firstStory\\}`\\s*\\); /gm test(code); assert isTrue(condition1 || condition2); You should declare a secondStory variable js assertisNotNull(secondStory);\nYou should reassign the adjective variable for the second story js\nassert lengthOf(__helpers removeJSComments(code) match(/adjective\\s*=\\s*/g), 2);\nYou should reassign the noun variable for the second story js\nassert lengthOf(__helpers removeJSComments(code) match(/noun\\s*=\\s*/g), 2);\nYou should reassign the verb variable for the second story js\nassert lengthOf(__helpers removeJSComments(code) match(/verb\\s*=\\s*/g), 2);\nYou should reassign the place variable for the second story js\nassert lengthOf(__helpers removeJSComments(code) match(/place\\s*=\\s*/g), 2);\nYou should reassign the adjective2 variable for the second story js\nassert lengthOf(__helpers removeJSComments(code) match(/adjective2\\s*=\\s*/g), 2);\nYou should reassign the noun2 variable for the second story js\nassert lengthOf(__helpers removeJSComments(code) match(/noun2\\s*=\\s*/g), 2);\nYou should use the correct story format for the second story: \"Once upon a time, there was a(n) [adjective] [noun] who loved to eat [noun2] The [noun] lived in a [place] and had [adjective2] nostrils that blew fire when it was [verb] \" Pay attention to spaces",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6720,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sentence-maker\\66c057041df6394ca796bf33.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "012026f3c6fbe97fdd6f9a816a5fbc5b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sentence-maker\\66c057041df6394ca796bf33.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the adjective2 variable for the second story js assert lengthOf(__helpers removeJSComments(code) match(/adjective2\\s*=\\s*/g), 2); You should reassign the noun2 variable for the second story js assert lengthOf(__helpers removeJSComments(code) match(/noun2\\s*=\\s*/g), 2); You should use the correct story format for the second story: \"Once upon a time, there was a(n) [adjective] [noun] who loved to eat [noun2] The [noun] lived in a [place] and had [adjective2] nostrils that blew fire when it was [verb] \" Pay attention to spacesjs\nconst expected = `Once upon a time, there was a(n) ${adjective} ${noun} who loved to eat ${noun2} The ${noun} lived in a ${place} and had ${adjective2} nostrils that blew fire when it was ${verb} `;\nassert strictEqual(secondStory, expected);\nYou should log your second story using the format \"Second story: [secondStory]\" js\nconst condition1 = /console\\ log\\(\\s*[\"']Second\\s+story:\\s+[\"']\\s*\\+\\s*secondStory\\s*\\); /gm test(code);\nconst condition2 = /console\\ log\\(\\s*`Second\\s+story:\\s+\\$\\{secondStory\\}`\\s*\\); /gm test(code);\nassert isTrue(condition1 || condition2);\nThe firstStory should not be the same as the secondStory js\nassert notEqual(firstStory, secondStory);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nlet adjective = \"funny\";\nlet noun = \"dragon\";\nlet verb = \"jumping\";\nlet place = \"garden\";\nlet adjective2 = \"sparkling\";\nlet noun2 = \"cakes\";\nconst firstStory = Once upon a time, there was a(n) ${adjective} ${noun} who loved to eat ${noun2} The ${noun} lived in a ${place} and had ${adjective2} nostrils that blew fire when it was ${verb} ;\nconsole",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6720,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sentence-maker\\66c057041df6394ca796bf33.md",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "6ac4f6c38d7f3862502d241bff9548bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sentence-maker\\66c057041df6394ca796bf33.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "be the same as the secondStory js assert notEqual(firstStory, secondStory); --seed-- --seed-contents-- ```js ``` --solutions-- ```js let adjective = \"funny\"; let noun = \"dragon\"; let verb = \"jumping\"; let place = \"garden\"; let adjective2 = \"sparkling\"; let noun2 = \"cakes\"; const firstStory = Once upon a time, there was a(n) ${adjective} ${noun} who loved to eat ${noun2} The ${noun} lived in a ${place} and had ${adjective2} nostrils that blew fire when it was ${verb} ; consolelog(\"First story: \" + firstStory);\nadjective = \"cute\";\nnoun = \"puppy\";\nverb = \"barking\";\nplace = \"park\";\nadjective2 = \"colorful\";\nnoun2 = \"flower\";\nconst secondStory = Once upon a time, there was a(n) ${adjective} ${noun} who loved to eat ${noun2} The ${noun} lived in a ${place} and had ${adjective2} nostrils that blew fire when it was ${verb} ;\nconsole log(\"Second story: \" + secondStory);\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6720,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sentence-maker\\66c057041df6394ca796bf33.md",
      "source_type": "git_repo"
    },
    "token_count": 253,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "bf9156b248fbe59b6e867f001968b251",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
    "source_type": "git_repo",
    "title": "Regex Sandbox",
    "content": "id: 66e028680eca7d21db7e1aee\ntitle: Build a RegEx Sandbox\nchallengeType: 25\ndashedName: lab-regex-sandbox\ndemoType: onClick\n--description--\nFor this lab, you start with the CSS and HTML already written for you You will use JavaScript to enable the regex sandbox to test a regular expression against a string and highlight the results Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should access the #pattern, #test-string, #test-btn, and #result elements and save them in the variables regexPattern, stringToTest, testButton, and testResult, respectively You should access the #i and #g flag checkboxes and save them in the variables caseInsensitiveFlag and globalFlag, respectively You should have a function named getFlags that returns a string containing the flags from checked flag checkboxes, or an empty string if none of them have been checked When you click the testButton button, if the regex pattern matches the test string, the matched text should be highlighted To highlight the matches, replace each match with the same text surrounded by a span element with the class of highlight Note that the CSS for that has been already added for you When there's a match, the matched text should be displayed inside #result In case of multiple matches, each matched text should be separated from the next one by a comma and a space When there's no match, the text no match should be displayed inside #result --hints--\nYou should access the #pattern element and save it in the regexPattern variable js\nassert equal(regexPattern, document querySelector('#pattern'))\nYou should access the #test-string element and save it in the stringToTest variable js\nassert equal(stringToTest, document querySelector('#test-string'))\nYou should access the #test-btn element and save it in the testButton variable js\nassert equal(testButton, document querySelector('#test-btn'))\nYou should access the #result element and save it in the testResult variable js\nassert equal(testResult, document querySelector('#result'))\nYou should access the #i flag checkbox and save it in the caseInsensitiveFlag js\nassert equal(caseInsensitiveFlag, document querySelector('#i'))\nYou should access the #g flag checkbox and save it in the globalFlag variable js\nassert equal(globalFlag, document querySelector('#g'))\nYou should have a getFlags function js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 12
  },
  {
    "id": "f5b69ff46a6f68b52f97881faf16f61f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
    "source_type": "git_repo",
    "title": "Regex Sandbox",
    "content": "element and save it in the testButton variable js assert equal(testButton, document querySelector('#test-btn')) You should access the #result element and save it in the testResult variable js assert equal(testResult, document querySelector('#result')) You should access the #i flag checkbox and save it in the caseInsensitiveFlag js assert equal(caseInsensitiveFlag, document querySelector('#i')) You should access the #g flag checkbox and save it in the globalFlag variable js assert equal(globalFlag, document querySelector('#g')) You should have a getFlags function js assertisFunction(getFlags)\nThe getFlags function should return \"i\" if the #i checkbox is checked js\ncaseInsensitiveFlag checked = true;\nglobalFlag checked = false;\nassert equal(getFlags(), \"i\")\nThe getFlags function should return \"g\" if the #g checkbox is checked js\ncaseInsensitiveFlag checked = false;\nglobalFlag checked = true;\nassert equal(getFlags(), \"g\")\nThe getFlags function should return either \"ig\" or \"gi\" if both checkboxes are checked js\ncaseInsensitiveFlag checked = true;\nglobalFlag checked = true;\nconst flags = getFlags();\nassert lengthOf(flags, 2);\nassert include(flags, \"i\");\nassert include(flags, \"g\");\nThe getFlags function should return an empty string if both checkboxes are not checked js\ncaseInsensitiveFlag checked = false;\nglobalFlag checked = false;\nassert equal(getFlags(), \"\")\nWhen the inner HTML of stringToTest is Gu1n34 P1g5, the value of regexPattern is \\d+,  and no flag is checked, stringToTest innerHTML should become Gu<span class=\"highlight\">1</span>n34 P1g5 by clicking the testButton button js\nstringToTest innerText = \"Gu1n34 P1g5\"\nregexPattern value = \"\\\\d+\";\ncaseInsensitiveFlag checked = false;\nglobalFlag checked = false;\nconst testBtn = document getElementById(\"test-btn\");\ntestBtn dispatchEvent(new Event(\"click\"));\nlet expected = 'Gu<span class=\"highlight\">1</span>n34 P1g5';\nassert equal(stringToTest innerHTML, expected);\nWhen the inner HTML of stringToTest is Gu1n34 P1g5, the value of regexPattern is \\d+,  and the global flag is checked, stringToTest",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 12
  },
  {
    "id": "9089f8d5247d75d1015a023f9d119ba2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
    "source_type": "git_repo",
    "title": "Regex Sandbox",
    "content": "\\d+, and no flag is checked, stringToTest innerHTML should become Gu<span class=\"highlight\">1</span>n34 P1g5 by clicking the testButton button js stringToTest innerText = \"Gu1n34 P1g5\" regexPattern value = \"\\\\d+\"; caseInsensitiveFlag checked = false; globalFlag checked = false; const testBtn = document getElementById(\"test-btn\"); testBtn dispatchEvent(new Event(\"click\")); let expected = 'Gu<span class=\"highlight\">1</span>n34 P1g5'; assert equal(stringToTest innerHTML, expected); When the inner HTML of stringToTest is Gu1n34 P1g5, the value of regexPattern is \\d+, and the global flag is checked, stringToTestinnerHTML should become Gu<span class=\"highlight\">1</span>n<span class=\"highlight\">34</span> P<span class=\"highlight\">1</span>g<span class=\"highlight\">5</span> by clicking the testButton button js\nstringToTest innerText = \"Gu1n34 P1g5\"\nregexPattern value = \"\\\\d+\";\ncaseInsensitiveFlag checked = false;\nglobalFlag checked = true;\nconst testBtn = document getElementById(\"test-btn\");\ntestBtn dispatchEvent(new Event(\"click\"));\nlet expected = 'Gu<span class=\"highlight\">1</span>n<span class=\"highlight\">34</span> P<span class=\"highlight\">1</span>g<span class=\"highlight\">5</span>';\nassert equal(stringToTest innerHTML, expected);\nWhen the inner HTML of stringToTest is Gu1n34 P1g5, the value of regexPattern is G,  and both the global and case insensitive flags are checked, stringToTest innerHTML should become <span class=\"highlight\">G</span>u1n34 P1<span class=\"highlight\">g</span>5 by clicking the testButton button js\nstringToTest innerText = \"Gu1n34 P1g5\"\nregexPattern value = \"G\";\ncaseInsensitiveFlag checked = true;\nglobalFlag checked = true;\nconst testBtn = document getElementById(\"test-btn\");\ntestBtn dispatchEvent(new Event(\"click\"));\nlet expected = '<span class=\"highlight\">G</span>u1n34 P1<span class=\"highlight\">g</span>5';\nassert equal(stringToTest",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 2,
    "total_chunks": 12
  },
  {
    "id": "f422577de1be722981e843a1a457355d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
    "source_type": "git_repo",
    "title": "Regex Sandbox",
    "content": "equal(stringToTest innerHTML, expected); When the inner HTML of stringToTest is Gu1n34 P1g5, the value of regexPattern is G, and both the global and case insensitive flags are checked, stringToTest innerHTML should become <span class=\"highlight\">G</span>u1n34 P1<span class=\"highlight\">g</span>5 by clicking the testButton button js stringToTest innerText = \"Gu1n34 P1g5\" regexPattern value = \"G\"; caseInsensitiveFlag checked = true; globalFlag checked = true; const testBtn = document getElementById(\"test-btn\"); testBtn dispatchEvent(new Event(\"click\")); let expected = '<span class=\"highlight\">G</span>u1n34 P1<span class=\"highlight\">g</span>5'; assert equal(stringToTestinnerHTML, expected);\nWhen you click the testButton button, if the regex pattern matches the test string, the matched text should be surrounded by a span element with the class of highlight ```js\nstringToTest innerText = \"She sells seashells by the seashore \"\nregexPattern value = \"s[he]a \";\ncaseInsensitiveFlag checked = true;\nglobalFlag checked = true;\nconst testBtn = document getElementById(\"test-btn\");\ntestBtn dispatchEvent(new Event(\"click\"));\nlet expected = 'She sells seashells by the seashore ';\nassert strictEqual(stringToTest innerHTML, expected);\nstringToTest innerText = \"She sells seashells by the seashore \"\ncaseInsensitiveFlag checked = false;\nglobalFlag checked = true;\ntestBtn dispatchEvent(new Event(\"click\"));\nexpected = 'She sells seashells by the seashore ';\nassert strictEqual(stringToTest innerHTML, expected);\nstringToTest innerText = \"She sells seashells by the seashore \"\nglobalFlag checked = false;\ntestBtn dispatchEvent(new Event(\"click\"));\nexpected = 'She sells seashells by the seashore ';\nassert strictEqual(stringToTest innerHTML, expected);\nstringToTest innerText = \"She sells seashells by the seashore \"\ncaseInsensitiveFlag checked = true;\ntestBtn dispatchEvent(new Event(\"click\"));\nexpected = 'She sells seashells by the seashore ';\nassert strictEqual(stringToTest innerHTML, expected);\n```\nWhen there's no match, the test string shouldn't be modified js\nstringToTest",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 3,
    "total_chunks": 12
  },
  {
    "id": "b21e795420093d79ea1fbb78f23bf4f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
    "source_type": "git_repo",
    "title": "Regex Sandbox",
    "content": "strictEqual(stringToTest innerHTML, expected); stringToTest innerText = \"She sells seashells by the seashore \" globalFlag checked = false; testBtn dispatchEvent(new Event(\"click\")); expected = 'She sells seashells by the seashore '; assert strictEqual(stringToTest innerHTML, expected); stringToTest innerText = \"She sells seashells by the seashore \" caseInsensitiveFlag checked = true; testBtn dispatchEvent(new Event(\"click\")); expected = 'She sells seashells by the seashore '; assert strictEqual(stringToTest innerHTML, expected); ``` When there's no match, the test string shouldn't be modified js stringToTestinnerText = \"She sells seashells by the seashore \"\nregexPattern value = \"sea\\\\s\";\nconst testBtn = document getElementById(\"test-btn\");\ntestBtn dispatchEvent(new Event(\"click\"));\nlet expected = 'She sells seashells by the seashore ';\nassert strictEqual(stringToTest innerHTML, expected);\nWhen the inner HTML of stringToTest is Gu1n34 P1g5, the value of regexPattern is \\d+,  and no flag is checked, the inner text of #result should become 1 by clicking the testButton button js\nconst out = document getElementById(\"result\");\nstringToTest innerText = \"Gu1n34 P1g5\"\nregexPattern value = \"\\\\d+\";\ncaseInsensitiveFlag checked = false;\nglobalFlag checked = false;\nconst testBtn = document getElementById(\"test-btn\");\ntestBtn dispatchEvent(new Event(\"click\"));\nlet expected = \"1\"\nassert strictEqual(out innerText, expected)\nWhen the inner HTML of stringToTest is Gu1n34 P1g5, the value of regexPattern is \\d+,  and the global flag is checked, the inner text of #result should become 1, 34, 1, 5 by clicking the testButton button js\nconst out = document getElementById(\"result\");\nstringToTest innerText = \"Gu1n34 P1g5\"\nregexPattern value = \"\\\\d+\";\ncaseInsensitiveFlag checked = false;\nglobalFlag checked = true;\nconst testBtn = document getElementById(\"test-btn\");\ntestBtn dispatchEvent(new Event(\"click\"));\nlet expected = \"1, 34, 1, 5\"\nassert strictEqual(out",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 4,
    "total_chunks": 12
  },
  {
    "id": "19e840d1cbf4a0d55a8fae62fc20f2d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
    "source_type": "git_repo",
    "title": "Regex Sandbox",
    "content": "the inner HTML of stringToTest is Gu1n34 P1g5, the value of regexPattern is \\d+, and the global flag is checked, the inner text of #result should become 1, 34, 1, 5 by clicking the testButton button js const out = document getElementById(\"result\"); stringToTest innerText = \"Gu1n34 P1g5\" regexPattern value = \"\\\\d+\"; caseInsensitiveFlag checked = false; globalFlag checked = true; const testBtn = document getElementById(\"test-btn\"); testBtn dispatchEvent(new Event(\"click\")); let expected = \"1, 34, 1, 5\" assert strictEqual(outinnerText, expected)\nWhen there's a match, the matched text should be displayed inside #result ```js\nconst out = document getElementById(\"result\");\nstringToTest innerText = \"She sells seashells by the seashore \"\nregexPattern value = \"s[he]a \";\ncaseInsensitiveFlag checked = true;\nglobalFlag checked = true;\nconst testBtn = document getElementById(\"test-btn\");\ntestBtn dispatchEvent(new Event(\"click\"));\nlet expected = \"Sh, se, sea, sh, sea, sh\"\nassert strictEqual(out innerText, expected)\nstringToTest innerText = \"She sells seashells by the seashore \"\ncaseInsensitiveFlag checked = false;\ntestBtn dispatchEvent(new Event(\"click\"));\nexpected = \"se, sea, sh, sea, sh\"\nassert strictEqual(out innerText, expected)\nstringToTest innerText = \"She sells seashells by the seashore \"\nglobalFlag checked = false;\ntestBtn dispatchEvent(new Event(\"click\"));\nexpected = \"se\"\nassert strictEqual(out innerText, expected)\nstringToTest innerText = \"She sells seashells by the seashore \"\ncaseInsensitiveFlag checked = true;\ntestBtn dispatchEvent(new Event(\"click\"));\nexpected = \"Sh\"\nassert strictEqual(out innerText, expected)\n```\nWhen there's no match, the text no match should be displayed inside #result js\nconst out = document getElementById(\"result\");\nstringToTest innerText = \"She sells seashells by the seashore \"\nregexPattern value = \"sea\\\\s\";\nconst testBtn = document getElementById(\"test-btn\");\ntestBtn dispatchEvent(new Event(\"click\"));\nlet expected = \"no match\";\nassert strictEqual(out",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 5,
    "total_chunks": 12
  },
  {
    "id": "6d8a6e58e5e9c3ada4c3b82c17d11cf6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
    "source_type": "git_repo",
    "title": "Regex Sandbox",
    "content": "strictEqual(out innerText, expected) stringToTest innerText = \"She sells seashells by the seashore \" caseInsensitiveFlag checked = true; testBtn dispatchEvent(new Event(\"click\")); expected = \"Sh\" assert strictEqual(out innerText, expected) ``` When there's no match, the text no match should be displayed inside #result js const out = document getElementById(\"result\"); stringToTest innerText = \"She sells seashells by the seashore \" regexPattern value = \"sea\\\\s\"; const testBtn = document getElementById(\"test-btn\"); testBtn dispatchEvent(new Event(\"click\")); let expected = \"no match\"; assert strictEqual(outinnerText, expected);\n--seed--\n--seed-contents--\n```html\nRegex Sandbox\nRegex Sandbox\nRegex Pattern:\n//\nFlags:\ni\ng\nTest String:\nTest Regex\nResult:\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n--border: 0 2rem solid darkgrey;\n--padding: 0 3rem;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\nfont-size: 20px;\nfont-family: \"Lato\", Helvetica, Arial, sans-serif;\npadding: 5px;\n}\nh1 {\nmargin: 5rem auto 2rem;\ntext-align: center;\n}\np {\npadding: var(--padding);\n}\nregex-container {\nmax-width: 680px;\nmargin: 20px auto;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nborder: var(--border);\n}\nregex-container>label {\npadding: var(--padding);\nflex: 1 1 auto;\n}\npattern-container {\ndisplay: inline-block;\ncolor: var(--dark-grey);\nbackground-color: var(--light-grey);\nmargin: 5px;\nborder: var(--border);\n}\npattern {\nmargin: 0 2rem;\nborder: 0;\nfont-size: 1rem;\nwidth: calc(100% - 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 6,
    "total_chunks": 12
  },
  {
    "id": "a9acfbed8ac24f28009666fbb383083e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
    "source_type": "git_repo",
    "title": "Regex Sandbox",
    "content": "var(--light-grey); font-size: 20px; font-family: \"Lato\", Helvetica, Arial, sans-serif; padding: 5px; } h1 { margin: 5rem auto 2rem; text-align: center; } p { padding: var(--padding); } regex-container { max-width: 680px; margin: 20px auto; display: flex; justify-content: center; align-items: center; border: var(--border); } regex-container>label { padding: var(--padding); flex: 1 1 auto; } pattern-container { display: inline-block; color: var(--dark-grey); background-color: var(--light-grey); margin: 5px; border: var(--border); } pattern { margin: 0 2rem; border: 0; font-size: 1rem; width: calc(100% - 12rem);\n}\npattern:focus {\noutline: none;\n}\nflags-container {\ndisplay: flex;\nalign-items: center;\nflex: 1 1 auto;\n}\nflags-container>label {\npadding: var(--padding);\nmargin-right: 0 3rem;\n}\ntest-container {\nmax-width: 680px;\nmargin: 20px auto;\ndisplay: flex;\nflex-direction: column;\nflex: 0 0 auto;\nborder: var(--border);\n}\ntest-string {\nbackground-color: var(--light-grey);\nmin-height: 5rem;\ncolor: var(--dark-grey);\nborder-top: var(--border);\nfont-size: 1 2rem;\n}\n[contenteditable=true]:empty:before {\ncontent: attr(placeholder);\npointer-events: none;\ncolor: var(--dark-grey);\n}\n::placeholder {\ncolor: var(--dark-grey);\n}\nbutton {\ndisplay: block;\ncursor: pointer;\nwidth: 8rem;\nmargin: 0 2rem auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 0 2rem;\nfont-size: 1 1rem;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult-container {\nmax-width: 680px;\nmargin: 20px auto;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n}\nh2 {\nalign-self: flex-start;\nmargin: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 7,
    "total_chunks": 12
  },
  {
    "id": "be900e660d21d0d2cceba388bb9245f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
    "source_type": "git_repo",
    "title": "Regex Sandbox",
    "content": "color: var(--dark-grey); border-top: var(--border); font-size: 1 2rem; } [contenteditable=true]:empty:before { content: attr(placeholder); pointer-events: none; color: var(--dark-grey); } ::placeholder { color: var(--dark-grey); } button { display: block; cursor: pointer; width: 8rem; margin: 0 2rem auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 0 2rem; font-size: 1 1rem; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } result-container { max-width: 680px; margin: 20px auto; display: flex; justify-content: center; align-items: center; } h2 { align-self: flex-start; margin: 04rem 0 2rem 0 2rem;\nflex: 0 1 auto;\n}\nresult {\ncolor: var(--dark-grey);\nbackground-color: var(--light-grey);\nfont-size: 1 5rem;\nflex: 1 1 auto;\nmargin: 0 2rem;\nborder: var(--border);\nmin-height: 3rem;\n} highlight {\nbackground-color: lightgreen;\n}\n```\n```js\n```\n--solutions--\n```html\nRegex Sandbox\nRegex Sandbox\nRegex Pattern:\n//\nFlags:\ni\ng\nTest String:\nTest Regex\nResult:\n```\n```css\n,\n::before,\n*::after {\nbox-sizing: border-box;\nmargin: 0;\npadding: 0;\n}\n:root {\n--dark-grey: #1b1b32;\n--light-grey: #f5f6f7;\n--golden-yellow: #fecc4c;\n--yellow: #ffcc4c;\n--gold: #feac32;\n--orange: #ffac33;\n--dark-orange: #f89808;\n--border: 0 2rem solid darkgrey;\n--padding: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 8,
    "total_chunks": 12
  },
  {
    "id": "1403cea0c13f4bb525f566afa9d284cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
    "source_type": "git_repo",
    "title": "Regex Sandbox",
    "content": "font-size: 1 5rem; flex: 1 1 auto; margin: 0 2rem; border: var(--border); min-height: 3rem; } highlight { background-color: lightgreen; } ``` ```js ``` --solutions-- ```html Regex Sandbox Regex Sandbox Regex Pattern: // Flags: i g Test String: Test Regex Result: ``` ```css , ::before, *::after { box-sizing: border-box; margin: 0; padding: 0; } :root { --dark-grey: #1b1b32; --light-grey: #f5f6f7; --golden-yellow: #fecc4c; --yellow: #ffcc4c; --gold: #feac32; --orange: #ffac33; --dark-orange: #f89808; --border: 0 2rem solid darkgrey; --padding: 03rem;\n}\nbody {\nbackground-color: var(--dark-grey);\ncolor: var(--light-grey);\nfont-size: 20px;\nfont-family: \"Lato\", Helvetica, Arial, sans-serif;\n}\nh1 {\nmargin: 5rem auto 2rem;\ntext-align: center;\n}\np {\npadding: var(--padding);\n}\nregex-container {\nmax-width: 680px;\nmargin: 20px auto;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nborder: var(--border);\n}\nregex-container>label {\npadding: var(--padding);\nflex: 1 1 auto;\n}\npattern-container {\ndisplay: inline-block;\ncolor: var(--dark-grey);\nbackground-color: var(--light-grey);\nmargin: 5px;\nborder: var(--border);\n}\npattern {\nmargin: 0 2rem;\nborder: 0;\nfont-size: 1rem;\nwidth: calc(100% - 1 2rem);\n}\npattern:focus {\noutline: none;\n}\nflags-container {\ndisplay: flex;\nalign-items: center;\nflex: 1 1 auto;\n}\nflags-container>label {\npadding: var(--padding);\nmargin-right: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 9,
    "total_chunks": 12
  },
  {
    "id": "8865b0070fd7bd2ac8df5b9f08a8aaae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
    "source_type": "git_repo",
    "title": "Regex Sandbox",
    "content": "} regex-container { max-width: 680px; margin: 20px auto; display: flex; justify-content: center; align-items: center; border: var(--border); } regex-container>label { padding: var(--padding); flex: 1 1 auto; } pattern-container { display: inline-block; color: var(--dark-grey); background-color: var(--light-grey); margin: 5px; border: var(--border); } pattern { margin: 0 2rem; border: 0; font-size: 1rem; width: calc(100% - 1 2rem); } pattern:focus { outline: none; } flags-container { display: flex; align-items: center; flex: 1 1 auto; } flags-container>label { padding: var(--padding); margin-right: 03rem;\n}\ntest-container {\nmax-width: 680px;\nmargin: 20px auto;\ndisplay: flex;\nflex-direction: column;\nflex: 0 0 auto;\nborder: var(--border);\n}\ntest-string {\nbackground-color: var(--light-grey);\nmin-height: 5rem;\ncolor: var(--dark-grey);\nborder-top: var(--border);\nfont-size: 1 2rem;\n}\n[contenteditable=true]:empty:before {\ncontent: attr(placeholder);\npointer-events: none;\ncolor: var(--dark-grey);\n}\n::placeholder {\ncolor: var(--dark-grey);\n}\nbutton {\ndisplay: block;\ncursor: pointer;\nwidth: 8rem;\nmargin: 0 2rem auto;\ncolor: var(--dark-grey);\nbackground-color: var(--gold);\nbackground-image: linear-gradient(var(--golden-yellow), var(--orange));\nborder-color: var(--gold);\nborder-width: 0 2rem;\nfont-size: 1 1rem;\n} btn:hover {\nbackground-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\nresult-container {\nmax-width: 680px;\nmargin: 20px auto;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n}\nh2 {\nalign-self: flex-start;\nmargin: 0 4rem 0 2rem 0 2rem;\nflex: 0 1 auto;\n}\nresult {\ncolor: var(--dark-grey);\nbackground-color: var(--light-grey);\nfont-size: 1 5rem;\nflex: 1 1 auto;\nmargin: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 10,
    "total_chunks": 12
  },
  {
    "id": "95632ddc7e40866237d3c66b4cc789ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
    "source_type": "git_repo",
    "title": "Regex Sandbox",
    "content": "block; cursor: pointer; width: 8rem; margin: 0 2rem auto; color: var(--dark-grey); background-color: var(--gold); background-image: linear-gradient(var(--golden-yellow), var(--orange)); border-color: var(--gold); border-width: 0 2rem; font-size: 1 1rem; } btn:hover { background-image: linear-gradient(var(--yellow), var(--dark-orange)); } result-container { max-width: 680px; margin: 20px auto; display: flex; justify-content: center; align-items: center; } h2 { align-self: flex-start; margin: 0 4rem 0 2rem 0 2rem; flex: 0 1 auto; } result { color: var(--dark-grey); background-color: var(--light-grey); font-size: 1 5rem; flex: 1 1 auto; margin: 02rem;\nborder: var(--border);\nmin-height: 3rem;\n} highlight {\nbackground-color: lightgreen;\n}\n```\njs\nconst regexPattern = document getElementById(\"pattern\");\nconst caseInsensitiveFlag = document getElementById(\"i\");\nconst globalFlag = document getElementById(\"g\");\nconst testResult = document getElementById(\"result\");\nconst getFlags = () => {\nlet flags = '';\nconst flagArray = [caseInsensitiveFlag, globalFlag]\nflagArray forEach((flag) => {\nif (flag checked) flags += flag id;\n})\nreturn flags\n}\nconst stringToTest = document getElementById(\"test-string\");\nconst testButton = document getElementById(\"test-btn\")\ntestButton addEventListener(\n\"click\",\n() => {\nlet matched;\nlet flags = getFlags();\nconst regex = new RegExp(regexPattern value, flags)\nif (flags includes(globalFlag)) {\nstringToTest innerHTML = stringToTest innerText replaceAll(regex, '<span class=\"highlight\">$&</span>')\nmatched = stringToTest innerText matchAll(regex)\n} else {\nstringToTest innerHTML = stringToTest innerText replace(regex, '<span class=\"highlight\">$&</span>')\nmatched = stringToTest innerText match(regex);\n}\ntestResult innerText = matched matched join(\", \") : 'no match';\n}\n)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19658,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-regex-sandbox\\66e028680eca7d21db7e1aee.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 11,
    "total_chunks": 12
  },
  {
    "id": "e9512afab2c2473a4134f00fd5ea26d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sum-all-numbers-algorithm\\a3566b1109230028080c9345.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: a3566b1109230028080c9345\ntitle: Design a Sum All Numbers Algorithm\nchallengeType: 26\ndashedName: lab-sum-all-numbers-algorithm\n--description--\nIn this lab, you will need to design a sum all numbers algorithm.\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab.\nUser Stories:\nYou should have a function named sumAll that accepts an array of two numbers.\nsumAll([n, m]) should return the sum of n and m plus the sum of all the numbers between them. The lowest number will not always come first. For example, sumAll([4,1]) should return 10 because sum of all the numbers between 1 and 4 (both inclusive) is 10.\n--hints--\nYou should have a function named sumAll.\njs\nassert.isFunction(sumAll);\nsumAll([1, 4]) should return a number.\njs\nassert.isNumber(sumAll([1, 4]));\nsumAll([1, 4]) should return 10.\njs\nassert.equal(sumAll([1, 4]), 10);\nsumAll([4, 1]) should return 10.\njs\nassert.equal(sumAll([4, 1]), 10);\nsumAll([5, 10]) should return 45.\njs\nassert.equal(sumAll([5, 10]), 45);\nsumAll([10, 5]) should return 45.\njs\nassert.equal(sumAll([10, 5]), 45);\n--seed--\n--seed-contents--\njs\n--solutions--\n```js\nfunction sumAll(arr) {\nlet sum = 0;\narr.sort((a, b) => a - b);\nfor (var i = arr[0]; i <= arr[1]; i++) {\nsum += i;\n}\nreturn sum;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1439,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sum-all-numbers-algorithm\\a3566b1109230028080c9345.md",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "400672841974e9f05772a159c76717cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-string-ending-checker\\acda2fb1324d9b0fa741e6b5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: acda2fb1324d9b0fa741e6b5\ntitle: Build a Confirm the Ending Tool\nchallengeType: 26\ndashedName: implement-a-string-ending-checker-function\n--description--\nIn this lab, you will implement a function that checks if a string ends with the given target string Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create a function named confirmEnding that takes two parameters: the string to check and the string to check against The function should return true if the first string ends with the second string, and false otherwise You should not use the endsWith() method; instead, use one of the JavaScript substring methods to achieve this --hints--\nYou should create a function named confirmEnding js\nassert isFunction(confirmEnding);\nconfirmEnding should take 2 parameters js\nassert lengthOf(confirmEnding, 2);\nconfirmEnding(\"Bastian\", \"n\") should return true js\nassert isTrue(confirmEnding('Bastian', 'n'));\nconfirmEnding(\"Congratulation\", \"on\") should return true js\nassert isTrue(confirmEnding('Congratulation', 'on'));\nconfirmEnding(\"Connor\", \"n\") should return false js\nassert isFalse(confirmEnding('Connor', 'n'));\nconfirmEnding(\"Walking on water and developing software from a specification are easy if both are frozen\", \"specification\") should return false js\nassert isFalse(\nconfirmEnding(\n'Walking on water and developing software from a specification are easy if both are frozen',\n'specification'\n)\n);\nconfirmEnding(\"He has to give me a new name\", \"name\") should return true js\nassert isTrue(confirmEnding('He has to give me a new name', 'name'));\nconfirmEnding(\"Open sesame\", \"same\") should return true js\nassert isTrue(confirmEnding('Open sesame', 'same'));\nconfirmEnding(\"Open sesame\", \"sage\") should return false js\nassert isFalse(confirmEnding('Open sesame', 'sage'));\nconfirmEnding(\"Open sesame\", \"game\") should return false js\nassert isFalse(confirmEnding('Open sesame', 'game'));\nconfirmEnding(\"If you want to save our world, you must hurry We don't know how much longer we can withstand the nothing\", \"mountain\") should return false js\nassert isFalse(\nconfirmEnding(\n\"If you want to save our world, you must hurry",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-string-ending-checker\\acda2fb1324d9b0fa741e6b5.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "06a4b5451d09bb874b05f4cde2abf1fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-string-ending-checker\\acda2fb1324d9b0fa741e6b5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a new name', 'name')); confirmEnding(\"Open sesame\", \"same\") should return true js assert isTrue(confirmEnding('Open sesame', 'same')); confirmEnding(\"Open sesame\", \"sage\") should return false js assert isFalse(confirmEnding('Open sesame', 'sage')); confirmEnding(\"Open sesame\", \"game\") should return false js assert isFalse(confirmEnding('Open sesame', 'game')); confirmEnding(\"If you want to save our world, you must hurry We don't know how much longer we can withstand the nothing\", \"mountain\") should return false js assert isFalse( confirmEnding( \"If you want to save our world, you must hurryWe don't know how much longer we can withstand the nothing\",\n'mountain'\n)\n);\nconfirmEnding(\"Abstraction\", \"action\") should return true js\nassert isTrue(confirmEnding('Abstraction', 'action'));\nYour code should not use the built-in method endsWith() to solve the lab js\nassert notMatch(__helpers removeJSComments(code), /\\ endsWith\\( * \\)\\s* ; /);\nassert notMatch(__helpers removeJSComments(code), /\\['endsWith'\\]/);\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nfunction confirmEnding(str, target) {\nreturn str substring(str length - target length) === target;\n}\nconfirmEnding('Bastian', 'n');\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3077,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-string-ending-checker\\acda2fb1324d9b0fa741e6b5.md",
      "source_type": "git_repo"
    },
    "token_count": 290,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "9629b8619f317c804586547ecac5ff47",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-stylized-to-do-list\\66c051d13a6a20255a963695.md",
    "source_type": "git_repo",
    "title": "Styled To-Do List",
    "content": "id: 66c051d13a6a20255a963695\ntitle: Build a Stylized To-Do list\nchallengeType: 25\ndashedName: build-a-stylized-to-do-list\ndemoType: onClick\n--description--\nIn this lab, you will practice the different styles that can be applied to links when they are hovered over, focused, clicked, and visited Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have one unordered list with the class todo-list Inside the unordered list, you should have four list items Inside each list item, there should be:\nAn input element with the type checkbox and id set to a unique value A label element with the for attribute set to the corresponding input element's id An unordered list with the class sub-item A list item with an anchor element in it The anchor should have the class sub-item-link, a valid href value, and a target value that makes the link open in a new tab Your anchor elements shouldn't have any default text decoration You should set the text color of the links to a color of your choice When your links are visited, the color should change to another color of your choice When your links are hovered over, the color should change to another color of your choice When your links are focused, there should be a colored outline around the link When your links are clicked, the color should change to another color of your choice Note: Be sure to link your stylesheet in your HTML and apply your CSS --hints--\nYou should have one unordered list with the class todo-list js\nassert exists(document querySelector('ul todo-list'));\nassert lengthOf(document querySelectorAll('ul todo-list'), 1);\nYou should have four list items inside the unordered list js\nconst li = document querySelectorAll('ul todo-list > li');\nassert lengthOf(li, 4);\nThe li inside the ul with the class todo-list should contain an input element with the type of checkbox js\nconst checkboxes = document querySelectorAll(\n'ul todo-list li input[type=\"checkbox\"]'\n);\nassert lengthOf(checkboxes, 4);\nThe li inside the ul with the class todo-list should contain a label element js\nconst labels = document querySelectorAll(\n'ul todo-list li label'\n);\nassert lengthOf(labels, 4);\nAll input elements should have an id js\nconst inputs = document querySelectorAll('input');\nassert isAbove(inputs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8932,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-stylized-to-do-list\\66c051d13a6a20255a963695.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "2f8bd3f62357840a8d4c580d610bc256",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-stylized-to-do-list\\66c051d13a6a20255a963695.md",
    "source_type": "git_repo",
    "title": "Styled To-Do List",
    "content": "The li inside the ul with the class todo-list should contain an input element with the type of checkbox js const checkboxes = document querySelectorAll( 'ul todo-list li input[type=\"checkbox\"]' ); assert lengthOf(checkboxes, 4); The li inside the ul with the class todo-list should contain a label element js const labels = document querySelectorAll( 'ul todo-list li label' ); assert lengthOf(labels, 4); All input elements should have an id js const inputs = document querySelectorAll('input'); assert isAbove(inputslength, 0);\nfor (let input of inputs) {\nassert isAbove(input id length, 0);\n}\nAll label elements should have a for attribute js\nconst labels = document querySelectorAll('label');\nassert isAbove(labels length, 0);\nfor (let label of labels) {\nassert isAbove(label htmlFor length, 0);\n}\nAll label elements should have some text js\nconst labels = document querySelectorAll('label');\nassert isAbove(labels length, 0);\nfor (let label of labels) {\nassert isAbove(label innerText length, 0);\n}\nThe id and for attributes of the input and label elements pairs, should have corresponding values ```js\nconst labels = document querySelectorAll(\"label\");\ndocument querySelectorAll(\"input\") forEach((input, index) => {\nassert equal(input id, labels[index] htmlFor);\n});\n```\nAfter the label elements, there should be an unordered list with the class sub-item js\nconst labelSbItems = document querySelectorAll('ul todo-list li label + ul sub-item');\nassert lengthOf(labelSbItems, 4);\nThe li inside the ul with the class sub-item should have an anchor element with the class sub-item-link js\nconst allItems = document querySelectorAll(\n'ul todo-list li label + ul sub-item li a sub-item-link'\n);\nassert lengthOf(allItems, 4);\nAll anchor elements should have a valid href attribute js\nconst links = document querySelectorAll('a');\nassert isAbove(links length, 0);\nfor (let link of links) {\nassert isAbove(link href length, 0);\n}\nAll anchor elements should have text js\nconst links = document querySelectorAll('a');\nassert isAbove(links length, 0);\nfor (let link of links) {\nassert isAbove(link innerText",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8932,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-stylized-to-do-list\\66c051d13a6a20255a963695.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "3e5bb43eda7d3ec71ebf2c5f6d89313b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-stylized-to-do-list\\66c051d13a6a20255a963695.md",
    "source_type": "git_repo",
    "title": "Styled To-Do List",
    "content": "js const allItems = document querySelectorAll( 'ul todo-list li label + ul sub-item li a sub-item-link' ); assert lengthOf(allItems, 4); All anchor elements should have a valid href attribute js const links = document querySelectorAll('a'); assert isAbove(links length, 0); for (let link of links) { assert isAbove(link href length, 0); } All anchor elements should have text js const links = document querySelectorAll('a'); assert isAbove(links length, 0); for (let link of links) { assert isAbove(link innerTextlength, 0);\n}\nEach a element should have a target attribute with the value of _blank js\nconst anchors = document querySelectorAll('a');\nassert isAbove(anchors length, 0);\nfor (let anchor of anchors) {\nassert equal(anchor target, '_blank');\n}\nThe links on the page should have no underline by default js\nassert isTrue(\nnew __helpers CSSHelp(document) getStyle('a sub-item-link') textDecoration === 'none' ||\nnew __helpers CSSHelp(document) getStyle('a') textDecoration === 'none' ||\nnew __helpers CSSHelp(document) getStyle(' sub-item-link') textDecoration === 'none'\n);\nThe links should change color when hovered over js\nassert exists(\nnew __helpers CSSHelp(document) getStyle(' sub-item-link:hover') color ||\nnew __helpers CSSHelp(document) getStyle('a:hover') color ||\nnew __helpers CSSHelp(document) getStyle('a sub-item-link:hover') color\n);\nThe links should change color when they are being clicked js\nassert exists(\nnew __helpers CSSHelp(document) getStyle(' sub-item-link:active') color ||\nnew __helpers CSSHelp(document) getStyle('a:active') color ||\nnew __helpers CSSHelp(document) getStyle('a sub-item-link:active') color\n);\nThe links should have an outline when focused js\nconst css = new __helpers CSSHelp(document);\nassert exists(\ncss getStyle(' sub-item-link:focus') outline ||\ncss getStyle('a:focus') outline ||\ncss getStyle('a sub-item-link:focus') outline ||\ncss getStyle(' sub-item-link:focus') border ||\ncss getStyle('a:focus') border ||\ncss getStyle('a sub-item-link:focus') border\n);\nThe links should change color once visited js\nassert exists(\nnew __helpers CSSHelp(document) getStyle(' sub-item-link:visited') color ||\nnew __helpers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8932,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-stylized-to-do-list\\66c051d13a6a20255a963695.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "8bd2753696ceb5f027b96ee3ff13b321",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-stylized-to-do-list\\66c051d13a6a20255a963695.md",
    "source_type": "git_repo",
    "title": "Styled To-Do List",
    "content": "__helpers CSSHelp(document) getStyle('a:active') color || new __helpers CSSHelp(document) getStyle('a sub-item-link:active') color ); The links should have an outline when focused js const css = new __helpers CSSHelp(document); assert exists( css getStyle(' sub-item-link:focus') outline || css getStyle('a:focus') outline || css getStyle('a sub-item-link:focus') outline || css getStyle(' sub-item-link:focus') border || css getStyle('a:focus') border || css getStyle('a sub-item-link:focus') border ); The links should change color once visited js assert exists( new __helpers CSSHelp(document) getStyle(' sub-item-link:visited') color || new __helpersCSSHelp(document) getStyle('a:visited') color ||\nnew __helpers CSSHelp(document) getStyle('a sub-item-link:visited') color\n);\n--seed--\n--seed-contents--\n```html\nStyled To-Do List\n```\n```css\n```\n--solutions--\n```html\nStyled To-Do List\nMy To-Do List\nExplore gaming keyboards\nStore link\nFinish the report\nRequest Access\nView Phone's Warranty\nView Receipts\nCheck Processor Specs\nView Model Number\n```\n```css\nbody {\nfont-family: Arial, sans-serif;\nbackground-color: #f0f0f0;\nmargin: 0;\npadding: 20px;\n} container {\nmax-width: 400px;\nmargin: 0 auto;\nbackground-color: #fff;\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0 0 10px rgba(0, 0, 0, 0 1);\n}\nh1 {\ntext-align: center;\ncolor: #333;\n} todo-list {\nlist-style-type: none;\npadding: 0;\n} todo-list li {\nmargin-bottom: 15px;\nline-height: 1 6;\npadding: 10px;\nbackground-color: #e5f1e5;\nborder-radius: 10px;\nposition: relative;\n}\na sub-item-link {\nmargin-left: 10px;\ntext-decoration: none;\n} sub-item-link:link {\ncolor: blue;\n} sub-item-link:visited {\ncolor: purple;\n} sub-item-link:hover {\ncolor: red;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8932,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-stylized-to-do-list\\66c051d13a6a20255a963695.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "c3ff003f93282200c81e4aeea7f62aa6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-stylized-to-do-list\\66c051d13a6a20255a963695.md",
    "source_type": "git_repo",
    "title": "Styled To-Do List",
    "content": "{ max-width: 400px; margin: 0 auto; background-color: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0, 0, 0, 0 1); } h1 { text-align: center; color: #333; } todo-list { list-style-type: none; padding: 0; } todo-list li { margin-bottom: 15px; line-height: 1 6; padding: 10px; background-color: #e5f1e5; border-radius: 10px; position: relative; } a sub-item-link { margin-left: 10px; text-decoration: none; } sub-item-link:link { color: blue; } sub-item-link:visited { color: purple; } sub-item-link:hover { color: red; }sub-item-link:focus {\noutline: 2px solid blue;\noutline-offset: 2px;\n} sub-item-link:active {\ncolor: green;\n} sub-item {\nlist-style-type: square;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8932,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-stylized-to-do-list\\66c051d13a6a20255a963695.md",
      "source_type": "git_repo"
    },
    "token_count": 229,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "38220c84eef028a5594be5bc2c12a590",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-survey-form\\587d78af367417b2b2512b03.md",
    "source_type": "git_repo",
    "title": "Survey Form",
    "content": "id: 587d78af367417b2b2512b03\ntitle: Build a Survey Form\nchallengeType: 25\ndashedName: build-a-survey-form\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a page title in an h1 element with an id of title You should have a short explanation in a p element with an id of description You should have a form element with an id of survey-form Inside the form element you should have a required input field to enter your name that has an id of name and a type of text Inside the form element you should have a required input field to enter your email that has an id of email If you enter an email that is not formatted correctly, you should see an HTML5 validation error Inside the form element you should have an input field to enter a number that has an id of number The number input should not accept non-numbers, either by preventing you from typing them or by showing an HTML5 validation error (depending on your browser) If you enter numbers outside the range of the number input, which are defined by the min and max attributes, you should see an HTML5 validation error For the name, email, and number input fields, you should have corresponding label elements in the form, that describe the purpose of each field with the following ids: name-label, email-label, and number-label For the name, email, and number input fields, you should have a placeholder text that gives a description or instructions for each field Inside the form element, you should have a select dropdown element with an id of dropdown and at least two options to choose from Inside the form element, you can select an option from a group of at least two radio buttons that are grouped using the name attribute Inside the form element, you can select several fields from a series of checkboxes, each of which must have a value attribute Inside the form element, you should have a textarea for additional comments Inside the form element, you should have a button with id of submit to submit all the inputs --hints--\nYou should have an h1 element with an id of title js\nconst el = document getElementById('title');\nassert isNotNull(el);\nassert strictEqual(el tagName, 'H1');\nYour #title should not be empty js\nconst el = document getElementById('title');\nassert isNotNull(el);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17429,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-survey-form\\587d78af367417b2b2512b03.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "735bde43be40d7c1142ae8e1a6d5b6d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-survey-form\\587d78af367417b2b2512b03.md",
    "source_type": "git_repo",
    "title": "Survey Form",
    "content": "of which must have a value attribute Inside the form element, you should have a textarea for additional comments Inside the form element, you should have a button with id of submit to submit all the inputs --hints-- You should have an h1 element with an id of title js const el = document getElementById('title'); assert isNotNull(el); assert strictEqual(el tagName, 'H1'); Your #title should not be empty js const el = document getElementById('title'); assert isNotNull(el); assertisAbove(el innerText length, 0);\nYou should have a p element with an id of description js\nconst el = document getElementById('description');\nassert isNotNull(el);\nassert strictEqual(el tagName, 'P');\nYour #description should not be empty js\nconst el = document getElementById('description');\nassert isNotNull(el);\nassert isAbove(el innerText length, 0);\nYou should have a form element with an id of survey-form js\nconst el = document getElementById('survey-form');\nassert isNotNull(el);\nassert strictEqual(el tagName, 'FORM');\nYou should have an input element with an id of name js\nconst el = document getElementById('name');\nassert isNotNull(el);\nassert strictEqual(el tagName, 'INPUT');\nYour #name should have a type of text js\nconst el = document getElementById('name');\nassert isNotNull(el);\nassert strictEqual(el type, 'text');\nYour #name should require input js\nconst el = document getElementById('name');\nassert isNotNull(el);\nassert isTrue(el required);\nYour #name should be a descendant of #survey-form js\nconst el = document querySelector('#survey-form #name');\nassert isNotNull(el);\nYou should have an input element with an id of email js\nconst el = document getElementById('email');\nassert isNotNull(el);\nassert strictEqual(el tagName, 'INPUT');\nYour #email should have a type of email js\nconst el = document getElementById('email');\nassert isNotNull(el);\nassert strictEqual(el type, 'email');\nYour #email should require input js\nconst el = document getElementById('email');\nassert isNotNull(el);\nassert isTrue(el required);\nYour #email should be a descendant of #survey-form js\nconst el = document querySelector('#survey-form #email');\nassert isNotNull(el);\nYou should have an input element with an id of number js\nconst el = document getElementById('number');\nassert isNotNull(el);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17429,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-survey-form\\587d78af367417b2b2512b03.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "22a9e415225083340891f0b1f62724c7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-survey-form\\587d78af367417b2b2512b03.md",
    "source_type": "git_repo",
    "title": "Survey Form",
    "content": "strictEqual(el tagName, 'INPUT'); Your #email should have a type of email js const el = document getElementById('email'); assert isNotNull(el); assert strictEqual(el type, 'email'); Your #email should require input js const el = document getElementById('email'); assert isNotNull(el); assert isTrue(el required); Your #email should be a descendant of #survey-form js const el = document querySelector('#survey-form #email'); assert isNotNull(el); You should have an input element with an id of number js const el = document getElementById('number'); assert isNotNull(el); assertstrictEqual(el tagName, 'INPUT');\nYour #number should be a descendant of #survey-form js\nconst el = document querySelector('#survey-form #number');\nassert isNotNull(el);\nYour #number should have a type of number js\nconst el = document getElementById('number');\nassert isNotNull(el);\nassert strictEqual(el type, 'number');\nYour #number should have a min attribute with a numeric value js\nconst el = document getElementById('number');\nassert isNotNull(el);\nassert isNotEmpty(el min);\nassert isTrue(isFinite(el min));\nYour #number should have a max attribute with a numeric value js\nconst el = document getElementById('number');\nassert isNotNull(el);\nassert isNotEmpty(el max);\nassert isTrue(isFinite(el max));\nYou should have a label element with an id of name-label js\nconst el = document getElementById('name-label');\nassert isNotNull(el);\nassert strictEqual(el tagName, 'LABEL');\nYou should have a label element with an id of email-label js\nconst el = document getElementById('email-label');\nassert isNotNull(el);\nassert strictEqual(el tagName, 'LABEL');\nYou should have a label element with an id of number-label js\nconst el = document getElementById('number-label');\nassert isNotNull(el);\nassert strictEqual(el tagName, 'LABEL');\nYour #name-label should contain text that describes the input js\nconst el = document getElementById('name-label');\nassert isNotNull(el);\nassert isAbove(el innerText length, 0);\nYour #email-label should contain text that describes the input js\nconst el = document getElementById('email-label');\nassert isNotNull(el);\nassert isAbove(el innerText length, 0);\nYour #number-label should contain text that describes the input js\nconst el = document getElementById('number-label');\nassert isNotNull(el);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17429,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-survey-form\\587d78af367417b2b2512b03.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "c17db2f6d46be997bb27a6b789804569",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-survey-form\\587d78af367417b2b2512b03.md",
    "source_type": "git_repo",
    "title": "Survey Form",
    "content": "of number-label js const el = document getElementById('number-label'); assert isNotNull(el); assert strictEqual(el tagName, 'LABEL'); Your #name-label should contain text that describes the input js const el = document getElementById('name-label'); assert isNotNull(el); assert isAbove(el innerText length, 0); Your #email-label should contain text that describes the input js const el = document getElementById('email-label'); assert isNotNull(el); assert isAbove(el innerText length, 0); Your #number-label should contain text that describes the input js const el = document getElementById('number-label'); assert isNotNull(el); assertisAbove(el innerText length, 0);\nYour #name-label should be a descendant of #survey-form js\nconst el = document querySelector('#survey-form #name-label');\nassert isNotNull(el);\nYour #email-label should be a descendant of #survey-form js\nconst el = document querySelector('#survey-form #email-label');\nassert isNotNull(el);\nYour #number-label should be a descendant of #survey-form js\nconst el = document querySelector('#survey-form #number-label');\nassert isNotNull(el);\nYour #name should have a placeholder attribute and value js\nconst el = document getElementById('name');\nassert isNotNull(el);\nassert isNotNull(el placeholder);\nassert isAbove(el placeholder length, 0);\nYour #email should have a placeholder attribute and value js\nconst el = document getElementById('email');\nassert isNotNull(el);\nassert isNotNull(el placeholder);\nassert isAbove(el placeholder length, 0);\nYour #number should have a placeholder attribute and value js\nconst el = document getElementById('number');\nassert isNotNull(el);\nassert isNotNull(el placeholder);\nassert isAbove(el placeholder length, 0);\nYou should have a select field with an id of dropdown js\nconst el = document getElementById('dropdown');\nassert isNotNull(el);\nassert strictEqual(el tagName, 'SELECT');\nYour #dropdown should have at least two selectable (not disabled) option elements js\nconst els = document querySelectorAll('#dropdown option:not([disabled])');\nassert isAtLeast(els length, 2);\nYour #dropdown should be a descendant of #survey-form js\nconst el = document querySelector('#survey-form #dropdown');\nassert isNotNull(el);\nYou should have at least two input elements with a type of radio (radio buttons) js\nconst els = document querySelectorAll('input[type=\"radio\"]');\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17429,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-survey-form\\587d78af367417b2b2512b03.md",
      "source_type": "git_repo"
    },
    "token_count": 506,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "f706209a2c8812127d918b4e4d7868a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-survey-form\\587d78af367417b2b2512b03.md",
    "source_type": "git_repo",
    "title": "Survey Form",
    "content": "of dropdown js const el = document getElementById('dropdown'); assert isNotNull(el); assert strictEqual(el tagName, 'SELECT'); Your #dropdown should have at least two selectable (not disabled) option elements js const els = document querySelectorAll('#dropdown option:not([disabled])'); assert isAtLeast(els length, 2); Your #dropdown should be a descendant of #survey-form js const el = document querySelector('#survey-form #dropdown'); assert isNotNull(el); You should have at least two input elements with a type of radio (radio buttons) js const els = document querySelectorAll('input[type=\"radio\"]'); assertisAtLeast(els length, 2);\nYou should have at least two radio buttons that are descendants of #survey-form js\nconst els = document querySelectorAll('#survey-form input[type=\"radio\"]');\nassert isAtLeast(els length, 2);\nAll your radio buttons should have a value attribute and value js\nconst els1 = document querySelectorAll('input[type=\"radio\"]');\nconst els2 = document querySelectorAll(\n'input[type=\"radio\"][value=\"\"], input[type=\"radio\"]:not([value])'\n);\nassert isAbove(els1 length, 0);\nassert lengthOf(els2, 0);\nAll your radio buttons should have a name attribute and value js\nconst els1 = document querySelectorAll('input[type=\"radio\"]');\nconst els2 = document querySelectorAll(\n'input[type=\"radio\"][name=\"\"], input[type=\"radio\"]:not([name])'\n);\nassert isAbove(els1 length, 0);\nassert lengthOf(els2, 0);\nEvery radio button group should have at least 2 radio buttons ```js\nconst radioButtons = document querySelectorAll('input[type=\"radio\"]');\nconst groups = {};\nif (radioButtons) {\nradioButtons forEach(el => {\nif ( groups[el name]) groups[el name] = [];\ngroups[el name] push(el);\n});\n}\nconst groupKeys = Object keys(groups);\ngroupKeys forEach(key => {\nif (groups[key] length < 2) assert fail();\n});\nassert isAbove(groupKeys length, 0);\n```\nYou should have at least two input elements with a type of checkbox (checkboxes) that are descendants of #survey-form js\nconst els = document querySelectorAll('#survey-form input[type=\"checkbox\"]');\nassert isAtLeast(els",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17429,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-survey-form\\587d78af367417b2b2512b03.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "03ce6a55596834ec8d32f5acdacb59e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-survey-form\\587d78af367417b2b2512b03.md",
    "source_type": "git_repo",
    "title": "Survey Form",
    "content": "document querySelectorAll('input[type=\"radio\"]'); const groups = {}; if (radioButtons) { radioButtons forEach(el => { if ( groups[el name]) groups[el name] = []; groups[el name] push(el); }); } const groupKeys = Object keys(groups); groupKeys forEach(key => { if (groups[key] length < 2) assert fail(); }); assert isAbove(groupKeys length, 0); ``` You should have at least two input elements with a type of checkbox (checkboxes) that are descendants of #survey-form js const els = document querySelectorAll('#survey-form input[type=\"checkbox\"]'); assert isAtLeast(elslength, 2);\nAll your checkboxes inside #survey-form should have a value attribute and value js\nconst els1 = document querySelectorAll('#survey-form input[type=\"checkbox\"]');\nconst els2 = document querySelectorAll(\n'#survey-form input[type=\"checkbox\"][value=\"\"], #survey-form input[type=\"checkbox\"]:not([value])'\n);\nassert isAbove(els1 length, 0);\nassert lengthOf(els2, 0);\nYou should have at least one textarea element that is a descendant of #survey-form js\nconst el = document querySelector('#survey-form textarea');\nassert isNotNull(el);\nYou should have an input or button element with an id of submit js\nconst el = document getElementById('submit');\nassert isNotNull(el);\nassert isTrue(el tagName === 'INPUT' || el tagName === 'BUTTON');\nYour #submit should have a type of submit js\nconst el = document getElementById('submit');\nassert isNotNull(el);\nassert strictEqual(el type, 'submit');\nYour #submit should be a descendant of #survey-form js\nconst el = document querySelector('#survey-form #submit');\nassert isNotNull(el);\n--seed--\n--seed-contents--\n```html\nSurvey Form\n```\n--solutions--\n```html\nfreeCodeCamp Survey Form\nThank you for taking the time to help us improve the platform\nName\nEmail\nAge(optional)\nWhich option best describes your current role Select current role\nStudent\nFull Time Job\nFull Time Learner\nPrefer not to say\nOther\nWould you recommend freeCodeCamp to a friend Definitely\nMaybe\nNot sure\nWhat is your favorite feature of freeCodeCamp Select an option\nChallenges\nProjects\nCommunity\nOpen Source\nWhat would you like to see improved",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17429,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-survey-form\\587d78af367417b2b2512b03.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "253d9276c98acfedd80fb9b2f44a843f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-survey-form\\587d78af367417b2b2512b03.md",
    "source_type": "git_repo",
    "title": "Survey Form",
    "content": "``` --solutions-- ```html freeCodeCamp Survey Form Thank you for taking the time to help us improve the platform Name Email Age(optional) Which option best describes your current role Select current role Student Full Time Job Full Time Learner Prefer not to say Other Would you recommend freeCodeCamp to a friend Definitely Maybe Not sure What is your favorite feature of freeCodeCamp Select an option Challenges Projects Community Open Source What would you like to see improved(Check all that apply)\nFront-end Projects\nBack-end Projects\nData Visualization\nChallenges\nOpen Source Community\nGitter help rooms\nVideos\nCity Meetups\nWiki\nForum\nAdditional Courses\nAny comments or suggestions Submit\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17429,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-survey-form\\587d78af367417b2b2512b03.md",
      "source_type": "git_repo"
    },
    "token_count": 138,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "6aec5c3ccae947e527cb7d2a8b661ff2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
    "source_type": "git_repo",
    "title": "Sorting Visualizer",
    "content": "id: 6716249b5405164036fd0b0d\ntitle: Build a Sorting Visualizer\nchallengeType: 25\ndashedName: build-a-sorting-visualizer\ndemoType: onClick\n--description--\nThe Bubble Sort algorithm sorts a sequence of integers by comparing couples of adjacent elements starting from the beginning of the sequence If the first element is greater than the second one, it swaps them Then, it proceeds with the following couple When the last element of the sequence is reached, it starts a new cycle from the beginning of the sequence, and repeats the process until the elements are sorted The algorithm stops after one cycle completes with no swaps For this lab, you have been provided with all the HTML and CSS You will use JavaScript to complete the Bubble Sort Visualizer so that it visualizes each step needed by the Bubble Sort algorithm to sort an array of five integers Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a function named generateElement that returns a random integer between 1 and 100, inclusive You should have a function named generateArray that uses the generateElement function to return an array containing five random integers You should have a function named generateContainer that creates and returns an empty div element You should have a function named fillArrContainer that takes an HTML element as the first argument and an array as the second argument The fillArrContainer function should fill the element passed as the first argument to the function with five span elements with the text of an integer from the array passed as the second argument to the function You should have a function named isOrdered that takes two integers and returns a boolean indicating if the first integer is less than or equal to the second You should have a function named swapElements that takes an array of integers and a numeric index The swapElements function should modify the array in place by swapping the element at the passed index and the following element if isOrdered returns false You should have a function named highlightCurrentEls that takes an HTML element and a numeric index The highlightCurrentEls function should set the border of the given element's child at the given index, and the child immediately after the index, to have a dashed style, a red color, and a width of your choice When you click #generate-btn you should use the fillArrContainer function to fill #starting-array with five span elements, each with a random number as its text",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18748,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 12
  },
  {
    "id": "c7e651fe6d5d11986df29158f322c50b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
    "source_type": "git_repo",
    "title": "Sorting Visualizer",
    "content": "have a function named highlightCurrentEls that takes an HTML element and a numeric index The highlightCurrentEls function should set the border of the given element's child at the given index, and the child immediately after the index, to have a dashed style, a red color, and a width of your choice When you click #generate-btn you should use the fillArrContainer function to fill #starting-array with five span elements, each with a random number as its textIf present, other elements should be removed from #array-container You should implement the Bubble Sort algorithm so that after you click #sort-btn, #array-container contains a div element for each of the steps required by the Bubble Sort algorithm to sort the starting array, including the div representing the starting array and a div representing the sorted array The functions you have created so far can be useful here Each div should contain five span elements, representing the array in its current state of being sorted After you click #sort-btn, #starting-array should represent the starting step with the initial array and the first two integers highlighted For each sorting step, you should use highlightCurrentEls to highlight the two numbers that are being compared, and swap them in the next step by using swapElements --hints--\nYou should have a function named generateElement js\nassert isFunction(generateElement);\nYour generateElement function should return a random integer between 1 and 100 inclusive js\nconst randomMocker = new __helpers RandomMocker();\nrandomMocker mock();\ntry {\nassert strictEqual(generateElement(), 26);\nassert strictEqual(generateElement(), 9);\n} finally {\nrandomMocker restore();\n}\nYou should have a function named generateArray js\nassert isFunction(generateArray)\nYour generateArray function should make use of the generateElement function js\nlet flag = false;\nconst temp = generateElement;\ngenerateElement = () => flag = true;\ntry {\ngenerateArray();\nassert isTrue(flag);\n} finally {\ngenerateElement = temp;\n}\nYour generateArray function should return an array containing five random integers between 1 and 100 js\nconst randomMocker = new __helpers RandomMocker();\nrandomMocker mock();\ntry {\nassert deepEqual(generateArray(), [26, 9, 58, 23, 38])\n} finally {\nrandomMocker restore();\n}\nYou should have a function named generateContainer js\nassert isFunction(generateContainer);\nYour generateContainer function should return an empty div element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18748,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 12
  },
  {
    "id": "a6e02740bc64d41e12a2a1d190bff492",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
    "source_type": "git_repo",
    "title": "Sorting Visualizer",
    "content": "= () => flag = true; try { generateArray(); assert isTrue(flag); } finally { generateElement = temp; } Your generateArray function should return an array containing five random integers between 1 and 100 js const randomMocker = new __helpers RandomMocker(); randomMocker mock(); try { assert deepEqual(generateArray(), [26, 9, 58, 23, 38]) } finally { randomMocker restore(); } You should have a function named generateContainer js assert isFunction(generateContainer); Your generateContainer function should return an empty div elementjs\nconst div = generateContainer();\nassert equal(div tagName, \"DIV\");\nassert isEmpty(div children);\nYou should have a function named fillArrContainer js\nassert isFunction(fillArrContainer);\nYour fillArrContainer() function should fill the element passed as the first argument to the function with five span elements with the text of an integer from the array passed as the second argument to the function js\nconst testDiv = document createElement(\"div\");\nconst testArr = [15, 98, 17, 5, 63]\nfillArrContainer(testDiv, testArr);\nconst children = testDiv children;\nassert lengthOf(children, 5);\nArray from(children) forEach((el, i) => {\nassert equal(el tagName, \"SPAN\");\nassert equal(el innerText trim(), testArr[i])\n})\nYou should have a function named isOrdered js\nassert isFunction(isOrdered);\nYour isOrdered function should take two integers and should return a boolean indicating if the first integer is less than or equal to the second js\nassert lengthOf(isOrdered, 2);\nassert isTrue(isOrdered(2, 60));\nassert isFalse(isOrdered(10, 3));\nassert isTrue(isOrdered(5, 5));\nYou should have a function named swapElements js\nassert isFunction(swapElements);\nYour swapElements function take an array of integers and a numeric index as arguments It should modify the array passed in place by swapping the element at the given index and the following element if the first element is greater than the second js\nconst testArr = [22, 4, 87, 47, 33];\nswapElements(testArr, 0);\nassert deepEqual(testArr, [4, 22, 87, 47, 33]);\nswapElements(testArr, 1);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18748,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 2,
    "total_chunks": 12
  },
  {
    "id": "a8a2d4dc9f452ad12c135a8cb2ceb380",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
    "source_type": "git_repo",
    "title": "Sorting Visualizer",
    "content": "isTrue(isOrdered(5, 5)); You should have a function named swapElements js assert isFunction(swapElements); Your swapElements function take an array of integers and a numeric index as arguments It should modify the array passed in place by swapping the element at the given index and the following element if the first element is greater than the second js const testArr = [22, 4, 87, 47, 33]; swapElements(testArr, 0); assert deepEqual(testArr, [4, 22, 87, 47, 33]); swapElements(testArr, 1); assertdeepEqual(testArr, [4, 22, 87, 47, 33]);\nswapElements(testArr, 2);\nassert deepEqual(testArr, [4, 22, 47, 87, 33]);\nswapElements(testArr, 3);\nassert deepEqual(testArr, [4, 22, 47, 33, 87]);\nYou should have a function named highlightCurrentEls js\nassert isFunction(highlightCurrentEls);\nYour highlightCurrentEls function should give the descendants of the specified element, located at the given index and the next index, a border that is dashed, red, and set to a width of your choice ```js\nconst testDiv = document createElement(\"div\");\ndocument querySelector(\"body\") appendChild(testDiv)\nfor (let i = 0; i < 5; i++) {\ntestDiv appendChild(document createElement(\"span\"));\n}\nconst redBorderRegex = /dashed (rgb(255,\\s0,\\s0)|#FF0000|#F00|hsl(0,\\s100%,\\s50%))/;\nconst revertBorder = () => {\nfor (const el of children) {\nel style border = \"revert\";\n}\n}\nconst children = testDiv children;\nfor (let i = 0; i < 3; i++) {\nhighlightCurrentEls(testDiv, i);\nfor (let j = 0; j < 5; j++) {\nlet b = getComputedStyle(children[j]) border;\nif (j == i || j == i + 1) {\nassert match(b, redBorderRegex);\nassert isAbove(parseFloat(b), 0);\n} else {\nassert notMatch(b, redBorderRegex);\n}\n}\nrevertBorder();\n}\ntestDiv",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18748,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 3,
    "total_chunks": 12
  },
  {
    "id": "0315b435e899866788f8286043e251f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
    "source_type": "git_repo",
    "title": "Sorting Visualizer",
    "content": "() => { for (const el of children) { el style border = \"revert\"; } } const children = testDiv children; for (let i = 0; i < 3; i++) { highlightCurrentEls(testDiv, i); for (let j = 0; j < 5; j++) { let b = getComputedStyle(children[j]) border; if (j == i || j == i + 1) { assert match(b, redBorderRegex); assert isAbove(parseFloat(b), 0); } else { assert notMatch(b, redBorderRegex); } } revertBorder(); } testDivremove();\n```\nWhen you click #generate-btn you should fill #starting-array with five span elements, each with a random number between 1 and 100 as its text js\nconst genBtn = document querySelector(\"#generate-btn\");\ngenBtn click();\nconst children = document querySelector(\"#starting-array\") querySelectorAll(\"span\");\nassert lengthOf(children, 5);\nArray from(children) forEach(el => {\nassert equal(el tagName, \"SPAN\");\nconst num = Number(el innerText trim());\nassert isAtMost(num, 100);\nassert isAtLeast(num, 1);\n})\nWhen #starting-array already contains a generated array, or #array-container contains the sorted array, clicking the #generate-btn should remove other elements in the #array-container, leaving only #starting-array with newly generated numbers ```js\nconst genBtn = document querySelector(\"#generate-btn\");\nconst sortBtn = document querySelector(\"#sort-btn\");\ngenBtn dispatchEvent(new Event(\"click\"));\nconst prevNumbers = Array from(document querySelector(\"#starting-array\") querySelectorAll(\"span\")) map(el => Number(el innerText trim()));\nsortBtn dispatchEvent(new Event(\"click\"));\ngenBtn dispatchEvent(new Event(\"click\"));\nconst container = document querySelector(\"#array-container\");\nassert lengthOf(container children, 1);\nconst numbers = Array from(document querySelector(\"#starting-array\") querySelectorAll(\"span\")) map(el => Number(el innerText trim()));\nassert lengthOf(numbers, 5);\nassert isTrue(prevNumbers some((num, index) => num == numbers[index]))\n```\nAfter you click #sort-btn, #array-container should contain as many div elements as the steps required by the Bubble Sort algorithm to sort the starting array, including the div representing the starting array and a div representing the sorted array js\nconst genBtn = document querySelector(\"#generate-btn\");\nconst sortBtn = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18748,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 4,
    "total_chunks": 12
  },
  {
    "id": "a28471c2feaf6feba870db5309e74ae1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
    "source_type": "git_repo",
    "title": "Sorting Visualizer",
    "content": "lengthOf(container children, 1); const numbers = Array from(document querySelector(\"#starting-array\") querySelectorAll(\"span\")) map(el => Number(el innerText trim())); assert lengthOf(numbers, 5); assert isTrue(prevNumbers some((num, index) => num == numbers[index])) ``` After you click #sort-btn, #array-container should contain as many div elements as the steps required by the Bubble Sort algorithm to sort the starting array, including the div representing the starting array and a div representing the sorted array js const genBtn = document querySelector(\"#generate-btn\"); const sortBtn = documentquerySelector(\"#sort-btn\");\n// using randomMocker to be sure that the starting array requires 13 steps to be sorted\nconst randomMocker = new __helpers RandomMocker();\nrandomMocker mock();\ntry {\ngenBtn dispatchEvent(new Event(\"click\"));\nsortBtn dispatchEvent(new Event(\"click\"));\nconst container = document querySelector(\"#array-container\");\nassert lengthOf(container children, 13)\nArray from(container children) forEach(el => {assert equal(el tagName, \"DIV\")})\n} finally {\nrandomMocker restore();\n}\nAfter you click #sort-btn, each div within #array-container should contain five span, each with a number as its text, and arranged to represent the steps required by Bubble Sort algorithm to sort the starting array js\nconst finalArr = [9, 23, 26, 38, 58];\nconst arrays = [\n[26, 9, 58, 23, 38],\n[9, 26, 58, 23, 38],\n[9, 26, 58, 23, 38],\n[9, 26, 23, 58, 38],\n[9, 26, 23, 38, 58],\n[9, 26, 23, 38, 58],\nfinalArr,\nfinalArr,\nfinalArr,\nfinalArr,\nfinalArr,\nfinalArr,\nfinalArr\n]\nconst genBtn = document querySelector(\"#generate-btn\");\nconst sortBtn = document querySelector(\"#sort-btn\");\nconst randomMocker = new __helpers RandomMocker();\nrandomMocker mock();\ntry {\ngenBtn dispatchEvent(new Event(\"click\"));\nsortBtn dispatchEvent(new Event(\"click\"));\nconst container = document querySelector(\"#array-container\");\nassert isNotEmpty(container children);\nArray from(container children) forEach((el, i) => {\nArray from(el children)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18748,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 5,
    "total_chunks": 12
  },
  {
    "id": "ebb702a7e17bb5af66028759da678b14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
    "source_type": "git_repo",
    "title": "Sorting Visualizer",
    "content": "26, 58, 23, 38], [9, 26, 58, 23, 38], [9, 26, 23, 58, 38], [9, 26, 23, 38, 58], [9, 26, 23, 38, 58], finalArr, finalArr, finalArr, finalArr, finalArr, finalArr, finalArr ] const genBtn = document querySelector(\"#generate-btn\"); const sortBtn = document querySelector(\"#sort-btn\"); const randomMocker = new __helpers RandomMocker(); randomMocker mock(); try { genBtn dispatchEvent(new Event(\"click\")); sortBtn dispatchEvent(new Event(\"click\")); const container = document querySelector(\"#array-container\"); assert isNotEmpty(container children); Array from(container children) forEach((el, i) => { Array from(el children)forEach((j, k) => {\nassert strictEqual(Number(j innerText trim()), arrays[i][k])\n})\n})\n} finally {\nrandomMocker restore();\n}\nWhen you click the #sort-btn, you should make use of the highlightCurrentEls function to highlight the elements being compared in each step js\nconst sortBtn = document querySelector(\"#sort-btn\");\nlet flag = false;\nconst temp = highlightCurrentEls;\nhighlightCurrentEls = () => flag = true;\ntry {\nsortBtn dispatchEvent(new Event(\"click\"));\nassert isTrue(flag);\n} finally {\nhighlightCurrentEls = temp;\n}\nAfter you click #sort-btn, #starting-array should represent the starting step with the initial array and the first two integers highlighted using highlightCurrentEls js\nconst genBtn = document querySelector(\"#generate-btn\");\nconst sortBtn = document querySelector(\"#sort-btn\");\ngenBtn dispatchEvent(new Event(\"click\"));\nsortBtn dispatchEvent(new Event(\"click\"));\nconst firstContainer = document querySelector(\"#starting-array\");\nconst children = firstContainer children\nconst redBorderRegex = /dashed (rgb\\(255,\\s*0,\\s*0\\)|#FF0000|hsl\\(0,\\s*100%,\\s*50%\\))/;\nassert match(getComputedStyle(children[0]) border, redBorderRegex);\nassert match(getComputedStyle(children[1])",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18748,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 6,
    "total_chunks": 12
  },
  {
    "id": "fad3f786b4ef3384239f9253b80db032",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
    "source_type": "git_repo",
    "title": "Sorting Visualizer",
    "content": "= true; try { sortBtn dispatchEvent(new Event(\"click\")); assert isTrue(flag); } finally { highlightCurrentEls = temp; } After you click #sort-btn, #starting-array should represent the starting step with the initial array and the first two integers highlighted using highlightCurrentEls js const genBtn = document querySelector(\"#generate-btn\"); const sortBtn = document querySelector(\"#sort-btn\"); genBtn dispatchEvent(new Event(\"click\")); sortBtn dispatchEvent(new Event(\"click\")); const firstContainer = document querySelector(\"#starting-array\"); const children = firstContainer children const redBorderRegex = /dashed (rgb\\(255,\\s*0,\\s*0\\)|#FF0000|hsl\\(0,\\s*100%,\\s*50%\\))/; assert match(getComputedStyle(children[0]) border, redBorderRegex); assert match(getComputedStyle(children[1])border, redBorderRegex);\n--seed--\n--seed-contents--\n```html\nSorting Visualizer\nGenerate Array\nSort Array\n```\n```css\n* {\nbox-sizing: border-box;\n}\nmain {\nheight: 100vh;\ndisplay: flex;\njustify-content: center;\nflex-direction: column;\nalign-items: center;\n}\narray-container {\nmax-height: 95vh;\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\ngap: 2px;\n}\narray-container>div {\nmin-width: 8rem;\nheight: 2rem;\nbox-shadow: rgba(50, 50, 93, 0 25) 0px 2px 5px -1px, rgba(0, 0, 0, 0 3) 0px 1px 3px -1px;\nborder-radius: 10px;\nmargin-bottom: 0 2rem;\nborder: 2px solid darkgray;\ndisplay: flex;\njustify-content: space-evenly;\nalign-items: center;\n}\nstarting-array {\nborder: 4px solid darkblue important;\n}\nbtn-container {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\npadding: 2px;\nmargin: 5px;\n}\nspan {\nborder-radius: 2px;\npadding: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18748,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 7,
    "total_chunks": 12
  },
  {
    "id": "f3c69771f37451037f7c9c8274277b4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
    "source_type": "git_repo",
    "title": "Sorting Visualizer",
    "content": "flex-direction: column; flex-wrap: wrap; gap: 2px; } array-container>div { min-width: 8rem; height: 2rem; box-shadow: rgba(50, 50, 93, 0 25) 0px 2px 5px -1px, rgba(0, 0, 0, 0 3) 0px 1px 3px -1px; border-radius: 10px; margin-bottom: 0 2rem; border: 2px solid darkgray; display: flex; justify-content: space-evenly; align-items: center; } starting-array { border: 4px solid darkblue important; } btn-container { display: flex; justify-content: space-around; } button { padding: 2px; margin: 5px; } span { border-radius: 2px; padding: 05px;\nmargin: 0\n}\n@media (min-width: 430px) {\n#array-container>div {\nmin-width: 12rem;\n}\nspan {\npadding: 1px;\nmargin: 1px;\n}\n}\n```\n```js\n```\n--solutions--\n```html\nSorting Visualizer\nGenerate Array\nSort Array\n```\n```css\n* {\nbox-sizing: border-box;\n}\nmain {\nheight: 100vh;\ndisplay: flex;\njustify-content: center;\nflex-direction: column;\nalign-items: center;\n}\narray-container {\nmax-height: 95vh;\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\ngap: 2px;\n}\narray-container>div {\nmin-width: 8rem;\nheight: 2rem;\nbox-shadow: rgba(50, 50, 93, 0 25) 0px 2px 5px -1px, rgba(0, 0, 0, 0 3) 0px 1px 3px -1px;\nborder-radius: 10px;\nmargin-bottom: 0 2rem;\nborder: 2px solid darkgray;\ndisplay: flex;\njustify-content: space-evenly;\nalign-items: center;\n}\nstarting-array {\nborder: 4px solid darkblue",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18748,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 8,
    "total_chunks": 12
  },
  {
    "id": "9120c0fc4aae6ade489d89375698cd67",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
    "source_type": "git_repo",
    "title": "Sorting Visualizer",
    "content": "box-sizing: border-box; } main { height: 100vh; display: flex; justify-content: center; flex-direction: column; align-items: center; } array-container { max-height: 95vh; display: flex; flex-direction: column; flex-wrap: wrap; gap: 2px; } array-container>div { min-width: 8rem; height: 2rem; box-shadow: rgba(50, 50, 93, 0 25) 0px 2px 5px -1px, rgba(0, 0, 0, 0 3) 0px 1px 3px -1px; border-radius: 10px; margin-bottom: 0 2rem; border: 2px solid darkgray; display: flex; justify-content: space-evenly; align-items: center; } starting-array { border: 4px solid darkblueimportant;\n}\nbtn-container {\ndisplay: flex;\njustify-content: space-around;\n}\nbutton {\npadding: 2px;\nmargin: 5px;\n}\nsort-btn {\ndisplay: none\n}\nspan {\nborder-radius: 2px;\npadding: 0 5px;\nmargin: 0\n}\n@media (min-width: 430px) {\n#array-container>div {\nmin-width: 12rem;\n}\nspan {\npadding: 1px;\nmargin: 1px;\n}\n}\n```\n``js\nconst arrayContainer = document getElementById(\"array-container\");\nconst generateArrayBtn = document getElementById(\"generate-btn\");\nconst sortArrayBtn = document getElementById(\"sort-btn\");\nconst arrayLength = 5;\nconst minVal = 1;\nconst maxVal = 100;\nconst isStart = () => arrayContainer children length === 1;\nconst clearArrayContainer = () => { arrayContainer innerHTML = '<div id=\"starting-array\"></div>' };\nconst showSortBtn = () => {sortArrayBtn style display = \"inline-block\"};\nconst hideSortBtn = () => {sortArrayBtn style display = \"none\"};\nconst generateElement = () => Math floor(Math random() * maxVal + minVal);\nconst generateArray = () => Array from({ length: arrayLength }, generateElement);\nconst fillArrContainer = (container, arr) => {\ncontainer innerHTML = \"\";\narr forEach(i => {\nconst el = document createElement(\"span\");\nel innerText = i;\nel",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18748,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 9,
    "total_chunks": 12
  },
  {
    "id": "3044bf735361f4fb111f337d320d3627",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
    "source_type": "git_repo",
    "title": "Sorting Visualizer",
    "content": "=> { arrayContainer innerHTML = '<div id=\"starting-array\"></div>' }; const showSortBtn = () => {sortArrayBtn style display = \"inline-block\"}; const hideSortBtn = () => {sortArrayBtn style display = \"none\"}; const generateElement = () => Math floor(Math random() * maxVal + minVal); const generateArray = () => Array from({ length: arrayLength }, generateElement); const fillArrContainer = (container, arr) => { container innerHTML = \"\"; arr forEach(i => { const el = document createElement(\"span\"); el innerText = i; elid =number-${i}`\ncontainer appendChild(el);\n})\n}\nconst isOrdered = (el1, el2) => el1 <= el2;\nconst swapElements = (arr, n = 0) => {\nif (n < arr length - 1 && isOrdered(arr[n], arr[n + 1])) {\nconst temp = arr[n];\narr[n] = arr[n + 1];\narr[n + 1] = temp;\n}\n}\nconst getLastChildren = () => arrayContainer lastElementChild;\nconst getLastArr = () => {\nconst els = Array from(getLastChildren() children);\nconst arr = els map(el => Number(el id replace(\"number-\", \"\")));\nreturn arr;\n}\nconst generateContainer = () => {\nconst container = document createElement(\"div\");\narrayContainer appendChild(container);\nreturn container;\n}\nconst highlightCurrentEls = (container, n = 0) => {\nconst children = container children;\nchildren[n] style border = \"2px dashed red\";\nchildren[n + 1] style border = \"2px dashed red\";\n}\nconst highlightSorted = () => {\ngetLastChildren() style border = \"4px solid green\";\n}\nconst bubbleSort = () => {\nlet swapped = true;\nwhile (swapped) {\nconst startingArr = getLastArr();\nstartingArr forEach((_, i) => {\nif (i + 1 < arrayLength) {\nhighlightCurrentEls(getLastChildren(), i);\nconst arr = getLastArr();\nswapElements(arr, i);\nfillArrContainer(generateContainer(), arr);\n}\n})\nconst lastArr = getLastArr()\nif (startingArr every((el, i) => el === lastArr[i])) swapped = false;\n}\n}\ngenerateArrayBtn addEventListener(\"click\", () => {\nif ( isStart()) {\nclearArrayContainer();\n}\nfillArrContainer(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18748,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 10,
    "total_chunks": 12
  },
  {
    "id": "a84fc3a31cca1a4568289515cf93722a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
    "source_type": "git_repo",
    "title": "Sorting Visualizer",
    "content": "border = \"4px solid green\"; } const bubbleSort = () => { let swapped = true; while (swapped) { const startingArr = getLastArr(); startingArr forEach((_, i) => { if (i + 1 < arrayLength) { highlightCurrentEls(getLastChildren(), i); const arr = getLastArr(); swapElements(arr, i); fillArrContainer(generateContainer(), arr); } }) const lastArr = getLastArr() if (startingArr every((el, i) => el === lastArr[i])) swapped = false; } } generateArrayBtn addEventListener(\"click\", () => { if ( isStart()) { clearArrayContainer(); } fillArrContainer(documentgetElementById(\"starting-array\"), generateArray());\nshowSortBtn();\n});\nsortArrayBtn addEventListener(\"click\", () => {\nbubbleSort();\nhighlightSorted();\nhideSortBtn();\n})\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 18748,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-sorting-visualizer\\6716249b5405164036fd0b0d.md",
      "source_type": "git_repo"
    },
    "token_count": 180,
    "chunk_index": 11,
    "total_chunks": 12
  },
  {
    "id": "8e3d16ce89b4f1ceb4b0118435c8d426",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
    "source_type": "git_repo",
    "title": "Technical Documentation Page",
    "content": "id: 587d78b0367417b2b2512b05\ntitle: Build a Technical Documentation Page\nchallengeType: 25\ndemoType: onClick\ndashedName: build-a-technical-documentation-page\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou can see a main element with a corresponding id=\"main-doc\", which contains the page's main content (technical documentation) Within the #main-doc element, you can see several section elements, each with a class of main-section There should be a minimum of five The first element within each main-section should be a header element, which contains text that describes the topic of that section Each section element with the class of main-section should also have an id that corresponds with the text of each header contained within it Any spaces should be replaced with underscores (e g The section that contains the header \"JavaScript and Java\" should have a corresponding id=\"JavaScript_and_Java\") The main-section elements should contain at least ten p elements total (not each) The main-section elements should contain at least five code elements total (not each) The main-section elements should contain at least five li items total (not each) You can see a nav element with a corresponding id=\"navbar\" The navbar element should contain one header element which contains text that describes the topic of the technical documentation Additionally, the navbar should contain link (a) elements with the class of nav-link There should be one for every element with the class main-section The header element in the #navbar must come before any link (a) elements in the navbar Each element with the class of nav-link should contain text that corresponds to the header text within each section (e g if you have a \"Hello world\" section/header, your navbar should have an element which contains the text \"Hello world\") When you click on a navbar element, the page should navigate to the corresponding section of the #main-doc element (e g If you click on a nav-link element that contains the text \"Hello world\", the page navigates to a section element with that id, and contains the corresponding header) On regular sized devices (laptops, desktops), the element with id=\"navbar\" should be shown on the left side of the screen and should always be visible to the user Your technical documentation should use at least one media query",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 30250,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 13
  },
  {
    "id": "11f5f6b9061fd2e0fbe162224832427a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
    "source_type": "git_repo",
    "title": "Technical Documentation Page",
    "content": "to the corresponding section of the #main-doc element (e g If you click on a nav-link element that contains the text \"Hello world\", the page navigates to a section element with that id, and contains the corresponding header) On regular sized devices (laptops, desktops), the element with id=\"navbar\" should be shown on the left side of the screen and should always be visible to the user Your technical documentation should use at least one media queryNote: Be sure to link your stylesheet in your HTML and apply your CSS --hints--\nYou should have a main element with an id of main-doc js\nconst el = document getElementById('main-doc');\nassert isNotNull(el);\nYou should have at least five section elements with a class of main-section js\nconst els = document querySelectorAll('#main-doc section');\nassert isAtLeast(els length, 5);\nAll of your main-section elements should be section elements js\nconst els = document querySelectorAll(' main-section');\nels forEach(el => {\nif (el tagName == 'SECTION') {\nassert fail();\n}\n});\nassert isAbove(els length, 0);\nYou should have at least five main-section elements that are descendants of #main-doc js\nconst els = document querySelectorAll('#main-doc main-section');\nassert isAtLeast(els length, 5);\nThe first child of each main-section should be a header element js\nconst els = document querySelectorAll(' main-section');\nels forEach(el => {\nif (el firstElementChild tagName == 'HEADER') assert fail();\n});\nassert isNotEmpty(els);\nNone of your header elements should be empty js\nconst els = document querySelectorAll('header');\nels forEach(el => {\nif (el innerText length <= 0) assert fail();\n});\nassert isNotEmpty(els);\nAll of your main-section elements should have an id js\nconst els = document querySelectorAll(' main-section');\nels forEach(el => {\nif ( el id || el id === '') assert fail();\n});\nassert isNotEmpty(els);\nEach main-section should have an id that matches the text of its first child, having any spaces in the child's text replaced with underscores (_) for the id's js\nconst els = document querySelectorAll(' main-section');\nels forEach(el => {\nconst text = el firstElementChild innerText replaceAll(' ', '_');\nif (el id toUpperCase() == text toUpperCase()) assert fail();\n});\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 30250,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 13
  },
  {
    "id": "e205c832570932105a2584af327a64cf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
    "source_type": "git_repo",
    "title": "Technical Documentation Page",
    "content": "forEach(el => { if ( el id || el id === '') assert fail(); }); assert isNotEmpty(els); Each main-section should have an id that matches the text of its first child, having any spaces in the child's text replaced with underscores (_) for the id's js const els = document querySelectorAll(' main-section'); els forEach(el => { const text = el firstElementChild innerText replaceAll(' ', '_'); if (el id toUpperCase() == text toUpperCase()) assert fail(); }); assertisNotEmpty(els);\nYou should have at least 10 p elements (total) within your main-section elements js\nconst els = document querySelectorAll(' main-section p');\nassert isAtLeast(els length, 10);\nYou should have at least five code elements that are descendants of main-section elements js\nconst els = document querySelectorAll(' main-section code');\nassert isAtLeast(els length, 5);\nYou should have at least five li elements that are descendants of main-section elements js\nconst els = document querySelectorAll(' main-section li');\nassert isAtLeast(els length, 5);\nYou should have a nav element with an id of navbar js\nconst el = document getElementById('navbar');\nassert isNotNull(el);\nassert strictEqual(el tagName, 'NAV');\nYour #navbar should have exactly one header element within it js\nconst els = document querySelectorAll('#navbar header');\nassert lengthOf(els, 1);\nYou should have at least one a element with a class of nav-link js\nconst els = document querySelectorAll('a nav-link');\nassert isAtLeast(els length, 1);\nAll of your nav-link elements should be anchor (a) elements js\nconst els = document querySelectorAll(' nav-link');\nels forEach(el => {\nif (el tagName == 'A') assert fail();\n});\nassert isNotEmpty(els);\nAll of your nav-link elements should be in the #navbar js\nconst els1 = document querySelectorAll(' nav-link');\nconst els2 = document querySelectorAll('#navbar nav-link');\nassert isNotEmpty(els2);\nassert strictEqual(els1 length, els2 length);\nYou should have the same number of nav-link and main-section elements js\nconst els1 = document querySelectorAll(' main-section');\nconst els2 = document querySelectorAll(' nav-link');\nassert isNotEmpty(els1);\nassert isNotEmpty(els2);\nassert strictEqual(els1 length, els2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 30250,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 2,
    "total_chunks": 13
  },
  {
    "id": "9a585ff54d55a1af0b91072688b65968",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
    "source_type": "git_repo",
    "title": "Technical Documentation Page",
    "content": "els forEach(el => { if (el tagName == 'A') assert fail(); }); assert isNotEmpty(els); All of your nav-link elements should be in the #navbar js const els1 = document querySelectorAll(' nav-link'); const els2 = document querySelectorAll('#navbar nav-link'); assert isNotEmpty(els2); assert strictEqual(els1 length, els2 length); You should have the same number of nav-link and main-section elements js const els1 = document querySelectorAll(' main-section'); const els2 = document querySelectorAll(' nav-link'); assert isNotEmpty(els1); assert isNotEmpty(els2); assert strictEqual(els1 length, els2length);\nThe header element in the #navbar should come before any link (a) elements also in the #navbar js\nconst navLinks = document querySelectorAll('#navbar a nav-link');\nconst header = document querySelector('#navbar header');\nnavLinks forEach(navLink => {\nif (\nheader compareDocumentPosition(navLink) & Node DOCUMENT_POSITION_PRECEDING\n)\nassert fail();\n});\nassert isNotNull(header);\nEach nav-link should have text that corresponds to the header text of its related section (e g if you have a \"Hello world\" section/header, your #navbar should have a nav-link which has the text \"Hello world\") ```js\nconst headerText = Array from(document querySelectorAll(' main-section')) map(\nel => el firstElementChild innerText trim() toUpperCase()\n);\nconst linkText = Array from(document querySelectorAll(' nav-link')) map(el =>\nel innerText trim() toUpperCase()\n);\nconst remainder = headerText filter(str => linkText indexOf(str) === -1);\nassert isNotEmpty(headerText);\nassert isNotEmpty(linkText);\nassert isEmpty(remainder);\n```\nEach nav-link should have an href attribute that links to its corresponding main-section (e g If you click on a nav-link element that contains the text \"Hello world\", the page navigates to a section element with that id) js\nconst hrefValues = Array from(document querySelectorAll(' nav-link')) map(el =>\nel getAttribute('href')\n);\nconst mainSectionIDs = Array from(\ndocument querySelectorAll(' main-section')\n) map(el => el id);\nconst missingHrefValues = mainSectionIDs filter(\nstr => hrefValues indexOf('#' + str) === -1\n);\nassert isNotEmpty(hrefValues);\nassert isNotEmpty(mainSectionIDs);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 30250,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 13
  },
  {
    "id": "eb89265b5ab9e95988c9170acce26a51",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
    "source_type": "git_repo",
    "title": "Technical Documentation Page",
    "content": "that links to its corresponding main-section (e g If you click on a nav-link element that contains the text \"Hello world\", the page navigates to a section element with that id) js const hrefValues = Array from(document querySelectorAll(' nav-link')) map(el => el getAttribute('href') ); const mainSectionIDs = Array from( document querySelectorAll(' main-section') ) map(el => el id); const missingHrefValues = mainSectionIDs filter( str => hrefValues indexOf('#' + str) === -1 ); assert isNotEmpty(hrefValues); assert isNotEmpty(mainSectionIDs); assertisEmpty(missingHrefValues, 0);\nYour #navbar should always be on the left edge of the window js\nconst el = document getElementById('navbar');\nconst left1 = el offsetLeft;\nassert isNotNull(el);\nassert isAtLeast(left1, -15);\nassert isAtMost(left1, 15);\nYour Technical Documentation project should use at least one media query js\nconst htmlSourceAttr = Array from(document querySelectorAll('source')) map(el =>\nel getAttribute('media')\n);\nconst cssCheck = new __helpers CSSHelp(document) getCSSRules('media');\nassert isTrue(cssCheck length > 0 || htmlSourceAttr length > 0);\n--seed--\n--seed-contents--\n```html\nTechnical Documentation Page\n```\n```css\n```\n--solutions--\n```html\nJS Documentation\nIntroduction\nWhat you should already know\nJavaScript and Java\nHello world\nVariables\nDeclaring variables\nVariable scope\nGlobal variables\nConstants\nData types\nif else statement\nwhile statement\nFunction declarations\nReference\nIntroduction\nJavaScript is a cross-platform, object-oriented scripting language It is a small and lightweight language Inside a host environment\n(for example, a web browser), JavaScript can be connected to the\nobjects of its environment to provide programmatic control over\nthem JavaScript contains a standard library of objects, such as Array,\nDate, and Math, and a core set of language elements such as\noperators, control structures, and statements Core JavaScript can\nbe extended for a variety of purposes by supplementing it with\nadditional objects; for example:\nClient-side JavaScript extends the core language by supplying\nobjects to control a browser and its Document Object Model (DOM)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 30250,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 4,
    "total_chunks": 13
  },
  {
    "id": "f6ab473e3f608768fa58d34f11b18daf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
    "source_type": "git_repo",
    "title": "Technical Documentation Page",
    "content": "to the objects of its environment to provide programmatic control over them JavaScript contains a standard library of objects, such as Array, Date, and Math, and a core set of language elements such as operators, control structures, and statements Core JavaScript can be extended for a variety of purposes by supplementing it with additional objects; for example: Client-side JavaScript extends the core language by supplying objects to control a browser and its Document Object Model (DOM)For example, client-side extensions allow an application to place\nelements on an HTML form and respond to user events such as mouse\nclicks, form input, and page navigation Server-side JavaScript extends the core language by supplying\nobjects relevant to running JavaScript on a server For example,\nserver-side extensions allow an application to communicate with a\ndatabase, provide continuity of information from one invocation to\nanother of the application, or perform file manipulations on a\nserver What you should already know\nThis guide assumes you have the following basic background:\nA general understanding of the Internet and the World Wide Web\n(WWW) Good working knowledge of HyperText Markup Language (HTML) Some programming experience If you are new to programming, try\none of the tutorials linked on the main page about JavaScript JavaScript and Java\nJavaScript and Java are similar in some ways but fundamentally\ndifferent in some others The JavaScript language resembles Java but\ndoes not have Java's static typing and strong type checking JavaScript follows most Java expression syntax, naming conventions\nand basic control-flow constructs which was the reason why it was\nrenamed from LiveScript to JavaScript In contrast to Java's compile-time system of classes built by\ndeclarations, JavaScript supports a runtime system based on a small\nnumber of data types representing numeric, Boolean, and string\nvalues JavaScript has a prototype-based object model instead of the\nmore common class-based object model The prototype-based model\nprovides dynamic inheritance; that is, what is inherited can vary\nfor individual objects JavaScript also supports functions without\nany special declarative requirements Functions can be properties of\nobjects, executing as loosely typed methods JavaScript is a very free-form language compared to Java You do not\nhave to declare all variables, classes, and methods You do not have\nto be concerned with whether methods are public, private, or\nprotected, and you do not have to implement interfaces Variables,\nparameters, and function return types are not explicitly typed",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 30250,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 5,
    "total_chunks": 13
  },
  {
    "id": "44e2c9a5acd03abe389a213753e7526a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
    "source_type": "git_repo",
    "title": "Technical Documentation Page",
    "content": "for individual objects JavaScript also supports functions without any special declarative requirements Functions can be properties of objects, executing as loosely typed methods JavaScript is a very free-form language compared to Java You do not have to declare all variables, classes, and methods You do not have to be concerned with whether methods are public, private, or protected, and you do not have to implement interfaces Variables, parameters, and function return types are not explicitly typedHello world\nTo get started with writing JavaScript, open the Scratchpad and write\nyour first \"Hello world\" JavaScript code:\nfunction greetMe(yourName) { alert(\"Hello \" + yourName); }\ngreetMe(\"World\");\nSelect the code in the pad and hit Ctrl+R to watch it unfold in your\nbrowser Variables\nYou use variables as symbolic names for values in your application The names of variables, called identifiers, conform to certain rules A JavaScript identifier must start with a letter, underscore (_), or\ndollar sign ($); subsequent characters can also be digits (0-9) Because JavaScript is case sensitive, letters include the characters\n\"A\" through \"Z\" (uppercase) and the characters \"a\" through \"z\"\n(lowercase) You can use ISO 8859-1 or Unicode letters such as å and ü in\nidentifiers You can also use the Unicode escape sequences as\ncharacters in identifiers Some examples of legal names are\nNumber_hits, temp99, and _name Declaring variables\nYou can declare a variable in three ways:\nWith the keyword var For example, var x = 42 This\nsyntax can be used to declare both local and global variables By simply assigning it a value For example,\nx = 42 This always declares a global variable It\ngenerates a strict JavaScript warning You shouldn't use this\nvariant With the keyword let For example, let y = 13 This\nsyntax can be used to declare a block scope local variable See\nVariable scope below Variable scope\nWhen you declare a variable outside of any function, it is called a\nglobal variable, because it is available to any other code in the\ncurrent document When you declare a variable within a function, it\nis called a local variable, because it is available only within that\nfunction JavaScript before ECMAScript 2015 does not have block statement\nscope; rather, a variable declared within a block is local to the\nfunction (or global scope) that the block resides within",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 30250,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 6,
    "total_chunks": 13
  },
  {
    "id": "a894847f0b4e2961e9f977ee27da4211",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
    "source_type": "git_repo",
    "title": "Technical Documentation Page",
    "content": "a variable outside of any function, it is called a global variable, because it is available to any other code in the current document When you declare a variable within a function, it is called a local variable, because it is available only within that function JavaScript before ECMAScript 2015 does not have block statement scope; rather, a variable declared within a block is local to the function (or global scope) that the block resides withinFor\nexample the following code will log 5, because the scope of x is the\nfunction (or global context) within which x is declared, not the\nblock, which in this case is an if statement if (true) { var x = 5; } console log(x); // 5\nThis behavior changes, when using the let declaration introduced in\nECMAScript 2015 if (true) { let y = 5; } console log(y); // ReferenceError: y is\nnot defined\nGlobal variables\nGlobal variables are in fact properties of the global object In web\npages the global object is window, so you can set and access global\nvariables using the window variable syntax Consequently, you can access global variables declared in one window\nor frame from another window or frame by specifying the window or\nframe name For example, if a variable called phoneNumber is\ndeclared in a document, you can refer to this variable from an\niframe as parent phoneNumber Constants\nYou can create a read-only, named constant with the const keyword The syntax of a constant identifier is the same as for a variable\nidentifier: it must start with a letter, underscore or dollar sign\nand can contain alphabetic, numeric, or underscore characters const PI = 3 14;\nA constant cannot change value through assignment or be re-declared\nwhile the script is running It has to be initialized to a value The scope rules for constants are the same as those for let block\nscope variables If the const keyword is omitted, the identifier is\nassumed to represent a variable You cannot declare a constant with the same name as a function or\nvariable in the same scope For example:\n// THIS WILL CAUSE AN ERROR function f() {}; const f = 5; // THIS\nWILL CAUSE AN ERROR ALSO function f() { const g = 5; var g;\n//statements }\nHowever, object attributes are not protected, so the following\nstatement is executed without problems",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 30250,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 7,
    "total_chunks": 13
  },
  {
    "id": "a38122429c0e60572905b79b57657ad9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
    "source_type": "git_repo",
    "title": "Technical Documentation Page",
    "content": "keyword is omitted, the identifier is assumed to represent a variable You cannot declare a constant with the same name as a function or variable in the same scope For example: // THIS WILL CAUSE AN ERROR function f() {}; const f = 5; // THIS WILL CAUSE AN ERROR ALSO function f() { const g = 5; var g; //statements } However, object attributes are not protected, so the following statement is executed without problemsconst MY_OBJECT = {\"key\": \"value\"}; MY_OBJECT key =\n\"otherValue\";\nData types\nThe latest ECMAScript standard defines seven data types:\nSix data types that are primitives:\nBoolean true and false null A special keyword denoting a null value Because\nJavaScript is case-sensitive, null is not the same as Null,\nNULL, or any other variant undefined A top-level property whose value is undefined Number 42 or 3 14159 String \"Howdy\"\nSymbol (new in ECMAScript 2015) A data type whose instances\nare unique and immutable and Object\nAlthough these data types are a relatively small amount, they enable\nyou to perform useful functions with your applications Objects and\nfunctions are the other fundamental elements in the language You can\nthink of objects as named containers for values, and functions as\nprocedures that your application can perform if else statement\nUse the if statement to execute a statement if a logical condition is\ntrue Use the optional else clause to execute a statement if the\ncondition is false An if statement looks as follows:\nif (condition) { statement_1; } else { statement_2; }\ncondition can be any expression that evaluates to true or false See\nBoolean for an explanation of what evaluates to true and false If\ncondition evaluates to true, statement_1 is executed; otherwise,\nstatement_2 is executed statement_1 and statement_2 can be any\nstatement, including further nested if statements You may also compound the statements using else if to have multiple\nconditions tested in sequence, as follows:\nif (condition_1) { statement_1; } else if (condition_2) {\nstatement_2; } else if (condition_n) { statement_n; } else {\nstatement_last; }\nIn the case of multiple conditions only the first logical condition\nwhich evaluates to true will be executed To execute multiple\nstatements, group them within a block statement ({ })",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 30250,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 8,
    "total_chunks": 13
  },
  {
    "id": "bece1ffa3978ffb4fe451ccddc4ec89f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
    "source_type": "git_repo",
    "title": "Technical Documentation Page",
    "content": "any statement, including further nested if statements You may also compound the statements using else if to have multiple conditions tested in sequence, as follows: if (condition_1) { statement_1; } else if (condition_2) { statement_2; } else if (condition_n) { statement_n; } else { statement_last; } In the case of multiple conditions only the first logical condition which evaluates to true will be executed To execute multiple statements, group them within a block statement ({ })In\ngeneral, it's good practice to always use block statements, especially\nwhen nesting if statements:\nif (condition) { statement_1_runs_if_condition_is_true;\nstatement_2_runs_if_condition_is_true; } else {\nstatement_3_runs_if_condition_is_false;\nstatement_4_runs_if_condition_is_false; }\nIt is advisable to not use simple assignments in a conditional\nexpression, because the assignment can be confused with equality when\nglancing over the code For example, do not use the following code:\nif (x = y) { /* statements here */ } If you need to use\nan assignment in a conditional expression, a common practice is to put\nadditional parentheses around the assignment For example:\nif ((x = y)) { /* statements here */ }\nwhile statement\nA while statement executes its statements as long as a specified\ncondition evaluates to true A while statement looks as follows:\nwhile (condition) statement If the condition becomes\nfalse, statement within the loop stops executing and control passes to\nthe statement following the loop The condition test occurs before statement in the loop is executed If the condition returns true, statement is executed and the\ncondition is tested again If the condition returns false, execution\nstops and control is passed to the statement following while To execute multiple statements, use a block statement ({ }) to\ngroup those statements Example:\nThe following while loop iterates as long as n is less than three:\nvar n = 0; var x = 0; while (n < 3) { n++; x += n; }\nWith each iteration, the loop increments n and adds that value to x",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 30250,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 9,
    "total_chunks": 13
  },
  {
    "id": "c8f201366ea648fe393eb63f51aec3ea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
    "source_type": "git_repo",
    "title": "Technical Documentation Page",
    "content": "again If the condition returns false, execution stops and control is passed to the statement following while To execute multiple statements, use a block statement ({ }) to group those statements Example: The following while loop iterates as long as n is less than three: var n = 0; var x = 0; while (n < 3) { n++; x += n; } With each iteration, the loop increments n and adds that value to xTherefore, x and n take on the following values:\nAfter the first pass: n = 1 and x = 1\nAfter the second pass: n = 2 and x = 3\nAfter the third pass: n = 3 and x = 6\nAfter completing the third pass, the condition n < 3 is no longer\ntrue, so the loop terminates Function declarations\nA function definition (also called a function declaration, or function\nstatement) consists of the function keyword, followed by:\nThe name of the function A list of arguments to the function, enclosed in parentheses and\nseparated by commas The JavaScript statements that define the function, enclosed in\ncurly brackets, { } For example, the following code defines a simple function named\nsquare:\nfunction square(number) { return number * number; }\nThe function square takes one argument, called number The function\nconsists of one statement that says to return the argument of the\nfunction (that is, number) multiplied by itself The return\nstatement specifies the value returned by the function return number * number;\nPrimitive parameters (such as a number) are passed to functions by\nvalue; the value is passed to the function, but if the function\nchanges the value of the parameter, this change is not reflected\nglobally or in the calling function Reference\nAll the documentation in this page is taken from\nMDN\n```\n```css\nhtml,\nbody {\nmin-width: 290px;\ncolor: #4d4e53;\nbackground-color: #ffffff;\nfont-family: 'Open Sans', Arial, sans-serif;\nline-height: 1 5;\n}\nnavbar {\nposition: fixed;\nmin-width: 290px;\ntop: 0px;\nleft: 0px;\nwidth: 300px;\nheight: 100%;\nborder-right: solid;\nborder-color: rgba(0, 22, 22, 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 30250,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 10,
    "total_chunks": 13
  },
  {
    "id": "eb0a53cbe1b54338141422bb007e72b8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
    "source_type": "git_repo",
    "title": "Technical Documentation Page",
    "content": "to the function, but if the function changes the value of the parameter, this change is not reflected globally or in the calling function Reference All the documentation in this page is taken from MDN ``` ```css html, body { min-width: 290px; color: #4d4e53; background-color: #ffffff; font-family: 'Open Sans', Arial, sans-serif; line-height: 1 5; } navbar { position: fixed; min-width: 290px; top: 0px; left: 0px; width: 300px; height: 100%; border-right: solid; border-color: rgba(0, 22, 22, 04);\n}\nheader {\ncolor: black;\nmargin: 10px;\ntext-align: center;\nfont-size: 1 8em;\nfont-weight: thin;\n}\nmain-doc header {\ntext-align: left;\nmargin: 0px;\n}\nnavbar ul {\nheight: 88%;\npadding: 0;\noverflow-y: auto;\noverflow-x: hidden;\n}\nnavbar li {\ncolor: #4d4e53;\nborder-top: 1px solid;\nlist-style: none;\nposition: relative;\nwidth: 100%;\n}\nnavbar a {\ndisplay: block;\npadding: 10px 30px;\ncolor: #4d4e53;\ntext-decoration: none;\ncursor: pointer;\n}\nmain-doc {\nposition: absolute;\nmargin-left: 310px;\npadding: 20px;\nmargin-bottom: 110px;\n}\nsection article {\ncolor: #4d4e53;\nmargin: 15px;\nfont-size: 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 30250,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
      "source_type": "git_repo"
    },
    "token_count": 339,
    "chunk_index": 11,
    "total_chunks": 13
  },
  {
    "id": "8eb5505f74ecc5b079781adf6c44ddd6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
    "source_type": "git_repo",
    "title": "Technical Documentation Page",
    "content": "font-size: 1 8em; font-weight: thin; } main-doc header { text-align: left; margin: 0px; } navbar ul { height: 88%; padding: 0; overflow-y: auto; overflow-x: hidden; } navbar li { color: #4d4e53; border-top: 1px solid; list-style: none; position: relative; width: 100%; } navbar a { display: block; padding: 10px 30px; color: #4d4e53; text-decoration: none; cursor: pointer; } main-doc { position: absolute; margin-left: 310px; padding: 20px; margin-bottom: 110px; } section article { color: #4d4e53; margin: 15px; font-size: 096em;\n}\nsection li {\nmargin: 15px 0px 0px 20px;\n}\ncode {\ndisplay: block;\ntext-align: left;\nwhite-space: pre-line;\nposition: relative;\nword-break: normal;\nword-wrap: normal;\nline-height: 2;\nbackground-color: #f7f7f7;\npadding: 15px;\nmargin: 10px;\nborder-radius: 5px;\n}\n@media only screen and (max-width: 815px) {\n/ For mobile phones: /\n#navbar ul {\nborder: 1px solid;\nheight: 207px;\n}\n#navbar {\nbackground-color: white;\nposition: absolute;\ntop: 0;\npadding: 0;\nmargin: 0;\nwidth: 100%;\nmax-height: 275px;\nborder: none;\nz-index: 1;\nborder-bottom: 2px solid;\n}\n#main-doc {\nposition: relative;\nmargin-left: 0px;\nmargin-top: 270px;\n}\n}\n@media only screen and (max-width: 400px) {\n#main-doc {\nmargin-left: -10px;\n}\ncode {\nmargin-left: -20px;\nwidth: 100%;\npadding: 15px;\npadding-left: 10px;\npadding-right: 45px;\nmin-width: 233px;\n}\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 30250,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-technical-documentation-page\\587d78b0367417b2b2512b05.md",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 12,
    "total_chunks": 13
  },
  {
    "id": "0c225cd8045ebf3a6a6b3d533c80e55b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
    "source_type": "git_repo",
    "title": "Tic-Tac-Toe",
    "content": "id: 67e3a6b7f60b4085588189e6\ntitle: Build a Tic-Tac-Toe Game\nchallengeType: 25\ndashedName: build-a-tic-tac-toe-game\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should create a Board component that renders nine button elements each with a class of square in a 3x3 grid Clicking button square elements should alternate between displaying an X then O within the element Once a player has won the game, clicking on any button square should not cause any further changes You should create a button#reset element that resets the game when clicked A message should be displayed indicating either X or O as the winner, or neither if the result is a draw --before-all--\n```js\nlet clock = __FakeTimers install();\nasync function reset(assert) {\nconst reset = document querySelector(\"#reset\");\nassert exists(reset, \"button#reset should exist\");\nreset click();\nclock tick(50);\n}\n// Gets the text of the document excluding that of the matching selector function getInnerTextExcept(removingSelector) {\nconst body = document body cloneNode(true);\nconst squareElements = body querySelectorAll(${removingSelector},script);\nsquareElements forEach(element => {\nelement parentNode removeChild(element)\n});\nreturn body innerText;\n}\n```\n--hints--\nYou should export a Board component ```js\nasync () => {\nconst script = [ document querySelectorAll(\"script\")] find((s) => s dataset src ===  \"index jsx\") innerText;\nconst exports = {};\nconst a = eval(script);\nassert property(exports, \"Board\");\n}\n```\nYou should have nine button square elements js\nconst els = document querySelectorAll(\"button square\");\nassert equal(els length, 9);\nThe button square elements should be in a 3x3 grid ```js\n// TODO: Maybe enforce buttons to be same size const els = document querySelectorAll(\"button square\");\nconst squares = Array from(els);\nconst coords = squares map((square) => {\nconst rect = square getBoundingClientRect();\nreturn rect;\n});\nconst xTolerance = coords[0] width / 10;\nconst yTolerance = coords[0] height / 10;\ntry {\nassert isBelow(coords[0] x, coords[1]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14795,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "8d04460e1e518ac9cd740876b1b8e82a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
    "source_type": "git_repo",
    "title": "Tic-Tac-Toe",
    "content": "const els = document querySelectorAll(\"button square\"); assert equal(els length, 9); The button square elements should be in a 3x3 grid ```js // TODO: Maybe enforce buttons to be same size const els = document querySelectorAll(\"button square\"); const squares = Array from(els); const coords = squares map((square) => { const rect = square getBoundingClientRect(); return rect; }); const xTolerance = coords[0] width / 10; const yTolerance = coords[0] height / 10; try { assert isBelow(coords[0] x, coords[1]x, \"First square should be to the left of the second square\");\nassert isBelow(coords[1] x, coords[2] x, \"Second square should be to the left of the third square\");\nassert approximately(coords[0] y, coords[1] y, yTolerance, \"First square should be at the same height as the second square\");\nassert approximately(coords[1] y, coords[2] y, yTolerance, \"Second square should be at the same height as the third square\");\nassert isBelow(coords[3] x, coords[4] x, \"Fourth square should be to the left of the fifth square\");\nassert isBelow(coords[4] x, coords[5] x, \"Fifth square should be to the left of the sixth square\");\nassert approximately(coords[3] y, coords[4] y, yTolerance, \"Fourth square should be at the same height as the fifth square\");\nassert approximately(coords[4] y, coords[5] y, yTolerance, \"Fifth square should be at the same height as the sixth square\");\nassert isBelow(coords[6] x, coords[7] x, \"Seventh square should be to the left of the eighth square\");\nassert isBelow(coords[7] x, coords[8] x, \"Eighth square should be to the left of the ninth square\");\nassert approximately(coords[6] y, coords[7] y, yTolerance, \"Seventh square should be at the same height as the eighth square\");\nassert approximately(coords[7] y, coords[8] y, yTolerance, \"Eighth square should be at the same height as the ninth square\");\nassert isBelow(coords[0] y, coords[3]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14795,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "860e4792415dbaa9d7d85811b6d6fb46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
    "source_type": "git_repo",
    "title": "Tic-Tac-Toe",
    "content": "as the sixth square\"); assert isBelow(coords[6] x, coords[7] x, \"Seventh square should be to the left of the eighth square\"); assert isBelow(coords[7] x, coords[8] x, \"Eighth square should be to the left of the ninth square\"); assert approximately(coords[6] y, coords[7] y, yTolerance, \"Seventh square should be at the same height as the eighth square\"); assert approximately(coords[7] y, coords[8] y, yTolerance, \"Eighth square should be at the same height as the ninth square\"); assert isBelow(coords[0] y, coords[3]y, \"First square should be above the fourth square\");\nassert isBelow(coords[3] y, coords[6] y, \"Fourth square should be above the seventh square\");\nassert approximately(coords[0] x, coords[3] x, xTolerance, \"First square should be at the same width as the fourth square\");\nassert approximately(coords[3] x, coords[6] x, xTolerance, \"Fourth square should be at the same width as the seventh square\");\nassert isBelow(coords[1] y, coords[4] y, \"Second square should be above the fifth square\");\nassert isBelow(coords[4] y, coords[7] y, \"Fifth square should be above the eighth square\");\nassert approximately(coords[1] x, coords[4] x, xTolerance, \"Second square should be at the same width as the fifth square\");\nassert approximately(coords[4] x, coords[7] x, xTolerance, \"Fifth square should be at the same width as the eighth square\");\nassert isBelow(coords[2] y, coords[5] y, \"Third square should be above the sixth square\");\nassert isBelow(coords[5] y, coords[8] y, \"Sixth square should be above the ninth square\");\nassert approximately(coords[2] x, coords[5] x, xTolerance, \"Third square should be at the same width as the sixth square\");\nassert approximately(coords[5] x, coords[8] x, xTolerance, \"Sixth square should be at the same width as the ninth square\");\n} catch (e) {\nconsole error(e)\nthrow e;\n}\n```\nThe first click of a button",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14795,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "90a06a2a1cb5f04c434cf811fec3276d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
    "source_type": "git_repo",
    "title": "Tic-Tac-Toe",
    "content": "y, coords[5] y, \"Third square should be above the sixth square\"); assert isBelow(coords[5] y, coords[8] y, \"Sixth square should be above the ninth square\"); assert approximately(coords[2] x, coords[5] x, xTolerance, \"Third square should be at the same width as the sixth square\"); assert approximately(coords[5] x, coords[8] x, xTolerance, \"Sixth square should be at the same width as the ninth square\"); } catch (e) { console error(e) throw e; } ``` The first click of a buttonsquare element should result in X being displayed within the element ```js\nasync () => {\nconst el = document querySelector(\"button square\");\nel click();\nclock tick(50);\ntry {\nassert include(el textContent, \"X\");\n} catch(e) {\nconsole error(e);\nthrow e;\n}\n}\n```\nClicking on the button#reset element should reset the game ```js\nasync () => {\n// NOTE: This test is intentionally high-up, because the latter tests rely on the functionality const el = document querySelector(\"button square\");\nel click();\nclock tick(50);\ntry {\nawait reset(assert);\nassert notInclude(el textContent, \"X\");\n} catch(e) {\nconsole error(e);\nthrow e;\n}\n}\n```\nThe second click of a button square element should result in O being displayed within the element ```js\nasync () => {\nawait reset(assert);\nconst els = document querySelectorAll(\"button square\");\nels[0] click();\nclock tick(50);\nels[1] click();\nclock tick(50);\ntry {\nassert include(els[1] textContent, \"O\");\n} catch(e) {\nconsole error(e);\nthrow e;\n}\n}\n```\nAll subsequent clicks of a button square element should alternate between displaying X and O within the element js\nasync () => {\nawait reset(assert);\nconst els = document querySelectorAll(\"button square\");\ntry {\nfor (let i = 3; i < els length + 3; i++) {\nconst wrappedI = i % els length;\nels[wrappedI] click();\nclock tick(50);\nassert include(els[wrappedI] textContent, (i - 3) % 2 === 0 \"X\" : \"O\");\n}\n} catch(e) {\nconsole error(e);\nthrow e;\n}\n}\nClicking on an already used button",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14795,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "b7ace9255429fb2e966f3f198f9c8cbf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
    "source_type": "git_repo",
    "title": "Tic-Tac-Toe",
    "content": "between displaying X and O within the element js async () => { await reset(assert); const els = document querySelectorAll(\"button square\"); try { for (let i = 3; i < els length + 3; i++) { const wrappedI = i % els length; els[wrappedI] click(); clock tick(50); assert include(els[wrappedI] textContent, (i - 3) % 2 === 0 \"X\" : \"O\"); } } catch(e) { console error(e); throw e; } } Clicking on an already used buttonsquare element should result in no change js\nasync () => {\nawait reset(assert);\nconst els = document querySelectorAll(\"button square\");\ntry {\nfor (let i = 3; i < els length + 3; i++) {\nconst wrappedI = i % els length;\n// Click button twice to ensure it does not change\nels[wrappedI] click();\nclock tick(50);\nels[wrappedI] click();\nclock tick(50);\nassert include(els[wrappedI] textContent, (i - 3) % 2 === 0 \"X\" : \"O\");\n}\n} catch(e) {\nconsole error(e);\nthrow e;\n}\n}\nClicking on a button square element after the game has ended should result in no change ```js\nasync () => {\nawait reset(assert);\nconst els = document querySelectorAll(\"button square\");\ntry {\n// Win game, then click empty square and ensure no change\nfor (let i = 0; i < 3; i++) {\nconst x = els[i];\nx click();\nclock tick(50);\nassert include(x textContent, \"X\");\nconst o = els[i + 3];\no click();\nclock tick(50);\nif (i === 2) {\nassert notInclude(o textContent, \"O\");\n} else {\nassert include(o textContent, \"O\");\n}\n}\n} catch(e) {\nconsole error(e);\nthrow e;\n}\n}\n```\nThe game should display a message indicating the winner to be X or O ```js\nasync () => {\n// Get to almost winning state\n// Check dom\n// Click winning square\n// Check dom for change\nawait reset(assert);\nconst els = document querySelectorAll(\"button square\");\ntry {\nfor (let i = 0; i < 2; i++) {\nconst x = els[i];\nx click();\nclock",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14795,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "9a8ac89afa9c4227b7fbb06c12a0a35c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
    "source_type": "git_repo",
    "title": "Tic-Tac-Toe",
    "content": "} } } catch(e) { console error(e); throw e; } } ``` The game should display a message indicating the winner to be X or O ```js async () => { // Get to almost winning state // Check dom // Click winning square // Check dom for change await reset(assert); const els = document querySelectorAll(\"button square\"); try { for (let i = 0; i < 2; i++) { const x = els[i]; x click(); clocktick(50);\nconst o = els[i + 3];\no click();\nclock tick(50);\n}\nconst preXWin = getInnerTextExcept(\"button square\");\n// Click winning button for X\nels[2] click();\nclock tick(50);\nconst postXWin = getInnerTextExcept(\"button square\");\nassert notEqual(preXWin, postXWin);\nawait reset(assert);\nfor (let i = 0; i < 2; i++) {\nconst x = els[i];\nx click();\nclock tick(50);\nconst o = els[i + 3];\no click();\nclock tick(50);\n}\nels[6] click();\nclock tick(50);\nconst preOWin = getInnerTextExcept(\"button square\");\n// Click winning button for O\nels[5] click();\nclock tick(50);\nconst postOWin = getInnerTextExcept(\"button square\");\nassert notEqual(preOWin, postOWin);\n// There should be a difference between `O` and `X` winning assert notEqual(postXWin, postOWin);\n} catch(e) {\nconsole error(e);\nthrow e;\n}\n}\n```\nThe game should display a message indicating a draw ```js\nasync () => {\n// Get to almost draw state\n// Check dom\n// Click final square\n// Check dom for change\nawait reset(assert);\nconst els = document querySelectorAll(\"button square\");\ntry {\n//use already known draw states\nconst drawMoves = [0, 1, 2, 4, 3, 5, 7, 6, 8];\nconst snapshot1 = getInnerTextExcept(\"button square\");\nels[drawMoves[0]] click();\nclock tick(50);\nconst snapshot2 = getInnerTextExcept(\"button square\");\nfor (let i = 1; i < drawMoves length - 1; i++) {\nels[drawMoves[i]] click();\nclock",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14795,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "b3549bffa4e6760a27459eaec162f289",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
    "source_type": "git_repo",
    "title": "Tic-Tac-Toe",
    "content": "{ // Get to almost draw state // Check dom // Click final square // Check dom for change await reset(assert); const els = document querySelectorAll(\"button square\"); try { //use already known draw states const drawMoves = [0, 1, 2, 4, 3, 5, 7, 6, 8]; const snapshot1 = getInnerTextExcept(\"button square\"); els[drawMoves[0]] click(); clock tick(50); const snapshot2 = getInnerTextExcept(\"button square\"); for (let i = 1; i < drawMoves length - 1; i++) { els[drawMoves[i]] click(); clocktick(50);\n}\nconst snapshot3 = getInnerTextExcept(\"button square\");\nels[drawMoves[drawMoves length - 1]] click();\nclock tick(50);\nconst snapshot4 = getInnerTextExcept(\"button square\");\nassert notEqual(snapshot4, snapshot1);\nassert notEqual(snapshot4, snapshot2);\nassert notEqual(snapshot4, snapshot3);\n} catch(e) {\nconsole error(e);\nthrow e;\n}\n}\n```\nUninstall the clock, ignore this test\njs\nasync () => {\nclock uninstall()\n}\n--seed--\n--seed-contents--\n```html\nTic-Tac-Toe\n```\n```css\n```\n```jsx\nconst { useState } = React;\nexport function Board() {\n}\n```\n--solutions--\n```html\nTic-Tac-Toe\n```\n```css\n* {\nfont-family: \"Secular One\", sans-serif;\nfont-weight: 400;\nfont-style: normal;\n} board {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n} status {\nmargin: 10px;\nfont-size: 1 2em;\n} board-row {\ndisplay: flex;\n} square {\nwidth: 60px;\nheight: 60px;\nfont-size: 1 5em;\nmargin: 5px;\nbackground: #fff;\nborder: 1px solid #999;\ncursor: pointer;\nborder-radius: 5px;\n} square:focus {\noutline: none;\n}\nreset {\nmargin-top: 20px;\npadding: 10px 20px;\nfont-size: 1em;\ncursor: pointer;\n}\n```\n```jsx\nexport function Board() {\nconst [squares, setSquares] = React useState(Array(9)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14795,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "2652128acbd4afc57e6f2fb502810bab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
    "source_type": "git_repo",
    "title": "Tic-Tac-Toe",
    "content": "font-style: normal; } board { display: flex; flex-direction: column; align-items: center; } status { margin: 10px; font-size: 1 2em; } board-row { display: flex; } square { width: 60px; height: 60px; font-size: 1 5em; margin: 5px; background: #fff; border: 1px solid #999; cursor: pointer; border-radius: 5px; } square:focus { outline: none; } reset { margin-top: 20px; padding: 10px 20px; font-size: 1em; cursor: pointer; } ``` ```jsx export function Board() { const [squares, setSquares] = React useState(Array(9)fill(null));\nconst [isXNext, setIsXNext] = React useState(true);\nconst winner = calculateWinner(squares);\nconst isDraw = squares every(square => square == null) && winner;\nfunction handleClick(index) {\nif (squares[index] || winner || isDraw) return;\nconst nextSquares = squares slice();\nnextSquares[index] = isXNext 'X' : 'O';\nsetSquares(nextSquares);\nsetIsXNext( isXNext);\n};\nfunction resetGame() {\nsetSquares(Array(9) fill(null));\nsetIsXNext(true);\n};\nfunction renderSquare(index) {\nreturn  handleClick(index)} />;\n};\nreturn (\nTic-Tac-Toe\n{winner Winner: ${winner} : isDraw \"It's a Draw \" : Next Player: ${isXNext",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14795,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
      "source_type": "git_repo"
    },
    "token_count": 335,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "5fc596ae02b9a9ea722c45c7a4027924",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
    "source_type": "git_repo",
    "title": "Tic-Tac-Toe",
    "content": "const [isXNext, setIsXNext] = React useState(true); const winner = calculateWinner(squares); const isDraw = squares every(square => square == null) && winner; function handleClick(index) { if (squares[index] || winner || isDraw) return; const nextSquares = squares slice(); nextSquares[index] = isXNext 'X' : 'O'; setSquares(nextSquares); setIsXNext( isXNext); }; function resetGame() { setSquares(Array(9) fill(null)); setIsXNext(true); }; function renderSquare(index) { return handleClick(index)} />; }; return ( Tic-Tac-Toe {winner Winner: ${winner} : isDraw \"It's a Draw \" : Next Player: ${isXNext'X' : 'O'}}\n{renderSquare(0)}\n{renderSquare(1)}\n{renderSquare(2)}\n{renderSquare(3)}\n{renderSquare(4)}\n{renderSquare(5)}\n{renderSquare(6)}\n{renderSquare(7)}\n{renderSquare(8)}\nReset Game\n);\n};\nfunction Square({ value, onClick }) {\nreturn (\n{value}\n);\n};\nfunction calculateWinner(squares) {\nconst lines = [\n[0, 1, 2], [3, 4, 5], [6, 7, 8],\n[0, 3, 6], [1, 4, 7], [2, 5, 8],\n[0, 4, 8], [2, 4, 6]\n];\nfor (let line of lines) {\nconst [a, b, c] = line;\nif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\nreturn squares[a];\n}\n}\nreturn null;\n};\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 14795,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tic-tac-toe\\67e3a6b7f60b4085588189e6.md",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "8b24c97db2418a7e3286901b0a367cbe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-theme-switcher\\687ad7be1ff45032ccf1d92f.md",
    "source_type": "git_repo",
    "title": "Theme Switcher",
    "content": "id: 687ad7be1ff45032ccf1d92f\ntitle: Build a Theme Switcher\nchallengeType: 25\ndashedName: lab-theme-switcher\ndemoType: onClick\n--description--\nIn this lab, you will build an app that switches between different themes When you switch to a different theme, the background color will change and a different message will display Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a button element with the text Switch Theme Your button element should have the following attributes:\nAn id attribute set to \"theme-switcher-button\" An aria-haspopup attribute set to \"true\" An aria-expanded attribute set to \"false\" An aria-controls attribute set to \"theme-dropdown\" You should have a ul element with the following attributes:\nAn id attribute set to \"theme-dropdown\" A role attribute set to \"menu\" An aria-labelledby attribute set to \"theme-switcher-button\" A hidden attribute Your ul element should have at least two li elements with a role attribute set to \"menu-item\" and text of your choice representing a different theme Each of your li elements should have an id attribute that starts with theme- and ends with the theme you set for the li element text For example, if one of your themes is Light then your id should be theme-light You should have an element with an aria-live attribute set to \"polite\" You should have a themes array with at least two objects that each contain a name and message property The name will represent a different theme and the message will display when the theme switches You are free to come up with name and message values of your choice but the name values should match one of the options you set in your li items When a user clicks on the #theme-switcher-button, the #theme-dropdown element should display the available themes When the #theme-dropdown element is displayed, the aria-expanded attribute should be set to \"true\" for the button element When the users clicks on the #theme-switcher-button while the #theme-dropdown element is displayed, the menu should be closed and the hidden attribute should be added and the aria-expanded attribute should be set to \"false\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15279,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-theme-switcher\\687ad7be1ff45032ccf1d92f.md",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "170842702faef80c3bb4c86457d58152",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-theme-switcher\\687ad7be1ff45032ccf1d92f.md",
    "source_type": "git_repo",
    "title": "Theme Switcher",
    "content": "of the options you set in your li items When a user clicks on the #theme-switcher-button, the #theme-dropdown element should display the available themes When the #theme-dropdown element is displayed, the aria-expanded attribute should be set to \"true\" for the button element When the users clicks on the #theme-switcher-button while the #theme-dropdown element is displayed, the menu should be closed and the hidden attribute should be added and the aria-expanded attribute should be set to \"false\"When a user clicks on the #theme-switcher-button and selects a theme, the corresponding theme-<name> class should be added to the body element and the related theme message you set in the themes array should display in the aria-live=\"polite\" element --before-all--\n```js\nconst resetThemeSwitch = () => {\nconst themeDropdownBtn = document getElementById(\"theme-switcher-button\");\nconst themeDropdownEl = document getElementById(\"theme-dropdown\");\n// Reset attributes due to earlier button clicks interfering with these tests\nthemeDropdownEl setAttribute(\"hidden\", \"\");\nthemeDropdownBtn setAttribute(\"aria-expanded\", \"false\");\n}\n```\n--hints--\nYou should have a button element js\nassert exists(document querySelector(\"button\"));\nYour button element should have the text Switch Theme js\nconst btn = document querySelector(\"button\");\nassert equal(btn textContent trim(), \"Switch Theme\");\nYour button element should have an id attribute set to \"theme-switcher-button\" js\nconst btn = document querySelector(\"button\");\nassert equal(btn getAttribute(\"id\"), \"theme-switcher-button\");\nYour button element should have an aria-haspopup attribute set to \"true\" js\nconst btn = document querySelector(\"button\");\nassert equal(btn getAttribute(\"aria-haspopup\"), \"true\");\nYour button element should have an aria-expanded attribute set to \"false\" js\nconst btn = document querySelector(\"button\");\nassert equal(btn getAttribute(\"aria-expanded\"), \"false\");\nYour button element should have an aria-controls attribute set to \"theme-dropdown\" js\nconst btn = document querySelector(\"button\");\nassert equal(btn getAttribute(\"aria-controls\"), \"theme-dropdown\");\nYou should have an ul element js\nassert exists(document querySelector(\"ul\"));\nYour ul element should have an id attribute set to \"theme-dropdown\" js\nconst ul = document querySelector(\"ul\");\nassert equal(ul getAttribute(\"id\"), \"theme-dropdown\");\nYour ul element should have an role attribute set to \"menu\" js\nconst ul = document querySelector(\"ul\");\nassert equal(ul",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15279,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-theme-switcher\\687ad7be1ff45032ccf1d92f.md",
      "source_type": "git_repo"
    },
    "token_count": 515,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "db8717351c9048acdf546effe8828078",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-theme-switcher\\687ad7be1ff45032ccf1d92f.md",
    "source_type": "git_repo",
    "title": "Theme Switcher",
    "content": "querySelector(\"button\"); assert equal(btn getAttribute(\"aria-expanded\"), \"false\"); Your button element should have an aria-controls attribute set to \"theme-dropdown\" js const btn = document querySelector(\"button\"); assert equal(btn getAttribute(\"aria-controls\"), \"theme-dropdown\"); You should have an ul element js assert exists(document querySelector(\"ul\")); Your ul element should have an id attribute set to \"theme-dropdown\" js const ul = document querySelector(\"ul\"); assert equal(ul getAttribute(\"id\"), \"theme-dropdown\"); Your ul element should have an role attribute set to \"menu\" js const ul = document querySelector(\"ul\"); assert equal(ulgetAttribute(\"role\"), \"menu\");\nYour ul element should have an aria-labelledby attribute set to \"theme-switcher-button\" js\nconst ul = document querySelector(\"ul\");\nassert equal(ul getAttribute(\"aria-labelledby\"), \"theme-switcher-button\");\nYour ul element should have a hidden attribute js\nconst ul = document querySelector(\"ul\");\nassert isTrue(ul hasAttribute(\"hidden\"));\nYour ul element should have at least two li elements js\nconst listItems = document querySelectorAll(\"ul li\");\nassert isAtLeast(listItems length, 2);\nEach of your li elements should have a role attribute set to \"menu-item\" js\nconst listItems = document querySelectorAll(\"ul li\");\nassert isNotEmpty(listItems);\nlistItems forEach(li => {\nassert equal(li getAttribute(\"role\"), \"menu-item\");\n})\nEach of your li elements should have a piece of text that represents a theme js\nconst listItems = document querySelectorAll(\"ul li\");\nassert isNotEmpty(listItems);\nlistItems forEach(li => {\nconst text = li textContent trim();\nassert isTrue(text length > 0);\n})\nEach of your li elements should have an id attribute that starts with theme- and ends with the corresponding theme for that element Make sure your id value is all lowercase ```js\nconst listItems = document querySelectorAll(\"ul li\");\nassert isNotEmpty(listItems);\nconst listTitles = [ listItems] map(li => li textContent trim() toLowerCase());\nlistItems forEach((li, index) =>{\nassert equal(li getAttribute(\"id\"), theme-${listTitles[index]});\n})\n```\nYou should have an element with an aria-live attribute set to \"polite\" js\nassert exists(document querySelector('[aria-live=\"polite\"]'));\nYou should have a themes array js\nassert isArray(themes);\nYour themes array should have at least two objects",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15279,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-theme-switcher\\687ad7be1ff45032ccf1d92f.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "3fc72f607159890a2d1e113bcf165327",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-theme-switcher\\687ad7be1ff45032ccf1d92f.md",
    "source_type": "git_repo",
    "title": "Theme Switcher",
    "content": "theme for that element Make sure your id value is all lowercase ```js const listItems = document querySelectorAll(\"ul li\"); assert isNotEmpty(listItems); const listTitles = [ listItems] map(li => li textContent trim() toLowerCase()); listItems forEach((li, index) =>{ assert equal(li getAttribute(\"id\"), theme-${listTitles[index]}); }) ``` You should have an element with an aria-live attribute set to \"polite\" js assert exists(document querySelector('[aria-live=\"polite\"]')); You should have a themes array js assert isArray(themes); Your themes array should have at least two objectsjs\nassert isAtLeast(themes length, 2);\nthemes forEach(theme => {\nassert isObject(theme);\n});\nYour themes array should have at least two objects each with a name and message property js\nassert isNotEmpty(themes);\nthemes forEach(theme => {\nassert isObject(theme);\nassert property(theme, \"name\");\nassert property(theme, \"message\");\n})\nYour name and message property values should be strings that are not empty js\nassert isNotEmpty(themes);\nthemes forEach(theme => {\nassert isObject(theme);\nassert isString(theme[\"name\"]);\nassert isNotEmpty(theme[\"name\"]);\nassert isString(theme[\"message\"]);\nassert isNotEmpty(theme[\"message\"]);\n})\nEach of your name property values should match one of the values you provided for the li elements Make sure these values are all in lowercase ```js\nconst listItems = [ document querySelectorAll(\"ul li\")] map(li => li textContent toLowerCase() trim());\nconst namesArr = themes map(({name}) => name);\nassert equal(listItems length, namesArr length);\nassert isTrue(namesArr every(name => listItems includes(name)));\n```\nWhen a user clicks on the #theme-switcher-button to display the theme options, the hidden attribute should be removed from the #theme-dropdown element ```js\nconst themeDropdownBtn = document getElementById(\"theme-switcher-button\");\nconst themeDropdownEl = document getElementById(\"theme-dropdown\");\nassert isTrue(themeDropdownEl hasAttribute(\"hidden\"));\nthemeDropdownBtn dispatchEvent(new Event(\"click\"));\nassert isFalse(themeDropdownEl hasAttribute(\"hidden\"));\n```\nWhen the #theme-dropdown element is displayed, the aria-expanded attribute should be set to \"true\" for the button element ```js\nresetThemeSwitch()\nconst themeDropdownBtn = document getElementById(\"theme-switcher-button\");\nthemeDropdownBtn dispatchEvent(new Event(\"click\"));\nassert equal(themeDropdownBtn",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15279,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-theme-switcher\\687ad7be1ff45032ccf1d92f.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "45924156894225f55bf9ab5154f8c7b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-theme-switcher\\687ad7be1ff45032ccf1d92f.md",
    "source_type": "git_repo",
    "title": "Theme Switcher",
    "content": "listItems includes(name))); ``` When a user clicks on the #theme-switcher-button to display the theme options, the hidden attribute should be removed from the #theme-dropdown element ```js const themeDropdownBtn = document getElementById(\"theme-switcher-button\"); const themeDropdownEl = document getElementById(\"theme-dropdown\"); assert isTrue(themeDropdownEl hasAttribute(\"hidden\")); themeDropdownBtn dispatchEvent(new Event(\"click\")); assert isFalse(themeDropdownEl hasAttribute(\"hidden\")); ``` When the #theme-dropdown element is displayed, the aria-expanded attribute should be set to \"true\" for the button element ```js resetThemeSwitch() const themeDropdownBtn = document getElementById(\"theme-switcher-button\"); themeDropdownBtn dispatchEvent(new Event(\"click\")); assert equal(themeDropdownBtngetAttribute(\"aria-expanded\"), \"true\");\n```\nWhen the users clicks on the #theme-switcher-button while the #theme-dropdown element is displayed, the dropdown menu should be set back to hidden ```js\nresetThemeSwitch()\nconst themeDropdownBtn = document getElementById(\"theme-switcher-button\");\nconst themeDropdownEl = document getElementById(\"theme-dropdown\");\nthemeDropdownBtn dispatchEvent(new Event(\"click\"));\nassert isFalse(themeDropdownEl hasAttribute(\"hidden\"));\nthemeDropdownBtn dispatchEvent(new Event(\"click\"));\nassert isTrue(themeDropdownEl hasAttribute(\"hidden\"));\n```\nWhen the users clicks on the #theme-switcher-button while the #theme-dropdown element is displayed, the aria-expanded attribute should be set to \"false\" ```js\nresetThemeSwitch()\nconst themeDropdownBtn = document getElementById(\"theme-switcher-button\");\nthemeDropdownBtn dispatchEvent(new Event(\"click\"));\nassert equal(themeDropdownBtn getAttribute(\"aria-expanded\"), \"true\");\nthemeDropdownBtn dispatchEvent(new Event(\"click\"));\nassert equal(themeDropdownBtn getAttribute(\"aria-expanded\"), \"false\");\n```\nWhen a user clicks on the #theme-switcher-button and selects a theme, the corresponding theme-<name> class should be added to the body element ```js\nconst themeDropdownBtn = document getElementById(\"theme-switcher-button\");\nconst listItems = document querySelectorAll(\"#theme-dropdown li\");\nthemeDropdownBtn dispatchEvent(new Event(\"click\"));\nconst clickedItem = listItems[1];\nclickedItem dispatchEvent(new Event(\"click\"));\nconst expectedClass = clickedItem id;\nconst actualClass = document body className;\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15279,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-theme-switcher\\687ad7be1ff45032ccf1d92f.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "3d19af14ae7010898a41fd9f96e2c247",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-theme-switcher\\687ad7be1ff45032ccf1d92f.md",
    "source_type": "git_repo",
    "title": "Theme Switcher",
    "content": "const themeDropdownBtn = document getElementById(\"theme-switcher-button\"); themeDropdownBtn dispatchEvent(new Event(\"click\")); assert equal(themeDropdownBtn getAttribute(\"aria-expanded\"), \"true\"); themeDropdownBtn dispatchEvent(new Event(\"click\")); assert equal(themeDropdownBtn getAttribute(\"aria-expanded\"), \"false\"); ``` When a user clicks on the #theme-switcher-button and selects a theme, the corresponding theme-<name> class should be added to the body element ```js const themeDropdownBtn = document getElementById(\"theme-switcher-button\"); const listItems = document querySelectorAll(\"#theme-dropdown li\"); themeDropdownBtn dispatchEvent(new Event(\"click\")); const clickedItem = listItems[1]; clickedItem dispatchEvent(new Event(\"click\")); const expectedClass = clickedItem id; const actualClass = document body className; assertequal(actualClass, expectedClass);\n```\nWhen a user clicks the #theme-switcher-button and selects a theme, a message related to the selected theme from the themes array should be displayed in the aria-live=\"polite\" element ```js\nconst liveRegion = document querySelector('[aria-live=\"polite\"]');\nconst themeDropdownBtn = document getElementById(\"theme-switcher-button\");\nconst listItems = document querySelectorAll(\"ul li\");\nthemeDropdownBtn dispatchEvent(new Event(\"click\"));\nlistItems[1] dispatchEvent(new Event(\"click\"));\nconst selectedThemeName = listItems[1] textContent toLowerCase() trim();\nconst selectedTheme = themes find(theme => theme name === selectedThemeName);\nassert equal(liveRegion textContent, selectedTheme message);\n```\n--seed--\n--seed-contents--\n```html\nTheme Switcher\n```\n```css\nbody {\nmargin: 0;\nfont-family: sans-serif;\ntransition: background 0 3s, color 0 3s;\n}\nul {\nmargin: 0;\npadding: 0;\n}\nli {\nlist-style-type: none;\n}\nstatus {\ntext-align: center;\nmin-height: 20px;\n}\n```\njs\n--solutions--\n```html\nTheme Switcher\nSwitch Theme\nLight\nDark\nOcean\nNord\n```\n```css\nbody {\nmargin: 0;\nfont-family: sans-serif;\ntransition: background 0 3s, color 0 3s;\n}\nul {\nmargin: 0;\npadding: 0;\n}\nli {\nlist-style-type: none;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15279,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-theme-switcher\\687ad7be1ff45032ccf1d92f.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "812240a701b7b222747246f33170de6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-theme-switcher\\687ad7be1ff45032ccf1d92f.md",
    "source_type": "git_repo",
    "title": "Theme Switcher",
    "content": "Switcher ``` ```css body { margin: 0; font-family: sans-serif; transition: background 0 3s, color 0 3s; } ul { margin: 0; padding: 0; } li { list-style-type: none; } status { text-align: center; min-height: 20px; } ``` js --solutions-- ```html Theme Switcher Switch Theme Light Dark Ocean Nord ``` ```css body { margin: 0; font-family: sans-serif; transition: background 0 3s, color 0 3s; } ul { margin: 0; padding: 0; } li { list-style-type: none; }dropdown-btn {\nposition: relative;\npadding: 10px 20px;\nborder: none;\ncursor: pointer;\n} dropdown-content {\nposition: absolute;\nbackground-color: #ffffff;\nmin-width: 160px;\nbox-shadow: 0px 4px 8px rgba(0,0,0,0 2);\nz-index: 1;\n} dropdown-item {\nwidth: 100%;\npadding: 12px;\ncolor: #000000;\nbackground-color: #ffffff;\ncursor: pointer;\n} dropdown-item:hover {\nbackground-color: #f1f1f1;\n}\nstatus {\ntext-align: center;\nmin-height: 20px;\n}\n/ Themes / theme-light {\nbackground-color: #ffffff;\ncolor: #000000;\n} theme-light dropdown-btn {\nbackground-color: #d3b3aa;\ncolor: #000000;\n} theme-dark {\nbackground-color: #121212;\ncolor: #ffffff;\n} theme-dark dropdown-btn {\nbackground-color: #4f4f4f;\ncolor: #ffffff;\n} theme-ocean {\nbackground-color: #0077be;\ncolor: #e0f7fa;\n} theme-ocean dropdown-btn {\nbackground-color: #193e51;\ncolor: #ffffff;\n} theme-nord {\nbackground-color: #2e3440;\ncolor: #d8dee9;\n} theme-nord dropdown-btn {\nbackground-color: #596680;\ncolor: #ffffff;\n}\n```\n```js\nconst themes = [\n{\nname: \"light\",\nmessage: \"Hello sunshine — Light theme is on \"\n},\n{\nname: \"dark\",\nmessage: \"The night is yours — Dark theme is on",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15279,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-theme-switcher\\687ad7be1ff45032ccf1d92f.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "5335c7507df91444c48d6602695b09b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-theme-switcher\\687ad7be1ff45032ccf1d92f.md",
    "source_type": "git_repo",
    "title": "Theme Switcher",
    "content": "{ background-color: #121212; color: #ffffff; } theme-dark dropdown-btn { background-color: #4f4f4f; color: #ffffff; } theme-ocean { background-color: #0077be; color: #e0f7fa; } theme-ocean dropdown-btn { background-color: #193e51; color: #ffffff; } theme-nord { background-color: #2e3440; color: #d8dee9; } theme-nord dropdown-btn { background-color: #596680; color: #ffffff; } ``` ```js const themes = [ { name: \"light\", message: \"Hello sunshine — Light theme is on \" }, { name: \"dark\", message: \"The night is yours — Dark theme is on\"\n},\n{\nname: \"nord\",\nmessage: \"The frost has settled - Nord theme is on \"\n},\n{\nname: \"ocean\",\nmessage: \"Blue skies and high tides — Ocean theme is on \"\n},\n];\nconst setTheme = (theme) => {\ndocument body className = \"\";\ndocument body classList add(theme-${theme name});\n};\nconst updateStatus = (theme) => {\nconst status = document getElementById(\"status\");\nstatus textContent = theme message;\n};\ndocument addEventListener(\"DOMContentLoaded\", () => {\nthemes forEach((theme) => {\nconst button = document getElementById(theme-${theme name});\nif (button) {\nbutton addEventListener(\"click\", () => {\nsetTheme(theme);\nupdateStatus(theme);\ncloseMenu();\n});\n}\n});\nconst toggleButton = document getElementById(\"theme-switcher-button\");\nconst menu = document getElementById(\"theme-dropdown\");\ntoggleButton addEventListener(\"click\", () => {\nconst isExpanded = toggleButton getAttribute(\"aria-expanded\") === \"true\";\nif (isExpanded) {\ncloseMenu();\n} else {\nopenMenu();\n}\n});\nfunction closeMenu() {\nmenu setAttribute(\"hidden\", \"\");\ntoggleButton setAttribute(\"aria-expanded\", \"false\");\n}\nfunction openMenu() {\nmenu removeAttribute(\"hidden\");\ntoggleButton setAttribute(\"aria-expanded\", \"true\");\n}\n// Close the menu when clicking outside\ndocument addEventListener(\"click\", (e) => {\nif ( toggleButton contains(e target) && menu contains(e target)) {\ncloseMenu();\n}\n});\n});\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15279,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-theme-switcher\\687ad7be1ff45032ccf1d92f.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "510042ee18dc45940fdb6fe28dbe97a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-truncate-string\\ac6993d51946422351508a41.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: ac6993d51946422351508a41\ntitle: Implement the Truncate a String Algorithm\nchallengeType: 26\ndashedName: truncate-a-string\n--description--\nIn this lab, you will practice truncating a string to a certain length Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a function truncateString that accepts two arguments, the first one a string, the second one a number If the length of the string is more than the given number, the string should be truncated to reduce the length so that it is equal the given number, and should be appended at the end of the truncated string If the length of the string is equal to or lower than the given number, the string should be returned unchanged --hints--\ntruncateString(\"A-tisket a-tasket A green and yellow basket\", 8) should return the string A-tisket js\nassert strictEqual(\ntruncateString('A-tisket a-tasket A green and yellow basket', 8),\n'A-tisket '\n);\ntruncateString(\"Peter Piper picked a peck of pickled peppers\", 11) should return the string Peter Piper js\nassert strictEqual(\ntruncateString('Peter Piper picked a peck of pickled peppers', 11),\n'Peter Piper '\n);\ntruncateString(\"A-tisket a-tasket A green and yellow basket\", \"A-tisket a-tasket A green and yellow basket\" length) should return the string A-tisket a-tasket A green and yellow basket js\nassert strictEqual(\ntruncateString(\n'A-tisket a-tasket A green and yellow basket',\n'A-tisket a-tasket A green and yellow basket' length\n),\n'A-tisket a-tasket A green and yellow basket'\n);\ntruncateString(\"A-tisket a-tasket A green and yellow basket\", \"A-tisket a-tasket A green and yellow basket\" length + 2) should return the string A-tisket a-tasket A green and yellow basket js\nassert strictEqual(\ntruncateString(\n'A-tisket a-tasket A green and yellow basket',\n'A-tisket a-tasket A green and yellow basket' length + 2\n),\n'A-tisket a-tasket A green and yellow basket'\n);\ntruncateString(\"A-\", 1) should return the string A js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2569,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-truncate-string\\ac6993d51946422351508a41.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "44314ae70900fffb843ebc9ed4e74538",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-truncate-string\\ac6993d51946422351508a41.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "), 'A-tisket a-tasket A green and yellow basket' ); truncateString(\"A-tisket a-tasket A green and yellow basket\", \"A-tisket a-tasket A green and yellow basket\" length + 2) should return the string A-tisket a-tasket A green and yellow basket js assert strictEqual( truncateString( 'A-tisket a-tasket A green and yellow basket', 'A-tisket a-tasket A green and yellow basket' length + 2 ), 'A-tisket a-tasket A green and yellow basket' ); truncateString(\"A-\", 1) should return the string A js assertstrictEqual(truncateString('A-', 1), 'A ');\ntruncateString(\"Absolutely Longer\", 2) should return the string Ab js\nassert strictEqual(truncateString('Absolutely Longer', 2), 'Ab ');\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nfunction truncateString(str, num) {\nif (num >= str length) {\nreturn str;\n}\nreturn str slice(0, num) + ' ';\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2569,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-truncate-string\\ac6993d51946422351508a41.md",
      "source_type": "git_repo"
    },
    "token_count": 237,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "95e7d167481743ada6d4f49c49cb6a64",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-travel-agency-page\\669e2f60e83c011754f711f9.md",
    "source_type": "git_repo",
    "title": "Travel Agency Page",
    "content": "id: 669e2f60e83c011754f711f9\ntitle: Build a Travel Agency Page\nchallengeType: 25\ndashedName: build-a-travel-agency-page\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a DOCTYPE declaration You should have an html element with lang set to en You should have a head element containing a meta void element with charset set to utf-8 and a title with the text Travel Agency Page You should have a meta tag in your head element that contains a short description of your website for SEO You should have an h1 element to present your travel destinations You should have a paragraph below the h1 element introducing the travel opportunities You should have an h2 element with the text Packages You should have a p element introducing briefly the various packages You should have an unordered list element with two list items The two list items should have the text Group Travels and Private Tours, respectively The text of each list item should be enclosed by an anchor element You should have an h2 element with the text Top Itineraries You should have at least three figure elements, each containing an anchor element and a figcaption element The three anchor elements should have an img element with an appropriate alt attribute and a src attribute set to a valid image as their content You can use https://cdn freecodecamp org/curriculum/labs/colosseo jpg, https://cdn freecodecamp org/curriculum/labs/alps jpg, and https://cdn freecodecamp org/curriculum/labs/sea jpg if you would like All your five anchor elements should have an href attribute with the value of https://www freecodecamp org/learn and a target attribute with the value of _blank --hints--\nYour travel agency page should have a DOCTYPE html declaration js\nassert match(code, /< DOCTYPE\\s+html>/i);\nYou should have an html element with lang set to en js\nassert match(code, /<html\\s+lang\\s*=\\s*('|\")en\\1\\s*>[\\s\\S]*<\\/\\s*html\\s*>/i);\nYou should have a head element within the html element js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9942,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-travel-agency-page\\669e2f60e83c011754f711f9.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "8358a6aec8f91ff26df4bca6a5a817dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-travel-agency-page\\669e2f60e83c011754f711f9.md",
    "source_type": "git_repo",
    "title": "Travel Agency Page",
    "content": "freecodecamp org/curriculum/labs/sea jpg if you would like All your five anchor elements should have an href attribute with the value of https://www freecodecamp org/learn and a target attribute with the value of _blank --hints-- Your travel agency page should have a DOCTYPE html declaration js assert match(code, /< DOCTYPE\\s+html>/i); You should have an html element with lang set to en js assert match(code, /<html\\s+lang\\s*=\\s*('|\")en\\1\\s*>[\\s\\S]*<\\/\\s*html\\s*>/i); You should have a head element within the html element js assertmatch(\ncode,\n/<html[\\s\\S]*>[\\s\\S]*<\\s*head\\s*>[\\s\\S]*<\\/\\s*head\\s*>[\\s\\S]*<\\/\\s*html\\s*>/i\n);\nYou should have two meta elements within your head element js\nassert match(code, /<\\s*head\\s*>[\\s\\S]*(<\\s*meta[\\s\\S]*>[\\s\\S]*){2,}<\\/\\s*head\\s*>/i);\nOne meta element should have a name attribute with value of description and a non-empty content attribute js\nassert match(code,\n/<\\s*meta\\s+[^>]*name\\s*=\\s*[\"']description[\"'][^>]*content\\s*=\\s*[\"'][^\"']+ [\"'][^>]*>/i,\n);\nOne meta element should have its charset attribute set to UTF-8 js\nassert match(code, /<\\s*meta[\\s\\S]+ charset\\s*=\\s*('|\")UTF-8\\1/i);\nYou should have title element within your head element js\nassert match(\ncode,\n/<\\s*head\\s*>[\\s\\S]*<\\s*title\\s*>[\\s\\S]*<\\/\\s*title\\s*>[\\s\\S]*<\\/\\s*head\\s*>/i\n);\nYour title element should have your travel agency name js\nassert isAbove(document querySelector('title') innerText trim() length, 0);\nYou should have a body element within your html element js\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9942,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-travel-agency-page\\669e2f60e83c011754f711f9.md",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "90c708887e37868481a1ef278e738581",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-travel-agency-page\\669e2f60e83c011754f711f9.md",
    "source_type": "git_repo",
    "title": "Travel Agency Page",
    "content": "attribute with value of description and a non-empty content attribute js assert match(code, /<\\s*meta\\s+[^>]*name\\s*=\\s*[\"']description[\"'][^>]*content\\s*=\\s*[\"'][^\"']+ [\"'][^>]*>/i, ); One meta element should have its charset attribute set to UTF-8 js assert match(code, /<\\s*meta[\\s\\S]+ charset\\s*=\\s*('|\")UTF-8\\1/i); You should have title element within your head element js assert match( code, /<\\s*head\\s*>[\\s\\S]*<\\s*title\\s*>[\\s\\S]*<\\/\\s*title\\s*>[\\s\\S]*<\\/\\s*head\\s*>/i ); Your title element should have your travel agency name js assert isAbove(document querySelector('title') innerText trim() length, 0); You should have a body element within your html element js assertmatch(\ncode,\n/<\\s*html[\\s\\S]*>[\\s\\S]*<\\s*head\\s*>[\\s\\S]*<\\/\\s*head\\s*>[\\s\\S]*<\\s*body\\s*>[\\s\\S]*<\\/\\s*body\\s*>[\\s\\S]*<\\/\\s*html\\s*>/i\n);\nYou should have an h1 element to present your travel destinations js\nassert isAbove(document querySelector('h1') innerText length, 0);\nYou should only have one h1 element js\nassert lengthOf(document querySelectorAll('h1'), 1);\nYou should have a p element below the h1 element js\nassert strictEqual(\ndocument querySelector('h1') nextElementSibling tagName, 'P'\n);\nYour first p element should introduce the travel opportunities js\nassert isNotEmpty(document querySelector('p') textContent trim());\nYour first h2 element should have the text Packages js\nassert equal(document querySelectorAll('h2')[0] innerText, 'Packages');\nYou should have a p element below your first h2 element js\nassert strictEqual(\ndocument querySelector('h2') nextElementSibling tagName, 'P'\n);\nYour second p element should introduce briefly the various packages js\nassert isNotEmpty(document querySelectorAll('p') [1] textContent trim());\nYou should have an unordered list element below your second p element js\nassert strictEqual(\ndocument querySelectorAll('p') [1] nextElementSibling",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9942,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-travel-agency-page\\669e2f60e83c011754f711f9.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "ccbba96d116641c2acfb4ed871db6ef2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-travel-agency-page\\669e2f60e83c011754f711f9.md",
    "source_type": "git_repo",
    "title": "Travel Agency Page",
    "content": "assert isNotEmpty(document querySelector('p') textContent trim()); Your first h2 element should have the text Packages js assert equal(document querySelectorAll('h2')[0] innerText, 'Packages'); You should have a p element below your first h2 element js assert strictEqual( document querySelector('h2') nextElementSibling tagName, 'P' ); Your second p element should introduce briefly the various packages js assert isNotEmpty(document querySelectorAll('p') [1] textContent trim()); You should have an unordered list element below your second p element js assert strictEqual( document querySelectorAll('p') [1] nextElementSiblingtagName,\n'UL'\n);\nYou should have two items in your unordered list js\nassert lengthOf(document querySelectorAll('p + ul li'), 2);\nBoth your list items should contain an anchor element js\nconst listItems = document querySelectorAll('p + ul li');\nassert isNotEmpty(listItems);\nfor (let e of listItems) {\nassert strictEqual(e children[0] tagName, 'A');\nassert lengthOf(e children, 1);\n}\nThe anchor element of your first list item should wrap the text Group Travels js\nassert equal(document querySelectorAll('li > a')[0] innerText, 'Group Travels');\nThe anchor element of your second list item should wrap the text Private Tours js\nassert equal(document querySelectorAll('li > a')[1] innerText, 'Private Tours');\nYou should have an h2 element after your unordered list js\nassert strictEqual(\ndocument querySelectorAll('h2')[1] previousElementSibling tagName,\n'UL'\n);\nYour second h2 element should have the text Top Itineraries js\nassert equal(document querySelectorAll('h2')[1] innerText, 'Top Itineraries');\nYou should have at least three figure elements js\nassert isAtLeast(document querySelectorAll('figure') length, 3);\nEach figure element should contain an anchor element as its first child js\nconst figures = document querySelectorAll('figure');\nassert isNotEmpty(figures);\nfor (let figure of figures) {\nassert equal(figure children[0] tagName, 'A');\n}\nEach figure element should contain a figcaption element as its second child js\nconst figures = document querySelectorAll('figure');\nassert isNotEmpty(figures);\nfor (let figure of figures) {\nassert equal(figure children[1]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9942,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-travel-agency-page\\669e2f60e83c011754f711f9.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "c4f20cfa149a94caaf2019b305a39e74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-travel-agency-page\\669e2f60e83c011754f711f9.md",
    "source_type": "git_repo",
    "title": "Travel Agency Page",
    "content": "Itineraries'); You should have at least three figure elements js assert isAtLeast(document querySelectorAll('figure') length, 3); Each figure element should contain an anchor element as its first child js const figures = document querySelectorAll('figure'); assert isNotEmpty(figures); for (let figure of figures) { assert equal(figure children[0] tagName, 'A'); } Each figure element should contain a figcaption element as its second child js const figures = document querySelectorAll('figure'); assert isNotEmpty(figures); for (let figure of figures) { assert equal(figure children[1]tagName, 'FIGCAPTION');\n}\nEach figcaption should contain some text js\nconst figcaptionEls = document querySelectorAll('figcaption');\nassert isNotEmpty(figcaptionEls);\nfigcaptionEls forEach((figcaption => assert isNotEmpty(figcaption innerText)));\nEach of the a elements that are children of your figure elements should contain an image js\nconst anchors = document querySelectorAll('figure > a');\nassert isNotEmpty(anchors);\nfor (let anchor of anchors) {\nassert equal(anchor children[0] tagName, 'IMG');\n}\nEach img element should have a valid src attribute js\nconst images = document querySelectorAll('img');\nassert isNotEmpty(images);\nfor (let image of images) {\nassert isAbove(image src trim() length, 0);\n}\nEach img element should have an alt attribute with an appropriate value js\nconst images = document querySelectorAll('img');\nassert isNotEmpty(images);\nfor (let image of images) {\nassert isAbove(image alt trim() length, 0);\n}\nEach a element should have an href attribute with the value of https://www freecodecamp org/learn Don't forget the links in the list items js\nconst anchors = document querySelectorAll('a');\nassert isNotEmpty(anchors);\nfor (let anchor of anchors) {\nassert equal(anchor href, 'https://www freecodecamp org/learn');\n}\nEach a element should have a target attribute with the value of _blank Don't forget the links in the list items js\nconst anchors = document querySelectorAll('a');\nassert isNotEmpty(anchors);\nfor (let anchor of anchors) {\nassert equal(anchor target, '_blank');\n}\n--seed--\n--seed-contents--\n```html\n```\n--solutions--\n```html\nTravel Agency Page\nDiscover Italy\nArt, folklore, food, nature, and more",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9942,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-travel-agency-page\\669e2f60e83c011754f711f9.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "143048d244ee8dc2517644ae7631cafc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-travel-agency-page\\669e2f60e83c011754f711f9.md",
    "source_type": "git_repo",
    "title": "Travel Agency Page",
    "content": "anchors = document querySelectorAll('a'); assert isNotEmpty(anchors); for (let anchor of anchors) { assert equal(anchor href, 'https://www freecodecamp org/learn'); } Each a element should have a target attribute with the value of _blank Don't forget the links in the list items js const anchors = document querySelectorAll('a'); assert isNotEmpty(anchors); for (let anchor of anchors) { assert equal(anchor target, '_blank'); } --seed-- --seed-contents-- ```html ``` --solutions-- ```html Travel Agency Page Discover Italy Art, folklore, food, nature, and moreChoose among our wide selection of\nguided tours and excursions, and live an unforgettable experience\nexploring Italy Packages\nWe offer an extensive range of holiday solutions to accommodate the needs\nof all our clients From daily excursions in the most beautiful cities, to\nthorough tours of hidden villages and medieval towns to discover Italy's\nlesser-known sides Group Travels\nPrivate Tours\nTop Itineraries\nRome and Center Italy\nNature and National Parks\nSouth Italy and Islands\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9942,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-travel-agency-page\\669e2f60e83c011754f711f9.md",
      "source_type": "git_repo"
    },
    "token_count": 230,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "7476bc975da135875e565592a9287e5a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tribute-page\\bd7158d8c442eddfaeb5bd18.md",
    "source_type": "git_repo",
    "title": "Tribute Page",
    "content": "id: bd7158d8c442eddfaeb5bd18\ntitle: Build a Tribute Page\nchallengeType: 25\ndemoType: onClick\ndashedName: build-a-tribute-page\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYour tribute page should have a main element with a corresponding id of main, which contains all other elements You should see an element with an id of title, which contains a string (i e text), that describes the subject of the tribute page (e g \"Dr Norman Borlaug\") You should see either a figure or a div element with an id of img-div Within the #img-div element, you should see an img element with a corresponding id=\"image\" Within the #img-div element, you should see an element with a corresponding id=\"img-caption\" that contains textual content describing the image shown in #img-div You should see an element with a corresponding id=\"tribute-info\", which contains textual content describing the subject of the tribute page You should see an a element with a corresponding id=\"tribute-link\", which links to an outside site, that contains additional information about the subject of the tribute page HINT: You must give your element an attribute of target and set it to _blank in order for your link to open in a new tab Your #image should use max-width and height properties to resize responsively, relative to the width of its parent element, without exceeding its original size Your img element should be centered within its parent element Note: Be sure to link your stylesheet in your HTML and apply your CSS --hints--\nYou should have a main element with an id of main js\nconst el = document getElementById('main');\nassert isNotNull(el);\nassert strictEqual(el tagName, 'MAIN');\nYour #img-div, #image, #img-caption, #tribute-info, and #tribute-link should all be descendants of #main js\nconst el1 = document querySelector('#main #img-div');\nconst el2 = document querySelector('#main #image');\nconst el3 = document querySelector('#main #img-caption');\nconst el4 = document querySelector('#main #tribute-info');\nconst el5 = document querySelector('#main #tribute-link');\nassert isNotNull(el1);\nassert isNotNull(el2);\nassert isNotNull(el3);\nassert isNotNull(el4);\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13097,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tribute-page\\bd7158d8c442eddfaeb5bd18.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "f1e76e8592c105c1816a67f65dcdb029",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tribute-page\\bd7158d8c442eddfaeb5bd18.md",
    "source_type": "git_repo",
    "title": "Tribute Page",
    "content": "You should have a main element with an id of main js const el = document getElementById('main'); assert isNotNull(el); assert strictEqual(el tagName, 'MAIN'); Your #img-div, #image, #img-caption, #tribute-info, and #tribute-link should all be descendants of #main js const el1 = document querySelector('#main #img-div'); const el2 = document querySelector('#main #image'); const el3 = document querySelector('#main #img-caption'); const el4 = document querySelector('#main #tribute-info'); const el5 = document querySelector('#main #tribute-link'); assert isNotNull(el1); assert isNotNull(el2); assert isNotNull(el3); assert isNotNull(el4); assertisNotNull(el5);\nYou should have an element with an id of title js\nconst el = document getElementById('title');\nassert isNotNull(el);\nYour #title should not be empty js\nconst el = document getElementById('title');\nassert isNotNull(el);\nassert isNotEmpty(el innerText, 0);\nYou should have a figure or div element with an id of img-div js\nconst el = document getElementById('img-div');\nassert isNotNull(el);\nassert isTrue(el tagName === 'DIV' || el tagName === 'FIGURE');\nYou should have an img element with an id of image js\nconst el = document getElementById('image');\nassert isNotNull(el);\nassert strictEqual(el tagName, 'IMG');\nYour #image should be a descendant of #img-div js\nconst el = document querySelector('#img-div #image');\nassert isNotNull(el);\nYou should have a figcaption or div element with an id of img-caption js\nconst el = document getElementById('img-caption');\nassert isNotNull(el);\nassert isTrue(el tagName === 'DIV' || el tagName === 'FIGCAPTION');\nYour #img-caption should be a descendant of #img-div js\nconst el = document querySelector('#img-div #img-caption');\nassert isNotNull(el);\nYour #img-caption should not be empty js\nconst el = document getElementById('img-caption');\nassert isNotNull(el);\nassert isNotEmpty(el innerText);\nYou should have an element with an id of tribute-info js\nconst el = document getElementById('tribute-info');\nassert isNotNull(el);\nYour #tribute-info should not be empty js\nconst el = document getElementById('tribute-info');\nassert isNotNull(el);\nassert isNotEmpty(el",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13097,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tribute-page\\bd7158d8c442eddfaeb5bd18.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "7e7720eb82e3ee9f70ce0b7f703792c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tribute-page\\bd7158d8c442eddfaeb5bd18.md",
    "source_type": "git_repo",
    "title": "Tribute Page",
    "content": "tagName === 'DIV' || el tagName === 'FIGCAPTION'); Your #img-caption should be a descendant of #img-div js const el = document querySelector('#img-div #img-caption'); assert isNotNull(el); Your #img-caption should not be empty js const el = document getElementById('img-caption'); assert isNotNull(el); assert isNotEmpty(el innerText); You should have an element with an id of tribute-info js const el = document getElementById('tribute-info'); assert isNotNull(el); Your #tribute-info should not be empty js const el = document getElementById('tribute-info'); assert isNotNull(el); assert isNotEmpty(elinnerText);\nYou should have an a element with an id of tribute-link js\nconst el = document getElementById('tribute-link');\nassert isNotNull(el);\nassert strictEqual(el tagName, 'A');\nYour #tribute-link should have an href attribute and value js\nconst el = document getElementById('tribute-link');\nassert isNotNull(el);\nassert isNotNull(el href);\nassert isNotEmpty(el href);\nYour #tribute-link should have a target attribute set to _blank js\nconst el = document getElementById('tribute-link');\nassert isNotNull(el);\nassert strictEqual(el target, '_blank');\nYour img element should have a display of block js\nconst img = document getElementById('image');\nconst imgStyle = window getComputedStyle(img);\nconst style = imgStyle getPropertyValue('display');\nassert strictEqual(style, 'block');\nYour #image should have a max-width of 100% js\nconst img = document getElementById('image');\nconst imgStyle = window getComputedStyle(img);\nconst style = imgStyle getPropertyValue('max-width');\nassert strictEqual(style, '100%');\nYour #image should have a height of auto js\n// taken from the testable-projects repo\nconst img = document getElementById('image');\nconst imgStyle = window getComputedStyle(img);\nconst oldDisplayValue = imgStyle getPropertyValue('display');\nconst oldDisplayPriority = imgStyle getPropertyPriority('display');\nimg style setProperty('display', 'none', 'important');\nconst heightValue = imgStyle getPropertyValue('height');\nimg style setProperty('display', oldDisplayValue, oldDisplayPriority);\nassert strictEqual(heightValue, 'auto');\nYour #image should be centered within its parent js\n// taken from the testable-projects repo\nconst img = document getElementById('image'),\nimgParent = img parentElement,\nimgLeft = img",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13097,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tribute-page\\bd7158d8c442eddfaeb5bd18.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "1f7c8d941d8cd7999afcec996f66e919",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tribute-page\\bd7158d8c442eddfaeb5bd18.md",
    "source_type": "git_repo",
    "title": "Tribute Page",
    "content": "a height of auto js // taken from the testable-projects repo const img = document getElementById('image'); const imgStyle = window getComputedStyle(img); const oldDisplayValue = imgStyle getPropertyValue('display'); const oldDisplayPriority = imgStyle getPropertyPriority('display'); img style setProperty('display', 'none', 'important'); const heightValue = imgStyle getPropertyValue('height'); img style setProperty('display', oldDisplayValue, oldDisplayPriority); assert strictEqual(heightValue, 'auto'); Your #image should be centered within its parent js // taken from the testable-projects repo const img = document getElementById('image'), imgParent = img parentElement, imgLeft = imggetBoundingClientRect() left,\nimgRight = img getBoundingClientRect() right,\nparentLeft = imgParent getBoundingClientRect() left,\nparentRight = imgParent getBoundingClientRect() right,\nleftMargin = imgLeft - parentLeft,\nrightMargin = parentRight - imgRight;\nassert isBelow(leftMargin - rightMargin, 6);\nassert isBelow(rightMargin - leftMargin, 6);\n--seed--\n--seed-contents--\n```html\nTribute Page\n```\n```css\n```\n--solutions--\n```html\nDr Norman Borlaug\nThe man who saved a billion lives\nDr Norman Borlaug, third from the left, trains biologists in Mexico\non how to increase wheat yields - part of his life-long war on hunger Here's a time line of Dr Borlaug's life:\n1914 - Born in Cresco, Iowa\n1933 - Leaves his family's farm to attend the\nUniversity of Minnesota, thanks to a Depression era program known as\nthe \"National Youth Administration\"\n1935 - Has to stop school and save up more money Works in the Civilian Conservation Corps, helping starving\nAmericans \"I saw how food changed them\", he said \"All of this left\nscars on me \"\n1937 - Finishes university and takes a job in the\nUS Forestry Service\n1938 - Marries wife of 69 years Margret Gibson Gets laid off due to budget cuts Inspired by Elvin Charles Stakman,\nhe returns to school study under Stakman, who teaches him about\nbreeding pest-resistant plants 1941 - Tries to enroll in the military after the\nPearl Harbor attack, but is rejected",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13097,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tribute-page\\bd7158d8c442eddfaeb5bd18.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "aac278b1ddb37644550bd38b04eb73b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tribute-page\\bd7158d8c442eddfaeb5bd18.md",
    "source_type": "git_repo",
    "title": "Tribute Page",
    "content": "changed them\", he said \"All of this left scars on me \" 1937 - Finishes university and takes a job in the US Forestry Service 1938 - Marries wife of 69 years Margret Gibson Gets laid off due to budget cuts Inspired by Elvin Charles Stakman, he returns to school study under Stakman, who teaches him about breeding pest-resistant plants 1941 - Tries to enroll in the military after the Pearl Harbor attack, but is rejectedInstead, the military asked\nhis lab to work on waterproof glue, DDT to control malaria,\ndisinfectants, and other applied science 1942 - Receives a Ph D in Genetics and Plant\nPathology\n1944 - Rejects a 100% salary increase from Dupont,\nleaves behind his pregnant wife, and flies to Mexico to head a new\nplant pathology program Over the next 16 years, his team breeds\n6,000 different strains of disease resistant wheat - including\ndifferent varieties for each major climate on Earth 1945 - Discovers a way to grown wheat twice each\nseason, doubling wheat yields\n1953 - crosses a short, sturdy dwarf breed of wheat\nwith a high-yielding American breed, creating a strain that responds\nwell to fertilizer It goes on to provide 95% of Mexico's wheat 1962 - Visits Delhi and brings his high-yielding\nstrains of wheat to the Indian subcontinent in time to help mitigate\nmass starvation due to a rapidly expanding population\n1970 - receives the Nobel Peace Prize\n1983 - helps seven African countries dramatically\nincrease their maize and sorghum yields\n1984 - becomes a distinguished professor at Texas\nA&M University\n2005 - states \"we will have to double the world\nfood supply by 2050 \" Argues that genetically modified crops are the\nonly way we can meet the demand, as we run out of arable land Says\nthat GM crops are not inherently dangerous because \"we've been\ngenetically modifying plants and animals for a long time Long\nbefore we called it science, people were selecting the best breeds \"\n2009 - dies at the age of 95 \"Borlaug's life and achievement are testimony to the far-reaching\ncontribution that one man's towering intellect, persistence and\nscientific vision can make to human peace and progress",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13097,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tribute-page\\bd7158d8c442eddfaeb5bd18.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "652dcd0d313d4e2b3df16fc47294ef84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tribute-page\\bd7158d8c442eddfaeb5bd18.md",
    "source_type": "git_repo",
    "title": "Tribute Page",
    "content": "the demand, as we run out of arable land Says that GM crops are not inherently dangerous because \"we've been genetically modifying plants and animals for a long time Long before we called it science, people were selecting the best breeds \" 2009 - dies at the age of 95 \"Borlaug's life and achievement are testimony to the far-reaching contribution that one man's towering intellect, persistence and scientific vision can make to human peace and progress\"\n-- Indian Prime Minister Manmohan Singh\nIf you have time, you should read more about this incredible human\nbeing on his\nWikipedia entry ```\n```css\nhtml {\n/ Setting a base font size of 10px give us easier rem calculations\nInfo: 1rem === 10px, 1 5rem === 15px, 2rem === 20px and so forth\n/\nfont-size: 10px;\n}\nbody {\n/ Native font stack https://getbootstrap com/docs/4 2/content/reboot/#native-font-stack /\nfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n'Helvetica Neue', Arial, sans-serif;\nfont-size: 1 6rem;\nline-height: 1 5;\ntext-align: center;\ncolor: #333;\nmargin: 0;\n}\nh1 {\nfont-size: 4rem;\nmargin-bottom: 0;\n}\n@media (max-width: 460px) {\nh1 {\nfont-size: 3 5rem;\nline-height: 1 2;\n}\n}\nh2 {\nfont-size: 3 25rem;\n}\na {\ncolor: #477ca7;\n}\na:visited {\ncolor: #74638f;\n}\nmain {\nmargin: 30px 8px;\npadding: 15px;\nborder-radius: 5px;\nbackground: #eee;\n}\n@media (max-width: 460px) {\n#main {\nmargin: 0;\n}\n}\nimg {\nmax-width: 100%;\ndisplay: block;\nheight: auto;\nmargin: 0 auto;\n}\nimg-div {\nbackground: white;\npadding: 10px;\nmargin: 0;\n}\nimg-caption {\nmargin: 15px 0 5px 0;\n}\n@media (max-width: 460px) {\n#img-caption {\nfont-size: 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13097,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tribute-page\\bd7158d8c442eddfaeb5bd18.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "966b185e131266df23c87bc3ce4e9754",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tribute-page\\bd7158d8c442eddfaeb5bd18.md",
    "source_type": "git_repo",
    "title": "Tribute Page",
    "content": "} h2 { font-size: 3 25rem; } a { color: #477ca7; } a:visited { color: #74638f; } main { margin: 30px 8px; padding: 15px; border-radius: 5px; background: #eee; } @media (max-width: 460px) { #main { margin: 0; } } img { max-width: 100%; display: block; height: auto; margin: 0 auto; } img-div { background: white; padding: 10px; margin: 0; } img-caption { margin: 15px 0 5px 0; } @media (max-width: 460px) { #img-caption { font-size: 14rem;\n}\n}\nheadline {\nmargin: 50px 0;\ntext-align: center;\n}\nul {\nmax-width: 550px;\nmargin: 0 auto 50px auto;\ntext-align: left;\nline-height: 1 6;\n}\nli {\nmargin: 16px 0;\n}\nblockquote {\nfont-style: italic;\nmax-width: 545px;\nmargin: 0 auto 50px auto;\ntext-align: left;\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13097,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tribute-page\\bd7158d8c442eddfaeb5bd18.md",
      "source_type": "git_repo"
    },
    "token_count": 261,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "b51c1dfbf6c5a6950519a6f46732305a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-video-compilation-page\\669e81368e52b3a5c35a2dc5.md",
    "source_type": "git_repo",
    "title": "Video Compilation Page",
    "content": "id: 669e81368e52b3a5c35a2dc5\ntitle: Build a Video Compilation Page\nchallengeType: 25\ndashedName: build-a-video-compilation-page\ndemoType: onClick\n--description--\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a main element as the only child of the body element You should have an h1 element with the topic of your page You should have a paragraph introducing the topic of your page below your h1 element You should have three section elements below your first paragraph Each section should contain an h2 element, a paragraph, and an iframe element, in this order The three iframe elements should have a src attribute set to a valid video Each iframe element should also have a title attribute to describe the embedded content, and a height attribute and a width attribute to set the element to a proper size --hints--\nYou should have a main element inside your body element js\nassert equal(document querySelector('body :first-child') tagName, 'MAIN');\nYour main element should be the only child of the body element js\nassert equal(document querySelector('body') children length, 1);\nYou should have an h1 element with the topic of your page inside the main element js\nassert isAbove(document querySelector('h1') innerText length, 0);\nYou should have a paragraph introducing the topic of your page below your h1 element js\nconst p = document querySelectorAll('p')[0];\nassert equal(p previousElementSibling tagName, 'H1');\nassert isAbove(p innerText length, 0);\nYou should have three section elements below your first p element js\nassert equal(document querySelectorAll('section') length, 3);\nassert equal(document querySelectorAll('section')[0] previousElementSibling tagName, 'P')\nEach section element should start with an h2 element that serves as the title for that section js\nconst sections = document querySelectorAll('section');\nassert equal(sections length, 3)\nfor (let section of sections) {\nassert equal(section children[0] tagName, 'H2');\nassert isAbove(section children[0] innerText length, 0);\n}\nEach section element should contain a p element to introduce the video content as its second child js\nconst sections = document querySelectorAll('section');\nassert equal(sections length, 3)\nfor (let section of sections) {\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7920,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-video-compilation-page\\669e81368e52b3a5c35a2dc5.md",
      "source_type": "git_repo"
    },
    "token_count": 510,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "0ed56ed30135af40845ed9799add56ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-video-compilation-page\\669e81368e52b3a5c35a2dc5.md",
    "source_type": "git_repo",
    "title": "Video Compilation Page",
    "content": "should start with an h2 element that serves as the title for that section js const sections = document querySelectorAll('section'); assert equal(sections length, 3) for (let section of sections) { assert equal(section children[0] tagName, 'H2'); assert isAbove(section children[0] innerText length, 0); } Each section element should contain a p element to introduce the video content as its second child js const sections = document querySelectorAll('section'); assert equal(sections length, 3) for (let section of sections) { assertequal(section children[1] tagName, 'P');\nassert isAbove(section children[1] innerText length, 0);\n}\nEach section element should contain an iframe element as its third child js\nconst sections = document querySelectorAll('section');\nassert equal(sections length, 3)\nfor (let section of sections) {\nassert equal(section children[2] tagName, 'IFRAME');\n}\nYour first iframe element should have a src attribute set to a valid video js\nassert isAbove(document querySelectorAll('iframe')[0] src length, 0)\nYour first iframe element should have a title attribute to describe the embedded content js\nassert isAbove(document querySelectorAll('iframe')[0] title length, 0)\nYour first iframe element should have a height attribute js\nassert isAbove(document querySelectorAll('iframe')[0] height length, 0)\nYour first iframe element should have a width attribute js\nassert isAbove(document querySelectorAll('iframe')[0] width length, 0)\nYour second iframe element should have a src attribute set to a valid video js\nassert isAbove(document querySelectorAll('iframe')[1] src length, 0)\nYour second iframe element should have a title attribute to describe the embedded content js\nassert isAbove(document querySelectorAll('iframe')[1] title length, 0)\nYour second iframe element should have a height attribute js\nassert isAbove(document querySelectorAll('iframe')[1] height length, 0)\nYour second iframe element should have a width attribute js\nassert isAbove(document querySelectorAll('iframe')[1] width length, 0)\nYour third iframe element should have a src attribute set to a valid video js\nassert isAbove(document querySelectorAll('iframe')[2] src length, 0)\nYour third iframe element should have a title attribute to describe the embedded content js\nassert isAbove(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7920,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-video-compilation-page\\669e81368e52b3a5c35a2dc5.md",
      "source_type": "git_repo"
    },
    "token_count": 507,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "16f9f3a620cb8223f68c51b3e5cb40c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-video-compilation-page\\669e81368e52b3a5c35a2dc5.md",
    "source_type": "git_repo",
    "title": "Video Compilation Page",
    "content": "assert isAbove(document querySelectorAll('iframe')[1] title length, 0) Your second iframe element should have a height attribute js assert isAbove(document querySelectorAll('iframe')[1] height length, 0) Your second iframe element should have a width attribute js assert isAbove(document querySelectorAll('iframe')[1] width length, 0) Your third iframe element should have a src attribute set to a valid video js assert isAbove(document querySelectorAll('iframe')[2] src length, 0) Your third iframe element should have a title attribute to describe the embedded content js assert isAbove(documentquerySelectorAll('iframe')[2] title length, 0)\nYour third iframe element should have a height attribute js\nassert isAbove(document querySelectorAll('iframe')[2] height length, 0)\nYour third iframe element should have a width attribute js\nassert isAbove(document querySelectorAll('iframe')[2] width length, 0)\n--seed--\n--seed-contents--\n```html\nVideo Compilation Page\n```\n--solutions--\n```html\nVideo Compilation Page\nFront End Web Development\nFront End Web Development involves designing and building user interfaces of websites using HTML, CSS, and\nJavaScript It focuses on creating visually appealing, interactive, and user-friendly websites Front End\ndevelopers\nensure accessibility, performance optimization, and\nadherence to web standards, blending creativity with technical expertise HTML\nHTML, or HyperText Markup Language, forms the backbone of web pages by defining their basic structure and\nlayout It uses a series of elements to display text, images, lists, tables, and other static content on\na web page CSS\nCSS, or Cascading Style Sheets, is used to control the visual presentation of HTML elements on a web\npage It allows for customized styling, including colors, fonts, layouts, and spacing, making websites\nvisually appealing CSS also supports responsive design, ensuring web pages look good on\nall devices JavaScript\nJavaScript is a programming language that adds interactivity to static web pages, enabling dynamic\ncontent updates, form validations, animations, and responsive behaviors based on user interactions and\nevents ```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7920,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-video-compilation-page\\669e81368e52b3a5c35a2dc5.md",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "6fe064310d05b023111dc4268ef229d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tower-of-hanoi\\68773ee26f332a80bc0295db.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68773ee26f332a80bc0295db\ntitle: Implement the Tower of Hanoi Algorithm\nchallengeType: 23\ndashedName: implement-the-tower-of-hanoi-algorithm\n--description--\nIn this lab, you will solve the mathematical puzzle known as the Tower of Hanoi The puzzle consists of three rods and a number of disks of different diameters The puzzle starts with the disks piled up on the first rod, in decreasing size, with the smallest disk on top and the largest disk on the bottom The goal of the Tower of Hanoi puzzle is moving all the disks to the last rod To do that, you must follow three simple rules:\nYou can move only top-most disks You can move only one disk at a time You cannot place larger disks on top of smaller ones Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a function named hanoi_solver that takes an integer representing the total number of disks of the puzzle as the argument The hanoi_solver function should solve the puzzle following the given rules in 2n - 1 moves, where n is the total number of disks The hanoi_solver function should return a string with all the moves taken to solve the puzzle, including the starting arrangement, with each move on a new line Rods should be represented as lists of integers, (the smallest disk is represented by the number 1) with each rod separated by a space For example, hanoi_solver(3) should return the following:\nmd\n[3, 2, 1] [] []\n[3, 2] [] [1]\n[3] [2] [1]\n[3] [2, 1] []\n[] [2, 1] [3]\n[1] [2] [3]\n[1] [] [3, 2]\n[] [] [3, 2, 1]\n--hints--\nYou should have a function named hanoi_solver js\n({ test: () => assert(runPython(`_Node(_code) has_function('hanoi_solver')`)) })\nYour hanoi_solver function should take a single argument js\n({ test: () => runPython(`\nimport inspect\nsig = inspect signature(hanoi_solver)\nassert len(sig parameters) == 1\n`) })\nYour hanoi_solver function should return a string",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 33416,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tower-of-hanoi\\68773ee26f332a80bc0295db.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "4dcad01e7bd417cdae49a16382dce2f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tower-of-hanoi\\68773ee26f332a80bc0295db.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "2] [] [1] [3] [2] [1] [3] [2, 1] [] [] [2, 1] [3] [1] [2] [3] [1] [] [3, 2] [] [] [3, 2, 1] --hints-- You should have a function named hanoi_solver js ({ test: () => assert(runPython(`_Node(_code) has_function('hanoi_solver')`)) }) Your hanoi_solver function should take a single argument js ({ test: () => runPython(` import inspect sig = inspect signature(hanoi_solver) assert len(sig parameters) == 1 `) }) Your hanoi_solver function should return a stringjs\n({ test: () => runPython(`\nassert isinstance(hanoi_solver(2), str)\nassert isinstance(hanoi_solver(6), str)\nassert isinstance(hanoi_solver(11), str)\n`) })\nhanoi_solver(2) should return [2, 1] [] []\\n[2] [1] []\\n[] [1] [2]\\n\n[] [] [2, 1] js\n({ test: () => runPython(`\nexpected = \"\"\"[2, 1] [] []\n[2] [1] []\n[] [1] [2]\n[] [] [2, 1]\"\"\"\nassert hanoi_solver(2) == expected\n`) })\nhanoi_solver(3) should return [3, 2, 1] [] []\\n[3, 2] [] [1]\\n[3] [2] [1]\\n[3] [2, 1] []\\n[] [2, 1] [3]\\n[1] [2] [3]\\n[1] [] [3, 2]\\n[] [] [3, 2, 1]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 33416,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tower-of-hanoi\\68773ee26f332a80bc0295db.md",
      "source_type": "git_repo"
    },
    "token_count": 390,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "cf38220e29853a30ca9c76cc4a8fe36c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tower-of-hanoi\\68773ee26f332a80bc0295db.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "assert isinstance(hanoi_solver(11), str) `) }) hanoi_solver(2) should return [2, 1] [] []\\n[2] [1] []\\n[] [1] [2]\\n [] [] [2, 1] js ({ test: () => runPython(` expected = \"\"\"[2, 1] [] [] [2] [1] [] [] [1] [2] [] [] [2, 1]\"\"\" assert hanoi_solver(2) == expected `) }) hanoi_solver(3) should return [3, 2, 1] [] []\\n[3, 2] [] [1]\\n[3] [2] [1]\\n[3] [2, 1] []\\n[] [2, 1] [3]\\n[1] [2] [3]\\n[1] [] [3, 2]\\n[] [] [3, 2, 1]js\n({ test: () => runPython(`\nexpected = \"\"\"[3, 2, 1] [] []\n[3, 2] [] [1]\n[3] [2] [1]\n[3] [2, 1] []\n[] [2, 1] [3]\n[1] [2] [3]\n[1] [] [3, 2]\n[] [] [3, 2, 1]\"\"\"\nassert hanoi_solver(3) == expected\n`) })\nhanoi_solver(4) should return [4, 3, 2, 1] [] []\\n[4, 3, 2] [1] []\\n[4, 3] [1] [2]\\n[4, 3] [] [2, 1]\\n[4] [3] [2, 1]\\n[4, 1] [3] [2]\\n[4, 1] [3, 2] []\\n[4] [3, 2, 1] []\\n[] [3, 2, 1] [4]\\n[] [3, 2] [4, 1]\\n[2] [3] [4, 1]\\n[2, 1] [3] [4]\\n[2, 1] [] [4, 3]\\n[2] [1] [4, 3]\\n[] [1] [4, 3, 2]\\n[] [] [4, 3, 2, 1]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 33416,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tower-of-hanoi\\68773ee26f332a80bc0295db.md",
      "source_type": "git_repo"
    },
    "token_count": 545,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "5c2e944ae07cc836d638d42b77a5b09d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tower-of-hanoi\\68773ee26f332a80bc0295db.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "2] [] [] [3, 2, 1]\"\"\" assert hanoi_solver(3) == expected `) }) hanoi_solver(4) should return [4, 3, 2, 1] [] []\\n[4, 3, 2] [1] []\\n[4, 3] [1] [2]\\n[4, 3] [] [2, 1]\\n[4] [3] [2, 1]\\n[4, 1] [3] [2]\\n[4, 1] [3, 2] []\\n[4] [3, 2, 1] []\\n[] [3, 2, 1] [4]\\n[] [3, 2] [4, 1]\\n[2] [3] [4, 1]\\n[2, 1] [3] [4]\\n[2, 1] [] [4, 3]\\n[2] [1] [4, 3]\\n[] [1] [4, 3, 2]\\n[] [] [4, 3, 2, 1]js\n({ test: () => runPython(`\nexpected = \"\"\"[4, 3, 2, 1] [] []\n[4, 3, 2] [1] []\n[4, 3] [1] [2]\n[4, 3] [] [2, 1]\n[4] [3] [2, 1]\n[4, 1] [3] [2]\n[4, 1] [3, 2] []\n[4] [3, 2, 1] []\n[] [3, 2, 1] [4]\n[] [3, 2] [4, 1]\n[2] [3] [4, 1]\n[2, 1] [3] [4]\n[2, 1] [] [4, 3]\n[2] [1] [4, 3]\n[] [1] [4, 3, 2]\n[] [] [4, 3, 2, 1]\"\"\"\nassert hanoi_solver(4) == expected\n`) })\nhanoi_solver(5) should return [5, 4, 3, 2, 1] [] []\\n[5, 4, 3, 2] [] [1]\\n[5, 4, 3] [2] [1]\\n[5, 4, 3] [2, 1] []\\n[5, 4] [2, 1] [3]\\n[5, 4, 1] [2] [3]\\n[5, 4, 1] [] [3, 2]\\n[5, 4] [] [3, 2, 1]\\n[5] [4] [3, 2, 1]\\n[5] [4, 1] [3, 2]\\n[5, 2] [4, 1] [3]\\n[5, 2, 1] [4] [3]\\n[5, 2, 1] [4, 3] []\\n[5, 2] [4, 3] [1]\\n[5] [4, 3, 2] [1]\\n[5] [4, 3, 2, 1] []\\n[] [4, 3, 2, 1] [5]\\n[1] [4, 3, 2] [5]\\n[1] [4, 3] [5, 2]\\n[] [4, 3] [5, 2, 1]\\n[3] [4] [5, 2, 1]\\n[3] [4, 1] [5, 2]\\n[3, 2] [4, 1] [5]\\n[3, 2, 1] [4] [5]\\n[3, 2, 1] [] [5, 4]\\n[3, 2] [] [5, 4, 1]\\n[3] [2] [5, 4, 1]\\n[3] [2, 1] [5, 4]\\n[] [2, 1] [5, 4, 3]\\n[1] [2] [5, 4, 3]\\n[1] [] [5, 4, 3, 2]\\n[] [] [5, 4, 3, 2, 1]",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 33416,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tower-of-hanoi\\68773ee26f332a80bc0295db.md",
      "source_type": "git_repo"
    },
    "token_count": 1026,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "d25a4b483e5a552d42aec2c3c69f7e67",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tower-of-hanoi\\68773ee26f332a80bc0295db.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "3, 2, 1] []\\n[] [4, 3, 2, 1] [5]\\n[1] [4, 3, 2] [5]\\n[1] [4, 3] [5, 2]\\n[] [4, 3] [5, 2, 1]\\n[3] [4] [5, 2, 1]\\n[3] [4, 1] [5, 2]\\n[3, 2] [4, 1] [5]\\n[3, 2, 1] [4] [5]\\n[3, 2, 1] [] [5, 4]\\n[3, 2] [] [5, 4, 1]\\n[3] [2] [5, 4, 1]\\n[3] [2, 1] [5, 4]\\n[] [2, 1] [5, 4, 3]\\n[1] [2] [5, 4, 3]\\n[1] [] [5, 4, 3, 2]\\n[] [] [5, 4, 3, 2, 1]js\n({ test: () => runPython(`\nexpected = \"\"\"[5, 4, 3, 2, 1] [] []\n[5, 4, 3, 2] [] [1]\n[5, 4, 3] [2] [1]\n[5, 4, 3] [2, 1] []\n[5, 4] [2, 1] [3]\n[5, 4, 1] [2] [3]\n[5, 4, 1] [] [3, 2]\n[5, 4] [] [3, 2, 1]\n[5] [4] [3, 2, 1]\n[5] [4, 1] [3, 2]\n[5, 2] [4, 1] [3]\n[5, 2, 1] [4] [3]\n[5, 2, 1] [4, 3] []\n[5, 2] [4, 3] [1]\n[5] [4, 3, 2] [1]\n[5] [4, 3, 2, 1] []\n[] [4, 3, 2, 1] [5]\n[1] [4, 3, 2] [5]\n[1] [4, 3] [5, 2]\n[] [4, 3] [5, 2, 1]\n[3] [4] [5, 2, 1]\n[3] [4, 1] [5, 2]\n[3, 2] [4, 1] [5]\n[3, 2, 1] [4] [5]\n[3, 2, 1] [] [5, 4]\n[3, 2] [] [5, 4, 1]\n[3] [2] [5, 4, 1]\n[3] [2, 1] [5, 4]\n[] [2, 1] [5, 4, 3]\n[1] [2] [5, 4, 3]\n[1] [] [5, 4, 3, 2]\n[] [] [5, 4, 3, 2, 1]\"\"\"\nassert hanoi_solver(5) == expected\n`) })\nhanoi_solver(n) should solve the tower of Hanoi puzzle for any positive value of n",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 33416,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tower-of-hanoi\\68773ee26f332a80bc0295db.md",
      "source_type": "git_repo"
    },
    "token_count": 815,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "1dc43b00c031daae71d9a66772ee87c6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tower-of-hanoi\\68773ee26f332a80bc0295db.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[3, 2] [4, 1] [5] [3, 2, 1] [4] [5] [3, 2, 1] [] [5, 4] [3, 2] [] [5, 4, 1] [3] [2] [5, 4, 1] [3] [2, 1] [5, 4] [] [2, 1] [5, 4, 3] [1] [2] [5, 4, 3] [1] [] [5, 4, 3, 2] [] [] [5, 4, 3, 2, 1]\"\"\" assert hanoi_solver(5) == expected `) }) hanoi_solver(n) should solve the tower of Hanoi puzzle for any positive value of n``js\n({ test: () => runPython(\nexpected = \"\"\"[6, 5, 4, 3, 2, 1] [] []\n[6, 5, 4, 3, 2] [1] []\n[6, 5, 4, 3] [1] [2]\n[6, 5, 4, 3] [] [2, 1]\n[6, 5, 4] [3] [2, 1]\n[6, 5, 4, 1] [3] [2]\n[6, 5, 4, 1] [3, 2] []\n[6, 5, 4] [3, 2, 1] []\n[6, 5] [3, 2, 1] [4]\n[6, 5] [3, 2] [4, 1]\n[6, 5, 2] [3] [4, 1]\n[6, 5, 2, 1] [3] [4]\n[6, 5, 2, 1] [] [4, 3]\n[6, 5, 2] [1] [4, 3]\n[6, 5] [1] [4, 3, 2]\n[6, 5] [] [4, 3, 2, 1]\n[6] [5] [4, 3, 2, 1]\n[6, 1] [5] [4, 3, 2]\n[6, 1] [5, 2] [4, 3]\n[6] [5, 2, 1] [4, 3]\n[6, 3] [5, 2, 1] [4]\n[6, 3] [5, 2] [4, 1]\n[6, 3, 2] [5] [4, 1]\n[6, 3, 2, 1] [5] [4]\n[6, 3, 2, 1] [5, 4] []\n[6, 3, 2] [5, 4, 1] []\n[6, 3] [5, 4, 1] [2]\n[6, 3] [5, 4] [2, 1]\n[6] [5, 4, 3] [2, 1]\n[6, 1] [5, 4, 3] [2]\n[6, 1] [5, 4, 3, 2] []\n[6] [5, 4, 3, 2, 1] []\n[] [5, 4, 3, 2, 1] [6]\n[] [5, 4, 3, 2] [6, 1]\n[2] [5, 4, 3] [6, 1]\n[2, 1] [5, 4, 3] [6]\n[2, 1] [5, 4] [6, 3]\n[2] [5, 4, 1] [6, 3]\n[] [5, 4, 1] [6, 3, 2]\n[] [5, 4] [6, 3, 2, 1]\n[4] [5] [6, 3, 2, 1]\n[4, 1] [5] [6, 3, 2]\n[4, 1] [5, 2] [6, 3]\n[4] [5, 2, 1] [6, 3]\n[4, 3] [5, 2, 1] [6]\n[4, 3] [5, 2] [6, 1]\n[4, 3, 2] [5] [6, 1]\n[4, 3, 2, 1] [5] [6]\n[4, 3, 2, 1] [] [6, 5]\n[4, 3, 2] [1] [6, 5]\n[4, 3] [1] [6, 5, 2]\n[4, 3] [] [6, 5, 2, 1]\n[4] [3] [6, 5, 2, 1]\n[4, 1] [3] [6, 5, 2]\n[4, 1] [3, 2] [6, 5]\n[4] [3, 2, 1] [6, 5]\n[] [3, 2, 1] [6, 5, 4]\n[] [3, 2] [6, 5, 4, 1]\n[2] [3] [6, 5, 4, 1]\n[2, 1] [3] [6, 5, 4]\n[2, 1] [] [6, 5, 4, 3]\n[2] [1] [6, 5, 4, 3]\n[] [1] [6, 5, 4, 3, 2]\n[] [] [6, 5, 4, 3, 2, 1]\"\"\"\nassert hanoi_solver(6) == expected\nexpected = \"\"\"[7, 6, 5, 4, 3, 2, 1] [] []\n[7, 6, 5, 4, 3, 2] [] [1]\n[7, 6, 5, 4, 3] [2] [1]\n[7, 6, 5, 4, 3] [2, 1] []\n[7, 6, 5, 4] [2, 1] [3]\n[7, 6, 5, 4, 1] [2] [3]\n[7, 6, 5, 4, 1] [] [3, 2]\n[7, 6, 5, 4] [] [3, 2, 1]\n[7, 6, 5] [4] [3, 2, 1]\n[7, 6, 5] [4, 1] [3, 2]\n[7, 6, 5, 2] [4, 1] [3]\n[7, 6, 5, 2, 1] [4] [3]\n[7, 6, 5, 2, 1] [4, 3] []\n[7, 6, 5, 2] [4, 3] [1]\n[7, 6, 5] [4, 3, 2] [1]\n[7, 6, 5] [4, 3, 2, 1] []\n[7, 6] [4, 3, 2, 1] [5]\n[7, 6, 1] [4, 3, 2] [5]\n[7, 6, 1] [4, 3] [5, 2]\n[7, 6] [4, 3] [5, 2, 1]\n[7, 6, 3] [4] [5, 2, 1]\n[7, 6, 3] [4, 1] [5, 2]\n[7, 6, 3, 2] [4, 1] [5]\n[7, 6, 3, 2, 1] [4] [5]\n[7, 6, 3, 2, 1] [] [5, 4]\n[7, 6, 3, 2] [] [5, 4, 1]\n[7, 6, 3] [2] [5, 4, 1]\n[7, 6, 3] [2, 1] [5, 4]\n[7, 6] [2, 1] [5, 4, 3]\n[7, 6, 1] [2] [5, 4, 3]\n[7, 6, 1] [] [5, 4, 3, 2]\n[7, 6] [] [5, 4, 3, 2, 1]\n[7] [6] [5, 4, 3, 2, 1]\n[7] [6, 1] [5, 4, 3, 2]\n[7, 2] [6, 1] [5, 4, 3]\n[7, 2, 1] [6] [5, 4, 3]\n[7, 2, 1] [6, 3] [5, 4]\n[7, 2] [6, 3] [5, 4, 1]\n[7] [6, 3, 2] [5, 4, 1]\n[7] [6, 3, 2, 1] [5, 4]\n[7, 4] [6, 3, 2, 1] [5]\n[7, 4, 1] [6, 3, 2] [5]\n[7, 4, 1] [6, 3] [5, 2]\n[7, 4] [6, 3] [5, 2, 1]\n[7, 4, 3] [6] [5, 2, 1]\n[7, 4, 3] [6, 1] [5, 2]\n[7, 4, 3, 2] [6, 1] [5]\n[7, 4, 3, 2, 1] [6] [5]\n[7, 4, 3, 2, 1] [6, 5] []\n[7, 4, 3, 2] [6, 5] [1]\n[7, 4, 3] [6, 5, 2] [1]\n[7, 4, 3] [6, 5, 2, 1] []\n[7, 4] [6, 5, 2, 1] [3]\n[7, 4, 1] [6, 5, 2] [3]\n[7, 4, 1] [6, 5] [3, 2]\n[7, 4] [6, 5] [3, 2, 1]\n[7] [6, 5, 4] [3, 2, 1]\n[7] [6, 5, 4, 1] [3, 2]\n[7, 2] [6, 5, 4, 1] [3]\n[7, 2, 1] [6, 5, 4] [3]\n[7, 2, 1] [6, 5, 4, 3] []\n[7, 2] [6, 5, 4, 3] [1]\n[7] [6, 5, 4, 3, 2] [1]\n[7] [6, 5, 4, 3, 2, 1] []\n[] [6, 5, 4, 3, 2, 1] [7]\n[1] [6, 5, 4, 3, 2] [7]\n[1] [6, 5, 4, 3] [7, 2]\n[] [6, 5, 4, 3] [7, 2, 1]\n[3] [6, 5, 4] [7, 2, 1]\n[3] [6, 5, 4, 1] [7, 2]\n[3, 2] [6, 5, 4, 1] [7]\n[3, 2, 1] [6, 5, 4] [7]\n[3, 2, 1] [6, 5] [7, 4]\n[3, 2] [6, 5] [7, 4, 1]\n[3] [6, 5, 2] [7, 4, 1]\n[3] [6, 5, 2, 1] [7, 4]\n[] [6, 5, 2, 1] [7, 4, 3]\n[1] [6, 5, 2] [7, 4, 3]\n[1] [6, 5] [7, 4, 3, 2]\n[] [6, 5] [7, 4, 3, 2, 1]\n[5] [6] [7, 4, 3, 2, 1]\n[5] [6, 1] [7, 4, 3, 2]\n[5, 2] [6, 1] [7, 4, 3]\n[5, 2, 1] [6] [7, 4, 3]\n[5, 2, 1] [6, 3] [7, 4]\n[5, 2] [6, 3] [7, 4, 1]\n[5] [6, 3, 2] [7, 4, 1]\n[5] [6, 3, 2, 1] [7, 4]\n[5, 4] [6, 3, 2, 1] [7]\n[5, 4, 1] [6, 3, 2] [7]\n[5, 4, 1] [6, 3] [7, 2]\n[5, 4] [6, 3] [7, 2, 1]\n[5, 4, 3] [6] [7, 2, 1]\n[5, 4, 3] [6, 1] [7, 2]\n[5, 4, 3, 2] [6, 1] [7]\n[5, 4, 3, 2, 1] [6] [7]\n[5, 4, 3, 2, 1] [] [7, 6]\n[5, 4, 3, 2] [] [7, 6, 1]\n[5, 4, 3] [2] [7, 6, 1]\n[5, 4, 3] [2, 1] [7, 6]\n[5, 4] [2, 1] [7, 6, 3]\n[5, 4, 1] [2] [7, 6, 3]\n[5, 4, 1] [] [7, 6, 3, 2]\n[5, 4] [] [7, 6, 3, 2, 1]\n[5] [4] [7, 6, 3, 2, 1]\n[5] [4, 1] [7, 6, 3, 2]\n[5, 2] [4, 1] [7, 6, 3]\n[5, 2, 1] [4] [7, 6, 3]\n[5, 2, 1] [4, 3] [7, 6]\n[5, 2] [4, 3] [7, 6, 1]\n[5] [4, 3, 2] [7, 6, 1]\n[5] [4, 3, 2, 1] [7, 6]\n[] [4, 3, 2, 1] [7, 6, 5]\n[1] [4, 3, 2] [7, 6, 5]\n[1] [4, 3] [7, 6, 5, 2]\n[] [4, 3] [7, 6, 5, 2, 1]\n[3] [4] [7, 6, 5, 2, 1]\n[3] [4, 1] [7, 6, 5, 2]\n[3, 2] [4, 1] [7, 6, 5]\n[3, 2, 1] [4] [7, 6, 5]\n[3, 2, 1] [] [7, 6, 5, 4]\n[3, 2] [] [7, 6, 5, 4, 1]\n[3] [2] [7, 6, 5, 4, 1]\n[3] [2, 1] [7, 6, 5, 4]\n[] [2, 1] [7, 6, 5, 4, 3]\n[1] [2] [7, 6, 5, 4, 3]\n[1] [] [7, 6, 5, 4, 3, 2]\n[] [] [7, 6, 5, 4, 3, 2, 1]\"\"\"\nassert hanoi_solver(7) == expected\nexpected = \"\"\"[8, 7, 6, 5, 4, 3, 2, 1] [] []\n[8, 7, 6, 5, 4, 3, 2] [1] []\n[8, 7, 6, 5, 4, 3] [1] [2]\n[8, 7, 6, 5, 4, 3] [] [2, 1]\n[8, 7, 6, 5, 4] [3] [2, 1]\n[8, 7, 6, 5, 4, 1] [3] [2]\n[8, 7, 6, 5, 4, 1] [3, 2] []\n[8, 7, 6, 5, 4] [3, 2, 1] []\n[8, 7, 6, 5] [3, 2, 1] [4]\n[8, 7, 6, 5] [3, 2] [4, 1]\n[8, 7, 6, 5, 2] [3] [4, 1]\n[8, 7, 6, 5, 2, 1] [3] [4]\n[8, 7, 6, 5, 2, 1] [] [4, 3]\n[8, 7, 6, 5, 2] [1] [4, 3]\n[8, 7, 6, 5] [1] [4, 3, 2]\n[8, 7, 6, 5] [] [4, 3, 2, 1]\n[8, 7, 6] [5] [4, 3, 2, 1]\n[8, 7, 6, 1] [5] [4, 3, 2]\n[8, 7, 6, 1] [5, 2] [4, 3]\n[8, 7, 6] [5, 2, 1] [4, 3]\n[8, 7, 6, 3] [5, 2, 1] [4]\n[8, 7, 6, 3] [5, 2] [4, 1]\n[8, 7, 6, 3, 2] [5] [4, 1]\n[8, 7, 6, 3, 2, 1] [5] [4]\n[8, 7, 6, 3, 2, 1] [5, 4] []\n[8, 7, 6, 3, 2] [5, 4, 1] []\n[8, 7, 6, 3] [5, 4, 1] [2]\n[8, 7, 6, 3] [5, 4] [2, 1]\n[8, 7, 6] [5, 4, 3] [2, 1]\n[8, 7, 6, 1] [5, 4, 3] [2]\n[8, 7, 6, 1] [5, 4, 3, 2] []\n[8, 7, 6] [5, 4, 3, 2, 1] []\n[8, 7] [5, 4, 3, 2, 1] [6]\n[8, 7] [5, 4, 3, 2] [6, 1]\n[8, 7, 2] [5, 4, 3] [6, 1]\n[8, 7, 2, 1] [5, 4, 3] [6]\n[8, 7, 2, 1] [5, 4] [6, 3]\n[8, 7, 2] [5, 4, 1] [6, 3]\n[8, 7] [5, 4, 1] [6, 3, 2]\n[8, 7] [5, 4] [6, 3, 2, 1]\n[8, 7, 4] [5] [6, 3, 2, 1]\n[8, 7, 4, 1] [5] [6, 3, 2]\n[8, 7, 4, 1] [5, 2] [6, 3]\n[8, 7, 4] [5, 2, 1] [6, 3]\n[8, 7, 4, 3] [5, 2, 1] [6]\n[8, 7, 4, 3] [5, 2] [6, 1]\n[8, 7, 4, 3, 2] [5] [6, 1]\n[8, 7, 4, 3, 2, 1] [5] [6]\n[8, 7, 4, 3, 2, 1] [] [6, 5]\n[8, 7, 4, 3, 2] [1] [6, 5]\n[8, 7, 4, 3] [1] [6, 5, 2]\n[8, 7, 4, 3] [] [6, 5, 2, 1]\n[8, 7, 4] [3] [6, 5, 2, 1]\n[8, 7, 4, 1] [3] [6, 5, 2]\n[8, 7, 4, 1] [3, 2] [6, 5]\n[8, 7, 4] [3, 2, 1] [6, 5]\n[8, 7] [3, 2, 1] [6, 5, 4]\n[8, 7] [3, 2] [6, 5, 4, 1]\n[8, 7, 2] [3] [6, 5, 4, 1]\n[8, 7, 2, 1] [3] [6, 5, 4]\n[8, 7, 2, 1] [] [6, 5, 4, 3]\n[8, 7, 2] [1] [6, 5, 4, 3]\n[8, 7] [1] [6, 5, 4, 3, 2]\n[8, 7] [] [6, 5, 4, 3, 2, 1]\n[8] [7] [6, 5, 4, 3, 2, 1]\n[8, 1] [7] [6, 5, 4, 3, 2]\n[8, 1] [7, 2] [6, 5, 4, 3]\n[8] [7, 2, 1] [6, 5, 4, 3]\n[8, 3] [7, 2, 1] [6, 5, 4]\n[8, 3] [7, 2] [6, 5, 4, 1]\n[8, 3, 2] [7] [6, 5, 4, 1]\n[8, 3, 2, 1] [7] [6, 5, 4]\n[8, 3, 2, 1] [7, 4] [6, 5]\n[8, 3, 2] [7, 4, 1] [6, 5]\n[8, 3] [7, 4, 1] [6, 5, 2]\n[8, 3] [7, 4] [6, 5, 2, 1]\n[8] [7, 4, 3] [6, 5, 2, 1]\n[8, 1] [7, 4, 3] [6, 5, 2]\n[8, 1] [7, 4, 3, 2] [6, 5]\n[8] [7, 4, 3, 2, 1] [6, 5]\n[8, 5] [7, 4, 3, 2, 1] [6]\n[8, 5] [7, 4, 3, 2] [6, 1]\n[8, 5, 2] [7, 4, 3] [6, 1]\n[8, 5, 2, 1] [7, 4, 3] [6]\n[8, 5, 2, 1] [7, 4] [6, 3]\n[8, 5, 2] [7, 4, 1] [6, 3]\n[8, 5] [7, 4, 1] [6, 3, 2]\n[8, 5] [7, 4] [6, 3, 2, 1]\n[8, 5, 4] [7] [6, 3, 2, 1]\n[8, 5, 4, 1] [7] [6, 3, 2]\n[8, 5, 4, 1] [7, 2] [6, 3]\n[8, 5, 4] [7, 2, 1] [6, 3]\n[8, 5, 4, 3] [7, 2, 1] [6]\n[8, 5, 4, 3] [7, 2] [6, 1]\n[8, 5, 4, 3, 2] [7] [6, 1]\n[8, 5, 4, 3, 2, 1] [7] [6]\n[8, 5, 4, 3, 2, 1] [7, 6] []\n[8, 5, 4, 3, 2] [7, 6, 1] []\n[8, 5, 4, 3] [7, 6, 1] [2]\n[8, 5, 4, 3] [7, 6] [2, 1]\n[8, 5, 4] [7, 6, 3] [2, 1]\n[8, 5, 4, 1] [7, 6, 3] [2]\n[8, 5, 4, 1] [7, 6, 3, 2] []\n[8, 5, 4] [7, 6, 3, 2, 1] []\n[8, 5] [7, 6, 3, 2, 1] [4]\n[8, 5] [7, 6, 3, 2] [4, 1]\n[8, 5, 2] [7, 6, 3] [4, 1]\n[8, 5, 2, 1] [7, 6, 3] [4]\n[8, 5, 2, 1] [7, 6] [4, 3]\n[8, 5, 2] [7, 6, 1] [4, 3]\n[8, 5] [7, 6, 1] [4, 3, 2]\n[8, 5] [7, 6] [4, 3, 2, 1]\n[8] [7, 6, 5] [4, 3, 2, 1]\n[8, 1] [7, 6, 5] [4, 3, 2]\n[8, 1] [7, 6, 5, 2] [4, 3]\n[8] [7, 6, 5, 2, 1] [4, 3]\n[8, 3] [7, 6, 5, 2, 1] [4]\n[8, 3] [7, 6, 5, 2] [4, 1]\n[8, 3, 2] [7, 6, 5] [4, 1]\n[8, 3, 2, 1] [7, 6, 5] [4]\n[8, 3, 2, 1] [7, 6, 5, 4] []\n[8, 3, 2] [7, 6, 5, 4, 1] []\n[8, 3] [7, 6, 5, 4, 1] [2]\n[8, 3] [7, 6, 5, 4] [2, 1]\n[8] [7, 6, 5, 4, 3] [2, 1]\n[8, 1] [7, 6, 5, 4, 3] [2]\n[8, 1] [7, 6, 5, 4, 3, 2] []\n[8] [7, 6, 5, 4, 3, 2, 1] []\n[] [7, 6, 5, 4, 3, 2, 1] [8]\n[] [7, 6, 5, 4, 3, 2] [8, 1]\n[2] [7, 6, 5, 4, 3] [8, 1]\n[2, 1] [7, 6, 5, 4, 3] [8]\n[2, 1] [7, 6, 5, 4] [8, 3]\n[2] [7, 6, 5, 4, 1] [8, 3]\n[] [7, 6, 5, 4, 1] [8, 3, 2]\n[] [7, 6, 5, 4] [8, 3, 2, 1]\n[4] [7, 6, 5] [8, 3, 2, 1]\n[4, 1] [7, 6, 5] [8, 3, 2]\n[4, 1] [7, 6, 5, 2] [8, 3]\n[4] [7, 6, 5, 2, 1] [8, 3]\n[4, 3] [7, 6, 5, 2, 1] [8]\n[4, 3] [7, 6, 5, 2] [8, 1]\n[4, 3, 2] [7, 6, 5] [8, 1]\n[4, 3, 2, 1] [7, 6, 5] [8]\n[4, 3, 2, 1] [7, 6] [8, 5]\n[4, 3, 2] [7, 6, 1] [8, 5]\n[4, 3] [7, 6, 1] [8, 5, 2]\n[4, 3] [7, 6] [8, 5, 2, 1]\n[4] [7, 6, 3] [8, 5, 2, 1]\n[4, 1] [7, 6, 3] [8, 5, 2]\n[4, 1] [7, 6, 3, 2] [8, 5]\n[4] [7, 6, 3, 2, 1] [8, 5]\n[] [7, 6, 3, 2, 1] [8, 5, 4]\n[] [7, 6, 3, 2] [8, 5, 4, 1]\n[2] [7, 6, 3] [8, 5, 4, 1]\n[2, 1] [7, 6, 3] [8, 5, 4]\n[2, 1] [7, 6] [8, 5, 4, 3]\n[2] [7, 6, 1] [8, 5, 4, 3]\n[] [7, 6, 1] [8, 5, 4, 3, 2]\n[] [7, 6] [8, 5, 4, 3, 2, 1]\n[6] [7] [8, 5, 4, 3, 2, 1]\n[6, 1] [7] [8, 5, 4, 3, 2]\n[6, 1] [7, 2] [8, 5, 4, 3]\n[6] [7, 2, 1] [8, 5, 4, 3]\n[6, 3] [7, 2, 1] [8, 5, 4]\n[6, 3] [7, 2] [8, 5, 4, 1]\n[6, 3, 2] [7] [8, 5, 4, 1]\n[6, 3, 2, 1] [7] [8, 5, 4]\n[6, 3, 2, 1] [7, 4] [8, 5]\n[6, 3, 2] [7, 4, 1] [8, 5]\n[6, 3] [7, 4, 1] [8, 5, 2]\n[6, 3] [7, 4] [8, 5, 2, 1]\n[6] [7, 4, 3] [8, 5, 2, 1]\n[6, 1] [7, 4, 3] [8, 5, 2]\n[6, 1] [7, 4, 3, 2] [8, 5]\n[6] [7, 4, 3, 2, 1] [8, 5]\n[6, 5] [7, 4, 3, 2, 1] [8]\n[6, 5] [7, 4, 3, 2] [8, 1]\n[6, 5, 2] [7, 4, 3] [8, 1]\n[6, 5, 2, 1] [7, 4, 3] [8]\n[6, 5, 2, 1] [7, 4] [8, 3]\n[6, 5, 2] [7, 4, 1] [8, 3]\n[6, 5] [7, 4, 1] [8, 3, 2]\n[6, 5] [7, 4] [8, 3, 2, 1]\n[6, 5, 4] [7] [8, 3, 2, 1]\n[6, 5, 4, 1] [7] [8, 3, 2]\n[6, 5, 4, 1] [7, 2] [8, 3]\n[6, 5, 4] [7, 2, 1] [8, 3]\n[6, 5, 4, 3] [7, 2, 1] [8]\n[6, 5, 4, 3] [7, 2] [8, 1]\n[6, 5, 4, 3, 2] [7] [8, 1]\n[6, 5, 4, 3, 2, 1] [7] [8]\n[6, 5, 4, 3, 2, 1] [] [8, 7]\n[6, 5, 4, 3, 2] [1] [8, 7]\n[6, 5, 4, 3] [1] [8, 7, 2]\n[6, 5, 4, 3] [] [8, 7, 2, 1]\n[6, 5, 4] [3] [8, 7, 2, 1]\n[6, 5, 4, 1] [3] [8, 7, 2]\n[6, 5, 4, 1] [3, 2] [8, 7]\n[6, 5, 4] [3, 2, 1] [8, 7]\n[6, 5] [3, 2, 1] [8, 7, 4]\n[6, 5] [3, 2] [8, 7, 4, 1]\n[6, 5, 2] [3] [8, 7, 4, 1]\n[6, 5, 2, 1] [3] [8, 7, 4]\n[6, 5, 2, 1] [] [8, 7, 4, 3]\n[6, 5, 2] [1] [8, 7, 4, 3]\n[6, 5] [1] [8, 7, 4, 3, 2]\n[6, 5] [] [8, 7, 4, 3, 2, 1]\n[6] [5] [8, 7, 4, 3, 2, 1]\n[6, 1] [5] [8, 7, 4, 3, 2]\n[6, 1] [5, 2] [8, 7, 4, 3]\n[6] [5, 2, 1] [8, 7, 4, 3]\n[6, 3] [5, 2, 1] [8, 7, 4]\n[6, 3] [5, 2] [8, 7, 4, 1]\n[6, 3, 2] [5] [8, 7, 4, 1]\n[6, 3, 2, 1] [5] [8, 7, 4]\n[6, 3, 2, 1] [5, 4] [8, 7]\n[6, 3, 2] [5, 4, 1] [8, 7]\n[6, 3] [5, 4, 1] [8, 7, 2]\n[6, 3] [5, 4] [8, 7, 2, 1]\n[6] [5, 4, 3] [8, 7, 2, 1]\n[6, 1] [5, 4, 3] [8, 7, 2]\n[6, 1] [5, 4, 3, 2] [8, 7]\n[6] [5, 4, 3, 2, 1] [8, 7]\n[] [5, 4, 3, 2, 1] [8, 7, 6]\n[] [5, 4, 3, 2] [8, 7, 6, 1]\n[2] [5, 4, 3] [8, 7, 6, 1]\n[2, 1] [5, 4, 3] [8, 7, 6]\n[2, 1] [5, 4] [8, 7, 6, 3]\n[2] [5, 4, 1] [8, 7, 6, 3]\n[] [5, 4, 1] [8, 7, 6, 3, 2]\n[] [5, 4] [8, 7, 6, 3, 2, 1]\n[4] [5] [8, 7, 6, 3, 2, 1]\n[4, 1] [5] [8, 7, 6, 3, 2]\n[4, 1] [5, 2] [8, 7, 6, 3]\n[4] [5, 2, 1] [8, 7, 6, 3]\n[4, 3] [5, 2, 1] [8, 7, 6]\n[4, 3] [5, 2] [8, 7, 6, 1]\n[4, 3, 2] [5] [8, 7, 6, 1]\n[4, 3, 2, 1] [5] [8, 7, 6]\n[4, 3, 2, 1] [] [8, 7, 6, 5]\n[4, 3, 2] [1] [8, 7, 6, 5]\n[4, 3] [1] [8, 7, 6, 5, 2]\n[4, 3] [] [8, 7, 6, 5, 2, 1]\n[4] [3] [8, 7, 6, 5, 2, 1]\n[4, 1] [3] [8, 7, 6, 5, 2]\n[4, 1] [3, 2] [8, 7, 6, 5]\n[4] [3, 2, 1] [8, 7, 6, 5]\n[] [3, 2, 1] [8, 7, 6, 5, 4]\n[] [3, 2] [8, 7, 6, 5, 4, 1]\n[2] [3] [8, 7, 6, 5, 4, 1]\n[2, 1] [3] [8, 7, 6, 5, 4]\n[2, 1] [] [8, 7, 6, 5, 4, 3]\n[2] [1] [8, 7, 6, 5, 4, 3]\n[] [1] [8, 7, 6, 5, 4, 3, 2]\n[] [] [8, 7, 6, 5, 4, 3, 2, 1]\"\"\"\nassert hanoi_solver(8) == expected\nexpected = \"\"\"[9, 8, 7, 6, 5, 4, 3, 2, 1] [] []\n[9, 8, 7, 6, 5, 4, 3, 2] [] [1]\n[9, 8, 7, 6, 5, 4, 3] [2] [1]\n[9, 8, 7, 6, 5, 4, 3] [2, 1] []\n[9, 8, 7, 6, 5, 4] [2, 1] [3]\n[9, 8, 7, 6, 5, 4, 1] [2] [3]\n[9, 8, 7, 6, 5, 4, 1] [] [3, 2]\n[9, 8, 7, 6, 5, 4] [] [3, 2, 1]\n[9, 8, 7, 6, 5] [4] [3, 2, 1]\n[9, 8, 7, 6, 5] [4, 1] [3, 2]\n[9, 8, 7, 6, 5, 2] [4, 1] [3]\n[9, 8, 7, 6, 5, 2, 1] [4] [3]\n[9, 8, 7, 6, 5, 2, 1] [4, 3] []\n[9, 8, 7, 6, 5, 2] [4, 3] [1]\n[9, 8, 7, 6, 5] [4, 3, 2] [1]\n[9, 8, 7, 6, 5] [4, 3, 2, 1] []\n[9, 8, 7, 6] [4, 3, 2, 1] [5]\n[9, 8, 7, 6, 1] [4, 3, 2] [5]\n[9, 8, 7, 6, 1] [4, 3] [5, 2]\n[9, 8, 7, 6] [4, 3] [5, 2, 1]\n[9, 8, 7, 6, 3] [4] [5, 2, 1]\n[9, 8, 7, 6, 3] [4, 1] [5, 2]\n[9, 8, 7, 6, 3, 2] [4, 1] [5]\n[9, 8, 7, 6, 3, 2, 1] [4] [5]\n[9, 8, 7, 6, 3, 2, 1] [] [5, 4]\n[9, 8, 7, 6, 3, 2] [] [5, 4, 1]\n[9, 8, 7, 6, 3] [2] [5, 4, 1]\n[9, 8, 7, 6, 3] [2, 1] [5, 4]\n[9, 8, 7, 6] [2, 1] [5, 4, 3]\n[9, 8, 7, 6, 1] [2] [5, 4, 3]\n[9, 8, 7, 6, 1] [] [5, 4, 3, 2]\n[9, 8, 7, 6] [] [5, 4, 3, 2, 1]\n[9, 8, 7] [6] [5, 4, 3, 2, 1]\n[9, 8, 7] [6, 1] [5, 4, 3, 2]\n[9, 8, 7, 2] [6, 1] [5, 4, 3]\n[9, 8, 7, 2, 1] [6] [5, 4, 3]\n[9, 8, 7, 2, 1] [6, 3] [5, 4]\n[9, 8, 7, 2] [6, 3] [5, 4, 1]\n[9, 8, 7] [6, 3, 2] [5, 4, 1]\n[9, 8, 7] [6, 3, 2, 1] [5, 4]\n[9, 8, 7, 4] [6, 3, 2, 1] [5]\n[9, 8, 7, 4, 1] [6, 3, 2] [5]\n[9, 8, 7, 4, 1] [6, 3] [5, 2]\n[9, 8, 7, 4] [6, 3] [5, 2, 1]\n[9, 8, 7, 4, 3] [6] [5, 2, 1]\n[9, 8, 7, 4, 3] [6, 1] [5, 2]\n[9, 8, 7, 4, 3, 2] [6, 1] [5]\n[9, 8, 7, 4, 3, 2, 1] [6] [5]\n[9, 8, 7, 4, 3, 2, 1] [6, 5] []\n[9, 8, 7, 4, 3, 2] [6, 5] [1]\n[9, 8, 7, 4, 3] [6, 5, 2] [1]\n[9, 8, 7, 4, 3] [6, 5, 2, 1] []\n[9, 8, 7, 4] [6, 5, 2, 1] [3]\n[9, 8, 7, 4, 1] [6, 5, 2] [3]\n[9, 8, 7, 4, 1] [6, 5] [3, 2]\n[9, 8, 7, 4] [6, 5] [3, 2, 1]\n[9, 8, 7] [6, 5, 4] [3, 2, 1]\n[9, 8, 7] [6, 5, 4, 1] [3, 2]\n[9, 8, 7, 2] [6, 5, 4, 1] [3]\n[9, 8, 7, 2, 1] [6, 5, 4] [3]\n[9, 8, 7, 2, 1] [6, 5, 4, 3] []\n[9, 8, 7, 2] [6, 5, 4, 3] [1]\n[9, 8, 7] [6, 5, 4, 3, 2] [1]\n[9, 8, 7] [6, 5, 4, 3, 2, 1] []\n[9, 8] [6, 5, 4, 3, 2, 1] [7]\n[9, 8, 1] [6, 5, 4, 3, 2] [7]\n[9, 8, 1] [6, 5, 4, 3] [7, 2]\n[9, 8] [6, 5, 4, 3] [7, 2, 1]\n[9, 8, 3] [6, 5, 4] [7, 2, 1]\n[9, 8, 3] [6, 5, 4, 1] [7, 2]\n[9, 8, 3, 2] [6, 5, 4, 1] [7]\n[9, 8, 3, 2, 1] [6, 5, 4] [7]\n[9, 8, 3, 2, 1] [6, 5] [7, 4]\n[9, 8, 3, 2] [6, 5] [7, 4, 1]\n[9, 8, 3] [6, 5, 2] [7, 4, 1]\n[9, 8, 3] [6, 5, 2, 1] [7, 4]\n[9, 8] [6, 5, 2, 1] [7, 4, 3]\n[9, 8, 1] [6, 5, 2] [7, 4, 3]\n[9, 8, 1] [6, 5] [7, 4, 3, 2]\n[9, 8] [6, 5] [7, 4, 3, 2, 1]\n[9, 8, 5] [6] [7, 4, 3, 2, 1]\n[9, 8, 5] [6, 1] [7, 4, 3, 2]\n[9, 8, 5, 2] [6, 1] [7, 4, 3]\n[9, 8, 5, 2, 1] [6] [7, 4, 3]\n[9, 8, 5, 2, 1] [6, 3] [7, 4]\n[9, 8, 5, 2] [6, 3] [7, 4, 1]\n[9, 8, 5] [6, 3, 2] [7, 4, 1]\n[9, 8, 5] [6, 3, 2, 1] [7, 4]\n[9, 8, 5, 4] [6, 3, 2, 1] [7]\n[9, 8, 5, 4, 1] [6, 3, 2] [7]\n[9, 8, 5, 4, 1] [6, 3] [7, 2]\n[9, 8, 5, 4] [6, 3] [7, 2, 1]\n[9, 8, 5, 4, 3] [6] [7, 2, 1]\n[9, 8, 5, 4, 3] [6, 1] [7, 2]\n[9, 8, 5, 4, 3, 2] [6, 1] [7]\n[9, 8, 5, 4, 3, 2, 1] [6] [7]\n[9, 8, 5, 4, 3, 2, 1] [] [7, 6]\n[9, 8, 5, 4, 3, 2] [] [7, 6, 1]\n[9, 8, 5, 4, 3] [2] [7, 6, 1]\n[9, 8, 5, 4, 3] [2, 1] [7, 6]\n[9, 8, 5, 4] [2, 1] [7, 6, 3]\n[9, 8, 5, 4, 1] [2] [7, 6, 3]\n[9, 8, 5, 4, 1] [] [7, 6, 3, 2]\n[9, 8, 5, 4] [] [7, 6, 3, 2, 1]\n[9, 8, 5] [4] [7, 6, 3, 2, 1]\n[9, 8, 5] [4, 1] [7, 6, 3, 2]\n[9, 8, 5, 2] [4, 1] [7, 6, 3]\n[9, 8, 5, 2, 1] [4] [7, 6, 3]\n[9, 8, 5, 2, 1] [4, 3] [7, 6]\n[9, 8, 5, 2] [4, 3] [7, 6, 1]\n[9, 8, 5] [4, 3, 2] [7, 6, 1]\n[9, 8, 5] [4, 3, 2, 1] [7, 6]\n[9, 8] [4, 3, 2, 1] [7, 6, 5]\n[9, 8, 1] [4, 3, 2] [7, 6, 5]\n[9, 8, 1] [4, 3] [7, 6, 5, 2]\n[9, 8] [4, 3] [7, 6, 5, 2, 1]\n[9, 8, 3] [4] [7, 6, 5, 2, 1]\n[9, 8, 3] [4, 1] [7, 6, 5, 2]\n[9, 8, 3, 2] [4, 1] [7, 6, 5]\n[9, 8, 3, 2, 1] [4] [7, 6, 5]\n[9, 8, 3, 2, 1] [] [7, 6, 5, 4]\n[9, 8, 3, 2] [] [7, 6, 5, 4, 1]\n[9, 8, 3] [2] [7, 6, 5, 4, 1]\n[9, 8, 3] [2, 1] [7, 6, 5, 4]\n[9, 8] [2, 1] [7, 6, 5, 4, 3]\n[9, 8, 1] [2] [7, 6, 5, 4, 3]\n[9, 8, 1] [] [7, 6, 5, 4, 3, 2]\n[9, 8] [] [7, 6, 5, 4, 3, 2, 1]\n[9] [8] [7, 6, 5, 4, 3, 2, 1]\n[9] [8, 1] [7, 6, 5, 4, 3, 2]\n[9, 2] [8, 1] [7, 6, 5, 4, 3]\n[9, 2, 1] [8] [7, 6, 5, 4, 3]\n[9, 2, 1] [8, 3] [7, 6, 5, 4]\n[9, 2] [8, 3] [7, 6, 5, 4, 1]\n[9] [8, 3, 2] [7, 6, 5, 4, 1]\n[9] [8, 3, 2, 1] [7, 6, 5, 4]\n[9, 4] [8, 3, 2, 1] [7, 6, 5]\n[9, 4, 1] [8, 3, 2] [7, 6, 5]\n[9, 4, 1] [8, 3] [7, 6, 5, 2]\n[9, 4] [8, 3] [7, 6, 5, 2, 1]\n[9, 4, 3] [8] [7, 6, 5, 2, 1]\n[9, 4, 3] [8, 1] [7, 6, 5, 2]\n[9, 4, 3, 2] [8, 1] [7, 6, 5]\n[9, 4, 3, 2, 1] [8] [7, 6, 5]\n[9, 4, 3, 2, 1] [8, 5] [7, 6]\n[9, 4, 3, 2] [8, 5] [7, 6, 1]\n[9, 4, 3] [8, 5, 2] [7, 6, 1]\n[9, 4, 3] [8, 5, 2, 1] [7, 6]\n[9, 4] [8, 5, 2, 1] [7, 6, 3]\n[9, 4, 1] [8, 5, 2] [7, 6, 3]\n[9, 4, 1] [8, 5] [7, 6, 3, 2]\n[9, 4] [8, 5] [7, 6, 3, 2, 1]\n[9] [8, 5, 4] [7, 6, 3, 2, 1]\n[9] [8, 5, 4, 1] [7, 6, 3, 2]\n[9, 2] [8, 5, 4, 1] [7, 6, 3]\n[9, 2, 1] [8, 5, 4] [7, 6, 3]\n[9, 2, 1] [8, 5, 4, 3] [7, 6]\n[9, 2] [8, 5, 4, 3] [7, 6, 1]\n[9] [8, 5, 4, 3, 2] [7, 6, 1]\n[9] [8, 5, 4, 3, 2, 1] [7, 6]\n[9, 6] [8, 5, 4, 3, 2, 1] [7]\n[9, 6, 1] [8, 5, 4, 3, 2] [7]\n[9, 6, 1] [8, 5, 4, 3] [7, 2]\n[9, 6] [8, 5, 4, 3] [7, 2, 1]\n[9, 6, 3] [8, 5, 4] [7, 2, 1]\n[9, 6, 3] [8, 5, 4, 1] [7, 2]\n[9, 6, 3, 2] [8, 5, 4, 1] [7]\n[9, 6, 3, 2, 1] [8, 5, 4] [7]\n[9, 6, 3, 2, 1] [8, 5] [7, 4]\n[9, 6, 3, 2] [8, 5] [7, 4, 1]\n[9, 6, 3] [8, 5, 2] [7, 4, 1]\n[9, 6, 3] [8, 5, 2, 1] [7, 4]\n[9, 6] [8, 5, 2, 1] [7, 4, 3]\n[9, 6, 1] [8, 5, 2] [7, 4, 3]\n[9, 6, 1] [8, 5] [7, 4, 3, 2]\n[9, 6] [8, 5] [7, 4, 3, 2, 1]\n[9, 6, 5] [8] [7, 4, 3, 2, 1]\n[9, 6, 5] [8, 1] [7, 4, 3, 2]\n[9, 6, 5, 2] [8, 1] [7, 4, 3]\n[9, 6, 5, 2, 1] [8] [7, 4, 3]\n[9, 6, 5, 2, 1] [8, 3] [7, 4]\n[9, 6, 5, 2] [8, 3] [7, 4, 1]\n[9, 6, 5] [8, 3, 2] [7, 4, 1]\n[9, 6, 5] [8, 3, 2, 1] [7, 4]\n[9, 6, 5, 4] [8, 3, 2, 1] [7]\n[9, 6, 5, 4, 1] [8, 3, 2] [7]\n[9, 6, 5, 4, 1] [8, 3] [7, 2]\n[9, 6, 5, 4] [8, 3] [7, 2, 1]\n[9, 6, 5, 4, 3] [8] [7, 2, 1]\n[9, 6, 5, 4, 3] [8, 1] [7, 2]\n[9, 6, 5, 4, 3, 2] [8, 1] [7]\n[9, 6, 5, 4, 3, 2, 1] [8] [7]\n[9, 6, 5, 4, 3, 2, 1] [8, 7] []\n[9, 6, 5, 4, 3, 2] [8, 7] [1]\n[9, 6, 5, 4, 3] [8, 7, 2] [1]\n[9, 6, 5, 4, 3] [8, 7, 2, 1] []\n[9, 6, 5, 4] [8, 7, 2, 1] [3]\n[9, 6, 5, 4, 1] [8, 7, 2] [3]\n[9, 6, 5, 4, 1] [8, 7] [3, 2]\n[9, 6, 5, 4] [8, 7] [3, 2, 1]\n[9, 6, 5] [8, 7, 4] [3, 2, 1]\n[9, 6, 5] [8, 7, 4, 1] [3, 2]\n[9, 6, 5, 2] [8, 7, 4, 1] [3]\n[9, 6, 5, 2, 1] [8, 7, 4] [3]\n[9, 6, 5, 2, 1] [8, 7, 4, 3] []\n[9, 6, 5, 2] [8, 7, 4, 3] [1]\n[9, 6, 5] [8, 7, 4, 3, 2] [1]\n[9, 6, 5] [8, 7, 4, 3, 2, 1] []\n[9, 6] [8, 7, 4, 3, 2, 1] [5]\n[9, 6, 1] [8, 7, 4, 3, 2] [5]\n[9, 6, 1] [8, 7, 4, 3] [5, 2]\n[9, 6] [8, 7, 4, 3] [5, 2, 1]\n[9, 6, 3] [8, 7, 4] [5, 2, 1]\n[9, 6, 3] [8, 7, 4, 1] [5, 2]\n[9, 6, 3, 2] [8, 7, 4, 1] [5]\n[9, 6, 3, 2, 1] [8, 7, 4] [5]\n[9, 6, 3, 2, 1] [8, 7] [5, 4]\n[9, 6, 3, 2] [8, 7] [5, 4, 1]\n[9, 6, 3] [8, 7, 2] [5, 4, 1]\n[9, 6, 3] [8, 7, 2, 1] [5, 4]\n[9, 6] [8, 7, 2, 1] [5, 4, 3]\n[9, 6, 1] [8, 7, 2] [5, 4, 3]\n[9, 6, 1] [8, 7] [5, 4, 3, 2]\n[9, 6] [8, 7] [5, 4, 3, 2, 1]\n[9] [8, 7, 6] [5, 4, 3, 2, 1]\n[9] [8, 7, 6, 1] [5, 4, 3, 2]\n[9, 2] [8, 7, 6, 1] [5, 4, 3]\n[9, 2, 1] [8, 7, 6] [5, 4, 3]\n[9, 2, 1] [8, 7, 6, 3] [5, 4]\n[9, 2] [8, 7, 6, 3] [5, 4, 1]\n[9] [8, 7, 6, 3, 2] [5, 4, 1]\n[9] [8, 7, 6, 3, 2, 1] [5, 4]\n[9, 4] [8, 7, 6, 3, 2, 1] [5]\n[9, 4, 1] [8, 7, 6, 3, 2] [5]\n[9, 4, 1] [8, 7, 6, 3] [5, 2]\n[9, 4] [8, 7, 6, 3] [5, 2, 1]\n[9, 4, 3] [8, 7, 6] [5, 2, 1]\n[9, 4, 3] [8, 7, 6, 1] [5, 2]\n[9, 4, 3, 2] [8, 7, 6, 1] [5]\n[9, 4, 3, 2, 1] [8, 7, 6] [5]\n[9, 4, 3, 2, 1] [8, 7, 6, 5] []\n[9, 4, 3, 2] [8, 7, 6, 5] [1]\n[9, 4, 3] [8, 7, 6, 5, 2] [1]\n[9, 4, 3] [8, 7, 6, 5, 2, 1] []\n[9, 4] [8, 7, 6, 5, 2, 1] [3]\n[9, 4, 1] [8, 7, 6, 5, 2] [3]\n[9, 4, 1] [8, 7, 6, 5] [3, 2]\n[9, 4] [8, 7, 6, 5] [3, 2, 1]\n[9] [8, 7, 6, 5, 4] [3, 2, 1]\n[9] [8, 7, 6, 5, 4, 1] [3, 2]\n[9, 2] [8, 7, 6, 5, 4, 1] [3]\n[9, 2, 1] [8, 7, 6, 5, 4] [3]\n[9, 2, 1] [8, 7, 6, 5, 4, 3] []\n[9, 2] [8, 7, 6, 5, 4, 3] [1]\n[9] [8, 7, 6, 5, 4, 3, 2] [1]\n[9] [8, 7, 6, 5, 4, 3, 2, 1] []\n[] [8, 7, 6, 5, 4, 3, 2, 1] [9]\n[1] [8, 7, 6, 5, 4, 3, 2] [9]\n[1] [8, 7, 6, 5, 4, 3] [9, 2]\n[] [8, 7, 6, 5, 4, 3] [9, 2, 1]\n[3] [8, 7, 6, 5, 4] [9, 2, 1]\n[3] [8, 7, 6, 5, 4, 1] [9, 2]\n[3, 2] [8, 7, 6, 5, 4, 1] [9]\n[3, 2, 1] [8, 7, 6, 5, 4] [9]\n[3, 2, 1] [8, 7, 6, 5] [9, 4]\n[3, 2] [8, 7, 6, 5] [9, 4, 1]\n[3] [8, 7, 6, 5, 2] [9, 4, 1]\n[3] [8, 7, 6, 5, 2, 1] [9, 4]\n[] [8, 7, 6, 5, 2, 1] [9, 4, 3]\n[1] [8, 7, 6, 5, 2] [9, 4, 3]\n[1] [8, 7, 6, 5] [9, 4, 3, 2]\n[] [8, 7, 6, 5] [9, 4, 3, 2, 1]\n[5] [8, 7, 6] [9, 4, 3, 2, 1]\n[5] [8, 7, 6, 1] [9, 4, 3, 2]\n[5, 2] [8, 7, 6, 1] [9, 4, 3]\n[5, 2, 1] [8, 7, 6] [9, 4, 3]\n[5, 2, 1] [8, 7, 6, 3] [9, 4]\n[5, 2] [8, 7, 6, 3] [9, 4, 1]\n[5] [8, 7, 6, 3, 2] [9, 4, 1]\n[5] [8, 7, 6, 3, 2, 1] [9, 4]\n[5, 4] [8, 7, 6, 3, 2, 1] [9]\n[5, 4, 1] [8, 7, 6, 3, 2] [9]\n[5, 4, 1] [8, 7, 6, 3] [9, 2]\n[5, 4] [8, 7, 6, 3] [9, 2, 1]\n[5, 4, 3] [8, 7, 6] [9, 2, 1]\n[5, 4, 3] [8, 7, 6, 1] [9, 2]\n[5, 4, 3, 2] [8, 7, 6, 1] [9]\n[5, 4, 3, 2, 1] [8, 7, 6] [9]\n[5, 4, 3, 2, 1] [8, 7] [9, 6]\n[5, 4, 3, 2] [8, 7] [9, 6, 1]\n[5, 4, 3] [8, 7, 2] [9, 6, 1]\n[5, 4, 3] [8, 7, 2, 1] [9, 6]\n[5, 4] [8, 7, 2, 1] [9, 6, 3]\n[5, 4, 1] [8, 7, 2] [9, 6, 3]\n[5, 4, 1] [8, 7] [9, 6, 3, 2]\n[5, 4] [8, 7] [9, 6, 3, 2, 1]\n[5] [8, 7, 4] [9, 6, 3, 2, 1]\n[5] [8, 7, 4, 1] [9, 6, 3, 2]\n[5, 2] [8, 7, 4, 1] [9, 6, 3]\n[5, 2, 1] [8, 7, 4] [9, 6, 3]\n[5, 2, 1] [8, 7, 4, 3] [9, 6]\n[5, 2] [8, 7, 4, 3] [9, 6, 1]\n[5] [8, 7, 4, 3, 2] [9, 6, 1]\n[5] [8, 7, 4, 3, 2, 1] [9, 6]\n[] [8, 7, 4, 3, 2, 1] [9, 6, 5]\n[1] [8, 7, 4, 3, 2] [9, 6, 5]\n[1] [8, 7, 4, 3] [9, 6, 5, 2]\n[] [8, 7, 4, 3] [9, 6, 5, 2, 1]\n[3] [8, 7, 4] [9, 6, 5, 2, 1]\n[3] [8, 7, 4, 1] [9, 6, 5, 2]\n[3, 2] [8, 7, 4, 1] [9, 6, 5]\n[3, 2, 1] [8, 7, 4] [9, 6, 5]\n[3, 2, 1] [8, 7] [9, 6, 5, 4]\n[3, 2] [8, 7] [9, 6, 5, 4, 1]\n[3] [8, 7, 2] [9, 6, 5, 4, 1]\n[3] [8, 7, 2, 1] [9, 6, 5, 4]\n[] [8, 7, 2, 1] [9, 6, 5, 4, 3]\n[1] [8, 7, 2] [9, 6, 5, 4, 3]\n[1] [8, 7] [9, 6, 5, 4, 3, 2]\n[] [8, 7] [9, 6, 5, 4, 3, 2, 1]\n[7] [8] [9, 6, 5, 4, 3, 2, 1]\n[7] [8, 1] [9, 6, 5, 4, 3, 2]\n[7, 2] [8, 1] [9, 6, 5, 4, 3]\n[7, 2, 1] [8] [9, 6, 5, 4, 3]\n[7, 2, 1] [8, 3] [9, 6, 5, 4]\n[7, 2] [8, 3] [9, 6, 5, 4, 1]\n[7] [8, 3, 2] [9, 6, 5, 4, 1]\n[7] [8, 3, 2, 1] [9, 6, 5, 4]\n[7, 4] [8, 3, 2, 1] [9, 6, 5]\n[7, 4, 1] [8, 3, 2] [9, 6, 5]\n[7, 4, 1] [8, 3] [9, 6, 5, 2]\n[7, 4] [8, 3] [9, 6, 5, 2, 1]\n[7, 4, 3] [8] [9, 6, 5, 2, 1]\n[7, 4, 3] [8, 1] [9, 6, 5, 2]\n[7, 4, 3, 2] [8, 1] [9, 6, 5]\n[7, 4, 3, 2, 1] [8] [9, 6, 5]\n[7, 4, 3, 2, 1] [8, 5] [9, 6]\n[7, 4, 3, 2] [8, 5] [9, 6, 1]\n[7, 4, 3] [8, 5, 2] [9, 6, 1]\n[7, 4, 3] [8, 5, 2, 1] [9, 6]\n[7, 4] [8, 5, 2, 1] [9, 6, 3]\n[7, 4, 1] [8, 5, 2] [9, 6, 3]\n[7, 4, 1] [8, 5] [9, 6, 3, 2]\n[7, 4] [8, 5] [9, 6, 3, 2, 1]\n[7] [8, 5, 4] [9, 6, 3, 2, 1]\n[7] [8, 5, 4, 1] [9, 6, 3, 2]\n[7, 2] [8, 5, 4, 1] [9, 6, 3]\n[7, 2, 1] [8, 5, 4] [9, 6, 3]\n[7, 2, 1] [8, 5, 4, 3] [9, 6]\n[7, 2] [8, 5, 4, 3] [9, 6, 1]\n[7] [8, 5, 4, 3, 2] [9, 6, 1]\n[7] [8, 5, 4, 3, 2, 1] [9, 6]\n[7, 6] [8, 5, 4, 3, 2, 1] [9]\n[7, 6, 1] [8, 5, 4, 3, 2] [9]\n[7, 6, 1] [8, 5, 4, 3] [9, 2]\n[7, 6] [8, 5, 4, 3] [9, 2, 1]\n[7, 6, 3] [8, 5, 4] [9, 2, 1]\n[7, 6, 3] [8, 5, 4, 1] [9, 2]\n[7, 6, 3, 2] [8, 5, 4, 1] [9]\n[7, 6, 3, 2, 1] [8, 5, 4] [9]\n[7, 6, 3, 2, 1] [8, 5] [9, 4]\n[7, 6, 3, 2] [8, 5] [9, 4, 1]\n[7, 6, 3] [8, 5, 2] [9, 4, 1]\n[7, 6, 3] [8, 5, 2, 1] [9, 4]\n[7, 6] [8, 5, 2, 1] [9, 4, 3]\n[7, 6, 1] [8, 5, 2] [9, 4, 3]\n[7, 6, 1] [8, 5] [9, 4, 3, 2]\n[7, 6] [8, 5] [9, 4, 3, 2, 1]\n[7, 6, 5] [8] [9, 4, 3, 2, 1]\n[7, 6, 5] [8, 1] [9, 4, 3, 2]\n[7, 6, 5, 2] [8, 1] [9, 4, 3]\n[7, 6, 5, 2, 1] [8] [9, 4, 3]\n[7, 6, 5, 2, 1] [8, 3] [9, 4]\n[7, 6, 5, 2] [8, 3] [9, 4, 1]\n[7, 6, 5] [8, 3, 2] [9, 4, 1]\n[7, 6, 5] [8, 3, 2, 1] [9, 4]\n[7, 6, 5, 4] [8, 3, 2, 1] [9]\n[7, 6, 5, 4, 1] [8, 3, 2] [9]\n[7, 6, 5, 4, 1] [8, 3] [9, 2]\n[7, 6, 5, 4] [8, 3] [9, 2, 1]\n[7, 6, 5, 4, 3] [8] [9, 2, 1]\n[7, 6, 5, 4, 3] [8, 1] [9, 2]\n[7, 6, 5, 4, 3, 2] [8, 1] [9]\n[7, 6, 5, 4, 3, 2, 1] [8] [9]\n[7, 6, 5, 4, 3, 2, 1] [] [9, 8]\n[7, 6, 5, 4, 3, 2] [] [9, 8, 1]\n[7, 6, 5, 4, 3] [2] [9, 8, 1]\n[7, 6, 5, 4, 3] [2, 1] [9, 8]\n[7, 6, 5, 4] [2, 1] [9, 8, 3]\n[7, 6, 5, 4, 1] [2] [9, 8, 3]\n[7, 6, 5, 4, 1] [] [9, 8, 3, 2]\n[7, 6, 5, 4] [] [9, 8, 3, 2, 1]\n[7, 6, 5] [4] [9, 8, 3, 2, 1]\n[7, 6, 5] [4, 1] [9, 8, 3, 2]\n[7, 6, 5, 2] [4, 1] [9, 8, 3]\n[7, 6, 5, 2, 1] [4] [9, 8, 3]\n[7, 6, 5, 2, 1] [4, 3] [9, 8]\n[7, 6, 5, 2] [4, 3] [9, 8, 1]\n[7, 6, 5] [4, 3, 2] [9, 8, 1]\n[7, 6, 5] [4, 3, 2, 1] [9, 8]\n[7, 6] [4, 3, 2, 1] [9, 8, 5]\n[7, 6, 1] [4, 3, 2] [9, 8, 5]\n[7, 6, 1] [4, 3] [9, 8, 5, 2]\n[7, 6] [4, 3] [9, 8, 5, 2, 1]\n[7, 6, 3] [4] [9, 8, 5, 2, 1]\n[7, 6, 3] [4, 1] [9, 8, 5, 2]\n[7, 6, 3, 2] [4, 1] [9, 8, 5]\n[7, 6, 3, 2, 1] [4] [9, 8, 5]\n[7, 6, 3, 2, 1] [] [9, 8, 5, 4]\n[7, 6, 3, 2] [] [9, 8, 5, 4, 1]\n[7, 6, 3] [2] [9, 8, 5, 4, 1]\n[7, 6, 3] [2, 1] [9, 8, 5, 4]\n[7, 6] [2, 1] [9, 8, 5, 4, 3]\n[7, 6, 1] [2] [9, 8, 5, 4, 3]\n[7, 6, 1] [] [9, 8, 5, 4, 3, 2]\n[7, 6] [] [9, 8, 5, 4, 3, 2, 1]\n[7] [6] [9, 8, 5, 4, 3, 2, 1]\n[7] [6, 1] [9, 8, 5, 4, 3, 2]\n[7, 2] [6, 1] [9, 8, 5, 4, 3]\n[7, 2, 1] [6] [9, 8, 5, 4, 3]\n[7, 2, 1] [6, 3] [9, 8, 5, 4]\n[7, 2] [6, 3] [9, 8, 5, 4, 1]\n[7] [6, 3, 2] [9, 8, 5, 4, 1]\n[7] [6, 3, 2, 1] [9, 8, 5, 4]\n[7, 4] [6, 3, 2, 1] [9, 8, 5]\n[7, 4, 1] [6, 3, 2] [9, 8, 5]\n[7, 4, 1] [6, 3] [9, 8, 5, 2]\n[7, 4] [6, 3] [9, 8, 5, 2, 1]\n[7, 4, 3] [6] [9, 8, 5, 2, 1]\n[7, 4, 3] [6, 1] [9, 8, 5, 2]\n[7, 4, 3, 2] [6, 1] [9, 8, 5]\n[7, 4, 3, 2, 1] [6] [9, 8, 5]\n[7, 4, 3, 2, 1] [6, 5] [9, 8]\n[7, 4, 3, 2] [6, 5] [9, 8, 1]\n[7, 4, 3] [6, 5, 2] [9, 8, 1]\n[7, 4, 3] [6, 5, 2, 1] [9, 8]\n[7, 4] [6, 5, 2, 1] [9, 8, 3]\n[7, 4, 1] [6, 5, 2] [9, 8, 3]\n[7, 4, 1] [6, 5] [9, 8, 3, 2]\n[7, 4] [6, 5] [9, 8, 3, 2, 1]\n[7] [6, 5, 4] [9, 8, 3, 2, 1]\n[7] [6, 5, 4, 1] [9, 8, 3, 2]\n[7, 2] [6, 5, 4, 1] [9, 8, 3]\n[7, 2, 1] [6, 5, 4] [9, 8, 3]\n[7, 2, 1] [6, 5, 4, 3] [9, 8]\n[7, 2] [6, 5, 4, 3] [9, 8, 1]\n[7] [6, 5, 4, 3, 2] [9, 8, 1]\n[7] [6, 5, 4, 3, 2, 1] [9, 8]\n[] [6, 5, 4, 3, 2, 1] [9, 8, 7]\n[1] [6, 5, 4, 3, 2] [9, 8, 7]\n[1] [6, 5, 4, 3] [9, 8, 7, 2]\n[] [6, 5, 4, 3] [9, 8, 7, 2, 1]\n[3] [6, 5, 4] [9, 8, 7, 2, 1]\n[3] [6, 5, 4, 1] [9, 8, 7, 2]\n[3, 2] [6, 5, 4, 1] [9, 8, 7]\n[3, 2, 1] [6, 5, 4] [9, 8, 7]\n[3, 2, 1] [6, 5] [9, 8, 7, 4]\n[3, 2] [6, 5] [9, 8, 7, 4, 1]\n[3] [6, 5, 2] [9, 8, 7, 4, 1]\n[3] [6, 5, 2, 1] [9, 8, 7, 4]\n[] [6, 5, 2, 1] [9, 8, 7, 4, 3]\n[1] [6, 5, 2] [9, 8, 7, 4, 3]\n[1] [6, 5] [9, 8, 7, 4, 3, 2]\n[] [6, 5] [9, 8, 7, 4, 3, 2, 1]\n[5] [6] [9, 8, 7, 4, 3, 2, 1]\n[5] [6, 1] [9, 8, 7, 4, 3, 2]\n[5, 2] [6, 1] [9, 8, 7, 4, 3]\n[5, 2, 1] [6] [9, 8, 7, 4, 3]\n[5, 2, 1] [6, 3] [9, 8, 7, 4]\n[5, 2] [6, 3] [9, 8, 7, 4, 1]\n[5] [6, 3, 2] [9, 8, 7, 4, 1]\n[5] [6, 3, 2, 1] [9, 8, 7, 4]\n[5, 4] [6, 3, 2, 1] [9, 8, 7]\n[5, 4, 1] [6, 3, 2] [9, 8, 7]\n[5, 4, 1] [6, 3] [9, 8, 7, 2]\n[5, 4] [6, 3] [9, 8, 7, 2, 1]\n[5, 4, 3] [6] [9, 8, 7, 2, 1]\n[5, 4, 3] [6, 1] [9, 8, 7, 2]\n[5, 4, 3, 2] [6, 1] [9, 8, 7]\n[5, 4, 3, 2, 1] [6] [9, 8, 7]\n[5, 4, 3, 2, 1] [] [9, 8, 7, 6]\n[5, 4, 3, 2] [] [9, 8, 7, 6, 1]\n[5, 4, 3] [2] [9, 8, 7, 6, 1]\n[5, 4, 3] [2, 1] [9, 8, 7, 6]\n[5, 4] [2, 1] [9, 8, 7, 6, 3]\n[5, 4, 1] [2] [9, 8, 7, 6, 3]\n[5, 4, 1] [] [9, 8, 7, 6, 3, 2]\n[5, 4] [] [9, 8, 7, 6, 3, 2, 1]\n[5] [4] [9, 8, 7, 6, 3, 2, 1]\n[5] [4, 1] [9, 8, 7, 6, 3, 2]\n[5, 2] [4, 1] [9, 8, 7, 6, 3]\n[5, 2, 1] [4] [9, 8, 7, 6, 3]\n[5, 2, 1] [4, 3] [9, 8, 7, 6]\n[5, 2] [4, 3] [9, 8, 7, 6, 1]\n[5] [4, 3, 2] [9, 8, 7, 6, 1]\n[5] [4, 3, 2, 1] [9, 8, 7, 6]\n[] [4, 3, 2, 1] [9, 8, 7, 6, 5]\n[1] [4, 3, 2] [9, 8, 7, 6, 5]\n[1] [4, 3] [9, 8, 7, 6, 5, 2]\n[] [4, 3] [9, 8, 7, 6, 5, 2, 1]\n[3] [4] [9, 8, 7, 6, 5, 2, 1]\n[3] [4, 1] [9, 8, 7, 6, 5, 2]\n[3, 2] [4, 1] [9, 8, 7, 6, 5]\n[3, 2, 1] [4] [9, 8, 7, 6, 5]\n[3, 2, 1] [] [9, 8, 7, 6, 5, 4]\n[3, 2] [] [9, 8, 7, 6, 5, 4, 1]\n[3] [2] [9, 8, 7, 6, 5, 4, 1]\n[3] [2, 1] [9, 8, 7, 6, 5, 4]\n[] [2, 1] [9, 8, 7, 6, 5, 4, 3]\n[1] [2] [9, 8, 7, 6, 5, 4, 3]\n[1] [] [9, 8, 7, 6, 5, 4, 3, 2]\n[] [] [9, 8, 7, 6, 5, 4, 3, 2, 1]\"\"\"\nassert hanoi_solver(9) == expected\n`) })\n```\n--seed--\n--seed-contents--\n```py\n```\n--solutions--\n```py\ndef hanoi_solver(n):\n# Initialize the three rods\nA = list(range(n, 0, -1))\nB = []\nC = []\n# List to store all moves as strings\nmoves = [f\"{A} {B} {C}\"]\ndef move(num_disks, source, auxiliary, target):\nif num_disks <= 0:\nreturn\n# Move n-1 disks from source to auxiliary, so they are out of the way\nmove(num_disks - 1, source, target, auxiliary)\n# Move the nth disk from source to target\ntarget",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 33416,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tower-of-hanoi\\68773ee26f332a80bc0295db.md",
      "source_type": "git_repo"
    },
    "token_count": 24374,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "04348ecfbc4d22406bb228d9287f8b82",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tower-of-hanoi\\68773ee26f332a80bc0295db.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "```py ``` --solutions-- ```py def hanoi_solver(n): # Initialize the three rods A = list(range(n, 0, -1)) B = [] C = [] # List to store all moves as strings moves = [f\"{A} {B} {C}\"] def move(num_disks, source, auxiliary, target): if num_disks <= 0: return # Move n-1 disks from source to auxiliary, so they are out of the way move(num_disks - 1, source, target, auxiliary) # Move the nth disk from source to target targetappend(source pop())\n# Record the move\nmoves append(f\"{A} {B} {C}\")\n# Move the n-1 disks that we left on auxiliary onto target\nmove(num_disks - 1, auxiliary, source, target)\n# Start the recursive process\nmove(n, A, B, C)\nreturn '\\n' join(moves)\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 33416,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-tower-of-hanoi\\68773ee26f332a80bc0295db.md",
      "source_type": "git_repo"
    },
    "token_count": 197,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "9a535169139050505250818d14186925",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-world-cup-database\\5f9771307d4d22b9d2b75a94.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 5f9771307d4d22b9d2b75a94\ntitle: Build a World Cup Database\nchallengeType: 13\nurl: freeCodeCamp/learn-world-cup-database\ndashedName: lab-world-cup-database\n--description--\nFor this project, you will create a Bash script that enters information from World Cup games into PostgreSQL, then query the database for useful statistics.\n--instructions--\nImportant: After you pass all the project tests, save a dump of your database into a worldcup.sql file, as well as your insert_data.sh and queries.sh files, so you can complete step 2. There will be instructions how to do that within the virtual machine.\n--notes--\nRequired files: worldcup.sql, insert_data.sh, queries.sh\n--hints--\n--seed--\n--solutions--",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 749,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-world-cup-database\\5f9771307d4d22b9d2b75a94.md",
      "source_type": "git_repo"
    },
    "token_count": 176,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8c63d5cf593a072a5add86a2b69071a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-user-configuration-manager\\684aaf9ec670c68d20efd0d0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 684aaf9ec670c68d20efd0d0\ntitle: Build a User Configuration Manager\nchallengeType: 27\ndashedName: build-a-user-configuration-manager\n--description--\nIn this lab, you will build a User Configuration Manager that allows users to manage their settings such as theme, language, and notifications You will implement functions to add, update, delete, and view user settings Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should define a function named add_setting with two parameters representing a dictionary of settings and a tuple containing a key-value pair\nadd_setting function should:\nConvert the key and value to lowercase If the key setting exists, return Setting '[key]' already exists Cannot add a new setting with this name If the key setting doesn't exist, add the key-value pair to the given dictionary of settings and return Setting '[key]' added with value '[value]' successfully The messages returned should have the key and value in lowercase You should define a function named update_setting with two parameters representing a dictionary of settings and a tuple containing a key-value pair update_setting function should:\nConvert the key and value to lowercase If the key setting exists, update its value in the given dictionary of settings and return: Setting '[key]' updated to '[value]' successfully If the key setting doesn't exist, return Setting '[key]' does not exist Cannot update a non-existing setting The messages returned should have the key and value in lowercase You should define a function named delete_setting with two parameters representing a dictionary of settings and a key delete_setting function should:\nConvert the key passed to lowercase If the key setting exists, remove the key-value pair from the given dictionary of settings and return Setting '[key]' deleted successfully If the key setting does not exist, return Setting not found The messages returned should have the key in lowercase You should define a function named view_settings with one parameter representing a dictionary of settings view_settings function should:\nReturn No settings available if the given dictionary of settings is empty If the dictionary contains any settings, return a string displaying the settings The string should start with Current User Settings: followed by the key-value pairs, each on a new line and with the key capitalized",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13350,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-user-configuration-manager\\684aaf9ec670c68d20efd0d0.md",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "75671c9da3802bba1cc2494118a6f103",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-user-configuration-manager\\684aaf9ec670c68d20efd0d0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "not found The messages returned should have the key in lowercase You should define a function named view_settings with one parameter representing a dictionary of settings view_settings function should: Return No settings available if the given dictionary of settings is empty If the dictionary contains any settings, return a string displaying the settings The string should start with Current User Settings: followed by the key-value pairs, each on a new line and with the key capitalizedFor example, view_settings({'theme': 'dark', 'notifications': 'enabled', 'volume': 'high'}) should return:\n```md\nCurrent User Settings:\nTheme: dark\nNotifications: enabled\nVolume: high\n```\nFor testing the code, you should create a dictionary named test_settings to store some user configuration preferences --hints--\nYou should create a dictionary named test_settings and add some values to it js\n({\ntest: () => runPython(`\nis_dict = isinstance(test_settings, dict)\nlength = len(test_settings)\nassert is_dict and length > 0\n`)\n})\nYou should define a function named add_setting js\n({ test: () => assert(runPython(`_Node(_code) has_function(\"add_setting\")`)) })\nThe add_setting function should have two parameters js\n({\ntest: () => runPython(`\nimport inspect\nsig = inspect signature(add_setting)\nassert len(sig parameters) == 2\n`)\n})\nadd_setting should convert the key to lowercase js\n({\ntest: () => runPython(`\nsettings_in_test = {\"theme\": \"light\"}\nresult = add_setting(settings_in_test, (\"VOLUME\", \"high\"))\nassert \"volume\" in settings_in_test\nassert \"VOLUME\" not in settings_in_test\n`)\n})\nadd_setting should convert the value to lowercase js\n({\ntest: () => runPython(`\nsettings_in_test = {\"theme\": \"light\"}\nresult = add_setting(settings_in_test, (\"volume\", \"HIGH\"))\nassert settings_in_test[\"volume\"] == \"high\"\n`)\n})\nadd_setting({'theme': 'light'}, ('THEME': 'dark')) should return the error message Setting 'theme' already exists Cannot add a new setting with this name js\n({\ntest: () => runPython(`\nsettings_in_test = {\"theme\": \"light\", \"language\": \"English\"}\nresult = add_setting(settings_in_test, (\"THEME\", \"dark\"))\nexpected_msg = \"Setting 'theme' already exists Cannot add a new setting with this name",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13350,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-user-configuration-manager\\684aaf9ec670c68d20efd0d0.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "4b990c897a46f3f6714096e18cea03f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-user-configuration-manager\\684aaf9ec670c68d20efd0d0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "value to lowercase js ({ test: () => runPython(` settings_in_test = {\"theme\": \"light\"} result = add_setting(settings_in_test, (\"volume\", \"HIGH\")) assert settings_in_test[\"volume\"] == \"high\" `) }) add_setting({'theme': 'light'}, ('THEME': 'dark')) should return the error message Setting 'theme' already exists Cannot add a new setting with this name js ({ test: () => runPython(` settings_in_test = {\"theme\": \"light\", \"language\": \"English\"} result = add_setting(settings_in_test, (\"THEME\", \"dark\")) expected_msg = \"Setting 'theme' already exists Cannot add a new setting with this name\"\nassert result == expected_msg\n`)\n})\nadd_setting({'theme': 'light'}, ('volume', 'high') should add a new key-value pair and return the success message Setting 'volume' added with value 'high' successfully js\n({\ntest: () => runPython(`\nsettings_in_test = {\"theme\": \"light\"}\nresult = add_setting(settings_in_test, (\"volume\", \"high\"))\nexpected_msg = \"Setting 'volume' added with value 'high' successfully \"\nassert result == expected_msg\nassert settings_in_test[\"volume\"] == \"high\"\n`)\n})\nadd_setting should correctly add the given key-value pair to the dictionary js\n({\ntest: () => runPython(`\nsettings_in_test = {\"theme\": \"light\"}\nresult = add_setting(settings_in_test, (\"os\", \"Ubuntu\"))\nassert \"os\" in settings_in_test\nassert settings_in_test[\"os\"] == \"ubuntu\"\n`)\n})\nYou should define a function named update_setting js\n({\ntest: () => runPython(`\nassert _Node(_code) has_function('update_setting')\n`)\n})\nThe update_setting function should have two parameters js\n({\ntest: () => runPython(`\nimport inspect\nsig = inspect signature(update_setting)\nassert len(sig parameters) == 2\n`)\n})\nThe update_setting function should convert key to lowercase js\n({\ntest: () => runPython(`\nsettings_in_test = {\"theme\": \"light\", \"language\": \"English\"}\nresult = update_setting(settings_in_test, (\"THEME\", \"dark\"))\nassert \"THEME\" not in settings_in_test\nassert \"theme\" in settings_in_test\nassert settings_in_test[\"theme\"] == \"dark\"\n`)\n})\nThe update_setting function should convert value to lowercase",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13350,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-user-configuration-manager\\684aaf9ec670c68d20efd0d0.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "72614a93a65320e1f6fdd8d39990046d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-user-configuration-manager\\684aaf9ec670c68d20efd0d0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "`) }) The update_setting function should have two parameters js ({ test: () => runPython(` import inspect sig = inspect signature(update_setting) assert len(sig parameters) == 2 `) }) The update_setting function should convert key to lowercase js ({ test: () => runPython(` settings_in_test = {\"theme\": \"light\", \"language\": \"English\"} result = update_setting(settings_in_test, (\"THEME\", \"dark\")) assert \"THEME\" not in settings_in_test assert \"theme\" in settings_in_test assert settings_in_test[\"theme\"] == \"dark\" `) }) The update_setting function should convert value to lowercasejs\n({\ntest: () => runPython(`\nsettings_in_test = {\"theme\": \"light\"}\n# Use the existing \"theme\" key but an uppercase value\nresult = update_setting(settings_in_test, (\"theme\", \"HIGH\"))\nassert settings_in_test[\"theme\"] == \"high\"\n`)\n})\nupdate_setting({'theme': 'light'}, ('theme', 'dark')) should update an existing key and return the success message Setting 'theme' updated to 'dark' successfully js\n({\ntest: () => runPython(`\nsettings_in_test = {\"theme\": \"light\", \"language\": \"English\"}\nresult = update_setting(settings_in_test, (\"theme\", \"dark\"))\nexpected_msg = \"Setting 'theme' updated to 'dark' successfully \"\nassert result == expected_msg\nassert settings_in_test[\"theme\"] == \"dark\"\n`)\n})\nupdate_setting({'theme': 'light'}, ('volume', 'high')) should return the error message Setting 'volume' does not exist Cannot update a non-existing setting when the key doesn't exist js\n({\ntest: () => runPython(`\nsettings_in_test = {\"theme\": \"light\"}\nresult = update_setting(settings_in_test, (\"volume\", \"high\"))\nexpected_msg = \"Setting 'volume' does not exist Cannot update a non-existing setting \"\nassert result == expected_msg\n`)\n})\nupdate_setting should correctly update the given key-value pair in the dictionary js\n({\ntest: () => runPython(`\nsettings_in_test = {\"theme\": \"light\", \"language\": \"English\"}\nresult = update_setting(settings_in_test, (\"language\", \"spanish\"))\nassert \"language\" in settings_in_test\nassert settings_in_test[\"language\"] == \"spanish\"\n`)\n})\nYou should define a function named delete_setting js\n({\ntest: () => runPython(`\nassert _Node(_code)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13350,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-user-configuration-manager\\684aaf9ec670c68d20efd0d0.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "8c309c50e0ffa08352acc4ec1d53900c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-user-configuration-manager\\684aaf9ec670c68d20efd0d0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= update_setting(settings_in_test, (\"volume\", \"high\")) expected_msg = \"Setting 'volume' does not exist Cannot update a non-existing setting \" assert result == expected_msg `) }) update_setting should correctly update the given key-value pair in the dictionary js ({ test: () => runPython(` settings_in_test = {\"theme\": \"light\", \"language\": \"English\"} result = update_setting(settings_in_test, (\"language\", \"spanish\")) assert \"language\" in settings_in_test assert settings_in_test[\"language\"] == \"spanish\" `) }) You should define a function named delete_setting js ({ test: () => runPython(` assert _Node(_code)has_function('delete_setting')\n`)\n})\nThe delete_setting function should have two parameters js\n({\ntest: () => runPython(`\nimport inspect\nsig = inspect signature(delete_setting)\nassert len(sig parameters) == 2\n`)\n})\ndelete_setting should convert the key to lowercase js\n({\ntest: () => runPython(`\nsettings_in_test = {\"theme\": \"light\", \"language\": \"English\"}\nresult = delete_setting(settings_in_test, \"THEME\")\nassert \"theme\" not in settings_in_test\nassert \"THEME\" not in settings_in_test\n`)\n})\ndelete_setting({'theme': 'light'}, 'theme') should remove the existing key and return the success message Setting 'theme' deleted successfully js\n({\ntest: () => runPython(`\nsettings_in_test = {\"theme\": \"light\", \"language\": \"English\"}\nresult = delete_setting(settings_in_test, \"theme\")\nexpected_msg = \"Setting 'theme' deleted successfully \"\nassert result == expected_msg\nassert \"theme\" not in settings_in_test\n`)\n})\ndelete_setting should return the error message Setting not found when the key doesn't exist js\n({\ntest: () => runPython(`\nsettings_in_test = {\"theme\": \"light\"}\nresult = delete_setting(settings_in_test, \"volume\")\nexpected_msg = \"Setting not found \"\nassert result == expected_msg\n`)\n})\ndelete_setting should correctly remove the given key from the dictionary js\n({\ntest: () => runPython(`\nsettings_in_test = {\"theme\": \"light\", \"language\": \"English\"}\nresult = delete_setting(settings_in_test, \"language\")\nassert \"language\" not in settings_in_test\n`)\n})\nYou should define a function named view_settings js\n({\ntest: () => runPython(`\nassert _Node(_code)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13350,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-user-configuration-manager\\684aaf9ec670c68d20efd0d0.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "bf656ef397b3d528f3427f2c9def6ec2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-user-configuration-manager\\684aaf9ec670c68d20efd0d0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "doesn't exist js ({ test: () => runPython(` settings_in_test = {\"theme\": \"light\"} result = delete_setting(settings_in_test, \"volume\") expected_msg = \"Setting not found \" assert result == expected_msg `) }) delete_setting should correctly remove the given key from the dictionary js ({ test: () => runPython(` settings_in_test = {\"theme\": \"light\", \"language\": \"English\"} result = delete_setting(settings_in_test, \"language\") assert \"language\" not in settings_in_test `) }) You should define a function named view_settings js ({ test: () => runPython(` assert _Node(_code)has_function('view_settings')\n`)\n})\nThe view_settings function should have one parameter js\n({\ntest: () => runPython(`\nimport inspect\nsig = inspect signature(view_settings)\nassert len(sig parameters) == 1\n`)\n})\nview_settings should return the message No settings available if the given dictionary is empty js\n({\ntest: () => runPython(`\nempty_settings = {}\nresult = view_settings(empty_settings)\nexpected_msg = \"No settings available \"\nassert result == expected_msg\n`)\n})\nview_settings should return formatted settings for non-empty dictionary js\n({\ntest: () => runPython(`\nsettings_in_test = {\"theme\": \"dark\", \"notifications\": \"enabled\", \"volume\": \"high\"}\nresult = view_settings(settings_in_test)\nassert result startswith(\"Current User Settings:\")\nassert \"Theme: dark\" in result\nassert \"Notifications: enabled\" in result\nassert \"Volume: high\" in result\n`)\n})\nview_settings should capitalize the first letter of each setting name js\n({\ntest: () => runPython(`\nsettings_in_test = {\"theme\": \"dark\", \"volume\": \"high\"}\nresult = view_settings(settings_in_test)\nassert \"Theme:\" in result\nassert \"Volume:\" in result\nassert \"theme:\" not in result\nassert \"volume:\" not in result\n`)\n})\nview_settings should display the correct results and end with a newline character",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13350,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-user-configuration-manager\\684aaf9ec670c68d20efd0d0.md",
      "source_type": "git_repo"
    },
    "token_count": 408,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "780212893fe102fe30ffefa0780e7209",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-user-configuration-manager\\684aaf9ec670c68d20efd0d0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "User Settings:\") assert \"Theme: dark\" in result assert \"Notifications: enabled\" in result assert \"Volume: high\" in result `) }) view_settings should capitalize the first letter of each setting name js ({ test: () => runPython(` settings_in_test = {\"theme\": \"dark\", \"volume\": \"high\"} result = view_settings(settings_in_test) assert \"Theme:\" in result assert \"Volume:\" in result assert \"theme:\" not in result assert \"volume:\" not in result `) }) view_settings should display the correct results and end with a newline character``js\n({\ntest: () => runPython(\nsettings_in_test = {\"theme\": \"light\", \"language\": \"English\", \"notifications\": \"enabled\"}\nresult = view_settings(settings_in_test)\nassert result == \"Current User Settings:\\nTheme: light\\nLanguage: English\\nNotifications: enabled\\n\"\n`)\n})\n```\n--seed--\n--seed-contents--\n```py\n```\n--solutions--\n```py\ndef add_setting(settings, key_value):\nkey, value = key_value\nkey = key lower()\nvalue = value lower()\nif key in settings:\nreturn f\"Setting '{key}' already exists Cannot add a new setting with this name \"\nelse:\nsettings[key] = value\nreturn f\"Setting '{key}' added with value '{value}' successfully \"\ndef update_setting(settings, key_value):\nkey, value = key_value\nkey = key lower()\nvalue = value lower()\nif key in settings:\nsettings[key] = value\nreturn f\"Setting '{key}' updated to '{value}' successfully \"\nelse:\nreturn f\"Setting '{key}' does not exist Cannot update a non-existing setting \"\ndef delete_setting(settings, key):\nkey = key lower()\nif key in settings:\ndel settings[key]\nreturn f\"Setting '{key}' deleted successfully \"\nelse:\nreturn \"Setting not found \"\ndef view_settings(settings):\nif not settings:\nreturn \"No settings available \"\nelse:\nsettings_str = \"Current User Settings:\\n\"\nfor key, value in settings items():\nsettings_str += f\"{key capitalize()}: {value}\\n\"\nreturn settings_str\ntest_settings = {\n\"theme\": \"light\",\n\"language\": \"English\",\n\"notifications\": \"enabled\"\n}\nprint(add_setting(test_settings, (\"VOLUME\", \"HIGH\")))\nprint(update_setting(test_settings, (\"theme\", \"dark\")))\nprint(delete_setting(test_settings, \"language\"))\nprint(view_settings(test_settings))\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13350,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-user-configuration-manager\\684aaf9ec670c68d20efd0d0.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "01e3f9c541eaa5ccf66f76f2c2d014a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-voting-system\\673b567e3ba535dda140d278.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 673b567e3ba535dda140d278\ntitle: Build a Voting System\nchallengeType: 26\ndashedName: build-a-voting-system\n--description--\nIn this lab, you will build a voting system that uses Map to create a poll and Set to prevent duplicate voting Objective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should initialize a poll variable to a new Map object You should have a function addOption that accepts a parameter option In the addOption function:\nIf the option does not already exist in the poll, it should be added to the poll with an empty Set as its value to track voters You should also return the message Option \"<option>\" added to the poll If the option already exists, it should return the message Option \"<option>\" already exists If you try to add an empty option, the function should return the message Option cannot be empty You should have a function vote that accepts two parameters, option (the option to vote for) and voterId (a unique ID for the voter) In the vote function:\nIf the option does not exist in the poll, the function should return the message Option \"<option>\" does not exist If the option exists, the function should check if the voterId has already voted for this option If the voter has already voted, the function should display the message Voter <voterId> has already voted for \"<option>\" If the voter has not voted, voterId should be added to the Set of voters for this option The function should return the message Voter <voterId> voted for \"<option>\" You should have at least three options in your poll Your poll should have at least three votes You should have a function displayResults that returns the poll results in the following format:\n```js\nPoll Results:\nOptionA: N votes\nOptionB: N votes /*\nsample output\nPoll Results:\nTurkey: 2 votes\nMorocco: 1 votes\n*/\n```\n--hints--\nYou should have a poll variable initialized to a new Map object js\nassert exists(poll);\nassert instanceOf(poll, Map);\nYou should define a function addOption that accepts a parameter option js\nassert isFunction(addOption);\nassert match(\naddOption toString(),\n/^function\\s+addOption\\s*\\(\\s*option\\s*\\)\\s*\\{|\\( \\s*option\\s*\\)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8119,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-voting-system\\673b567e3ba535dda140d278.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "88c8052423875ef4343f17de08c8409f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-voting-system\\673b567e3ba535dda140d278.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "You should have a function displayResults that returns the poll results in the following format: ```js Poll Results: OptionA: N votes OptionB: N votes /* sample output Poll Results: Turkey: 2 votes Morocco: 1 votes */ ``` --hints-- You should have a poll variable initialized to a new Map object js assert exists(poll); assert instanceOf(poll, Map); You should define a function addOption that accepts a parameter option js assert isFunction(addOption); assert match( addOption toString(), /^function\\s+addOption\\s*\\(\\s*option\\s*\\)\\s*\\{|\\( \\s*option\\s*\\)\\s*=>/\n);\nYou should define a function vote that accepts two parameters, option and voterId js\nassert isFunction(vote);\nassert match(vote toString(), /\\(\\s*option\\s*,\\s*voterId\\s*\\)/);\nYou should define a function displayResults to display the poll results js\nassert isFunction(displayResults);\nYou should have at least three options in your poll js\nassert isAtLeast(poll size, 3);\nYour poll should have at least three votes js\nlet totalVotes = 0;\nfor (let voters of poll values()) {\ntotalVotes += voters size;\n}\nassert isAtLeast(totalVotes, 3);\nYou should ensure each voting option maps to a Set object ```js\nconst pollCopy = new Map(poll);\ntry {\npoll clear();\naddOption('Turkey');\nassert instanceOf(poll get('Turkey'), Set);\n} finally {\npoll clear();\npollCopy forEach((val, key) => {\npoll set(key, val);\n});\n}\n```\naddOption(\"Egypt\") should return Option \"Egypt\" added to the poll js\nconst pollCopy = new Map(poll);\ntry {\npoll clear();\nassert equal(addOption('Egypt'), 'Option \"Egypt\" added to the poll ');\n} finally {\npoll clear();\npollCopy forEach((val, key) => {\npoll set(key, val);\n});\n}\nAdding an empty option should return \"Option cannot be empty \"\njs\nassert equal(addOption(''), 'Option cannot be empty ');\nWhen Turkey is already added, addOption(\"Turkey\") should return Option \"Turkey\" already exists js\nconst pollCopy = new Map(poll);\ntry {\npoll clear();\naddOption('Turkey');\naddOption('Turkey');\nassert equal(addOption('Turkey'), 'Option \"Turkey\" already exists ');\n} finally {\npoll",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8119,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-voting-system\\673b567e3ba535dda140d278.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "2ab71ccacbf7d788ed5c7ca4de35d00a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-voting-system\\673b567e3ba535dda140d278.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'Option \"Egypt\" added to the poll '); } finally { poll clear(); pollCopy forEach((val, key) => { poll set(key, val); }); } Adding an empty option should return \"Option cannot be empty \" js assert equal(addOption(''), 'Option cannot be empty '); When Turkey is already added, addOption(\"Turkey\") should return Option \"Turkey\" already exists js const pollCopy = new Map(poll); try { poll clear(); addOption('Turkey'); addOption('Turkey'); assert equal(addOption('Turkey'), 'Option \"Turkey\" already exists '); } finally { pollclear();\npollCopy forEach((val, key) => {\npoll set(key, val);\n});\n}\nWhen Malaysia exists in the voting options, vote(\"Malaysia\", \"traveler1\") should return Voter traveler1 voted for \"Malaysia\" js\nconst pollCopy = new Map(poll);\ntry {\npoll clear();\naddOption('Malaysia');\nassert equal(\nvote('Malaysia', 'traveler1'),\n'Voter traveler1 voted for \"Malaysia\" '\n);\n} finally {\npoll clear();\npollCopy forEach((val, key) => {\npoll set(key, val);\n});\n}\nvote should update the Set of voters for an option js\nconst pollCopy = new Map(poll);\ntry {\npoll clear();\naddOption('Alaska');\nvote('Alaska', 'seal');\nassert isTrue(poll get('Alaska') has('seal'));\n} finally {\npoll clear();\npollCopy forEach((val, key) => {\npoll set(key, val);\n});\n}\nWhen traveler1 tries to vote for Algeria again, vote(\"Algeria\", \"traveler1\") should return Voter traveler1 has already voted for \"Algeria\" js\nconst pollCopy = new Map(poll);\ntry {\npoll clear();\naddOption('Algeria');\nvote('Algeria', 'traveler1');\nassert equal(\nvote('Algeria', 'traveler1'),\n'Voter traveler1 has already voted for \"Algeria\" '\n);\n} finally {\npoll clear();\npollCopy forEach((val, key) => {\npoll set(key, val);\n});\n}\nDuplicate votes should not increase the size of the Set ```js\nconst pollCopy = new Map(poll);\ntry {\npoll clear();\naddOption('Turkey');\nvote('Turkey', 'traveler1');\nconst voterSet = poll",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8119,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-voting-system\\673b567e3ba535dda140d278.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "f42d853a029df09f47ace2903c1ce77b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-voting-system\\673b567e3ba535dda140d278.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "return Voter traveler1 has already voted for \"Algeria\" js const pollCopy = new Map(poll); try { poll clear(); addOption('Algeria'); vote('Algeria', 'traveler1'); assert equal( vote('Algeria', 'traveler1'), 'Voter traveler1 has already voted for \"Algeria\" ' ); } finally { poll clear(); pollCopy forEach((val, key) => { poll set(key, val); }); } Duplicate votes should not increase the size of the Set ```js const pollCopy = new Map(poll); try { poll clear(); addOption('Turkey'); vote('Turkey', 'traveler1'); const voterSet = pollget('Turkey');\nconst initialSize = voterSet size;\nvote('Turkey', 'traveler1');\nassert equal(voterSet size, initialSize);\n} finally {\npoll clear();\npollCopy forEach((val, key) => {\npoll set(key, val);\n});\n}\n```\nWhen Nigeria is not in the voting options, vote(\"Nigeria\", \"traveler2\") should return Option \"Nigeria\" does not exist js\nconst pollCopy = new Map(poll);\ntry {\npoll clear();\nassert equal(\nvote('Nigeria', 'traveler2'),\n'Option \"Nigeria\" does not exist '\n);\n} finally {\npoll clear();\npollCopy forEach((val, key) => {\npoll set(key, val);\n});\n}\nA unique option should be able to receive multiple votes js\nconst pollCopy = new Map(poll);\ntry {\npoll clear();\naddOption('Bali');\nassert equal(vote('Bali', 'traveler1'), 'Voter traveler1 voted for \"Bali\" ');\nassert equal(vote('Bali', 'traveler2'), 'Voter traveler2 voted for \"Bali\" ');\nassert equal(poll get('Bali') size, 2);\n} finally {\npoll clear();\npollCopy forEach((val, key) => {\npoll set(key, val);\n});\n}\ndisplayResults() should return the results in the correct format ```js\nconst pollCopy = new Map(poll);\ntry {\npoll clear();\naddOption('Turkey');\naddOption('Morocco');\nvote('Turkey', 'traveler1');\nvote('Turkey', 'traveler2');\nvote('Morocco', 'traveler3');\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8119,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-voting-system\\673b567e3ba535dda140d278.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "ff03a79d388c671105896cb5b4265ff7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-voting-system\\673b567e3ba535dda140d278.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "const pollCopy = new Map(poll); try { poll clear(); addOption('Bali'); assert equal(vote('Bali', 'traveler1'), 'Voter traveler1 voted for \"Bali\" '); assert equal(vote('Bali', 'traveler2'), 'Voter traveler2 voted for \"Bali\" '); assert equal(poll get('Bali') size, 2); } finally { poll clear(); pollCopy forEach((val, key) => { poll set(key, val); }); } displayResults() should return the results in the correct format ```js const pollCopy = new Map(poll); try { poll clear(); addOption('Turkey'); addOption('Morocco'); vote('Turkey', 'traveler1'); vote('Turkey', 'traveler2'); vote('Morocco', 'traveler3'); assertequal(\ndisplayResults(),\n'Poll Results:\\nTurkey: 2 votes\\nMorocco: 1 votes'\n);\n} finally {\npoll clear();\npollCopy forEach((val, key) => {\npoll set(key, val);\n});\n}\n```\n--seed--\n--seed-contents--\n```js\n```\n--solutions--\n```js\nconst poll = new Map();\nfunction addOption(option) {\nif ( option || option trim() === '') {\nreturn 'Option cannot be empty ';\n}\nif ( poll has(option)) {\npoll set(option, new Set());\nreturn Option \"${option}\" added to the poll ;\n} else {\nreturn Option \"${option}\" already exists ;\n}\n}\nfunction vote(option, voterId) {\nif ( poll has(option)) {\nreturn Option \"${option}\" does not exist ;\n}\nconst voters = poll get(option);\nif (voters has(voterId)) {\nreturn Voter ${voterId} has already voted for \"${option}\" ;\n} else {\nvoters add(voterId);\nreturn Voter ${voterId} voted for \"${option}\" ;\n}\n}\nfunction displayResults() {\nlet results = 'Poll Results:\\n';\nfor (let [option, voters] of poll entries()) {\nresults += ${option}: ${voters size} votes\\n;\n}\nreturn results trim();\n}\naddOption('Turkey');\naddOption('Morocco');\naddOption('Spain');\nvote('Turkey', 'traveler1');\nvote('Turkey', 'traveler2');\nvote('Morocco', 'traveler3');\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8119,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-voting-system\\673b567e3ba535dda140d278.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "81a10aab6e536e5f6adde7e1278177a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55eb7791559421ff0cd3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a55eb7791559421ff0cd3\ntitle: What Are Good Ways to Make Audio and Video Content Accessible challengeType: 19\ndashedName: what-are-good-ways-to-make-audio-and-video-content-accessible\n--description--\nMultimedia, especially video, has become the go-to format for sharing information online With this surge in content, there's a growing need to ensure everyone can access and enjoy video and audio content online, irrespective of their abilities or environment Making your audio and video content accessible isn't just a nice-to-have, it's essential for reaching a wider audience Let's look at some inexpensive ways to make your video and audio content more accessible A video is not just about visuals but also audio, so the first thing you should consider doing is adding captions or subtitles to your video content Captions provide the text version of spoken words and important non-verbal sounds, like music or laughter, synchronized with the video Subtitles on the other hand are essential for people who don't understand the language you're speaking This helps not only people who are deaf or hard of hearing but also those watching videos in noisy or quiet environments To add captions or subtitles to your video or audio content, you can use the track element inside your video or audio element:\n```html\n```\nThe kind attribute is used to tell the track element how it should be used Valid values for the kind attribute include captions, subtitles, chapters, and metadata The srclang attribute represents the language for the track content The label attribute is a descriptive title for the text track that browsers use to identify and display it in the list of available text tracks Another important thing to consider is providing a transcript for your audio and video content A transcript is a text version of all the spoken words in your audio or video Unlike captions, transcripts don’t need to be synchronized with the media Transcripts are useful for deaf people and those hard of hearing They're also beneficial for people who prefer reading instead of watching or listening Transcripts also make your content searchable, allowing users to quickly find specific parts of your audio or video If you have a video or audio on a website, you can simply add the transcript below the audio or video:\n```html\nYour browser does not support the audio element Transcript\n[Speaker 1]: Welcome to the tutorial on making accessible content\n[Speaker 2]: Today, we'll cover captions, transcripts, and more",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5862,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55eb7791559421ff0cd3.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "bd3b97effcd9256eb6cd7ff2ecbce32c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55eb7791559421ff0cd3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "who prefer reading instead of watching or listening Transcripts also make your content searchable, allowing users to quickly find specific parts of your audio or video If you have a video or audio on a website, you can simply add the transcript below the audio or video: ```html Your browser does not support the audio element Transcript [Speaker 1]: Welcome to the tutorial on making accessible content [Speaker 2]: Today, we'll cover captions, transcripts, and more```\nIf you're publishing videos on a video-sharing platform like YouTube or Vimeo, they have automatic captions and transcripts for videos But if you're not satisfied, you can use services like veed io, Rev, Amara, and Descript Other ways to make your video and audio content accessible include:\nAdding a sign language overlay for videos for deaf people and those hard of hearing Providing volume and speed controls Ensuring good contrast for on-screen text Offering multiple formats --questions--\n--text--\nHow are captions different from subtitles in video content --answers--\nCaptions provide translations for non-native speakers --feedback--\nFocus on what each feature is intended for and the specific audience it serves Captions include spoken words and non-verbal sounds, while subtitles are for viewers who don't understand the language Subtitles include both spoken words and non-verbal sounds, while captions are only for translations --feedback--\nFocus on what each feature is intended for and the specific audience it serves Subtitles are synchronized with the video, but captions are not --feedback--\nFocus on what each feature is intended for and the specific audience it serves --video-solution--\n2\n--text--\nHow can you add captions or subtitles directly to your video or audio content in HTML --answers--\nBy using the caption tag inside the video or audio element --feedback--\nLook for the specific HTML tag designed to handle captions and subtitles By using the track tag inside the video or audio element By placing the subtitle tag within the video or audio element --feedback--\nLook for the specific HTML tag designed to handle captions and subtitles By embedding a text tag inside the video or audio element --feedback--\nLook for the specific HTML tag designed to handle captions and subtitles --video-solution--\n2\n--text--\nWhy are transcripts important for audio and video content --answers--\nTranscripts are only useful for people who prefer watching videos --feedback--\nConsider the accessibility benefits and the additional functionality that transcripts provide",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5862,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55eb7791559421ff0cd3.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "d3fff9e4d8ac3f961217ad14d0661b8d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55eb7791559421ff0cd3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "video or audio element --feedback-- Look for the specific HTML tag designed to handle captions and subtitles By embedding a text tag inside the video or audio element --feedback-- Look for the specific HTML tag designed to handle captions and subtitles --video-solution-- 2 --text-- Why are transcripts important for audio and video content --answers-- Transcripts are only useful for people who prefer watching videos --feedback-- Consider the accessibility benefits and the additional functionality that transcripts provideTranscripts help make content accessible for deaf or hard-of-hearing individuals and allow for easy searching of specific content Transcripts are solely for translating the spoken language into another language --feedback--\nConsider the accessibility benefits and the additional functionality that transcripts provide Transcripts are used to add non-verbal sounds like music and laughter to the content --feedback--\nConsider the accessibility benefits and the additional functionality that transcripts provide --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5862,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55eb7791559421ff0cd3.md",
      "source_type": "git_repo"
    },
    "token_count": 177,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "af78876147c0154d90cde458d02d3a55",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55b5c0c14493328fe36e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a55b5c0c14493328fe36e\ntitle: When Is the alt Attribute Needed, and What Are Some Examples of Good Alt Text challengeType: 19\ndashedName: when-is-the-alt-attribute-needed\n--description--\nAlternative text, often abbreviated as alt text, is a brief text description of an image It provides essential information about the image for users who cannot see it, such as people who use screen readers and other assistive technologies It's essential for making websites accessible to people with visual disabilities Alternative text is also used by search engines to understand images Some browsers may also display it when an image is not loaded properly This can happen when the image file is missing or when the user has connectivity issues So it's helpful for many different purposes A person with a visual disability will not be able to know what's in the image unless it's described in the alt text An example of bad alt text for an image of a puppy would be \"A cute puppy \" This text is not specific enough to convey the important details of the image, like what does the puppy look like Where is the puppy Are there any important objects around the puppy Let's improve this An example of good alternative text would be: \"A black and white puppy with an orange collar lies on its belly in the sand, looking off to the side A bright orange ball rests near its front paws \"\nHere you can see this in HTML with an image element, the alt attribute, and a more detailed description:\nhtml\n<img src=\"puppy png\" alt=\"A black and white puppy with an orange collar lies on its belly in the sand, looking off to the side A bright orange ball rests near its front paws \" />\nIt is important to note that there is no one correct way to write alt text for an image What you include in your description will depend on the context the picture is used in For example, if the puppy picture was on a website about dog breeds, you might want to include more specifics about the physical description of the puppy and possibly ignore the fact that the puppy is at the beach playing with an orange ball Ultimately, the alt text you use for an image should reflect the primary purpose for including the image on the page, and the information you provide should give people who can't see the image the necessary details to understand that purpose Here we have another example of a beautiful tropical resort Let's describe it",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7008,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55b5c0c14493328fe36e.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "922b245fdc5272f8c12f941a4953727c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55b5c0c14493328fe36e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "physical description of the puppy and possibly ignore the fact that the puppy is at the beach playing with an orange ball Ultimately, the alt text you use for an image should reflect the primary purpose for including the image on the page, and the information you provide should give people who can't see the image the necessary details to understand that purpose Here we have another example of a beautiful tropical resort Let's describe itAn example of bad alt text for this image would be \"Resort \"\nThis is too short and it doesn't provide enough information about the image To improve this description, you could expand it to include the most important elements of the image:\n\"Tropical resort featuring a swimming pool surrounded by palm trees and bungalows \"\nYou can use the alt attribute in HTML like this:\nhtml\n<img src=\"resort png\" alt=\"Tropical resort featuring a swimming pool surrounded by palm trees and bungalows \" />\nNow that you know what makes good and bad alt text, let's see some of the best practices You should try to keep alt text short It should be detailed enough to understand the image but not so long that it becomes confusing You should not try to describe every little detail Focus on the most important aspects of the image Generally, you don't need to start with \"image of\" or \"picture of \" You can just start the description directly Also, if there's similar text around the image, you don't need to write it again It's usually recommended to end the alt text with a period for consistency If the image is a link to another page, instead of describing the image itself, the alt text should describe what will happen if users click on it For example, if your website has a right arrow icon that takes the user to the next page, instead of writing an alt text that only says \"right arrow\", like in this example, where you can see the alt attribute with this description:\nhtml\n<a href=\"about html\">\n<img src=\"arrow-right png\" alt=\"Right arrow \" />\n</a>\nYou should write something like this instead, where the alt text describes what will happen if users clicks on the image They will go to the next page html\n<a href=\"about html\">\n<img src=\"arrow-right png\" alt=\"Go to next page \" />\n</a>\nOnly images that convey important information should have alt text",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7008,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55b5c0c14493328fe36e.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "62f850719f97f02ba34c6af4b386e896",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55b5c0c14493328fe36e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "this example, where you can see the alt attribute with this description: html <a href=\"about html\"> <img src=\"arrow-right png\" alt=\"Right arrow \" /> </a> You should write something like this instead, where the alt text describes what will happen if users clicks on the image They will go to the next page html <a href=\"about html\"> <img src=\"arrow-right png\" alt=\"Go to next page \" /> </a> Only images that convey important information should have alt textIf an image is only used for decorative purposes, it should have null (empty) alt text, so it can be ignored by screen readers and other assistive technologies Here is an example of an empty alt attribute is empty:\nhtml\n<img src=\"decorative_image jpg\" alt=\"\" />\nEvery image on your website should have an alt attribute, even if it's empty If you omit the alt attribute completely, some screen readers will read the file name instead, which can be distracting for people who use assistive technologies, so this is not recommended Finally, before your website is live, you should carefully test if screen readers can read the alt text correctly Writing effective alt text is essential for creating accessible web content As a web developer, by providing clear descriptions of your images, you can make sure that everyone can engage with your website in an inclusive online experience --questions--\n--text--\nWhat is the purpose of alt text in an image --answers--\nTo improve the appearance of an image --feedback--\nThink about why images should be accessible and why these descriptions are important To provide a decorative element to the webpage --feedback--\nThink about why images should be accessible and why these descriptions are important To describe the image for people with visual disabilities To increase website loading speed --feedback--\nThink about why images should be accessible and why these descriptions are important --video-solution--\n3\n--text--\nWhen is it appropriate to leave the alt text empty for an image --answers--\nWhen the image is purely decorative When the image is important to understand the content --feedback--\nThink about the role of the image on the page When the image is small --feedback--\nThink about the role of the image on the page Always, to improve website performance --feedback--\nThink about the role of the image on the page --video-solution--\n1\n--text--\nWhat should be the primary focus of the alt text for an image that acts as a link --answers--\nDescribing the image visually",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7008,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55b5c0c14493328fe36e.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "0311d81540a972104298cbcb5618d2f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55b5c0c14493328fe36e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "image is important to understand the content --feedback-- Think about the role of the image on the page When the image is small --feedback-- Think about the role of the image on the page Always, to improve website performance --feedback-- Think about the role of the image on the page --video-solution-- 1 --text-- What should be the primary focus of the alt text for an image that acts as a link --answers-- Describing the image visually--feedback--\nThink about the purpose of alt text and how it relates to links Indicating the link's destination Combining both the image description and link destination --feedback--\nThink about the purpose of alt text and how it relates to links The alt text is not important for images that are links --feedback--\nThink about the purpose of alt text and how it relates to links --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7008,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55b5c0c14493328fe36e.md",
      "source_type": "git_repo"
    },
    "token_count": 174,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "175955e6e52170212937645642556424",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55dd1d86bc939606e204.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a55dd1d86bc939606e204\ntitle: What Are the Accessibility Benefits for Good Link Text, and What Are Examples of Good Link Text challengeType: 19\ndashedName: what-are-the-accessibility-benefits-for-good-link-text\n--description--\nLet's take a look at the benefits of writing good link texts in the context of accessibility, and some examples of good link texts The first visible benefit of a good link text is that it makes it easier for everyone to find information quickly Descriptive links help users know where they're headed and what they'll access This ensures the user doesn't feel lost and improves the overall user experience For those using screen readers, a clear and descriptive link text is a must Screen readers read the link text aloud, so a text like \"Read our accessibility guide\" is way better than \"Click here \"\nMaking link text clear and descriptive isn't just beneficial for those living with visual impairments Descriptive links also help people with cognitive disabilities by providing clear context Here are some best practices to keep in mind while writing link texts:\nMake sure links are visually distinct by using underlining and other visual cues, so users can easily identify and navigate them Avoid generic link texts like \"here\", \"click here\", and \"more-info\" as they don't provide any useful information Aim for concise and descriptive link texts, ideally between 2-5 words, that convey the link's purpose Avoid jargon and abbreviations that users may not understand Focus on the destination, not the action For example, \"user behavior results\", instead of \"click here to read more\" Don’t repeat the same link text for different destinations Place links in a way that they make sense within the surrounding text For example, \"for more details, visit our events page\" instead of \"Click here for more\" Here are some examples of good link texts for specific use cases, compared to less helpful ones Let's say you want to link to a page providing details about an event like this:\nhtml\n<a href=\"webinar-details-link\">Details</a>\nDetails is vague and doesn’t provide specific information about what the user will find if they click the link Without additional context, users might not know if the link leads to details about a webinar, a product, a policy, or something else",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55dd1d86bc939606e204.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "5a99902f338ac0e78babff18f1bbcb39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55dd1d86bc939606e204.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "some examples of good link texts for specific use cases, compared to less helpful ones Let's say you want to link to a page providing details about an event like this: html <a href=\"webinar-details-link\">Details</a> Details is vague and doesn’t provide specific information about what the user will find if they click the link Without additional context, users might not know if the link leads to details about a webinar, a product, a policy, or something elseNow, here is an example of good link text:\nhtml\n<a href=\"webinar-details-link\">\nGet details about our upcoming webinar\n</a>\nThis link text gives users context about the content they will find, making it easier to decide whether they want to click on it It reduces ambiguity by specifying that the link is related to a webinar Here is an another example linking to a post in a blog:\nhtml\n<a href=\"/blog-post-link\">Read more</a>\nThe link text Read more is not ideal in terms of accessibility because it lacks context Here is a better link text example:\nhtml\n<a href=\"/blog-post-link\">\nRead our latest blog post on web accessibility\n</a>\nThis updated link text provides users with a clearer idea of what to expect and why they might want to click the link, which is particularly important for those using screen readers Let's take a look at one more example Let's say you want to provide more information about a certain topic:\nhtml\n<a href=\"/link-to-topic\">More info</a>\nMore info is also vague and can be problematic for accessibility It doesn't provide specific details about the link's destination, which can be confusing for users relying on screen readers or those who might be navigating the site in a non-linear way Here is a better example for link text:\nhtml\n<a href=\"/link-to-topic\">\nLearn more about our accessibility efforts\n</a>\nThis updated link text is better because it clearly describes what the user will find if they click the link Users can immediately understand that the link leads to information about your accessibility efforts --questions--\n--text--\nWhy is clear and descriptive link text essential for those using screen readers --answers--\nIt enhances the visual appeal of the website --feedback--\nThink about what helps users understand the purpose of the link when it's read aloud It ensures the link text is read aloud clearly by the screen reader It speeds up the loading speed of the website",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55dd1d86bc939606e204.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "403121170634f82e4e3ac47c263efed9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55dd1d86bc939606e204.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Users can immediately understand that the link leads to information about your accessibility efforts --questions-- --text-- Why is clear and descriptive link text essential for those using screen readers --answers-- It enhances the visual appeal of the website --feedback-- Think about what helps users understand the purpose of the link when it's read aloud It ensures the link text is read aloud clearly by the screen reader It speeds up the loading speed of the website--feedback--\nThink about what helps users understand the purpose of the link when it's read aloud It reduces the number of links on a page --feedback--\nThink about what helps users understand the purpose of the link when it's read aloud --video-solution--\n2\n--text--\nWhat's the first visible benefit of a good link text --answers--\nIt helps users know where they're headed and what they'll access It improves the aesthetics of the web page --feedback--\nThink about what makes finding information easier and improves user experience It increases the loading speed of the page --feedback--\nThink about what makes finding information easier and improves user experience It reduces the number of links on a page --feedback--\nThink about what makes finding information easier and improves user experience --video-solution--\n1\n--text--\nWhich of the following is a best practice for writing link texts --answers--\nUse generic texts like \"click here\" to keep it simple --feedback--\nThink about what helps users identify and understand the link's purpose quickly Repeat the same link text for different destinations --feedback--\nThink about what helps users identify and understand the link's purpose quickly Make links visually distinct with underlining and other visual cues Focus on the action rather than the destination, like \"click here to read more\" --feedback--\nThink about what helps users identify and understand the link's purpose quickly --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6007,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55dd1d86bc939606e204.md",
      "source_type": "git_repo"
    },
    "token_count": 363,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ef7327d51fa0f0a88b4d5f02bd1e13c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55fbc2d95a9453151caf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a55fbc2d95a9453151caf\ntitle: What Are Some Ways to Make Web Applications Keyboard Accessible challengeType: 19\ndashedName: what-are-some-ways-to-make-web-applications-keyboard-accessible\n--description--\nMany users rely on keyboards instead of mice due to physical disabilities, repetitive strain injuries, or personal preference This includes users of screen readers and those who may not have a working mouse Keyboard accessibility ensures these users can navigate web applications effectively without barriers Let's look at some practical techniques you can employ to make web applications keyboard accessible Many users rely on the Tab key to move through interactive elements on a webpage By default, browsers let users tab through elements like links, buttons, and form fields in the order they appear in the HTML This is called the natural tab order Sometimes, you may want to adjust which elements are focusable or change their focus order The tabindex attribute allows you do this Here is the basic syntax:\nhtml\n<element tabindex=\"number\">Element Text</element>\nThe value of tabindex determines how the element behaves in keyboard navigation:\ntabindex=\"0\": Adds the element to the natural tab order For example:\n```html\nFirst\nSecond\nThird\n```\nTabbing will move focus from the button to the div, then to the link, following their order in the HTML tabindex=\"-1\": Makes an element focusable programmatically This is useful for managing focus in elements that are not normally focusable, such as headings, containers, dialogs, or error messages:\n```html\nSorry, there was an error with your submission ```\nIn this example, the paragraph is not part of the normal tab order, so users cannot reach it by pressing the Tab key However, if you set focus to this element via a script, the message will be brought to the user's attention You'll learn more about this technique in JavaScript lectures tabindex greater than 0: Sets a custom tab order, so elements with lower positive values are focused first:\nhtml\n<input tabindex=\"2\">\n<input tabindex=\"1\">\n<input tabindex=\"3\">\nIn this example, tabbing will focus the input with tabindex=\"1\" first, then 2, then 3, regardless of their order in the HTML Custom positive values are sometimes used in complex widgets, such as a toolbar where you want a specific navigation order",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6576,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55fbc2d95a9453151caf.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "9f9f87fc15f8b51c43591eea495c87ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55fbc2d95a9453151caf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "You'll learn more about this technique in JavaScript lectures tabindex greater than 0: Sets a custom tab order, so elements with lower positive values are focused first: html <input tabindex=\"2\"> <input tabindex=\"1\"> <input tabindex=\"3\"> In this example, tabbing will focus the input with tabindex=\"1\" first, then 2, then 3, regardless of their order in the HTML Custom positive values are sometimes used in complex widgets, such as a toolbar where you want a specific navigation orderHowever, this approach is discouraged because it can make navigation confusing and hard to maintain, especially as the page grows or changes accesskey is another attribute you can use to make your web project keyboard accessible It allows you to define a key that focuses on or activates a particular element:\nhtml\n<button accesskey=\"s\">Save</button>\n<button accesskey=\"c\">Cancel</button>\n<a href=\"index html\" accesskey=\"h\">Home</a>\nIn the above code:\naccesskey=\"s\" assigns the key S to the Save button On most browsers, pressing ALT + S (on Windows) and CTRL + Option + S (on Mac) will activate this button accesskey=\"c\" sets the key C to the Cancel button, allowing users to activate it using ALT + C (Windows) and CTRL + Option + C (Mac) accesskey=\"h\" assigns the key H to the Home link, allowing users to navigate to the homepage using ALT + H (Windows) and CTRL + Option + H (Mac) Please note that the exact key combination to activate the accesskey might vary depending on the browser and operating system It's typically ALT + Specified Key on Windows and CTRL + Option + Specified Key on Mac Another way to make the keyboard accessible in your apps is to make sure you provide clear focus indicators If you feel the default browser focus indicator is not enough, you can override it by targeting the focus state of the element Here is an example of styling the focus state for an HTML element:\ncss\nelement:focus {\noutline: 2px solid #005fcc;\n}\nThe outline property is used to define the outline around the element This example sets the outline to a solid blue line with 2 pixels set for the thickness The focus indicator should be styled in a way that makes it obvious which element currently has focus",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6576,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55fbc2d95a9453151caf.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b9c4b7d20572f3a779934dd28bb83e17",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55fbc2d95a9453151caf.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "by targeting the focus state of the element Here is an example of styling the focus state for an HTML element: css element:focus { outline: 2px solid #005fcc; } The outline property is used to define the outline around the element This example sets the outline to a solid blue line with 2 pixels set for the thickness The focus indicator should be styled in a way that makes it obvious which element currently has focusIn order to be accessible, the indicator must have a minimum color contrast of at least 3:1 with the background color it covers You should also avoid keyboard traps, which occur when a user cannot move focus away from a certain element in components like modals and popups --questions--\n--text--\nWhy is the tabindex property important when managing keyboard navigation on a webpage --answers--\nIt makes the page load faster --feedback--\nThink about how you control the sequence of focusable elements It allows you to control the order in which elements are focused when using the tab key It adds animations to focusable elements --feedback--\nThink about how you control the sequence of focusable elements It hides non-essential elements from keyboard navigation --feedback--\nThink about how you control the sequence of focusable elements --video-solution--\n2\n--text--\nHow does the accesskey attribute contribute to keyboard accessibility on a webpage --answers--\nIt enhances the visual appearance of the webpage --feedback--\nThink about how users can quickly access important elements using the keyboard It speeds up the loading time of the website --feedback--\nThink about how users can quickly access important elements using the keyboard It allows you to define a specific key that focuses on or activates a particular element It automatically generates shortcut keys for all elements --feedback--\nThink about how users can quickly access important elements using the keyboard --video-solution--\n3\n--text--\nWhy exactly is it important to avoid keyboard traps in web applications --answers--\nIt improves SEO --feedback--\nThink about how users should be able to navigate freely without getting stuck It lets the developer work faster --feedback--\nThink about how users should be able to navigate freely without getting stuck It ensures the page has fewer interactive elements --feedback--\nThink about how users should be able to navigate freely without getting stuck It ensures users can move focus away from elements like modals and popups --video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6576,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-media-elements\\672a55fbc2d95a9453151caf.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7de6298a673e2dc1f0c614d55e5f5ea3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-tables-forms\\672a539b887ec68c593cdc4b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a539b887ec68c593cdc4b\ntitle: What Are Best Practices for Tables and Accessibility challengeType: 19\ndashedName: what-are-best-practices-for-tables-and-accessibility\n--description--\nWhen we see a table, we immediately start making visual associations between the data and the headers For example, let's say we have a table representing our pets We have two dogs and two cats and the table is showing us their names and ages While a sighted person may be able to understand the relationships in this table, making the connections between the values and the headers is much harder for people who use screen readers to navigate the table As a web developer, you are in charge of creating these associations and structuring your HTML markup in a way that is also easy for screen reader users to interpret So, let's see how you can create accessible tables that everyone can understand The first best practice that we will cover is using table caption With the caption element, you can write the caption (or title) of a table, so users, especially those who use assistive technologies, can quickly understand the table's purpose and content You should place the caption element immediately after the opening tag of the table element This way, screen readers and other assistive technologies can provide more context by announcing the caption before reading the content ```html\nOur Pets\n```\nNow let's talk about row and column headers Headers are special cells, typically found at the start of a row or column, that describe the type of data stored in the row or column You can define a row or column header with the table header element, th For example, the code below creates a table for two pets Every row has a row header (the name of the pet) and every column has a column header, which describes what the data in the column represents (age and type) ```html\nOur Pets\nName\nAge\nType\nNora\n5\nDog\nGino\n2\nCat\n```\nNotice that the above code has a caption element immediately after the opening table element Then, inside the table head (thead) element, it has the column headers (Name, Age, and Type) In the second and third rows, inside the table body (tbody) element, we find the data for each one of our pets The names of the pets are the row headers because they are inside table header elements (th)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7248,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-tables-forms\\672a539b887ec68c593cdc4b.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "511e259a0a0cba23b537abf5ac5537b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-tables-forms\\672a539b887ec68c593cdc4b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "5 Dog Gino 2 Cat ``` Notice that the above code has a caption element immediately after the opening table element Then, inside the table head (thead) element, it has the column headers (Name, Age, and Type) In the second and third rows, inside the table body (tbody) element, we find the data for each one of our pets The names of the pets are the row headers because they are inside table header elements (th)Associating the data cells with their corresponding headers is also very important for screen readers The scope attribute determines if a header is a row header or a column header Screen readers may guess this correctly from the table's structure, but it's usually recommended to explicitly indicate the scope to ensure clarity The scope attribute has four possible values The two you will use most often are col for column and row for row In the code below, you can see that we added the scope attribute to the column and row headers The three column headers (Name, Age, and Type) have a scope of col, column The two row headers (Nora and Gino) have a scope of row ```html\nOur Pets\nName\nAge\nType\nNora\n5\nDog\nGino\n2\nCat\n```\nIf a column or row header spans across multiple cells, the scope will also be applied to each one of the cells individually Here's an example of that:\nName\nAge\nDogs\nNora\n5\nGino\n2\nCats\nLulu\n10\nElizabeth\n6\nIn this table, the cell with Nora's age (5) will have one column header (Age) and two row headers (Dogs and Nora) Gino's age (2) will also have one column header (Age) and two row headers (Dogs and Gino) However, some screen readers may not be able to interpret tables with complex structures, so you should also try to flatten the table as much as possible to avoid row and column headers that span across multiple cells Your goal should always be to make sure users can access this information, even if their screen readers can handle complex table structures Now, for cell width, it's recommended to avoid using fixed values You should use relative values instead, like percentages Also, try to avoid defining cell height This will allow users to adjust the text size to fit their needs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7248,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-tables-forms\\672a539b887ec68c593cdc4b.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "4896d39b9dd49a6d24346d0682c50469",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-tables-forms\\672a539b887ec68c593cdc4b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "much as possible to avoid row and column headers that span across multiple cells Your goal should always be to make sure users can access this information, even if their screen readers can handle complex table structures Now, for cell width, it's recommended to avoid using fixed values You should use relative values instead, like percentages Also, try to avoid defining cell height This will allow users to adjust the text size to fit their needsAnd finally, you should let the browser determine the table width whenever possible, to reduce the need for horizontal scrolling HTML tables are essential for presenting structured data in an accessible and understandable format By following these accessibility guidelines, you can create tables that are easy to understand for everyone --questions--\n--text--\nWhich HTML element is used to specify the title of a table --answers--\nthead\n--feedback--\nThink about how you would describe the table caption\ntbody\n--feedback--\nThink about how you would describe the table tr\n--feedback--\nThink about how you would describe the table --video-solution--\n2\n--text--\nWhat is the purpose of the scope attribute in a table header cell (th) --answers--\nTo specify the colspan and rowspan of the cell --feedback--\nThink about how screen readers interpret table structure To indicate whether the header applies to a row or a column To define the style of the header cell --feedback--\nThink about how screen readers interpret table structure To add a tooltip to the header cell --feedback--\nThink about how screen readers interpret table structure --video-solution--\n2\n--text--\nWhich of the following is a best practice for creating accessible tables --answers--\nUsing complex and long table headers --feedback--\nThink about how table complexity affects accessibility Not providing alternative text for images within table cells --feedback--\nThink about how table complexity affects accessibility Using simple table structures with row and column headers Nesting tables within tables --feedback--\nThink about how table complexity affects accessibility --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7248,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-tables-forms\\672a539b887ec68c593cdc4b.md",
      "source_type": "git_repo"
    },
    "token_count": 386,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7eade5105fe9d0b99173c38bf39f7d88",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-tables-forms\\672a53ae8f1ad28c8a1ed0f0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a53ae8f1ad28c8a1ed0f0\ntitle: Why Is It Important for Inputs to Have an Associated Label challengeType: 19\ndashedName: why-is-it-important-for-inputs-to-have-an-associated-label\n--description--\nLabels on input fields might seem like small details, but they play a crucial role in making forms easier for everyone to use Labels help people with disabilities, make forms more user-friendly for everyone, and ultimately improve form conversion rates Let's dive into why adding labels to input elements is important for accessibility and usability Screen readers often rely on labels to describe the purpose of input fields In order for this to work properly, the label must be programmatically associated with the input While there are several ways to do that, the most common is to use the HTML label element Here's how to associate a label with an input:\n```html\nYour Name\n```\nIn this example, the for attribute of the label element is associated with the id of the input element This connection allows screen readers to announce the label when the input is in a focused state, allowing screen reader users to understand the purpose of the input Associating labels with all input fields also benefits SEO With proper labels, search engines will understand the page content better, leading to a positive impact on the page search rankings But it is important to understand that you're making content for humans, not search engines So, you should make sure the labels are as clear and descriptive as possible --questions--\n--text--\nWhy is adding labels to input elements important for accessibility --answers--\nThey provide visual styling to input fields --feedback--\nThink about how screen readers provide information to users They help screen readers describe the purpose of input fields They increase the loading speed of web pages --feedback--\nThink about how screen readers provide information to users They enable input fields to accept multiple types of data --feedback--\nThink about how screen readers provide information to users --video-solution--\n2\n--text--\nHow do labels associated with input fields improve keyboard navigation --answers--\nThey enhance the visual appearance of input fields --feedback--\nFocus on how users move through a form using only the keyboard They allow users to tab through input fields without getting lost They reduce the need for keyboard shortcuts --feedback--\nFocus on how users move through a form using only the keyboard They let input fields accept special characters --feedback--\nFocus on how users move through a form using only the keyboard",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3501,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-tables-forms\\672a53ae8f1ad28c8a1ed0f0.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6e8d2c354543a1ffe7311c30b5df14ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-tables-forms\\672a53ae8f1ad28c8a1ed0f0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "improve keyboard navigation --answers-- They enhance the visual appearance of input fields --feedback-- Focus on how users move through a form using only the keyboard They allow users to tab through input fields without getting lost They reduce the need for keyboard shortcuts --feedback-- Focus on how users move through a form using only the keyboard They let input fields accept special characters --feedback-- Focus on how users move through a form using only the keyboard--video-solution--\n2\n--text--\nHow do labels associated with input fields help in identifying errors --answers--\nThey allow input fields to accept longer text --feedback--\nThink about how error messages are communicated to users by screen readers They help screen readers announce the label along with the error message They prevent users from submitting forms --feedback--\nThink about how error messages are communicated to users by screen readers They make input fields more colorful --feedback--\nThink about how error messages are communicated to users by screen readers --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3501,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-accessible-tables-forms\\672a53ae8f1ad28c8a1ed0f0.md",
      "source_type": "git_repo"
    },
    "token_count": 192,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a3f8814aecdbd0bc1d7c1bf198a565ab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-animations-and-accessibility\\672aa8d65995be62ef1c7515.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672aa8d65995be62ef1c7515\ntitle: What Are CSS Animations, and How Do They Work challengeType: 19\ndashedName: what-are-css-animations\n--description--\nCSS animations allow you to create dynamic, visually engaging effects on web pages without the need for JavaScript or complex programming They provide a way to smoothly transition elements between different styles over a specified duration At its core, a CSS animation consists of two main components: the @keyframes rule and the animation property The @keyframes rule defines the stages and styles of the animation It specifies what styles the element should have at various points during the animation Here's an example:\ncss\n@keyframes slide-in {\n0% {\ntransform: translateX(-100%);\n}\n100% {\ntransform: translateX(0);\n}\n}\nThis @keyframes rule, named slide-in, defines an animation that moves an element from left to right The percentages represent the progress of the animation, with 0% being the start and 100% being the end The translateX function in your @keyframes animation is controlling the horizontal position of an element as it animates into view To apply this animation to an element, you use the animation property:\ncss sliding-element {\nanimation: slide-in 2s ease-out;\n}\nThis applies the slide-in animation to the element with a duration of 2 seconds and an ease-out timing function The animation property is actually a shorthand for several individual properties:\nanimation-name which specifies the @keyframes rule to use animation-duration which sets how long the animation should take to complete animation-timing-function which defines how the animation progresses over time - such as ease, linear, ease-in-out animation-delay which specifies a delay before the animation starts animation-iteration-count which sets how many times the animation should repeat animation-direction which determines whether the animation should play forwards, backwards, or alternate animation-fill-mode which specifies how the element should be styled before and after the animation animation-play-state which allows you to pause and resume the animation You can use these properties individually for more precise control:\n```css",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5581,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-animations-and-accessibility\\672aa8d65995be62ef1c7515.md",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "9909c4aa1d1f68c830131945cb7f4864",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-animations-and-accessibility\\672aa8d65995be62ef1c7515.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "animation progresses over time - such as ease, linear, ease-in-out animation-delay which specifies a delay before the animation starts animation-iteration-count which sets how many times the animation should repeat animation-direction which determines whether the animation should play forwards, backwards, or alternate animation-fill-mode which specifies how the element should be styled before and after the animation animation-play-state which allows you to pause and resume the animation You can use these properties individually for more precise control: ```csscomplex-animation {\nanimation-name: color-change;\nanimation-duration: 3s;\nanimation-timing-function: linear;\nanimation-delay: 1s;\nanimation-iteration-count: infinite;\nanimation-direction: alternate;\n}\n@keyframes color-change {\n0% {\nbackground-color: red;\n}\n50% {\nbackground-color: blue;\n}\n100% {\nbackground-color: green;\n}\n}\n```\nThis creates an animation that continuously transitions an element's background color between red, blue, and green CSS animations can be triggered by various events, such as hovering over an element:\n```css button {\nbackground-color: blue;\ntransition: background-color 0 3s;\n} button:hover {\nbackground-color: red;\n}\n```\nWhile this example uses the transition property, which is simpler for basic effects, it demonstrates how CSS can create interactive, animated elements It's important to note that while CSS animations are powerful, they should be used in moderation Overuse of animations can lead to poor performance and may be distracting or problematic for users with certain accessibility needs Always consider providing options to reduce or disable animations for users who prefer less motion CSS animations offer a way to create engaging, interactive web experiences without relying on JavaScript By understanding the principles of @keyframes and animation properties, you can bring your web designs to life in a performant and accessible manner --questions--\n--text--\nWhat is the purpose of the @keyframes rule in CSS animations --answers--\nTo specify the duration of the animation --feedback--\nThink about what @keyframes allows you to define in terms of the animation's appearance To define the stages and styles of the animation To set the timing function of the animation --feedback--\nThink about what @keyframes allows you to define in terms of the animation's appearance To determine how many times the animation repeats --feedback--\nThink about what @keyframes allows you to define in terms of the animation's appearance --video-solution--\n2\n--text--\nIn the following CSS code, what does 2s represent css",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5581,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-animations-and-accessibility\\672aa8d65995be62ef1c7515.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "6f039a8eea142674dd62fd11a14ca324",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-animations-and-accessibility\\672aa8d65995be62ef1c7515.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to define in terms of the animation's appearance To define the stages and styles of the animation To set the timing function of the animation --feedback-- Think about what @keyframes allows you to define in terms of the animation's appearance To determine how many times the animation repeats --feedback-- Think about what @keyframes allows you to define in terms of the animation's appearance --video-solution-- 2 --text-- In the following CSS code, what does 2s represent csselement {\nanimation: fade-in 2s ease-in;\n}\n--answers--\nThe delay before the animation starts --feedback--\nConsider which aspect of the animation this value is controlling The number of times the animation repeats --feedback--\nConsider which aspect of the animation this value is controlling The duration of the animation The percentage of the animation's progress --feedback--\nConsider which aspect of the animation this value is controlling --video-solution--\n3\n--text--\nWhich CSS property would you use to make an animation repeat indefinitely --answers--\nanimation-loop: infinite;\n--feedback--\nThink about which property controls how many times an animation plays animation-repeat: always;\n--feedback--\nThink about which property controls how many times an animation plays animation-iteration-count: infinite;\nanimation-duration: endless;\n--feedback--\nThink about which property controls how many times an animation plays --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5581,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-animations-and-accessibility\\672aa8d65995be62ef1c7515.md",
      "source_type": "git_repo"
    },
    "token_count": 273,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9e545a5ff3f5b4f0035fbf608a50a3d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-animations-and-accessibility\\672cf764cf55a70433590def.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672cf764cf55a70433590def\ntitle: What Are Accessibility Concerns Around Using Animations, and How Can prefers-reduced-motion Help challengeType: 19\ndashedName: what-are-accessibility-concerns-around-using-animations\n--description--\nAnimations can greatly enhance the visual appeal and user experience of a website However, they can also pose significant accessibility challenges for certain users It's crucial to understand these concerns and implement solutions to ensure your website remains accessible to all users One of the primary accessibility concerns with animations is that they can cause discomfort or even physical harm to some users People with vestibular disorders or motion sensitivity may experience dizziness, nausea, or headaches when exposed to certain types of movement on screen Additionally, animations can be distracting for users with cognitive disabilities or attention disorders Rapid flashing or strobing effects are particularly problematic They can trigger seizures in people with photosensitive epilepsy As a general rule, avoid any content that flashes more than three times per second Another issue is that animations can make it difficult for some users to focus on or read content This is especially true for users with low vision or reading difficulties who may struggle to track moving text or shifting layouts To address these concerns, CSS provides the prefers-reduced-motion media query This feature allows web developers to detect if the user has requested minimal animations or motion effects at the system level Here's how you can use prefers-reduced-motion:\ncss\n@media (prefers-reduced-motion: reduce) {\n* {\nanimation-duration: 0 01ms important;\nanimation-iteration-count: 1 important;\ntransition-duration: 0 01ms important;\nscroll-behavior: auto important;\n}\n}\nThis CSS code snippet effectively disables most animations and transitions for users who have indicated a preference for reduced motion Let's break it down:\nThe @media query rule checks if the user prefers reduced motion If true, it applies the enclosed styles Inside the media query, we're targeting all elements (*) and overriding animation and transition properties We set animation-duration and transition-duration to an extremely small value (0 01ms) This essentially turns off the animations while still allowing them to complete, which can be important for certain functionality animation-iteration-count: 1 ensures that any looping animations only play once scroll-behavior: auto disables smooth scrolling effects The important declaration is used to ensure these rules take precedence over other animation styles It's important to note that while this method effectively reduces motion, it's a blanket approach",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6357,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-animations-and-accessibility\\672cf764cf55a70433590def.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "901a3292da4d0867898e952e6da30ab3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-animations-and-accessibility\\672cf764cf55a70433590def.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "set animation-duration and transition-duration to an extremely small value (0 01ms) This essentially turns off the animations while still allowing them to complete, which can be important for certain functionality animation-iteration-count: 1 ensures that any looping animations only play once scroll-behavior: auto disables smooth scrolling effects The important declaration is used to ensure these rules take precedence over other animation styles It's important to note that while this method effectively reduces motion, it's a blanket approachFor more precise control, you might want to define specific reduced-motion alternatives for your animations Here's an example of a more targeted approach:\n```css animated-element {\ntransition: transform 0 3s ease-in-out;\n}\n@media (prefers-reduced-motion: reduce) { animated-element {\ntransition: none;\n}\n}\n```\nIn this case, we're only disabling the transition for a specific element when reduced motion is preferred This allows you to provide alternative, less motion-intensive experiences for users who need them Remember, the goal is not to completely remove all motion from your site, but to provide options that allow all users to comfortably interact with your content Some motion can still be beneficial for usability and feedback, even for users who prefer reduced motion When implementing animations, consider using them thoughtfully rather than just for decoration Avoid large, unexpected movements and provide controls to pause, stop, or hide animations when possible Importantly, use the prefers-reduced-motion query to offer a low-motion alternative, ensuring your content remains accessible and comfortable for all users, including those sensitive to motion By being mindful of these accessibility concerns and utilizing tools like prefers-reduced-motion, you can create engaging, animated experiences that are inclusive and accessible to all users --questions--\n--text--\nWhat is the primary purpose of the prefers-reduced-motion media query --answers--\nTo increase the speed of all animations --feedback--\nThink about how this query relates to user preferences for motion on their devices To detect if a user has requested minimal animations at the system level To automatically add more animations to a website --feedback--\nThink about how this query relates to user preferences for motion on their devices To change the color scheme of animations --feedback--\nThink about how this query relates to user preferences for motion on their devices --video-solution--\n2\n--text--\nWhich of the following is NOT a common accessibility concern related to animations --answers--\nThey can cause discomfort for users with vestibular disorders",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6357,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-animations-and-accessibility\\672cf764cf55a70433590def.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "750f886ac845eee038fe7a130988b017",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-animations-and-accessibility\\672cf764cf55a70433590def.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "animations at the system level To automatically add more animations to a website --feedback-- Think about how this query relates to user preferences for motion on their devices To change the color scheme of animations --feedback-- Think about how this query relates to user preferences for motion on their devices --video-solution-- 2 --text-- Which of the following is NOT a common accessibility concern related to animations --answers-- They can cause discomfort for users with vestibular disorders--feedback--\nConsider how animations might affect different groups of users, including those with various disabilities They can be distracting for users with cognitive disabilities --feedback--\nConsider how animations might affect different groups of users, including those with various disabilities They always improve readability for all users They can trigger seizures in people with photosensitive epilepsy --feedback--\nConsider how animations might affect different groups of users, including those with various disabilities --video-solution--\n3\n--text--\nIn the context of prefers-reduced-motion, what does setting animation-duration: 0 01ms important; achieve --answers--\nIt makes animations last exactly 0 01 milliseconds --feedback--\nThink about the practical effect of an extremely short animation duration It increases the speed of animations --feedback--\nThink about the practical effect of an extremely short animation duration It effectively turns off animations while still allowing them to complete It makes animations last indefinitely --feedback--\nThink about the practical effect of an extremely short animation duration --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6357,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-animations-and-accessibility\\672cf764cf55a70433590def.md",
      "source_type": "git_repo"
    },
    "token_count": 286,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "4c6c64f6d7074e4acf0a64111879ebae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-accessibility-and-css\\672aa82768e00d600305afc0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672aa82768e00d600305afc0\ntitle: What Are Some Tools to Check for Good Color Contrast on Sites challengeType: 19\ndashedName: what-are-some-tools-to-check-for-good-color-contrast-on-sites\n--description--\nWhen designing websites, ensuring good color contrast is crucial for accessibility and readability Several tools are available to help developers and designers check and maintain appropriate color contrast ratios on their sites One popular tool is WebAIM's Color Contrast Checker This online tool allows you to input the foreground and background colors of your design and instantly see if they meet the Web Content Accessibility Guidelines (WCAG) standards It's user-friendly and provides immediate feedback on whether your color choices pass or fail the contrast requirements To use WebAIM's Color Contrast Checker, simply visit their website and enter the hexadecimal codes for your foreground and background colors The tool will then calculate the contrast ratio and indicate whether it meets the WCAG 2 0 level AA or AAA standards Here's an example of how you might use color values in your CSS:\ncss\nbody {\nbackground-color: #FFFFFF;\ncolor: #333333;\n}\nIn this example, we've set a white background (#FFFFFF) and dark gray text (#333333) You can input these color codes into the WebAIM tool to check their contrast ratio Another valuable tool is the TPGi Colour Contrast Analyzer This desktop application offers more advanced features compared to online tools It allows you to analyze entire web pages, not just individual color pairs You can use its color picker to select colors directly from your screen, making it easier to check contrast ratios for existing designs The TPGi Colour Contrast Analyzer also provides simulations for different types of color vision deficiencies, helping you ensure your design is accessible to users with various forms of color blindness To use the TPGi Colour Contrast Analyzer, download and install the application on your computer Once installed, you can use its eyedropper tool to select colors from your screen and instantly see the contrast ratio This is particularly useful when working with complex designs or checking contrast on live websites Both these tools are invaluable for creating accessible and readable websites They help ensure that your text is legible against its background, which is essential for all users but particularly important for those with visual impairments Remember, while these tools are extremely helpful, they should be used in conjunction with manual testing and user feedback Different contexts and user needs may require adjustments beyond what automated tools can suggest",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4996,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-accessibility-and-css\\672aa82768e00d600305afc0.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "bdb8aee34e35253466a285049c65219d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-accessibility-and-css\\672aa82768e00d600305afc0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "designs or checking contrast on live websites Both these tools are invaluable for creating accessible and readable websites They help ensure that your text is legible against its background, which is essential for all users but particularly important for those with visual impairments Remember, while these tools are extremely helpful, they should be used in conjunction with manual testing and user feedback Different contexts and user needs may require adjustments beyond what automated tools can suggestBy regularly using tools like WebAIM's Color Contrast Checker and the TPGi Colour Contrast Analyzer, you can create designs that are not only visually appealing but also inclusive and accessible to a wider audience This attention to detail in color contrast can significantly improve the user experience of your website for all visitors --questions--\n--text--\nWhat is the primary purpose of using color contrast checking tools like WebAIM's Color Contrast Checker --answers--\nTo make websites more colorful --feedback--\nThink about why contrast between text and background is important for users To ensure text is readable against its background for accessibility To reduce the number of colors used in a website --feedback--\nThink about why contrast between text and background is important for users To increase website loading speed --feedback--\nThink about why contrast between text and background is important for users --video-solution--\n2\n--text--\nWhich feature does the TPGi Colour Contrast Analyzer offer that most online contrast checkers don't --answers--\nIt can check contrast ratios --feedback--\nConsider the advanced capabilities mentioned for this desktop application It provides hexadecimal color codes --feedback--\nConsider the advanced capabilities mentioned for this desktop application It can analyze entire web pages and simulate color vision deficiencies It suggests color combinations --feedback--\nConsider the advanced capabilities mentioned for this desktop application --video-solution--\n3\n--text--\nWhat do the WCAG 2 0 level AA and AAA standards refer to in the context of color contrast tools --answers--\nThe brightness levels of colors --feedback--\nThese standards are related to the accessibility guidelines mentioned in the lecture The file size of images --feedback--\nThese standards are related to the accessibility guidelines mentioned in the lecture The minimum contrast ratios required for accessibility The number of colors used in a design --feedback--\nThese standards are related to the accessibility guidelines mentioned in the lecture --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4996,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-accessibility-and-css\\672aa82768e00d600305afc0.md",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4bb41f53fb0dbafe1e4b98c33e47a1ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-accessibility-and-css\\672c35a79fa53e00de9f2a49.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672c35a79fa53e00de9f2a49\ntitle: What Are Best Practices for Hiding Content So It Doesn't Become Inaccessible challengeType: 19\ndashedName: what-are-best-practices-for-hiding-content-so-it-doesnt-become-inaccessible\n--description--\nHiding content on a webpage is a common practice in web development, but it's crucial to do it in a way that doesn't compromise accessibility Different hiding techniques can have varying impacts on how assistive technologies interpret and present the content to users Let's explore some best practices for hiding content while maintaining accessibility One common method to hide content is using display: none Here's an example:\ncss hidden {\ndisplay: none;\n}\nWhile this effectively hides the content visually, it also removes it from the accessibility tree The accessibility tree is a structure used by assistive technologies, such as screen readers, to interpret and interact with the content on a web page It represents the content and its semantic meaning in a way that assistive technology can understand and present to the user Using display: none means that screen readers and other assistive technologies won’t be able to access this content, as it is not included in the accessibility tree Therefore, it is important to use this method only when you want to completely remove content from both visual presentation and accessibility Another approach to hiding content is using visibility: hidden:\ncss hidden {\nvisibility: hidden;\n}\nvisibility: hidden hides the content visually but keeps it in the document flow, meaning it still occupies space on the page Like display: none, visibility: hidden also removes content from the accessibility tree This means that assistive technologies, like screen readers, will not be able to access the hidden content Only use visibility: hidden when you want to hide content from everyone, including people who use assistive technology For content that should be hidden visually but remain accessible to screen readers, you can use a technique often referred to as \"visually hidden\" or \"screen reader only\" Here is an example using the sr-only CSS class which is a common technique used to visually hide content while keeping it accessible to screen readers:\ncss",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5703,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-accessibility-and-css\\672c35a79fa53e00de9f2a49.md",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "1b61d30c869685b6d05e691739797d03",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-accessibility-and-css\\672c35a79fa53e00de9f2a49.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the hidden content Only use visibility: hidden when you want to hide content from everyone, including people who use assistive technology For content that should be hidden visually but remain accessible to screen readers, you can use a technique often referred to as \"visually hidden\" or \"screen reader only\" Here is an example using the sr-only CSS class which is a common technique used to visually hide content while keeping it accessible to screen readers: csssr-only {\nposition: absolute;\nwidth: 1px;\nheight: 1px;\npadding: 0;\nmargin: -1px;\noverflow: hidden;\nclip: rect(0, 0, 0, 0);\nwhite-space: nowrap;\nborder: 0;\n}\nIn this example, we are using properties like position, clip, and white-space, which you will learn about in future lectures For now, just know that this CSS rule effectively hides the content visually while keeping it accessible to screen readers It's useful for providing additional context to screen reader users without affecting the visual layout For toggling content visibility, consider using the hidden attribute:\n```html\nThis content is hidden\n```\nThe hidden attribute is supported by most modern browsers and hides content both visually and from the accessibility tree It can be easily toggled with JavaScript Lastly, be cautious about hiding important content If information is crucial for understanding or using the website, it should be visible and accessible to all users Only hide content when doing so genuinely enhances the user experience By following these best practices, you can ensure that your content remains accessible to all users, regardless of how they interact with your website --questions--\n--text--\nWhat is the main accessibility issue when using the display: none and visibility: hidden style declarations, or the hidden attribute to hide content --answers--\nThese methods make it so that only assistive technologies like screen readers can access the hidden content --feedback--\nThink about the accessibility concern each of these methods has in common Content is only hidden until users move their mouse over the content --feedback--\nThink about the accessibility concern each of these methods has in common These methods remove the content from the accessibility tree, making it impossible for assistive technologies like screen readers to access the hidden content These methods do not work with some browsers --feedback--\nThink about the accessibility concern each of these methods has in common --video-solution--\n3\n--text--\nWhat is the primary purpose of the \"visually hidden\" or \"screen reader only\" CSS technique",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5703,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-accessibility-and-css\\672c35a79fa53e00de9f2a49.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5ba79bee15d96a201a77607b85b5cea6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-accessibility-and-css\\672c35a79fa53e00de9f2a49.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "content --feedback-- Think about the accessibility concern each of these methods has in common These methods remove the content from the accessibility tree, making it impossible for assistive technologies like screen readers to access the hidden content These methods do not work with some browsers --feedback-- Think about the accessibility concern each of these methods has in common --video-solution-- 3 --text-- What is the primary purpose of the \"visually hidden\" or \"screen reader only\" CSS technique--answers--\nTo hide content from all users --feedback--\nConsider the needs of users who rely on screen readers To make content visible only on mobile devices --feedback--\nConsider the needs of users who rely on screen readers To hide content visually while keeping it accessible to screen readers To create animated transitions for content --feedback--\nConsider the needs of users who rely on screen readers --video-solution--\n3\n--text--\nWhen should you hide content on a web page --answers--\nWhen the content you're hiding is less important than other content on the page --feedback--\nThink about how hiding content affects accessibility and the user experience as a whole When the content you're hiding is incorrect --feedback--\nThink about how hiding content affects accessibility and the user experience as a whole Only when it genuinely enhances the user experience Whenever you feel like it --feedback--\nThink about how hiding content affects accessibility and the user experience as a whole --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5703,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-accessibility-and-css\\672c35a79fa53e00de9f2a49.md",
      "source_type": "git_repo"
    },
    "token_count": 282,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "17defb40039df24f83e05b6a79c11710",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672aa8873d4e25618870764f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672aa8873d4e25618870764f\ntitle: What Is Responsive Web Design, and What Is Its Relationship to Tools Like CSS Grid and Flexbox challengeType: 19\ndashedName: what-is-responsive-web-design\n--description--\nResponsive web design is an approach to web development that aims to create websites that provide an optimal viewing and interaction experience across a wide range of devices, from desktop computers to mobile phones The core principle of responsive design is adaptability – the ability of a website to adjust its layout and content based on the screen size and capabilities of the device it's being viewed on Responsive design typically relies on three main components - fluid grids, flexible images, and media queries:\nFluid grids use relative units like percentages instead of fixed units like pixels, allowing content to resize and reflow based on screen size Flexible images are set to resize within their containing elements, ensuring they don't overflow their containers on smaller screens And, media queries allow developers to apply different styles based on the characteristics of the device, primarily the viewport width You will learn more about media queries in future lectures The relationship between responsive web design and tools like CSS Grid and Flexbox is symbiotic While responsive design is a concept or approach, CSS Grid and Flexbox are practical tools that make implementing responsive designs much easier and more efficient In previous lectures you learned how to work with Flexbox and in future lectures you will learn how to work with CSS Grid But for now, here is a brief introduction into CSS Grid CSS Grid, is a two-dimensional layout system that allows for more complex arrangements It's excellent for creating overall page layouts as well as smaller component layouts Here's an example of how CSS Grid can be used responsively:\n```css grid-container {\ndisplay: grid;\ngrid-template-columns: 1fr;\ngap: 20px;\n}\n@media (min-width: 768px) { grid-container {\ngrid-template-columns: 1fr 1fr;\n}\n}\n@media (min-width: 1024px) { grid-container {\ngrid-template-columns: 1fr 1fr 1fr;\n}\n}\n```\nIn this example, the grid starts with a single column on small screens, switches to two columns on medium-sized screens, and then to three columns on larger screens This demonstrates how Grid can create responsive layouts that adapt to different screen sizes Both Flexbox and Grid offer significant advantages over older layout methods like floats or table-based layouts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6222,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672aa8873d4e25618870764f.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "99c06f7505622708adefef0eb3f30b2f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672aa8873d4e25618870764f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "grid-template-columns: 1fr 1fr; } } @media (min-width: 1024px) { grid-container { grid-template-columns: 1fr 1fr 1fr; } } ``` In this example, the grid starts with a single column on small screens, switches to two columns on medium-sized screens, and then to three columns on larger screens This demonstrates how Grid can create responsive layouts that adapt to different screen sizes Both Flexbox and Grid offer significant advantages over older layout methods like floats or table-based layoutsThey provide more flexibility and control, require less code, and are designed with responsiveness in mind They allow developers to create complex, responsive layouts with relative ease, making them invaluable tools in implementing responsive web design It's worth noting that Flexbox and Grid are often used together in responsive designs Flexbox is typically used for components and one-dimensional layouts, while Grid is used for overall page structure and two-dimensional layouts The choice between them often depends on the specific layout needs of the design In addition to Flexbox and Grid, other CSS features play important roles in responsive design The calc() function, for instance, allows for mixing units and performing calculations, which can be very useful in creating flexible layouts Responsive images are another crucial aspect of responsive web design The srcset attribute and picture element in HTML5 allow for serving different image files based on device capabilities, ensuring that users don't download unnecessarily large image files on devices with smaller screens or lower resolution In conclusion, responsive web design is an approach that aims to create websites that work well on any device While it's a design philosophy rather than a specific technology, it relies heavily on CSS features like media queries, and is greatly facilitated by modern layout tools like Flexbox and Grid These tools provide the flexibility and control needed to create truly responsive designs, allowing websites to adapt seamlessly to the ever-growing variety of devices used to access the web --questions--\n--text--\nWhat is the primary goal of responsive web design --answers--\nTo create separate versions of a website for desktop and mobile --feedback--\nThink about how responsive design addresses the variety of devices used to access the web To ensure websites adapt to different screen sizes and devices To increase the loading speed of websites on mobile devices --feedback--\nThink about how responsive design addresses the variety of devices used to access the web To simplify the design process for web developers --feedback--\nThink about how responsive design addresses the variety of devices used to access the web",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6222,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672aa8873d4e25618870764f.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "d0a6af2b981e7eaec97e747d649876ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672aa8873d4e25618870764f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--feedback-- Think about how responsive design addresses the variety of devices used to access the web To ensure websites adapt to different screen sizes and devices To increase the loading speed of websites on mobile devices --feedback-- Think about how responsive design addresses the variety of devices used to access the web To simplify the design process for web developers --feedback-- Think about how responsive design addresses the variety of devices used to access the web--video-solution--\n2\n--text--\nHow does CSS Flexbox contribute to responsive web design --answers--\nBy providing a way to create complex grid layouts --feedback--\nConsider what kind of layouts Flexbox is particularly good at handling By allowing easy manipulation of one-dimensional layouts By automatically resizing images for different screen sizes --feedback--\nConsider what kind of layouts Flexbox is particularly good at handling By enabling the use of media queries --feedback--\nConsider what kind of layouts Flexbox is particularly good at handling --video-solution--\n2\n--text--\nIn responsive web design, what is the primary advantage of using CSS Grid over older layout methods --answers--\nIt allows for the creation of print stylesheets --feedback--\nThink about the dimensionality of layouts that CSS Grid excels at creating It provides more flexibility in creating complex, two-dimensional layouts It automatically adjusts font sizes for different devices --feedback--\nThink about the dimensionality of layouts that CSS Grid excels at creating It reduces the need for JavaScript in responsive designs --feedback--\nThink about the dimensionality of layouts that CSS Grid excels at creating --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6222,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672aa8873d4e25618870764f.md",
      "source_type": "git_repo"
    },
    "token_count": 307,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "d4e3d91e844216e7775714b7bbb4d784",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf06c8f46f9eb04db9832.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672cf06c8f46f9eb04db9832\ntitle: What Is the Mobile First Approach in Responsive Web Design challengeType: 19\ndashedName: what-is-the-mobile-first-approach-in-responsive-web-design\n--description--\nThe mobile-first approach is a design philosophy and development strategy in responsive web design that prioritizes creating websites for mobile devices before designing for larger screens This approach has gained significant traction in recent years, becoming a cornerstone of modern web development practices At its core, the mobile-first approach involves designing and developing the mobile version of a website as the primary step This version serves as the foundation, which is then progressively enhanced for larger screens and devices with more capabilities This methodology stands in contrast to the traditional approach, where websites were initially designed for desktop computers and subsequently scaled down or modified to fit smaller screens The principle behind mobile-first design is to ensure that the most essential content and functionality are available and optimized for the smallest screens first This forces designers and developers to focus on the core content and features, leading to a more streamlined and efficient user experience across all devices One of the primary drivers behind the adoption of the mobile-first approach is the dramatic shift in internet usage patterns With mobile devices now accounting for over half of global web traffic, designing for mobile first ensures that websites cater to a large and growing user base This approach aligns with the current digital landscape where many users primarily access the internet through their smartphones Performance optimization is another crucial aspect of the mobile-first approach Mobile devices often have less processing power and may be connected to slower networks compared to desktop computers By designing for mobile first, developers are encouraged to optimize performance from the outset This focus on efficiency benefits not only mobile users but also translates to improved performance across all devices The limited screen space on mobile devices necessitates careful content prioritization Designers must make critical decisions about what content is absolutely essential and how to present it effectively on a small screen This constraint often results in a more focused and user-friendly experience, which can then be expanded upon for larger screens without losing the core essence of the content Implementing a mobile-first approach typically involves using CSS media queries to progressively enhance the design for larger screens Here's an example of how this might look in practice:\n```css\n/ Base styles for mobile /\nbody {\nfont-size: 16px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6639,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf06c8f46f9eb04db9832.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "64fb25d0f90fcdc897f85353dd9fcb2d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf06c8f46f9eb04db9832.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to present it effectively on a small screen This constraint often results in a more focused and user-friendly experience, which can then be expanded upon for larger screens without losing the core essence of the content Implementing a mobile-first approach typically involves using CSS media queries to progressively enhance the design for larger screens Here's an example of how this might look in practice: ```css / Base styles for mobile / body { font-size: 16px; }container {\nwidth: 100%;\npadding: 10px;\n}\n/ Styles for larger screens /\n@media screen and (min-width: 768px) {\nbody {\nfont-size: 18px;\n} container {\nwidth: 750px;\nmargin: 0 auto;\npadding: 20px;\n}\n}\n@media screen and (min-width: 1024px) { container {\nwidth: 960px;\n}\n}\n```\nIn this example, we start with base styles suitable for mobile devices We then use media queries with min-width to add or modify styles for larger screens This exemplifies the essence of mobile-first design in CSS: beginning with styles for the smallest screens and then progressively enhancing for larger ones The mobile-first approach also aligns well with search engine optimization (SEO) strategies Google, for instance, uses mobile-first indexing, meaning it predominantly uses the mobile version of the content for indexing and ranking By prioritizing the mobile experience, websites can potentially improve their search engine rankings and visibility While the mobile-first approach offers numerous benefits, it's not without challenges Designing for mobile first can sometimes constrain creativity for larger screens, and it may be difficult to conceptualize complex features on mobile devices initially Additionally, convincing stakeholders to prioritize mobile design can be challenging, especially if they're accustomed to seeing desktop designs first Despite these challenges, the mobile-first approach remains a powerful strategy in responsive web design It encourages efficiency, focuses on core content and functionality, and aligns with current user behavior As mobile internet usage continues to grow, the mobile-first approach is likely to remain a fundamental principle in creating effective, user-friendly websites that perform well across all devices --questions--\n--text--\nWhat is the primary focus of the mobile-first approach in responsive web design --answers--\nDesigning for desktop screens and then adapting for mobile --feedback--\nConsider which device is given priority in the initial design phase Creating separate websites for mobile and desktop users --feedback--\nConsider which device is given priority in the initial design phase Prioritizing mobile design and progressively enhancing for larger screens",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6639,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf06c8f46f9eb04db9832.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "182e477d344ffa22db7db71f7e1a8167",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf06c8f46f9eb04db9832.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "creating effective, user-friendly websites that perform well across all devices --questions-- --text-- What is the primary focus of the mobile-first approach in responsive web design --answers-- Designing for desktop screens and then adapting for mobile --feedback-- Consider which device is given priority in the initial design phase Creating separate websites for mobile and desktop users --feedback-- Consider which device is given priority in the initial design phase Prioritizing mobile design and progressively enhancing for larger screensFocusing solely on mobile design and ignoring desktop users --feedback--\nConsider which device is given priority in the initial design phase --video-solution--\n3\n--text--\nHow does the mobile-first approach typically utilize CSS media queries --answers--\nBy using max-width to scale down designs for smaller screens --feedback--\nThink about how styles are added as screen sizes increase in a mobile-first approach By using min-width to add styles for larger screens By creating separate stylesheets for each device type\n--feedback--\nThink about how styles are added as screen sizes increase in a mobile-first approach By avoiding media queries altogether --feedback--\nThink about how styles are added as screen sizes increase in a mobile-first approach --video-solution--\n2\n--text--\nWhich of the following is NOT a primary benefit of the mobile-first approach --answers--\nImproved performance optimization --feedback--\nConsider which aspect might be more challenging rather than beneficial in a mobile-first approach Better alignment with current web usage trends --feedback--\nConsider which aspect might be more challenging rather than beneficial in a mobile-first approach Simplified design process for complex features Enhanced content prioritization --feedback--\nConsider which aspect might be more challenging rather than beneficial in a mobile-first approach --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6639,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf06c8f46f9eb04db9832.md",
      "source_type": "git_repo"
    },
    "token_count": 338,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "1e705ec59c6234930d38a3e4717f6a1e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "id: 66f12a88741aeb16b9246c59\ntitle: Build a Weather App\nchallengeType: 25\ndashedName: lab-weather-app\ndemoType: onClick\n--description--\nIn this lab, you'll build an app that provides weather information from different cities You will use a weather API The output data has the following format:\njson\n{\n\"weather\": [\n{\n\"main\": \"Clear\",\n\"description\": \"clear sky\",\n\"icon\": \"https://cdn freecodecamp org/weather-icons/01n png\" // icon representing the weather\n}\n],\n\"main\": {\n\"temp\": 2 62, // temperature in C\n\"feels_like\": 0 84, // temperature in C\n\"temp_min\": 1 72, // min temperature of the day in C\n\"temp_max\": 3 49, // max temperature of the day in C\n\"pressure\": 1010, // atmospheric pressure in hPa\n\"humidity\": 81 // humidity in %\n},\n\"visibility\": 10000, // distance in meters\n\"wind\": {\n\"speed\": 1 79, // speed of the wind in m/s\n\"deg\": 285, // orientation of the wind in degrees\n\"gust\": 3 13 // gust speed in m/s\n},\n\"name\": \"London\"\n}\nObjective: Fulfill the user stories below and get all the tests to pass to complete the lab User Stories:\nYou should have a button element with an id of get-weather-btn You should have a select element with seven option elements nested within it The first option should have an empty string as its text and value attribute The rest should have the following for their text and values (with the value being lowercase):\nNew York\nLos Angeles\nChicago\nParis\nTokyo\nLondon\nIf no city is selected, pressing the button should do nothing If a city is selected, elements to show the weather should appear:\nYou should have an img element with the id weather-icon for displaying the weather icon You should have an element with the id main-temperature for displaying the main temperature You should have an element with the id feels-like for displaying what the temperature feels like You should have an element with the id humidity for displaying the amount of humidity in air You should have an element with the id wind for displaying the wind speed You should have an element with the id wind-gust for displaying the wind gust",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 18
  },
  {
    "id": "4eb5716046ad3151034550f348ece842",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "icon You should have an element with the id main-temperature for displaying the main temperature You should have an element with the id feels-like for displaying what the temperature feels like You should have an element with the id humidity for displaying the amount of humidity in air You should have an element with the id wind for displaying the wind speed You should have an element with the id wind-gust for displaying the wind gustYou should have an element with the id weather-main for displaying the main weather type You should have an element with the id location for displaying the current location You should have an asynchronous function named getWeather that fetches the weather information from the https://weather-proxy freecodecamp rocks/api/city/<CITY> API and returns it Note that this API returns data using the metric system, that means m/s for wind speed, and Celsius for the temperature The getWeather asynchronous function should accept a city as its argument You should handle any errors that occur within the getWeather function and log them to the console You should have an asynchronous showWeather function that accepts a city as parameter The showWeather function should call the getWeather function to retrieve the weather data for the selected city from the dropdown If the getWeather function had an error, the app should only show an alert that says Something went wrong, please try again later If the data from getWeather are usable, the showWeather function should display the weather data in the corresponding elements If a certain value from the API is undefined, you should write N/A in the corresponding element NOTE: The tests will take time to complete As long as you see // running tests in the console, they are being executed --before-all--\n```js\nwindow fetch = (url) => {\nconst city = decodeURIComponent(url split(\"/\") pop());\nconst cityMap = {\n\"new york\": {\ncoord: { lon: -74 0059, lat: 40 7127 },\nweather: [\n{\nid: 804,\nmain: \"Clouds\",\ndescription: \"overcast clouds\",\nicon: \"https://cdn freecodecamp org/weather-icons/04d png\",\n},\n],\nbase: \"stations\",\nmain: {\ntemp: 14 33,\nfeels_like: 13 2,\ntemp_min: 13 21,\ntemp_max: 15",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 1,
    "total_chunks": 18
  },
  {
    "id": "547c998da6b7c6406fe7b8e0680a7fbd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "long as you see // running tests in the console, they are being executed --before-all-- ```js window fetch = (url) => { const city = decodeURIComponent(url split(\"/\") pop()); const cityMap = { \"new york\": { coord: { lon: -74 0059, lat: 40 7127 }, weather: [ { id: 804, main: \"Clouds\", description: \"overcast clouds\", icon: \"https://cdn freecodecamp org/weather-icons/04d png\", }, ], base: \"stations\", main: { temp: 14 33, feels_like: 13 2, temp_min: 13 21, temp_max: 1554,\npressure: 1008,\nhumidity: 53,\nsea_level: 1008,\ngrnd_level: 1007,\n},\nvisibility: 10000,\nwind: { speed: 3 6, deg: 40 },\nclouds: { all: 100 },\ndt: 1732123426,\nsys: {\ntype: 1,\nid: 4610,\ncountry: \"US\",\nsunrise: 1732103363,\nsunset: 1732138471,\n},\ntimezone: -18000,\nid: 5128581,\nname: \"New York\",\ncod: 200,\n},\n\"los angeles\": {\ncoord: { lon: -118 2437, lat: 34 0522 },\nweather: [\n{\nid: 800,\nmain: \"Clear\",\ndescription: \"clear sky\",\nicon: \"https://cdn freecodecamp org/weather-icons/01d png\",\n},\n],\nbase: \"stations\",\nmain: {\ntemp: 17 24,\nfeels_like: 15 88,\ntemp_min: 14 84,\ntemp_max: 19 62,\npressure: 1023,\nhumidity: 33,\nsea_level: 1023,\ngrnd_level: 1003,\n},\nvisibility: 10000,\nwind: { speed: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 421,
    "chunk_index": 2,
    "total_chunks": 18
  },
  {
    "id": "f60e88f235b71304a7825055ccd675f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "\"US\", sunrise: 1732103363, sunset: 1732138471, }, timezone: -18000, id: 5128581, name: \"New York\", cod: 200, }, \"los angeles\": { coord: { lon: -118 2437, lat: 34 0522 }, weather: [ { id: 800, main: \"Clear\", description: \"clear sky\", icon: \"https://cdn freecodecamp org/weather-icons/01d png\", }, ], base: \"stations\", main: { temp: 17 24, feels_like: 15 88, temp_min: 14 84, temp_max: 19 62, pressure: 1023, humidity: 33, sea_level: 1023, grnd_level: 1003, }, visibility: 10000, wind: { speed: 257, deg: 70 },\nclouds: { all: 0 },\ndt: 1732123664,\nsys: {\ntype: 2,\nid: 2075946,\ncountry: \"US\",\nsunrise: 1732113063,\nsunset: 1732150008,\n},\ntimezone: -28800,\nid: 5368361,\nname: \"Los Angeles\",\ncod: 200,\n},\nchicago: {\ncoord: { lon: -87 6298, lat: 41 8781 },\nweather: [\n{\nid: 802,\nmain: \"Clouds\",\ndescription: \"scattered clouds\",\nicon: \"https://cdn freecodecamp org/weather-icons/03d png\",\n},\n],\nbase: \"stations\",\nmain: {\ntemp: 8 91,\nfeels_like: 4 91,\ntemp_min: 7 86,\ntemp_max: 9 44,\npressure: 1009,\nhumidity: 50,\nsea_level: 1009,\ngrnd_level: 987,\n},\nvisibility: 10000,\nwind: { speed: 9 39, deg: 285, gust: 12",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 3,
    "total_chunks": 18
  },
  {
    "id": "a2d2c6177b6e6937832a62091c6afb28",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "1732150008, }, timezone: -28800, id: 5368361, name: \"Los Angeles\", cod: 200, }, chicago: { coord: { lon: -87 6298, lat: 41 8781 }, weather: [ { id: 802, main: \"Clouds\", description: \"scattered clouds\", icon: \"https://cdn freecodecamp org/weather-icons/03d png\", }, ], base: \"stations\", main: { temp: 8 91, feels_like: 4 91, temp_min: 7 86, temp_max: 9 44, pressure: 1009, humidity: 50, sea_level: 1009, grnd_level: 987, }, visibility: 10000, wind: { speed: 9 39, deg: 285, gust: 1252 },\nclouds: { all: 40 },\ndt: 1732123645,\nsys: {\ntype: 2,\nid: 2010190,\ncountry: \"US\",\nsunrise: 1732106817,\nsunset: 1732141557,\n},\ntimezone: -21600,\nid: 4887398,\nname: \"Chicago\",\ncod: 200,\n},\nlondon: {\ncoord: { lon: -0 1278, lat: 51 5074 },\nweather: [\n{\nid: 800,\nmain: \"Clear\",\ndescription: \"clear sky\",\nicon: \"https://cdn freecodecamp org/weather-icons/01n png\",\n},\n],\nbase: \"stations\",\nmain: {\ntemp: 2 62,\nfeels_like: 0 84,\ntemp_min: 1 72,\ntemp_max: 3 49,\npressure: 1010,\nhumidity: 81,\nsea_level: 1010,\ngrnd_level: 1005,\n},\nvisibility: 10000,\nwind: { speed: 1 79, deg: 285, gust: 3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 422,
    "chunk_index": 4,
    "total_chunks": 18
  },
  {
    "id": "3f45dcf914d25951adc858ad38b75450",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "sunset: 1732141557, }, timezone: -21600, id: 4887398, name: \"Chicago\", cod: 200, }, london: { coord: { lon: -0 1278, lat: 51 5074 }, weather: [ { id: 800, main: \"Clear\", description: \"clear sky\", icon: \"https://cdn freecodecamp org/weather-icons/01n png\", }, ], base: \"stations\", main: { temp: 2 62, feels_like: 0 84, temp_min: 1 72, temp_max: 3 49, pressure: 1010, humidity: 81, sea_level: 1010, grnd_level: 1005, }, visibility: 10000, wind: { speed: 1 79, deg: 285, gust: 313 },\nclouds: { all: 1 },\ndt: 1732123462,\nsys: {\ntype: 2,\nid: 2075535,\ncountry: \"GB\",\nsunrise: 1732087658,\nsunset: 1732118707,\n},\ntimezone: 0,\nid: 2643743,\nname: \"London\",\ncod: 200,\n},\ntokyo: {\ncoord: { lon: 139 6917, lat: 35 6895 },\nweather: [\n{\nid: 501,\nmain: \"Rain\",\ndescription: \"moderate rain\",\nicon: \"https://cdn freecodecamp org/weather-icons/10n png\",\n},\n],\nbase: \"stations\",\nmain: {\ntemp: 8 71,\nfeels_like: 5 38,\ntemp_min: 8 08,\ntemp_max: 9 81,\npressure: 1015,\nhumidity: 92,\nsea_level: 1015,\ngrnd_level: 1014,\n},\nvisibility: 7000,\nwind: { speed: 6 69, deg: 330 },\nrain: { \"1h\": 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 428,
    "chunk_index": 5,
    "total_chunks": 18
  },
  {
    "id": "cfdf22473ec7089bb33872bc41d40c0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "timezone: 0, id: 2643743, name: \"London\", cod: 200, }, tokyo: { coord: { lon: 139 6917, lat: 35 6895 }, weather: [ { id: 501, main: \"Rain\", description: \"moderate rain\", icon: \"https://cdn freecodecamp org/weather-icons/10n png\", }, ], base: \"stations\", main: { temp: 8 71, feels_like: 5 38, temp_min: 8 08, temp_max: 9 81, pressure: 1015, humidity: 92, sea_level: 1015, grnd_level: 1014, }, visibility: 7000, wind: { speed: 6 69, deg: 330 }, rain: { \"1h\": 205 },\nclouds: { all: 75 },\ndt: 1732123711,\nsys: {\ntype: 2,\nid: 268395,\ncountry: \"JP\",\nsunrise: 1732137787,\nsunset: 1732174284,\n},\ntimezone: 32400,\nid: 1850144,\nname: \"Tokyo\",\ncod: 200,\n},\n};\nreturn Promise resolve({\nok: city == \"paris\",\njson: () => Promise resolve(cityMap[city]),\n});\n};\n// function that construct an object with the id-value pairs that we expect in the page from an object\nconst helper = (wobj) => ({\n\"weather-icon\": wobj weather[0] icon,\n\"main-temperature\": wobj main temp || \"N/A\",\n\"feels-like\": wobj main feels_like || \"N/A\",\nhumidity: wobj main humidity || \"N/A\",\nwind: wobj wind speed || \"N/A\",\n\"wind-gust\": wobj wind gust || \"N/A\",\n\"weather-main\": wobj weather[0] main || \"N/A\",\nlocation: wobj name || \"N/A\",\n});\n```\n--hints--\nYou should have a button element with an id of get-weather-btn js\nassert exists(document querySelector('button#get-weather-btn'));\nYou should have a select element js\nassert exists(document querySelector('select'));\nInside the select element the first child should be an option element with an empty value attribute js\nassert exists(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 6,
    "total_chunks": 18
  },
  {
    "id": "fd72df08fc0a01a8492508fc43c47c45",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "wobj main humidity || \"N/A\", wind: wobj wind speed || \"N/A\", \"wind-gust\": wobj wind gust || \"N/A\", \"weather-main\": wobj weather[0] main || \"N/A\", location: wobj name || \"N/A\", }); ``` --hints-- You should have a button element with an id of get-weather-btn js assert exists(document querySelector('button#get-weather-btn')); You should have a select element js assert exists(document querySelector('select')); Inside the select element the first child should be an option element with an empty value attribute js assert exists(documentquerySelector('select > option[value=\"\"]'));\nassert strictEqual(\ndocument querySelector('select > option:first-child') value,\n''\n);\nInside the select element there should be 6 option elements, one for each of the following cities: Paris, London, Tokyo, Los Angeles, Chicago, New York js\n['Paris', 'London', 'Tokyo', 'Los Angeles', 'Chicago', 'New York'] forEach(\ncity => {\nconst el = document querySelector(\n`select > option[value=\"${city toLowerCase()}\"]`\n);\nassert exists(el);\nassert strictEqual(el innerText trim(), city);\n}\n);\nYou should have an img element with the id weather-icon for displaying the weather icon js\nasync () => {\ndocument querySelector('select') value = 'chicago';\ndocument querySelector('#get-weather-btn') click();\nawait new Promise(resolve => setTimeout(resolve, 1));\nassert exists(document querySelector('img#weather-icon'));\n};\nYou should have an element with the id main-temperature for displaying the main temperature js\nasync () => {\ndocument querySelector('select') value = 'london';\ndocument querySelector('#get-weather-btn') click();\nawait new Promise(resolve => setTimeout(resolve, 1));\nassert exists(document querySelector('#main-temperature'));\n};\nYou should have an element with the id feels-like for displaying what the temperature feels like js\nasync () => {\ndocument querySelector('select') value = 'london';\ndocument querySelector('#get-weather-btn') click();\nawait new Promise(resolve => setTimeout(resolve, 1));\nassert exists(document querySelector('#feels-like'));\n};\nYou should have an element with the id humidity for displaying the amount of humidity in air js\nasync () => {\ndocument querySelector('select') value = 'london';\ndocument querySelector('#get-weather-btn') click();\nawait new Promise(resolve => setTimeout(resolve, 1));\nassert exists(document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 515,
    "chunk_index": 7,
    "total_chunks": 18
  },
  {
    "id": "dbb1a4c3ca8d3283b0a513b6e5c18587",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "should have an element with the id feels-like for displaying what the temperature feels like js async () => { document querySelector('select') value = 'london'; document querySelector('#get-weather-btn') click(); await new Promise(resolve => setTimeout(resolve, 1)); assert exists(document querySelector('#feels-like')); }; You should have an element with the id humidity for displaying the amount of humidity in air js async () => { document querySelector('select') value = 'london'; document querySelector('#get-weather-btn') click(); await new Promise(resolve => setTimeout(resolve, 1)); assert exists(documentquerySelector('#humidity'));\n};\nYou should have an element with the id wind for displaying the wind speed js\nasync () => {\ndocument querySelector('select') value = 'new york';\ndocument querySelector('#get-weather-btn') click();\nawait new Promise(resolve => setTimeout(resolve, 1));\nassert exists(document querySelector('#wind'));\n};\nYou should have an element with the id wind-gust for displaying the wind gust js\nasync () => {\ndocument querySelector('select') value = 'new york';\ndocument querySelector('#get-weather-btn') click();\nawait new Promise(resolve => setTimeout(resolve, 1));\nassert exists(document querySelector('#wind-gust'));\n};\nYou should have an element with the id weather-main for displaying the main weather type js\nasync () => {\ndocument querySelector('select') value = 'new york';\ndocument querySelector('#get-weather-btn') click();\nawait new Promise(resolve => setTimeout(resolve, 1));\nassert exists(document querySelector('#weather-main'));\n};\nYou should have an element with the id location for displaying the current location js\nasync () => {\ndocument querySelector('select') value = 'new york';\ndocument querySelector('#get-weather-btn') click();\nawait new Promise(resolve => setTimeout(resolve, 1));\nassert exists(document querySelector('#location'));\n};\nYou should have a showWeather function js\nassert isFunction(showWeather);\nYou should have a getWeather function js\nassert isFunction(getWeather);\nThe getWeather function should accept a city as its only argument and return the JSON from the Weather API js\nasync () => {\ntry {\nconst city = 'chicago';\nconst url = `https://weather-proxy freecodecamp rocks/api/city/${city}`;\nconst outputFunction = await getWeather(city);\nconst json = await fetch(url) then(data => data json());\nassert",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 8,
    "total_chunks": 18
  },
  {
    "id": "8f907b63f30b0054cf8843c4188e47d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "=> setTimeout(resolve, 1)); assert exists(document querySelector('#location')); }; You should have a showWeather function js assert isFunction(showWeather); You should have a getWeather function js assert isFunction(getWeather); The getWeather function should accept a city as its only argument and return the JSON from the Weather API js async () => { try { const city = 'chicago'; const url = `https://weather-proxy freecodecamp rocks/api/city/${city}`; const outputFunction = await getWeather(city); const json = await fetch(url) then(data => data json()); assertdeepEqual(outputFunction, json);\n} catch (err) {\nthrow new Error(err);\n}\n};\nThe showWeather function should call the getWeather function to get the weather data js\nasync () => {\ntry {\nlet flag = false;\nconst temp = getWeather;\ngetWeather = async location => {\nflag = true;\nreturn await fetch(\n`https://weather-proxy freecodecamp rocks/api/city/${location}`\n) then(data => data json());\n};\nawait showWeather('london');\ngetWeather = temp;\nassert isTrue(flag);\n} catch (err) {\nthrow new Error(err);\n}\n};\nThe showWeather function should manage the case in which getWeather returns undefined ```js\nasync () => {\nconst temp = getWeather;\ntry {\ngetWeather = () => {};\nconst city = 'london';\ndocument querySelector('select') value = city;\nassert doesNotThrow(showWeather);\nassert doesNotThrow(() => showWeather(city));\n} finally {\ngetWeather = temp;\n}\n};\n```\nWhen New York is selected the showWeather function should display the data from the API in the respective HTML elements If the value from the API is undefined, you should show N/A ```js\nasync () => {\ntry {\nconst city = 'new york';\ndocument querySelector('select') value = city;\ndocument querySelector('#get-weather-btn') click();\n// fetch the expected values from the API to confront\nconst body = await fetch(\n`https://weather-proxy freecodecamp rocks/api/city/${city}`\n) then(data => data json());\n// construct the object from the data from the API\nconst extractedData = helper(body);\n// check that all things are in place\nfor (const id in extractedData) {\nif (id === 'weather-icon') {\nassert equal(\ndocument querySelector('#weather-icon')",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 9,
    "total_chunks": 18
  },
  {
    "id": "19bbf11f2ff0f8c8cbedb6fa58ace488",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "{ try { const city = 'new york'; document querySelector('select') value = city; document querySelector('#get-weather-btn') click(); // fetch the expected values from the API to confront const body = await fetch( `https://weather-proxy freecodecamp rocks/api/city/${city}` ) then(data => data json()); // construct the object from the data from the API const extractedData = helper(body); // check that all things are in place for (const id in extractedData) { if (id === 'weather-icon') { assert equal( document querySelector('#weather-icon')src,\nextractedData[id]\n);\n} else {\nassert include(\ndocument querySelector(`#${id}`) innerText toLowerCase(),\n`${extractedData[id]}` toLowerCase()\n);\n}\n}\n} catch (err) {\nthrow new Error(err);\n}\n};\n```\nWhen Chicago is selected the showWeather function should display the data from the API in the respective HTML elements If the value from the API is undefined, you should show N/A ```js\nasync () => {\ntry {\nconst city = 'chicago';\ndocument querySelector('select') value = city;\ndocument querySelector('#get-weather-btn') click();\n// fetch the expected values from the API to confront\nconst body = await fetch(\n`https://weather-proxy freecodecamp rocks/api/city/${city}`\n) then(data => data json());\n// construct the object from the data from the API\nconst extractedData = helper(body);\n// check that all things are in place\nfor (const id in extractedData) {\nif (id === 'weather-icon') {\nassert equal(\ndocument querySelector('#weather-icon') src,\nextractedData[id]\n);\n} else {\nassert include(\ndocument querySelector(`#${id}`) innerText toLowerCase(),\n`${extractedData[id]}` toLowerCase()\n);\n}\n}\n} catch (err) {\nthrow new Error(err);\n}\n};\n```\nWhen London is selected the showWeather function should display the data from the API in the respective HTML elements If the value from the API is undefined, you should show N/A ```js\nasync () => {\ntry {\nconst city = 'london';\ndocument querySelector('select') value = city;\ndocument querySelector('#get-weather-btn') click();\n// fetch the expected values from the API to confront\nconst body = await fetch(\n`https://weather-proxy freecodecamp rocks/api/city/${city}`\n) then(data => data",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 10,
    "total_chunks": 18
  },
  {
    "id": "14bf813fe5dedfb068e3c648d9c9489f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "Error(err); } }; ``` When London is selected the showWeather function should display the data from the API in the respective HTML elements If the value from the API is undefined, you should show N/A ```js async () => { try { const city = 'london'; document querySelector('select') value = city; document querySelector('#get-weather-btn') click(); // fetch the expected values from the API to confront const body = await fetch( `https://weather-proxy freecodecamp rocks/api/city/${city}` ) then(data => datajson());\n// construct the object from the data from the API\nconst extractedData = helper(body);\n// check that all things are in place\nfor (const id in extractedData) {\nif (id === 'weather-icon') {\nassert equal(\ndocument querySelector('#weather-icon') src,\nextractedData[id]\n);\n} else {\nassert include(\ndocument querySelector(`#${id}`) innerText toLowerCase(),\n`${extractedData[id]}` toLowerCase()\n);\n}\n}\n} catch (err) {\nthrow new Error(err);\n}\n};\n```\nWhen Tokyo is selected the showWeather function should display the data from the API in the respective HTML elements If the value from the API is undefined, you should show N/A ```js\nasync () => {\ntry {\nconst city = 'tokyo';\ndocument querySelector('select') value = city;\ndocument querySelector('#get-weather-btn') click();\n// fetch the expected values from the API to confront\nconst body = await fetch(\n`https://weather-proxy freecodecamp rocks/api/city/${city}`\n) then(data => data json());\n// construct the object from the data from the API\nconst extractedData = helper(body);\n// check that all things are in place\nfor (const id in extractedData) {\nif (id === 'weather-icon') {\nassert equal(\ndocument querySelector('#weather-icon') src,\nextractedData[id]\n);\n} else {\nassert include(\ndocument querySelector(`#${id}`) innerText toLowerCase(),\n`${extractedData[id]}` toLowerCase()\n);\n}\n}\n} catch (err) {\nthrow new Error(err);\n}\n};\n```\nWhen Los Angeles is selected the showWeather function should display the data from the API in the respective HTML elements If the value from the API is undefined, you should show N/A ```js\nasync () => {\ntry {\nconst city = 'los angeles';\ndocument querySelector('select') value = city;\ndocument",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 509,
    "chunk_index": 11,
    "total_chunks": 18
  },
  {
    "id": "ce364fb40bc5b3f5d8180a8eadd27b7b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "extractedData[id] ); } else { assert include( document querySelector(`#${id}`) innerText toLowerCase(), `${extractedData[id]}` toLowerCase() ); } } } catch (err) { throw new Error(err); } }; ``` When Los Angeles is selected the showWeather function should display the data from the API in the respective HTML elements If the value from the API is undefined, you should show N/A ```js async () => { try { const city = 'los angeles'; document querySelector('select') value = city; documentquerySelector('#get-weather-btn') click();\n// fetch the expected values from the API to confront\nconst body = await fetch(\n`https://weather-proxy freecodecamp rocks/api/city/${city}`\n) then(data => data json());\n// construct the object from the data from the API\nconst extractedData = helper(body);\n// check that all things are in place\nfor (const id in extractedData) {\nif (id === 'weather-icon') {\nassert equal(\ndocument querySelector('#weather-icon') src,\nextractedData[id]\n);\n} else {\nassert include(\ndocument querySelector(`#${id}`) innerText toLowerCase(),\n`${extractedData[id]}` toLowerCase()\n);\n}\n}\n} catch (err) {\nthrow new Error(err);\n}\n};\n```\nIf there is an error, your getWeather function should log the error to the console js\nconst testArr = [];\nconst temp1 = fetch;\nconst temp2 = console log;\nconst temp3 = console error;\nconst temp4 = alert;\nasync () => {\ntry {\nalert = () => {};\nconsole log = obj => {\ntestArr push(obj toString());\n};\nconsole error = obj => {\ntestArr push(obj toString());\n};\nfetch = source => {\nthrow new Error('This is a test error');\n};\nawait getWeather('chicago');\nassert include(testArr[0], 'This is a test error');\nassert lengthOf(testArr, 1);\n} finally {\nfetch = temp1;\nconsole log = temp2;\nconsole error = temp3;\nalert = temp4;\n}\n};\nWhen Paris is selected the app should show an alert with Something went wrong, please try again later js\nconst testArr = [];\nconst temp4 = alert;\nasync () => {\ntry {\nalert = msg => {\ntestArr push(msg);\n};\nconst city = 'paris';\ndocument querySelector('select') value = city;\ndocument",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 12,
    "total_chunks": 18
  },
  {
    "id": "404d8446a869e6833e850e489c2d16c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "a test error'); assert lengthOf(testArr, 1); } finally { fetch = temp1; console log = temp2; console error = temp3; alert = temp4; } }; When Paris is selected the app should show an alert with Something went wrong, please try again later js const testArr = []; const temp4 = alert; async () => { try { alert = msg => { testArr push(msg); }; const city = 'paris'; document querySelector('select') value = city; documentquerySelector('#get-weather-btn') click();\nawait new Promise(resolve => setTimeout(resolve, 1));\nassert include(testArr[0], 'Something went wrong, please try again later');\nassert lengthOf(testArr, 1);\n} finally {\nalert = temp4;\n}\n};\n--seed--\n--seed-contents--\n```html\nWeather App\n```\n```css\n```\n```js\n```\n--solutions--\n```html\nWeather App\nWeather for:\nNew York\nLos Angeles\nChicago\nParis\nTokyo\nLondon\nGet Weather\n```\n```css\n* {\nbox-sizing: border-box;\n}\nbody {\nbackground-color: #32a852;\nmin-height: 100vh;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nrow-gap: 40px;\nfont-size: 1 25em;\nfont-family: sans-serif;\n} btn-wrap {\nmin-width: 100%;\ndisplay: flex;\njustify-content: space-evenly;\nalign-items: center;\ngap: 20px;\nborder: 2px solid black;\npadding: 20px;\nborder-radius: 10px;\nbackground-color: #6cd488;\nbox-shadow: 6px 6px 6px rgba(0, 0, 0, 0 5);\n}\n@media (max-width: 768px) { btn-wrap {\nflex-direction: column;\n}\n} btn-wrap > span {\ntext-transform: uppercase;\ntext-align: center;\nmargin: auto;\n} btn-wrap > span::first-letter {\nfont-size: 1 3em;\n}\nlocation-selector {\nwidth: 200px;\nheight: 50px;\nfont-size: 1 25em;\n}\nget-weather-btn {\nfont-size: 1 25em;\nheight: 50px;\nwidth: 200px;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 13,
    "total_chunks": 18
  },
  {
    "id": "09c2475228ce6fdfe67fd35000ffcde4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "flex; justify-content: space-evenly; align-items: center; gap: 20px; border: 2px solid black; padding: 20px; border-radius: 10px; background-color: #6cd488; box-shadow: 6px 6px 6px rgba(0, 0, 0, 0 5); } @media (max-width: 768px) { btn-wrap { flex-direction: column; } } btn-wrap > span { text-transform: uppercase; text-align: center; margin: auto; } btn-wrap > span::first-letter { font-size: 1 3em; } location-selector { width: 200px; height: 50px; font-size: 1 25em; } get-weather-btn { font-size: 1 25em; height: 50px; width: 200px; }weather-info-wrap {\nmin-width: 100%;\nmax-width: 700px;\nmin-height: 300px;\npadding: 20px 0px;\ntext-align: center;\nbackground-color: #eee;\nborder-radius: 10px;\nborder: 2px solid black;\nbox-shadow: 6px 6px 6px rgba(0, 0, 0, 0 5);\n}\nweather-info {\ndisplay: none;\nfont-family: sans-serif;\npadding: 20px 0;\n}\nlocation {\nfont-size: 1 875em;\n} primary-info {\ndisplay: flex;\njustify-content: space-evenly;\nmargin: 20px;\nfont-size: 1 5625em;\n} primary-info-left {\ndisplay: flex;\nalign-items: center;\n} primary-info-right {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ncolumn-gap: 10px;\n} secondary-info {\nmargin: 40px 20px 0 20px;\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\n} secondary-info-top {\ndisplay: flex;\nalign-items: center;\njustify-content: space-evenly;\n} secondary-info-bottom {\ndisplay: flex;\nalign-items: center;\njustify-content: space-evenly;\nmargin-top: 40px;\n} secondary-info-bottom-left {\ndisplay: flex;\nalign-items: center;\nflex-direction: column;\nrow-gap: 20px;\njustify-content: space-evenly;\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 14,
    "total_chunks": 18
  },
  {
    "id": "c067dc387a07efd38e663ca082e76eef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "{ display: flex; justify-content: space-evenly; margin: 20px; font-size: 1 5625em; } primary-info-left { display: flex; align-items: center; } primary-info-right { display: flex; justify-content: center; align-items: center; column-gap: 10px; } secondary-info { margin: 40px 20px 0 20px; display: flex; flex-direction: column; row-gap: 20px; } secondary-info-top { display: flex; align-items: center; justify-content: space-evenly; } secondary-info-bottom { display: flex; align-items: center; justify-content: space-evenly; margin-top: 40px; } secondary-info-bottom-left { display: flex; align-items: center; flex-direction: column; row-gap: 20px; justify-content: space-evenly; }secondary-info-bottom-right {\nwidth: 100px;\nheight: 100px;\nborder: 2px solid black;\nborder-radius: 50%;\nposition: relative;\n}\ncompass-arrow {\nwidth: 3px;\nheight: 60px;\nposition: absolute;\nbackground-color: black;\n}\ncompass-arrow {\nwidth: 4px;\nheight: 70px;\ntop: 15%;\nposition: absolute;\nbackground-color: black;\n} arrow-head {\nwidth: 0;\nheight: 0;\nborder: 8px solid transparent;\nborder-left-color: black;\nposition: absolute;\ntop: -15%;\nleft: -6px;\ntransform: rotate(-90deg);\n} compass-direction {\nposition: absolute;\nbackground-color: black;\n} north, south {\nwidth: 3px;\nheight: 8px;\nleft: 50%;\n} east, west {\nwidth: 8px;\nheight: 3px;\ntop: 50%;\n} north {\ntop: -8px;\n} south {\nbottom: -8px;\n} east {\nright: -8px;\n} west {\nleft: -8px;\n}\n```\n```js\nconst getWeatherBtn = document getElementById('get-weather-btn');\nconst selectEl = document getElementById('location-selector');\nconst weatherInfoEl = document getElementById('weather-info');\nconst iconEl = document getElementById('weather-icon');\nconst tempEl = document getElementById('main-temperature');\nconst feelEl = document",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 15,
    "total_chunks": 18
  },
  {
    "id": "909b37808aa14989cdbff2892144b5cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "position: absolute; background-color: black; } north, south { width: 3px; height: 8px; left: 50%; } east, west { width: 8px; height: 3px; top: 50%; } north { top: -8px; } south { bottom: -8px; } east { right: -8px; } west { left: -8px; } ``` ```js const getWeatherBtn = document getElementById('get-weather-btn'); const selectEl = document getElementById('location-selector'); const weatherInfoEl = document getElementById('weather-info'); const iconEl = document getElementById('weather-icon'); const tempEl = document getElementById('main-temperature'); const feelEl = documentgetElementById('feels-like');\nconst humidityEl = document getElementById('humidity');\nconst windEl = document getElementById('wind');\nconst gustEl = document getElementById('wind-gust');\nconst mainEl = document getElementById('weather-main');\nconst locationEl = document getElementById('location');\nconst arrowEl = document getElementById('compass-arrow');\ngetWeatherBtn addEventListener(\n'click',\n() => selectEl value && showWeather(selectEl value)\n);\nasync function showWeather(city) {\nconst json = await getWeather(city);\nconst {\nweather,\nmain: { temp, feels_like, humidity },\nwind: { speed, gust, deg = 0 },\nname\n} = json;\nconst { main, icon } = weather[0];\nweatherInfoEl style display = 'block';\niconEl src = icon || '';\ntempEl innerHTML = temp ${temp}&deg; C : 'N/A';\nfeelEl innerHTML = Feels Like: ${feels_like ${feels_like}° C: 'N/A'};\nhumidityEl innerHTML = Humidity: ${humidity ${humidity}%: 'N/A'};\nwindEl innerHTML = Wind: ${speed ${speed} m/s: 'N/A'};\ngustEl innerHTML = Gusts: ${gust ${gust} m/s: 'N/A'};\nmainEl innerHTML = main || 'N/A';\nlocationEl innerHTML = name || 'N/A';\narrowEl style transform = rotate(${deg}deg);\n}\nasync function getWeather(city) {\ntry {\nconst response = await fetch(\nhttps://weather-proxy freecodecamp rocks/api/city/${city}\n);\nif ( response",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 16,
    "total_chunks": 18
  },
  {
    "id": "9b821a9691bb501b80572b901f71d58b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
    "source_type": "git_repo",
    "title": "Weather App",
    "content": "tempEl innerHTML = temp ${temp}&deg; C : 'N/A'; feelEl innerHTML = Feels Like: ${feels_like ${feels_like}° C: 'N/A'}; humidityEl innerHTML = Humidity: ${humidity ${humidity}%: 'N/A'}; windEl innerHTML = Wind: ${speed ${speed} m/s: 'N/A'}; gustEl innerHTML = Gusts: ${gust ${gust} m/s: 'N/A'}; mainEl innerHTML = main || 'N/A'; locationEl innerHTML = name || 'N/A'; arrowEl style transform = rotate(${deg}deg); } async function getWeather(city) { try { const response = await fetch( https://weather-proxy freecodecamp rocks/api/city/${city} ); if ( responseok) {\nalert('Something went wrong, please try again later');\n}\nconst json = await response json();\nreturn json;\n} catch (error) {\nconsole error(error message);\n}\n}\n```",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 27718,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lab-weather-app\\66f12a88741aeb16b9246c59.md",
      "source_type": "git_repo"
    },
    "token_count": 212,
    "chunk_index": 17,
    "total_chunks": 18
  },
  {
    "id": "d9de6f8863bf57c39dc2b8d0ecc649f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf07a2b9796eb49719e03.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672cf07a2b9796eb49719e03\ntitle: What Are Media Breakpoints, and What Are Common Breakpoints in Modern Design challengeType: 19\ndashedName: what-are-media-breakpoints\n--description--\nMedia breakpoints are specific points in a website's design where the layout and content adjust to accommodate different screen sizes These breakpoints are crucial in responsive web design, allowing developers to create websites that look and function well across various devices, from mobile phones to large desktop monitors In CSS, media breakpoints are implemented using media queries These queries allow you to apply different styles based on the characteristics of the device, most commonly the viewport width For example, you might set a breakpoint at 768 pixels to differentiate between mobile and tablet layouts Here's a simple example of how a media query with a breakpoint might look in CSS:\ncss\n/* Styles for screens wider than 768px */\n@media screen and (min-width: 768px) {\nbody {\nfont-size: 1 125rem;\n}\n}\nWhen the screen width is 768 pixels or larger, the font size increases to 1 125rem which is 18 pixels This demonstrates how breakpoints can be used to adjust the design for different screen sizes When it comes to choosing breakpoints, there's no one-size-fits-all solution The appropriate breakpoints for your website will depend on your specific design and content However, there are some common breakpoints that many designers use as starting points in modern web design A popular set of breakpoints corresponds to common device categories:\nSmall devices (smartphones): up to 640px Medium devices (tablets): 641px to 1024px Large devices (desktops): 1025px and larger Some designers prefer a more granular approach, using breakpoints like:\nExtra small devices: up to 576px Small devices: 577px to 768px Medium devices: 769px to 992px Large devices: 993px to 1200px Extra large devices: 1201px and larger It's important to note that these are not strict rules, but rather common practices The trend in modern responsive design is moving towards a more fluid approach, where designs adapt smoothly across a wide range of screen sizes, rather than making dramatic changes at set breakpoints Here are some other common examples for breakpoints:\nExtra small device: under 576px Small device: more than or equal to 576px Medium device: more than or equal to 768px",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4541,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf07a2b9796eb49719e03.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9ca69c58fce09dec9820e4bac91fe52c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf07a2b9796eb49719e03.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "larger It's important to note that these are not strict rules, but rather common practices The trend in modern responsive design is moving towards a more fluid approach, where designs adapt smoothly across a wide range of screen sizes, rather than making dramatic changes at set breakpoints Here are some other common examples for breakpoints: Extra small device: under 576px Small device: more than or equal to 576px Medium device: more than or equal to 768pxLarge device: more than or equal to 992px Extra large device: more than or equal to 1200px Extra extra large device: more than or equal to 1400px These breakpoints are widely used and can serve as a good starting point for many projects However, it's crucial to remember that the best breakpoints for your project should be determined by your content and design, not by arbitrary numbers or device sizes --questions--\n--text--\nWhat is the primary purpose of media breakpoints in responsive web design --answers--\nTo change the website's color scheme on different devices --feedback--\nThink about how websites adapt to various device sizes To adjust the layout and content for different screen sizes To increase the website's loading speed on mobile devices\n--feedback--\nThink about how websites adapt to various device sizes To add new features for desktop users --feedback--\nThink about how websites adapt to various device sizes --video-solution--\n2\n--text--\nWhich of the following is a commonly used breakpoint for smaller devices like smart phones --answers--\n1640px\n--feedback--\nReview the beginning of the lecture to see where this was discussed 640px\n1200px\n--feedback--\nReview the beginning of the lecture to see where this was discussed 2000px\n--feedback--\nReview the beginning of the lecture to see where this was discussed --video-solution--\n2\n--text--\nWhich of the following is NOT typically considered a common breakpoint in modern responsive design --answers--\n768px (tablets) --feedback--\nThink about which screen resolution is less commonly targeted in responsive designs 1024px (small desktops) --feedback--\nThink about which screen resolution is less commonly targeted in responsive designs 480px (large smartphones) --feedback--\nThink about which screen resolution is less commonly targeted in responsive designs 6000px (really large device) --video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4541,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf07a2b9796eb49719e03.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4c4ebf563570851131700b322652c83b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf05c3ad533eabe1e8197.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672cf05c3ad533eabe1e8197\ntitle: How Do Media Queries Work, and What Are Some Common Media Types and Features challengeType: 19\ndashedName: how-do-media-queries-work\n--description--\nMedia queries are a fundamental component of responsive web design, allowing developers to apply different styles based on the characteristics of the user's device or browser They provide a way to tailor the presentation of content to a variety of devices without changing the content itself At its core, a media query consists of a media type and one or more expressions that check for specific conditions If these conditions are true, the corresponding styles are applied This mechanism allows for the creation of responsive designs that adapt to different screen sizes, resolutions, and device capabilities The basic syntax of a media query in CSS looks like this:\ncss\n@media mediatype and (feature: value) {\n/* CSS rules go here */\n}\nIn this structure, mediatype specifies the type of media the query applies to, and the feature: value pair defines the condition that must be met for the styles to be applied Media types describe the general category of a device Let's talk about the most commonly used media types:\nall is suitable for all devices This is the default if no media type is specified print is intended for paged material and documents viewed on a screen in print preview mode screen is intended primarily for screens In the past, there were more media types like handheld and tv, but most of these have been deprecated in favor of using features to more precisely target devices Media features describe specific characteristics of the user agent, output device, or environment Let's talk about some of the most commonly used media features The width and height refers to the viewport width and height, and are often used with min- or max- prefixes for range queries Here is an example:\ncss\n@media screen and (min-width: 768px) {\n/* Styles for screens at least 768px wide */\n}\naspect-ratio describes the ratio between the width and height of the viewport Here is an example:\ncss\n@media screen and (aspect-ratio: 16/9) {\n/* Styles for screens with a 16:9 aspect ratio */\n}\nThe orientation feature indicates whether the device is in landscape or portrait orientation",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6820,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf05c3ad533eabe1e8197.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "06f33913a0987026b1c6af46a0703904",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf05c3ad533eabe1e8197.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "with min- or max- prefixes for range queries Here is an example: css @media screen and (min-width: 768px) { /* Styles for screens at least 768px wide */ } aspect-ratio describes the ratio between the width and height of the viewport Here is an example: css @media screen and (aspect-ratio: 16/9) { /* Styles for screens with a 16:9 aspect ratio */ } The orientation feature indicates whether the device is in landscape or portrait orientationHere is an example:\ncss\n@media screen and (orientation: landscape) {\n/* Styles for landscape orientation */\n}\nThe resolution feature describes the resolution of the output device in dots per inch (dpi) or dots per centimeter (dpcm) Here is an example:\ncss\n@media screen and (min-resolution: 300dpi) {\n/* Styles for high-resolution screens */\n}\nThe hover feature tests whether the primary input mechanism can hover over elements Here is an example:\ncss\n@media (hover: hover) {\n/* Styles for devices that support hover */\n}\nThe prefers-color-scheme feature detects if the user has requested a light or dark color theme Here is an example:\ncss\n@media (prefers-color-scheme: dark) {\n/* Styles for dark mode */\n}\nMedia queries can also combine multiple conditions using logical operators The and operator is used to combine multiple media features, while not and only can be used to negate or isolate media queries Here's an example that combines multiple features:\ncss\n@media screen and (min-width: 768px) and (orientation: landscape) {\n/* Styles for landscape screens at least 768px wide */\n}\nIt's also possible to target multiple queries in a comma-separated list, which functions like an \"or\" operator:\ncss\n@media screen and (min-width: 768px), print {\n/* Styles for screens at least 768px wide OR for print */\n}\nWhen working with media queries, it's important to consider the cascade Media queries don't increase specificity – they just group conditional rules The normal rules of the CSS cascade still apply within each media query In practice, media queries are often used to create responsive layouts A common pattern is to define a base style for mobile devices and then use media queries to enhance the layout for larger screens:\n```css\n/ Base styles for mobile /",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6820,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf05c3ad533eabe1e8197.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "8ea1250477a9d681a7e0d411663d021c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf05c3ad533eabe1e8197.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "working with media queries, it's important to consider the cascade Media queries don't increase specificity – they just group conditional rules The normal rules of the CSS cascade still apply within each media query In practice, media queries are often used to create responsive layouts A common pattern is to define a base style for mobile devices and then use media queries to enhance the layout for larger screens: ```css / Base styles for mobile /container {\nwidth: 100%;\npadding: 15px;\n}\n/ Styles for tablets /\n@media screen and (min-width: 768px) { container {\nwidth: 750px;\nmargin: 0 auto;\n}\n}\n/ Styles for desktops /\n@media screen and (min-width: 1024px) { container {\nwidth: 960px;\n}\n}\n```\nThis approach, known as \"mobile-first\" responsive design, ensures that the base styles are suitable for mobile devices, with enhancements added for larger screens In conclusion, media queries are a powerful tool in CSS that allow for the creation of responsive, adaptable web designs By understanding how to use different media types and features, developers can create websites that provide optimal user experiences across a wide range of devices and preferences As web technologies continue to evolve, staying updated with new media features can help in creating more nuanced and user-friendly responsive designs --questions--\n--text--\nWhich of the following is NOT a commonly used media type in modern CSS --answers--\nall\n--feedback--\nConsider which media types are still relevant in current web development practices print\n--feedback--\nConsider which media types are still relevant in current web development practices screen\n--feedback--\nConsider which media types are still relevant in current web development practices handheld\n--video-solution--\n4\n--text--\nWhat does the orientation media feature check for --answers--\nThe physical orientation of the device --feedback--\nThink about how this feature relates to how content is displayed on a screen Whether the viewport is wider than it is tall, or vice versa The direction of text on the page --feedback--\nThink about how this feature relates to how content is displayed on a screen The geographical orientation of the user --feedback--\nThink about how this feature relates to how content is displayed on a screen --video-solution--\n2\n--text--\nIn a media query, what is the purpose of using the and operator --answers--\nTo combine multiple CSS properties --feedback--\nConsider how you might check for multiple conditions in a single media query To add two numeric values together",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6820,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf05c3ad533eabe1e8197.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "5ed20ac304c363896efaaad82db32a6d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf05c3ad533eabe1e8197.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "about how this feature relates to how content is displayed on a screen The geographical orientation of the user --feedback-- Think about how this feature relates to how content is displayed on a screen --video-solution-- 2 --text-- In a media query, what is the purpose of using the and operator --answers-- To combine multiple CSS properties --feedback-- Consider how you might check for multiple conditions in a single media query To add two numeric values together--feedback--\nConsider how you might check for multiple conditions in a single media query To combine multiple media features or types To create a logical or condition --feedback--\nConsider how you might check for multiple conditions in a single media query --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6820,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-responsive-web-design\\672cf05c3ad533eabe1e8197.md",
      "source_type": "git_repo"
    },
    "token_count": 141,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "e57519742a06d17da76ab3684830b936",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-styling-forms\\672bca660aa9f9ce9b2b2787.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672bca660aa9f9ce9b2b2787\ntitle: What Are Common Issues When Styling Special Input Elements challengeType: 19\ndashedName: what-are-common-issues-when-styling-special-input-elements\n--description--\nLet's learn about some of the common issues when trying to style special input elements like the datetime-local and color inputs These special types of inputs rely on complex pseudo-elements to create things like the date and color pickers This presents a significant challenge for styling these inputs One challenge is that the default styling is entirely browser-dependent, so the CSS you write to make the picker look the way intend may be entirely different on another browser Another may be the complexity of the pseudo-element Consider the date selector; there are a lot of moving parts here and the complex structure of the pseudo-element might pose a significant challenge in applying styling to the right areas Of course, with these complex elements, you also run the risk of accidentally losing important functionality when you manually style them Not only could you lose important indicators like the focus state or selected item but you could potentially break the selector entirely For these reasons many developers rely on JavaScript libraries or custom components entirely instead of using the browser's built-in components --questions--\n--text--\nWhat is one of the main challenges in styling special input elements like datetime-local and color --answers--\nThese elements are not supported in all browsers --feedback--\nThe lecture mentions a specific aspect of these elements that makes styling difficult They rely on complex pseudo elements for their functionality They require additional JavaScript to function properly --feedback--\nThe lecture mentions a specific aspect of these elements that makes styling difficult They cannot be styled using CSS at all --feedback--\nThe lecture mentions a specific aspect of these elements that makes styling difficult --video-solution--\n2\n--text--\nWhy might CSS written to style a special input element work differently across browsers --answers--\nDifferent browsers use different JavaScript engines --feedback--\nThe lecture points out a specific reason for inconsistent styling across browsers The default styling is browser-dependent Some browsers don't support these input types --feedback--\nThe lecture points out a specific reason for inconsistent styling across browsers CSS properties work differently in each browser --feedback--\nThe lecture points out a specific reason for inconsistent styling across browsers --video-solution--\n2\n--text--\nWhat approach do many developers take to address the challenges of styling complex input elements --answers--\nThey avoid using these input types altogether",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-styling-forms\\672bca660aa9f9ce9b2b2787.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "7ddd68959fc4a8e6969685cfc0e3256c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-styling-forms\\672bca660aa9f9ce9b2b2787.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "for inconsistent styling across browsers The default styling is browser-dependent Some browsers don't support these input types --feedback-- The lecture points out a specific reason for inconsistent styling across browsers CSS properties work differently in each browser --feedback-- The lecture points out a specific reason for inconsistent styling across browsers --video-solution-- 2 --text-- What approach do many developers take to address the challenges of styling complex input elements --answers-- They avoid using these input types altogether--feedback--\nThe lecture mentions a common solution that developers often resort to They use browser-specific CSS prefixes --feedback--\nThe lecture mentions a common solution that developers often resort to They rely on JavaScript libraries or custom components They use only inline styles for these elements --feedback--\nThe lecture mentions a common solution that developers often resort to --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3394,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-styling-forms\\672bca660aa9f9ce9b2b2787.md",
      "source_type": "git_repo"
    },
    "token_count": 161,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7a76c1a15339b1bc3ea511a79c8b4a1b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-styling-forms\\672aa791227e755da64cf240.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672aa791227e755da64cf240\ntitle: What Are Some Best Practices for Styling Text Inputs challengeType: 19\ndashedName: what-are-some-best-practices-for-styling-text-inputs\n--description--\nAs with all text elements you need to ensure the styles you apply to the text input are accessible This means the font needs to be adequately sized and the color needs to have sufficient contrast with the background The placeholder, however, is often forgotten It's important to remember that this is also text and you will likely need to change the styling to ensure it's readable Another thing to keep in mind is that you should allow the user to modify the input For example, if it's a text area you should not remove the ability to resize it The input should also scale accordingly when the user zooms the page Input elements are also focusable When you are editing your styles you should take care that you preserve a noticeable indicator when the element has focus such as a bold border Additionally there is the error state to consider When the user's text does not pass the input validation there is a visual indicator that shows there is something wrong As you give your element your personal flair you want to be sure that state is still noticeable and that it does not look similar to the focus indicator With all this in mind you can now create captivating user forms --questions--\n--text--\nWhen styling text inputs, which of the following is NOT mentioned as a key consideration for accessibility --answers--\nFont size --feedback--\nThe lecture focuses on visual aspects of accessibility for text inputs Color contrast with the background --feedback--\nThe lecture focuses on visual aspects of accessibility for text inputs Placeholder text readability --feedback--\nThe lecture focuses on visual aspects of accessibility for text inputs Animation speed of focus transitions --video-solution--\n4\n--text--\nWhat is recommended regarding the resizing ability of a textarea input --answers--\nRemove the ability to resize for a consistent look --feedback--\nThe lecture mentions preserving certain functionalities for user convenience Allow the user to resize it Automatically resize based on content length --feedback--\nThe lecture mentions preserving certain functionalities for user convenience Lock the size after initial page load --feedback--\nThe lecture mentions preserving certain functionalities for user convenience --video-solution--\n2\n--text--\nHow should the error state of an input be styled --answers--\nIt should be identical to the focus state --feedback--\nThe lecture discusses the importance of clear visual feedback for different input states",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3259,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-styling-forms\\672aa791227e755da64cf240.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6b3126613e61799c17d6ecbdc6c28253",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-styling-forms\\672aa791227e755da64cf240.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "convenience Allow the user to resize it Automatically resize based on content length --feedback-- The lecture mentions preserving certain functionalities for user convenience Lock the size after initial page load --feedback-- The lecture mentions preserving certain functionalities for user convenience --video-solution-- 2 --text-- How should the error state of an input be styled --answers-- It should be identical to the focus state --feedback-- The lecture discusses the importance of clear visual feedback for different input statesIt should be subtle to not distract the user --feedback--\nThe lecture discusses the importance of clear visual feedback for different input states It should be noticeable and distinct from the focus indicator It should only be indicated through text, not visual styling --feedback--\nThe lecture discusses the importance of clear visual feedback for different input states --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3259,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-styling-forms\\672aa791227e755da64cf240.md",
      "source_type": "git_repo"
    },
    "token_count": 160,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "810c3d20133c334c75e110696b561f73",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-styling-forms\\672bc9d9eecb65cdf63491de.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672bc9d9eecb65cdf63491de\ntitle: \"When Should You Use appearance: none to Deal with Issues Styling Search Inputs and Checkboxes \"\nchallengeType: 19\ndashedName: when-should-you-use-appearance-none-to-deal-with-issues-styling-search-inputs-and-checkboxes\n--description--\nLet's learn when to use appearance: none to address styling issues for search input, checkboxes and radio buttons Browsers apply default styling to a lot of elements In the case of input elements your ability to style them with CSS can feel rather restricted So, you may want to use appearance: none to hide aspects of the default element and build your own instead For example, this would hide the default checkboxes for a checkbox input allowing you to use custom indicators like a green tick and a red X to show the state For a search input, WebKit based browsers will show a default search icon and a cancel button Hiding these allows you to create your own indicators that would appear on all browsers WebKit is a software engine that helps web browsers display websites Browsers like Safari use WebKit to make sure web pages look and work correctly This appearance: none CSS property gives you complete control over the styling, but it does come with some things to look out for The default interactive components of input elements include features such as focus and error indicators which you will need to ensure aren't lost Creating consistent cross-platform styling is a great reason to use this property You can also use it to ensure that tap targets on a mobile device are large enough or that the colors of a checkbox have enough contrast --questions--\n--text--\nWhat is the primary purpose of using appearance: none on input elements --answers--\nTo improve page load times --feedback--\nThink about what this property allows developers to do with input elements To hide the input element completely --feedback--\nThink about what this property allows developers to do with input elements To remove default browser styling and allow custom styling To make the input element non-interactive --feedback--\nThink about what this property allows developers to do with input elements --video-solution--\n3\n--text--\nWhich of the following is NOT mentioned as a benefit of using appearance: none on input elements --answers--\nCreating consistent cross-platform styling --feedback--\nThe lecture discusses several advantages, but one of these is not among them Allowing custom indicators for checkboxes --feedback--\nThe lecture discusses several advantages, but one of these is not among them",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3564,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-styling-forms\\672bc9d9eecb65cdf63491de.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ee8ee90b684f5dd1f4f3c9f8928f948a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-styling-forms\\672bc9d9eecb65cdf63491de.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "make the input element non-interactive --feedback-- Think about what this property allows developers to do with input elements --video-solution-- 3 --text-- Which of the following is NOT mentioned as a benefit of using appearance: none on input elements --answers-- Creating consistent cross-platform styling --feedback-- The lecture discusses several advantages, but one of these is not among them Allowing custom indicators for checkboxes --feedback-- The lecture discusses several advantages, but one of these is not among themImproving the security of form submissions Enabling larger tap targets on mobile devices --feedback--\nThe lecture discusses several advantages, but one of these is not among them --video-solution--\n3\n--text--\nWhat potential drawback of using appearance: none is mentioned in the lecture --answers--\nIt may cause the input to stop functioning --feedback--\nThe lecture mentions a caveat related to default interactive components It can significantly slow down the page --feedback--\nThe lecture mentions a caveat related to default interactive components It might remove important default features like focus indicators It's not supported in all modern browsers --feedback--\nThe lecture mentions a caveat related to default interactive components --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3564,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-best-practices-for-styling-forms\\672bc9d9eecb65cdf63491de.md",
      "source_type": "git_repo"
    },
    "token_count": 233,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b8c19704bc178b20da432e418bec8a4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-browsing-the-web-effectively\\672aa5bd69657d56ab49ec8a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672aa5bd69657d56ab49ec8a\ntitle: What Are Some of the Common Web Browsers Available Today and How Do You Install One challengeType: 19\ndashedName: what-are-some-of-the-common-web-browsers-available-today\n--description--\nWeb browsers are applications you use to visit pages on the internet If you are going through the freeCodeCamp curriculum, there is a very good chance you are using a web browser right now As of 2024, the most popular browsers are Microsoft Edge, Firefox, Google Chrome, and Safari There are quite a few other options, and market shares are always changing, but these four are the most common at this time Your operating system most likely comes with a browser installed by default For Windows, you'd have Microsoft Edge For macOS, you'd have Safari For Linux, you'll probably have Firefox But what if you want to use a different browser The good news is you already have a default browser So you can navigate to the web page for the browser you want, and download the appropriate installer for your operating system When choosing a browser, consider factors like speed, security features, and compatibility with websites you frequently visit Some browsers offer unique features For example, Opera has a built-in VPN, while Brave focuses on privacy and ad-blocking Installation is usually straightforward After downloading the installer, simply run it and follow the on-screen instructions Most browsers will offer to import your bookmarks and settings from your current default browser, making the transition easier Alternatively, you can install a browser through your operating system's package manager, such as brew install --cask google-chrome on macOS with Homebrew, or yay -S brave-bin on Arch Linux The package manager and package names available to you will vary depending on your operating system Remember, you're not limited to just one browser Many people use different browsers for different purposes – perhaps one for work and another for personal browsing Feel free to experiment with different browsers to find what works best for you --questions--\n--text--\nWhich of the following is NOT one of the most popular web browsers as of 2024 --answers--\nMicrosoft Edge\n--feedback--\nThis browser used to be popular, but has reached end-of-life and was replaced by Microsoft Edge Firefox\n--feedback--\nThis browser used to be popular, but has reached end-of-life and was replaced by Microsoft Edge",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3659,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-browsing-the-web-effectively\\672aa5bd69657d56ab49ec8a.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6dd01127f802ae89d8c01ad23dd38b84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-browsing-the-web-effectively\\672aa5bd69657d56ab49ec8a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "work and another for personal browsing Feel free to experiment with different browsers to find what works best for you --questions-- --text-- Which of the following is NOT one of the most popular web browsers as of 2024 --answers-- Microsoft Edge --feedback-- This browser used to be popular, but has reached end-of-life and was replaced by Microsoft Edge Firefox --feedback-- This browser used to be popular, but has reached end-of-life and was replaced by Microsoft EdgeGoogle Chrome\n--feedback--\nThis browser used to be popular, but has reached end-of-life and was replaced by Microsoft Edge Internet Explorer\n--video-solution--\n4\n--text--\nWhat is the default web browser that typically comes pre-installed on macOS --answers--\nMicrosoft Edge\n--feedback--\nWindows comes with Microsoft Edge, and Linux frequently comes with Firefox Firefox\n--feedback--\nWindows comes with Microsoft Edge, and Linux frequently comes with Firefox Google Chrome\n--feedback--\nWindows comes with Microsoft Edge, and Linux frequently comes with Firefox Safari\n--video-solution--\n4\n--text--\nWhich of the following is a method for installing a web browser on a computer --answers--\nUsing the operating system's package manager --feedback--\nThere are multiple ways to install a browser Downloading directly from the browser's website --feedback--\nThere are multiple ways to install a browser Both A and B None of the above --feedback--\nThere are multiple ways to install a browser --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3659,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-browsing-the-web-effectively\\672aa5bd69657d56ab49ec8a.md",
      "source_type": "git_repo"
    },
    "token_count": 294,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "c43d0851c8389fcbe1f5b4270cc1b683",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-browsing-the-web-effectively\\672ac96491845f43ea9a26d7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672ac96491845f43ea9a26d7\ntitle: What Is the Difference Between a Web Browser, a Website, and a Search Engine challengeType: 19\ndashedName: what-is-the-difference-between-a-web-browser-a-website-and-a-search-engine\n--description--\nWeb browsers are software applications that allow users to access and navigate the World Wide Web They interpret and display web content, including text, images, videos, and interactive elements Key features of web browsers include the address bar, where you enter URLs or search queries, and the rendering engine, which translates HTML, CSS, and JavaScript into visual web pages Browsers also offer bookmarks to save and organize favorite websites, extensions to enhance functionality, and various privacy and security features such as pop-up blockers and private browsing modes Popular web browsers include Google Chrome, Mozilla Firefox, Microsoft Edge, Safari, and Opera Websites, on the other hand, are collections of web pages and related content that are identified by a common domain name and published on at least one web server They are the destinations you visit using your web browser Components of websites include the domain name, which is the unique address of the website (like freecodecamp org), and web pages, which are individual documents that make up a website Websites also often include multimedia content like images, videos, and audio files that enhance the user experience, as well as interactive elements such as forms and buttons that allow user interaction Websites can be static, where content rarely changes, or dynamic, where content updates frequently or is personalized for users Search engines are web-based tools designed to help users find information on the internet They use complex algorithms to index and rank web pages based on relevance to user queries Key aspects of search engines include web crawlers, also known as spiders or bots, which are programs that systematically browse the web to discover and index new content The indexing process involves organizing and storing information about web pages in massive databases Search engines also employ ranking algorithms, which are complex systems that determine the order of search results based on factors like relevance, authority, and user experience Popular search engines include Google, Bing, Yahoo, and DuckDuckGo The relationship between browsers, websites, and search engines is interconnected Web browsers are the tools used to access both websites and search engines Websites are the destinations that users visit through browsers or find via search engines Search engines help users discover websites by providing organized access to the vast amount of information on the web",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4560,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-browsing-the-web-effectively\\672ac96491845f43ea9a26d7.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "eac905e28d2343d34aecf5a5c161f585",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-browsing-the-web-effectively\\672ac96491845f43ea9a26d7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "search results based on factors like relevance, authority, and user experience Popular search engines include Google, Bing, Yahoo, and DuckDuckGo The relationship between browsers, websites, and search engines is interconnected Web browsers are the tools used to access both websites and search engines Websites are the destinations that users visit through browsers or find via search engines Search engines help users discover websites by providing organized access to the vast amount of information on the webUnderstanding these distinctions and relationships is crucial for effective internet use and basic web literacy --questions--\n--text--\nWhat is the primary function of a web browser --answers--\nTo create websites --feedback--\nThink about what you use a web browser for in your daily internet activities To index web pages --feedback--\nThink about what you use a web browser for in your daily internet activities To access and navigate the World Wide Web To rank search results --feedback--\nThink about what you use a web browser for in your daily internet activities --video-solution--\n3\n--text--\nWhich of the following is NOT a component of a website --answers--\nDomain name --feedback--\nConsider the elements that make up a website versus those that are part of other web technologies Web pages --feedback--\nConsider the elements that make up a website versus those that are part of other web technologies Multimedia content --feedback--\nConsider the elements that make up a website versus those that are part of other web technologies Rendering engine --video-solution--\n4\n--text--\nWhat is the main purpose of a search engine's web crawler --answers--\nTo systematically browse and index web content To display web pages to users --feedback--\nThink about how search engines gather information about websites across the internet To block pop-up advertisements --feedback--\nThink about how search engines gather information about websites across the internet To create domain names for websites --feedback--\nThink about how search engines gather information about websites across the internet --video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4560,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-browsing-the-web-effectively\\672ac96491845f43ea9a26d7.md",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a69462d89c67e112250747211eca32b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-browsing-the-web-effectively\\672ac9705b07a64439b73b59.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672ac9705b07a64439b73b59\ntitle: How to Use a Search Engine Effectively to Achieve Optimal Results\nchallengeType: 19\ndashedName: how-to-use-a-search-engine-effectively-to-achieve-optimal-results\n--description--\nSearching for information on the Internet can be a daunting task There are so many websites out there, with so much data, that it may seem impossible to get the results you want But thanks to things like boolean search syntax, you can narrow down your search to exactly what you need Boolean search syntax is a way to use special words to help you find exactly what you're looking for when searching online Here is an example of a basic search query for freecodecamp curriculum When you search for freecodecamp curriculum, the search engine will return results that match any of these keywords – typically sorted by relevance (how likely they are to match, or be related to, more of your query) But what if you only wanted results that matched both keywords Well, you might have heard that you can wrap a query in quotation marks, like \"freecodecamp curriculum\" However, this query specifically matches the phrase freecodecamp curriculum This means that the results you will see will be limited to sites that say freecodecamp curriculum together, not sites that say freecodecamp AND curriculum If you want to match sites that include both of those terms, but not necessarily next to each other as a phrase, you can prefix each term with a plus symbol like this: +freecodecamp +curriculum\nAlternatively, maybe you're interested in freeCodeCamp's initiatives outside of the curriculum In this case, you can prefix the term curriculum with a minus symbol like this: +freecodecamp -curriculum This will return results that mention freecodecamp, but exclude results that also mention curriculum Or maybe you have a specific site you want to search, like our news platform You can use site: followed by the URL of the site you want to search: site:freecodecamp org/news curriculum This query returns all results from freecodecamp org/news that contain the word curriculum By combining these tools, you can come up with very specific queries to get the exact information you need For example, the query site:freecodecamp org/news +python -curriculum would search for Python articles on our news site, excluding articles that might talk about our curriculum",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4535,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-browsing-the-web-effectively\\672ac9705b07a64439b73b59.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d3d42fdcadf6a0287e877b4d3d2309ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-browsing-the-web-effectively\\672ac9705b07a64439b73b59.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "platform You can use site: followed by the URL of the site you want to search: site:freecodecamp org/news curriculum This query returns all results from freecodecamp org/news that contain the word curriculum By combining these tools, you can come up with very specific queries to get the exact information you need For example, the query site:freecodecamp org/news +python -curriculum would search for Python articles on our news site, excluding articles that might talk about our curriculumSearch operators may vary, so it is always important to check the documentation for your preferred search engine But you should now be empowered to get the exact results you want from your web searches --questions--\n--text--\nWhat is the purpose of using quotation marks around a search query --answers--\nTo search for results containing any of the words --feedback--\nThink about how quotation marks are used in writing to represent exactly what the author said To search for an exact phrase To exclude certain words from the search --feedback--\nThink about how quotation marks are used in writing to represent exactly what the author said To search within a specific website --feedback--\nThink about how quotation marks are used in writing to represent exactly what the author said --video-solution--\n2\n--text--\nWhich symbol is used to exclude a term from search results --answers--\n+\n--feedback--\nRemember the example given for searching for freeCodeCamp content while excluding curriculum-related results `\n--feedback--\nRemember the example given for searching for freeCodeCamp content while excluding curriculum-related results :\n--feedback--\nRemember the example given for searching for freeCodeCamp content while excluding curriculum-related results -\n--video-solution--\n4\n--text--\nWhat does the site: operator do in a search query --answers--\nExcludes a specific site from search results --feedback--\nRecall the example using site:freecodecamp org/news to search only the freeCodeCamp News site Searches for websites similar to the specified site --feedback--\nRecall the example using site:freecodecamp org/news to search only the freeCodeCamp News site Limits the search to a specific website or domain Ranks the specified site higher in search results --feedback--\nRecall the example using site:freecodecamp org/news to search only the freeCodeCamp News site --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4535,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-browsing-the-web-effectively\\672ac9705b07a64439b73b59.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "c32a2534df94f14eb616bb5d28b67961",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\68420bd261d0d35f61922d4b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68420bd261d0d35f61922d4b\ntitle: How Do Classes Work and How Do They Differ From Objects challengeType: 19\ndashedName: how-do-classes-work-and-how-do-they-differ-from-objects\n--description--\nIn Python, classes and objects work hand in hand to organize and manage data You build a class to define shared behavior, then create objects that use those behaviors In other words, a class is like a blueprint or template you use to create objects with Let's look at what classes are, and how to use them to create objects To create a class, you use the class keyword followed by the name of the class and a colon Then within the class, you can add an initializer, along with any attributes and methods Attributes are like variables within a class, and are used to store data Methods are functions defined within a class, and are the actions objects created with a class can perform Here's the basic syntax of a class:\n```python\nclass ClassName:\ndef init(self, name, age):\nself name = name\nself age = age\ndef sample_method(self):\nprint(self name upper())\n```\nclass ClassName is made up of the class keyword to create a class, followed by the name of the class, here called ClassName It is common in Python to use the PascalCase convention when naming classes def __init__(self, name, age) is the special method automatically called when a new object is created It initializes the attributes of the objects that will be created with the class In addition to that, the first parameter of __init__ is always a reference to the specific object being created or used By convention, this parameter is named self, but technically, you can use any name self lets you access the object's own attributes and methods self name = name and self age = age are the attributes the objects will have def sample_method(self): is the method each object created can call print(self name upper()) is what the sample_method method will do, in this case, it prints the name in uppercase If that all sounds like a lot, don't worry Let's take a look at a similar example of a Dog class, and how you can create objects from that:\n```python\nclass Dog:\ndef init(self, name, age):\nself name = name\nself age = age\ndef bark(self):\nprint(f\"{self name upper()} says woof woof",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5745,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\68420bd261d0d35f61922d4b.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "03c5496bad81112af9524824f9b43786",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\68420bd261d0d35f61922d4b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "each object created can call print(self name upper()) is what the sample_method method will do, in this case, it prints the name in uppercase If that all sounds like a lot, don't worry Let's take a look at a similar example of a Dog class, and how you can create objects from that: ```python class Dog: def init(self, name, age): self name = name self age = age def bark(self): print(f\"{self name upper()} says woof woof\")\n```\nWith this Dog class, you can create an object Here's the basic syntax for creating objects from a class:\npython\nobject_1 = ClassName(attribute_1, attribute_2)\nobject_2 = ClassName(attribute_1, attribute_2)\nYou can also call any of the methods defined in the class from each object:\npython\nobject_1 method_name()\nobject_2 method_name()\nNow let's create two dogs by using the Dog class as the blueprint:\n```python\nclass Dog:\ndef init(self, name, age):\nself name = name\nself age = age\ndef bark(self):\nprint(f\"{self name upper()} says woof woof I'm {self age} years old \")\ndog_1 = Dog(\"Jack\", 3)\ndog_2 = Dog(\"Thatcher\", 5)\nCall the bark method\ndog_1 bark()  # JACK says woof woof I'm 3 years old dog_2 bark()  # THATCHER says woof woof I'm 5 years old ```\nAs you can see, we create two dog objects using the Dog class When initializing dog_1, the string Jack and the number 3 are passed, which sets the name and age attributes for that instance And dog_2 is initialized with the string Thatcher and number 5 as its name and age, respectively Then when you call the bark() method on dog_1 and dog_2, you can see how both outputs differ, and use the unique name and age attributes you passed in when creating each object In summary, the difference between a class and an object is that a class is the template or the blueprint, and an object is what is created using that template Also, a class defines what data and behavior the object should have, and an object holds the actual data and uses that behavior You write a class once, and you can make many objects from it, each with different data",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5745,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\68420bd261d0d35f61922d4b.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ceda8e67ccfb83cf04313bc9ec736c67",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\68420bd261d0d35f61922d4b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "passed in when creating each object In summary, the difference between a class and an object is that a class is the template or the blueprint, and an object is what is created using that template Also, a class defines what data and behavior the object should have, and an object holds the actual data and uses that behavior You write a class once, and you can make many objects from it, each with different data--questions--\n--text--\nWhat is the output of this code ```python\nclass Dog:\ndef init(self, name):\nself name = name\ndef bark(self):\nprint(f\"{self name} says Woof \")\nmy_dog = Dog(\"Rex\")\nprint(my_dog name)\n```\n--answers--\nRex says Woof --feedback--\nLook at what is being printed: is it calling a method or accessing an attribute name\n--feedback--\nLook at what is being printed: is it calling a method or accessing an attribute Rex\nError\n--feedback--\nLook at what is being printed: is it calling a method or accessing an attribute --video-solution--\n3\n--text--\nWhat is the special method that gets automatically called when a new object is created --answers--\n__create_object__\n--feedback--\nThink about what initializes the attributes an object will have __init__\n__new__\n--feedback--\nThink about what initializes the attributes an object will have __setup__\n--feedback--\nThink about what initializes the attributes an object will have --video-solution--\n2\n--text--\nWhat is the blueprint or template for creating objects --answers--\nA variable\n--feedback--\nThink about what defines the structure and behavior of objects created from it A function\n--feedback--\nThink about what defines the structure and behavior of objects created from it A class\nA loop\n--feedback--\nThink about what defines the structure and behavior of objects created from it --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5745,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\68420bd261d0d35f61922d4b.md",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "70f29eac23bdd4febc2dce04d3e04861",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\6874b5fc38f90f25e18093ce.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6874b5fc38f90f25e18093ce\ntitle: What Are Methods and Attributes, and How Do They Work challengeType: 19\ndashedName: what-are-methods-and-attributes-and-how-do-they-work\n--description--\nIn the last lecture, you learned about classes and how they act as blueprints for creating objects Here, we will dive deeper into attributes and methods Let's take a closer look at attributes first, then methods Attributes are variables that belong to an object, so they hold data There are two kinds of attributes: instance attributes and class attributes Instance attributes are unique to each object created from a class, and you usually set them with the __init__ method Class attributes, on the other hand, belong to the class itself and are shared by all instances of that class To access an attribute, you use dot notation Here are examples of both instance and class attributes, and how to access them from objects:\n```python\nclass Dog:\nspecies = \"French Bulldog\" # Class attribute\ndef __init__(self, name):\nself name = name # Instance attribute\nprint(Dog species) # French Bulldog\ndog1 = Dog(\"Jack\")\nprint(dog1 name)    # Jack\nprint(dog1 species) # French Bulldog\ndog2 = Dog(\"Tom\")\nprint(dog2 name)    # Tom\nprint(dog2 species) # French Bulldog\n```\nNote that you can access class attributes directly from the class itself, but you need to create an object and pass it data first before you can access instance attributes Cars are another good example, since all cars have a model and color:\n```python\nclass Car:\ndef init(self, color, model):\nself color = color\nself model = model\ncar_1 = Car(\"red\", \"Toyota Corolla\")\ncar_2 = Car(\"green\", \"Lamborghini Revuelto\")\nprint(car_1 model) # Toyota Corolla\nprint(car_2 model) # Lamborghini Revuelto\nprint(car_1 color) # red\nprint(car_2 color) # green\n```\nMethods are functions defined inside a class With them, any object defined from a class can perform actions that operate on or modify its own data You also access a method with dot notation For example, dogs can bark",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4544,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\6874b5fc38f90f25e18093ce.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "f883217c7b0f737e03d5e3fcaf7ac0dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\6874b5fc38f90f25e18093ce.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "self color = color self model = model car_1 = Car(\"red\", \"Toyota Corolla\") car_2 = Car(\"green\", \"Lamborghini Revuelto\") print(car_1 model) # Toyota Corolla print(car_2 model) # Lamborghini Revuelto print(car_1 color) # red print(car_2 color) # green ``` Methods are functions defined inside a class With them, any object defined from a class can perform actions that operate on or modify its own data You also access a method with dot notation For example, dogs can barkSo we can have a bark method in the Dog class like you saw in a previous lecture:\n```python\nclass Dog:\nspecies = \"French Bulldog\"\ndef init(self, name):\nself name = name\ndef bark(self):\nreturn f\"{self name} says woof woof \"\njack = Dog(\"Jack\")\njill = Dog(\"Jill\")\nprint(jack bark()) # Jack says woof woof print(jill bark()) # Jill says woof woof ```\nA Car class can also have a describe method:\n```python\nclass Car:\ndef init(self, color, model):\nself color = color  # Instance attribute\nself model = model  # Instance attribute\ndef describe(self):\nreturn f\"This car is a {self color} {self model}\"\ncar_1 = Car(\"red\", \"Toyota Corolla\")\ncar_2 = Car(\"green\", \"Lamborghini Revuelto\")\nprint(car_1 describe()) # This car is a red Toyota Corolla\nprint(car_2 describe()) # This car is a green Lamborghini Revuelto\n```\n--questions--\n--text--\nWhat are the two types of attributes in Python --answers--\nPublic and private attributes\n--feedback--\nThink about the two ways you can define attributes Local and global attributes\n--feedback--\nThink about the two ways you can define attributes Instance attributes and class attributes\nMutable and immutable attributes\n--feedback--\nThink about the two ways you can define attributes --video-solution--\n3\n--text--\nWhat is required to access instance attributes --answers--\nThe class name only\n--feedback--\nThink about how you access class attributes versus how you access instance attributes Decorators\n--feedback--\nThink about how you access class attributes versus how you access instance attributes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4544,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\6874b5fc38f90f25e18093ce.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b3446f3c5754f90ea08c2996ab1dcb44",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\6874b5fc38f90f25e18093ce.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "and global attributes --feedback-- Think about the two ways you can define attributes Instance attributes and class attributes Mutable and immutable attributes --feedback-- Think about the two ways you can define attributes --video-solution-- 3 --text-- What is required to access instance attributes --answers-- The class name only --feedback-- Think about how you access class attributes versus how you access instance attributes Decorators --feedback-- Think about how you access class attributes versus how you access instance attributesAn instance or object of the class\nA static method\n--feedback--\nThink about how you access class attributes versus how you access instance attributes --video-solution--\n3\n--text--\nHow do you define and access methods --answers--\nAs standalone functions outside a class, accessed with brackets\n--feedback--\nThey belong to the class but operate on object data As variables in a class, accessed like attributes\n--feedback--\nThey belong to the class but operate on object data With special keywords, called automatically\n--feedback--\nThey belong to the class but operate on object data They are defined inside a class and accessed with dot notation\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4544,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\6874b5fc38f90f25e18093ce.md",
      "source_type": "git_repo"
    },
    "token_count": 227,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "63cdd3d67a077c5409c1ecfc260bd35c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-common-design-tools\\672aa7005c24e45bbd53b20d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672aa7005c24e45bbd53b20d\ntitle: What Are Design Briefs and How Do Developers Work with Them challengeType: 19\ndashedName: what-are-design-briefs\n--description--\nWhen it comes to designing new features or applications, a good first step would be to create a design brief A design brief is a document that outlines the objectives, goals, and requirements of a project It is a roadmap that guides the design process and ensures that the final product meets the needs of the client Usually the client will write the design brief and it will serve as a working draft Sometimes, the designer might write one and consult with the client to make sure it meets their needs There are a few key elements that should be included in a design brief The first element is the overview of the project and business This overview should include the company's details, mission, values, unique selling points, and products or services The next key element should be to document the goals and objectives for the project This should include the purpose of the project, and the desired outcomes Examples of goals include increasing traffic to a site or increasing the number of monthly page visits by X percent Another key element would be the target audience The design brief should include information about the target demographics, interests, and needs of the audience You should also include information about the competition and how the project will differentiate itself from the competition Another key element would be the project scope This should include the deliverables, timeline, and budget The deliverables should include a list of all the items that will be produced as part of the project, such as mockups, and final designs Without clearly defining project scope, things can get out of hand and go over budget So, it's best to be as detailed as possible about what is expected to be delivered and by when One of the challenging aspects about project design is the timescale and budget It is important to be realistic about what can be achieved within the given timeframe and budget So, having a design brief that outlines these constraints is important Once all of these details have been discussed and documented, the design brief should be reviewed and approved by all stakeholders before the project begins At that point, that is when the designers can get started with their work So, what is the developer's role in all of this The developer's role is to take the designs, understand the project requirements, and turn them into a working product",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4928,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-common-design-tools\\672aa7005c24e45bbd53b20d.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "40d2b5419e4fffc912b2323ef8a0d93f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-common-design-tools\\672aa7005c24e45bbd53b20d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "design brief that outlines these constraints is important Once all of these details have been discussed and documented, the design brief should be reviewed and approved by all stakeholders before the project begins At that point, that is when the designers can get started with their work So, what is the developer's role in all of this The developer's role is to take the designs, understand the project requirements, and turn them into a working productThis involves writing code, testing, and debugging the application to ensure that it meets the requirements outlined in the design brief Oftentimes, developers will work in teams where the work is split up between multiple developers There will also usually be a project manager who will be responsible for coordinating the work and making sure that the project stays on track So, while you might not be involved in the design and initial decision making process as a developer, it is still important to understand the design brief and how it will impact your work --questions--\n--text--\nWhat is a design brief --answers--\nA timeline of past project milestones --feedback--\nThink about goals and objectives of a project A schedule of meetings and deadlines for a project team --feedback--\nThink about goals and objectives of a project A manual on how to use specific software tools --feedback--\nThink about goals and objectives of a project A document that outlines the objectives, goals, and requirements of a project --video-solution--\n4\n--text--\nWhy is it important to define the scope for a project in a design brief --answers--\nTo plan the project's social media marketing strategy --feedback--\nThink about budget and timeline To ensure that the project stays on track and within budget To select the software tools for team collaboration --feedback--\nThink about budget and timeline To choose the best color palette for the project --feedback--\nThink about budget and timeline --video-solution--\n2\n--text--\nWhat is the role of the developer in a project --answers--\nTo change the timeline and deliverables in the design brief --feedback--\nRemember that the developer should not go against what was agreed upon in the design brief To take the design brief and turn it into a working product To change the design brief to meet the developer's preferences --feedback--\nRemember that the developer should not go against what was agreed upon in the design brief To change the project scope to include more features --feedback--\nRemember that the developer should not go against what was agreed upon in the design brief --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4928,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-common-design-tools\\672aa7005c24e45bbd53b20d.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "dee775196b4d108e087a83f393bfea81",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-common-design-tools\\672bb619f0d4538d0528760d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672bb619f0d4538d0528760d\ntitle: What Are Some Common Tools Developers Should Know About That Are Used by Designers in the Industry challengeType: 19\ndashedName: what-are-some-common-tools-developers-should-know-about\n--description--\nDesign is the foundation of every enterprise-level web application That's why designers and developers work closely to create user-focused interfaces that are visually appealing and functional Because of this, developers should be familiar with common design tools to make the most of what designers offer Most of these design tools excel in vector-based design and prototyping Vector-based design involves creating digital art using mathematical formulas to define lines, shapes, and colors Prototyping, on the other hand, refers to the process of creating an interactive model of a product or user interface Let's talk about some common design tools developers should know about Figma is one of the most common and essential design tools that developers should know This cloud-based tool specializes in User Interface and User Experience (UI/UX) design It enables design and development teams to collaborate from anywhere, offering built-in features such as:\nVector-based design\nAutomatic layout\nCommenting and feedback system\nVersion history\nReal-time collaboration\nDesign systems, and more To get started with Figma, you can use the web-based interface or download the desktop app for your computer It has a generous free tier, so you can get a lot done without paying for the pro version Sketch is another essential design tool that developers should be familiar with Like Figma, it is vector-based and primarily used for UI/UX design Sketch is popular for its intuitive interface and simplicity, making it ideal for developers who want to quickly create prototypes It's also widely used by designers for tasks like creating UIs, icons, and web layouts The main constraints with Sketch are its lack of a cloud-based interface and its availability only on macOS Adobe XD is another vector-based design and prototyping tool for UI/UX design, known for its seamless integration with other Adobe apps like Photoshop, Illustrator, and After Effects This integration makes workflows such as interactive prototyping and animations more efficient Adobe XD is available for both Windows and macOS and includes a cloud-based interface For the best experience, however, you should use the app directly Another design tool worth mentioning is Canva You can use Canva to create a wide range of visual content, including posters, cover photos, presentations, short videos, and more",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4851,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-common-design-tools\\672bb619f0d4538d0528760d.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "08123adc672315e60dac89108cd8b2be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-common-design-tools\\672bb619f0d4538d0528760d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "integration with other Adobe apps like Photoshop, Illustrator, and After Effects This integration makes workflows such as interactive prototyping and animations more efficient Adobe XD is available for both Windows and macOS and includes a cloud-based interface For the best experience, however, you should use the app directly Another design tool worth mentioning is Canva You can use Canva to create a wide range of visual content, including posters, cover photos, presentations, short videos, and moreIts user-friendly and simple design makes it ideal for beginners Additionally, Canva offers a rich library of templates, images, and design elements that make it easy to create professional-looking designs Beyond these features, Canva supports web interface design and allows for collaboration with teammates The platform is available on the web and as an Android app Other popular design tools developers should know are Framer, InVision, Adobe Photoshop, Adobe Illustrator, and Miro --questions--\n--text--\nWhich of these best describes Sketch --answers--\nIt is difficult to learn and use --feedback--\nThink about what makes a design tool efficient for both developers and designers It is primarily used for backend development --feedback--\nThink about what makes a design tool efficient for both developers and designers It is known for its intuitive interface and simplicity, ideal for quick prototypes It is rarely used for creating UIs or web layouts --feedback--\nThink about what makes a design tool efficient for both developers and designers --video-solution--\n3\n--text--\nWhich of these is not a feature of Figma --answers--\nVector-based design --feedback--\nConsider the primary focus of Figma as a design tool Automatic layout --feedback--\nConsider the primary focus of Figma as a design tool Real-time collaboration --feedback--\nConsider the primary focus of Figma as a design tool Coding environment --video-solution--\n4\n--text--\nWhat is Adobe XD known for --answers--\nComplex video editing features --feedback--\nConsider Adobe XD's primary use in UI/UX design and its relationship with other Adobe tools Seamless integration with other Adobe apps like Photoshop and Illustrator Being a raster-based image editor --feedback--\nConsider Adobe XD's primary use in UI/UX design and its relationship with other Adobe tools Specialized 3D modeling capabilities --feedback--\nConsider Adobe XD's primary use in UI/UX design and its relationship with other Adobe tools --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4851,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-common-design-tools\\672bb619f0d4538d0528760d.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "bbc685561931067f1d3f6157b14ac1d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8e7eca8a4322306d15f8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672b8e7eca8a4322306d15f8\ntitle: What Is the Universal Selector, and What Is Its Specificity challengeType: 19\ndashedName: what-is-the-universal-selector\n--description--\nThe universal selector (*) is a special type of CSS selector that matches any element in the document It is often used to apply a style to all elements on the page, which can be useful for resetting or normalizing styles across different browsers The universal selector can be used to select all elements within a specific context or globally across the entire document Here is an example of using the universal selector for setting the margin and padding for the entire HTML document:\ncss\n* {\nmargin: 0;\npadding: 0;\n}\nIn this code example, the * selector resets the margin and padding of all elements to zero, which is a common technique used in CSS resets The universal selector has the lowest specificity value of any selector It contributes 0 to all parts of the specificity value (0, 0, 0, 0) This means that any other selector, including type selectors, class selectors, ID selectors, and inline styles, will override the styles set by the universal selector Let's take a look at the following HTML and CSS example:\n```html\nThis text has multiple styles applied ```\nThe universal * selector sets the text color to blue for all elements However, the p type selector overrides this by setting the text color to red specifically for p elements If an element has the highlight class, the class selector takes precedence, changing the text color to green Finally, the #unique ID selector, which has the highest specificity, will override all others, setting the text color to purple --questions--\n--text--\nWhat is the specificity value of the universal selector (*) --answers--\n(1, 0, 0, 0)\n--feedback--\nThis selector has the lowest specificity (0, 1, 0, 0)\n--feedback--\nThis selector has the lowest specificity (0, 0, 1, 0)\n--feedback--\nThis selector has the lowest specificity (0, 0, 0, 0)\n--video-solution--\n4\n--text--\nWhat is a common use case for the universal selector --answers--\nTo apply styles to a specific element --feedback--\nThink about how you can affect all elements with one rule To reset or normalize styles across all elements",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3471,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8e7eca8a4322306d15f8.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "68edfebe28c8f8c4b72dd8b938eff8d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8e7eca8a4322306d15f8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "0, 0) --feedback-- This selector has the lowest specificity (0, 1, 0, 0) --feedback-- This selector has the lowest specificity (0, 0, 1, 0) --feedback-- This selector has the lowest specificity (0, 0, 0, 0) --video-solution-- 4 --text-- What is a common use case for the universal selector --answers-- To apply styles to a specific element --feedback-- Think about how you can affect all elements with one rule To reset or normalize styles across all elementsTo target elements with a specific class --feedback--\nThink about how you can affect all elements with one rule To override inline styles --feedback--\nThink about how you can affect all elements with one rule --video-solution--\n2\n--text--\nGiven the following CSS, what will be the color of the text ```html\nThis text\n```\n--answers--\nblue\n--feedback--\nConsider the highest specificity red\n--feedback--\nConsider the highest specificity green\n--feedback--\nConsider the highest specificity purple\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3471,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8e7eca8a4322306d15f8.md",
      "source_type": "git_repo"
    },
    "token_count": 228,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2fa3088ab70f6330a515da75bd723a26",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672aa62178d5ff57fe4f98e0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672aa62178d5ff57fe4f98e0\ntitle: What Is CSS Specificity, and the Specificity for Inline, Internal, and External CSS challengeType: 19\ndashedName: what-is-css-specificity-and-the-specificity-for-inline-internal-and-external-css\n--description--\nCSS specificity is a fundamental concept that determines which styles are applied to an element when multiple rules could apply Understanding specificity helps developers resolve conflicts between different CSS rules and ensures that the desired styles are consistently applied CSS specificity is calculated based on the type of selectors used The highest specificity is attributed to inline styles, which are applied directly to an element through the style attribute Following this, ID selectors like #main and #header have a high level of specificity Next, class selectors, attribute selectors, and pseudo-classes come into play Examples include class selectors such as container and button, attribute selectors like [type=\"text\"], and pseudo-classes such as :hover These have a moderate level of specificity Type selectors, such as div and h1, and pseudo-elements like ::before and ::after, have a lower specificity compared to the previous groups Finally, the universal selector, represented by an asterisk *, has the lowest specificity of all Specificity values are calculated as a four-part value (a, b, c, d):\na: Inline styles (1 or 0) b: Number of ID selectors c: Number of class selectors, attribute selectors, and pseudo-classes d: Number of type selectors, pseudo-elements, and universal selectors Each part of the specificity value carries different weight:\nInline styles (a) have the highest weight, contributing a value of 1 to the first part of the specificity value ID selectors (b) carry the next highest weight, with each ID contributing 1 to the second part of the specificity value Class selectors, attribute selectors, and pseudo-classes (c) carry moderate weight, with each contributing 1 to the third part of the specificity value Type selectors and pseudo-elements (d) have the lowest weight, with each contributing 1 to the fourth part of the specificity value Universal selector (*): The universal selector contributes 0 to the specificity calculation and does not affect specificity Its inclusion in a selector does not change the specificity value Inline CSS has the highest specificity because it is applied directly to the element It overrides any internal or external CSS The specificity value for inline styles is (1, 0, 0, 0)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5444,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672aa62178d5ff57fe4f98e0.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "bf2ed0f15df910e54788905fe76f8257",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672aa62178d5ff57fe4f98e0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "have the lowest weight, with each contributing 1 to the fourth part of the specificity value Universal selector (*): The universal selector contributes 0 to the specificity calculation and does not affect specificity Its inclusion in a selector does not change the specificity value Inline CSS has the highest specificity because it is applied directly to the element It overrides any internal or external CSS The specificity value for inline styles is (1, 0, 0, 0)Here is an example using inline styles for a div element ```html\nThis text is red ```\nIn this example, the text will always be red, regardless of any other styles applied via internal or external CSS Internal CSS is defined within a style element in the head section of the HTML document It has lower specificity than inline styles but can override external styles The specificity value for internal styles is determined by the selectors used For example, an ID selector within internal CSS has a specificity value of (0, 1, 0, 0) ```html\nThis text is blue ```\nIn this example, the text will be blue unless an inline style or a more specific external style is applied External CSS is linked via a link element in the head section and is written in separate css files It has the lowest specificity but provides the best maintainability for larger projects The specificity value for external styles is also determined by the selectors used For example, a class selector within external CSS has a specificity value of (0, 0, 1, 0) ```html\nThis text's color is defined in an external CSS file ```\nIn this example, the text color is defined in the styles css file and will be applied unless overridden by internal or inline styles --questions--\n--text--\nWhich CSS specificity is higher --answers--\nA class selector --feedback--\nThis style is applied directly to the element An inline style An ID selector --feedback--\nThis style is applied directly to the element A type selector --feedback--\nThis style is applied directly to the element --video-solution--\n2\n--text--\nIn the hierarchy of CSS specificity, which has the lowest priority --answers--\nClass selectors --feedback--\nThis type of CSS is the most generic selector Inline styles --feedback--\nThis type of CSS is the most generic selector Universal selectors ID selectors --feedback--\nThis type of CSS is the most generic selector --video-solution--\n3\n--text--\nWhat color will the text be in the following example",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5444,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672aa62178d5ff57fe4f98e0.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "2045fd44ab8c406fbf8ad4ad981cd551",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672aa62178d5ff57fe4f98e0.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "selector --feedback-- This style is applied directly to the element --video-solution-- 2 --text-- In the hierarchy of CSS specificity, which has the lowest priority --answers-- Class selectors --feedback-- This type of CSS is the most generic selector Inline styles --feedback-- This type of CSS is the most generic selector Universal selectors ID selectors --feedback-- This type of CSS is the most generic selector --video-solution-- 3 --text-- What color will the text be in the following example```html\nThis text\n```\n--answers--\nblue\nred\n--feedback--\nConsider the highest specificity yellow\n--feedback--\nConsider the highest specificity green\n--feedback--\nConsider the highest specificity --video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5444,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672aa62178d5ff57fe4f98e0.md",
      "source_type": "git_repo"
    },
    "token_count": 147,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "11276a709ced53a2a96cc85d54b56fea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8e8adcc27e235a154231.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672b8e8adcc27e235a154231\ntitle: What Is the Specificity for Type Selectors challengeType: 19\ndashedName: what-is-the-specificity-for-type-selectors\n--description--\nType selectors, also known as element selectors, target elements based on their tag name These selectors are fundamental in CSS and allow you to apply styles to all instances of a specific HTML element Type selectors are straightforward to use and are written simply as the tag name of the element you want to style Here is an example of a type selector targeting all paragraph elements on the page:\ncss\np {\ncolor: blue;\n}\nIn this example, all p elements will have their text color set to blue Type selectors have a relatively low specificity compared to other selectors The specificity value for a type selector is (0, 0, 0, 1) This means that type selectors will be overridden by class selectors, ID selectors, and inline styles, but can still apply styles unless those higher-specificity rules are present Let's take a look at an example where the class selectors will override the styles of the type selector Here is an example with two paragraph elements:\n```html\nI am a paragraph\nHere is another paragraph\n```\nBoth paragraph elements have a class called para Inside the CSS file, the type selector targets paragraphs, and the class selector targets elements with the para class ```css\np {\ncolor: blue;\n} para {\ncolor: red;\n}\n```\nAll paragraphs on the page with the class of para will have the text color set to red instead of blue because class selectors have a higher specificity than type selectors --questions--\n--text--\nWhat is the specificity value of a type selector (e g , div) --answers--\n(1, 0, 0, 0)\n--feedback--\nThis selector targets elements based on their tag name (0, 1, 0, 0)\n--feedback--\nThis selector targets elements based on their tag name (0, 0, 1, 0)\n--feedback--\nThis selector targets elements based on their tag name (0, 0, 0, 1)\n--video-solution--\n4\n--text--\nWhich of the following has a lower specificity than a type selector --answers--\nA class selector --feedback--\nThis selector targets all elements and has the lowest specificity An ID selector --feedback--\nThis selector targets all elements and has the lowest specificity",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3092,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8e8adcc27e235a154231.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f5ebc11f8947a4f4c0c6ad9df7736fd0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8e8adcc27e235a154231.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "(0, 1, 0, 0) --feedback-- This selector targets elements based on their tag name (0, 0, 1, 0) --feedback-- This selector targets elements based on their tag name (0, 0, 0, 1) --video-solution-- 4 --text-- Which of the following has a lower specificity than a type selector --answers-- A class selector --feedback-- This selector targets all elements and has the lowest specificity An ID selector --feedback-- This selector targets all elements and has the lowest specificityAn Inline style --feedback--\nThis selector targets all elements and has the lowest specificity A Universal selector --video-solution--\n4\n--text--\nGiven the following CSS, what will be the color of the text ```html\nThis text\n```\n--answers--\nblue\n--feedback--\nConsider the specificity of the selectors red\ngreen\n--feedback--\nConsider the specificity of the selectors purple\n--feedback--\nConsider the specificity of the selectors --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3092,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8e8adcc27e235a154231.md",
      "source_type": "git_repo"
    },
    "token_count": 211,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "02ca604bdf591d378f19ebdd5abc3dfc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8ea434ceac23cc90f337.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672b8ea434ceac23cc90f337\ntitle: What Is the Specificity for ID Selectors?\nchallengeType: 19\ndashedName: what-is-the-specificity-for-id-selectors\n--description--\nID selectors are among the most powerful selectors in CSS, allowing developers to apply styles to specific elements with unique identifiers.\nThis makes them highly effective for targeting individual elements that need unique styling.\nID selectors are defined by a hash symbol (#) followed by the ID name. They should be unique within an HTML document, meaning no two elements should share the same ID.\nHere is an example using an ID selector:\n```css\nunique {\ncolor: purple;\n}\n```\nIn this example, the element with the ID unique will have its text color set to purple.\nID selectors have a very high specificity, higher than type selectors and class selectors, but lower than inline styles. The specificity value for an ID selector is (0, 1, 0, 0).\nThis means that ID selectors can override class selectors and type selectors but can be overridden by inline styles.\n--questions--\n--text--\nWhat is the specificity value of an ID selector (e.g., #example)?\n--answers--\n(1, 0, 0, 0)\n--feedback--\nThis selector targets elements with a specific, unique identifier.\n(0, 1, 0, 0)\n(0, 0, 1, 0)\n--feedback--\nThis selector targets elements with a specific, unique identifier.\n(0, 0, 0, 1)\n--feedback--\nThis selector targets elements with a specific, unique identifier.\n--video-solution--\n2\n--text--\nWhich of the following has a higher specificity than an ID selector?\n--answers--\nA class selector.\n--feedback--\nReview the last part of the lecture for the answer.\nAn inline style.\nAn attribute selector.\n--feedback--\nReview the last part of the lecture for the answer.\nA type selector.\n--feedback--\nReview the last part of the lecture for the answer.\n--video-solution--\n2\n--text--\nGiven the following CSS, what will be the color of the text?\n```html\nThis text\n```\n--answers--\ngreen\n--feedback--\nConsider the highest specificity.\nblue\n--feedback--\nConsider the highest specificity.\nred\n--feedback--\nConsider the highest specificity.\npurple\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2516,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8ea434ceac23cc90f337.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "36ad6a1a5012f1ea8a37b0a38254bcae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\6874b7d3b286c538b39d0c25.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6874b7d3b286c538b39d0c25\ntitle: What Are Special Methods and What Are They Used For challengeType: 19\ndashedName: what-are-special-methods-and-what-are-they-used-for\n--description--\nSpecial methods in Python, also known as \"magic methods\" or \"dunder methods\", are special Python methods that start and end with double underscores (__) The word \"dunder\" itself comes from double underscores (d for double, under for underscores) You've probably used special methods already without knowing it Every time you write something like 3 + 4, Python quietly runs 3 __add__(4) under the hood That's a special method in action So while you can call special methods directly, you rarely do Something like 3 + 4 is much clearer and easier to read than calling 3 __add__(4) yourself Apart from __add__, __init__() is another special method you'll see and use the most, as it's a class initializer There are also others like __len__() and __str__() Think of special methods as the directors of the activities between a person programming and the Python language interpreter itself Remember, you don't need to call special methods directly Instead, Python automatically calls them when certain actions happen These operations include:\nArithmetic operations like addition, subtraction, multiplication, division, and others In addition, __add__() is called, __sub__() for subtraction, __mul__() for multiplication, and __truediv__() for division String operations like concatenation, repetition, formatting, and conversion to text __add__() is called for concatenation, __mul__() for repetition, __format__() for formatting, __str__() and __repr__() for text conversion, and so on Comparison operations like equality, less-than, greater-than, and others __eq__() is called for equality checks, __lt__() for less-than, __gt__() for greater-than, and so on Iteration operations like making an object iterable and advancing through items __iter__() is called to return an iterator and  __next__() to fetch the next item Normally, Python data types like strings and numbers already know how to add things, do concatenation, compare for equality, be used in loops, and others But when you create your own class, Python won't know how to handle things automatically This is where special methods come in — they let you customize Python's built-in behavior",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7792,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\6874b7d3b286c538b39d0c25.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "f4f78ccdf1bbfd30d34b8b80e2e87191",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\6874b7d3b286c538b39d0c25.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "an object iterable and advancing through items __iter__() is called to return an iterator and __next__() to fetch the next item Normally, Python data types like strings and numbers already know how to add things, do concatenation, compare for equality, be used in loops, and others But when you create your own class, Python won't know how to handle things automatically This is where special methods come in — they let you customize Python's built-in behaviorLet's say you want to get the number of pages in book objects created with the class below, or compare them and get a readable string of the objects Here's what happens without special methods:\n```python\nclass Book:\ndef init(self, title, pages):\nself title = title\nself pages = pages\nbook1 = Book(\"Built Wealth Like a Boss\", 420)\nbook2 = Book(\"Be Your Own Start\", 420)\nprint(len(book1)) # TypeError: object of type 'Book' has no len()\nprint(str(book1)) # <main Book object at 0x102ed2900>\nprint(book1 == book2) # False even though they have the same number of pages\n```\nIn the example:\nlen(book1) failed because Python doesn't know how to get the length of your book object without __len__()\nstr(book1) printed something like <__main__ Book object at 0x102ed2900> because that's the default representation when you don't use __str__()\nbook1 == book2 resulted in False because Python just checks if both objects are the same in memory, not by content Here's how you can define your own __len__(), __str__(), and __eq__() special methods to make working with objects created from the Book class easier:\n```python\nclass Book:\ndef init(self, title, pages):\nself title = title\nself pages = pages\ndef len(self):\nreturn self pages\ndef str(self):\nreturn f\"'{self title}' has {self pages} pages\"\ndef eq(self, other):\nreturn self pages == other",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7792,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\6874b7d3b286c538b39d0c25.md",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "5d562599117391d8f10b57739f9fe3b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\6874b7d3b286c538b39d0c25.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "because Python just checks if both objects are the same in memory, not by content Here's how you can define your own __len__(), __str__(), and __eq__() special methods to make working with objects created from the Book class easier: ```python class Book: def init(self, title, pages): self title = title self pages = pages def len(self): return self pages def str(self): return f\"'{self title}' has {self pages} pages\" def eq(self, other): return self pages == otherpages\nbook1 = Book(\"Built Wealth Like a Boss\", 420)\nbook2 = Book(\"Be Your Own Start\", 420)\nprint(len(book1)) # 420\nprint(len(book2)) # 420\nprint(str(book1)) # 'Built Wealth Like a Boss' has 420 pages\nprint(str(book2)) # 'Be Your Own Start' has 420 pages\nprint(book1 == book2) # True\n```\nAnother example is a shopping cart where you do the following:\nAdd items to the cart\nRemove items from the cart\nGet the number of items in the cart\nCheck what items are in the cart\nCheck if a specific item is in the cart\nReturn or display an item at a specific index in the cart\nWhile you might have a method that adds items to the cart and removes certain items from the cart, you can create special methods for all the other functionality:\n__len__() to get the length of the items in the cart\n__iter__() to loop through the items in the cart so you can see them\n__contains__() to check if a specific item is in the cart\n__getitem__() to return or display an item at a specific index in the cart\nHere's an example of a Cart class with these user-defined methods and special methods:\n```python\nclass Cart:\ndef init(self):\nself items = []\ndef add(self, item):\nself items append(item)\ndef remove(self, item):\nif item in self items:\nself items remove(item)\nelse:\nprint(f'{item} is not in cart')\ndef list_items(self):\nreturn self items\ndef len(self):\nreturn len(self items)\ndef getitem(self, index):\nreturn self items[index]\ndef contains(self, item):\nreturn item in self items\ndef iter(self):\nreturn iter(self items)\n```\nAnd here's how you can use them:\n```python\ncart = Cart()\ncart",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7792,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\6874b7d3b286c538b39d0c25.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "6d441a4b762adcaa4d22545c6cc2a60a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\6874b7d3b286c538b39d0c25.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "special methods: ```python class Cart: def init(self): self items = [] def add(self, item): self items append(item) def remove(self, item): if item in self items: self items remove(item) else: print(f'{item} is not in cart') def list_items(self): return self items def len(self): return len(self items) def getitem(self, index): return self items[index] def contains(self, item): return item in self items def iter(self): return iter(self items) ``` And here's how you can use them: ```python cart = Cart() cartadd('Laptop')\ncart add('Wireless mouse')\ncart add('Ergo keyboard')\ncart add('Monitor')\nfor item in cart:\nprint(item, end=' ') # Laptop Wireless mouse Ergo keyboard Monitor\nprint(len(cart)) # 4\nprint(cart[3]) # Monitor\nprint('Monitor' in cart) # True\nprint('banana' in cart) # False\ncart remove('Ergo keyboard')\nprint(cart list_items()) # ['Laptop', 'Wireless mouse', 'Monitor']\ncart remove('banana') # banana is not in cart\n```\nAnd those are a few ways you'll use special methods in Python in the real-world --questions--\n--text--\nWhich of these is the special method called during an addition operation --answers--\n__plus__()\n--feedback--\nLook out for what is triggered when you use the + operator __sum__()\n--feedback--\nLook out for what is triggered when you use the + operator __add__()\n__concat__()\n--feedback--\nLook out for what is triggered when you use the + operator --video-solution--\n3\n--text--\nHow was the word \"dunder\" derived --answers--\nFrom \"dynamic under-the-hood operations\"\n--feedback--\nThink about how the word \"dunder\" is related to how dunder methods are written From shortening \"double underscore\" (__)\nFrom the creator of Python's nickname\n--feedback--\nThink about how the word \"dunder\" is related to how dunder methods are written From \"data under\" in reference to hidden methods\n--feedback--\nThink about how the word \"dunder\" is related to how dunder methods are written --video-solution--\n2\n--text--\nWhich special method is called when you use the greater-than (>) comparison operator",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7792,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\6874b7d3b286c538b39d0c25.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "819b17ecf02cfd4917cb37eab2372352",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\6874b7d3b286c538b39d0c25.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the word \"dunder\" is related to how dunder methods are written From shortening \"double underscore\" (__) From the creator of Python's nickname --feedback-- Think about how the word \"dunder\" is related to how dunder methods are written From \"data under\" in reference to hidden methods --feedback-- Think about how the word \"dunder\" is related to how dunder methods are written --video-solution-- 2 --text-- Which special method is called when you use the greater-than (>) comparison operator--answers--\n__more__()\n--feedback--\nIt stands for \"greater than\" and is triggered by the > operator __compare__()\n--feedback--\nIt stands for \"greater than\" and is triggered by the > operator __greater__()\n--feedback--\nIt stands for \"greater than\" and is triggered by the > operator __gt__()\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7792,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-classes-and-objects\\6874b7d3b286c538b39d0c25.md",
      "source_type": "git_repo"
    },
    "token_count": 180,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "f90b5d1ea0e318c6da1d038dda4f62fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8e9892eafe238d6513a5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672b8e9892eafe238d6513a5\ntitle: What Is the Specificity for Class Selectors challengeType: 19\ndashedName: what-is-the-specificity-for-class-selectors\n--description--\nClass selectors are a key part of CSS, allowing developers to target multiple elements with the same class attribute and apply consistent styling This makes them highly versatile and efficient for applying styles across a website Class selectors are defined by a period ( ) followed by the class name They can be applied to any element in the HTML document Here is an example using a class selector:\ncss highlight {\ncolor: green;\n}\nIn this example, any element with the class highlight will have its text color set to green Class selectors have a higher specificity than type selectors but lower than ID selectors and inline styles The specificity value for a class selector is (0, 0, 1, 0) This means that class selectors can override type selectors, but they can be overridden by ID selectors and inline styles Class selectors can be combined with other selectors to create more specific rules Here is an example combining a paragraph type selector with a class selector:\ncss\np highlight {\nfont-weight: bold;\n}\nThis rule applies only to p elements that also have the highlight class, making their text bold --questions--\n--text--\nWhat is the specificity value of a class selector (e g , example) --answers--\n(1, 0, 0, 0)\n--feedback--\nThis selector targets elements with a specific class name (0, 1, 0, 0)\n--feedback--\nThis selector targets elements with a specific class name (0, 0, 1, 0)\n(0, 0, 0, 1)\n--feedback--\nThis selector targets elements with a specific class name --video-solution--\n3\n--text--\nWhich of the following selectors has a higher specificity than a class selector --answers--\nA type selector --feedback--\nThis selector targets elements with a unique identifier An ID selector A universal selector --feedback--\nThis selector targets elements with a unique identifier A pseudo-element --feedback--\nThis selector targets elements with a unique identifier --video-solution--\n2\n--text--\nGiven the following CSS, what will be the color of the text ```html\nThis text\n```\n--answers--\ngreen\n--feedback--\nConsider the specificity of the combined selectors blue\n--feedback--\nConsider the specificity of the combined selectors",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2847,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8e9892eafe238d6513a5.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a253f1797d3b525590b42350e422f028",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8e9892eafe238d6513a5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "A type selector --feedback-- This selector targets elements with a unique identifier An ID selector A universal selector --feedback-- This selector targets elements with a unique identifier A pseudo-element --feedback-- This selector targets elements with a unique identifier --video-solution-- 2 --text-- Given the following CSS, what will be the color of the text ```html This text ``` --answers-- green --feedback-- Consider the specificity of the combined selectors blue --feedback-- Consider the specificity of the combined selectorsred\npurple\n--feedback--\nConsider the specificity of the combined selectors --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2847,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8e9892eafe238d6513a5.md",
      "source_type": "git_repo"
    },
    "token_count": 118,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b1d13835b30b9e5909c91b63163ad77e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8f1399cabc2406c3227f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672b8f1399cabc2406c3227f\ntitle: What Is the important Keyword, and What Are the Best Practices for Using It challengeType: 19\ndashedName: what-is-the-important-keyword\n--description--\nThe important keyword in CSS is used to give a style rule the highest priority, allowing it to override any other declarations for a property When used, it forces the browser to apply the specified style, regardless of the specificity of other selectors Let's say you have an HTML paragraph element with inline styles like this:\n```html\nThis is a paragraph ```\nIn this example, the paragraph element has a background color set to lightblue and a text color set to black The CSS file applies the following styles to the paragraph element:\ncss para {\nbackground-color: black;\ncolor: white;\n}\nSince inline styles have a higher precedence than class, ID and type selectors, the black background color and white text color will not be applied to that paragraph element To override those inline styles, you can use the important keyword like this:\ncss para {\nbackground-color: black important;\ncolor: white important;\n}\nThe important keyword is used after the CSS value and before the semicolon Now the paragraph element will have those black and white colors applied because the inline styles are being overridden with the use of the important keyword The important keyword in CSS is used to give a style rule the highest priority, effectively overriding other declarations, including those with higher specificity and inline styles However, the important keyword does not change the specificity of the CSS selector itself It simply ensures that the rule with important is applied, even if there are other conflicting rules with higher specificity Another appropriate use case for the important keyword is to override styles from third-party libraries or frameworks when you do not have control over the original CSS However, overusing the important keyword can lead to difficulties in maintaining and debugging your CSS, as it breaks the natural cascading of styles and can lead to unintended consequences So, it is best to use the important keyword sparingly --questions--\n--text--\nWhat does the important keyword do in CSS --answers--\nIt increases the specificity value of a selector --feedback--\nThis keyword forces a style to be applied It applies a style regardless of other rules' specificity It decreases the specificity value of a selector --feedback--\nThis keyword forces a style to be applied It overrides only inline styles --feedback--\nThis keyword forces a style to be applied",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3913,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8f1399cabc2406c3227f.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "75356b32d3d925cf577bfc3bb2f8da08",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8f1399cabc2406c3227f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is best to use the important keyword sparingly --questions-- --text-- What does the important keyword do in CSS --answers-- It increases the specificity value of a selector --feedback-- This keyword forces a style to be applied It applies a style regardless of other rules' specificity It decreases the specificity value of a selector --feedback-- This keyword forces a style to be applied It overrides only inline styles --feedback-- This keyword forces a style to be applied--video-solution--\n2\n--text--\nWhen should the important keyword be used --answers--\nAs the primary method for styling elements --feedback--\nThink about maintainability and debugging To override third-party styles or as a temporary fix In every CSS rule for consistency --feedback--\nThink about maintainability and debugging To increase specificity --feedback--\nThink about maintainability and debugging --video-solution--\n2\n--text--\nGiven the following CSS, what will be the color of the text ```html\nThis text\n```\n--answers--\nblue\n--feedback--\nConsider the impact of the important keyword green\npurple\n--feedback--\nConsider the impact of the important keyword red\n--feedback--\nConsider the impact of the important keyword --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3913,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8f1399cabc2406c3227f.md",
      "source_type": "git_repo"
    },
    "token_count": 241,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "46153eb90bc731c58527fb27100b63cb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8f382370e025aadd3f4e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672b8f382370e025aadd3f4e\ntitle: How Does Inheritance Work with CSS at a High Level challengeType: 19\ndashedName: how-does-inheritance-work-with-css-at-a-high-level\n--description--\nInheritance is a key concept in CSS that determines how styles are passed down from parent elements to their child elements Just like in the real world, where children often inherit traits from their parents, in CSS, certain properties can be inherited by child elements from their parent elements This allows for a more efficient way to apply consistent styling across an entire document In CSS, not all properties are inherited by default For example, properties like color, font-family, and line-height are inherited This means that if you set the text color on a parent element, all of its child elements will inherit that color unless you specifically override it For instance, consider the following example where a parent div element has its color set using an inline style, and the child p element inherits that color:\n```html\nThis is the parent element This is the child element inheriting the color ```\nIn this case, both the parent div and the child p will display their text in blue because the color is inherited On the other hand, properties like margin, padding, border, and background are not inherited by default If you want a child element to inherit these styles, you need to explicitly set them, either directly on the child element or by using the inherit keyword The inherit keyword can be used to force inheritance of a property from a parent element, even if that property is not normally inherited For example, if you want a specific child element to have the same padding as its parent, you can set padding: inherit on the child element:\n```html\nThis is the parent element with padding This is the child element inheriting the padding ```\nIn this case, the child p element will inherit the 20px of padding from its parent div element Inheritance is especially useful for maintaining consistency and reducing redundancy in your stylesheets Instead of writing the same style rule for multiple elements, you can define it once on a parent element, and the child elements will inherit it This can make your CSS more concise and easier to manage However, it’s important to remember that inheritance only works in one direction – from parent to child If you override a style on a child element, it won’t affect the parent element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4128,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8f382370e025aadd3f4e.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "87bdf498b76a76986c73cd2038868774",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8f382370e025aadd3f4e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "consistency and reducing redundancy in your stylesheets Instead of writing the same style rule for multiple elements, you can define it once on a parent element, and the child elements will inherit it This can make your CSS more concise and easier to manage However, it’s important to remember that inheritance only works in one direction – from parent to child If you override a style on a child element, it won’t affect the parent element--questions--\n--text--\nWhich of the following CSS properties is typically inherited by default --answers--\npadding\n--feedback--\nThink about the properties that are commonly applied to text border\n--feedback--\nThink about the properties that are commonly applied to text color\nbackground\n--feedback--\nThink about the properties that are commonly applied to text --video-solution--\n3\n--text--\nWhat keyword can be used to force a child element to inherit a property from its parent --answers--\ndefault\n--feedback--\nThis keyword explicitly tells the child to take the parent's value inherit\ninitial\n--feedback--\nThis keyword explicitly tells the child to take the parent's value none\n--feedback--\nThis keyword explicitly tells the child to take the parent's value --video-solution--\n2\n--text--\nGiven the following CSS, what will be the color of the span text inside the p ```html\nThis is a test ```\n--answers--\nblue\nred\n--feedback--\nConsider how inheritance works between parent and child elements green\n--feedback--\nConsider how inheritance works between parent and child elements black\n--feedback--\nConsider how inheritance works between parent and child elements --video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4128,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8f382370e025aadd3f4e.md",
      "source_type": "git_repo"
    },
    "token_count": 322,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b506edf52680eb13419cdfe20d047da5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-css\\672aa8c1ad423562a38b484d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672aa8c1ad423562a38b484d\ntitle: How Can You Use the DevTools Inspection Tool and CSS Validators to Debug Your CSS challengeType: 19\ndashedName: how-can-you-use-the-devtools-inspection-tool\n--description--\nDeveloper tools, inspection tools, and CSS validators are essential resources for debugging CSS issues and ensuring your stylesheets are error-free and optimized These tools provide invaluable insights into how your CSS is being applied and can help identify potential problems Let's start with browser developer tools, commonly known as DevTools Most modern browsers, including Chrome, Firefox, and Safari, come with built-in DevTools To access them, you can right-click on an element on your webpage and select \"Inspect\" or use keyboard shortcuts like F12 or Cmd+Option+I (on macOS) DevTools allow you to inspect and modify your CSS in real-time The Styles pane shows all the CSS rules applied to the selected element, including inherited styles You can toggle individual properties on and off, edit values, and even add new rules directly in the browser This immediate feedback is incredibly useful for experimenting with different styles without modifying your source code The inspection tool, which is part of DevTools, allows you to hover over elements on your page and see their box model, including margins, borders, padding, and content area This is particularly useful for diagnosing layout issues or understanding why elements are positioned in a certain way CSS validators are another important tool for debugging The W3C CSS Validator is a popular choice It checks your CSS against the official specifications and reports any errors or warnings To use it, you can either upload your CSS file, input your CSS directly, or provide a URL to validate For example, let's say you are working with the following CSS:\ncss container {\nwidth: 100%;\nheight: 200px\nbackground-color: #F0F0F0;\n}\nThe validator would point out that there's a missing semicolon after the height property This kind of error can be easy to overlook but can cause significant issues in your stylesheet When debugging responsive designs, the device emulation feature in DevTools is invaluable It allows you to simulate how your site looks on various screen sizes and devices This can help you identify breakpoint issues or styles that don't scale well across different viewport sizes Remember, effective CSS debugging often involves a combination of these tools",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4863,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-css\\672aa8c1ad423562a38b484d.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1010db96e86e4e0d93ff86532817300a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-css\\672aa8c1ad423562a38b484d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "after the height property This kind of error can be easy to overlook but can cause significant issues in your stylesheet When debugging responsive designs, the device emulation feature in DevTools is invaluable It allows you to simulate how your site looks on various screen sizes and devices This can help you identify breakpoint issues or styles that don't scale well across different viewport sizes Remember, effective CSS debugging often involves a combination of these toolsYou might start by using a validator to catch any syntax errors, then use DevTools to inspect specific elements and experiment with changes The device emulation tool can then help ensure your styles work across different screen sizes By mastering these tools, you can significantly speed up your CSS debugging process and create more robust, error-free stylesheets Regular use of these debugging techniques will not only help you solve immediate issues but also improve your overall understanding of CSS and how it interacts with your HTML --questions--\n--text--\nWhat is a primary advantage of using browser DevTools for CSS debugging --answers--\nIt automatically fixes all CSS errors --feedback--\nThink about the immediate feedback DevTools provides when working with styles It allows real-time inspection and modification of CSS It compresses your CSS files --feedback--\nThink about the immediate feedback DevTools provides when working with styles It generates new CSS rules for you --feedback--\nThink about the immediate feedback DevTools provides when working with styles --video-solution--\n2\n--text--\nWhich of the following is NOT a typical feature of CSS validators --answers--\nChecking CSS against official specifications --feedback--\nConsider what CSS validators are primarily designed to do Reporting syntax errors --feedback--\nConsider what CSS validators are primarily designed to do Providing suggestions for improving CSS performance Identifying missing semicolons --feedback--\nConsider what CSS validators are primarily designed to do --video-solution--\n3\n--text--\nHow can the device emulation feature in DevTools assist in CSS debugging --answers--\nIt automatically adjusts your CSS for all devices --feedback--\nThink about the challenges of responsive design and how this feature might help It shows how your site looks on various screen sizes and devices It creates separate CSS files for each device --feedback--\nThink about the challenges of responsive design and how this feature might help It optimizes images for mobile devices --feedback--\nThink about the challenges of responsive design and how this feature might help --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4863,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-css\\672aa8c1ad423562a38b484d.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b72d0b7523e0b119c5babbfac648b2d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8f23511adf25646b4236.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672b8f23511adf25646b4236\ntitle: How Does the Cascade Algorithm Work at a High Level challengeType: 19\ndashedName: how-does-the-cascade-algorithm-work-at-a-high-level\n--description--\nThe Cascade Algorithm is the process the browser uses to decide which CSS rules to apply when there are multiple styles targeting the same element It ensures that the most appropriate styles are used, based on a set of well-defined rules The process begins with relevance The browser first filters all the CSS rules to find those that actually apply to the element in question This includes matching selectors and considering media queries that might be in effect A media query is a CSS technique used to apply styles based on the characteristics of the device or viewport, such as its width, height, or orientation Next, the algorithm considers origin and importance CSS can come from different sources: the browser’s default styles (user-agent), styles set by the user, and styles written by the author (you) Following the consideration of origin, the algorithm then evaluates the importance of each rule, giving priority to rules marked with important, which override other rules regardless of their source After filtering by origin and importance, the algorithm looks at specificity When two rules from the same origin and importance level apply, the rule with the higher specificity will be applied Specificity is a measure of how targeted a selector is, with more specific selectors taking precedence over more general ones Finally, if everything else is equal, the order of appearance comes into play When two rules have the same specificity, the one that appears last in the CSS will be applied This is why the order in which you write your styles can sometimes affect the outcome Let's take a look at an example Here we have a single paragraph element on the page:\n```html\nexample paragraph\n```\nInside the CSS, we have two rules each targeting the paragraph element ```css\np {\ncolor: blue;\n}\np {\ncolor: green;\n}\n```\nThe first rule sets all paragraph elements to the text color of blue while the second rule sets all paragraph elements to the text color of green So which color will be applied The color green will be applied to the paragraph elements By considering relevance, origin and importance, specificity, scope, and order of appearance, the Cascade Algorithm ensures that your CSS behaves predictably, allowing you to design more complex and nuanced web pages",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4351,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8f23511adf25646b4236.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c4cb9634464d22af18c0663b4936e503",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8f23511adf25646b4236.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "} ``` The first rule sets all paragraph elements to the text color of blue while the second rule sets all paragraph elements to the text color of green So which color will be applied The color green will be applied to the paragraph elements By considering relevance, origin and importance, specificity, scope, and order of appearance, the Cascade Algorithm ensures that your CSS behaves predictably, allowing you to design more complex and nuanced web pages--questions--\n--text--\nWhat is the first step the Cascade Algorithm takes when determining which styles to apply --answers--\nIt checks the specificity of the rules --feedback--\nThink about how the browser decides which rules could apply to an element It filters the rules by relevance It looks for important declarations --feedback--\nThink about how the browser decides which rules could apply to an element It applies the last rule in the CSS --feedback--\nThink about how the browser decides which rules could apply to an element --video-solution--\n2\n--text--\nWhat will happen if you try to apply a conflicting set of styles to two paragraph rules --answers--\nParts of the styles from each rule will apply --feedback--\nReview the end of the lecture where the example was shown for this The program will crash --feedback--\nReview the end of the lecture where the example was shown for this The last styles will be applied None of the styles will apply --feedback--\nReview the end of the lecture where the example was shown for this --video-solution--\n3\n--text--\nWhich of the following factors does not influence the Cascade Algorithm's decision on which CSS rule to apply --answers--\nThe specificity of the selectors --feedback--\nConsider what the Cascade Algorithm evaluates when resolving style conflicts The scoping proximity of the rules --feedback--\nConsider what the Cascade Algorithm evaluates when resolving style conflicts Whether the important keyword is used --feedback--\nConsider what the Cascade Algorithm evaluates when resolving style conflicts The color property of the CSS rule --video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4351,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-css-specificity-the-cascade-algorithm-and-inheritance\\672b8f23511adf25646b4236.md",
      "source_type": "git_repo"
    },
    "token_count": 386,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e034db4613283f0060b4a4f0aed54cba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733bec70d86e13522e98a4f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6733bec70d86e13522e98a4f\ntitle: How Does the Throw Statement Work challengeType: 19\ndashedName: how-does-the-throw-statement-work\n--description--\nThe throw statement in JavaScript is used to throw a user defined exception An exception in programming, is when an unexpected event happens and disrupts the normal flow of the program As programmers it is important to handle these exceptions, so your programs don’t crash unexpectedly when errors occur Here is the basic syntax for the throw statement:\njs\nthrow expression;\nThe expression in this case would be the object or value that represents the exception you want to throw Examples of this would be the built in exception classes like the Error, TypeError, or RangeError class Here is an example of using the throw statement to throw a TypeError:\njs\nfunction validateNumber(input) {\nif (typeof input == \"number\") {\nthrow new TypeError(\"Expected a number, but received \" + typeof input);\n}\nreturn input * 2;\n}\nIn this example, we are checking if the type of input is not of type number If not, then we are throwing a TypeError with a custom message Otherwise, the function will return the result of multiplying the input by 2 If you wanted to throw a more generic error message, then you can reference the Error constructor like this:\njs\nfunction divide(numerator, denominator) {\nif (denominator === 0) {\nthrow new Error(\"Cannot divide by zero\");\n}\nreturn numerator / denominator;\n}\nHere is an example of a function that will check if the denominator is 0 If that is the case, then it will throw a custom error message saying Cannot divide by zero In the next lecture, we will look at how to throw errors messages within the context of the try/catch block which is used to gracefully handle exceptions in JavaScript --questions--\n--text--\nWhat happens when you use the throw statement in JavaScript --answers--\nIt continues the normal flow of the program --feedback--\nThink about how JavaScript reacts when no error handling is present after a throw It throws an error expression and stops the program if no error handler is found It fixes the error automatically --feedback--\nThink about how JavaScript reacts when no error handling is present after a throw It logs the error and proceeds with the next line of code --feedback--\nThink about how JavaScript reacts when no error handling is present after a throw",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3670,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733bec70d86e13522e98a4f.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b61a4a9a46a3dc09b30f9f7341272506",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733bec70d86e13522e98a4f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Think about how JavaScript reacts when no error handling is present after a throw It throws an error expression and stops the program if no error handler is found It fixes the error automatically --feedback-- Think about how JavaScript reacts when no error handling is present after a throw It logs the error and proceeds with the next line of code --feedback-- Think about how JavaScript reacts when no error handling is present after a throw--video-solution--\n2\n--text--\nHow can you ensure code runs smoothly after an error occurs --answers--\nUse a loop to skip the error --feedback--\nThink of a way to catch and handle errors without crashing the program Use the try…catch syntax to handle the error and allow code execution to continue Use the throw statement to skip the error --feedback--\nThink of a way to catch and handle errors without crashing the program Stop the program when an error is triggered --feedback--\nThink of a way to catch and handle errors without crashing the program --video-solution--\n2\n--text--\nHow do you use the throw statement in combination with the error constructor in JavaScript --answers--\nthrow Error();\n--feedback--\nThink about creating a new Error object and throwing it throw new Error();\nError throw();\n--feedback--\nThink about creating a new Error object and throwing it new throw Error();\n--feedback--\nThink about creating a new Error object and throwing it --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3670,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733bec70d86e13522e98a4f.md",
      "source_type": "git_repo"
    },
    "token_count": 278,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "570977c9bbdbf9353d348edc65c7836c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733aa9b006d29f4d11307a5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6733aa9b006d29f4d11307a5\ntitle: What Are Some Examples of Common JavaScript Errors challengeType: 19\ndashedName: what-are-some-examples-of-common-javascript-errors\n--description--\nAs you've been programming in JavaScript, you've inevitably run into error messages Understanding common error messages will help you debug more effectively and develop into a stronger programmer The four common types of error messages are SyntaxError, ReferenceError, TypeError, and RangeError A SyntaxError happens when you write something incorrectly in your code, like missing a parenthesis, or a bracket Think of it like a grammar mistake in a sentence Here is a common mistake developers make when creating arrays:\njs\nconst arr = [\"Beau\", \"Quincy\" \"Tom\"]\nEach array element needs to be separated by a comma otherwise it will result in an error message The second common JavaScript error is a ReferenceError There are several types of ReferenceErrors, triggered in different ways The first type of ReferenceError would be not defined variables js\nconsole log(price);\nIn this example, we are trying to log the price variable to the console but it hasn’t been defined This is will result in a ReferenceError Another example of a ReferenceError is trying to access a variable, declared with let or const, before it has been defined:\njs\nconsole log(b);\nconst b = 50;\nThe example above will result in a Cannot access 'b' before initialization error The third common error would be a TypeError These errors occur when you try to perform an operation on the wrong type Here is an example of trying to use the map method on an object:\n```js\nconst developerObj = {\nname: \"Jessica\",\ncountry: \"USA\",\nisEmployed: true\n};\ndeveloperObj map()\n```\nThis example will result in a developerObj map is not a function error because the map method is used for arrays and not objects The last common error we will look at is the RangeError A RangeError happens when your code tries to use a value that’s outside the range of what JavaScript can handle Here is an example of trying to assign an invalid index to the length of the array:\njs\nconst arr = [];\narr length = -1;\nSince -1 is not a valid index used for arrays, this will result in a RangeError",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4003,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733aa9b006d29f4d11307a5.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ccfc022710f346b14249510ad3259900",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733aa9b006d29f4d11307a5.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "and not objects The last common error we will look at is the RangeError A RangeError happens when your code tries to use a value that’s outside the range of what JavaScript can handle Here is an example of trying to assign an invalid index to the length of the array: js const arr = []; arr length = -1; Since -1 is not a valid index used for arrays, this will result in a RangeErrorAs you continue to program in JavaScript, just be aware of these different types of errors you will probably encounter and why they are happening --questions--\n--text--\nWhat causes a SyntaxError in JavaScript --answers--\nTrying to call a variable like a function --feedback--\nIt's like grammar for your code Trying to use a value that's out of range --feedback--\nIt's like grammar for your code Writing something incorrectly in your code, like missing a parenthesis or semicolon Accessing a variable before it's declared --feedback--\nIt's like grammar for your code --video-solution--\n3\n--text--\nWhat will happen if you try to call a variable that holds a number as if it were a function --answers--\nSyntaxError\n--feedback--\nThe error happens because the variable is being treated like a function when it's not ReferenceError\n--feedback--\nThe error happens because the variable is being treated like a function when it's not TypeError\nRangeError\n--feedback--\nThe error happens because the variable is being treated like a function when it's not --video-solution--\n3\n--text--\nWhich error occurs when you try to access an array index that doesn't exist --answers--\nTypeError\n--feedback--\nThis error is related to using a value outside the valid range ReferenceError\n--feedback--\nThis error is related to using a value outside the valid range RangeError\nSyntaxError\n--feedback--\nThis error is related to using a value outside the valid range --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4003,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733aa9b006d29f4d11307a5.md",
      "source_type": "git_repo"
    },
    "token_count": 388,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ffd385c4a2202df0ac9e76df2fc76122",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733becf4b0c353553b9bfa4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6733becf4b0c353553b9bfa4\ntitle: How Does the Debugger Statement Work challengeType: 19\ndashedName: how-does-the-debugger-statement-work\n--description--\nThe debugger statement is a powerful JavaScript tool that lets you pause your code at a specific line to investigate what's going on in the program When used correctly, the debugger statement can save you a lot of time trying to figure out why something is not working as it should JavaScript executes your code from top to bottom While JavaScript executes your code and hits a debugger statement, it immediately pauses execution at that line This gives you the chance to inspect variables, check functions, and the flow of of the code in general With that, you can see exactly what is going right or wrong However, this only happens if your browser's developer tools are open Otherwise, the debugger statement is ignored, and the code continues to run as usual In addition, when you use the debugger statement, modern browsers will pause code execution at the specified line They also allow you to resume execution by clicking the play button, but the page itself does not automatically reload unless manually triggered To use the debugger statement, place it at the line in which you want the code execution to pause Here's an example:\njs\nlet firstNumber = 5;\nlet secondNumber = 10;\ndebugger; // Code execution pauses here\nlet sum = firstNumber + secondNumber;\nconsole log(sum);\nWith this example, if you don't have the console open before the code runs and you eventually open it, you'll see 15 in there While the console is open and you reload the page, the execution is paused for you so you can inspect the code Here's a more complex example:\n```js\nfunction calculateTotalPrice(price, discountPercentage) {\ndebugger\nlet discountAmount = (price * discountPercentage) / 100\nlet totalPrice = price - discountAmount\nconsole log(Original Price: ${price})\nconsole log(Discount Amount: ${discountAmount})\nconsole log(Total Price after Discount: ${totalPrice})\nreturn totalPrice\n}\nlet price = 100\nlet discount = 15\nlet finalPrice = calculateTotalPrice(price, discount)\nconsole log(Final Price: ${finalPrice});\n```\nIn this example the debugger statement is placed at the top of the calculateTotalPrice When the function is called, the function execution will be paused",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4703,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733becf4b0c353553b9bfa4.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "130579e17844dd44e8580c5a2c16e837",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733becf4b0c353553b9bfa4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "{ debugger let discountAmount = (price * discountPercentage) / 100 let totalPrice = price - discountAmount console log(Original Price: ${price}) console log(Discount Amount: ${discountAmount}) console log(Total Price after Discount: ${totalPrice}) return totalPrice } let price = 100 let discount = 15 let finalPrice = calculateTotalPrice(price, discount) console log(Final Price: ${finalPrice}); ``` In this example the debugger statement is placed at the top of the calculateTotalPrice When the function is called, the function execution will be pausedIf you reload the page with the console opened, you'll see that the page keeps reloading, confirming that the execution of the code is only paused, not stopped If you want the execution to continue, you can click the play button As you continue to build out your JavaScript programs, test out the debugger statement in your code to see how it can help you better understand the flow of execution, inspect variables in real-time, and quickly identify where things might be going wrong --questions--\n--text--\nWhat is the debugger used for --answers--\nFixing and debugging code --feedback--\nThink about how you can inspect code and quickly identify where things might be going wrong Highlighting code with incorrect syntax --feedback--\nThink about how you can inspect code and quickly identify where things might be going wrong Pausing code execution Highlighting undeclared variables --feedback--\nThink about how you can inspect code and quickly identify where things might be going wrong --video-solution--\n3\n--text--\nWhat additional behavior do modern browsers provide when encountering a debugger statement --answers--\nThey automatically fix the error and continue execution --feedback--\nThink about how browsers handle pausing and resuming code They keep reloading the page and allow you to resume by clicking a play button They skip the debugger statement and continue execution --feedback--\nThink about how browsers handle pausing and resuming code They terminate the program entirely --feedback--\nThink about how browsers handle pausing and resuming code --video-solution--\n2\n--text--\nWhat will be the output of the following code while the console is open js\nlet firstNumber = 23;\nlet secondNumber = 4;\ndebugger;\nlet sum = firstNumber + secondNumber;\nconsole log(sum);\n--answers--\n27\n--feedback--\nThink about what the debugger statement is used for sum\n--feedback--\nThink about what the debugger statement is used for The code execution pauses at the debugger statement",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4703,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733becf4b0c353553b9bfa4.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "e1f3a5f98dbe1d27f62bc19185981870",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733becf4b0c353553b9bfa4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--feedback-- Think about how browsers handle pausing and resuming code --video-solution-- 2 --text-- What will be the output of the following code while the console is open js let firstNumber = 23; let secondNumber = 4; debugger; let sum = firstNumber + secondNumber; console log(sum); --answers-- 27 --feedback-- Think about what the debugger statement is used for sum --feedback-- Think about what the debugger statement is used for The code execution pauses at the debugger statementA syntax error is thrown --feedback--\nThink about what the debugger statement is used for --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4703,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733becf4b0c353553b9bfa4.md",
      "source_type": "git_repo"
    },
    "token_count": 129,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9a4331ae774a4134ed23f2b619f4dbaf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\670803abcb3e980233da4768.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 670803abcb3e980233da4768\ntitle: What are Div Elements and When Should You Use Them challengeType: 19\ndashedName: what-are-div-elements\n--description--\nNow that we understand what HTML is, let's move onto the fun stuff I am going to look at the Content Division Element - or in other words, the div:\n```html\n```\nI like to think of the div as a beautiful being that can be anything you want it to be We can give a div a height, we can give it a width, and we can give it a background color using CSS - or in other words styling, which we will cover in lectures coming up We can also use it in a very basic form without styling, to hold other elements together So for example, we can create a div and put a heading in it, and put a paragraph in it, and now these two elements will be grouped together:\n```html\nI am a heading\nI am a paragraph\n```\nJust be aware that there might be better elements to use when grouping these together You might choose a section element, for example:\n```html\nI am a heading\nI am a paragraph\n```\nThis is because the section element has semantic meaning Semantics are the meaning of words or phrases in a language In HTML, which is a language, elements have their own semantic meaning too So, this means if you use a section element, the browser will pick up its semantic meaning and understand to treat this as a section - on desktops, mobiles, you name it We will dive into this topic further later on For now, just know that the div, does not have this It's like a mysterious ghost Let's see what else we can do to a div, in the next lecture --questions--\n--text--\nWhat semantic meaning does a div element have --answers--\nThe div element represents a container for introductory content or a set of navigational links --feedback--\nRefer back to the examples showing the correct definition The div element defines a footer for a document or section --feedback--\nRefer back to the examples showing the correct definition The div specifies the main page content and should be unique --feedback--\nRefer back to the examples showing the correct definition The div element has no semantic meaning --video-solution--\n4\n--text--\nWhich of the following is the correct syntax for a div element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3333,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\670803abcb3e980233da4768.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0e2fb4a94e575185db75f12e0f1b07f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\670803abcb3e980233da4768.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "navigational links --feedback-- Refer back to the examples showing the correct definition The div element defines a footer for a document or section --feedback-- Refer back to the examples showing the correct definition The div specifies the main page content and should be unique --feedback-- Refer back to the examples showing the correct definition The div element has no semantic meaning --video-solution-- 4 --text-- Which of the following is the correct syntax for a div element--answers--\nhtml\n<divEl>content goes here</divEl>\n--feedback--\nRefer back to the notes for the correct syntax ```html\ncontent goes here\n```\nhtml\n<divElement>content goes here</divElement>\n--feedback--\nRefer back to the beginning of the lecture for the correct syntax html\n<divGroup>content goes here</divGroup>\n--feedback--\nRefer back to the notes for the correct syntax --video-solution--\n2\n--text--\nWhich of the following HTML elements is commonly used to group content into distinct sections --answers--\nsection\naside\n--feedback--\nRefer back to the beginning of the lecture for the correct syntax nav\n--feedback--\nRefer back to the notes for the correct answer h1\n--feedback--\nRefer back to the notes for the correct answer --video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3333,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\670803abcb3e980233da4768.md",
      "source_type": "git_repo"
    },
    "token_count": 260,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "14987937a20dd27d094c3bee8dba6686",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\6708382cf088b216580a9ff1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6708382cf088b216580a9ff1\ntitle: What Are IDs and Classes, and When Should You Use Them challengeType: 19\ndashedName: what-are-ids-and-classes\n--description--\nThe id attribute adds a unique identifier to an HTML element In this example, there is an h1 element with an id of title:\n```html\nMovie Review Page\n```\nYou can reference the id name of title within your JavaScript or CSS Here's a CSS example referencing the id of title to change the text color to red:\n```css\ntitle {\ncolor: red;\n}\n```\nThe hash symbol (#) in front of title, tells the computer you want to target an id with that value id names should not be used more than once, and they should always be unique Another thing to note about id values, is that they cannot have spaces in them Here is an example of applying the words main and heading to an id attribute value:\n```html\nMain heading\n```\nBrowsers will see this space as part of the id which will lead to unwanted issues when it comes to styling and scripting id attribute values should only contain letters, digits, underscores, and dashes In contrast to the id attribute, the class attribute value does not need to be unique and can contain spaces Here is an example of applying a class called box to a div element:\n```html\n```\nIf you wanted to add multiple class names to an element, you can do so by separating the names by a space Here is an updated example applying multiple classes to a div element:\n```html\n```\nTo apply a set of styles to that box class, you can reference that class inside your CSS Here is an example of setting width, height, and border properties to the element with the class name of box:\ncss box {\nwidth: 200px;\nheight: 200px;\nborder: 2px solid black;\n}\nThe dot symbol ( ) in front of box, tells the computer you want to target a class with that value When the code runs, it will search through all of your HTML document to find all elements with that class name and apply those styles So, to recap, when should you use an id versus a class Classes are best used when you want to apply a set of styles to many elements If you want to target a specific element, it is best to use id because those values need to be unique",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4411,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\6708382cf088b216580a9ff1.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ebb1c2baf71aa04becbeab4a1817dc22",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\6708382cf088b216580a9ff1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "that value When the code runs, it will search through all of your HTML document to find all elements with that class name and apply those styles So, to recap, when should you use an id versus a class Classes are best used when you want to apply a set of styles to many elements If you want to target a specific element, it is best to use id because those values need to be unique--questions--\n--text--\nWhen should you use an id versus a class --answers--\nUse a class when you want a unique identifier that should only apply to one element --feedback--\nRemember that an id name is unique and should only be used once per HTML document Use an id when you need a unique identifier for a specific element, and use a class when you want to apply styles or behavior to multiple elements Use an id when you want to style multiple elements consistently across different parts of your webpage --feedback--\nRemember that an id name is unique and should only be used once per HTML document Use an id when you want to apply styles that can be easily overridden by other styles in your CSS --feedback--\nRemember that an id name is unique and should only be used once per HTML document --video-solution--\n2\n--text--\nWhat happens if you use the same id more than once in your HTML --answers--\nIt can lead to unwanted results and issues when trying to apply styles or targeting an element in JavaScript The program will crash --feedback--\nThink about how using duplicate id names in your HTML can affect your CSS and JavaScript Nothing will happen --feedback--\nThink about how using duplicate id names in your HTML can affect your CSS and JavaScript There will be a popup alert message in the browser window --feedback--\nThink about how using duplicate id names in your HTML can affect your CSS and JavaScript --video-solution--\n1\n--text--\nWhich of the following is NOT a correct value for the id attribute --answers--\nid=\"heading\"\n--feedback--\nOnly classes can hold multiple separate values id=\"main-heading\"\n--feedback--\nOnly classes can hold multiple separate values id=\"main\"\n--feedback--\nOnly classes can hold multiple separate values id=\"main heading\"\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4411,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\6708382cf088b216580a9ff1.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "92f1e9bb996387ef99ce1fc6f6ba5927",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733bee844600f35c05b8264.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6733bee844600f35c05b8264\ntitle: How Does try catch finally Work challengeType: 19\ndashedName: how-does-try-catch-finally-work\n--description--\nIn the previous lecture, you learned how to throw exceptions in your programs In this lecture, we will take a look at how to gracefully handle these errors in a try…catch…finally block The try block is used to wrap code that might throw an error It acts as a safe space to try something that could fail The catch block captures and handles errors that occur in the try block You can use the Error object inside catch to inspect what went wrong The finally block runs after the try and catch blocks, regardless of whether an error occurred It’s commonly used for cleanup tasks, such as closing files or releasing resources Here is an example of using a try…catch block:\n```js\nfunction processInput(input) {\nif (typeof input == \"string\") {\nthrow new TypeError(\"Input must be a string \");\n}\nreturn input toUpperCase();\n}\ntry {\nconsole log(\"Starting to process input \");\nconst result = processInput(9);\nconsole log(\"Processed result:\", result);\n} catch (error) {\nconsole error(\"Error occurred:\", error message);\n}\n```\nIn this example, we have a function called processInput that first checks if the input is not of type string If that is the case, then we throw an error Otherwise, we return the result of using the toUpperCase method on the input We call the function inside of a try block Since the function call throws an error, then it will be caught inside the catch block and the error message will be displayed in the console The error passed into the catch block is an Error object which contains information about that error In this case, we are using the message property which displays human readable information to the user We are using the console error because it is designed specifically to log errors In many modern browsers, the output of console error() appears in red in the console The finally statement is executed regardless of if an exception was thrown or not js\ntry {\n// Code that might throw an error\n} catch (error) {\n// Code to handle the error\n} finally {\n// Code that runs regardless of whether an error occurred or not\n}\nA good use case for the finally statement is if you were working with files In JavaScript, you can open a file, use a try block to write data to the file",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4252,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733bee844600f35c05b8264.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0279c36aa46184ae2af5455bd998f392",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733bee844600f35c05b8264.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of if an exception was thrown or not js try { // Code that might throw an error } catch (error) { // Code to handle the error } finally { // Code that runs regardless of whether an error occurred or not } A good use case for the finally statement is if you were working with files In JavaScript, you can open a file, use a try block to write data to the fileIf there are any errors, you can use the catch to catch those errors Then use the finally statement to close the file --questions--\n--text--\nWhat best describes the try block --answers--\nIt’s for running code again automatically after an error occurs --feedback--\nThink about the order of blocks in try…catch…finally statements, and the types of tasks each block handles It’s for handling errors --feedback--\nThink about the order of blocks in try…catch…finally statements, and the types of tasks each block handles It’s for setup before an error is thrown --feedback--\nThink about the order of blocks in try…catch…finally statements, and the types of tasks each block handles It’s a safe wrapper for code that might throw an error --video-solution--\n4\n--text--\nWhich block always executes even if an error occurs --answers--\ntry\n--feedback--\nThis block is often used for cleanup tasks catch\n--feedback--\nThis block is often used for cleanup tasks finally\nthrow\n--feedback--\nThis block is often used for cleanup tasks --video-solution--\n3\n--text--\nWhat is the purpose of the catch block --answers--\nTo execute code that might throw an error --feedback--\nThis block activates when something goes wrong in the try block To define a safe space for code execution --feedback--\nThis block activates when something goes wrong in the try block To handle errors gracefully without crashing the program To always execute, regardless of errors --feedback--\nThis block activates when something goes wrong in the try block --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4252,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733bee844600f35c05b8264.md",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f78954de1a0c5dd213133e9c2beeaf5a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733befb703ca6361da3755b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6733befb703ca6361da3755b\ntitle: What Are Some Examples of Using Advanced JavaScript Debugging Techniques challengeType: 19\ndashedName: what-are-some-examples-of-using-advanced-javascript-debugging-techniques\n--description--\nDebugging your JavaScript programs goes beyond using console log() statements in your code There are more advanced techniques that make debugging a breeze once you get used to them Let's go through those more advanced techniques so you'll be happy to debug your JavaScript program once you run into errors The first concept we will take a look at is working with breakpoints Breakpoints let you pause the execution of your code at a specific line of your choice After the pause, you can inspect variables, evaluate expressions, and examine the call stack To add a breakpoint to any line in your code in the Chrome browser, open the developer tools and navigate to the Sources tab, open the JavaScript file you want to debug, and click on a line number to set a breakpoint After the execution reaches the breakpoint and stops, you can step through the code by using the icons on the top right corner You can also add a conditional breakpoint by right-clicking on a line and selecting \"Add conditional breakpoint…\"\nNow, let’s move on to watching expressions Watch expressions lets you monitor the values of variables or expressions as the code runs even if they are out of the current scope To add a watch expression, navigate to the Sources tab of the developer tools, look for the watch panel on the right and click the plus (+) icon to add it The next concept we will look at is profiling Profiling helps you identify performance bottlenecks by letting you capture screenshots and record CPU usage, function calls, and execution time To do that for your code, open the Performance tab, click record, and perform the action you want to profile After you're done executing that action, stop the recording to analyze the results This could be useful if your application is lagging during certain operations With the profiler, you can see which function or other data in the code consumes the most resources Now, let’s move onto inspecting network requests Inspecting network requests can help you debug issues related to API requests such as parameter errors, address errors, or server errors To use the Network tab for debugging, open the developer tools and head over to the Network tab, then click on individual requests to see details like headers, responses, and payloads",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5137,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733befb703ca6361da3755b.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "0ebf908df6fff72a4935916505a44b83",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733befb703ca6361da3755b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the profiler, you can see which function or other data in the code consumes the most resources Now, let’s move onto inspecting network requests Inspecting network requests can help you debug issues related to API requests such as parameter errors, address errors, or server errors To use the Network tab for debugging, open the developer tools and head over to the Network tab, then click on individual requests to see details like headers, responses, and payloadsFor the last portion of this lecture, we will focus on console table and console dir console table() displays tabular data as a table in the console It takes one mandatory argument, which must be an array or an object, and one optional argument to specify which properties or columns to display console dir() on the other hand lets you display an interactive list of the properties of a specified JavaScript object It outputs a hierarchical listing that can be expanded to see all nested properties Now that you have an expanded toolkit of debugging techniques, put these new skills to the test in your upcoming JavaScript projects By applying these strategies, you'll be able to identify and resolve issues more efficiently, leading to cleaner, more reliable code --questions--\n--text--\nIn which tab of the Chrome developer tools do you have access to adding breakpoints --answers--\nNetwork tab --feedback--\nThink about the tab where you have access to watch expressions and stepping icons Console tab --feedback--\nThink about the tab where you have access to watch expressions and stepping icons Elements tab --feedback--\nThink about the tab where you have access to watch expressions and stepping icons Sources tab --video-solution--\n4\n--text--\nWhat do watch expressions allow you to do --answers--\nMonitor only the variables within the current scope --feedback--\nThink about tracking variables across different parts of the code Monitor the values of variables or expressions, even if they are out of the current scope Automatically fix errors in variables --feedback--\nThink about tracking variables across different parts of the code Change variable values permanently --feedback--\nThink about tracking variables across different parts of the code --video-solution--\n2\n--text--\nWhat method can you use to see an interactive list of properties for the JavaScript object you pass in --answers--\nconsole log()\n--feedback--\nYou can use this method directly in your code, and it doesn’t just log data or a table to the console console table()\n--feedback--\nYou can use this method directly in your code, and it doesn’t just log data or a table to the console console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5137,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733befb703ca6361da3755b.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5532269b9e5396b8b47b47183743a82e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733befb703ca6361da3755b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "parts of the code --video-solution-- 2 --text-- What method can you use to see an interactive list of properties for the JavaScript object you pass in --answers-- console log() --feedback-- You can use this method directly in your code, and it doesn’t just log data or a table to the console console table() --feedback-- You can use this method directly in your code, and it doesn’t just log data or a table to the console consoledir()\nFinding the object in the Network tab and double clicking on it --feedback--\nYou can use this method directly in your code, and it doesn’t just log data or a table to the console --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5137,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-debugging-techniques\\6733befb703ca6361da3755b.md",
      "source_type": "git_repo"
    },
    "token_count": 143,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "444a634f556bbe3e083fb0b55295caf8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\670838b10ee87a18e5faff62.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 670838b10ee87a18e5faff62\ntitle: What Is the Role of the Script Element in HTML, and How Can It Be Used to Link to External JavaScript Files challengeType: 19\ndashedName: what-is-the-role-of-the-script-element-in-html\n--description--\nThe script element is used to embed executable code Most developers will use this to execute JavaScript code JavaScript is used to add interactivity to your web pages Common examples of using JavaScript include interactive games, image sliders, and dynamic forms that validate user input in real-time Here is an example of using the script element in an HTML document:\n```html\n```\nIn this example, we have an alert to display the message Welcome to freeCodeCamp When the page first loads, the alert will pop up Then the user can click on the OK button to dismiss the message While you can technically write all of your JavaScript code inside the script tags, it is considered best practice to link to an external JavaScript file instead Here is an example of using the script element to link to an external JavaScript file:\n```html\n```\nThe src attribute is used here to specify the location for that external JavaScript file src stands for \"source\" The reason why it is not encouraged to place all of your JavaScript inside the HTML document is because of separation of concerns Separation of concerns is a design principle where you separate your programs into distinct sections and have each section address a separate concern In this case, we want to separate our JavaScript code from our HTML code --questions--\n--text--\nWhich attribute is used to link to an external JavaScript file --answers--\nThe div attribute --feedback--\nLook out for the attribute that specifies the JavaScript file location/\nThe defer attribute --feedback--\nLook out for the attribute that specifies the JavaScript file location The async attribute --feedback--\nLook out for the attribute that specifies the JavaScript file location The src attribute --video-solution--\n4\n--text--\nWhat is separation of concerns --answers--\nIt's about making sure everyone on the team has their own clear responsibilities --feedback--\nReview where separation of concerns was discussed A design principle where you separate your programs into distinct sections and have each section address a separate concern The act of combining all aspects of a program into a single module for simplicity --feedback--\nReview where separation of concerns was discussed It involves dividing up tasks among team members without considering how they might overlap or affect each other --feedback--\nReview where separation of concerns was discussed",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3549,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\670838b10ee87a18e5faff62.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0affdb95004d92845b6e7c389e23f19c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\670838b10ee87a18e5faff62.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--feedback-- Review where separation of concerns was discussed A design principle where you separate your programs into distinct sections and have each section address a separate concern The act of combining all aspects of a program into a single module for simplicity --feedback-- Review where separation of concerns was discussed It involves dividing up tasks among team members without considering how they might overlap or affect each other --feedback-- Review where separation of concerns was discussed--video-solution--\n2\n--text--\nWhich of the following is the correct syntax for linking to an external JavaScript file --answers--\n<script div=\"path-to-javascript-file js\"></script>\n--feedback--\nReview where linking to external files was discussed <script alt=\"path-to-javascript-file js\"></script>\n--feedback--\nReview where linking to external files was discussed <script src=\"path-to-javascript-file js\"></script>\n<script defer=\"path-to-javascript-file js\"></script>\n--feedback--\nReview where linking to external files was discussed --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3549,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\670838b10ee87a18e5faff62.md",
      "source_type": "git_repo"
    },
    "token_count": 199,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "85de24b02b452de38df33ab0dbc4ed33",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\67083868d5fdcb17bf8c14bd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67083868d5fdcb17bf8c14bd\ntitle: What Are HTML Entities, and What Are Some Common Examples challengeType: 19\ndashedName: what-are-html-entities\n--description--\nAn HTML entity, or character reference, is a set of characters used to represent a reserved character in HTML In this example, there is a paragraph element with an image element nested inside:\n```html\nThis is an  element\n```\nThe text on the screen should say This is an <img/> element However, the text currently says This is an element This is happening because when the HTML parser sees the less than (<) symbol followed by an HTML tag name, it interprets that as an HTML element To fix this issue, you can use HTML entities Here is an updated example using the correct HTML entities for the less than and greater than (>) symbols ```html\nThis is an <img /> element\n```\nThese types of character references are known as named character references Named references start with an ampersand sign (&) and end with a semicolon (;) By using a named character reference, the HTML parser will not confuse this with an actual HTML element Here is what the updated paragraph element looks like on the page: This is an <img/> element Now, users will be able to see the entire image element syntax as you intended it Another type of character reference would be the decimal numeric reference Here is an example of using the decimal numeric reference for the less than symbol:\nhtml\n&#60;\nThis character reference starts with an ampersand sign and hash symbol (#), followed by one or more decimal digits, followed by a semicolon The last type of character reference would be the hexadecimal numeric reference Here is an example of using the hexadecimal numeric reference for the less than symbol:\nhtml\n&#x3C;\nThis character reference starts with an ampersand sign, hash symbol, and the letter x Then it is followed by one or more ASCII hex digits and ends with a semicolon So what are some other examples of using HTML entities Well, you often see them used for symbols like the copyright symbol (©), quotes (\"), trademark symbol (™), and the ampersand sign --questions--\n--text--\nWhat is an HTML entity (character reference) --answers--\nA set of Google fonts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4209,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\67083868d5fdcb17bf8c14bd.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c8f120c6a5c14dbd21f3caad7699fc89",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\67083868d5fdcb17bf8c14bd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "character reference starts with an ampersand sign, hash symbol, and the letter x Then it is followed by one or more ASCII hex digits and ends with a semicolon So what are some other examples of using HTML entities Well, you often see them used for symbols like the copyright symbol (©), quotes (\"), trademark symbol (™), and the ampersand sign --questions-- --text-- What is an HTML entity (character reference) --answers-- A set of Google fonts--feedback--\nRemember that HTML has reserved characters, so you will need to use another way to write reserved characters like the less than and greater than symbols A group of images and captions --feedback--\nRemember that HTML has reserved characters, so you will need to use another way to write reserved characters like the less than and greater than symbols A set of characters used to represent JavaScript code --feedback--\nRemember that HTML has reserved characters, so you will need to use another way to write reserved characters like the less than and greater than symbols A set of characters used to represent a reserved character in HTML --video-solution--\n4\n--text--\nWhat are the three types of character references --answers--\nNamed, Roman and Hexadecimal numeric character references --feedback--\nPlease refer back to where the different types of character references are talked about in detail Octal, Named and Binary character references --feedback--\nPlease refer back to where the different types of character references are talked about in detail Named, Decimal numeric, and Hexadecimal numeric character references Asymmetric, Decimal numeric, and Hexadecimal numeric character references --feedback--\nPlease refer back to where the different types of character references are talked about in detail --video-solution--\n3\n--text--\nWhich of the following is the correct syntax for a named character reference --answers--\n&amp;\n;amp;\n--feedback--\nRefer back to where there are examples for named references &amp>>\n--feedback--\nRefer back to where there are examples for named references &amp&\n--feedback--\nRefer back to where there are examples for named references --video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4209,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\67083868d5fdcb17bf8c14bd.md",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3fde1029323f861a4a9504cdbf9e600a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a51e9e4fd8b8552eeb758.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a51e9e4fd8b8552eeb758\ntitle: What Is Accessibility challengeType: 19\ndashedName: what-is-accessibility\n--description--\nAccessibility involves creating products and services that everyone can use In the context of web development, it's making websites that everyone can understand and interact with, including people with visual, auditory, motor, and cognitive disabilities Some examples of disabilities that can impact users' online experience include:\nBlindness Low vision Color blindness Deafness Difficulty using keyboards, mice, or touchscreens Attention disorders\nMemory issues Difficulty speaking or understanding spoken language Sensitivity to flashing lights These are just a few of many conditions that can impact users around the world To help you create accessible websites, the World Wide Web Consortium, known as W3C, developed a set of international standards that you can follow to make your websites more accessible and easier to use for people with disabilities These standards are known as \"The Web Content Accessibility Guidelines\" (WCAG) These guidelines are designed with four core principles in mind, known as POUR P stands for Perceivable Users must be able to perceive the information that you are presenting For example, you can provide alternative text for images, so users who access your website with a screen reader can understand them O stands for Operable Users must be able to interact with the user interface For example, you can make sure that all functionality is accessible through the keyboard too, not just the mouse U stands for Understandable Users must be able to understand the information For example, you can avoid complex sentences and use simple language as much as possible R stands for Robust A wide range of browsers and other tools, including assistive technologies, must be able to interpret the content Using semantic HTML is very helpful for making your website compatible with different browsers and assistive technologies If your content doesn't follow any one of these core principles, not everyone will be able to use your website To check if you are following these guidelines correctly, you can access the Quick Reference of the World Wide Web Consortium There, you will find a comprehensive list of criteria and techniques Accessibility is essential for web development By developing with inclusivity in mind, you can ensure that everyone can access and engage with your content, promote equality and create a better user experience for everyone around the world --questions--\n--text--\nWhat is the primary goal of web accessibility --answers--\nTo make websites look better --feedback--\nThink about why you should make websites accessible",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4262,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a51e9e4fd8b8552eeb758.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a07c3bcdfdf96e76b55458606c9f56da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a51e9e4fd8b8552eeb758.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Wide Web Consortium There, you will find a comprehensive list of criteria and techniques Accessibility is essential for web development By developing with inclusivity in mind, you can ensure that everyone can access and engage with your content, promote equality and create a better user experience for everyone around the world --questions-- --text-- What is the primary goal of web accessibility --answers-- To make websites look better --feedback-- Think about why you should make websites accessibleTo ensure websites are usable by everyone To improve website performance --feedback--\nThink about why you should make websites accessible To increase website traffic --feedback--\nThink about why you should make websites accessible --video-solution--\n2\n--text--\nWhat are The Web Content Accessibility Guidelines (WCAG) --answers--\nA programming language for web development --feedback--\nThink about why you should make websites inclusive A set of guidelines for making websites accessible to everyone A new design trend for websites --feedback--\nThink about why you should make websites inclusive A tool for testing website performance --feedback--\nThink about why you should make websites inclusive --video-solution--\n2\n--text--\nWhich of the following is NOT a core principle of The Web Content Accessibility Guidelines (WCAG) --answers--\nPerceivable --feedback--\nThink about the essential principles of an accessible website, the guidelines that online content should follow Operable --feedback--\nThink about the essential principles of an accessible website, the guidelines that online content should follow Understandable --feedback--\nThink about the essential principles of an accessible website, the guidelines that online content should follow Compatible --video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4262,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a51e9e4fd8b8552eeb758.md",
      "source_type": "git_repo"
    },
    "token_count": 316,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "000f1dff17be545a5dcdddf3f33b17ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\67083952f800051a8a21fcfd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67083952f800051a8a21fcfd\ntitle: What Is the Role of the Meta Description, and How Does It Affect SEO challengeType: 19\ndashedName: what-is-the-role-of-the-meta-description\n--description--\nSEO, or Search Engine Optimization, is a practice that optimizes web pages so they become more visible and rank higher on search engines One way to improve your site's SEO, is to provide a short description for the web page using the meta element Here is an example of using the meta element to set a page description for a gardening site:\nhtml\n<meta\nname=\"description\"\ncontent=\"Discover expert tips and techniques for gardening in small spaces, choosing the right plants, and maintaining a thriving garden \"\n/>\nBy setting the name attribute to description, it ensures that browsers, search engines, and other web tools correctly interpret this metadata The content attribute is where you will place your description It is recommended that you keep your descriptions short and concise This is because search engines will often truncate the description based on the results page layout Similar to other types of meta elements, the meta description will not be visible on the web page itself One place where the page description can be found is in the search engine results page snippet Here are some examples of page result snippets for freeCodeCamp's subreddit and GitHub repositories:\nsh\nr\\FreeCodeCamp: This is the official subreddit for the freeCodeCamp org community Learn to\ncode for free together with millions of other people sh\nOur full-stack web development and machine learning curriculum is completely free and self-\npaced We have thousands of interactive coding challenges to help you In the examples, each of the page descriptions are located just beneath the site links Within a couple of seconds, users can get a general sense of what the page is about and decide to click on the links for more information Even though meta descriptions won't directly affect a site's ranking on search engine, having a strong description could result in more traffic to your website --questions--\n--text--\nWhich element is used to set the description for a web page --answers--\nimg\n--feedback--\nLook closely to the title of this lecture meta\nslot\n--feedback--\nLook closely to the title of this lecture figure\n--feedback--\nLook closely to the title of this lecture --video-solution--\n2\n--text--\nWhat does SEO stand for --answers--\nSlot Engine Optimization\n--feedback--\nRefer back to where SEO was talked about",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\67083952f800051a8a21fcfd.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8f9949478a094f563d19cb39b7404776",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\67083952f800051a8a21fcfd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "description could result in more traffic to your website --questions-- --text-- Which element is used to set the description for a web page --answers-- img --feedback-- Look closely to the title of this lecture meta slot --feedback-- Look closely to the title of this lecture figure --feedback-- Look closely to the title of this lecture --video-solution-- 2 --text-- What does SEO stand for --answers-- Slot Engine Optimization --feedback-- Refer back to where SEO was talked aboutSite Enhancement Outreach\n--feedback--\nRefer back to where SEO was talked about Social Engagement Optimization\n--feedback--\nRefer back to where SEO was talked about Search Engine Optimization\n--video-solution--\n4\n--text--\nWhere does the page's description typically show up --answers--\nInside the figure element --feedback--\nRefer back to where there are examples showing where the page's descriptions typically show up Inside the footer element --feedback--\nRefer back to where there are examples showing where the page's descriptions typically show up In the search engine results page In a popup alert message --feedback--\nRefer back to where there are examples showing where the page's descriptions typically show up --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3504,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\67083952f800051a8a21fcfd.md",
      "source_type": "git_repo"
    },
    "token_count": 237,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "d44adddb8ce79cc635e3b384516331ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\6708396caa00e11b597b3365.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6708396caa00e11b597b3365\ntitle: What Is the Role of Open Graph Tags, and How Do They Affect SEO challengeType: 19\ndashedName: what-is-the-role-of-open-graph-tags\n--description--\nThe open graph protocol enables you to control how your website's content appears across various social media platforms, such as Facebook, LinkedIn, and many more By setting these open graph properties, you can entice users to want to click and engage with your content You can set these properties through a collection of meta elements inside your HTML head section The first important OG property to include would be the title Here is an example of setting the OG title for the freeCodeCamp homepage:\nhtml\n<meta content=\"freeCodeCamp org\" property=\"og:title\" />\nFor the property attribute, you will need to specify that it is og:title The content attribute is where you will write the title you want displayed for social media sites The next important OG property would be the type Here is an example of using the OG type for the freeCodeCamp homepage:\nhtml\n<meta property=\"og:type\" content=\"website\" />\nThe type property is used to represent the type of content being shared on social media Examples of this content include articles, websites, videos, or music The third important OG property would be the image Here is an example of setting the OG image for the freeCodeCamp homepage:\nhtml\n<meta\ncontent=\"https://cdn freecodecamp org/platform/universal/fcc_meta_1920X1080-indigo png\"\nproperty=\"og:image\"\n/>\nIn this example, the open graph image is pointing to the freeCodeCamp logo All of these images should be high quality with good dimensions and ratios Most social media platforms will include criteria for image requirements to help you ensure that your content displays well on their site For example, the developers facebook com documentation page states:\n\"use images that are at least 1200 by 630 pixels for the best display on high resolution devices At the minimum, you should use images that are 600 by 315 pixels to display link page posts with larger images \"\nThe fourth important OG property would be the url Here is an example of setting the OG url for the freeCodeCamp homepage:\nhtml\n<meta property=\"og:url\" content=\"https://www freecodecamp org\" />\nThere are many more OG properties that you can set, like description, audio, video and locale",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\6708396caa00e11b597b3365.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "fcc229dcd60d984934b37d2788c39645",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\6708396caa00e11b597b3365.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "pixels for the best display on high resolution devices At the minimum, you should use images that are 600 by 315 pixels to display link page posts with larger images \" The fourth important OG property would be the url Here is an example of setting the OG url for the freeCodeCamp homepage: html <meta property=\"og:url\" content=\"https://www freecodecamp org\" /> There are many more OG properties that you can set, like description, audio, video and localeHowever, the open graph url, image, type, and title are the most important ones to include So how do these open graph properties affect Search Engine Optimization When your content is shared on social media, well-crafted OG properties can enhance the appearance for your content in users' feeds This can lead to higher click-through rates which could signal to search engines that your content is relevant and engaging --questions--\n--text--\nWhat are open graph properties used for --answers--\nFor embedding interactive multimedia content directly into web pages --feedback--\nRefer back to where open graph properties were introduced To set how your website's content will be seen on different social media platforms For generating dynamic pop-up advertisements on websites --feedback--\nRefer back to where open graph properties were introduced For encrypting sensitive data transmitted between web servers and users' browsers --feedback--\nRefer back to where open graph properties were introduced --video-solution--\n2\n--text--\nWhat does the property=\"og:title\" do in the meta element --answers--\nIt automatically adjusts the font size and style of the webpage title based on user preferences --feedback--\nPay close attention to the value of the property attribute here because it heavily implies what that value does It directs the browser to display a specific emoticon or emoji as the title of the webpage --feedback--\nPay close attention to the value of the property attribute here because it heavily implies what that value does It causes the webpage to play a specific audio file when the title is displayed in the browser tab --feedback--\nPay close attention to the value of the property attribute here because it heavily implies what that value does It specifies the title of your web page content when it is shared on social media platforms --video-solution--\n4\n--text--\nWhat does the property=\"og:type\" do in the meta element --answers--\nIt selects the page's default font style --feedback--\nPay close attention to the value of the property attribute here because it heavily implies what that value does",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\6708396caa00e11b597b3365.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "3260d056d0721c2b0f3e57f92d8857f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\6708396caa00e11b597b3365.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Pay close attention to the value of the property attribute here because it heavily implies what that value does It specifies the title of your web page content when it is shared on social media platforms --video-solution-- 4 --text-- What does the property=\"og:type\" do in the meta element --answers-- It selects the page's default font style --feedback-- Pay close attention to the value of the property attribute here because it heavily implies what that value doesIt triggers a pop-up advertisement when the webpage is loaded --feedback--\nPay close attention to the value of the property attribute here because it heavily implies what that value does It specifies the type of content used for your web page when it is shared on social media platforms It changes the webpage's background color based on the user's time zone --feedback--\nPay close attention to the value of the property attribute here because it heavily implies what that value does --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5288,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-html-fundamentals\\6708396caa00e11b597b3365.md",
      "source_type": "git_repo"
    },
    "token_count": 186,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "bd58092a036d84cbfefde8c92b0a7a8d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a5310d7e46b8a34d48dfd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a5310d7e46b8a34d48dfd\ntitle: What Are Screen Readers, and Who Uses Them challengeType: 19\ndashedName: what-are-screen-readers\n--description--\nScreen readers are assistive technology programs that help blind and visually impaired people use computers and mobile devices Screen readers are not just tools for the blind and visually impaired to access computers and mobile devices They empower these individuals to access education, work opportunities, and social media This ensures digital inclusion and enhances their ability to participate fully in society There's a common misconception that screen readers are text-to-speech devices However, text-to-speech is just one of the features of a screen reader Some screen readers even render the text to braille output instead of speech Apart from text-to-speech and braille output, other notable features of screen readers are navigation aids and web browsing assistance Screen reader programs are also not only made for the blind and visually impaired Dyslexic individuals and people with cognitive disabilities also use screen readers All the popular operating systems out there have screen readers built into them macOS and iOS both have VoiceOver built-in You can turn it on on your computer by pressing CMD + F5 You can access it on iPhones through Settings Windows computers have Narrator built-in You can turn it on by pressing WIN + CTRL + ENTER NonVisual Desktop Access (NVDA) and Job Access With Speech (JAWS) are also available for Windows computers NVDA is free and open-source, while JAWS is paid Linux has Orca for the desktop environment and Speakup for the Linux terminal Android phones have TalkBack built-in You can turn it on by accessing Settings > Special Function > Accessibility > Talkback Some Android devices also have Ella and Select to Speak built in One major challenge for screen reader users is that many software developers don't design their products with screen-reader friendliness and accessibility in mind Even though accessibility is a broad topic, every developer needs to learn how to make their web software accessible for the blind and visually impaired, as well as other groups of people with disabilities This demonstrates empathy and a commitment to inclusivity, ensuring that all users can benefit from their work --questions--\n--text--\nWhich of the following is the screen reader built into macOS and iOS devices --answers--\nElla --feedback--\nThink of the screen reader software Apple made and maintain Speakup --feedback--\nThink of the screen reader software Apple made and maintain VoiceBox",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3673,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a5310d7e46b8a34d48dfd.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "45fb5361f816d9ac9d091b5d560c4a2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a5310d7e46b8a34d48dfd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "software accessible for the blind and visually impaired, as well as other groups of people with disabilities This demonstrates empathy and a commitment to inclusivity, ensuring that all users can benefit from their work --questions-- --text-- Which of the following is the screen reader built into macOS and iOS devices --answers-- Ella --feedback-- Think of the screen reader software Apple made and maintain Speakup --feedback-- Think of the screen reader software Apple made and maintain VoiceBox--feedback--\nThink of the screen reader software Apple made and maintain VoiceOver --video-solution--\n4\n--text--\nWhich of the following are screen readers not made for --answers--\nThe blind --feedback--\nLook out for those with disability not related to vision Visually impaired people --feedback--\nLook out for those with disability not related to vision The deaf Dyslexic people --feedback--\nLook out for those with disability not related to vision --video-solution--\n3\n--text--\nWhich of these is not a feature of screen readers --answers--\nSpeech-to-text Text-to-speech --feedback--\nThink about converting written content into spoken words Braille output --feedback--\nThink about converting written content into spoken words Web browsing support --feedback--\nThink about converting written content into spoken words --video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3673,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a5310d7e46b8a34d48dfd.md",
      "source_type": "git_repo"
    },
    "token_count": 255,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "66b75bc7a193078642551106dad88333",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a5326a7606a8a766cbedb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a5326a7606a8a766cbedb\ntitle: What Are Large Text or Braille Keyboards, and Who Uses Them challengeType: 19\ndashedName: what-are-large-text-or-braille-keyboards\n--description--\nLarge text and braille keyboards are designed for users with visual disabilities In Large Text Keyboards, also called Large Print Keyboards, the letters, numbers, and symbols are larger compared to standard keyboards This design is helpful for people who may find smaller text in the keys difficult to see Most of them also have enhanced contrast and brightness A large print keyboard made by the brand MaxiAids has yellow keys with black, big, and bold letters, numbers, and symbols on them This is helpful for people with low vision Another keyboard is the black large print keyboard with white print on the keys This keyboard is also backlit, so users can adjust its brightness to different lighting conditions While large print keyboards provide visual cues for users with low vision, braille keyboards provide a completely tactile experience for people with more severe vision disabilities, including people who are blind Braille is a tactile reading and writing system It consists of raised dots arranged in specific patterns to represent letters, numbers, and punctuation Braille keyboards use this system to help users find the right keys on the keyboard by feeling these patterns with their fingers The keys have raised dots in patterns that represent letters, numbers and symbols And some keyboards combine both approaches- large fonts and braille patterns in the keys This is helpful for people with visual disabilities and for people who are learning braille Large text and braille keyboards are tools that empower people with visual disabilities By providing alternative input methods, these assistive technologies ensure that everyone can be part of the digital world --questions--\n--text--\nWhat is one benefit of using large text keyboards --answers--\nImproved typing speed --feedback--\nThink about the main purpose of large text keyboards Enhanced performance --feedback--\nThink about the main purpose of large text keyboards Improved readability of the keys Reduced noise levels --feedback--\nThink about the main purpose of large text keyboards --video-solution--\n3\n--text--\nWho primarily benefits from the use of large text and braille keyboards --answers--\nPeople with hearing disabilities --feedback--\nThink about the type of disabilities that would make standard keyboards more challenging to use People with cognitive disabilities --feedback--\nThink about the type of disabilities that would make standard keyboards more challenging to use People with visual disabilities",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3593,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a5326a7606a8a766cbedb.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "20a2a4705d50a522acb39fd64fad0e4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a5326a7606a8a766cbedb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "of the keys Reduced noise levels --feedback-- Think about the main purpose of large text keyboards --video-solution-- 3 --text-- Who primarily benefits from the use of large text and braille keyboards --answers-- People with hearing disabilities --feedback-- Think about the type of disabilities that would make standard keyboards more challenging to use People with cognitive disabilities --feedback-- Think about the type of disabilities that would make standard keyboards more challenging to use People with visual disabilitiesPeople with motor disabilities --feedback--\nThink about the type of disabilities that would make standard keyboards more challenging to use --video-solution--\n3\n--text--\nHow do people identify letters, numbers, and symbols in braille keyboards --answers--\nBy feeling patterns of raised dots with their fingers By speaking into the keyboard --feedback--\nThink about how people with visual disabilities can interact with the braille keyboard By using a stylus --feedback--\nThink about how people with visual disabilities can interact with the braille keyboard By reading the keys --feedback--\nThink about how people with visual disabilities can interact with the braille keyboard --video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3593,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a5326a7606a8a766cbedb.md",
      "source_type": "git_repo"
    },
    "token_count": 221,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5211ba296e1fdcd94978cd61856b2c7d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a536f8386288b9ed0a154.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a536f8386288b9ed0a154\ntitle: What Is Voice Recognition Software Used For challengeType: 19\ndashedName: what-is-voice-recognition-software\n--description--\nVoice recognition software helps people with disabilities interact with computers and other digital devices Let's discuss what voice recognition software is and the role it plays in digital inclusion In the context of accessibility, voice recognition tools let people with disabilities use their voice to pass commands to perform various tasks instead of using traditional input devices like keyboards and mice This includes writing emails and other documents, surfing the net, and controlling smart home devices Because voice recognition software tools eliminate the need for physical interaction, they empower people with disabilities with significant independence and control over their environment Here are the specific people who may find voice recognition software significantly helpful:\nPeople with visual impairments, including those with low-vision or blindness Individuals with mobility impairments, such as limited use of hands and arms or conditions like arthritis and carpal tunnel syndrome Those recovering from hand or arm injuries Individuals with cognitive disorders, like memory issues or attention deficit disorders Elderly individuals who might find it easier to use voice commands Note that people with disabilities are not the only ones who use voice recognition technology Law enforcement agencies, gamers, drivers, and busy professionals also use voice recognition tools A few examples of voice recognition software that allows people to interact with their computer include Voice Control for macOS/iOS, Voice Access for Android, and Windows Speech Recognition for Windows (referred to as Voice Access in the most recent versions of Windows) Dragon by Nuance is a popular third-party voice recognition software for Windows --questions--\n--text--\nWhat are the main input devices that voice recognition software replaces --answers--\nFingerprint readers --feedback--\nFocus on the types of tasks voice recognition software is typically used for, and the input devices it can replace in those instances Image scanners --feedback--\nFocus on the types of tasks voice recognition software is typically used for, and the input devices it can replace in those instances Keyboards and mice Webcams --feedback--\nFocus on the types of tasks voice recognition software is typically used for, and the input devices it can replace in those instances --video-solution--\n3\n--text--\nWhich of the following would be the least likely to benefit from voice recognition software --answers--\nElderly people --feedback--\nFocus on the purpose of voice recognition software in enhancing accessibility for various disabilities People with mobility impairments",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4117,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a536f8386288b9ed0a154.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "846fb8a4d8e815fb40572bb24b499f03",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a536f8386288b9ed0a154.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "input devices it can replace in those instances Keyboards and mice Webcams --feedback-- Focus on the types of tasks voice recognition software is typically used for, and the input devices it can replace in those instances --video-solution-- 3 --text-- Which of the following would be the least likely to benefit from voice recognition software --answers-- Elderly people --feedback-- Focus on the purpose of voice recognition software in enhancing accessibility for various disabilities People with mobility impairments--feedback--\nFocus on the purpose of voice recognition software in enhancing accessibility for various disabilities People with low leg movement People with visual impairments --feedback--\nFocus on the purpose of voice recognition software in enhancing accessibility for various disabilities --video-solution--\n3\n--text--\nWhich of the following is not voice recognition software --answers--\nDragon --feedback--\nMost voice recognition software, especially ones that come bundled with operating systems, often include words like \"control\" or \"access\" Focus on the options that don't follow this convention Audacity Voice Control --feedback--\nMost voice recognition software, especially ones that come bundled with operating systems, often include words like \"control\" or \"access\" Focus on the options that don't follow this convention Voice Access --feedback--\nMost voice recognition software, especially ones that come bundled with operating systems, often include words like \"control\" or \"access\" Focus on the options that don't follow this convention --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4117,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a536f8386288b9ed0a154.md",
      "source_type": "git_repo"
    },
    "token_count": 287,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "81a85136c379046c1c21a7413d25c369",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a5361ef88158b25fbfba7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a5361ef88158b25fbfba7\ntitle: What Are Screen Magnifiers Used For challengeType: 19\ndashedName: what-are-screen-magnifiers\n--description--\nScreen magnifiers are tools that help people with low vision and other visual impairments better access digital content and the web Let's delve deeper into what these tools are and the role they play in digital content accessibility Screen magnifiers work by enlarging texts, graphics, and other elements on a computer or mobile device screen Many screen magnifiers allow users to enlarge the display by more than 200% Users can then navigate the page using their pointing device or keyboard Additionally, most magnifiers offer customizable zoom percentages and other features in their settings Screen magnifiers primarily help people with low vision read text, as small fonts in documents or applications can be challenging for them By enlarging the text, they can read emails, articles, and other content without straining their eyes Screen magnifiers also assist with web browsing They help users locate and click on buttons, links, and other interactive elements that might be difficult to see This improved visibility ensures that users can browse websites, fill out forms, and engage in online activities without difficulty Therefore, software developers need to make their digital products accessible to people with low vision Some considerations include:\nUsing scalable fonts so the user can resize the page without the layout breaking Ensuring the user interface adapts to different screen sizes through responsive design Using high-contrast color schemes and customizable colors Implementing a non-sticky and tiny navbar so users can still see content when using magnifiers Using regular HTML text instead of images of text Providing feedback directly next to the element that triggers it, and more All the mainstay Operating Systems have at least one magnifier built into them by their manufacturers:\nmacOS and iOS both have Zoom You can turn it on on macOS by going to Settings, filter by Accessibility, and then click on \"Zoom\" Toggle the \"Use keyboard shortcuts to zoom\" option to enable it You can turn it on on iPhone through Settings > Accessibility > Zoom Android devices have Magnification To turn it on, go to Settings > Special Function > Accessibility> Magnification Since this may vary from device to device, you can search for \"Magnification\" on the settings homepage to access it Windows has Magnifier You can use it by going to Settings > Ease of Access > Magnifier The magnifiers for Linux operating systems vary It is either Zoom or Magnifier",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4792,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a5361ef88158b25fbfba7.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "73048ec5b1112673b1e379f515d4b27f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a5361ef88158b25fbfba7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "on on iPhone through Settings > Accessibility > Zoom Android devices have Magnification To turn it on, go to Settings > Special Function > Accessibility> Magnification Since this may vary from device to device, you can search for \"Magnification\" on the settings homepage to access it Windows has Magnifier You can use it by going to Settings > Ease of Access > Magnifier The magnifiers for Linux operating systems vary It is either Zoom or MagnifierApart from the ones built into operating systems, some useful third party screen magnifiers are:\nZoomText for Windows ClaroView for both macOS and Windows iZoom for Windows Zoomify - Screen Magnifier for macOS LunarPluse for Windows Loupe for macOS --questions--\n--text--\nHow do most screen magnifiers work --answers--\nBy providing text-to-speech functionality --feedback--\nFocus on how screen magnifiers help users with low vision increase the size of various elements on their screens, not just text By enlarging the texts, graphics, and other elements on a computer or mobile device screen By providing a ruler around every element on the page --feedback--\nFocus on how screen magnifiers help users with low vision increase the size of various elements on their screens, not just text By enlarging only the texts on a screen for better visibility --feedback--\nFocus on how screen magnifiers help users with low vision increase the size of various elements on their screens, not just text --video-solution--\n2\n--text--\nWhich of these should a developer do to make their digital products friendly to screen magnifiers --answers--\nUse big fonts only --feedback--\nThink about how content adjusts to different screen sizes for better responsiveness Disable zooming to keep the layout intact --feedback--\nThink about how content adjusts to different screen sizes for better responsiveness Rely only on images to convey information --feedback--\nThink about how content adjusts to different screen sizes for better responsiveness Make their pages respond to different screen sizes --video-solution--\n4\n--text--\nWhich of the following is a third-party screen magnifier --answers--\nZoom\n--feedback--\nRefer to the end of the lecture for the answer Loops\n--feedback--\nRefer to the end of the lecture for the answer ZoomText\nLoup\n--feedback--\nRefer to the end of the lecture for the answer --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4792,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a5361ef88158b25fbfba7.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b0a9e365d467c21744dcc514b8769ae0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a533e6041c28ad680eb8f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a533e6041c28ad680eb8f\ntitle: What Are Alternative Pointing Devices Such as Trackballs, Joysticks, and Touchpads Used For challengeType: 19\ndashedName: what-are-alternative-pointing-devices\n--description--\nAlternative pointing devices are input devices that make good alternatives to the traditional mouse They are essential for improving computer accessibility for those with disabilities, forelimb impairments, and limited mobility Common examples of alternative pointing devices are trackballs, joysticks, and touchpads A trackball is a stationary pointing device that consists of a large, movable ball within a socket It also includes additional buttons for clicking and performing other functions Unlike the traditional mouse, which requires movement around a surface to control the cursor, a trackball remains in place Users manipulate the ball directly with their fingers, thumb, or palm to move the cursor on the screen Some traditional mice also have a trackball on the top or side These mice could make a good starting point if you want to gradually switch to a trackball Trackballs reduce the physical movement the user needs for navigation, making them ideal for users with mobility issues Apart from that, if you need high precision and have limited desk space, a trackball is more ideal than a traditional mouse A joystick is a pointing device primarily designed for games and certain industrial applications like machinery control It consists of a lever that pivots up, down, left, and right, and often includes additional buttons for various actions\nJoysticks provide precise control over movement and actions within digital environments This makes them popular for flight simulators, cranes, driving games, and other applications requiring precise directional input Because joysticks accommodate larger and more deliberate movements, they are beneficial for individuals with tremors and unsteady hands They also reduce the strain and pain that comes with repetitive movements, making them ideal for individuals with arthritis and carpal tunnel syndrome A touchpad is a flat, touch-sensitive device built into laptops and some keyboards It allows users to control the cursor on the screen by sliding their fingers across its surface Apart from the surface for cursor control, touchpads also feature buttons that emulate the actions of a traditional mouse, such as right-click and left-click Most people see touchpads as a better alternative to a mouse because they significantly enhance navigation by supporting multi-touch gestures like pinch-to-zoom, two-finger scrolling, tap-to-click, and three-finger swipes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4783,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a533e6041c28ad680eb8f.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4a0dc3e8b125ce4df878cab69bfb5ab6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a533e6041c28ad680eb8f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "device built into laptops and some keyboards It allows users to control the cursor on the screen by sliding their fingers across its surface Apart from the surface for cursor control, touchpads also feature buttons that emulate the actions of a traditional mouse, such as right-click and left-click Most people see touchpads as a better alternative to a mouse because they significantly enhance navigation by supporting multi-touch gestures like pinch-to-zoom, two-finger scrolling, tap-to-click, and three-finger swipesTouchpad is ideal for individuals with low arm or hand movement because the forelimb is almost always stationary while using it It is also suitable for people with arthritis and joint pain because they don't get to move their arms too much --questions--\n--text--\nWhat kind of device are trackball, joystick, and touchpad --answers--\nOutput devices --feedback--\nLook out for the general name for the devices that help you interact with and control what appears on your screen Input/output devices --feedback--\nLook out for the general name for the devices that help you interact with and control what appears on your screen Pointing devices VDU devices --feedback--\nLook out for the general name for the devices that help you interact with and control what appears on your screen --video-solution--\n3\n--text--\nWhich device supports multi-touch gestures like pinch-to-zoom, two-finger scrolling, tap-to-click, and three-finger swipes --answers--\nThe traditional mouse --feedback--\nThink about the device that allows for direct touch interactions and supports various gestures Touchpad Joystick --feedback--\nThink about the device that allows for direct touch interactions and supports various gestures Trackballs --feedback--\nThink about the device that allows for direct touch interactions and supports various gestures --video-solution--\n2\n--text--\nWhich pointing device is primarily designed for games and specific industrial applications --answers--\nJoystick Trackball --feedback--\nPointing device that provides precise control in gaming Review the middle part of the lecture where this was\ndiscussed Mouse --feedback--\nPointing device that provides precise control in gaming Review the middle part of the lecture where this was discussed Trackpad or touchpad --feedback--\nPointing device that provides precise control in gaming Review the middle part of the lecture where this was discussed --video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4783,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a533e6041c28ad680eb8f.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "58be51bb49130a999a101869a8987a39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a537f05f3798bd4f57d2d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a537f05f3798bd4f57d2d\ntitle: What Are Some Common Accessibility Auditing Tools to Use challengeType: 19\ndashedName: what-are-some-common-accessibility-auditing-tools\n--description--\nAccessibility is a crucial yet often overlooked aspect of digital content When making your digital content accessible, it's important to ensure it meets accessibility standards An accessibility auditing tool is an application that helps you improve the accessibility of your digital content by reporting accessibility issues that can be easily found through automated testing This content includes websites, web applications, and mobile apps It is important to note that while automated accessibility tools have a role in improving accessibility, they typically will only find about a third of all possible accessibility issues Therefore, it is important not to rely on them entirely to evaluate the accessibility of your content Manual testing, preferably by people with disabilities, will always be required to ensure that your content is as accessible as possible Let's look at some free tools that can help you improve the accessibility of your digital content Google Lighthouse is a popular web metric checker you can use directly within Chrome DevTools or online This means you can check not only live websites but also locally-developed ones The metrics you can check include accessibility, SEO, best practices, and performance To use Lighthouse, open your DevTools by pressing F12 and switching to the Lighthouse tab Select the metrics you want to check, choose the device you want to test on, and click the \"Analyze page load\" button An accessibility score will appear after the check is complete, along with a list of any issues that need fixing If you want more reliable metrics, consider using the web version The downside is that it doesn't support testing local websites You can access the web version on pagespeed web dev WAVE is another reliable accessibility checker you can use as a Chrome extension or on the web All you need to do is enter the URL of your website and a comprehensive accessibility report will be generated for you This report includes accessibility features implemented, ARIA, and contrasts The IBM Equal Accessibility Checker is another robust tool for improving digital content accessibility With it, you can scan your websites for accessibility issues and generate a detailed report You can use it as a Chrome extension or Firefox add-on To use the IBM Accessibility Checker as a Chrome extension, download it from the Chrome web store Open your Devtools by pressing F12 and selecting the \"Accessibility Checker\" tab located in the Elements panel",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5039,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a537f05f3798bd4f57d2d.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "eb96de1bdabd576205730a8765efba00",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a537f05f3798bd4f57d2d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "and contrasts The IBM Equal Accessibility Checker is another robust tool for improving digital content accessibility With it, you can scan your websites for accessibility issues and generate a detailed report You can use it as a Chrome extension or Firefox add-on To use the IBM Accessibility Checker as a Chrome extension, download it from the Chrome web store Open your Devtools by pressing F12 and selecting the \"Accessibility Checker\" tab located in the Elements panelClick the scan button to start the check and a report will be generated for you You can export the report as a spreadsheet and an HTML file by clicking the \"Export XLS\" button Please keep in mind, while these automated tools help you make your content more accessible, a perfect score from any of them does not mean that your content is entirely accessible The range of issues that these tools test for is limited, and manual testing will always be needed to ensure a more accessible experience for everyone --questions--\n--text--\nWhich of these best describes an accessibility auditing tool --answers--\nIt automatically fixes all accessibility issues\n--feedback--\nConsider the role of the tool in assessing accessibility It evaluates how accessible your digital content is\nIt only checks mobile apps\n--feedback--\nConsider the role of the tool in assessing accessibility It requires no manual input\n--feedback--\nConsider the role of the tool in assessing accessibility --video-solution--\n2\n--text--\nWhich of these describes how you can use the IBM Equal Access Accessibility Checker --answers--\nIt can be used only as a desktop application --feedback--\nThink about the different ways you can integrate it into your workflow It can be used without any development integration --feedback--\nThink about the different ways you can integrate it into your workflow It's exclusively for mobile apps --feedback--\nThink about the different ways you can integrate it into your workflow It can be used as a Chrome extension, Firefox addon, or NPM package --video-solution--\n4\n--text--\nWhich of these is a limitation of using the web version of the tool on Google Lighthouse --answers--\nIt provides unreliable metrics --feedback--\nThink about what the web version of Lighthouse cannot do with certain types of websites It can only test local websites --feedback--\nThink about what the web version of Lighthouse cannot do with certain types of websites It cannot test local websites It doesn't support mobile testing --feedback--\nThink about what the web version of Lighthouse cannot do with certain types of websites --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5039,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a537f05f3798bd4f57d2d.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8d76fca4192264c901f0f353e9d9c376",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-semantic-html\\67298243760ae980de5266db.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67298243760ae980de5266db\ntitle: Why Should You Care About Semantic HTML challengeType: 19\ndashedName: why-should-you-care-about-semantic-html\n--description--\nSemantics are the meaning of words, or phrases, in a language In HTML, which is a language, elements have their own semantic meaning too In fact, you can think of your HTML document like you would a text document And much like a text document, you might have headings, images, bold text, and other formatting The semantic meaning of an element refers to what special information that element conveys The semantic meaning of a p element, for example, is a paragraph of text:\n```html\nLet me tell you about my fantastic holiday in Paris I saw the impressive Eiffel Tower up close ```\nMost elements have semantic meaning The div element is one of the very few that does not But why is this important First and foremost, using proper semantic HTML will ensure the best experience for users with assistive technology like screen readers But also, semantic HTML can improve your search rankings This is referred to as search engine optimization, or SEO Finally, using correct semantic elements can improve your development experience Rather than having to sift through a bunch of developments to find your navigation bar, you can edit the nav element directly and know what you're changing Throughout this section, you will learn more about these topics, how to use semantic elements, and why semantic HTML is so important --questions--\n--text--\nWhat does semantic refer to --answers--\nNit picking the code --feedback--\nIt has to do with how a language is written or spoken The meaning and structure of words/phrases in a language It's a grammar term unrelated to programming --feedback--\nIt has to do with how a language is written or spoken Dictionary definitions --feedback--\nIt has to do with how a language is written or spoken --video-solution--\n2\n--text--\nWhich element does not have semantic meaning --answers--\ndiv\nh1\n--feedback--\nIt's an element used mainly as a container for more elements p\n--feedback--\nIt's an element used mainly as a container for more elements img\n--feedback--\nIt's an element used mainly as a container for more elements --video-solution--\n1\n--text--\nWhy should you care about semantic HTML --answers--\nIt improves SEO --feedback--\nThere are many reasons It improves accessibility --feedback--\nThere are many reasons It improves developer experience",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2749,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-semantic-html\\67298243760ae980de5266db.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0f541fd386f23feb619e4964af7384ef",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-semantic-html\\67298243760ae980de5266db.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "not have semantic meaning --answers-- div h1 --feedback-- It's an element used mainly as a container for more elements p --feedback-- It's an element used mainly as a container for more elements img --feedback-- It's an element used mainly as a container for more elements --video-solution-- 1 --text-- Why should you care about semantic HTML --answers-- It improves SEO --feedback-- There are many reasons It improves accessibility --feedback-- There are many reasons It improves developer experience--feedback--\nThere are many reasons All of the above\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2749,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-semantic-html\\67298243760ae980de5266db.md",
      "source_type": "git_repo"
    },
    "token_count": 119,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8291e48f8425c7e248329e2e2a00674d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a538c029f9e8c1687460e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a538c029f9e8c1687460e\ntitle: How Does Proper Heading Level Structure Affect Accessibility challengeType: 19\ndashedName: how-does-proper-heading-level-structure-affect-accessibility\n--description--\nYou previously learned about proper heading level structure Now, you will learn how a good heading structure affects accessibility Proper use of headings creates a visual hierarchy for users to navigate and understand your web page Using a logical heading hierarchy allows screen reader users to understand the structure of your content and navigate your content quickly Creating appropriate heading text that accurately describes the content that follows helps everyone find the information they need on your site As an additional benefit, well-formed headings may also improve the SEO of your site Think of headings as the foundation of your site Without a good foundation, the accessibility of your content will suffer Let's look at how you can make your web projects friendly for people who use assistive technologies by using headings correctly Headings, ranging from h1 to h6, create a navigational structure for screen reader users Screen readers can list all headings on a page, allowing users to jump directly to the sections they need So, correctly arranging headings is important for helping these users avoid unnecessary content and finding the information they are looking for quickly People with partial sight or cognitive disabilities need to process information quickly and easily to reduce cognitive load While proper arrangement of headings is important, it is also necessary to make heading texts clear and descriptive Here are some key practices to follow to use headings properly:\nUse headings in a hierarchy that reflects clear organization For example, the page title should be an h1, major sections should be introduced with h2 headings, subsections with h3 , and so on, down to h6 Don't skip from h1 to h3, or from h2 to h4, and so on Use clear and descriptive text that summarizes the content that follows each heading Don't use a heading in isolation – some content must follow the heading Use appropriate headings where necessary instead of formatting text to look like headings Each page should have a single h1 element representing the main topic or title Here's a basic markup that represents how you should use headings on a page:\n```html\nWhat is HTML\nIntroduction to HTML\nHTML stands for HyperText Markup Language It is the standard language for\ncreating web pages",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5207,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a538c029f9e8c1687460e.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "e0af152ccd4f9eb73925a5c17ba714d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a538c029f9e8c1687460e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Don't use a heading in isolation – some content must follow the heading Use appropriate headings where necessary instead of formatting text to look like headings Each page should have a single h1 element representing the main topic or title Here's a basic markup that represents how you should use headings on a page: ```html What is HTML Introduction to HTML HTML stands for HyperText Markup Language It is the standard language for creating web pagesHistory of HTML\nHTML began to take shape in the early 90s\nOrigins\nHTML was created by Tim Berners-Lee in 1991 It has evolved significantly\nover the years ```\n--questions--\n--text--\nHow does proper heading structure help those using screen readers --answers--\nIt provides visual styling for the content --feedback--\nThink about how screen readers assist users in understanding and navigating through the webpage content It helps screen readers generate a summary of the content --feedback--\nThink about how screen readers assist users in understanding and navigating through the webpage content It allows screen readers to navigate and skip to different sections easily It improves the loading speed of the webpage --feedback--\nThink about how screen readers assist users in understanding and navigating through the webpage content --video-solution--\n3\n--text--\nWhy is it important to use headings properly for users who rely on keyboards --answers--\nIt improves the visual appeal of the webpage --feedback--\nThink about how proper headings can enhance the navigation experience for users who do not use a mouse It allows users to print the webpage more easily --feedback--\nThink about how proper headings can enhance the navigation experience for users who do not use a mouse It lets users jump between sections without the need to tab through every link It helps users download the webpage faster --feedback--\nThink about how proper headings can enhance the navigation experience for users who do not use a mouse --video-solution--\n3\n--text--\nWhich of these is one of the best practices for using headings on a web page --answers--\nSkipping from h1 to h3 to save time --feedback--\nThink about making sure heading texts are clear for both users and those who use assistive technologies Using clear and descriptive texts that summarize the following content Using any heading level in isolation without any following content --feedback--\nThink about making sure heading texts are clear for both users and those who use assistive technologies Using multiple h1 tags on a single page for emphasis --feedback--\nThink about making sure heading texts are clear for both users and those who use assistive technologies",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5207,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a538c029f9e8c1687460e.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "807bbd949eaea111052fdbc1b7a2809e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a538c029f9e8c1687460e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "clear for both users and those who use assistive technologies Using clear and descriptive texts that summarize the following content Using any heading level in isolation without any following content --feedback-- Think about making sure heading texts are clear for both users and those who use assistive technologies Using multiple h1 tags on a single page for emphasis --feedback-- Think about making sure heading texts are clear for both users and those who use assistive technologies--video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5207,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-accessibility-and-good-html-structure\\672a538c029f9e8c1687460e.md",
      "source_type": "git_repo"
    },
    "token_count": 90,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "50493ac817fa7bd62fd1f5b553549b21",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-semantic-html\\672985445d7da807c6b4f406.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672985445d7da807c6b4f406\ntitle: Why is it Important to Have Good Structural Hierarchy challengeType: 19\ndashedName: why-is-it-important-to-have-good-structural-hierarchy\n--description--\nThe most important aspect of creating a structural hierarchy is the proper use of heading elements Heading elements are numbered as h1, h2, h3, and so on These numbers represent the heading level for that element Much like a text document, you do not want to use heading levels in the incorrect order Your h1 element is your top-level heading You will rarely have more than one of these on a page, and it should typically come before all of your content Your h2 element is your subheading It should always come after your h1 and might come after some introductory text Unlike an h1 element, you can have multiple h2 elements on your page You'll often do this to delineate different sections of content Following the pattern, your h3 element should always come after an h2 element That is, you should never skip directly from h1 to h3 You can, however, have multiple heading elements at the same level For example, this code is correct:\n```html\nfreeCodeCamp\nLearn Front-End Development\nLearn Back-End Development\n```\nBut this code would not be correct, because h3 comes before h2:\n```html\nfreeCodeCamp\nLearn Front-End Development\nLearn Back-End Development\n```\nIt may be tempting to use a specific heading element because of its styling, such as h1 for large text:\n```html\nHere is some\nLarge Text\n```\nInstead, you should choose the appropriate element for your document structure and use CSS to achieve the styling you'd like Using the right hierarchy is important for accessibility Assistive technologies, like screen readers, rely on the structure of a web page to determine how to parse and announce that web page to the user Using an h3 element after an h1 might cause a screen reader user to believe they have accidentally skipped over important content, due to the lack of an h2 element Proper structure is also important for SEO Search engines use automation to parse the content of your web page and determine when and where it should show up in results If your structure is malformed, search engines may not be able to rank you very well in the relevant search results",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4433,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-semantic-html\\672985445d7da807c6b4f406.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f49ff0f3d82d374cfe888a66a58b0f09",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-semantic-html\\672985445d7da807c6b4f406.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "an h1 might cause a screen reader user to believe they have accidentally skipped over important content, due to the lack of an h2 element Proper structure is also important for SEO Search engines use automation to parse the content of your web page and determine when and where it should show up in results If your structure is malformed, search engines may not be able to rank you very well in the relevant search resultsFinally, depending on how incorrect your structure is, your HTML may not even be technically valid When this happens, the web browser has to effectively guess what you meant to do And what it guesses might not even be what you want at all As you have learned today, there are many reasons to use the proper structural hierarchy for your page Keep this in mind as you build new projects --questions--\n--text--\nWhy is structural hierarchy important --answers--\nAccessibility\n--feedback--\nThere are many reasons why structural hierarchy is important SEO\n--feedback--\nThere are many reasons why structural hierarchy is important So browsers know what we mean\n--feedback--\nThere are many reasons why structural hierarchy is important All of the above\n--video-solution--\n4\n--text--\nWhich heading element must precede an h3 element --answers--\nh5\n--feedback--\nThink about the order of headings For example, an h2 should come after an h1 h2\nh6\n--feedback--\nThink about the order of headings For example, an h2 should come after an h1 h4\n--feedback--\nThink about the order of headings For example, an h2 should come after an h1 --video-solution--\n2\n--text--\nHow should you create larger text on your page --answers--\nUse any element you want, and style it with CSS --feedback--\nCSS controls your style, and you want to select the right element for the job Use an h1 because it already has large text --feedback--\nCSS controls your style, and you want to select the right element for the job Use a span element --feedback--\nCSS controls your style, and you want to select the right element for the job Use the correct structural element, and style it with CSS --video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4433,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-semantic-html\\672985445d7da807c6b4f406.md",
      "source_type": "git_repo"
    },
    "token_count": 440,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "721a8f916b1f2d1d52a5f50a288ad70a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-semantic-html\\672990ecf71a852804ababe7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672990ecf71a852804ababe7\ntitle: What Is the Difference Between Presentational and Semantic HTML challengeType: 19\ndashedName: what-is-the-difference-between-presentational-and-semantic-html\n--description--\nPresentational HTML focuses on the appearance and style of the content In the early days of HTML, developers would use elements like the center, big, and font elements But in modern web development you shouldn't use these types of elements, because of their limitations and negative impact on accessibility and maintainability Many presentational HTML elements are deprecated, which means that they are outdated and no longer recommended There are better ways to get the same results However, it is helpful to know that they exist, so we'll take a look at some examples The font element is a deprecated element used to set the font size and color of the text Here's an example of a font element:\nhtml\n<font size=\"5\" color=\"blue\">This text is blue and large </font>\nThis example sets the color of the text to blue and the size to a value of 5 The range for the size attribute is from 1 to 7, with 1 being the smallest and 7 being the largest The default value is 3, if you don't set the value explicitly While this element still works, you should not use it because the font size and color should always be set in CSS, not in HTML The center element is another deprecated element that is used to center the content horizontally within its container Here's an example of the center element that contains text and a paragraph element:\n```html\nThis text is centered HTML is awesome ```\nIn the browser, you would see all of the content within the center element centered horizontally And next, we have the big element This is another deprecated presentational HTML element that makes the enclosed text one level bigger than its surrounding text Here we have an example that defines a paragraph with two parts:\n```html\nThis text has a normal font size This text is larger ```\nThe first part has normal sized text, while the second part enclosed within the big element will be displayed in a larger font size In the browser, you would see the text within the big element looks larger compared to the surrounding text However, remember that font size should always be set with CSS, so you should not use this element in modern HTML These were examples of presentational HTML elements But all of them are deprecated and no longer recommended",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-semantic-html\\672990ecf71a852804ababe7.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "11f89b2249fe169f0d98b7edd80c7e64",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-semantic-html\\672990ecf71a852804ababe7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "sized text, while the second part enclosed within the big element will be displayed in a larger font size In the browser, you would see the text within the big element looks larger compared to the surrounding text However, remember that font size should always be set with CSS, so you should not use this element in modern HTML These were examples of presentational HTML elements But all of them are deprecated and no longer recommendedSo what should you use instead Let's see Semantic HTML is now the recommended practice It describes the content of the elements, so it's much easier to read, understand, and maintain Search engines can easily understand your website when you use semantic HTML It's also helpful for accessibility purposes, because screen readers need semantic information to describe what's on the web page Examples of semantic HTML elements include:\nThe header element for defining the header of the document, or section The navigation section element, nav, for sections with navigation links The section element for grouping related information The figure element for illustrations and diagrams This is an example of a header element that contains a navigation section element:\n```html\nHome\nAbout\nContact\n```\nThe semantic elements clearly show their purpose within the HTML structure There are many different semantic HTML elements You will definitely find one that fits the needs of your project Great work Now you know the difference between presentational and semantic HTML: semantic HTML describes the content, while presentational HTML focuses on the appearance --questions--\n--text--\nWhich of the following best describes the difference between presentational and semantic HTML --answers--\nPresentational HTML focuses on content structure, while semantic HTML focuses on appearance --feedback--\nThink about what \"presentation\" and \"semantics\" mean and how they are related to HTML elements Semantic HTML focuses on content structure, while presentational HTML focuses on appearance There is no difference between presentational and semantic HTML --feedback--\nThink about what \"presentation\" and \"semantics\" mean and how they are related to HTML elements Both focus on style, but presentational HTML is more modern --feedback--\nThink about what \"presentation\" and \"semantics\" mean and how they are related to HTML elements --video-solution--\n2\n--text--\nWhich of the following is an example of presentational HTML --answers--\nUsing the header element to define a header --feedback--\nThink about which element directly controls how the content will look Using the nav element to define a navigation section --feedback--\nThink about which element directly controls how the content will look",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-semantic-html\\672990ecf71a852804ababe7.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "1bec810d9bcf0933100e1db419b74395",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-semantic-html\\672990ecf71a852804ababe7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "presentational HTML is more modern --feedback-- Think about what \"presentation\" and \"semantics\" mean and how they are related to HTML elements --video-solution-- 2 --text-- Which of the following is an example of presentational HTML --answers-- Using the header element to define a header --feedback-- Think about which element directly controls how the content will look Using the nav element to define a navigation section --feedback-- Think about which element directly controls how the content will lookUsing the article element to define independent content --feedback--\nThink about which element directly controls how the content will look Using the center element to center the content --video-solution--\n4\n--text--\nWhich of the following is an example of semantic HTML --answers--\nUsing <font color=\"red\"> to make text red --feedback--\nThink about which element describes the meaning of the content Using the center element to center the content --feedback--\nThink about which element describes the meaning of the content Using the nav element to represent a navigation section\nUsing the big element to make text bigger --feedback--\nThink about which element describes the meaning of the content --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5921,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-importance-of-semantic-html\\672990ecf71a852804ababe7.md",
      "source_type": "git_repo"
    },
    "token_count": 233,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "94747881476271ad3b72a3137570a829",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a53cf67140d8cd85d4b0f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a53cf67140d8cd85d4b0f\ntitle: What Is the Purpose of WAI-ARIA, and How Does It Work challengeType: 19\ndashedName: what-is-the-purpose-of-wai-aria\n--description--\nMaking static content accessible can be relatively straightforward, but dynamic content can be more challenging This is where WAI-ARIA comes in Let's look at what WAI-ARIA is, its purpose, how it works, and some examples WAI-ARIA stands for Web Accessibility Initiative - Accessible Rich Internet Applications It's a specification that enhances accessibility for dynamic content and UI (User Interface) components Note that WCAG and WAI-ARIA are not the same WCAG provides general guidelines for web accessibility, while WAI-ARIA offers specific rules for making dynamic and interactive content accessible for users of assistive technologies So, the primary purpose of WAI-ARIA is to improve accessibility for dynamic content and UI components that do not have native HTML equivalents WAI-ARIA works by introducing a set of attributes you can add to HTML elements to provide additional semantic information These attributes are categorized into roles, states, and properties ARIA role defines the purpose of an element within a website or web app Here is an example of setting the role to button for a div element ```html\nClick Me\n```\nBy doing this you are indicating to assistive technology that the element is a button Roles do not provide any functionality however Merely giving this div a role of button will not make it act like a button To make it look and behave like a button you would need to use CSS and JavaScript to get the desired result It is always better to use the native button or input element with type=\"button\" instead ARIA properties provide additional details about elements For example, the aria-labelledby property lets you connect an element to a specific label:\n```html\nAbout freeCodeCamp\nLearn More\n```\nThis will make the elements understandable and navigable for users of assistive technologies To get the best out of WAI-ARIA, try to stick with native HTML whenever possible since it generally provides more accessibility out of the box Use WAI-ARIA only when HTML falls short, and don’t forget to test with assistive technologies like screen readers, or have people with disabilities test your work",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4425,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a53cf67140d8cd85d4b0f.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "af77076b795fbb57c5f3fa9e1e542d78",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a53cf67140d8cd85d4b0f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "an element to a specific label: ```html About freeCodeCamp Learn More ``` This will make the elements understandable and navigable for users of assistive technologies To get the best out of WAI-ARIA, try to stick with native HTML whenever possible since it generally provides more accessibility out of the box Use WAI-ARIA only when HTML falls short, and don’t forget to test with assistive technologies like screen readers, or have people with disabilities test your workAlso, make sure your WAI-ARIA states and properties update with the content in real time Avoid overusing ARIA as it can be confusing many times --questions--\n--text--\nWhat is the primary purpose of WAI-ARIA attributes in HTML --answers--\nTo change the visual appearance of elements --feedback--\nFocus on how WAI-ARIA enhances HTML elements accessibility To provide additional semantic information for accessibility To display tooltips on elements --feedback--\nFocus on how WAI-ARIA enhances HTML elements accessibility To add animations to elements --feedback--\nFocus on how WAI-ARIA enhances HTML elements accessibility --video-solution--\n2\n--text--\nHow does WAI-ARIA work to enhance web accessibility --answers--\nBy improving page load speed --feedback--\nConsider how WAI-ARIA categorizes roles, states, and properties By introducing attributes that provide additional semantic information By encrypting data --feedback--\nConsider how WAI-ARIA categorizes roles, states, and properties By creating visual effects for elements --feedback--\nConsider how WAI-ARIA categorizes roles, states, and properties --video-solution--\n2\n--text--\nWhat does WAI-ARIA stand for --answers--\nWeb Accessibility Initiative - Advanced Responsive Internet Applications\n--feedback--\nFocus on the accessibility aspect and its impact on dynamic content and UI components Web Accessibility Interface - Accessible Resource Internet Applications\n--feedback--\nFocus on the accessibility aspect and its impact on dynamic content and UI components Web Accessibility Initiative - Accessible Rich Internet Applications\nWeb Application Interface - Accessibility and Richness\n--feedback--\nFocus on the accessibility aspect and its impact on dynamic content and UI components --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4425,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a53cf67140d8cd85d4b0f.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1a7bd1b17cc65523e765b20b8f90e1c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a549231b8728f7171ed9d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a549231b8728f7171ed9d\ntitle: What Are ARIA Roles challengeType: 19\ndashedName: what-are-aria-roles\n--description--\nARIA stands for Accessible Rich Internet Applications ARIA roles specify the semantic meaning of HTML elements They're essential for making web content accessible to people who use assistive technologies, like screen readers HTML has semantic and non-semantic elements, based on whether they convey meaning about their content Many semantic HTML elements already have an ARIA role assigned by default For example, the button element has a default ARIA role of button But non-semantic elements don't have a role For example, screen readers will not know how to interpret the purpose of a div if you don't specify its role explicitly To specify the ARIA role of an element, you just need to add the role attribute, like this role=\"ARIA role\", where value is the name of a role in the ARIA specification It is important to note that specifying a role on an element only does one thing: It informs assistive technology of the purpose of the element It does not add any functionality or behavior to the element If people expect a role to behave a certain way, it is up to you, the developer, to add that expected behavior For example, adding a role of button to a div does not automatically make it clickable with a mouse or usable with a keyboard It is the responsibility of the developer to add the expected behavior that allows the div to act like a button, and in most cases, it is just better to use the button element There are six main categories of ARIA roles:\nDocument structure roles\nWidget roles\nLandmark roles\nLive region roles\nWindow roles\nAnd Abstract roles\nLet's take a look at them in more detail Document structure roles define the overall structure of the web page With these roles, assistive technologies can understand the relationships between different sections and help users navigate the content However, most of the document structure roles are not used in modern web development because browsers already support equivalent semantic HTML elements, which should be prioritized whenever possible You should specify the roles that don't have an equivalent semantic element For example: toolbar, tooltip, feed, math, presentation, none, and note There are other similar roles but these are the most commonly used ones This is an example of a div with the math ARIA role The div contains a mathematical equation",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6720,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a549231b8728f7171ed9d.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c1f81fe1f1f56e4041f5b1d3e079577e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a549231b8728f7171ed9d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "structure roles are not used in modern web development because browsers already support equivalent semantic HTML elements, which should be prioritized whenever possible You should specify the roles that don't have an equivalent semantic element For example: toolbar, tooltip, feed, math, presentation, none, and note There are other similar roles but these are the most commonly used ones This is an example of a div with the math ARIA role The div contains a mathematical equation```html\nx2 + y2 = 3\n```\nYou'll also notice that the div has an aria-label attribute The value of this attribute should be a string that represents the expression Widget roles define the purpose and functionality of interactive elements, like scrollbars Examples of widget roles include scrollbar, searchbox, separator (when focusable), slider, spinbutton, switch, tab, tabpanel, and treeitem Some of these roles have equivalent semantic elements You should prioritize the semantic element over the role if there is one For example, you should favor using the HTML button element over adding a role of button to a div Landmark roles classify and label the primary sections of a web page Screen readers use them to provide convenient navigation to important sections of a page You should use them sparingly to keep the overall layout simple and easy to understand Examples of landmark roles are banner, complementary, contentinfo, form, main, navigation, region, and search Each of these roles has a corresponding HTML equivalent, such as header, footer, aside, form, main, nav, section, and search If you use the proper HTML elements to define the sections of your page then it is not necessary to explicitly add the role attribute to these elements Live region roles define elements with content that will change dynamically This way, screen readers and other assistive technologies can announce changes to users with visual disabilities These roles include: alert, log, marquee, status, and timer Window roles define sub-windows, like pop up modal dialogues These roles include alertdialog and dialog Please note that it is now considered a best practice to use the HTML dialog element and its associated JavaScript methods instead of manually creating a dialog And finally, we have abstract roles These roles help organize the document They're only meant to be used internally by the browser, not by developers, so you should know that they exist but you shouldn't use them on your websites or web applications With ARIA roles, you can create accessible and inclusive websites and web applications They provide semantic information about the purpose and function of HTML elements",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6720,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a549231b8728f7171ed9d.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ce987b4a300320348c6607498529d3e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a549231b8728f7171ed9d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "JavaScript methods instead of manually creating a dialog And finally, we have abstract roles These roles help organize the document They're only meant to be used internally by the browser, not by developers, so you should know that they exist but you shouldn't use them on your websites or web applications With ARIA roles, you can create accessible and inclusive websites and web applications They provide semantic information about the purpose and function of HTML elementsScreen readers and other assistive technologies use this information to help users understand the content of your page and set expectations for how to use it, which helps ensure  that everyone can have a great user experience --questions--\n--text--\nWhat is the primary purpose of ARIA roles --answers--\nTo define the visual appearance of elements --feedback--\nThink about how ARIA roles help assistive technologies understand the content To improve website performance --feedback--\nThink about how ARIA roles help assistive technologies understand the content To provide semantic information about the purpose of elements To enhance browser compatibility --feedback--\nThink about how ARIA roles help assistive technologies understand the content --video-solution--\n3\n--text--\nWhich category of ARIA roles is used to define the purpose and behavior of sub-windows, like pop-up modal dialogues --answers--\nWidget roles --feedback--\nThink about how to define sub-windows with ARIA roles Document structure roles --feedback--\nThink about how to define sub-windows with ARIA roles Landmark roles --feedback--\nThink about how to define sub-windows with ARIA roles Window roles --video-solution--\n4\n--text--\nWhich category of ARIA roles is used to indicate dynamic content that must be announced to users --answers--\nWidget roles --feedback--\nThink about how to provide updates or alerts to users Document structure roles --feedback--\nThink about how to provide updates or alerts to users Landmark roles --feedback--\nThink about how to provide updates or alerts to users Live region roles --video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6720,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a549231b8728f7171ed9d.md",
      "source_type": "git_repo"
    },
    "token_count": 389,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "e370bb527f8a0bf7cfb074c71a0f6f6c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a54bc58319c8fe6f78ad4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a54bc58319c8fe6f78ad4\ntitle: What Is the aria-hidden Attribute, and How Does It Work challengeType: 19\ndashedName: what-is-the-aria-hidden-attribute\n--description--\nIf you ever need to display content while at the same time hiding it from people who use assistive technology, like screen readers, you can use the aria-hidden attribute You just need to add it to the HTML element that you want to hide and set its value to true, like you can see over here: aria-hidden=\"true\" This attribute hides the element and all of its children from the accessibility tree, while keeping them visible on the page Common use cases include:\nIcons and images that only have a decorative purpose Duplicated content It is important to remember that aria-hidden only hides content from assistive technology, such as screen readers If the content should be hidden from everyone, then you should not use aria-hidden to hide it For example, a hamburger menu that is currently collapsed must be hidden from all keyboard users, not just screen reader users In this case you could set the CSS display property to none on the menu to remove it from the DOM when it is collapsed You should never use aria-hidden to hide an element that is focusable with the keyboard The aria-hidden attribute only removes the element from the accessibility tree It does not remove it from the DOM Thus, it will still be possible for screen reader users to tab to the element, but their screen reader will not announce the element, effectively causing them to focus on \"nothing\" Here's an example where we hide an icon from the accessibility tree by adding the aria-hidden attribute with a value of true We only keep the text exposed to assistive technologies to avoid any confusion that may arise from the redundancy of having both an icon and text for the same purpose html\n<button>\n<i class=\"fa-solid fa-gear\" aria-hidden=\"true\"></i>\n<span class=\"label\">Settings</span>\n</button>\nYou do not need to use aria-hidden when:\nThe HTML element already has a hidden attribute The element or the element's ancestor is already hidden with display: none The element or the element's ancestor is already hidden with visibility: hidden In these three cases, the element is already removed from the DOM and thus hidden from the accessibility tree, so the aria-hidden attribute is not necessary",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5501,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a54bc58319c8fe6f78ad4.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "a59c9b7fb957fc0c5df0703c6a70cf76",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a54bc58319c8fe6f78ad4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "purpose html <button> <i class=\"fa-solid fa-gear\" aria-hidden=\"true\"></i> <span class=\"label\">Settings</span> </button> You do not need to use aria-hidden when: The HTML element already has a hidden attribute The element or the element's ancestor is already hidden with display: none The element or the element's ancestor is already hidden with visibility: hidden In these three cases, the element is already removed from the DOM and thus hidden from the accessibility tree, so the aria-hidden attribute is not necessaryAs with using any ARIA attributes, you should always test with assistive technologies, and preferably having people with disabilities test your work, to make sure that it's easy to understand, even with these hidden elements You should also know that setting aria-hidden to false will not expose the element to assistive technologies if any of its parents has this attribute set to true The aria-hidden attribute is used to hide elements from people who use assistive technology, such as screen reader users While it can be helpful for hiding purely decorative elements and duplicated content, it should be used sparingly to avoid hindering accessibility In general, all content and functionality available on the page should also be available to people using assistive technology The use case for aria-hidden is very narrow and should be limited primarily to making the experience cleaner for screen reader users by removing purely decorative or duplicate information Do not use aria-hidden to hide content that you don’t think screen reader users would be interested in Screen reader users deserve to have access to all information on the page By following these best practices and testing the user experience, you can create inclusive online experiences for everyone --questions--\n--text--\nWhat is the primary purpose of the aria-hidden attribute --answers--\nTo define the visual appearance of an element --feedback--\nThink about how aria-hidden affects the accessibility of elements To improve website performance --feedback--\nThink about how aria-hidden affects the accessibility of elements To hide elements from assistive technologies To enhance browser compatibility --feedback--\nThink about how aria-hidden affects the accessibility of elements --video-solution--\n3\n--text--\nWhen should the aria-hidden attribute be used --answers--\nFor all elements on a web page --feedback--\nThink about the purpose of aria-hidden and when it's appropriate to use it For elements that are visually hidden but still important for the user experience --feedback--\nThink about the purpose of aria-hidden and when it's appropriate to use it",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5501,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a54bc58319c8fe6f78ad4.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "38a077efed914a5d08bdec908b4225b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a54bc58319c8fe6f78ad4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "from assistive technologies To enhance browser compatibility --feedback-- Think about how aria-hidden affects the accessibility of elements --video-solution-- 3 --text-- When should the aria-hidden attribute be used --answers-- For all elements on a web page --feedback-- Think about the purpose of aria-hidden and when it's appropriate to use it For elements that are visually hidden but still important for the user experience --feedback-- Think about the purpose of aria-hidden and when it's appropriate to use itFor decorative elements that do not contribute to the main content For elements that are dynamically added or removed --feedback--\nThink about the purpose of aria-hidden and when it's appropriate to use it --video-solution--\n3\n--text--\nWhat are the potential risks of overusing the aria-hidden attribute --answers--\nReduced website performance --feedback--\nThink about how hiding elements can affect the user experience Incompatibility with older browsers --feedback--\nThink about how hiding elements can affect the user experience Hindered accessibility for users with disabilities Increased file size --feedback--\nThink about how hiding elements can affect the user experience --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5501,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a54bc58319c8fe6f78ad4.md",
      "source_type": "git_repo"
    },
    "token_count": 224,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "eb0659efab7619ddaa5db0801819d597",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a551975938a916c74802c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a551975938a916c74802c\ntitle: What Is the aria-describedby Attribute, and How Does It Work challengeType: 19\ndashedName: what-is-the-aria-describedby-attribute\n--description--\nThe aria-describedby attribute is used to provide additional information about an element to screen reader users by referencing existing content on the page It creates a programmatic association between the element and the content (technically referred to as an accessible description), which screen readers can use to inform users of the additional information when they interact with the element The most common use for aria-describedby is to associate instructions and error messages with form inputs Due to the various methods screen reader users have for navigating a page, they may miss these messages when navigating between inputs Using aria-describedby helps ensure that they will hear them Let's take a look at a few examples to understand how it works In this first example, we have a form element that accepts a password:\n```html\nPassword:\nYour password must be at least 8 characters long ```\nWe are using a label element for the Password text and associating that with the password input field We also have a paragraph element that describes the password requirements We are using the aria-describedby attribute to associate the password input field with the password requirements in the paragraph element When a screen reader user interacts with this input, their screen reader will announce the name of the input (Password) and may then also announce the password requirements This is not an absolute guarantee however as some screen readers may not automatically announce the additional content, or may only announce it in specific circumstances This is not uncommon Each screen reader is different and handles ARIA attributes in their own way This does not negate the use of aria-describedby, as it will benefit screen reader users in general Another good use case for the aria-describedby attribute is when you have a delete button Here is an example of a delete button followed by a message describing what will happen when the button is clicked:\n```html\nDelete\nWarning All deletions are permanent ```\nJust like in the earlier example, we associate the delete button with the message using the aria-describedby attribute The id value and the value of the aria-describedby attribute must match The aria-describedby attribute is a powerful attribute that can be used to help ensure that additional information about an element is provided to screen reader users when they interact with the element",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5230,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a551975938a916c74802c.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1ed842490c8fbe4c3ff4d2be7196c97a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a551975938a916c74802c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "happen when the button is clicked: ```html Delete Warning All deletions are permanent ``` Just like in the earlier example, we associate the delete button with the message using the aria-describedby attribute The id value and the value of the aria-describedby attribute must match The aria-describedby attribute is a powerful attribute that can be used to help ensure that additional information about an element is provided to screen reader users when they interact with the elementIt is most commonly used to associate instructions and error messages with form inputs in order to reduce the chance that screen reader users will miss these messages as they navigate the form --questions--\n--text--\nWhat is the purpose of the aria-describedby attribute in HTML --answers--\nTo specify a unique identifier for an element --feedback--\nIt helps screen readers provide more context about elements to users with disabilities To provide additional information about an element to assistive technologies To define the language of an HTML document --feedback--\nIt helps screen readers provide more context about elements to users with disabilities To control the visibility of an HTML element --feedback--\nIt helps screen readers provide more context about elements to users with disabilities --video-solution--\n2\n--text--\nIn the examples provided, how does the aria-describedby attribute enhance the user experience for form fields --answers--\nIt changes the visual appearance of the form fields --feedback--\nThink about additional information helpful for users filling out the form It associates additional descriptive text with form fields to provide more context or instructions It validates the form fields' input values --feedback--\nThink about additional information helpful for users filling out the form It automatically populates the form fields with default values --feedback--\nThink about additional information helpful for users filling out the form --video-solution--\n2\n--text--\nHow is the aria-describedby attribute used in the example with the close button and modal dialog --answers--\nIt is used to define the size of the close button --feedback--\nIt helps users understand what happens when the close button is clicked It provides a label for the close button using a separate text --feedback--\nIt helps users understand what happens when the close button is clicked It associates the close button with a description of its action to assistive technologies It controls the color of the close button --feedback--\nIt helps users understand what happens when the close button is clicked --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5230,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a551975938a916c74802c.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f1f1f7aaf247f55d4788ce1dc71cfce9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a54a6675c168faa84252d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672a54a6675c168faa84252d\ntitle: What Are the Roles of the aria-label and aria-labelledby Attributes challengeType: 19\ndashedName: what-are-the-roles-of-the-aria-label-and-aria-labelledby-attributes\n--description--\nIt is important to make sure that all users, including those living with disabilities, can access websites without issues For people using screen readers, the aria-label and aria-labelledby attributes provide crucial information about page elements that might be unclear or invisible Let's look at what the aria-label and aria-labelledby attributes are and the roles they play in making the web accessible to people with visual impairments and related disabilities You'll notice both aria-label and aria-labelledby are prefixed with aria So what does that mean ARIA stands for Accessible Rich Internet Applications It's a set of attributes prefixed with aria-, which lets developers communicate the purpose of elements to assistive technologies The aria-label attribute is an invisible label for interactive elements It adds a text label to an element that screen readers can read aria-label is especially useful for elements that do not have visible text but still need to be described by screen readers For example, buttons with only icons often need aria-label to convey their purpose Here is an example:\nhtml\n<button aria-label=\"Search\">\n<i class=\"fas fa-search\"></i>\n</button>\nIn this case, a screen reader may announce this button as Search, button, even though the button only contains an icon The aria-label attribute tells screen readers what text to use in place of the icon If the button contained the text \"Search\" instead of an icon, then there would be no need for the aria-label attribute as the text would provide the label for the button For input elements, the aria-label attribute provides a label directly if there isn't a visible label associated with the input The aria-labelledby attribute does the exact same thing as the aria-label attribute, but instead of defining the text directly in the attribute, you use a reference to text that already exists on the page The existing text must have an id attribute, which will be used for the reference value in the aria-labelledby attribute Here's an example:\nhtml\n<input type=\"text\" aria-labelledby=\"search-btn\">\n<button type=\"button\" id=\"search-btn\">Search</button>\nIn this case, the text for the button is being used as the label for the search input Screen readers will announce the input as something like Search, edit",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6440,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a54a6675c168faa84252d.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "3cac44ca72782a936e84730fc9afd7c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a54a6675c168faa84252d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "text directly in the attribute, you use a reference to text that already exists on the page The existing text must have an id attribute, which will be used for the reference value in the aria-labelledby attribute Here's an example: html <input type=\"text\" aria-labelledby=\"search-btn\"> <button type=\"button\" id=\"search-btn\">Search</button> In this case, the text for the button is being used as the label for the search input Screen readers will announce the input as something like Search, editIf you later decide you want to change the button text to Find, the label for the input will automatically be updated to the new text since it is referencing the button text Combining multiple id values into a single aria-labelledby attribute value is also possible Here's how that works:\n```html\nVolume\nAdjust the volume level\n```\nFor the slider, the screen reader will look out for the content of the volume-label and volume-details elements and announce Volume Adjust the volume level You've seen that both aria-label and aria-labelledby attributes help screen readers understand what elements do So, which one should you use Since they both provide the same functionality, either can be used, but there may be a few advantages to using aria-labelledby over aria-label:\nIf someone is using a translation service to translate the content on your page, the text in an aria-label attribute may not always be translated Using aria-labelledby can also help prevent a mismatch between the visible label text and the invisible label for screen reader users since updating the visible text will automatically update the invisible label aria-labelledby can make it much easier to programmatically create complex invisible labels consisting of multiple sources of text One last note, do not use aria-label and aria-labelledby on an element at the same time In this case, the invisible label for screen readers will always be determined by aria-labelledby and aria-label will be completely ignored --questions--\n--text--\nWhat does ARIA stand for --answers--\nAccessible Rich Internet Applications Advanced Resource Integration Accessibility --feedback--\nLook out for the set of attributes for improving web accessibility by enhancing HTML elements for assistive technologies Automated Rich Internet Access --feedback--\nLook out for the set of attributes for improving web accessibility by enhancing HTML elements for assistive technologies Accessible Responsive Interactive Applications --feedback--\nLook out for the set of attributes for improving web accessibility by enhancing HTML elements for assistive technologies --video-solution--\n1\n--text--\nWhat do both aria-label and aria-labelledby do",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6440,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a54a6675c168faa84252d.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "41443e57366a995f2c4005b3dd8a7e84",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a54a6675c168faa84252d.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Accessibility --feedback-- Look out for the set of attributes for improving web accessibility by enhancing HTML elements for assistive technologies Automated Rich Internet Access --feedback-- Look out for the set of attributes for improving web accessibility by enhancing HTML elements for assistive technologies Accessible Responsive Interactive Applications --feedback-- Look out for the set of attributes for improving web accessibility by enhancing HTML elements for assistive technologies --video-solution-- 1 --text-- What do both aria-label and aria-labelledby do--answers--\nThey modify the visual appearance of elements --feedback--\nFocus on what helps communicate the purpose of elements to screen readers and other assistive technologies They provide labels for elements to enhance accessibility for screen readers They change the functionality of form inputs --feedback--\nFocus on what helps communicate the purpose of elements to screen readers and other assistive technologies They add animation effects to elements --feedback--\nFocus on what helps communicate the purpose of elements to screen readers and other assistive technologies --video-solution--\n2\n--text--\nWhen should you use aria-labelledby over aria-label --answers--\nWhen you need to provide a tooltip for an element --feedback--\nThink about what is used to link elements to existing text that describes them When you want to change the color of an element --feedback--\nThink about what is used to link elements to existing text that describes them When you need to hide an element from screen readers --feedback--\nThink about what is used to link elements to existing text that describes them When there is existing visible text on the page that can be used as a label --video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6440,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-aria\\672a54a6675c168faa84252d.md",
      "source_type": "git_repo"
    },
    "token_count": 314,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9024fc54e476dfad17bbc39d14bf4e8f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d26385dbe73203c4dac81.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672d26385dbe73203c4dac81\ntitle: What Is JavaScript, and How Does It Work with HTML and CSS challengeType: 19\ndashedName: what-is-javascript\n--description--\nJavaScript is a powerful programming language that brings interactivity and dynamic behavior to websites While HTML and CSS are markup languages used to structure content and style elements on a page, JavaScript goes beyond those by enabling more complex functionality, such as handling user input, animating elements, and even building full web applications For example, when you click a button, submit a form, or hover over a menu, JavaScript determines how the page behaves Here's an example of how these three work together:\n```html\nHello, World Click me\n```\nIn this example, HTML is used to define the content: a heading (an h1 tag) and a button (the button tag) CSS is used to apply styles to the heading, such as making the text green JavaScript is used to display an alert message when the button is clicked To sum up, HTML provides structure, CSS adds styling, and JavaScript enables behavior, creating a complete and interactive web experience --questions--\n--text--\nWhat role does JavaScript play in web development compared to HTML and CSS --answers--\nJavaScript provides structure to the webpage and ensures that your code is free of errors --feedback--\nConsider what happens when a user interacts with a web page, such as clicking a button JavaScript provides the styles for the web page and automatically formats your code --feedback--\nConsider what happens when a user interacts with a web page, such as clicking a button JavaScript provides interactive functionality and dynamic behavior for the web page JavaScript is only used to create advanced animations for web applications --feedback--\nConsider what happens when a user interacts with a web page, such as clicking a button --video-solution--\n3\n--text--\nHow does JavaScript typically interact with HTML and CSS on a webpage --answers--\nJavaScript adds more styles to the CSS file and more elements to the HTML file --feedback--\nThink about how JavaScript can change the webpage's content or styles without needing a page reload JavaScript creates a new version of HTML for the page so you HTML code will run faster --feedback--\nThink about how JavaScript can change the webpage's content or styles without needing a page reload JavaScript interacts with the page to change content and styles dynamically JavaScript only works in the backend and is rarely used in the frontend",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d26385dbe73203c4dac81.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "686f7f5dd0a302bdf139b5aad8d67c64",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d26385dbe73203c4dac81.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "file --feedback-- Think about how JavaScript can change the webpage's content or styles without needing a page reload JavaScript creates a new version of HTML for the page so you HTML code will run faster --feedback-- Think about how JavaScript can change the webpage's content or styles without needing a page reload JavaScript interacts with the page to change content and styles dynamically JavaScript only works in the backend and is rarely used in the frontend--feedback--\nThink about how JavaScript can change the webpage's content or styles without needing a page reload --video-solution--\n3\n--text--\nWhich of the following is true about the relationship between JavaScript, HTML, and CSS --answers--\nHTML and CSS are programming languages, while JavaScript is a markup language --feedback--\nConsider which languages define content and style, and which language handles functionality HTML and CSS are markup languages, while JavaScript is a programming language JavaScript can replace HTML and CSS --feedback--\nConsider which languages define content and style, and which language handles functionality JavaScript does not work with HTML and CSS --feedback--\nConsider which languages define content and style, and which language handles functionality --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3717,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d26385dbe73203c4dac81.md",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "b33da04c3c581e49bc624d6510951729",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d496eca926b5df8176a67.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672d496eca926b5df8176a67\ntitle: What Is a Data Type, and What Are the Different Data Types in JavaScript challengeType: 19\ndashedName: what-is-a-data-type\n--description--\nIn JavaScript, a data type refers to the kind of value a variable holds A variable is a named container that stores a value of a specific data type, allowing you to reference and manipulate it throughout your code Data types help the program understand the kind of data it's working with, whether it's a number, text, or something else JavaScript has several basic data types that you'll use in your programs We'll explore each data type in greater detail in future lectures For now, here is a brief introduction of the different data types in JavaScript The first data type we will look at is the Number type A Number represents both integers and floating-point values Examples of integers include 7, 19, and 90 Examples of floating point numbers include 3 14 and 5 2 A floating point number is a number with a decimal point The next data type is a String A String is a sequence of characters, or text, enclosed in quotes Here are two examples:\njs\n\"Hello, world\"\njs\n'JavaScript'\nAnother data type used in JavaScript is the Boolean type A Boolean represents one of two possible values: true or false You can use a boolean to check if a page is loading, or if a user is logged in or not The next two data types used in JavaScript are undefined and null undefined means a variable has been declared but hasn't been given a value yet null means the variable has been intentionally set to \"nothing\" and does not hold any value We will explore more on how this works in future lectures The next data type we will look at is the Object type An Object is a more complex data type that can hold collections of key-value pairs Let's break this down The key (also called a property name), is like a label for the data, whereas the value, is the actual data you want to store Here is an example:\njs\nlet book = {\ntitle: \"The Great Gatsby\",\nauthor: \"F Scott Fitzgerald\",\nyear: 1925\n};\nIn this object, title, author, and year are the keys (or property names) The Great Gatsby, F Scott Fitzgerald, and 1925 are the corresponding values Each key-value pair in an object is called a property",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4716,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d496eca926b5df8176a67.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "10aed75665f81cdb64ceb7673552cd65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d496eca926b5df8176a67.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a property name), is like a label for the data, whereas the value, is the actual data you want to store Here is an example: js let book = { title: \"The Great Gatsby\", author: \"F Scott Fitzgerald\", year: 1925 }; In this object, title, author, and year are the keys (or property names) The Great Gatsby, F Scott Fitzgerald, and 1925 are the corresponding values Each key-value pair in an object is called a propertySo we can say that this book object has three properties This is just a basic introduction to objects and their properties In future lectures, we'll go deeper into more advanced concepts The last two data types are the Symbol and BigInt data types A Symbol is a special type of value in JavaScript that is always unique and cannot be changed It's often used to create unique labels or identifiers for properties:\njs\n// Creating two symbols\nconst symbol1 = Symbol('mySymbol');\nconst symbol2 = Symbol('mySymbol');\nconsole log(symbol1 === symbol2); // Outputs: false\nIn this example, we create two symbols with the same description, but they are unique BigInt is used for very large numbers that exceed the limit of the Number type:\njs\nconst bigNumber = 1234567890123456789012345678901234567890n;\nconsole log(bigNumber);\n// Outputs: 1234567890123456789012345678901234567890n\nIn this example, we create a BigInt by adding n at the end of a very large number Understanding these data types helps you handle and work with various kinds of data in your programs, as each type has its own characteristics and behaviors --questions--\n--text--\nWhich of the following is a string data type --answers--\n\"Hello \"\n42\n--feedback--\nThink about which data type is enclosed in quotes false\n--feedback--\nThink about which data type is enclosed in quotes null\n--feedback--\nThink about which data type is enclosed in quotes --video-solution--\n1\n--text--\nWhat data type represents a value that is either true or false --answers--\nNumber\n--feedback--\nThis data type is often used in logical statements String\n--feedback--\nThis data type is often used in logical statements Boolean\nUndefined\n--feedback--\nThis data type is often used in logical statements",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4716,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d496eca926b5df8176a67.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "2cc8a9389f0d158d642fa11e4bfb5770",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d496eca926b5df8176a67.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is enclosed in quotes false --feedback-- Think about which data type is enclosed in quotes null --feedback-- Think about which data type is enclosed in quotes --video-solution-- 1 --text-- What data type represents a value that is either true or false --answers-- Number --feedback-- This data type is often used in logical statements String --feedback-- This data type is often used in logical statements Boolean Undefined --feedback-- This data type is often used in logical statements--video-solution--\n3\n--text--\nIf a variable has been declared but not assigned a value, what is its data type --answers--\nString\n--feedback--\nThis data type represents an unassigned variable Number\n--feedback--\nThis data type represents an unassigned variable Undefined\nNull\n--feedback--\nThis data type represents an unassigned variable --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4716,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d496eca926b5df8176a67.md",
      "source_type": "git_repo"
    },
    "token_count": 172,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "4c6fc76419047f44cc26547ae1eb5d67",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49a5cf43945ee09e5fba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672d49a5cf43945ee09e5fba\ntitle: What Is a String in JavaScript, and What Is String Immutability challengeType: 19\ndashedName: what-is-a-string\n--description--\nIn JavaScript, a string is a sequence of characters used to represent text data Strings are one of the primitive data types in the language, along with numbers, booleans, null, and undefined To create a string in JavaScript, you can use single quotes ('), or double quotes (\") Here is an example of creating two variables that hold string values:\njs\nlet singleQuotes = 'This is a string';\nlet doubleQuotes = \"This is also a string\";\nEven though you can use single or double quotes to create strings, it's important to be consistent If a string begins with a single quote, it must also end with a single quote The same applies to double quotes The following example will throw an error because it starts with a double quote and ends with a single quote:\njs\nconst improperStr = \"Do not do this';\nAnother thing to take into account is that strings are immutable In programming, immutability means that once something is created, it cannot be changed So, when you create a string, you can't change its characters directly Instead, you would create a new string if you want to make changes Here is an example of assigning a new string to a developer variable:\njs\nlet developer = \"Jessica\";\ndeveloper = \"Quincy\";\nSince strings are immutable, we can't update the first string directly That is why we are assigning a new string to the developer variable Strings are an important part of programming, and in future lectures, you will learn advanced techniques for manipulating them and harnessing their full potential to create dynamic and interactive applications --questions--\n--text--\nWhich of the following is the correct syntax for creating strings in JavaScript --answers--\nconst str = <this is a string>\n--feedback--\nReview the examples given in the lecture const str = [this is a string]\n--feedback--\nReview the examples given in the lecture const str = \"this is a string\"\nconst str = //this is a string//\n--feedback--\nReview the examples given in the lecture --video-solution--\n3\n--text--\nWhat happens if a string starts with a single quote and ends with a double quote --answers--\nIt creates a valid string --feedback--\nThink about the requirement for matching quotes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3328,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49a5cf43945ee09e5fba.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "dfab9649422cf476b303691e202e5c92",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49a5cf43945ee09e5fba.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the examples given in the lecture const str = [this is a string] --feedback-- Review the examples given in the lecture const str = \"this is a string\" const str = //this is a string// --feedback-- Review the examples given in the lecture --video-solution-- 3 --text-- What happens if a string starts with a single quote and ends with a double quote --answers-- It creates a valid string --feedback-- Think about the requirement for matching quotesIt will throw a syntax error It creates a string with both quotes --feedback--\nThink about the requirement for matching quotes It will be ignored by the JavaScript interpreter --feedback--\nThink about the requirement for matching quotes --video-solution--\n2\n--text--\nWhy are strings considered immutable in JavaScript --answers--\nYou cannot create strings using variables --feedback--\nConsider what \"immutable\" means in programming Once a string is created, you cannot change its characters directly Strings can only be created using literals --feedback--\nConsider what \"immutable\" means in programming You can change strings, but only through global variables --feedback--\nConsider what \"immutable\" means in programming --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3328,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49a5cf43945ee09e5fba.md",
      "source_type": "git_repo"
    },
    "token_count": 232,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "568c8d87570d6b2bfdbdbb986b391d1f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d497cb1a1675e47bf7ea1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672d497cb1a1675e47bf7ea1\ntitle: What Are Variables, and What Are Guidelines for Naming JavaScript Variables challengeType: 19\ndashedName: what-are-variables\n--description--\nIn JavaScript, variables act as containers for storing data that you can access and modify throughout your program You can think of variables as boxes that hold values With variables, you can keep track of things like numbers or text and refer to these values whenever you need them in your program One way to declare a variable in JavaScript, is to use the let keyword You will learn more about the let keyword as well as other ways to declare variables in future lectures Here's an example of using let to declare a variable called age:\njs\nlet age;\nRight now, the age variable does not have a value assigned to it To assign a value to a variable you will need to use the assignment operator like this:\njs\nlet age = 25;\nThe assignment operator looks like an equals sign (=) but it doesn't check for equality You'll learn about the correct operators for checking equality in future lectures The assignment operator is used to assign a value to a variable This process of assigning a value to a variable is known as initialization One advantage of using the let keyword to declare variables is that you can reassign values to them In programming, reassignment means giving a new value to a variable that already has one Here is an example of reassigning the value for the age variable:\njs\nage = 30;\nNow the age variable holds the value of 30 Notice that the let keyword wasn't needed again because the age variable was already declared, so there's no need to declare it a second time When using reassignment, you only need to reference the variable name Reassignment is useful because it allows you to update and change the value stored in a variable as your program runs A good example of this would be updating points in a game Naming variables may seem straightforward, but there are some rules and best practices to ensure your code is readable and functional Your variable names should describe what the data represents For example, instead of using a name like x, a more descriptive name such as age or points makes your code easier to understand Variables in JavaScript must begin with a letter, an underscore (_), or a dollar sign ($) They cannot start with a number",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5045,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d497cb1a1675e47bf7ea1.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "b2acb7efb61ff50789e829e224274dff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d497cb1a1675e47bf7ea1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Naming variables may seem straightforward, but there are some rules and best practices to ensure your code is readable and functional Your variable names should describe what the data represents For example, instead of using a name like x, a more descriptive name such as age or points makes your code easier to understand Variables in JavaScript must begin with a letter, an underscore (_), or a dollar sign ($) They cannot start with a numberVariable names are case-sensitive, meaning the word age in all lowercase and the word Age with a capital A are considered different variables This is why it's important to stick with a consistent naming convention like camelCase camelCase is where the first word is all lowercase and each subsequent word starts with an uppercase letter Here is an example of using the camelCase naming convention for a variable:\njs\nlet thisIsCamelCase;\nThere are certain keywords in JavaScript that you cannot use as variable names, such as let, const, function, or return, as they are reserved for the language itself You should also avoid using special characters like exclamation points ( ) or at (@) symbols, in your variable names It is best to keep variable names readable by using letters, numbers, underscores, or dollar signs By following these guidelines, your code will be cleaner and more manageable as it grows in complexity --questions--\n--text--\nWhich keyword would you use to declare a variable in JavaScript when you plan to update its value later --answers--\nset\n--feedback--\nConsider which keyword allows for reassignment of values let\ndeclare\n--feedback--\nConsider which keyword allows for reassignment of values variable\n--feedback--\nConsider which keyword allows for reassignment of values --video-solution--\n2\n--text--\nWhich of the following is a valid variable name in JavaScript --answers--\n1stPlace\n--feedback--\nRemember the rules for starting a variable name and avoiding special characters or reserved words total-score --feedback--\nRemember the rules for starting a variable name and avoiding special characters or reserved words player1Score\nconst\n--feedback--\nRemember the rules for starting a variable name and avoiding special characters or reserved words --video-solution--\n3\n--text--\nWhy is it important to use descriptive names for your variables --answers--\nIt's required by JavaScript --feedback--\nThink about how others (or yourself) can easily read and understand your code Descriptive names make your code easier to understand and maintain Descriptive names make the code run faster",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5045,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d497cb1a1675e47bf7ea1.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "7667ebbcf42e5144d0b17ff19c6157a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d497cb1a1675e47bf7ea1.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "name and avoiding special characters or reserved words player1Score const --feedback-- Remember the rules for starting a variable name and avoiding special characters or reserved words --video-solution-- 3 --text-- Why is it important to use descriptive names for your variables --answers-- It's required by JavaScript --feedback-- Think about how others (or yourself) can easily read and understand your code Descriptive names make your code easier to understand and maintain Descriptive names make the code run faster--feedback--\nThink about how others (or yourself) can easily read and understand your code Descriptive names allow you to avoid using let --feedback--\nThink about how others (or yourself) can easily read and understand your code --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5045,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d497cb1a1675e47bf7ea1.md",
      "source_type": "git_repo"
    },
    "token_count": 147,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "f43ddd35007e72a49f079e7735101920",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49959621885e9d3e672c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672d49959621885e9d3e672c\ntitle: How Do let and const Work Differently When It Comes to Variable Declaration, Assignment, and Reassignment challengeType: 19\ndashedName: how-do-let-and-const-work\n--description--\nWhen working with JavaScript, you'll often declare variables to store data that you plan to use throughout your program In modern JavaScript, let and const are the preferred ways to declare variables, but they differ in how they handle value assignment and reassignment In this lecture, we'll explore how let and const differ in variable declaration, assignment, and reassignment The let keyword allows you to declare variables that can be updated or reassigned later You can think of let as a flexible container – once you've stored a value in it, you can change that value as needed throughout your program Here's an example of declaring and assigning a variable with let:\njs\nlet score = 10;\nIn this case, the variable score is declared and assigned the value 10 If you want to update the value later, you can easily do that:\njs\nscore = 20;\nNow, score holds the value 20 This makes let particularly useful when you know the value of a variable will change as your program runs On the other hand, const is used to declare variables that are constant Once you assign a value to a variable declared with const, you cannot reassign it This makes const ideal for values that you don't want to change accidentally during the execution of your program Here's an example of declaring and assigning a variable with const:\njs\nconst maxScore = 100;\nOnce maxScore is assigned the value 100, it cannot be changed:\njs\nmaxScore = 200; // This will result in an error\nTrying to reassign a value to a const variable will throw an error in your JavaScript console, as const variables are immutable once they are assigned You can declare a let variable without immediately assigning it a value, and you can assign it a value later:\njs\nlet age;\nage = 25;\nVariables declared with const must be assigned a value at the time of declaration If you try to declare a const variable without assigning it a value, you will get an error:\njs\nconst age; // Error: Missing initializer in const declaration\nYou should use let when you need to declare variables that will be reassigned later",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4537,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49959621885e9d3e672c.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "11eb8c75ff6eecac1640996a6e4a127f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49959621885e9d3e672c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "immediately assigning it a value, and you can assign it a value later: js let age; age = 25; Variables declared with const must be assigned a value at the time of declaration If you try to declare a const variable without assigning it a value, you will get an error: js const age; // Error: Missing initializer in const declaration You should use let when you need to declare variables that will be reassigned laterFor example, tracking a changing score or updating a value over time in your program Use const when you want to declare variables that should remain constant, like configuration values or settings that shouldn't be changed accidentally You can also use the var keyword, but it's not as recommended anymore The var is kind of like let, except it has a wider scope, which is more likely to cause problems in your program --questions--\n--text--\nWhat happens if you try to reassign a value to a variable declared with const --answers--\nThe value will change without issue --feedback--\nThink about what const stands for The original value will be updated, but a warning will be issued --feedback--\nThink about what const stands for An error will be thrown because const variables cannot be reassigned The new value will be ignored, and the original value will stay the same --feedback--\nThink about what const stands for --video-solution--\n3\n--text--\nWhich of the following is the correct way to assign the number 100 to a constant named maxScore --answers--\njs\nconst maxScore === 100;\n--feedback--\nRefer to the end of the lecture where this was discussed js\nconst maxScore = 100;\njs\nconst maxScore <= 100;\n--feedback--\nRefer to the end of the lecture where this was discussed js\nconst maxScore == 100;\n--feedback--\nRefer to the end of the lecture where this was discussed --video-solution--\n2\n--text--\nCan you declare a const variable without assigning it a value --answers--\nYes, but you must assign a value later --feedback--\nThink about the immutability of const No, const variables must be initialized at the time of declaration Yes, but you can only assign a number as the initial value --feedback--\nThink about the immutability of const No, const variables must be declared and reassigned in the same line --feedback--\nThink about the immutability of const --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4537,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49959621885e9d3e672c.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5c86c6363a0650bf671e834d75c6c4de",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49d93b54b85faa4dbad7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672d49d93b54b85faa4dbad7\ntitle: What Is the Role of Semicolons in JavaScript, and Programming in General challengeType: 19\ndashedName: what-is-the-role-of-semicolons\n--description--\nIn JavaScript, and many other programming languages, semicolons help delineate statements and improve code readability In JavaScript, a semicolon (;) is used to indicate the end of a statement Just as a period ( ) marks the end of a sentence in English, a semicolon signifies the end of an executable line of code This allows the JavaScript engine to distinguish between separate commands For example:\njs\nlet variableOne = 5;  // Declare a variable and assign a value\nlet variableTwo = 10; // Declare another variable and assign a value\nIn this code, the semicolons at the end of each line mark the end of each statement Without them, the JavaScript engine might have trouble interpreting where one statement ends and another begins Semicolons are primarily used to mark the end of a statement This helps the JavaScript engine understand the separation of individual instructions, which is important for correct execution js\nlet a = 1;   // Statement ends here\nlet b = 2;   // Another statement starts here\nWhile JavaScript has Automatic Semicolon Insertion (ASI) that can add semicolons automatically, explicitly including them improves code clarity and helps prevent errors that may arise from unexpected ASI behavior Semicolons are used in many programming languages, including C, C++, and Java Semicolons mark the end of statements or instructions, helping the compiler or interpreter parse the code correctly A compiler translates high-level programming language code into machine-readable code, which creates an executable file By clearly delineating statements, semicolons contribute to the readability and maintainability of code Semicolons help prevent ambiguities in code execution and ensure that statements are correctly terminated Semicolons are a fundamental part of JavaScript and many other programming languages They mark the end of statements, improve code readability, and help avoid errors related to Automatic Semicolon Insertion By understanding and using semicolons properly, you can write more reliable and maintainable code --questions--\n--text--\nWhat is the primary role of a semicolon in JavaScript --answers--\nTo separate variables --feedback--\nConsider what semicolons do in relation to statements in JavaScript To mark the end of a statement",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4084,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49d93b54b85faa4dbad7.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a8cbdac989972f9e11ec217997187575",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49d93b54b85faa4dbad7.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a fundamental part of JavaScript and many other programming languages They mark the end of statements, improve code readability, and help avoid errors related to Automatic Semicolon Insertion By understanding and using semicolons properly, you can write more reliable and maintainable code --questions-- --text-- What is the primary role of a semicolon in JavaScript --answers-- To separate variables --feedback-- Consider what semicolons do in relation to statements in JavaScript To mark the end of a statementTo create comments --feedback--\nConsider what semicolons do in relation to statements in JavaScript To denote the start of a function --feedback--\nConsider what semicolons do in relation to statements in JavaScript --video-solution--\n2\n--text--\nWhat can happen if semicolons are omitted in JavaScript code --answers--\nThe code will not run at all --feedback--\nThink about how Automatic Semicolon Insertion (ASI) might affect code execution The JavaScript engine will always add semicolons correctly --feedback--\nThink about how Automatic Semicolon Insertion (ASI) might affect code execution It can lead to unexpected behavior due to Automatic Semicolon Insertion It will automatically correct syntax errors --feedback--\nThink about how Automatic Semicolon Insertion (ASI) might affect code execution --video-solution--\n3\n--text--\nWhy is it beneficial to use semicolons explicitly even though JavaScript has Automatic Semicolon Insertion --answers--\nTo increase the execution speed of the code --feedback--\nConsider how explicit semicolons affect code clarity and maintenance To improve code readability and prevent subtle errors To add comments to the code --feedback--\nConsider how explicit semicolons affect code clarity and maintenance To change the way variables are declared --feedback--\nConsider how explicit semicolons affect code clarity and maintenance --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4084,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49d93b54b85faa4dbad7.md",
      "source_type": "git_repo"
    },
    "token_count": 365,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ad69f9b15e56b3d8fd70b796e1bbcfae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49c4e899345f5b33c24c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672d49c4e899345f5b33c24c\ntitle: What Is console log Used For, and How Does It Work challengeType: 19\ndashedName: what-is-console-log\n--description--\nIn JavaScript, console log() is a simple yet powerful tool used to display messages or output information to the browser's console It's mostly used by developers to debug and inspect code while working on their programs You can use console log() to log text or variables to the console and ensure your code is running correctly To use console log(), you call the method with the value or message you want to output inside the parentheses Here are some examples:\n```js\nconsole log(\"Hello, world \");\nlet num = 5;\nconsole log(num);\n```\nThe first example prints Hello, world in the browser's console, while the second example prints the value 5 Here is another example of working with console log():\njs\nlet name = \"Alice\";\nconsole log(\"Hello, \" + name + \" \"); // Outputs: Hello, Alice The console log() method helps you monitor your code as it runs, making it easier to spot mistakes and understand how your program behaves --questions--\n--text--\nWhat does the console log() method do in JavaScript --answers--\nIt audits your code for errors and displays the results in the browser console --feedback--\nThink about where you can see the results of the console log() method It is used to log data and display the output in the browser console It stores values in a database as well as the browser console --feedback--\nThink about where you can see the results of the console log() method It changes the HTML content on the page and shows the changes in the browser console --feedback--\nThink about where you can see the results of the console log() method --video-solution--\n2\n--text--\nWhat will be logged to the console js\nconst age = 10;\nconsole log(age);\n--answers--\n10\n\"10\"\n--feedback--\nRemember that console log() will log the value of that variable age\n--feedback--\nRemember that console log() will log the value of that variable \"age\"\n--feedback--\nRemember that console log() will log the value of that variable --video-solution--\n1\n--text--\nWhy is console log() helpful when building out web applications --answers--\nIt is commonly used to check the performance for an application and see the results in the console",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3079,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49c4e899345f5b33c24c.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4b1f18a1314555d75a8fd8aa9d3ce697",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49c4e899345f5b33c24c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "10; console log(age); --answers-- 10 \"10\" --feedback-- Remember that console log() will log the value of that variable age --feedback-- Remember that console log() will log the value of that variable \"age\" --feedback-- Remember that console log() will log the value of that variable --video-solution-- 1 --text-- Why is console log() helpful when building out web applications --answers-- It is commonly used to check the performance for an application and see the results in the console--feedback--\nReview the beginning of the lecture where this was discussed It is commonly used by developers for debugging and inspecting values or expressions in their code during development It is commonly used to check for linting errors in your code and display those errors in the console --feedback--\nReview the beginning of the lecture where this was discussed It is commonly used to ensure that your JavaScript code is adhering to best practices --feedback--\nReview the beginning of the lecture where this was discussed --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3079,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49c4e899345f5b33c24c.md",
      "source_type": "git_repo"
    },
    "token_count": 205,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ce15279f9c9aa53f63cf09d277a22377",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49b2fb76df5f1d6117af.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672d49b2fb76df5f1d6117af\ntitle: What Is String Concatenation, and How Can You Concatenate Strings with Variables challengeType: 19\ndashedName: what-is-string-concatenation\n--description--\nIn JavaScript, working with text is an essential part of coding, and often, you'll need to combine or join pieces of text together This process is called string concatenation In this lecture, we'll focus on how string concatenation works, specifically using the + operator, the += operator, and the concat() method The + operator is one of the simplest and most frequently used methods to concatenate strings It allows you to join multiple strings or combine strings with variables that hold text Here's an example:\n```js\nlet firstName = \"John\";\nlet lastName = \"Doe\";\nlet fullName = firstName + \" \" + lastName; // John Doe\n```\nIn this example, we used the + operator to concatenate the firstName and lastName variables along with a space (\" \") to create the full name One disadvantage of using the + operator for string concatenation is that it can lead to spacing issues if you don't carefully manage the spacing between the concatenated strings Here is an example where a space is missing:\n```js\nlet firstName = \"John\";\nlet lastName = \"Doe\";\nlet fullName = firstName + lastName; // \"JohnDoe\"\n```\nWhenever you use the + operator to concatenate strings, it is important to double check for any potential spacing issues If you need to add or append to an existing string, then you can use the += operator This is helpful when you want to build upon a string by adding more text to it over time Here's an example of appending one string to another using the += operator:\n```js\nlet greeting = 'Hello';\ngreeting += ', John ';\n// greeting is now the string Hello, John ```\nIt is important to remember that strings are immutable which means once a string is created you can not alter it In this case, the original string of Hello is not modified Instead, greeting now references the new string of Hello, John Another way you can concatenate strings is to use the concat() method Before we begin learning about the concat() method, it is important to first understand what a method and a function are at a higher level In programming, a function is a reusable block of code that performs a specific task and can be called with various inputs",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4951,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49b2fb76df5f1d6117af.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "f60fad9594291fdc1536dea2b7235b64",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49b2fb76df5f1d6117af.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "original string of Hello is not modified Instead, greeting now references the new string of Hello, John Another way you can concatenate strings is to use the concat() method Before we begin learning about the concat() method, it is important to first understand what a method and a function are at a higher level In programming, a function is a reusable block of code that performs a specific task and can be called with various inputsA method, on the other hand, is a type of function that is associated with an object, meaning it operates on the data contained within that object In future lectures, we will dive much deeper into how functions, objects, and methods work in JavaScript But for now, it is important to understand that JavaScript has dozens of methods you can use, like the concat() method Here's an example of using the concat() method to join two strings together:\n```js\nlet str1 = 'Hello';\nlet str2 = 'World';\nlet result = str1 concat(' ', str2); // Hello World\n```\nIn this example, we use the concat() method to join str1, a space (' '), and str2 into a single string To conclude, + operator is best for simple concatenation, especially when you need to combine a few strings or variables The += operator is useful when building up a string step by step or appending new content to an existing string variable Finally, the concat() method is beneficial when you need to concatenate multiple strings together --questions--\n--text--\nWhat is the primary use of the + operator in string concatenation --answers--\nTo compare two strings --feedback--\nThink about how you combine text in JavaScript To join two or more strings together To check if two strings are equal --feedback--\nThink about how you combine text in JavaScript To remove characters from a string --feedback--\nThink about how you combine text in JavaScript --video-solution--\n2\n--text--\nWhich of the following is the correct way to concatenate strings --answers--\njs\nlet greeting = \"Hi\";\ngreeting -= \" there \";\n--feedback--\nRefer back to the third example given in this lecture js\nlet greeting = \"Hi\";\ngreeting =+ \" there \";\n--feedback--\nRefer back to the third example given in this lecture js\nlet greeting = \"Hi\";\ngreeting += \" there \";\njs\nlet greeting = \"Hi\";\ngreeting == \" there \";\n--feedback--\nRefer back to the third example given in this lecture",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4951,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49b2fb76df5f1d6117af.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "f74d0668cabae4369ae5fda7ddd62025",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49b2fb76df5f1d6117af.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "concatenate strings --answers-- js let greeting = \"Hi\"; greeting -= \" there \"; --feedback-- Refer back to the third example given in this lecture js let greeting = \"Hi\"; greeting =+ \" there \"; --feedback-- Refer back to the third example given in this lecture js let greeting = \"Hi\"; greeting += \" there \"; js let greeting = \"Hi\"; greeting == \" there \"; --feedback-- Refer back to the third example given in this lecture--video-solution--\n3\n--text--\nWhich of the following is the correct method to concatenate multiple strings --answers--\nconcatenate()\n--feedback--\nRefer to the end of the lecture where this was discussed concat()\nconcatenating()\n--feedback--\nRefer to the end of the lecture where this was discussed concats()\n--feedback--\nRefer to the end of the lecture where this was discussed --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4951,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49b2fb76df5f1d6117af.md",
      "source_type": "git_repo"
    },
    "token_count": 179,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "45d66ec1640e1bd4d6557032b773fb7e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e867bbf41cc5b11648c4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6734e867bbf41cc5b11648c4\ntitle: What Are Single Page Applications, and What Are Some Issues Surrounding Them challengeType: 19\ndashedName: what-are-single-page-applications-and-what-are-some-issues-surrounding-them\n--description--\nUnlike traditional multi-page websites, single page applications (SPAs) load only one HTML page and dynamically update the content as the user interacts with the app, without reloading the entire page This approach can lead to faster, more responsive applications, but it also comes with a set of challenges and considerations SPAs heavily use JavaScript to manage the application's state and render content Instead of requesting new HTML pages from the server, SPAs use JavaScript to manipulate the DOM and fetch data asynchronously This is often done using libraries and frameworks like React, Vue, or Angular, which provide great tools for building complex user interfaces SPAs have some common issues One significant issue is that screen readers may struggle with dynamically updated content When content changes without a page reload/refresh, screen readers might not notify these changes, which makes our users unaware of updates on our web app Another challenge with SPAs is with navigation and browser history Users expect the back and forward buttons to work as they do on traditional websites This might not work properly in SPAs because technically, the URL of the web app doesn’t change Since, the URL of the web app doesn’t change, they can’t bookmark any specific page Refreshing the page might reset the application to its initial state, rather than maintaining the current view SPAs can pose challenges for SEO optimization Search engines like Google can have difficulty indexing dynamically loaded content because they may not execute JavaScript properly or may miss content that isn’t included in the initial HTML page This can lead to pages not being indexed correctly However, modern search engines have improved their ability to crawl SPAs, and there are techniques such as server-side rendering (SSR), pre-rendering, and the use of SEO-friendly URLs that can help mitigate these issues and improve SEO for SPAs Performance is another consideration SPAs load the entire application in one go, which means that if the loading time increases, users will be seeing a blank screen for a longer period of time Now consider the scenario of users with slower internet speeds Overall, the user experience will not be very pleasant In conclusion, while Single Page Applications offer many benefits, they also present unique challenges",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4846,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e867bbf41cc5b11648c4.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "5f801338963066fdb9390688bbb11dfa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e867bbf41cc5b11648c4.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "can help mitigate these issues and improve SEO for SPAs Performance is another consideration SPAs load the entire application in one go, which means that if the loading time increases, users will be seeing a blank screen for a longer period of time Now consider the scenario of users with slower internet speeds Overall, the user experience will not be very pleasant In conclusion, while Single Page Applications offer many benefits, they also present unique challengesDevelopers need to be careful of accessibility, usability, SEO, and performance considerations when building SPAs By addressing these issues, it's possible to create SPAs that are fast, responsive, and accessible to all users --questions--\n--text--\nWhat is a key characteristic of a Single Page Application (SPA) --answers--\nIt loads a new HTML page for each view --feedback--\nThink about how SPAs differ from traditional multi-page websites in terms of page loading It updates content dynamically without full page reloads It doesn't use JavaScript --feedback--\nThink about how SPAs differ from traditional multi-page websites in terms of page loading It always requires a server-side rendering --feedback--\nThink about how SPAs differ from traditional multi-page websites in terms of page loading --video-solution--\n2\n--text--\nWhich of the following is a potential accessibility issue with SPAs --answers--\nThey load too quickly for screen readers --feedback--\nConsider how dynamic content updates might affect users relying on screen readers They can't use ARIA attributes --feedback--\nConsider how dynamic content updates might affect users relying on screen readers Screen readers may not announce dynamically updated content They are incompatible with keyboard navigation --feedback--\nConsider how dynamic content updates might affect users relying on screen readers --video-solution--\n3\n--text--\nWhy can SPAs sometimes be challenging for Search Engine Optimization (SEO) --answers--\nThey use too many HTML tags for search engines to parse --feedback--\nConsider how search engines interact with content that isn't in the initial HTML They are blocked by default by all search engine crawlers --feedback--\nConsider how search engines interact with content that isn't in the initial HTML Search engines may struggle to index dynamically loaded content Their server response times are always too slow for crawlers --feedback--\nConsider how search engines interact with content that isn't in the initial HTML --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4846,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e867bbf41cc5b11648c4.md",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e95018b827003f11029d7cc98069e0d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e86f590727c5e7e9ec5e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6734e86f590727c5e7e9ec5e\ntitle: What Is React, and What Is It Commonly Used For challengeType: 19\ndashedName: what-is-react-and-what-is-it-commonly-used-for\n--description--\nReact is one of the most popular JavaScript libraries for building user interfaces and web applications Originally developed and maintained by Facebook, React has gained huge popularity in web development due to its efficiency, flexibility, and features A fundamental concept in React is the creation of reusable UI components These components, such as buttons, cards, and avatar components, can be easily reused throughout your application You can nest these components inside each other to build more complex, dynamic interfaces One of the key advantages of React is that these custom components can update and render independently as data changes Unlike traditional JavaScript, which requires direct manipulation of the DOM (Document Object Model), React uses a virtual DOM, which improves performance and efficiency You’ll learn more about the virtual DOM and how it works in upcoming lectures In addition to reusable components, React also provides a powerful way to manage the state of your application State refers to the data that determines how a component renders and behaves With React, you can easily track and update the state of components, ensuring that the UI reflects the most current data You will learn more about working with state in future lectures While there are many libraries within the JavaScript ecosystem, freeCodeCamp will mainly be focused on teaching React because of its widespread use and demand in the industry Our next few lectures will dive deeper into building custom components, managing state, and more --questions--\n--text--\nWhat is one of the key advantages of React --answers--\nIt is only used for building mobile applications --feedback--\nRemember that React does not directly work with the DOM but rather something else It requires direct manipulation of the DOM for better performance --feedback--\nRemember that React does not directly work with the DOM but rather something else It uses a virtual DOM to improve performance and efficiency It cannot handle dynamic updates to UI components --feedback--\nRemember that React does not directly work with the DOM but rather something else --video-solution--\n3\n--text--\nWhat is the purpose of state in React --answers--\nState determines the styling of UI components --feedback--\nReview the beginning section where this was discussed State tracks and updates data that affects how a component renders and behaves State is used to manage the DOM directly --feedback--\nReview the beginning section where this was discussed",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3530,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e86f590727c5e7e9ec5e.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "169a0b5ff26dd8e55957ddc26f8e6201",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e86f590727c5e7e9ec5e.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to UI components --feedback-- Remember that React does not directly work with the DOM but rather something else --video-solution-- 3 --text-- What is the purpose of state in React --answers-- State determines the styling of UI components --feedback-- Review the beginning section where this was discussed State tracks and updates data that affects how a component renders and behaves State is used to manage the DOM directly --feedback-- Review the beginning section where this was discussedState is only used in functional components --feedback--\nReview the beginning section where this was discussed --video-solution--\n2\n--text--\nWhy is freeCodeCamp focusing on teaching React --answers--\nReact is the only JavaScript library available --feedback--\nThink about its React standing within the industry React has widespread use and demand in the industry React is easy to learn and does not require state management --feedback--\nThink about its React standing within the industry React is better for building back-end services --feedback--\nThink about its React standing within the industry --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3530,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e86f590727c5e7e9ec5e.md",
      "source_type": "git_repo"
    },
    "token_count": 205,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "671144013cd566bea178e6c2cf067003",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e3a9cc78faaf4248d335.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6734e3a9cc78faaf4248d335\ntitle: What Is the Role of JS Libraries and Frameworks, and Why Are They Used in the Industry challengeType: 19\ndashedName: what-is-the-role-of-js-libraries-and-frameworks-and-why-are-they-used-in-the-industry\n--description--\nJavaScript libraries and frameworks provide pre-built code that streamlines the development process While both libraries and frameworks serve to improve productivity and standardize coding practices, they differ in their approach and level of control they provide to developers Libraries are generally more focused on providing solutions to specific tasks, such as manipulating the DOM, handling events, or managing AJAX requests An example of a JavaScript library is jQuery jQuery became very popular in the early 2010s and was widely used to simplify DOM manipulation, event handling, animations, effects, and more This library also offered a rich ecosystem of plugins, which made it easy to build common web components like date pickers, sliders, and modal dialogs Although jQuery is no longer as widely used as it once was, it significantly helped developers by making tasks that were complex in vanilla JavaScript much easier to implement Frameworks, on the other hand, provide a more defined structure for building applications They often come with a set of rules and conventions that developers need to follow For example, Angular encourages a component-based architecture with a set of conventions and tools that provide a structured approach to organizing and building applications Angular gives developers clear guidelines on how to structure components, manage state, handle routing, and interact with services, making it a more opinionated framework Other examples of frameworks include Remix and Next js In contrast, React, a UI library, is more flexible and doesn't enforce any particular architectural pattern React focuses primarily on the view layer and leaves a lot of the choices on application design up to the developers Although libraries and frameworks are used across projects of all sizes, the choice between using them often depends on the project's requirements Libraries offer flexibility for specific functionalities, while frameworks provide a structured approach towards complex applications In the industry, libraries and frameworks are widely used for several reasons They significantly speed up development by providing quick solutions for common problems One common problem in JavaScript is working with dates and timezones But there are libraries out there with built-in solutions to help you with date manipulation, time zones, parsing and formatting of dates A lot of popular libraries and frameworks are well-tested and maintained by large communities",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5052,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e3a9cc78faaf4248d335.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d02e6d5d2733e011d044f3b50aa5bbaa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e3a9cc78faaf4248d335.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "structured approach towards complex applications In the industry, libraries and frameworks are widely used for several reasons They significantly speed up development by providing quick solutions for common problems One common problem in JavaScript is working with dates and timezones But there are libraries out there with built-in solutions to help you with date manipulation, time zones, parsing and formatting of dates A lot of popular libraries and frameworks are well-tested and maintained by large communitiesThis means they're often more practical than building the same thing from scratch Libraries and frameworks follow best practices and patterns that have been proven effective in real life scenarios This can lead to more robust and scalable applications In conclusion, libraries and frameworks offer quick solutions to common problems, speed up development, and promote best practices Understanding the differences between libraries and frameworks, and knowing when to use them is a valuable skill for any JavaScript developer --questions--\n--text--\nWhy was jQuery a popular library of choice in the early 2010's --answers--\njQuery was used to simplify things like DOM manipulation, event handling, animations and effects jQuery was never popular --feedback--\nThink about how this library helped to simplify the development process jQuery made your code run 10x faster --feedback--\nThink about how this library helped to simplify the development process jQuery allowed you to write 100% bug free code --feedback--\nThink about how this library helped to simplify the development process --video-solution--\n1\n--text--\nWhich of the following is an example of a JavaScript library --answers--\nCOBOL\n--feedback--\nReview the beginning section where React libraries were first discussed React\nRuby on Rails\n--feedback--\nReview the beginning section where React libraries were first discussed Swift\n--feedback--\nReview the beginning section where React libraries were first discussed --video-solution--\n2\n--text--\nWhy are JavaScript libraries and frameworks widely used in the industry --answers--\nThey make websites look more attractive --feedback--\nThink about the benefits libraries and frameworks provide to developers and businesses They speed up development and promote best practices They are required by web browsers --feedback--\nThink about the benefits libraries and frameworks provide to developers and businesses They automatically fix all bugs in code --feedback--\nThink about the benefits libraries and frameworks provide to developers and businesses --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5052,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e3a9cc78faaf4248d335.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2c6e67dd62d892e9495e051335976cf3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49e65a1c855fe7bb3fdb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 672d49e65a1c855fe7bb3fdb\ntitle: What Are Comments in JavaScript, and When Should You Use Them challengeType: 19\ndashedName: what-are-comments-in-javascript\n--description--\nComments in programming are used to provide additional context for the code or leave notes for yourself and others Comments are lines or blocks of text that are ignored by the JavaScript engine when your code is executed They are there solely for the benefit of people reading the code, whether that's you or someone else JavaScript provides two ways to add comments to your code: single-line comments and multi-line comments Single-line comments are created using two forward slashes (//) Here is an example:\njs\n// I am a single line comment in JavaScript\nThis type of comment is great for brief explanations or clarifications Here is a real world example from the freeCodeCamp curriculum project files:\njs\n// This is to allow English to build without having to download the i18n files // It fails when trying to resolve the i18n-curriculum path if they don't exist const curriculumLocale = process env CURRICULUM_LOCALE 'english';\nconst I18N_CURRICULUM_DIR = path resolve(\n__dirname,\ncurriculumLocale === 'english' ' ' : 'i18n-curriculum/curriculum'\n);\nDo not worry about trying to understand what the code is actually doing because it is more advanced than what you have learned so far Instead, focus on the comment left by the developer This comment provides important context for why this code exists Comments like this are important for those working on teams for two reasons:\nOther developers working on the project will understand the purpose of this code It helps prevent unnecessary changes or deletions without consulting the team, which could lead to bugs or issues Another type of comment is multi-line comments Here is the basic syntax:\njs\n/*\nI am a multiline comment This is helpful for longer explanations */\nMulti-line comments are useful when you need to write longer descriptions, explanations, or notes in your code Let's take another look at the freeCodeCamp curriculum project files to see how multiline comments can be used in the real world js\n/* Since there can be more than one way to complete a certification (using the\nlegacy curriculum or the new one, for instance), we need a certification\nfield to track which certification this belongs to",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6082,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49e65a1c855fe7bb3fdb.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "99036d7da30cf06ac7479eafbea87fee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49e65a1c855fe7bb3fdb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "*/ Multi-line comments are useful when you need to write longer descriptions, explanations, or notes in your code Let's take another look at the freeCodeCamp curriculum project files to see how multiline comments can be used in the real world js /* Since there can be more than one way to complete a certification (using the legacy curriculum or the new one, for instance), we need a certification field to track which certification this belongs to*/\nconst dupeCertifications = [\n{\ncertification: 'responsive-web-design',\ndupe: '2022/responsive-web-design'\n}\n];\nconst hasDupe = dupeCertifications find(\ncert => cert dupe === meta superBlock\n);\nJust like before, ignore all of the JavaScript code because it uses concepts that haven't been taught yet Instead, focus on the comment left by the developer A developer on the team, or even a new contributor working on the project, can understand why this piece of code is here and have the full context before working on this area of the project While comments are useful in programming, it is important to avoid over-commenting You don't need to comment on every single line of code, especially if the code is straightforward and self-explanatory Here is an example of using comments to explain the obvious:\njs\n// This code uses the const keyword to create a new variable called price // We are assigning the number 10 to the price variable const price = 10;\nIn this situation, there is no need to add any comments here because the code is self-explanatory The goal is to enhance readability, not clutter the code with unnecessary explanations If you want to add comments to your personal projects as you are learning to code, that is fine But once you start working on real world projects with other developers, it is important not to use comments for code that is self-explanatory It is also important not to use comments to help explain away confusing, overly complicated, or poorly written code In those situations, it is best to refactor, or change, your code so other developers will better understand what is going on Comments are powerful tools for documenting your code and making it easier to understand You should use comments to provide context or leave notes for yourself and others --questions--\n--text--\nWhich of the following correctly creates a single-line comment in JavaScript --answers--\n< -- This is a comment -->\n--feedback--\nRemember which symbol JavaScript uses for single-line comments",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6082,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49e65a1c855fe7bb3fdb.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "820eb4c6c9eb52e95fcae6226bed4e28",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49e65a1c855fe7bb3fdb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "is best to refactor, or change, your code so other developers will better understand what is going on Comments are powerful tools for documenting your code and making it easier to understand You should use comments to provide context or leave notes for yourself and others --questions-- --text-- Which of the following correctly creates a single-line comment in JavaScript --answers-- < -- This is a comment --> --feedback-- Remember which symbol JavaScript uses for single-line comments/* This is a comment */\n--feedback--\nRemember which symbol JavaScript uses for single-line comments // This is a comment\n# This is a comment\n--feedback--\nRemember which symbol JavaScript uses for single-line comments --video-solution--\n3\n--text--\nWhen would you use a multi-line comment instead of a single-line comment --answers--\nWhen you need to disable a line of code temporarily --feedback--\nMulti-line comments are useful when you have more than a brief note When you want to write a brief explanation about a variable --feedback--\nMulti-line comments are useful when you have more than a brief note When you need to explain a large section of code or provide detailed information When you're writing HTML comments --feedback--\nMulti-line comments are useful when you have more than a brief note --video-solution--\n3\n--text--\nWhich of the following is a good practice when using comments in your code --answers--\nComment every single line of code --feedback--\nThink about how comments help clarify but should not clutter the code Use comments to provide context and leave notes for yourself and other developers Use comments to explain even the simplest code --feedback--\nThink about how comments help clarify but should not clutter the code Avoid comments altogether to keep the code clean --feedback--\nThink about how comments help clarify but should not clutter the code --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6082,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript\\672d49e65a1c855fe7bb3fdb.md",
      "source_type": "git_repo"
    },
    "token_count": 359,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "806f20149721603b7c96b71e2941f814",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e88cc46e6dc679420040.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6734e88cc46e6dc679420040\ntitle: What is Vite, and How Can It Be Used to Set Up a New React Project challengeType: 19\ndashedName: what-is-vite-and-how-can-it-be-used-to-set-up-a-new-react-project\n--description--\nUnlike working with smaller vanilla HTML, CSS, and JavaScript projects, starting a new React project includes a few more steps to ensure that everything runs correctly Instead of trying to set up of all of the necessary configurations by yourself, there are tools that will do that for you One of the most popular tools for setting up projects is Vite Vite, which means \"fast\" in French, is a build tool that aims to provide a faster development experience for modern web projects Vite can be used with React, as well as with other libraries and frameworks like Vue or Svelte You can even use it with vanilla JavaScript projects To create a new project with Vite, you will need to use the command line If you are using Windows machine, then you can use the Command Prompt or Windows PowerShell If you are using a Mac, then you can use the Terminal app Once you have the command line open, you can use the following command:\nbash\nnpm create vite@latest my-react-app -- --template react\nThis command creates a new React project named my-react-app using Vite's React template You can then open up the new project and see the React boilerplate code that Vite has provided for you [Image showing the boilerplate Vite files and folders in a code editor, including the public and src folders, and the gitignore, eslint config js, index html, package json, README md, and vite config js files ]\nThe great thing about Vite is that it will only provide the files that are absolutely necessary to get started with your React project To actually run the project as-is, you will need to install the dependencies using the following commands in the command line:\nbash\ncd my-react-app\nnpm install\nThe cd my-react-app command ensures that you change to the correct directory where your project is located The npm install command is used to install the dependencies needed to properly run your React project Dependencies are libraries or packages that your React project requires in order to function correctly, such as React itself, ReactDOM, or other third-party packages that provide additional functionality Running npm install will read the package",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5598,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e88cc46e6dc679420040.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "a2b4e7aa299fedcf65ec2624a6444042",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e88cc46e6dc679420040.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "command line: bash cd my-react-app npm install The cd my-react-app command ensures that you change to the correct directory where your project is located The npm install command is used to install the dependencies needed to properly run your React project Dependencies are libraries or packages that your React project requires in order to function correctly, such as React itself, ReactDOM, or other third-party packages that provide additional functionality Running npm install will read the packagejson file in your project directory and install all the dependencies listed there, allowing you to build and run your React app without missing any necessary components The package json file is a key configuration file in projects that contains metadata about your project, including its name, version, and dependencies It also defines scripts, licensing information, and other settings that help manage the project and its dependencies Once the dependencies are installed, you should notice a new folder in your project called node_modules The node_modules folder is where all the packages and libraries required by your project are stored This folder contains the actual code for the dependencies listed in your package json file, including both your project's direct dependencies and any dependencies of those dependencies To run your project, run the npm run dev command and open up a new browser tab at http://localhost:5173/ You should see the starter template that Vite has provided for you If you need to stop the local server, press CTRL + C in the command line To actually see the code for this starter template, you can go into your project inside the src folder and you should see the App jsx file From there you can start to modify the file, save your changes and see the new changes display in the browser And with that, you're ready to begin building your React application --questions--\n--text--\nWhat is the main advantage of using Vite when starting a new React project --answers--\nIt automatically writes the main application logic for you --feedback--\nThink about the speed difference between setting up a project on your own versus using Vite It provides a faster development experience by automating configurations and build processes It spots all security vulnerabilities in your React project --feedback--\nThink about the speed difference between setting up a project on your own versus using Vite It installs external libraries like jQuery and Bootstrap --feedback--\nThink about the speed difference between setting up a project on your own versus using Vite --video-solution--\n2\n--text--\nWhat does the npm install command do after creating a new React project with Vite --answers--\nIt starts the development server",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5598,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e88cc46e6dc679420040.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "72de61073771d5c726eb80ca51f7ca03",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e88cc46e6dc679420040.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "processes It spots all security vulnerabilities in your React project --feedback-- Think about the speed difference between setting up a project on your own versus using Vite It installs external libraries like jQuery and Bootstrap --feedback-- Think about the speed difference between setting up a project on your own versus using Vite --video-solution-- 2 --text-- What does the npm install command do after creating a new React project with Vite --answers-- It starts the development server--feedback--\nConsider what needs to happen before you can run the project It installs the dependencies listed in the package json file It opens the project in the browser --feedback--\nConsider what needs to happen before you can run the project It creates the App jsx file --feedback--\nConsider what needs to happen before you can run the project --video-solution--\n2\n--text--\nWhich directory contains the starting code that is found in the App jsx file --answers--\nhome\n--feedback--\nReview the end section where this was discussed index\n--feedback--\nReview the end section where this was discussed src\npublic\n--feedback--\nReview the end section where this was discussed --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5598,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e88cc46e6dc679420040.md",
      "source_type": "git_repo"
    },
    "token_count": 232,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7fd58780000fb43c2da6e1d7ccc3e8c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e879c78ee6c61db25b90.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6734e879c78ee6c61db25b90\ntitle: What Are Components in React, and How Do They Work challengeType: 19\ndashedName: what-are-components-in-react-and-how-do-they-work\n--description--\nComponents are the building blocks of React applications that allow developers to break down complex user interfaces into smaller, manageable pieces, making it easier to develop and maintain large-scale applications The two types of components in React are functional and class-based components In modern React, developers will use functional components and all of the examples we look at today will be functional components At a higher level, you can think of components like JavaScript functions that return elements describing the UI This UI is described using JSX, a syntax extension for JavaScript that looks similar to HTML but allows you to write UI elements in a more declarative way Let's look at an example of a React component:\njsx\nfunction Greeting() {\nconst name = \"John\"\n{/* The result will be Hello John*/}\nreturn <h1 className=\"title\">Hello {name}</h1>;\n}\nIn this example, we've defined a component called Greeting The curly braces {} inside the h1 tags enable us to embed JavaScript expressions, allowing us to access the name variable within the h1 element We are also applying a className called title to the h1 element But why are we using className instead of class like with regular HTML elements Well, this is because in JavaScript, class is a reserved name So, we need to use className instead We are also using a comment in JSX showing what the result will be It is important to note that you can use regular comment syntax like this but it needs to be wrapped in curly braces in order for it to work:\njsx\n{/* Block Comments */}\nAnother thing you might have noticed is that we are using a capital letter at the beginning of the component name But why can’t we use all lower case letters This is because React treats components with a capital letter as custom components, while elements with lowercase letters are considered built-in HTML elements When React encounters a lowercase tag, like <div> or <span>, it assumes it's a standard HTML element However, if the component name starts with a capital letter, React will treat it as a user-defined component and render it accordingly This distinction helps React differentiate between native HTML tags and components that you create",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6131,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e879c78ee6c61db25b90.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "502cdf96502c444d160ec4eb6a12e32c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e879c78ee6c61db25b90.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "This is because React treats components with a capital letter as custom components, while elements with lowercase letters are considered built-in HTML elements When React encounters a lowercase tag, like <div> or <span>, it assumes it's a standard HTML element However, if the component name starts with a capital letter, React will treat it as a user-defined component and render it accordingly This distinction helps React differentiate between native HTML tags and components that you createTo use this Greeting component in our application, we would write something like this:\njsx\n<Greeting />\nThis would render an h1 element with the text Hello John to the page But take a closer look at the syntax here When we use the component, it ends with a forward slash and then the greater than symbol When working with JSX, all tags and uses of components need to be explicitly closed So if the component or tag does not have any children, then you need to explicitly close it like shown here:\njsx\n<Greeting /> {/* /> is required */}\nSo far we have only been looking at how to render a single h1 element But you can actually render multiple elements Let’s take a look at the following example code here:\n```jsx\nfunction Greeting() {\nconst name = \"John\";\n{/ This will throw an error /}\nreturn Hello {name}\nNice to meet you }\n```\nWe are trying to add another sentence of Nice to meet you but it is not rendering on the page correctly There seems to be an error message instead The error message says Adjacent JSX elements must be wrapped in an enclosing tag The reason why you are getting that error message is because multiple sibling elements need to be wrapped in a parent element While you could wrap the h1 and p elements in a simple div, there is another way to silence the error React fragments are used to group elements together Here is what the revised example will look like:\njsx\nfunction Greeting() {\nconst name = \"John\";\nreturn (\n<Fragment>\n<h1>Hello {name}</h1>\n<p>Nice to meet you </p>\n</Fragment>\n);\n}\nYou can also choose to use empty JSX tags which can serve as shorthand for fragments:\njsx\nfunction Greeting() {\nconst name = \"John\";\nreturn (\n<>\n<h1>Hello {name}</h1>\n<p>Nice to meet you </p>\n</>\n);\n}\nIn future lectures, we will continue to learn more about how to work with components and JSX",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6131,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e879c78ee6c61db25b90.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "60bffdd1bc93a4f20f9206cb235bcfec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e879c78ee6c61db25b90.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "like: jsx function Greeting() { const name = \"John\"; return ( <Fragment> <h1>Hello {name}</h1> <p>Nice to meet you </p> </Fragment> ); } You can also choose to use empty JSX tags which can serve as shorthand for fragments: jsx function Greeting() { const name = \"John\"; return ( <> <h1>Hello {name}</h1> <p>Nice to meet you </p> </> ); } In future lectures, we will continue to learn more about how to work with components and JSXBut for now, you've gained a solid introduction to building user interfaces with components, setting a strong foundation for what's to come --questions--\n--text--\nWhat is the primary reason React uses className instead of class for HTML elements in JSX --answers--\nclass is a reserved keyword in JavaScript className sounds nicer --feedback--\nThink about what class already means in JavaScript Using className results in better security in React apps --feedback--\nThink about what class already means in JavaScript Using className results in faster performance --feedback--\nThink about what class already means in JavaScript --video-solution--\n1\n--text--\nIn the context of React components, what is JSX --answers--\nA new programming language --feedback--\nConsider how JSX allows you to write UI code in React components A database query language --feedback--\nConsider how JSX allows you to write UI code in React components A syntax extension for JavaScript that looks similar to HTML A CSS framework --feedback--\nConsider how JSX allows you to write UI code in React components --video-solution--\n3\n--text--\nHow would you render a Message component in React --answers--\n</ Message>\n--feedback--\nReview the section where it explains how components are rendered <</Message>\n--feedback--\nReview the section where it explains how components are rendered Message\n--feedback--\nReview the section where it explains how components are rendered <Message />\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6131,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\6734e879c78ee6c61db25b90.md",
      "source_type": "git_repo"
    },
    "token_count": 395,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "6d458324ddfd007281eca0d225b75e03",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\674ba6876f7ada867135bb95.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 674ba6876f7ada867135bb95\ntitle: How Can You Import and Export Components in React challengeType: 19\ndashedName: how-can-you-import-and-export-components-in-react\n--description--\nIn earlier lectures, you learned how to work with imports and exports in JavaScript In this lecture, we will take a look at how to import and export components in React In this example, we have a Cat component that belongs in a file called Cat jsx For the file extension, we are using the jsx file extension because this file is mainly working with JSX This Cat component returns a JSX markup with a title and image for a cat called Mr Whiskers:\njsx\nfunction Cat() {\nreturn (\n<div className=\"card\">\n<h2>Mr Whiskers</h2>\n<img\nsrc=\"https://cdn freecodecamp org/curriculum/cat-photo-app/running-cats jpg\"\nalt=\"Tuxedo cats running on dirt ground \"\n/>\n</div>\n);\n}\nIf we want to use our Cat component in another file, we need to first export it like this:\n```jsx\nfunction Cat() {\nreturn (\nMr Whiskers\n);\n}\nexport default Cat;\n```\nWe are using the default keyword because this will be the default export from the module You can also choose to export the component on the same line as the component definition like this:\njsx\nexport default function Cat() {\nreturn (\n<div className=\"card\">\n<h2>Mr Whiskers</h2>\n<img\nsrc=\"https://cdn freecodecamp org/curriculum/cat-photo-app/running-cats jpg\"\nalt=\"Tuxedo cats running on dirt ground \"\n/>\n</div>\n);\n}\nYou can choose to import child components in other parent component files, or import them in the root component file For this example, we will import the Cat component inside the root component file Every React project will have a top-level component, typically called App jsx:\njsx\nexport default function App() {\nreturn (\n// return component here\n);\n}\nThis file is usually located in the src directory of your project You’ll learn more about common project layouts in a future lecture To use the Cat component inside the root App component, you will need to import it like this:\n```jsx\nimport Cat from \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5656,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\674ba6876f7ada867135bb95.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "97525e9d27f2e6d940aa4cd3f05b8866",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\674ba6876f7ada867135bb95.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the root component file Every React project will have a top-level component, typically called App jsx: jsx export default function App() { return ( // return component here ); } This file is usually located in the src directory of your project You’ll learn more about common project layouts in a future lecture To use the Cat component inside the root App component, you will need to import it like this: ```jsx import Cat from \"/Cat\";\nexport default function App() {\nreturn (\n// return component here\n);\n}\n```\nNow, you can return the Cat component inside the App component like this:\n```jsx\nimport Cat from \" /Cat\";\nexport default function App() {\nreturn (\n);\n}\n```\nAs you continue building your own React projects, you’ll become more comfortable organizing components, importing them where needed, and creating sophisticated UIs by composing these modular components --questions--\n--text--\nWhich of the following is the correct way to export a React component --answers--\njsx\nexport default function Cat() {\nreturn (\n<div className=\"card\">\n<h2>Mr Whiskers</h2>\n<img\nsrc=\"https://cdn freecodecamp org/curriculum/cat-photo-app/running-cats jpg\"\nalt=\"Tuxedo cats running on dirt ground \"\n/>\n</div>\n);\n}\njsx\nexportComponent function Cat() {\nreturn (\n<div className=\"card\">\n<h2>Mr Whiskers</h2>\n<img\nsrc=\"https://cdn freecodecamp org/curriculum/cat-photo-app/running-cats jpg\"\nalt=\"Tuxedo cats running on dirt ground \"\n/>\n</div>\n);\n}\n--feedback--\nReview the middle section where this was discussed jsx\ne default function Cat() {\nreturn (\n<div className=\"card\">\n<h2>Mr Whiskers</h2>\n<img\nsrc=\"https://cdn freecodecamp org/curriculum/cat-photo-app/running-cats jpg\"\nalt=\"Tuxedo cats running on dirt ground \"\n/>\n</div>\n);\n}\n--feedback--\nReview the middle section where this was discussed jsx\ndefault function Cat() {\nreturn (\n<div className=\"card\">\n<h2>Mr Whiskers</h2>\n<img\nsrc=\"https://cdn freecodecamp org/curriculum/cat-photo-app/running-cats jpg\"\nalt=\"Tuxedo cats running on dirt ground \"\n/>\n</div>\n);\n}\n--feedback--\nReview the middle section where this was discussed",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5656,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\674ba6876f7ada867135bb95.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "9550db7514007ba9c96f5a0cbbe1dea4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\674ba6876f7ada867135bb95.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "this was discussed jsx e default function Cat() { return ( <div className=\"card\"> <h2>Mr Whiskers</h2> <img src=\"https://cdn freecodecamp org/curriculum/cat-photo-app/running-cats jpg\" alt=\"Tuxedo cats running on dirt ground \" /> </div> ); } --feedback-- Review the middle section where this was discussed jsx default function Cat() { return ( <div className=\"card\"> <h2>Mr Whiskers</h2> <img src=\"https://cdn freecodecamp org/curriculum/cat-photo-app/running-cats jpg\" alt=\"Tuxedo cats running on dirt ground \" /> </div> ); } --feedback-- Review the middle section where this was discussed--video-solution--\n1\n--text--\nWhere would you typically import a child component like the Cat component in a React project --answers--\nInside the index html file --feedback--\nThink about where components are commonly composed together in a React project Inside the cat-photo-app css file --feedback--\nThink about where components are commonly composed together in a React project In a parent component or the root component file (typically App jsx) In the public folder --feedback--\nThink about where components are commonly composed together in a React project --video-solution--\n3\n--text--\nWhat is the purpose of the import statement in the App component --answers--\nIt automatically styles the App component --feedback--\nRemember that you learned how to work with imports in earlier lectures It imports the Cat component, allowing it to be used within the App component It sets the default state for the App component --feedback--\nRemember that you learned how to work with imports in earlier lectures It allows the App to run faster --feedback--\nRemember that you learned how to work with imports in earlier lectures --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5656,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-javascript-libraries-and-frameworks\\674ba6876f7ada867135bb95.md",
      "source_type": "git_repo"
    },
    "token_count": 377,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "eb930caa686dc232092f768e3055b4be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe81c9c6fd3714343a45ad.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67fe81c9c6fd3714343a45ad\ntitle: What Is Python and What Are Some Common Uses in the Industry challengeType: 19\ndashedName: what-is-python-and-what-are-some-common-uses-in-the-industry\n--description--\nPython is a general-purpose programming language known for its simplicity and ease of use This ease of use has made Python the most popular programming language in modern times In 2024, Python officially surpassed JavaScript as the most popular language on GitHub Python is used in many fields like data science and machine learning, web development, scripting and automation, embedded systems, IoT, and much more Python is the main language that most data scientist and machine learning engineers currently use Libraries like Pandas and Numpy make data analysis less tedious, while others like Tensorflow and Scikit make machine learning and working with AI models much more accessible In web development, Python frameworks like Django, FastAPI, and Flask let developers build scalable and secure backend systems with minimal effort Many social media platforms like Instagram and Pinterest use Python on the backend Cybersecurity professionals and ethical hackers use Python to detect vulnerabilities like malware and other viruses, build automated security scans, and analyze threats Python runs well on microcomputers like the Raspberry Pi and MicroPython-compatible boards, so you can build all kinds of IoT projects like smart home devices, weather monitoring stations, and more Finally, one of Python's biggest strengths is automation You can write simple scripts to help you with repetitive tasks like extracting data from spreadsheets, sending emails, and working with files on your local machine Libraries like Selenium and BeautifulSoup also make it easy to interact with websites, so you can scrape public data, automate tasks through a web UI, and even manage cloud deployments for your projects As you can see, Python is a very powerful language, and yet, it's easy to learn From simple automation scripts to large-scale, industrial-level applications, you can use Python for just about anything Python is a great choice for anyone who wants to learn programming, regardless of what they choose to specialize in later --questions--\n--text--\nWhich libraries are commonly used for data analysis in Python --answers--\nPandas and NumPy\nTensorFlow and Scikit-learn\n--feedback--\nThink about the libraries that help with handling and processing large datasets efficiently React and Vue\n--feedback--\nThink about the libraries that help with handling and processing large datasets efficiently",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3932,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe81c9c6fd3714343a45ad.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ba6eedc09223fa1290034c26e062cf8a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe81c9c6fd3714343a45ad.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Python for just about anything Python is a great choice for anyone who wants to learn programming, regardless of what they choose to specialize in later --questions-- --text-- Which libraries are commonly used for data analysis in Python --answers-- Pandas and NumPy TensorFlow and Scikit-learn --feedback-- Think about the libraries that help with handling and processing large datasets efficiently React and Vue --feedback-- Think about the libraries that help with handling and processing large datasets efficientlyDjango and Flask\n--feedback--\nThink about the libraries that help with handling and processing large datasets efficiently --video-solution--\n1\n--text--\nHow is Python used in embedded systems and IoT --answers--\nIt powers game engines for VR development --feedback--\nIt helps build smart devices and automation systems It runs on microcomputers like Raspberry Pi and compatible boards It is primarily used for designing UI components --feedback--\nIt helps build smart devices and automation systems It replaces low-level languages like C in all cases --feedback--\nIt helps build smart devices and automation systems --video-solution--\n2\n--text--\nWhich Python frameworks are used in web development --answers--\nReact, Vue, Angular\n--feedback--\nThink about the frameworks that help web developers build scalable backend systems TensorFlow, PyTorch, Scikit-learn\n--feedback--\nThink about the frameworks that help web developers build scalable backend systems NumPy, Pandas, Matplotlib\n--feedback--\nThink about the frameworks that help web developers build scalable backend systems Django, FastAPI, Flask\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3932,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe81c9c6fd3714343a45ad.md",
      "source_type": "git_repo"
    },
    "token_count": 310,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "dce2ce1e8b87378811a991c69c7a357f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8567f141d632afaeb71b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67fe8567f141d632afaeb71b\ntitle: How Do You Install, Configure and Use Python in Your Local Environment challengeType: 19\ndashedName: how-do-you-install-configure-and-use-python-in-your-local-environment\n--description--\nIn the last lecture, you learned what Python is and what you can do with it Now, let's look into how you can set up Python on your local machine The best way to install Python on Windows and Mac is to download the installer from the official Python website We'll also go over running Python on Linux later in this lecture Go to https://www python org/ and hover over \"Downloads\" A modal will appear showing the current version of Python for your OS We'll go over how to install Python on a computer running macOS first:\nClick on the button showing the current version of Python (from the previous modal), and you'll start downloading a pkg installation file automatically Once the pkg installer is finished downloading, open it, then click \"Continue\" in the window that opens up Continue clicking the \"Continue\" button until you get to the \"Installation Type\" section There, click the \"Install\" button Enter in your password if necessary, then start the installation After that, you should get a congratulations message saying that Python has been successfully installed Click the \"Close\" button, and you're done You can verify the installation by opening up your terminal and running python --version or python3 --version You can also open the Python interpreter by running python or python3 in the terminal Note that, on some older macOS and Linux systems, python can be reserved for Python 2, while python3 is for Python 3 specifically If you run python --version and see a version of Python 2 like Python 2 7 18, then it's possible that your OS relies on some software that was written in the older version of Python If that's the case, you should use python3 to run your Python code going forward To install Python on Windows, follow these steps:\nGo to https://www python org/, and hover over “Downloads“ You should see a modal that says \"Download for Windows\" and a download button with the current version of Python Click on the version number, and you'll start downloading a Windows executable ( exe) file automatically Once you've finished downloading the Python installer for Windows, double-click on it, and follow the instructions When you see the option Add python",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4598,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8567f141d632afaeb71b.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "fbf9d915bbc5264f21516c0376fd445c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8567f141d632afaeb71b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "To install Python on Windows, follow these steps: Go to https://www python org/, and hover over “Downloads“ You should see a modal that says \"Download for Windows\" and a download button with the current version of Python Click on the version number, and you'll start downloading a Windows executable ( exe) file automatically Once you've finished downloading the Python installer for Windows, double-click on it, and follow the instructions When you see the option Add pythonexe to Path, check that option, then click Install Now Doing that will make things easier for you later You can verify the installation by opening up a command line shell like PowerShell and running python --version You can also open the Python interpreter by running python For Python on Linux, most major distros like Ubuntu, Debian, and Fedora come with Python Just open a terminal and run python --version, or python3 --version:\nIf either command doesn't show a version of Python, you can search for an installation package for your flavor of Linux at https://www python org, or search online for the recommended way to install Python for your distro --questions--\n--text--\nWhich address can you download Python from --answers--\nwikipedia org\n--feedback--\nThink about the official Python website python3 com\n--feedback--\nThink about the official Python website python3 org\n--feedback--\nThink about the official Python website python org\n--video-solution--\n4\n--text--\nHow can you get Python added to path automatically on Windows --answers--\nBy installing Python --feedback--\nReview the last part of the lecture By checking the \"add to path\" checkbox during the installation process By checking the \"use admin privileges\" checkbox --feedback--\nReview the last part of the lecture By downloading Python from python org --feedback--\nReview the last part of the lecture --video-solution--\n2\n--text--\nWhat kind of file do you download while installing Python for Windows --answers--\nA package file ( pkg)\n--feedback--\nThink about the extension of the file that you download when you want to install Python An AVI file --feedback--\nThink about the extension of the file that you download when you want to install Python An executable ( exe)\nAn executable JSON file\n--feedback--\nThink about the extension of the file that you download when you want to install Python --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4598,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8567f141d632afaeb71b.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "531e62aec1acfc21cf9516b1b4931f6b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8597975ea634042cad8f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67fe8597975ea634042cad8f\ntitle: How Do You Declare Variables and What Are Naming Conventions to Name Variables challengeType: 19\ndashedName: how-do-you-declare-variables-and-what-are-naming-conventions-to-name-variables\n--description--\nIn Python, variables are like a labelled box for storing and referencing data of different types To declare variables in Python, you assign a value to an identifier with the assignment (=) operator You don't need to use special keywords like let or const in JavaScript, or char in C# In Python, you just write the name of the variable on the left, followed by the assignment operator, and the value you want to assign the variable on the right Here's an example of how to declare name and age variables:\npython\nname = 'John Doe'\nage = 25\nWhen naming variables in Python, there are some important rules you should keep in mind:\nVariable names can only start with a letter or an underscore (_), not a number Variable names can only contain alphanumeric characters (a-z, A-Z, 0-9) and underscores (_) Variable names are case-sensitive — age, Age, and AGE are all considered unique Variable names cannot be one of Python's reserved keywords such as if, class, or def If you break any of those rules, your Python program will throw a SyntaxError:\nbash\n5variable_name = 5\n^\nSyntaxError: invalid syntax\nNow let's go over some common naming conventions for variables in Python First, variables names should be in lowercase, with separate words separated by an underscore This is called snake case:\npython\nmy_variable_name = 'freeCodeCamp'\nNext, you should use descriptive names for variables For example, if you want to save a user's age as a variable, user_age is better than age or an abbreviation like ua:\npython\nuser_age = 30\nThis way, you can easily communicate the purpose of a variable to other team members (or to your future self) in a large codebase Another convention is to avoid using single-letter variable names This is very common in Python, but should be avoided because variable names with a single letter communicate no purpose or meaning:\npython\nx = 56 # What do you mean by x This is different if you are in a loop or something similar, as variable names like i, j, k, and so on are common and acceptable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4988,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8597975ea634042cad8f.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "467e4e7d3d913d33d5df21511dbfedff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8597975ea634042cad8f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "to your future self) in a large codebase Another convention is to avoid using single-letter variable names This is very common in Python, but should be avoided because variable names with a single letter communicate no purpose or meaning: python x = 56 # What do you mean by x This is different if you are in a loop or something similar, as variable names like i, j, k, and so on are common and acceptableAlso, the pound symbol (#) and the text that follows in the example above is called a comment You might already be familiar with comments, so let's go over them quickly and explain how they work In Python, comments start with a pound symbol (#), and the language ignores everything after the # symbol on that line:\n```python\nThis is a single-line comment\n```\nMulti-line comments can be created by using consecutive single-line comments:\n```python\nThis is a\nmulti-line\ncomment\n```\nYou can use comments to explain your code, leave reminders for yourself, or clarify why a line exists Comments are especially helpful when you're learning or working in teams However, you shouldn't use comments to explain what your variable names mean Instead, the names you choose for your variables should be descriptive and communicate what they're for, and follow the other naming rules mentioned earlier to prevent syntax errors --questions--\n--text--\nHow do you declare a variable in Python --answers--\nUsing the let keyword --feedback--\nPython doesn't require keywords for variable declaration Declaring with const --feedback--\nPython doesn't require keywords for variable declaration Using the var keyword --feedback--\nPython doesn't require keywords for variable declaration Assigning a value with the = operator --video-solution--\n4\n--text--\nWhich of these is not a rule for naming variables --answers--\nVariable names must start with a letter or an underscore --feedback--\nPython treats uppercase and lowercase letters as different Variable names are case-insensitive Variable names cannot use Python reserved keywords --feedback--\nPython treats uppercase and lowercase letters as different Variable names can contain letters, numbers, and underscores\n--feedback--\nPython treats uppercase and lowercase letters as different --video-solution--\n2\n--text--\nWhy should you avoid using single-letter variable names --answers--\nThey do not communicate the purpose of the variable Python does not allow single-letter variable names\n--feedback--\nMeaningful variable names improve readability in large codebases",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4988,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8597975ea634042cad8f.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "1abe20975a75ed296a03a32704de5699",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8597975ea634042cad8f.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "as different Variable names are case-insensitive Variable names cannot use Python reserved keywords --feedback-- Python treats uppercase and lowercase letters as different Variable names can contain letters, numbers, and underscores --feedback-- Python treats uppercase and lowercase letters as different --video-solution-- 2 --text-- Why should you avoid using single-letter variable names --answers-- They do not communicate the purpose of the variable Python does not allow single-letter variable names --feedback-- Meaningful variable names improve readability in large codebasesThey increase the risk of syntax errors\n--feedback--\nMeaningful variable names improve readability in large codebases They use more memory than longer variable names --feedback--\nMeaningful variable names improve readability in large codebases --video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4988,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8597975ea634042cad8f.md",
      "source_type": "git_repo"
    },
    "token_count": 149,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "e29643a6ce1025ffda2a9f474a31c042",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8599c83979345ff9a91a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67fe8599c83979345ff9a91a\ntitle: How Does the Print Function Work challengeType: 19\ndashedName: how-does-the-print-function-work\n--description--\nEvery programming language has some way to output data to the terminal with a built-in method, function, property, or keyword In Python, you can use the print function to print data to the terminal Let's take a closer look at the print function so you can start using it with confidence One of the first things you do when you're learning any programming language is to write a simple Hello world program You can do that really easily in Python with just the print function To do that, you just need to put the string Hello world in between the opening and closing parentheses you use to call the print function:\npython\nprint('Hello world ') # Hello world You will learn more about strings and functions in Python in future lectures For now, just consider strings as a sequence of characters surrounded by either single (') or double (\") quotation marks There's a lot more to the print function than first meets the eye There are four other arguments you can pass to it, so here's the full syntax of the function:\npython\nprint(*objects, sep=' ', end='\\n', file=sys stdout, flush=False)\nNote that each of the arguments must be separated by a comma, otherwise you'll get a syntax error Here are more details about each argument:\nobjects: The data you want to print The * sign means that you can print multiple things to the terminal by passing in multiple objects (in other words, strings, variables, numbers, and so on) separated by commas sep=' ': The separator between the objects This defaults to a single space character (' ') end='\\n': What to print at the end of the object This defaults to a new line character ('\\n') file=sys stdout: Determines where to send the output The default is the terminal, but it can be a file flush=False: Determines whether to show the output data right away The default is False, which means Python may wait before displaying the output You might be wondering how the other arguments outside of object are useful Let's take a look at some common use cases If you print multiple things at once, they're just separated by spaces by default",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7493,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8599c83979345ff9a91a.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "6ec7275a1352be00f66b6b112c1ce941",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8599c83979345ff9a91a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Determines where to send the output The default is the terminal, but it can be a file flush=False: Determines whether to show the output data right away The default is False, which means Python may wait before displaying the output You might be wondering how the other arguments outside of object are useful Let's take a look at some common use cases If you print multiple things at once, they're just separated by spaces by defaultFor example:\n```python\nprint('Footballers:', 'Ronaldo', 'Messi', 'Hazard', 'Kante', 'Okocha')\nOutput: Footballers: Ronaldo Messi Hazard Kante Okocha\n```\nBut you can use another separator of your choice with the sep argument:\n```python\nprint('Footballers:', 'Ronaldo', 'Messi', 'Hazard', 'Kante', 'Okocha', sep=', ')\nOutput: Footballers:, Ronaldo, Messi, Hazard, Kante, Okocha\n```\nIn this example, you passed a comma followed by a single space character to sep But the comma in front of the first value, Footballers: doesn't make sense, right To get rid of that comma, you can move the space to the Footballers: string directly, and use a plus sign (+):\n```python\nprint('Footballers: ' + 'Ronaldo', 'Messi', 'Hazard', 'Kante', 'Okocha', sep=', ')\nOutput: Footballers: Ronaldo, Messi, Hazard, Kante, Okocha\n```\nThis is called string concatenation, which is when you combine multiple strings into one In this case, you're combing the strings Footballers: and Ronaldo first, resulting in Footballers: Ronaldo, before printing everything to the terminal You'll learn more about string concatenation in future lectures The end parameter lets you avoid a common issue with the print function, where it automatically prints a new line when you have multiple of it Here's an example:\nThe end parameter lets you modify the ending of the output By default, the end character is a newline character (\\n), which is helpful in most cases But what if you call print multiple times in a row",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7493,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8599c83979345ff9a91a.md",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "d9a21405718ba9101933726a24204e7c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8599c83979345ff9a91a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "You'll learn more about string concatenation in future lectures The end parameter lets you avoid a common issue with the print function, where it automatically prints a new line when you have multiple of it Here's an example: The end parameter lets you modify the ending of the output By default, the end character is a newline character (\\n), which is helpful in most cases But what if you call print multiple times in a row:\n```python\nprint('Footballers:')\nprint('Ronaldo')\nprint('Messi')\nprint('Hazard')\nprint('Kante')\nprint('Okocha')\nOutput:\nFootballers:\nRonaldo\nMessi\nHazard\nKante\nOkocha\n```\nTo avoid this common issue, you can specify a different value for the end argument:\n```python\nprint('Footballers:', end=' ')\nprint('Ronaldo', end=', ')\nprint('Messi', end=', ')\nprint('Hazard', end=', ')\nprint('Kante', end=', ')\nprint('Okocha', end=' ')\nOutput: Footballers: Ronaldo, Messi, Hazard, Kante, Okocha ```\nHow cool is that Here's how you can use the file argument to write the output of the print function to a separate file:\npython\nwith open('output txt', 'w') as f:\nprint('Hello world ', file=f)\nThis will print the text Hello world into a file named output txt If the file doesn't exist, it will be automatically created You will learn more about how working with the filesystem in future lectures The last argument of the print function we showed in its basic syntax is flush When set to True, it immediately shows what you want to print instead of waiting for a short time The last argument is flush When this is set to True, whatever you're outputting is shown immediately rather than waiting for potential delays in the program's execution:\n```python\nimport time\nprint('Processing ', end=' ', flush=True)\ntime sleep(2)\nprint('Done ')\n```\nIn this case, the Processing… text immediately appears in the terminal, then time sleep(2) delays the Done text from appearing for 2 seconds This makes flush a great tool for displaying progress bars and loading text And that's how the print function works --questions--\n--text--\nWhat are the arguments of the print() function in Python",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7493,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8599c83979345ff9a91a.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "9effc3b07f958aa465ce43b5575854c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8599c83979345ff9a91a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "waiting for potential delays in the program's execution: ```python import time print('Processing ', end=' ', flush=True) time sleep(2) print('Done ') ``` In this case, the Processing… text immediately appears in the terminal, then time sleep(2) delays the Done text from appearing for 2 seconds This makes flush a great tool for displaying progress bars and loading text And that's how the print function works --questions-- --text-- What are the arguments of the print() function in Python--answers--\nobjects, delimiter, newline, output, buffer\n--feedback--\nThink about the arguments that control formatting, output location, and buffering behavior data, separator, terminator, destination, force_output\n--feedback--\nThink about the arguments that control formatting, output location, and buffering behavior values, splitter, stop, stream, immediate\n--feedback--\nThink about the arguments that control formatting, output location, and buffering behavior objects, sep, end, file, flush\n--video-solution--\n4\n--text--\nWhat's one problem the end argument of the print() function lets you avoid --answers--\nIt prevents print statements from adding an extra space between words --feedback--\nThink about how print() moves to the next line after execution It stops print statements from printing in reverse order --feedback--\nThink about how print() moves to the next line after execution It prevents print statements from automatically printing a new line It stops print statements from printing duplicate values --feedback--\nThink about how print() moves to the next line after execution --video-solution--\n3\n--text--\nWhat happens when the flush argument is set to True in the print() function --answers--\nThe output is printed in uppercase letters --feedback--\nThink about how Python may delay showing output The output is immediately displayed instead of being buffered The print statement runs twice for the same output --feedback--\nThink about how Python may delay showing output The output is saved to a file instead of being printed to the console --feedback--\nThink about how Python may delay showing output --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7493,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe8599c83979345ff9a91a.md",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "33f60b9b2224d7ab00f4ac2d14f3d7b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859a00971c34a23abd43.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67fe859a00971c34a23abd43\ntitle: What Are Common Data Types in Python and How Do You Get the Type of a Variable challengeType: 19\ndashedName: what-are-common-data-types-in-python-and-how-do-you-get-the-type-of-a-variable\n--description--\nPython is a dynamically-typed language like JavaScript, meaning you don't need to explicitly declare types for variables The language knows what data type a variable is based on what you assign to it Here are some examples:\npython\nname = 'John Doe' # Python knows this is a string\nage = 25 # Python knows this is an integer\nThis is in contrast to some statically-typed languages like C#, Java, and C++, where you have to declare types with variables, like this:\ncsharp\nstring name = 'John Doe'\nint age = 25\nThe dynamic-typing nature of Python makes coding really fast and more flexible, but it can lead to unexpected bugs because type errors are detected only when a program runs, not when the program compiles Here are the most common data types you'll use in Python:\nInteger: A whole number without decimals, for example, 10 or -5 python\nmy_integer_var = 10\nprint('Integer:', my_integer_var) # Integer: 10\nFloat: A number with a decimal point, like 4 41 or -0 4 python\nmy_float_var = 4 50\nprint('Float:', my_float_var) # Float 4 50\nComplex: A number with a real and imaginary part, like 6 + 7j python\nmy_complex_var = 3 + 4j\nprint('Complex:', my_complex_var) # Complex: (3+4j)\nString: A sequence of characters enclosed in single or double quotation marks like 'Hello world ' python\nmy_string_var = 'hello'\nprint('String:', my_string_var) # String: hello\nBoolean: A true or false type, written as True or False python\nmy_boolean_var = True\nprint('Boolean:', my_boolean_var) # Boolean: True\nSet: An unordered collection of unique elements, like {4, 2, 0}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9278,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859a00971c34a23abd43.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "cff135d59f7f0fab8c821d3ca411f78a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859a00971c34a23abd43.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a real and imaginary part, like 6 + 7j python my_complex_var = 3 + 4j print('Complex:', my_complex_var) # Complex: (3+4j) String: A sequence of characters enclosed in single or double quotation marks like 'Hello world ' python my_string_var = 'hello' print('String:', my_string_var) # String: hello Boolean: A true or false type, written as True or False python my_boolean_var = True print('Boolean:', my_boolean_var) # Boolean: True Set: An unordered collection of unique elements, like {4, 2, 0}python\nmy_set_var = {7, 5, 8}\nprint('Set:', my_set_var) # Set: {7, 5, 8}\nDictionary: A collection of key-value pairs enclosed in curly braces, like {'name': 'John Doe', 'age': 28} python\nmy_dictionary_var = {'name': 'Alice', 'age': 25}\nprint('Dictionary:', my_dictionary_var) # Dictionary: {'name': 'Alice', 'age': 25}\nTuple: An immutable ordered collection, enclosed in brackets, like (7, 8, 4) python\nmy_tuple_var = (7, 5, 8)\nprint('Tuple:', my_tuple_var) # Tuple: (7, 5, 8)\nRange: A sequence of numbers, often used in loops, for example, range(5) python\nmy_range_var = range(5)\nprint(my_range_var) # range(0, 5)\nList: An ordered collection of elements that supports different data types python\nmy_list = [22, 'Hello world', 3 14, True]\nprint(my_list) # [22, 'Hello world', 3 14, True]\nNone: A special value that represents the absence of a value python\nmy_none_var = None\nprint('None:', my_none_var) # None: None\nMany other programming languages group data types broadly as either primitive or reference types Primitive types are simple and immutable, meaning they can't be changed once declared Reference types can hold multiple values, and are either mutable or immutable But Python doesn't draw a hard line between those two groups Instead, all data gets treated as objects, and some objects are immutable while others are mutable Immutable data types can't be modified or altered once they're declared",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9278,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859a00971c34a23abd43.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "d6c269fee5c0db2d19e35787371296a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859a00971c34a23abd43.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "other programming languages group data types broadly as either primitive or reference types Primitive types are simple and immutable, meaning they can't be changed once declared Reference types can hold multiple values, and are either mutable or immutable But Python doesn't draw a hard line between those two groups Instead, all data gets treated as objects, and some objects are immutable while others are mutable Immutable data types can't be modified or altered once they're declaredYou can point their variables at something new, which is called reassignment, but you can't change the original object itself by adding, removing, or replacing any of its elements Examples of immutable data types in Python are string, integer, float, boolean, tuple, and range Here's an example showing that, while you can reassign a different string to a variable, direct modification of a string isn't allowed because strings are immutable:\n```python\ngreeting = 'hi'\ngreeting = 'hello'\nprint(greeting) # hello\ngreeting[0] = 'H' # TypeError: 'str' object does not support item assignment\n```\nOn the other hand, you can change mutable types without giving them a new name You can add, remove, or update items right where they live Examples are a list and a dictionary Here's an example of updating an element in a list:\n```python\nnums = [1, 2, 3]\nnums[0] = 4\nprint(nums) # [4, 2, 3]\n```\nTo get the data type of a variable, you can use the type() function:\n```python\nmy_var_1 = 'Hello world'\nmy_var_2 = 21\nprint(type(my_var_1)) #\nprint(type (my_var_2)) #\n```\nAnd here's are all the data types covered in this lecture, along with their types in the terminal:\n```python\nmy_integer_var = 10\nprint('Integer:', my_integer_var, '| Type:', type(my_integer_var))  # Integer: 10 | Type:\nmy_float_var = 4 50\nprint('Float:', my_float_var, '| Type:', type(my_float_var))  # Float: 4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9278,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859a00971c34a23abd43.md",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "ff32d96c691ae9cc8b601a5257fc5ddb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859a00971c34a23abd43.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "[4, 2, 3] ``` To get the data type of a variable, you can use the type() function: ```python my_var_1 = 'Hello world' my_var_2 = 21 print(type(my_var_1)) # print(type (my_var_2)) # ``` And here's are all the data types covered in this lecture, along with their types in the terminal: ```python my_integer_var = 10 print('Integer:', my_integer_var, '| Type:', type(my_integer_var)) # Integer: 10 | Type: my_float_var = 4 50 print('Float:', my_float_var, '| Type:', type(my_float_var)) # Float: 450 | Type:\nmy_complex_var = 3 + 4j\nprint('Complex:', my_complex_var, '| Type:', type(my_complex_var))  # Complex: (3+4j) | Type:\nmy_string_var = 'hello'\nprint('String:', my_string_var, '| Type:', type(my_string_var))  # String: hello | Type:\nmy_boolean_var = True\nprint('Boolean:', my_boolean_var, '| Type:', type(my_boolean_var))  # Boolean: True | Type:\nmy_set_var = {7, 5, 8}\nprint('Set:', my_set_var, '| Type:', type(my_set_var))  # Set: {7, 5, 8} | Type:\nmy_dictionary_var = {'name': 'Alice', 'age': 25}\nprint('Dictionary:', my_dictionary_var, '| Type:', type(my_dictionary_var))  # Dictionary: {'name': 'Alice', 'age': 25} | Type:\nmy_tuple_var = (7, 5, 8)\nprint('Tuple:', my_tuple_var, '| Type:', type(my_tuple_var))  # Tuple: (7, 5, 8) | Type:\nmy_range_var = range(5)\nprint('Range:', list(my_range_var), '| Type:', type(my_range_var))  # Range: [0, 1, 2, 3, 4] | Type:\nmy_list = [22, 'Hello world', 3 14, True]\nprint('List:', list(my_list), '| Type:', type(my_list)) # List: [22, 'Hello world', 3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9278,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859a00971c34a23abd43.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "a7473ba8201a2b55a83e16b09acbfd11",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859a00971c34a23abd43.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "5, 8} | Type: my_dictionary_var = {'name': 'Alice', 'age': 25} print('Dictionary:', my_dictionary_var, '| Type:', type(my_dictionary_var)) # Dictionary: {'name': 'Alice', 'age': 25} | Type: my_tuple_var = (7, 5, 8) print('Tuple:', my_tuple_var, '| Type:', type(my_tuple_var)) # Tuple: (7, 5, 8) | Type: my_range_var = range(5) print('Range:', list(my_range_var), '| Type:', type(my_range_var)) # Range: [0, 1, 2, 3, 4] | Type: my_list = [22, 'Hello world', 3 14, True] print('List:', list(my_list), '| Type:', type(my_list)) # List: [22, 'Hello world', 314, True] | Type:\nmy_none_var = None\nprint('None:', my_none_var, '| Type:', type(my_none_var))  # None: None | Type:\n```\nAnother way to check the type of a variable is to use the built-in isinstance() function, which checks if a variable matches a specific data type isinstance() takes in an object and the type you want to check it against, then returns a boolean Here are some examples:\npython\nisinstance('Hello world', str) # True\nisinstance(True, bool) # True\nisinstance(42, int) # True\nisinstance('John Doe', int) # False\nAlthough Python is dynamically typed, you can still add type hints These are optional signals that tell other developers what the data type of a variable or function is expected to be Here's a quick example for variable types:\npython\nuser_name: str = 'John Doe'\nuser_age: int = 24\nHere's another example showing hints for function parameters and a return type:\npython\ndef greet(name: str, age: int) -> str:\nreturn f'Hello, {name}, age {age} '\nAnd here's a combination of the two:\n```python\ndef greet(name: str, age: int) -> str:\nreturn f'Hello, {name}, age {age}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9278,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859a00971c34a23abd43.md",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "ce417fdc66f5267d21ee95a1214034e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859a00971c34a23abd43.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "what the data type of a variable or function is expected to be Here's a quick example for variable types: python user_name: str = 'John Doe' user_age: int = 24 Here's another example showing hints for function parameters and a return type: python def greet(name: str, age: int) -> str: return f'Hello, {name}, age {age} ' And here's a combination of the two: ```python def greet(name: str, age: int) -> str: return f'Hello, {name}, age {age}'\nuser_name: str = 'John Doe'\nuser_age: int = 24\nprint(greet(user_name, user_age)) # Hello, John Doe, age 24 ```\nNote that, unlike TypeScript which enforces types at compile time, Python just uses these hints for static analysis, documentation, and editor support, not for enforcing types during runtime This can help developers catch bugs early and improve code readability, especially in large projects --questions--\n--text--\nWhat does it mean that Python is dynamically typed --answers--\nYou must manually specify the data type of every variable --feedback--\nThink about how Python figures out the data type for you Python does not support different data types --feedback--\nThink about how Python figures out the data type for you Python automatically determines the data type based on the assigned value Variables in Python cannot change their data type after assignment --feedback--\nThink about how Python figures out the data type for you --video-solution--\n3\n--text--\nWhat is the difference between the integer and float data types --answers--\nIntegers can store both positive and negative numbers, while floats can only store positive numbers --feedback--\nOne has decimals, the other doesn't Integers are whole numbers without decimals, while floats are numbers with decimal points Floats take up less memory than integers in Python --feedback--\nOne has decimals, the other doesn't Integers can only store numbers up to 1000, while floats have no limit --feedback--\nOne has decimals, the other doesn't --video-solution--\n2\n--text--\nHow can you check the data type of a variable in Python --answers--\nBy using the type() function, like type(my_var) By checking the variable's value manually --feedback--\nThere's a built-in function for this By using the typeof function, like typeof(my_var) By converting the variable to a string and analyzing its characters",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9278,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859a00971c34a23abd43.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "62f88e767f8f13dcc6833be14d021141",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859a00971c34a23abd43.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "other doesn't Integers can only store numbers up to 1000, while floats have no limit --feedback-- One has decimals, the other doesn't --video-solution-- 2 --text-- How can you check the data type of a variable in Python --answers-- By using the type() function, like type(my_var) By checking the variable's value manually --feedback-- There's a built-in function for this By using the typeof function, like typeof(my_var) By converting the variable to a string and analyzing its characters--feedback--\nThere's a built-in function for this --video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9278,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859a00971c34a23abd43.md",
      "source_type": "git_repo"
    },
    "token_count": 125,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "093ee1138586983aa04856492544c978",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859c1ab68734d7c666cb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67fe859c1ab68734d7c666cb\ntitle: How Do You Work With Strings challengeType: 19\ndashedName: how-do-you-work-with-strings\n--description--\nA string is a sequence of characters surrounded by either single or double quotation marks In some programming languages, characters surrounded by single quotes are treated differently than characters surrounded by double quotes, but in Python, they're treated equally So, you can use either when working with strings Here are some examples of strings:\npython\nmy_str_1 = 'Hello'\nmy_str_2 = \"World\"\nIf you need a multi-line string, you can use triple double quotes or single quotes:\npython\nmy_str_3 = \"\"\"Multiline\nstring\"\"\"\nmy_str_4 = '''Another\nmultiline\nstring'''\nIf your string contains either single or double quotation marks, then you have two options:\nUse the opposite kind of quotes That is, if your string contains single quotes, use double quotes to wrap the string, and vice versa:\npython\nmsg = \"It's a sunny day\"\nquote = 'She said, \"Hello World \"'\nEscape the single or double quotation mark in the string with a backslash (\\) With this method, you can use either single or double quotation marks to wrap the string itself:\npython\nmsg = 'It\\'s a sunny day'\nquote = \"She said, \\\"Hello \\\"\"\nYou can also combine multiple strings together with the plus (+) operator This process is called string concatenation Here's how to concatenate two strings with the plus operator:\n```python\nmy_str_1 = 'Hello'\nmy_str_2 = \"World\"\nstr_plus_str = my_str_1 + ' ' + my_str_2\nprint(str_plus_str) # Hello World\n```\nBut note that this only works with strings If you try to concatenate a string with a number, you'll get a TypeError:\n```python\nname = 'John Doe'\nage = 26\nname_and_age = name + age\nprint(name_and_age) # TypeError: can only concatenate str (not \"int\") to str\n```\nThis happens because Python does not automatically convert other data types like integers into strings when you concatenate them Python requires all elements to be strings before it can concatenate them",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8588,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859c1ab68734d7c666cb.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "3f4bb11b81833d66c6a99bccbbfb89eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859c1ab68734d7c666cb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "that this only works with strings If you try to concatenate a string with a number, you'll get a TypeError: ```python name = 'John Doe' age = 26 name_and_age = name + age print(name_and_age) # TypeError: can only concatenate str (not \"int\") to str ``` This happens because Python does not automatically convert other data types like integers into strings when you concatenate them Python requires all elements to be strings before it can concatenate themTo fix that, you can convert the number into a string with the built-in str() function:\n```python\nname = 'John Doe'\nage = 26\nname_and_age = name + str(age)\nprint(name_and_age) # John Doe26\n```\nYou can also use the augmented assignment operator for concatenation This is represented by a plus and equals sign (+=), and performs both concatenation and assignment in one step Here's it in action:\n```py\nname = 'John Doe'\nage = 26\nname_and_age = name  # Start with the name\nname_and_age += str(age)  # Append the age as string\nprint(name_and_age)  # John Doe26\n```\nApart from regular strings, Python also has a category of string called f-strings, which is short for formatted string literals It allows you to handle interpolation and also do some concatenation with a compact and readable syntax F-strings start with f (either lowercase or uppercase) before the quotes, and allow you to embed variables or expressions inside replacement fields indicated by curly braces ({}) Here's an example:\n```python\nname = 'John Doe'\nage = 26\nname_and_age = f'My name is {name} and I am {age} years old'\nprint(name_and_age) # My name is John Doe and I am 26 years old\nnum1 = 5\nnum2 = 10\nprint(f'The sum of {num1} and {num2} is {num1 + num2}') # The sum of 5 and 10 is 15\n```\nNow that you've learned about string concatenation and f-strings, let's look at how you can get the length of a string and work with the individual characters in a string, a process called indexing To get the length of a string, you can use the built-in len() function",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8588,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859c1ab68734d7c666cb.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "d5cf622a60e07a75e1f56e4ba90c7882",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859c1ab68734d7c666cb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "years old num1 = 5 num2 = 10 print(f'The sum of {num1} and {num2} is {num1 + num2}') # The sum of 5 and 10 is 15 ``` Now that you've learned about string concatenation and f-strings, let's look at how you can get the length of a string and work with the individual characters in a string, a process called indexing To get the length of a string, you can use the built-in len() functionHere's an example:\npython\nmy_str = 'Hello world'\nprint(len(my_str))  # 11\nNow onto indexing Each character in a string has a position called an index The index is zero-based, meaning that the index of the first character of a string is 0, the index of the second character is 1, and so on To access a character by its index, you use square brackets ([]) with the index of the character you want to access inside Here are some examples:\n```python\nmy_str = \"Hello world\"\nprint(my_str[0])  # H\nprint(my_str[6])  # w\n```\nNegative indexing is also allowed, so you can get the last character of any string with -1, the second-to-last character with -2, and so on:\npython\nmy_str = 'Hello world'\nprint(my_str[-1])  # d\nprint(my_str[-2]) # l\nNow that you're familiar with indexing, let's take things a bit further with string slicing String slicing lets you extract a portion of a string or work with only a specific part of it Here's the basic syntax:\npython\nstring[start:stop]\nIf you want to extract characters from a certain index to another, you just separate the start and stop indices with a colon:\npython\nmy_str = 'Hello world'\nprint(my_str[1:4]) # ell\nNote that the stop index is non-inclusive, so [1:4] just extracted the characters from index 1, and up to, but not including, the character at index 4 You can also omit the start and stop indices, and Python will default to 0 or the end of the string, respectively",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8588,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859c1ab68734d7c666cb.md",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "c5809de9f13776a06b0e13925f850c5a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859c1ab68734d7c666cb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "extract characters from a certain index to another, you just separate the start and stop indices with a colon: python my_str = 'Hello world' print(my_str[1:4]) # ell Note that the stop index is non-inclusive, so [1:4] just extracted the characters from index 1, and up to, but not including, the character at index 4 You can also omit the start and stop indices, and Python will default to 0 or the end of the string, respectivelyFor example, here's what happens if you omit the start index:\npython\nmy_str = 'Hello world'\nprint(my_str[:7])  # Hello w\nThis extracts everything from index 0 up to (but not including), the character at index 7 And here's what happens if you omit the stop index:\npython\nmy_str = 'Hello world'\nprint(my_str[8:])  # rld\nThis extracts everything from the character at index 8 until the end of the string You can also omit both the start and stop indices, which will extract the whole string:\npython\nmy_str = 'Hello world'\nprint(my_str[:])  # Hello world\nApart from the start and stop indices, there's also an optional step parameter, which is used to specify the increment between each index in the slice Here's the syntax for that:\npython\nstring[start:stop:step]\nIn the example below, the slicing starts at index 0, stops before 11, and extracts every second character:\npython\nmy_str = 'Hello world'\nprint(my_str[0:11:2])  # Hlowrd\nA helpful trick you can do with the step parameter is to reverse a string by setting step to -1, and leaving start and stop blank:\npython\nmy_str = 'Hello world'\nprint(my_str[::-1]) # dlrow olleH\nIt can also be helpful to check if a character or set of characters exist in a string before slicing it To do that, Python provides the in operator, which returns a boolean that specifies whether the character or characters exist in the string or not",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8588,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859c1ab68734d7c666cb.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "b1c4074a6c7ef823f20d10a334647dbd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859c1ab68734d7c666cb.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "do with the step parameter is to reverse a string by setting step to -1, and leaving start and stop blank: python my_str = 'Hello world' print(my_str[::-1]) # dlrow olleH It can also be helpful to check if a character or set of characters exist in a string before slicing it To do that, Python provides the in operator, which returns a boolean that specifies whether the character or characters exist in the string or notHere are some examples:\n```python\nmy_str = 'Hello world'\nprint('Hello' in my_str)  # True\nprint('hey' in my_str)    # False\nprint('hi' in my_str)    # False\nprint('e' in my_str)  # True\nprint('f' in my_str)  # False\n```\n--questions--\n--text--\nHow can you concatenate strings in Python --answers--\nBy using the + operator or f strings By using the * operator for joining strings --feedback--\nThere's a simple operator and a special string format for this By using the & operator to merge strings --feedback--\nThere's a simple operator and a special string format for this By assigning multiple strings to a list and printing them together --feedback--\nThere's a simple operator and a special string format for this --video-solution--\n1\n--text--\nHow do you define a multiline string in Python --answers--\nUsing parentheses () around the string --feedback--\nPython allows special quotes for multiline strings Using triple double quotes \"\"\" or triple single quotes ''' Using a backslash \\ at the end of each line --feedback--\nPython allows special quotes for multiline strings Using square brackets [] to enclose the string --feedback--\nPython allows special quotes for multiline strings --video-solution--\n2\n--text--\nHow do you extract a specific portion of a string in Python --answers--\nUsing parentheses with start and end positions --feedback--\nThis operation relies on character positions and uses bracket notation Using curly braces with start and stop positions --feedback--\nThis operation relies on character positions and uses bracket notation Using square brackets with start and stop positions Using angle brackets with start and stop positions --feedback--\nThis operation relies on character positions and uses bracket notation --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8588,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859c1ab68734d7c666cb.md",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "1755da78f9bceac78ec488165bfbbc71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859e9d3b3635197781c8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67fe859e9d3b3635197781c8\ntitle: How Do You Work With Integers and Floating Point Numbers challengeType: 19\ndashedName: how-do-you-work-with-integers-and-floating-point-numbers\n--description--\nIntegers and floats are the primary numeric data types in Python With them, you can store numeric data and perform mathematical operations Let's look at what integers and floats are, how to perform arithmetic calculations with them, and at several methods Python provides for working with both Integers are whole numbers without decimal points, either positive or negative:\n```python\nmy_int_1 = 56\nmy_int_2 = -4\nprint(type(my_int_1)) #\nprint(type(my_int_2)) #\n```\nHere's how to perform an addition operation with integers:\n```python\nmy_int_1 = 56\nmy_int_2 = 12\nsum_ints = my_int_1 + my_int_2\nprint('Integer Addition:', sum_ints) # Integer Addition: 68\n```\nHere's how to perform a subtraction with integers:\n```python\nmy_int_1 = 56\nmy_int_2 = 12\nSubtraction\ndiff_ints = my_int_1 - my_int_2\nprint('Integer Subtraction:', diff_ints) # Integer Subtraction: 44\n```\nHere's how to perform a multiplication operation with integers:\n```python\nmy_int_1 = 12\nmy_int_2 = 4\nMultiplication\nproduct_ints = my_int_1 * my_int_2\nprint('Integer Multiplication:', product_ints) # Integer Multiplication: 48\n```\nAnd here's how to perform a division operation with integers:\n```python\nmy_int_1 = 56\nmy_int_2 = 12\nDivision\ndiv_ints = my_int_1 / my_int_2\nprint('Integer Division:', div_ints) # Integer Division: 4 666666666666667\n```\nFloats are positive or negative numbers with decimal points, like 3 14, -0 5, or 0 0 ```python\nmy_float_1 = -12 0\nmy_float_2 = 4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859e9d3b3635197781c8.md",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "56dc04e9c0834a6796b599aa5db11bd9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859e9d3b3635197781c8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= 12 my_int_2 = 4 Multiplication product_ints = my_int_1 * my_int_2 print('Integer Multiplication:', product_ints) # Integer Multiplication: 48 ``` And here's how to perform a division operation with integers: ```python my_int_1 = 56 my_int_2 = 12 Division div_ints = my_int_1 / my_int_2 print('Integer Division:', div_ints) # Integer Division: 4 666666666666667 ``` Floats are positive or negative numbers with decimal points, like 3 14, -0 5, or 0 0 ```python my_float_1 = -12 0 my_float_2 = 49\nprint(type(my_float_1)) #\nprint(type(my_float_2)) #\n```\nHere's an addition operation with floats:\n```python\nmy_float_1 = 5 4\nmy_float_2 = 12 0\nfloat_addition = my_float_1 + my_float_2\nprint('Float Addition:', float_addition) # Float Addition: 17 4\n```\nHere's a subtraction operation with floats:\n```python\nmy_float_1 = 5 4\nmy_float_2 = 12 0\nfloat_subtraction = my_float_2 - my_float_1\nprint('Float Subtraction:', float_subtraction) # Float Subtraction: 6 6\n```\nHere's a multiplication operation with floats:\n```python\nmy_float_1 = 5 4\nmy_float_2 = 12 0\nfloat_multiplication = my_float_2 * my_float_1\nprint('Float Multiplication:', float_multiplication) # Float Multiplication: 64 80000000000001\n```\nAnd here's a division operation with floats:\n```python\nmy_float_1 = 5 4\nmy_float_2 = 12 0\nfloat_division = my_float_2 / my_float_1\nprint('Float Division:', float_division) # Float Division: 2 222222222222222\n```\nIf you add an integer and a float, the result is automatically converted to a float:\n```python\nmy_int = 56\nmy_float = 5 4\nsum_int_and_float = my_int + my_float\nprint(sum_int_and_float) # 61",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859e9d3b3635197781c8.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "d0ad61d34f2a847761b2f51b943069a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859e9d3b3635197781c8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "float_multiplication = my_float_2 * my_float_1 print('Float Multiplication:', float_multiplication) # Float Multiplication: 64 80000000000001 ``` And here's a division operation with floats: ```python my_float_1 = 5 4 my_float_2 = 12 0 float_division = my_float_2 / my_float_1 print('Float Division:', float_division) # Float Division: 2 222222222222222 ``` If you add an integer and a float, the result is automatically converted to a float: ```python my_int = 56 my_float = 5 4 sum_int_and_float = my_int + my_float print(sum_int_and_float) # 614\nprint(type(sum_int_and_float)) #\n```\nThis is true for other basic arithmetic operations, too, like subtraction, multiplication, and division If you mix integers and floats, Python will return a float as the result You can also perform more complex arithmetic calculations such as getting the remainder of two numbers with the modulo operator, floor division, and exponentiation with both integers and floats The modulo operator (%) returns the remainder when the value on the left is divided by the value on the right:\n```python\nmy_int_1 = 56\nmy_int_2 = 12\nmy_float_1 = 5 4\nmy_float_2 = 12 0\nmod_ints = my_int_1 % my_int_2\nmod_floats = my_float_2 % my_float_1\nprint('Integer Modulus:', mod_ints) # Integer Modulus: 8\nprint('Float Modulus:', mod_floats) # Float Modulus: 1 1999999999999993\n```\nFloor division divides two numbers and rounds down the result to the nearest whole number This is done with the double forward slash operator (//):\n```python\nmy_int_1 = 56\nmy_int_2 = 12\nmy_float_1 = 5 4\nmy_float_2 = 12 0\nfloor_div_ints = my_int_1 // my_int_2\nfloor_div_floats = my_float_2 // my_float_1\nprint('Integer Floor Division:', floor_div_ints) # Integer Floor Division: 4\nprint('Float Floor Division:', floor_div_floats) # Float Floor Division: 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859e9d3b3635197781c8.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "58e0afe3cf03b8ce4e5581bc86283fc5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859e9d3b3635197781c8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "Modulus:', mod_floats) # Float Modulus: 1 1999999999999993 ``` Floor division divides two numbers and rounds down the result to the nearest whole number This is done with the double forward slash operator (//): ```python my_int_1 = 56 my_int_2 = 12 my_float_1 = 5 4 my_float_2 = 12 0 floor_div_ints = my_int_1 // my_int_2 floor_div_floats = my_float_2 // my_float_1 print('Integer Floor Division:', floor_div_ints) # Integer Floor Division: 4 print('Float Floor Division:', floor_div_floats) # Float Floor Division: 20\n```\nExponentiation raises a number to the power of another, and is done with the double asterisk operator (**):\n```python\nmy_int_1 = 56\nmy_int_2 = 12\nmy_float_1 = 5 4\nmy_float_2 = 12 0\nexp_ints = my_int_1 ** my_int_2\nexp_floats = my_float_1 ** my_float_2\nprint('Integer Exponentiation:', exp_ints) # Integer Exponentiation: 951166013805414055936\nprint('Float Exponentiation:',  exp_floats) # Float Exponentiation: 614787626 1765089\n```\nPython also provides built-in functions for converting either numeric data or strings into integers or floats You can use the float() function to convert an integer into a float by adding a decimal point of 0 to the integer:\n```python\nmy_int_1 = 56\nmy_float_1 = float(my_int_1)\nprint(my_float_1)  # 56 0\nprint(type(my_float_1))  #\n```\nAnd you can use the int() function to convert a float into an integer, which removes the decimal point and everything after it from the float you pass it:\n```python\nmy_float = 12 92563\nmy_int = int(my_float)\nprint(my_int)  # 12\nprint(type(my_int))  #\n```\nAlso, you can use the same built-in functions to convert a string into either a float or integer:\n```python\nmy_str_int = '45'\nmy_str_float = '7",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859e9d3b3635197781c8.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "bc7a2857d23d306d27947c97a55bfe0c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859e9d3b3635197781c8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "float(my_int_1) print(my_float_1) # 56 0 print(type(my_float_1)) # ``` And you can use the int() function to convert a float into an integer, which removes the decimal point and everything after it from the float you pass it: ```python my_float = 12 92563 my_int = int(my_float) print(my_int) # 12 print(type(my_int)) # ``` Also, you can use the same built-in functions to convert a string into either a float or integer: ```python my_str_int = '45' my_str_float = '78'\nconverted_int = int(my_str_int)\nconverted_float = float(my_str_float)\nprint(converted_int, type(converted_int))  # 45\nprint(converted_float, type(converted_float))  # 7 8\n```\nHere are some other methods Python provides for working with integers and floats round(): Rounds a number to the specified number of decimal places By default this function rounds to the nearest integer, and returns a whole number with no decimal places:\n```python\nmy_int_1 = 4 798\nmy_int_2 = 4 253\nrounded_int_1 = round(my_int_1)\nrounded_int_2 = round(my_int_2, 1)\nprint(rounded_int_1) # 5\nprint(rounded_int_2) # 4 3\n```\nabs(): returns the absolute value of a number,\n```python\nnum = -15\nabsolute_value = abs(num)\nprint(absolute_value) # 15\n```\nbin(): converts an integer to its binary representation as a string oct(): converts an integer to its octal representation as a string hex(): converts an integer to its hexadecimal representation as a string ```python\nmy_int = 56\nbinary_representation = bin(my_int)\nprint(binary_representation)  # 0b111000\noctal_representation = oct(my_int)\nprint(octal_representation) # 0o70\nhex_representation = hex(my_int)\nprint(hex_representation) # 0x38\n```\npow(): raises a number to the power of another or performs modular exponentiation",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859e9d3b3635197781c8.md",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "fe278ec364951d3b0891fb0ca76faa4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859e9d3b3635197781c8.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "absolute_value = abs(num) print(absolute_value) # 15 ``` bin(): converts an integer to its binary representation as a string oct(): converts an integer to its octal representation as a string hex(): converts an integer to its hexadecimal representation as a string ```python my_int = 56 binary_representation = bin(my_int) print(binary_representation) # 0b111000 octal_representation = oct(my_int) print(octal_representation) # 0o70 hex_representation = hex(my_int) print(hex_representation) # 0x38 ``` pow(): raises a number to the power of another or performs modular exponentiation```python\nresult_1 = pow(2, 3)  # Equivalent to 2 ** 3\nprint(result_1)  # 8\nresult_2 = pow(2, 3, 5)  # (2 ** 3) % 5\nprint(result_2)  # 3\n```\n--questions--\n--text--\nWhat does the double slash (//) operator do in Python --answers--\nIt performs floor division, rounding down the result to the nearest whole number It performs regular division and returns a float --feedback--\nThis operator is used for a special kind of integer division It represents a comment in Python --feedback--\nThis operator is used for a special kind of integer division It raises a number to the power of another --feedback--\nThis operator is used for a special kind of integer division --video-solution--\n1\n--text--\nWhich statement correctly describes integers in Python --answers--\nIntegers can only store positive whole numbers --feedback--\nThink about what integers represent, like whole values, not numbers with decimal points Integers are numbers with decimal points --feedback--\nThink about what integers represent, like whole values, not numbers with decimal points Integers are whole numbers without decimal points, either positive or negative Integers automatically convert to floats when performing division\n--feedback--\nThink about what integers represent, like whole values, not numbers with decimal points --video-solution--\n3\n--text--\nWhich method returns the absolute value of a number --answers--\nabs()\nround()\n--feedback--\nThink about the method that always gives a non-negative result sum()\n--feedback--\nThink about the method that always gives a non-negative result max()\n--feedback--\nThink about the method that always gives a non-negative result --video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8580,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859e9d3b3635197781c8.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "1ffa881c7d0da38497826762ce141cbe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859f55cd33356e322fd3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67fe859f55cd33356e322fd3\ntitle: How Do Functions Work in Python challengeType: 19\ndashedName: how-do-functions-work-in-python\n--description--\nFunctions are reusable pieces of code that run when you call them Many programming languages come with built-in functions that make it easier to get started Python is no exception, and we've already covered some built-in functions like print() in previous lectures Another helpful built-in function is input(), which lets you prompt the user for input:\npython\nname = input('What is your name ') # User types \"Kolade\" and presses Enter\nprint('Hello', name) # Output: Hello Kolade\nOn the other hand, int() converts a number, boolean, and a numeric string into an integer:\npython\nprint(int(3 14)) # 3\nprint(int('42')) # 42\nprint(int(True)) # 1\nprint(int(False)) # 0\nYou can also write your own custom functions To do that, you use the def keyword, followed by the name you want to give your function, a pair of parentheses, and a colon Then on a new line, you write the code your function should run The code the function runs is also referred to as the function's body Here's an example of a custom function named hello that prints the string Hello World to the terminal:\npython\ndef hello():\nprint('Hello World')\nTo run the function, you need to call it with its name followed by a pair of parentheses:\npython\nhello() # Hello World\nNotice the indentation before print('Hello World') The level of indentation defines a \"code block\" in Python, which is a group of statements that belong together While other programming languages use characters like curly braces to define code blocks, and just use indentation for readability, in Python, code blocks are determined by indentation Though you can use either two or four spaces to determine each level of indentation, the Python style guide recommends using four spaces Blocks are also found in loops and conditionals, which you'll learn about in future lectures Here's another simple function that prints the sum of two numbers to the terminal:\npython\ndef calculate_sum(a, b):\nprint(a + b)\nYou can see that our function, calculate_sum, has a and b in its parentheses, separated by a comma Those are called parameters",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6314,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859f55cd33356e322fd3.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "d49b60b73633c80f2e3035a8a65329e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859f55cd33356e322fd3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "two or four spaces to determine each level of indentation, the Python style guide recommends using four spaces Blocks are also found in loops and conditionals, which you'll learn about in future lectures Here's another simple function that prints the sum of two numbers to the terminal: python def calculate_sum(a, b): print(a + b) You can see that our function, calculate_sum, has a and b in its parentheses, separated by a comma Those are called parametersThink of parameters as placeholder variables that act as \"slots\" for the values you pass into functions when you call them To use the parameters, you have to pass in \"arguments\" Arguments are the values you pass to a function when you call it Here's how to call the calculate_sum function to sum together the numbers 3 and 1:\npython\ncalculate_sum(3, 1) # 4\nIf you call the function without the correct number of arguments, you'll get a TypeError:\n```python\ncalculate_sum()\nTypeError: calculate_sum() missing 2 required positional arguments: 'a' and 'b'\n```\nFunctions also use a special return keyword to exit the function and return a value If you don't explicitly use return, Python will return None by default Here's an example:\n```python\ndef calculate_sum(a, b):\nprint(a + b)\nmy_sum = calculate_sum(3, 1) # 4\nprint(my_sum) # None\n```\nYou can see that the calculate_sum function prints the sum of a and b, but it doesn't return anything explicitly So when we assign its result to my_sum, the value is actually None To fix that, you can use the return keyword to send back the result:\n```python\ndef calculate_sum(a, b):\nreturn a + b\nmy_sum = calculate_sum(3, 1)\nprint(my_sum) # 4\n```\nNow, calculate_sum returns the sum of a and b, which gets stored in my_sum Decorators are a special kind of function in Python They are like wrappers for other functions, so they take another function as an argument With decorators, you get to add extra functionality to a function without modifying its original code Here's an example of how to use a decorator:\n```python\ndef say_hello():\nname = input('What is your name ')\nreturn 'Hello ' + name\ndef uppercase_decorator(func):\ndef wrapper():\noriginal_func = func()\nmodified_func = original_func",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6314,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859f55cd33356e322fd3.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5c3476acf13aafe415ddf9c905f67908",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859f55cd33356e322fd3.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "in my_sum Decorators are a special kind of function in Python They are like wrappers for other functions, so they take another function as an argument With decorators, you get to add extra functionality to a function without modifying its original code Here's an example of how to use a decorator: ```python def say_hello(): name = input('What is your name ') return 'Hello ' + name def uppercase_decorator(func): def wrapper(): original_func = func() modified_func = original_funcupper()\nreturn modified_func\nreturn wrapper\nsay_hello_res = uppercase_decorator(say_hello)\nprint(say_hello_res())\n```\nIn this code:\nWe are getting a user input and storing it in a name variable The function say_hello returns Hello, and the name The decorator, uppercase_decorator takes a function, calls it, then turns its return value to uppercase, and returns the original function The uppercase_decorator function is then called with the original say_hello function and saved in say_hello_res say_hello_res is then called and printed in one line That's how decorators are typically used --questions--\n--text--\nWhat is the default return value of a function in Python --answers--\n0\n--feedback--\nIf a function has no return statement, it automatically returns this value None\n\"\" (empty string)\n--feedback--\nIf a function has no return statement, it automatically returns this value False\n--feedback--\nIf a function has no return statement, it automatically returns this value --video-solution--\n2\n--text--\nWhat is the term for a placeholder variable in a function --answers--\nParameter\nArgument\n--feedback--\nIt's defined in the function declaration, not when calling it Return value\n--feedback--\nIt's defined in the function declaration, not when calling it Decorator\n--feedback--\nIt's defined in the function declaration, not when calling it --video-solution--\n1\n--text--\nWhat is the purpose of decorators in Python --answers--\nThey modify a function's original code directly to add extra functionality --feedback--\nDecorators act like wrappers around functions They convert a function into a class for better organization --feedback--\nDecorators act like wrappers around functions They allow functions to run only once when defined --feedback--\nDecorators act like wrappers around functions They wrap another function to extend its behavior without modifying the original code --video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6314,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe859f55cd33356e322fd3.md",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7d706398bd9355315a46bc52c2dde30a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe85a3db9bad35f2b6a2bd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67fe85a3db9bad35f2b6a2bd\ntitle: How Do Conditional Statements and Logical Operators Work challengeType: 19\ndashedName: how-do-conditional-statements-and-logical-operators-work\n--description--\nConditional statements, or conditionals, let you control the flow of your program based on whether certain conditions are true or false But before we get into all that, let's go over the basic building blocks of conditional statements, starting with comparison operators Comparison operators are operators that let you compare two or more values, and return a boolean value In a previous lecture, you learned that booleans are one of the data types in Python, and can only be True or False Here's a table with the comparison operators in Python:\n| Operator | Name | Description |\n| --- | --- | --- |\n| == | Equal | Checks if two values are equal |\n| = | Not equal | Checks if two values are not equal |\n| > | Greater than | Checks if the value on the left is greater than the value on the right |\n| < | Less than | Checks if the value on the left is less than the value on the right |\n| >= | Greater than or equal | Checks if the value on the left is greater than or equal to the value on the right |\n| <= | Less than or equal | Checks if the value on the left is less than or equal to the value on the right |\nHere are some of those expressions that evaluate to True or False:\npython\nprint(3 > 4) # False\nprint(3 < 4) # True\nprint(3 == 4) # False\nprint(4 == 4) # True\nprint(3 = 4) # True\nprint(3 >= 4) # False\nprint(3 <= 4) # True\nThese operators can be used in conditionals to compare values and run certain code based on whether the conditional evaluates to True or False In Python, the most basic conditional is the if statement Here's the basic syntax:\npython\nif condition:\n# Code to execute if condition is True\nif statements start with the if keyword condition is an expression that evaluates to True of False, followed by a colon (:) The indentation specifies the block of code within the body of the if statement",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5942,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe85a3db9bad35f2b6a2bd.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "af8f4819e76d40ba58677d1d0ad5dc4d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe85a3db9bad35f2b6a2bd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "values and run certain code based on whether the conditional evaluates to True or False In Python, the most basic conditional is the if statement Here's the basic syntax: python if condition: # Code to execute if condition is True if statements start with the if keyword condition is an expression that evaluates to True of False, followed by a colon (:) The indentation specifies the block of code within the body of the if statementAnd here's an example:\n```python\nage = 18\nif age >= 18:\nprint('You are an adult') # You are an adult\n```\nBut if age is anything less than 18, nothing is printed in the terminal:\n```python\nage = 12\nif age >= 18:\nprint('You are an adult') # Nothing shows up in the terminal\n```\nBut what if you also want to print something if age is less than 18 That's where the else clause comes in The else clause runs when the if condition is false Here's the syntax for an if…else statement:\npython\nif condition:\n# Code to execute if condition is True\nelse:\n# Code to execute if condition is False\nFor example:\n```python\nage = 12\nif age >= 18:\nprint('You are an adult')\nelse:\nprint('You are not an adult yet') # You are not an adult yet\n```\nThere might be situations in which you want to account for multiple conditions To do that, Python lets you extend your if statement with the elif (else if) keyword",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5942,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe85a3db9bad35f2b6a2bd.md",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "2274940dbf631ad454be7a0fce1f261f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe85a3db9bad35f2b6a2bd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "condition: # Code to execute if condition is True else: # Code to execute if condition is False For example: ```python age = 12 if age >= 18: print('You are an adult') else: print('You are not an adult yet') # You are not an adult yet ``` There might be situations in which you want to account for multiple conditions To do that, Python lets you extend your if statement with the elif (else if) keywordHere's the syntax:\npython\nif condition:\n# Code to execute if condition is True\nelif condition2:\n# Code to execute if condition2 is True\nelse:\n# Code to execute if all conditions are False\nFor example:\n```python\nage = 12\nif age >= 18:\nprint('You are an adult')\nelif age >= 13:\nprint('You are a teenager')\nelse:\nprint('You are a child') # You are a child\n```\nNote that you can use as many elif statements as you want:\n```python\nage = 2\nif age >= 65:\nprint('You are a senior citizen')\nelif age >= 30:\nprint('You are an adult in your prime')\nelif age >= 18:\nprint('You are a young adult')\nelif age >= 13:\nprint('You are a teenager')\nelif age >= 3:\nprint('You are a young child')\nelse:\nprint('You are a toddler or an infant') # You are a toddler or an infant\n```\nNow that you understand how comparison operators and conditional statements work in Python, you can start writing programs that make decisions based on logic and input Whether you’re comparing values or branching through multiple conditions, these tools are the foundation to writing flexible, responsive code --questions--\n--text--\nWhat do comparison operators do --answers--\nPerform mathematical calculations with boolean values\n--feedback--\nThese operators check things like equality or which value is greater, and the result is either True or False Convert strings to boolean values --feedback--\nThese operators check things like equality or which value is greater, and the result is either True or False Compare two values and return a boolean value Create loops and iterations --feedback--\nThese operators check things like equality or which value is greater, and the result is either True or False --video-solution--\n3\n--text--\nWhat will be the result for the following code",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5942,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe85a3db9bad35f2b6a2bd.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "47176a8ea1e2f338dee9d7afecb5d76e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe85a3db9bad35f2b6a2bd.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the result is either True or False Convert strings to boolean values --feedback-- These operators check things like equality or which value is greater, and the result is either True or False Compare two values and return a boolean value Create loops and iterations --feedback-- These operators check things like equality or which value is greater, and the result is either True or False --video-solution-- 3 --text-- What will be the result for the following code```python\nage = 12\nif age >= 18:\nprint('You are an adult')\nelif age >= 13:\nprint('You are a teenager')\nelse:\nprint('You are a child')\n```\n--answers--\nYou are an adult will be printed to the console --feedback--\nReview the last part of the lecture for the correct answer You are a teenager will be printed to the console --feedback--\nReview the last part of the lecture for the correct answer You are a child will be printed to the console An error will be printed to the console --feedback--\nReview the last part of the lecture for the correct answer --video-solution--\n3\n--text--\nWhat will the expression 3 >= 4 evaluate to --answers--\nTrue\n--feedback--\n3 is not greater than or equal to 4 SyntaxError\n--feedback--\n3 is not greater than or equal to 4 None\n--feedback--\n3 is not greater than or equal to 4 False\n--video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5942,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe85a3db9bad35f2b6a2bd.md",
      "source_type": "git_repo"
    },
    "token_count": 295,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "6190dd9bfe37b806d515d4710b0cc9a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe85a1b634a335b18ae09a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67fe85a1b634a335b18ae09a\ntitle: What Is Scope in Python and How Does It Work challengeType: 19\ndashedName: what-is-scope-in-python-and-how-does-it-work\n--description--\nIn Python, scope determines the point at which you can access a variable It's what controls the lifetime of a variable and how it is resolved in different parts of the code To correctly determine scope, Python follows the LEGB rule, which stands for the following:\nLocal scope (L): Variables defined in functions or classes Enclosing scope (E): Variables defined in enclosing or nested functions Global scope (G): Variables defined at the top level of the module or file Built-in scope (B): Reserved names in Python for predefined functions, modules, keywords, and objects Python uses the LEGB rule to resolve the scope of the variables in your program We'll dive into each of these rules so you get a better understanding of the process Local scope means that a variable declared inside a function or class can only be accessed within that function or class Here's an example:\npython\ndef my_func():\nmy_var = 10\nprint(my_var)\nIn this case, the my_func function has its own scope which cannot be accessed from outside the function Calling my_func will output 10, but printing my_var outside the function will lead to a NameError:\n```python\ndef my_func():\nmy_var = 10 # Locally scoped to my_func\nprint(my_var)\nmy_func() # 10\nprint(my_var) # NameError: name 'my_var' is not defined\n```\nEnclosing scope means that a function that's nested inside another function can access the variables of the function it's nested within For example:\n```python\ndef outer_func():\nmsg = 'Hello there '\ndef inner_func():\nprint(msg)\ninner_func()\nouter_func() # Hello there ```\nIn this example, the inner function, inner_func, can freely access the msg variable defined in the outer function, outer_func However, note that outer functions cannot access variables defined within any nested functions:\n```python\ndef outer_func():\nmsg = 'Hello there '\nprint(res)\ndef inner_func():\nres = 'How are you '\nprint(msg)\ninner_func()\nouter_func() # NameError: name 'res' is not defined\n```\nThat's because res is locally scoped to inner_func",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5801,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe85a1b634a335b18ae09a.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "9a7c4da8a9f39ce8d1e6f13639bfa763",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe85a1b634a335b18ae09a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "inner_func(): print(msg) inner_func() outer_func() # Hello there ``` In this example, the inner function, inner_func, can freely access the msg variable defined in the outer function, outer_func However, note that outer functions cannot access variables defined within any nested functions: ```python def outer_func(): msg = 'Hello there ' print(res) def inner_func(): res = 'How are you ' print(msg) inner_func() outer_func() # NameError: name 'res' is not defined ``` That's because res is locally scoped to inner_funcAlso, notice that outer_func tries to print res before inner_func is called One solution is to initialize res as an empty string in the enclosing scope, which is within outer_func Then within inner_func, make res a non-local variable with the nonlocal keyword:\n```python\ndef outer_func():\nmsg = 'Hello there '\nres = \"\"  # Declare res in the enclosing scope\ndef inner_func():\nnonlocal res  # Allow modification of an enclosing variable\nres = 'How are you '\nprint(msg)  # Accessing msg from outer_func()\ninner_func()\nprint(res)  # Now res is accessible and modified\nouter_func()\nOutput:\nHello there How are you ```\nGlobal scope refers to variables that are declared outside any functions or classes which can be accessed from anywhere in the program",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5801,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe85a1b634a335b18ae09a.md",
      "source_type": "git_repo"
    },
    "token_count": 273,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "761779600e6699b0ec2c6bce0ef958a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe85a1b634a335b18ae09a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "= 'Hello there ' res = \"\" # Declare res in the enclosing scope def inner_func(): nonlocal res # Allow modification of an enclosing variable res = 'How are you ' print(msg) # Accessing msg from outer_func() inner_func() print(res) # Now res is accessible and modified outer_func() Output: Hello there How are you ``` Global scope refers to variables that are declared outside any functions or classes which can be accessed from anywhere in the programHere, my_var can be accessed anywhere, even inside a function it's not defined in:\n```python\nmy_var = 100\ndef show_var():\nprint(my_var)\nshow_var() # 100\nprint(my_var) # 100\n```\nAnd if you want to make a locally scoped variable defined inside a function globally accessible, you can use the global keyword:\n```python\nmy_var_1 = 7\ndef show_vars():\nglobal my_var_2\nmy_var_2 = 10\nprint(my_var_1)\nprint(my_var_2)\nshow_vars() # 7 10\nmy_var_2 is now a global variable and can be accessed anywhere in the program\nprint(my_var_2) # 10\n```\nYou can also use the global keyword to modify a global variable:\n```python\nmy_var = 10  # A global variable\ndef change_var():\nglobal my_var  # Allows modification of a global variable\nmy_var = 20\nchange_var()\nprint(my_var)  # my_var is now modified globally to 20\n```\nFinally, built-in scope refers to all of Python's built-in functions, modules, and keywords, and are available anywhere in your program:\npython\nprint(str(45)) # '45'\nprint(type(3 14)) # <class 'float'>\nprint(isinstance(3, str)) # False\n--questions--\n--text--\nWhat is the rule Python follows to determine the scope of a variable --answers--\nSTACK: Static, Temporary, Active, Constant, Keyword\n--feedback--\nIt consists of four levels, starting from the most specific to the most general TREE: Temporary, Reserved, Enclosing, External\n--feedback--\nIt consists of four levels, starting from the most specific to the most general",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5801,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe85a1b634a335b18ae09a.md",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "531a49c8fd1d51c1fbeba0f26f08278f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe85a1b634a335b18ae09a.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "are available anywhere in your program: python print(str(45)) # '45' print(type(3 14)) # <class 'float'> print(isinstance(3, str)) # False --questions-- --text-- What is the rule Python follows to determine the scope of a variable --answers-- STACK: Static, Temporary, Active, Constant, Keyword --feedback-- It consists of four levels, starting from the most specific to the most general TREE: Temporary, Reserved, Enclosing, External --feedback-- It consists of four levels, starting from the most specific to the most generalLEGB: Local, Enclosing, Global, Built-in\nSCOPE: Script, Constant, Outer, Python, Embedded\n--feedback--\nIt consists of four levels, starting from the most specific to the most general --video-solution--\n3\n--text--\nWhat does the nonlocal keyword do --answers--\nMakes a variable global --feedback--\nIt helps modify variables in an outer function Creates a new local variable --feedback--\nIt helps modify variables in an outer function Prevents variable reassignment --feedback--\nIt helps modify variables in an outer function Allows modifying a variable from an enclosing function\n--video-solution--\n4\n--text--\nWhich keyword can you use to modify a global variable in Python --answers--\nglobal\nlocal\n--feedback--\nIt allows changes to a variable outside the function static\n--feedback--\nIt allows changes to a variable outside the function nonlocal\n--feedback--\nIt allows changes to a variable outside the function --video-solution--\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5801,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\67fe85a1b634a335b18ae09a.md",
      "source_type": "git_repo"
    },
    "token_count": 314,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "acc67ba0df518e7e066ccecf0e5ca75a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\6839b2ddd01ef657b6bf3b76.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6839b2ddd01ef657b6bf3b76\ntitle: What Are Some Common String Methods challengeType: 19\ndashedName: what-are-some-common-string-methods\n--description--\nPython provides a number of built-in methods that make working with strings a breeze They include, but are not limited to, the following:\nupper(): Returns a new string with all characters converted to uppercase ```python\nmy_str = 'hello world'\nuppercase_my_str = my_str upper()\nprint(uppercase_my_str)  # HELLO WORLD\n```\nlower(): Returns a new string with all characters converted to lowercase ```python\nmy_str = 'Hello World'\nlowercase_my_str = my_str lower()\nprint(lowercase_my_str)  # hello world\n```\nstrip(): Returns a new string with the specified leading and trailing characters removed If no argument is passed it removes leading and trailing whitespace ```python\nmy_str = '  hello world  '\ntrimmed_my_str = my_str strip()\nprint(trimmed_my_str)  # \"hello world\"\n```\nreplace(old, new): Returns a new string with all occurrences of old replaced by new ```python\nmy_str = 'hello world'\nreplaced_my_str = my_str replace('hello', 'hi')\nprint(replaced_my_str)  # hi world\n```\nsplit(separator): Splits a string on a specified separator into a list of strings If no separator is specified, it splits on whitespace ```python\nmy_str = 'hello world'\nsplit_words = my_str split()\nprint(split_words)  # ['hello', 'world']\n```\njoin(iterable): Joins elements of an iterable into a string with a separator ```python\nmy_list = ['hello', 'world']\njoined_my_str = ' ' join(my_list)\nprint(joined_my_str)  # hello world\n```\nstartswith(prefix): Returns a boolean indicating if a string starts with the specified prefix ```python\nmy_str = 'hello world'\nstarts_with_hello = my_str startswith('hello')\nprint(starts_with_hello)  # True\n```\nendswith(suffix): Returns a boolean indicating if a string ends with the specified suffix ```python\nmy_str = 'hello world'\nends_with_world = my_str",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4973,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\6839b2ddd01ef657b6bf3b76.md",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "3cf43e5be46d1568e2a761dadd8bb41b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\6839b2ddd01ef657b6bf3b76.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "'world'] ``` join(iterable): Joins elements of an iterable into a string with a separator ```python my_list = ['hello', 'world'] joined_my_str = ' ' join(my_list) print(joined_my_str) # hello world ``` startswith(prefix): Returns a boolean indicating if a string starts with the specified prefix ```python my_str = 'hello world' starts_with_hello = my_str startswith('hello') print(starts_with_hello) # True ``` endswith(suffix): Returns a boolean indicating if a string ends with the specified suffix ```python my_str = 'hello world' ends_with_world = my_strendswith('world')\nprint(ends_with_world)  # True\n```\nfind(substring): Returns the index of the first occurrence of substring, or -1 if it doesn't find one ```python\nmy_str = 'hello world'\nworld_index = my_str find('world')\nprint(world_index)  # 6\n```\ncount(substring): Returns the number of times a substring appears in a string ```python\nmy_str = 'hello world'\no_count = my_str count('o')\nprint(o_count)  # 2\n```\ncapitalize(): Returns a new string with the first character capitalized and the other characters lowercased ```python\nmy_str = 'hello world'\ncapitalized_my_str = my_str capitalize()\nprint(capitalized_my_str)  # Hello world\n```\nisupper(): Returns True if all letters in the string are uppercase and False if not ```python\nmy_str = 'hello world'\nis_all_upper = my_str isupper()\nprint(is_all_upper)  # False\n```\nislower(): Returns True if all letters in the string are lowercase and False if not ```python\nmy_str = 'hello world'\nis_all_lower = my_str islower()\nprint(is_all_lower)  # True\n```\ntitle(): Returns a new string with the first letter of each word capitalized ```python\nmy_str = 'hello world'\ntitle_case_my_str = my_str title()\nprint(title_case_my_str)  # Hello World\n```\n--questions--\n--text--\nWhich methods check if all letters in a string are uppercase and if all letters are lowercase --answers--\nupper() and lower()\n--feedback--\nThese methods return True or False based on letter case",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4973,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\6839b2ddd01ef657b6bf3b76.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "af6cd58c23407efaf51c76f8bc800178",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\6839b2ddd01ef657b6bf3b76.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "if not ```python my_str = 'hello world' is_all_lower = my_str islower() print(is_all_lower) # True ``` title(): Returns a new string with the first letter of each word capitalized ```python my_str = 'hello world' title_case_my_str = my_str title() print(title_case_my_str) # Hello World ``` --questions-- --text-- Which methods check if all letters in a string are uppercase and if all letters are lowercase --answers-- upper() and lower() --feedback-- These methods return True or False based on letter caseisupper() and islower()\ntoupper() and tolower()\n--feedback--\nThese methods return True or False based on letter case uppercase() and lowercase()\n--feedback--\nThese methods return True or False based on letter case --video-solution--\n2\n--text--\nHow can you replace all occurrences of one or more parts of a string with another string --answers--\nUsing the change() method with two arguments --feedback--\nThe method takes two arguments - what to find and what to replace it with Using the replace() method with old and new text Using the modify() function with replacement rules --feedback--\nThe method takes two arguments - what to find and what to replace it with Using the update() method with a mapping dictionary --feedback--\nThe method takes two arguments - what to find and what to replace it with --video-solution--\n2\n--text--\nWhat does the upper() method do --answers--\nConverts all characters to lowercase --feedback--\nIt changes the case but doesn't modify spacing Capitalizes only the first letter --feedback--\nIt changes the case but doesn't modify spacing Converts all characters to uppercase Removes all whitespace --feedback--\nIt changes the case but doesn't modify spacing --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4973,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\6839b2ddd01ef657b6bf3b76.md",
      "source_type": "git_repo"
    },
    "token_count": 359,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "fa80f9d695dedb3819cd8cd2143d88e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\6839b3295323f563efc68f5c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 6839b3295323f563efc68f5c\ntitle: How Do Augmented Assignments Work challengeType: 19\ndashedName: how-do-augmented-assignments-work\n--description--\nAugmented assignment combines a binary operation with an assignment in one step It takes a variable, applies an operation to it with another value, and stores the result back into the same variable If you're familiar with a language like JavaScript, you've probably heard of the addition assignment operator (+=) or subtraction assignment (-=), and others Those exist in Python, too The only difference is that they're referred to as augmented assignments The basic syntax of an augmented assignment looks like this:\npython\nvariable <operator>= value\nWhich is a more efficient way of doing this:\npython\nvariable = variable <operator> value\nFor example, here's an example of using augmented assignment to add 5 to an existing variable:\n```python\nmy_var = 10\nmy_var += 5\nprint(my_var) # 15\n```\nAnd here is the same thing, but without augmented assignment:\n```python\nmy_var = 10\nmy_var = my_var + 5\nprint(my_var) # 15\n```\nThe advantage of augmented assignment is that it provides a concise and readable way to update a variable value without repeating the variable name In turn, this reduces redundancy and potential errors that might arise from a typo or something similar Every operator can use an augmented assignment We've looked at the addition assignment operator (+=), so let's look at others The subtraction assignment operator (-=) subtracts the right operand from the left variable and stores the difference in the left variable:\n```python\ncount = 14\ncount -= 3\nprint(count) # 11\n```\nThe multiplication assignment operator (*=) multiplies the left variable by the right operand and stores the product back in the left variable:\n```python\nproduct = 65\nproduct *= 7\nprint(product) # 455\n```\nThe division assignment operator (/=) divides the left variable by the right and stores the result back in the left variable:\n```python\nprice = 100\nprice /= 4\nprint(price) # 25",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6001,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\6839b3295323f563efc68f5c.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "7596aa8dc1a6eea874f8bc3ff5cd341c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\6839b3295323f563efc68f5c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "variable: ```python count = 14 count -= 3 print(count) # 11 ``` The multiplication assignment operator (*=) multiplies the left variable by the right operand and stores the product back in the left variable: ```python product = 65 product *= 7 print(product) # 455 ``` The division assignment operator (/=) divides the left variable by the right and stores the result back in the left variable: ```python price = 100 price /= 4 print(price) # 250\n```\nThe floor division operator (//=) floor‑divides the left variable by the right and stores the result back in the left variable:\n```python\ntotal_pages = 23\ntotal_pages //= 5\nprint(total_pages) # 4\n```\nThe modulus assignment operator (%=) computes the remainder of the left variable divided by the right and stores it back in the left variable:\n```python\nbits = 35\nbits %= 2\nprint(bits) # 1\n```\nThe exponentiation assignment operator (**=) raises the left variable to the power of the right and stores the result back in the left variable:\n```python\npower = 2\npower **= 3\nprint(power) # 8\n```\nThere are other augmented assignment operators too, like those for bitwise operators They include &=, ^=, >>=, and <<= You can use some augmented assignment operators with strings, too For example, the addition assignment operator makes it easy to concatenate strings:\n```python\ngreet = 'Hello'\ngreet += ' World'\nprint(greet) # Hello World\n```\nAnd the multiplication assignment operator can be used to repeat a string:\n```python\ngreet = 'Hello'\ngreet *= 3\nprint(greet) # HelloHelloHello\n```\nOther augmented assignments throw a TypeError when you use them with strings:\n```python\ngreet = 'Hello'\ngreet -= ' World'\nprint(greet) # TypeError: unsupported operand type(s) for -=: 'str' and 'str'\ngreet = 'Hello'\ngreet /= 'World'\nprint(greet) # TypeError: unsupported operand type(s) for /=: 'str' and 'str'\n```\nIf you're wondering if increment and decrement operators (++ and  --) work in Python, they don't That's because Python deliberately avoids C-style increment and decrement shortcuts in order to keep the language clear and explicit",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6001,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\6839b3295323f563efc68f5c.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "56f51bbeaaffe9db8fef4f541aa3abba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\6839b3295323f563efc68f5c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "use them with strings: ```python greet = 'Hello' greet -= ' World' print(greet) # TypeError: unsupported operand type(s) for -=: 'str' and 'str' greet = 'Hello' greet /= 'World' print(greet) # TypeError: unsupported operand type(s) for /=: 'str' and 'str' ``` If you're wondering if increment and decrement operators (++ and --) work in Python, they don't That's because Python deliberately avoids C-style increment and decrement shortcuts in order to keep the language clear and explicitInstead of x++, you can simply write x += 1, which makes it obvious that you're incrementing the value of x by 1 Writing ++x in Python just applies the unary plus twice, and increment anything:\n```python\nmy_var = 5\nprint(+my_var)   # 5\nprint(++my_var)  # 5\nprint(+++my_var) # 5\nmy_var += 1\nprint(my_var) # 6\n```\n--questions--\n--text--\nWhat is the main advantage of using augmented assignment operators --answers--\nThey automatically convert data types --feedback--\nThink about how augmented assignments help avoid redundancy and reduce typing mistakes They prevent all possible syntax errors --feedback--\nThink about how augmented assignments help avoid redundancy and reduce typing mistakes They provide a concise way to update variables without repeating the variable name They make mathematical operations faster --feedback--\nThink about how augmented assignments help avoid redundancy and reduce typing mistakes --video-solution--\n3\n--text--\nWhat happens when you use the increment (++) and decrement (--) operators in Python --answers--\nThey work exactly like in C/C++ --feedback--\nThink about how Python avoids C-style increment and decrement operators They cause a syntax error and crash the program --feedback--\nThink about how Python avoids C-style increment and decrement operators They are interpreted as double unary operators with no actual increment/decrement They only work in Python 2 but were removed in Python 3 --feedback--\nThink about how Python avoids C-style increment and decrement operators --video-solution--\n3\n--text--\nWhich augmented assignment operator raises a variable to a power and stores the result back to that variable --answers--\n^=\n--feedback--\nThink about the operator that uses the same symbol as exponentiation operator **=\n*=\n--feedback--\nThink about the operator that uses the same symbol as exponentiation operator",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6001,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\6839b3295323f563efc68f5c.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "66c6598ca670b1c4662d7512b44a6f0f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\6839b3295323f563efc68f5c.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "actual increment/decrement They only work in Python 2 but were removed in Python 3 --feedback-- Think about how Python avoids C-style increment and decrement operators --video-solution-- 3 --text-- Which augmented assignment operator raises a variable to a power and stores the result back to that variable --answers-- ^= --feedback-- Think about the operator that uses the same symbol as exponentiation operator **= *= --feedback-- Think about the operator that uses the same symbol as exponentiation operator^^=\n--feedback--\nThink about the operator that uses the same symbol as exponentiation operator --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6001,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\6839b3295323f563efc68f5c.md",
      "source_type": "git_repo"
    },
    "token_count": 123,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "4cdffab1ec8c6e12e45daf8a6d1a7a91",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-typescript\\67d1d96532bc095aee051657.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67d1d96532bc095aee051657\ntitle: What Is TypeScript, and Why Is It Used in the Industry challengeType: 19\ndashedName: what-is-typescript-and-why-is-it-used-in-the-industry\n--description--\nJavaScript is considered a dynamically-typed language This means that variables can receive any values at run time - declaring a variable as a number does not prevent you from assigning it a string value later, and function parameters can be passed any value The challenge of a dynamically-typed language is that the lack of type safety can introduce errors if you are not careful TypeScript extends the JavaScript language to include static typing, which helps catch those errors before you even deploy your code But how does it work Consider this JavaScript function:\njs\nconst getRandomValue = (array) => {\nreturn array[Math floor(Math random() * array length)];\n}\nOur getRandomValue function takes an array and returns a random value from that array But because JavaScript does not validate types, there is nothing preventing you from calling the function with a number:\njs\nconsole log(getRandomValue(10));\nThe console output for the current example will return undefined because it was expecting an array instead of a number But with TypeScript you can define a type for the array parameter:\njs\nconst getRandomValue = (array: string[]) => {\nreturn array[Math floor(Math random() * array length)];\n}\nThis type definition tells TypeScript that the array argument must be an array of strings Then when you call getRandomValue and pass it a number, you get a different type of error called a compiler error Most JavaScript runtime environments, such as a browser or Node js, cannot run TypeScript natively Instead, you first need to compile, or translate, TypeScript code into regular JavaScript You can do that with the built-in compiler that comes with the TypeScript language When you run the compiler, TypeScript will evaluate your code and throw an error for any issues where the types don't match - such as passing a number into a function that expects an array You'll learn more about how these types work in the next few lectures But it's this extra safety that makes TypeScript an appealing language for many developers and organizations --questions--\n--text--\nWhat is the main advantage of TypeScript over JavaScript --answers--\nIt runs faster in browsers --feedback--\nTypeScript extends JavaScript to include a feature that helps catch errors before deployment It provides static typing It has more built-in functions",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4146,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-typescript\\67d1d96532bc095aee051657.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ff32b5c189e3b64fdddb9b743ecab8ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-typescript\\67d1d96532bc095aee051657.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "into a function that expects an array You'll learn more about how these types work in the next few lectures But it's this extra safety that makes TypeScript an appealing language for many developers and organizations --questions-- --text-- What is the main advantage of TypeScript over JavaScript --answers-- It runs faster in browsers --feedback-- TypeScript extends JavaScript to include a feature that helps catch errors before deployment It provides static typing It has more built-in functions--feedback--\nTypeScript extends JavaScript to include a feature that helps catch errors before deployment It uses less memory --feedback--\nTypeScript extends JavaScript to include a feature that helps catch errors before deployment --video-solution--\n2\n--text--\nIn the TypeScript example, what does array: string[] indicate --answers--\nThe function returns an array of strings --feedback--\nThis syntax defines the type of the parameter passed to the function The function accepts an array of any type --feedback--\nThis syntax defines the type of the parameter passed to the function The function accepts an array of strings The function can only work with strings --feedback--\nThis syntax defines the type of the parameter passed to the function --video-solution--\n3\n--text--\nWhat happens when you try to run TypeScript directly in most JavaScript environments --answers--\nIt runs normally without any issues --feedback--\nTypeScript requires an additional step before it can be executed in typical JavaScript runtime environments It throws a compiler error --feedback--\nTypeScript requires an additional step before it can be executed in typical JavaScript runtime environments It automatically compiles to JavaScript --feedback--\nTypeScript requires an additional step before it can be executed in typical JavaScript runtime environments It cannot run --video-solution--\n4",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4146,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-typescript\\67d1d96532bc095aee051657.md",
      "source_type": "git_repo"
    },
    "token_count": 333,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "98c8e47f4db9606e0e5715896ec1d964",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-typescript\\67d30191adb999a9909109ef.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67d30191adb999a9909109ef\ntitle: What Are Generics, and How Do They Work challengeType: 19\ndashedName: what-are-generics-and-how-do-they-work\n--description--\nYou have actually seen a generic type in a previous lecture: Array<string> But you'll usually use generic types in functions In fact, they can be thought of as a special parameter you provide to a function to control the behavior of the function's type definition Let's go back to our previous example of a function to get a random value from an array:\njs\nconst getRandomValue = (array: string[]): string => {\nreturn array[Math floor(Math random() * array length)];\n}\nOur function accepts an array of strings and returns a string But what if we wanted to pass in an array of numbers and return a number You could use a union type:\njs\nconst getRandomValue = (array: (string|number)[]): (string|number) => {\nreturn array[Math floor(Math random() * array length)];\n}\nconst val = getRandomValue([1, 2, 4])\nBut with this approach, even though we have passed in an array of only numbers, TypeScript determines that the val variable could be a number OR a string Instead, you can define a generic type for the function:\njs\nconst getRandomValue = <T>(array: T[]): T => {\nreturn array[Math floor(Math random() * array length)];\n}\nconst val = getRandomValue([1, 2, 4])\nThere are a couple of important components in our new example First, the <T> syntax tells TypeScript that you are defining a generic type T for the function T is a common name for generic types, but you can actually name it whatever you want (within JavaScript's variable conventions) Then, we tell TypeScript that the array parameter is an array of values matching the generic type, and that the returned value is a single element of that same type This allows TypeScript to properly detect that val will be a number, because the array we passed consists solely of numbers But what about functions you don't control Let's take a look at the document querySelector() method:\njs\nconst email = document querySelector(\"#email\");\nconsole log(email value);\nBecause we're querying with an ID selector, TypeScript doesn't know what kind of element we are querying",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4959,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-typescript\\67d30191adb999a9909109ef.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "ff1f360846c42e4a2012ff93c96c4622",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-typescript\\67d30191adb999a9909109ef.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "and that the returned value is a single element of that same type This allows TypeScript to properly detect that val will be a number, because the array we passed consists solely of numbers But what about functions you don't control Let's take a look at the document querySelector() method: js const email = document querySelector(\"#email\"); console log(email value); Because we're querying with an ID selector, TypeScript doesn't know what kind of element we are queryingIt knows it's an Element of some sort, but our attempt to access the value property will throw an error because the top-level element interface does not have that property Thankfully, we can pass a type argument to the function call:\njs\nconst email = document querySelector<HTMLInputElement>(\"#email\");\nconsole log(email value);\nNotice how we're using the angle bracket syntax again (<HTMLInputElement>), but this time in a function call This tells TypeScript that the element we expect to find will be an input element, and we no longer get an error on the value property because input elements do have that property Of course, querySelector can return null if an element is not found, and TypeScript will throw a compiler error here because we do not handle that case But you'll learn about that in the next lecture --questions--\n--text--\nWhat is the correct syntax for defining a generic type in a function --answers--\nts\nfunction<T>\nts\n<T>function\n--feedback--\nThe generic type is defined using angle brackets before the function's parameter list ts\n(T)function\n--feedback--\nThe generic type is defined using angle brackets before the function's parameter list ts\nfunction(T)\n--feedback--\nThe generic type is defined using angle brackets before the function's parameter list --video-solution--\n1\n--text--\nWhat does T[] represent in the following example ts\nconst getRandomValue = <T>(array: T[]): T => { }\n--answers--\nAn array of any type --feedback--\nThe square brackets after T indicate an array of that type An array of the generic type T A tuple of type T --feedback--\nThe square brackets after T indicate an array of that type A single element of type T --feedback--\nThe square brackets after T indicate an array of that type --video-solution--\n2\n--text--\nHow can you specify a type argument when calling document querySelector() --answers--\njs\ndocument",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4959,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-typescript\\67d30191adb999a9909109ef.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "266cae43dce76414737ca3a894cd6f0e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-typescript\\67d30191adb999a9909109ef.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "An array of any type --feedback-- The square brackets after T indicate an array of that type An array of the generic type T A tuple of type T --feedback-- The square brackets after T indicate an array of that type A single element of type T --feedback-- The square brackets after T indicate an array of that type --video-solution-- 2 --text-- How can you specify a type argument when calling document querySelector() --answers-- js documentquerySelector(\"#email\", HTMLInputElement)\n--feedback--\nThe type argument is passed using angle brackets between the function name and its parameters js\ndocument querySelector(\"#email\"): HTMLInputElement\n--feedback--\nThe type argument is passed using angle brackets between the function name and its parameters js\ndocument querySelector<HTMLInputElement>(\"#email\")\njs\ndocument querySelector(\"#email\" as HTMLInputElement)\n--feedback--\nThe type argument is passed using angle brackets between the function name and its parameters --video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4959,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-typescript\\67d30191adb999a9909109ef.md",
      "source_type": "git_repo"
    },
    "token_count": 193,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "ea87f02246813ff0825b65bed0f5fd87",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\68480f431e8568b2056b140b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 68480f431e8568b2056b140b\ntitle: What Are Truthy and Falsy Values, and How Do Boolean Operators and Short-Circuiting Work challengeType: 19\ndashedName: what-are-truthy-and-falsy-values-and-how-do-boolean-operators-and-short-circuiting-work\n--description--\nIn the previous lecture, you learned how to use comparison operators and conditional statements to control the flow of your programs While those are very powerful, you will often run into situations where you need to compare multiple values at once This can lead to nested conditional statements, for example:\n```python\nis_citizen = True\nage = 25\nif is_citizen:\nif age >= 18:\nprint('You are eligible to vote') # You are eligible to vote\nelse:\nprint('You are not eligible to vote')\n```\nThe above example will first check if is_citizen is True If so, it will then go to the nested if statement and check if age is greater than or equal to 18 Since age is greater than or equal to 18, the message printed to the terminal will be You are eligible to vote If is_citizen were False, then the message printed to the terminal would have been You are not eligible to vote If you are working with more complex conditional statements, then you can use Python’s and, or, and not operators But before we dive into those operators, let’s take a look at what truthy and falsy values are In Python, every value has an inherent boolean value, or a built-in sense of whether it should be treated as True or False in a logical context Many values are considered truthy, that is, they evaluate to True in a logical context Others are falsy, meaning they evaluate to False Here are a few falsy values:\nNone\nFalse\nInteger 0\nFloat 0 0\nEmpty strings \"\"\nOther values like non-zero numbers, and non-empty strings are truthy If you want to check whether a value is truthy or falsy, you can use the built-in bool() function It explicitly converts a value to its boolean equivalent and returns True for truthy values and False for falsy values",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7902,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\68480f431e8568b2056b140b.md",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "46a0619210981fa1282fa32bfd557c52",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\68480f431e8568b2056b140b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "a logical context Others are falsy, meaning they evaluate to False Here are a few falsy values: None False Integer 0 Float 0 0 Empty strings \"\" Other values like non-zero numbers, and non-empty strings are truthy If you want to check whether a value is truthy or falsy, you can use the built-in bool() function It explicitly converts a value to its boolean equivalent and returns True for truthy values and False for falsy valuesHere are a few examples:\n```py\nprint(bool(False)) # False\nprint(bool(0))  # False\nprint(bool('')) # False\nprint(bool(True)) # True\nprint(bool(1)) # True\nprint(bool('Hello')) # True\n```\nNow that you understand truthy and falsy values, we can take a look at Boolean operators, which are also known as logical operators or Boolean operations These are special operators that allow you to combine multiple expressions to create more complex decision-making logic in your code There are three Boolean operators in Python: and, or, and not Let’s first take a look at the and operator The and operator takes two operands and returns the first operand if it is falsy, otherwise, it returns the second operand Both operands must be truthy for an expression to result in a truthy value Here is an example:\n```python\nis_citizen = True\nage = 25\nprint(is_citizen and age) # 25\n```\nIn the above example, the number 25 is printed to the terminal because the and operator will evaluate the second operand if the first operand is True The and operator is known as a short-circuit operator Short-circuiting means Python checks values from left to right and stops as soon as it determines the final result You'll often use and within if statements to check if multiple conditions are met Here’s how you can refactor the earlier example to uses the and operator instead of nested if statements:\n```python\nis_citizen = True\nage = 25\nif is_citizen and age >= 18:\nprint('You are eligible to vote') # You are eligible to vote\nelse:\nprint('You are not eligible to vote')\n```\nIn the example above, is_citizen is True, and age >= 18 evaluates to True",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7902,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\68480f431e8568b2056b140b.md",
      "source_type": "git_repo"
    },
    "token_count": 466,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "f63907f3857ab3e44a8d06768bc054b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\68480f431e8568b2056b140b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "use and within if statements to check if multiple conditions are met Here’s how you can refactor the earlier example to uses the and operator instead of nested if statements: ```python is_citizen = True age = 25 if is_citizen and age >= 18: print('You are eligible to vote') # You are eligible to vote else: print('You are not eligible to vote') ``` In the example above, is_citizen is True, and age >= 18 evaluates to TrueSince both operands of the and operator are truthy, the condition is_citizen and age >= 18 evaluates to True, and the print call in the if block is executed Now let's take a look at the or operator This operator returns the first operand if it is truthy, otherwise, it returns the second operand An or expression results in a truthy value if at least one operand is truthy The or operator is also known as a short-circuit operator Here is an example:\n```python\nage = 19\nis_employed = False\nprint(age or is_employed) # 19\n```\nThe following code will print the number 19 because the first operand age is True If you need to check if one or more expressions is True, then you can use the or operator in a conditional like this:\n```python\nage = 19\nis_student = True\nif age < 18 or is_student:\nprint('You are eligible for a student discount') # You are eligible for a student discount\nelse:\nprint('You are not eligible for a student discount')\n```\nIn this case, age < 18 is False, but is_student is True Since at least one condition is true, the entire or expression evaluates to True, and the discount message in the if block is printed The last operator we will look at is the not operator which takes a single operand and inverts its boolean value It converts truthy values to False and falsy values to True Unlike the previous operators we looked at, not always returns True or False",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7902,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\68480f431e8568b2056b140b.md",
      "source_type": "git_repo"
    },
    "token_count": 412,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "7fae0f171f835631a5821d7306e6149f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\68480f431e8568b2056b140b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "18 is False, but is_student is True Since at least one condition is true, the entire or expression evaluates to True, and the discount message in the if block is printed The last operator we will look at is the not operator which takes a single operand and inverts its boolean value It converts truthy values to False and falsy values to True Unlike the previous operators we looked at, not always returns True or FalseHere are a few examples:\npython\nprint(not '') # True, because empty string is falsy\nprint(not 'Hello') # False, because non-empty string is truthy\nprint(not 0) # True, because 0 is falsy\nprint(not 1) # False, because 1 is truthy\nprint(not False) # True, because False is falsy\nprint(not True) # False, because True is truthy\nIt is common to use the not operator in conditionals to check if something is not True or False, like this:\n```python\nis_admin = False\nif not is_admin:\nprint('Access denied for non-administrators ') # Access denied for non-administrators else:\nprint('Welcome, Administrator ')\n```\nSince is_admin is False, then not is_admin is saying not False which is True So the message Access denied for non-administrators will be printed Now that you understand truthy and falsy values, the and, or, and not operators, and short-circuiting work, you can write more flexible and readable conditional logic --questions--\n--text--\nWhat will the following code output ```python\nage = 20\nhas_ticket = True\nif age >= 18 and has_ticket:\nprint(\"You can watch the movie \")\nelse:\nprint(\"You can't watch the movie \")\n```\n--answers--\nYou can watch the movie SyntaxError\n--feedback--\nRemember what happens when both conditions are True TypeError\n--feedback--\nRemember what happens when both conditions are True You can't watch the movie --feedback--\nRemember what happens when both conditions are True --video-solution--\n1\n--text--\nWhich of the following is NOT considered a falsy value in Python --answers--\n\"\"\n--feedback--\nRemember that non-empty strings are considered truthy 0 0\n--feedback--\nRemember that non-empty strings are considered truthy \"False\"\n0\n--feedback--\nRemember that non-empty strings are considered truthy",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7902,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\68480f431e8568b2056b140b.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "42902301fb1e9cd8846bc28fb487bf50",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\68480f431e8568b2056b140b.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "what happens when both conditions are True TypeError --feedback-- Remember what happens when both conditions are True You can't watch the movie --feedback-- Remember what happens when both conditions are True --video-solution-- 1 --text-- Which of the following is NOT considered a falsy value in Python --answers-- \"\" --feedback-- Remember that non-empty strings are considered truthy 0 0 --feedback-- Remember that non-empty strings are considered truthy \"False\" 0 --feedback-- Remember that non-empty strings are considered truthy--video-solution--\n3\n--text--\nWhat happens when Python evaluates the expression x or y --answers--\nIt returns x only if both x and y evaluate to True\n--feedback--\nThink about \"short-circuiting\" and when Python might not need to check the second value It returns x if it evaluates to True, and skips evaluating y\nIt always evaluates both x and y regardless of their values\n--feedback--\nThink about \"short-circuiting\" and when Python might not need to check the second value It returns False if either x or y is False\n--feedback--\nThink about \"short-circuiting\" and when Python might not need to check the second value --video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7902,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-python\\68480f431e8568b2056b140b.md",
      "source_type": "git_repo"
    },
    "token_count": 253,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "719ec3a43e5a6b20506318088d71d3cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-typescript\\67d3018062fe6ba92b7d8299.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: 67d3018062fe6ba92b7d8299\ntitle: How Do the Different Types Work in TypeScript challengeType: 19\ndashedName: how-do-the-different-types-work-in-typescript\n--description--\nYou've already seen one in the previous lecture: string[], which represents an array of strings But how does that actually work For the primitive data types string, null, undefined, number, boolean, and bigint, TypeScript offers corresponding type keywords In our example, we are using these types to annotate our variables:\njs\nlet str: string = \"Naomi\";\nlet num: number = 42;\nlet bool: boolean = true;\nlet nope: null = null;\nlet nada: undefined = undefined;\nNow, we have explicitly declared str as string - which might seem confusing because we assigned it a string value already, but this annotation ensures that we cannot reassign a different value type (like a number) to that variable But what about arrays and objects Well, you've already seen the syntax for an array You can define an array of specific type with two different syntaxes:\njs\nconst arrOne: string[] = [\"Naomi\"];\nconst arrTwo: Array<string> = [\"Camperchan\"];\nFundamentally, these two syntaxes are the same, and the choice between the two is generally a matter of preference Objects get a bit more complicated You can define the exact structure of an object:\njs\nconst obj: { a: string, b: number } = { a: \"Naomi\", b: 42 };\nThis syntax means that property a must always be a string, property b must always be a number, and you cannot add or remove properties But maybe you don't want to restrict the properties Maybe you want an object with any keys, but the values all need to be strings There are two ways you can do this:\njs\nconst objOne: Record<string, string> = {};\nconst objTwo: { [key: string]: string } = {};\nLike the array types, these are fundamentally similar With these object types, you must define both the type of the keys and the type of the values Keys must always be strings, but you can define custom string types to further restrict those keys In addition to these types, TypeScript offers four other helpful types The first is any, which indicates that a value can have any type",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7237,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-typescript\\67d3018062fe6ba92b7d8299.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "1ebc3f67c79f9721d5ee743384e9efda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-typescript\\67d3018062fe6ba92b7d8299.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "objTwo: { [key: string]: string } = {}; Like the array types, these are fundamentally similar With these object types, you must define both the type of the keys and the type of the values Keys must always be strings, but you can define custom string types to further restrict those keys In addition to these types, TypeScript offers four other helpful types The first is any, which indicates that a value can have any typeThis is effectively the Konami Code of TypeScript - it tells the compiler to stop caring about the type of that variable and let you do whatever The second is unknown, which is generally preferred over any The unknown type tells TypeScript that you do care about the type of the value, but you don't actually know what it is If you then try to perform type-specific actions (like a subtraction operator, or the slice() method to perform a specific string operation), TypeScript will expect you to narrow down the type of that value first You'll learn more about type narrowing in an upcoming lecture The third is void This is a special type that you'll typically only use when defining functions It's effectively the opposite of any - it represents the absence of any type at all Functions which don't have a return value, such as console log(), have a return type of void Finally, there is the never type This is probably something you won't use often - it represents a type that will never exist For example, passing a mock object to a function in your test suite might be a good use of never to indicate that such an object would never really be passed to the function Expanding on these types, you have access to the type keyword This keyword is like const, but instead of declaring a variable you can declare a type:\njs\ntype myString = string;\nThis might not seem terribly useful on its own, but when coupled with union types it becomes powerful A union type allows you to combine two or more types into one Here's an example:\njs\ntype stringOrNumber = string | number;\nOur stringOrNumber type matches values that are a string and values that are a number",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7237,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\challenges\\english\\25-front-end-development\\lecture-introduction-to-typescript\\67d3018062fe6ba92b7d8299.md",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 1,
    "total_chunks": 4
  }
]