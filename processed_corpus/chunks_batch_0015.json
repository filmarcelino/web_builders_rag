[
  {
    "id": "6688141493f90f8cf3e3a2e7e6f5f2c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-language-block.ts",
    "source_type": "git_repo",
    "title": "create-language-block",
    "content": "function createMetaJson( superBlock: SuperBlocks, block: string, title: string, helpCategory: string, challengeId: ObjectID ) { const metaDir = path.resolve(__dirname, '../../curriculum/challenges/_meta'); const newMeta = getBaseMeta('Language'); newMeta.name = title; newMeta.dashedName = block; newMeta.helpCategory = helpCategory; newMeta.superBlock = superBlock; newMeta.challengeOrder = [ // eslint-disable-next-line @typescript-eslint/no-base-to-string { id: challengeId.toString(), title: \"Dialogue 1: I'm Tom\" } ]; const newMetaDir = path.resolve(metaDir, block); if (!existsSync(newMetaDir)) { await withTrace(fs.mkdir, newMetaDir); } void withTrace( fs.writeFile, path.resolve(metaDir, `${block}/meta.json`), await format(JSON.stringify(newMeta), { parser: 'json' }) ); }\n\nasync function createDialogueChallenge(\n  superBlock: SuperBlocks,\n  block: string\n): Promise<ObjectID> {\n  const superBlockSubPath = superBlockToFolderMap[superBlock];\n  const newChallengeDir = path.resolve(\n    __dirname,\n    `../../curriculum/challenges/english/${superBlockSubPath}/${block}`\n  );\n  if (!existsSync(newChallengeDir)) {\n    await withTrace(fs.mkdir, newChallengeDir);\n  }\n  return createDialogueFile({\n    projectPath: newChallengeDir + '/'\n  });\n}\n\nfunction parseJson<JsonSchema>(filePath: string) {\n  return withTrace(fs.readFile, filePath, 'utf8').then(\n    // unfortunately, withTrace does not correctly infer that the third argument\n    // is a string, so it uses the (path, options?) overload and we have to cast\n    // result to string.\n    result => JSON.parse(result as string) as JsonSchema\n  );\n}\n\n// fs Promise functions return errors, but no stack trace.  This adds back in\n// the stack trace.\nfunction withTrace<Args extends unknown[], Result>(\n  fn: (...x: Args) => Promise<Result>,\n  ...args: Args\n): Promise<Result> {\n  return fn(...args).catch((reason: Error) => {\n    throw Error(reason.message);\n  });\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4712,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-language-block.ts",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "13df47ee41d65814b3c0ae78a29eb768",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-language-block.ts",
    "source_type": "git_repo",
    "title": "create-language-block",
    "content": "infer that the third argument // is a string, so it uses the (path, options?) overload and we have to cast // result to string. result => JSON.parse(result as string) as JsonSchema ); } // fs Promise functions return errors, but no stack trace. This adds back in // the stack trace. function withTrace<Args extends unknown[], Result>( fn: (...x: Args) => Promise<Result>, ...args: Args ): Promise<Result> { return fn(...args).catch((reason: Error) => { throw Error(reason.message); }); }\n\nvoid prompt([\n  {\n    name: 'superBlock',\n    message: 'Which certification does this belong to?',\n    default: SuperBlocks.A2English,\n    type: 'list',\n    choices: Object.values(languageSuperBlocks)\n  },\n  {\n    name: 'block',\n    message: 'What is the dashed name (in kebab-case) for this block?',\n    validate: validateBlockName,\n    filter: (block: string) => {\n      return block.toLowerCase().trim();\n    }\n  },\n  {\n    name: 'title',\n    default: ({ block }: { block: string }) => block\n  },\n  {\n    name: 'helpCategory',\n    message: 'Choose a help category',\n    default: 'English',\n    type: 'list',\n    choices: helpCategories\n  }\n])\n  .then(\n    async ({ superBlock, block, helpCategory, title }: CreateBlockArgs) =>\n      await createLanguageBlock(superBlock, block, helpCategory, title)\n  )\n  .then(() =>\n    console.log(\n      'All set.  Now use pnpm run clean:client in the root and it should be good to go.'\n    )\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4712,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-language-block.ts",
      "source_type": "git_repo"
    },
    "token_count": 358,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "d6c524a2cac2867f62f8b8fa8bf61130",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-next-task.ts",
    "source_type": "git_repo",
    "title": "create-next-task",
    "content": "import ObjectID from 'bson-objectid';\nimport { getTemplate } from './helpers/get-challenge-template';\nimport { newTaskPrompts } from './helpers/new-task-prompts';\nimport { getProjectPath } from './helpers/get-project-info';\nimport {\n  getMetaData,\n  updateMetaData,\n  validateMetaData\n} from './helpers/project-metadata';\nimport {\n  createChallengeFile,\n  updateTaskMeta,\n  updateTaskMarkdownFiles\n} from './utils';\n\nconst createNextTask = async () => {\n  validateMetaData();\n\nconst { challengeType } = await newTaskPrompts();\n\n// Placeholder title, to be replaced by updateTaskMarkdownFiles\n  const options = {\n    title: `Task 0`,\n    dashedName: 'task-0',\n    challengeType\n  };\n\nconst path = getProjectPath();\n  const template = getTemplate(options.challengeType);\n  const challengeId = new ObjectID();\n  const challengeText = template({ ...options, challengeId });\n  // eslint-disable-next-line @typescript-eslint/no-base-to-string\n  const challengeIdString = challengeId.toString();\n\ncreateChallengeFile(challengeIdString, challengeText, path);\n  console.log('Finished creating new task markdown file.');\n\nconst meta = getMetaData();\n  meta.challengeOrder.push({\n    id: challengeIdString,\n    title: options.title\n  });\n  updateMetaData(meta);\n  console.log(`Finished inserting task into 'meta.json' file.`);\n\nupdateTaskMeta();\n  console.log(\"Finished updating tasks in 'meta.json'.\");\n\nupdateTaskMarkdownFiles();\n  console.log('Finished updating task markdown files.');\n};\n\nvoid createNextTask();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-next-task.ts",
      "source_type": "git_repo"
    },
    "token_count": 334,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0d21787879ae0bffe92cd3e381b6793c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-project.ts",
    "source_type": "git_repo",
    "title": "create-project",
    "content": "import { existsSync } from 'fs';\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { prompt } from 'inquirer';\nimport { format } from 'prettier';\nimport ObjectID from 'bson-objectid';\n\nimport {\n  SuperBlocks,\n  superBlockToFolderMap\n} from '../../shared/config/curriculum';\nimport { createStepFile, validateBlockName } from './utils';\nimport { getBaseMeta } from './helpers/get-base-meta';\nimport { createIntroMD } from './helpers/create-intro';\n\nconst helpCategories = [\n  'HTML-CSS',\n  'JavaScript',\n  'Backend Development',\n  'Python',\n  'English',\n  'Odin',\n  'Euler',\n  'Rosetta'\n] as const;\n\ntype BlockInfo = {\n  title: string;\n  intro: string[];\n};\n\ntype SuperBlockInfo = {\n  blocks: Record<string, BlockInfo>;\n};\n\ntype IntroJson = Record<SuperBlocks, SuperBlockInfo>;\n\ninterface CreateProjectArgs {\n  superBlock: SuperBlocks;\n  block: string;\n  helpCategory: string;\n  order: number;\n  title?: string;\n}\n\nasync function createProject(\n  superBlock: SuperBlocks,\n  block: string,\n  helpCategory: string,\n  order: number,\n  title?: string\n) {\n  if (!title) {\n    title = block;\n  }\n  void updateIntroJson(superBlock, block, title);\n\nconst challengeId = await createFirstChallenge(superBlock, block);\n  void createMetaJson(\n    superBlock,\n    block,\n    title,\n    helpCategory,\n    order,\n    challengeId\n  );\n  // TODO: remove once we stop relying on markdown in the client.\n  void createIntroMD(superBlock, block, title);\n}\n\nasync function updateIntroJson(\n  superBlock: SuperBlocks,\n  block: string,\n  title: string\n) {\n  const introJsonPath = path.resolve(\n    __dirname,\n    '../../client/i18n/locales/english/intro.json'\n  );\n  const newIntro = await parseJson<IntroJson>(introJsonPath);\n  newIntro[superBlock].blocks[block] = {\n    title,\n    intro: ['', '']\n  };\n  void withTrace(\n    fs.writeFile,\n    introJsonPath,\n    await format(JSON.stringify(newIntro), { parser: 'json' })\n  );\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5672,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-project.ts",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "c3b4fb6613afc3faf639effe37037462",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-project.ts",
    "source_type": "git_repo",
    "title": "create-project",
    "content": "title); const challengeId = await createFirstChallenge(superBlock, block); void createMetaJson( superBlock, block, title, helpCategory, order, challengeId ); // TODO: remove once we stop relying on markdown in the client. void createIntroMD(superBlock, block, title); } async function updateIntroJson( superBlock: SuperBlocks, block: string, title: string ) { const introJsonPath = path.resolve( __dirname, '../../client/i18n/locales/english/intro.json' ); const newIntro = await parseJson<IntroJson>(introJsonPath); newIntro[superBlock].blocks[block] = { title, intro: ['', ''] }; void withTrace( fs.writeFile, introJsonPath, await format(JSON.stringify(newIntro), { parser: 'json' }) ); }\n\nasync function createMetaJson(\n  superBlock: SuperBlocks,\n  block: string,\n  title: string,\n  helpCategory: string,\n  order: number,\n  challengeId: ObjectID\n) {\n  const metaDir = path.resolve(__dirname, '../../curriculum/challenges/_meta');\n  const newMeta = getBaseMeta('Step');\n  newMeta.name = title;\n  newMeta.dashedName = block;\n  newMeta.helpCategory = helpCategory;\n  newMeta.order = order;\n  newMeta.superBlock = superBlock;\n  // eslint-disable-next-line @typescript-eslint/no-base-to-string\n  newMeta.challengeOrder = [{ id: challengeId.toString(), title: 'Step 1' }];\n  const newMetaDir = path.resolve(metaDir, block);\n  if (!existsSync(newMetaDir)) {\n    await withTrace(fs.mkdir, newMetaDir);\n  }\n\nvoid withTrace(\n    fs.writeFile,\n    path.resolve(metaDir, `${block}/meta.json`),\n    await format(JSON.stringify(newMeta), { parser: 'json' })\n  );\n}\n\nasync function createFirstChallenge(\n  superBlock: SuperBlocks,\n  block: string\n): Promise<ObjectID> {\n  const superBlockSubPath = superBlockToFolderMap[superBlock];\n  const newChallengeDir = path.resolve(\n    __dirname,\n    `../../curriculum/challenges/english/${superBlockSubPath}/${block}`\n  );\n  if (!existsSync(newChallengeDir)) {\n    await withTrace(fs.mkdir, newChallengeDir);\n  }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5672,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-project.ts",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "4fb3353df8b90b6ec8db7397085c86c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-project.ts",
    "source_type": "git_repo",
    "title": "create-project",
    "content": "= block; newMeta.helpCategory = helpCategory; newMeta.order = order; newMeta.superBlock = superBlock; // eslint-disable-next-line @typescript-eslint/no-base-to-string newMeta.challengeOrder = [{ id: challengeId.toString(), title: 'Step 1' }]; const newMetaDir = path.resolve(metaDir, block); if (!existsSync(newMetaDir)) { await withTrace(fs.mkdir, newMetaDir); } void withTrace( fs.writeFile, path.resolve(metaDir, `${block}/meta.json`), await format(JSON.stringify(newMeta), { parser: 'json' }) ); } async function createFirstChallenge( superBlock: SuperBlocks, block: string ): Promise<ObjectID> { const superBlockSubPath = superBlockToFolderMap[superBlock]; const newChallengeDir = path.resolve( __dirname, `../../curriculum/challenges/english/${superBlockSubPath}/${block}` ); if (!existsSync(newChallengeDir)) { await withTrace(fs.mkdir, newChallengeDir); }\n\n// TODO: would be nice if the extension made sense for the challenge, but, at\n  // least until react I think they're all going to be html anyway.\n  const challengeSeeds = {\n    indexhtml: {\n      contents: '',\n      ext: 'html',\n      editableRegionBoundaries: [0, 2]\n    }\n  };\n  // including trailing slash for compatibility with createStepFile\n  return createStepFile({\n    projectPath: newChallengeDir + '/',\n    stepNum: 1,\n    challengeType: 0,\n    challengeSeeds,\n    isFirstChallenge: true\n  });\n}\n\nfunction parseJson<JsonSchema>(filePath: string) {\n  return withTrace(fs.readFile, filePath, 'utf8').then(\n    // unfortunately, withTrace does not correctly infer that the third argument\n    // is a string, so it uses the (path, options?) overload and we have to cast\n    // result to string.\n    result => JSON.parse(result as string) as JsonSchema\n  );\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5672,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-project.ts",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "3d8db49ff16375c56a49915c0514f23f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-project.ts",
    "source_type": "git_repo",
    "title": "create-project",
    "content": "editableRegionBoundaries: [0, 2] } }; // including trailing slash for compatibility with createStepFile return createStepFile({ projectPath: newChallengeDir + '/', stepNum: 1, challengeType: 0, challengeSeeds, isFirstChallenge: true }); } function parseJson<JsonSchema>(filePath: string) { return withTrace(fs.readFile, filePath, 'utf8').then( // unfortunately, withTrace does not correctly infer that the third argument // is a string, so it uses the (path, options?) overload and we have to cast // result to string. result => JSON.parse(result as string) as JsonSchema ); }\n\n// fs Promise functions return errors, but no stack trace.  This adds back in\n// the stack trace.\nfunction withTrace<Args extends unknown[], Result>(\n  fn: (...x: Args) => Promise<Result>,\n  ...args: Args\n): Promise<Result> {\n  return fn(...args).catch((reason: Error) => {\n    throw Error(reason.message);\n  });\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5672,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-project.ts",
      "source_type": "git_repo"
    },
    "token_count": 214,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "a9264c023fdb3362220324b6a1dee981",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-project.ts",
    "source_type": "git_repo",
    "title": "create-project",
    "content": "infer that the third argument // is a string, so it uses the (path, options?) overload and we have to cast // result to string. result => JSON.parse(result as string) as JsonSchema ); } // fs Promise functions return errors, but no stack trace. This adds back in // the stack trace. function withTrace<Args extends unknown[], Result>( fn: (...x: Args) => Promise<Result>, ...args: Args ): Promise<Result> { return fn(...args).catch((reason: Error) => { throw Error(reason.message); }); }\n\nvoid prompt([\n  {\n    name: 'superBlock',\n    message: 'Which certification does this belong to?',\n    default: SuperBlocks.RespWebDesign,\n    type: 'list',\n    choices: Object.values(SuperBlocks)\n  },\n  {\n    name: 'block',\n    message: 'What is the dashed name (in kebab-case) for this project?',\n    validate: validateBlockName,\n    filter: (block: string) => {\n      return block.toLowerCase().trim();\n    }\n  },\n  {\n    name: 'title',\n    default: ({ block }: { block: string }) => block\n  },\n  {\n    name: 'helpCategory',\n    message: 'Choose a help category',\n    default: 'HTML-CSS',\n    type: 'list',\n    choices: helpCategories\n  },\n  {\n    name: 'order',\n    message: 'Which position does this appear in the certificate?',\n    default: 42,\n    validate: (order: string) => {\n      return parseInt(order, 10) > 0\n        ? true\n        : 'Order must be an number greater than zero.';\n    },\n    filter: (order: string) => {\n      return parseInt(order, 10);\n    }\n  }\n])\n  .then(\n    async ({\n      superBlock,\n      block,\n      title,\n      helpCategory,\n      order\n    }: CreateProjectArgs) =>\n      await createProject(superBlock, block, helpCategory, order, title)\n  )\n  .then(() =>\n    console.log(\n      'All set.  Now use pnpm run clean:client in the root and it should be good to go.'\n    )\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5672,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-project.ts",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "1c34293a21a0689b82c3069fd3c6fed5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-quiz.ts",
    "source_type": "git_repo",
    "title": "create-quiz",
    "content": "import { existsSync } from 'fs';\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { prompt } from 'inquirer';\nimport { format } from 'prettier';\nimport ObjectID from 'bson-objectid';\n\nimport {\n  SuperBlocks,\n  superBlockToFolderMap\n} from '../../shared/config/curriculum';\nimport { createQuizFile, validateBlockName } from './utils';\nimport { getBaseMeta } from './helpers/get-base-meta';\nimport { createIntroMD } from './helpers/create-intro';\n\nconst helpCategories = [\n  'HTML-CSS',\n  'JavaScript',\n  'Backend Development',\n  'Python'\n] as const;\n\ntype BlockInfo = {\n  title: string;\n  intro: string[];\n};\n\ntype SuperBlockInfo = {\n  blocks: Record<string, BlockInfo>;\n};\n\ntype IntroJson = Record<SuperBlocks, SuperBlockInfo>;\n\ninterface CreateQuizArgs {\n  superBlock: SuperBlocks;\n  block: string;\n  helpCategory: string;\n  title?: string;\n  questionCount: number;\n}\n\nasync function createQuiz(\n  superBlock: SuperBlocks,\n  block: string,\n  helpCategory: string,\n  questionCount: number,\n  title?: string\n) {\n  if (!title) {\n    title = block;\n  }\n  await updateIntroJson(superBlock, block, title);\n\nconst challengeId = await createQuizChallenge(\n    superBlock,\n    block,\n    title,\n    questionCount\n  );\n  await createMetaJson(superBlock, block, title, helpCategory, challengeId);\n  // TODO: remove once we stop relying on markdown in the client.\n  await createIntroMD(superBlock, block, title);\n}\n\nasync function updateIntroJson(\n  superBlock: SuperBlocks,\n  block: string,\n  title: string\n) {\n  const introJsonPath = path.resolve(\n    __dirname,\n    '../../client/i18n/locales/english/intro.json'\n  );\n  const newIntro = await parseJson<IntroJson>(introJsonPath);\n  newIntro[superBlock].blocks[block] = {\n    title,\n    intro: ['', '']\n  };\n  void withTrace(\n    fs.writeFile,\n    introJsonPath,\n    await format(JSON.stringify(newIntro), { parser: 'json' })\n  );\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5117,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-quiz.ts",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "05383486d8124fb023ebfad4ec3f06f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-quiz.ts",
    "source_type": "git_repo",
    "title": "create-quiz",
    "content": "const challengeId = await createQuizChallenge( superBlock, block, title, questionCount ); await createMetaJson(superBlock, block, title, helpCategory, challengeId); // TODO: remove once we stop relying on markdown in the client. await createIntroMD(superBlock, block, title); } async function updateIntroJson( superBlock: SuperBlocks, block: string, title: string ) { const introJsonPath = path.resolve( __dirname, '../../client/i18n/locales/english/intro.json' ); const newIntro = await parseJson<IntroJson>(introJsonPath); newIntro[superBlock].blocks[block] = { title, intro: ['', ''] }; void withTrace( fs.writeFile, introJsonPath, await format(JSON.stringify(newIntro), { parser: 'json' }) ); }\n\nasync function createMetaJson(\n  superBlock: SuperBlocks,\n  block: string,\n  title: string,\n  helpCategory: string,\n  challengeId: ObjectID\n) {\n  const metaDir = path.resolve(__dirname, '../../curriculum/challenges/_meta');\n  const newMeta = getBaseMeta('Quiz');\n  newMeta.name = title;\n  newMeta.dashedName = block;\n  newMeta.helpCategory = helpCategory;\n  newMeta.superBlock = superBlock;\n  // eslint-disable-next-line @typescript-eslint/no-base-to-string\n  newMeta.challengeOrder = [{ id: challengeId.toString(), title: title }];\n  const newMetaDir = path.resolve(metaDir, block);\n  if (!existsSync(newMetaDir)) {\n    await withTrace(fs.mkdir, newMetaDir);\n  }\n\nvoid withTrace(\n    fs.writeFile,\n    path.resolve(metaDir, `${block}/meta.json`),\n    await format(JSON.stringify(newMeta), { parser: 'json' })\n  );\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5117,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-quiz.ts",
      "source_type": "git_repo"
    },
    "token_count": 375,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "b254bbf8ebb11f7c2d19bab257867a6d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-quiz.ts",
    "source_type": "git_repo",
    "title": "create-quiz",
    "content": "'json' }) ); } async function createMetaJson( superBlock: SuperBlocks, block: string, title: string, helpCategory: string, challengeId: ObjectID ) { const metaDir = path.resolve(__dirname, '../../curriculum/challenges/_meta'); const newMeta = getBaseMeta('Quiz'); newMeta.name = title; newMeta.dashedName = block; newMeta.helpCategory = helpCategory; newMeta.superBlock = superBlock; // eslint-disable-next-line @typescript-eslint/no-base-to-string newMeta.challengeOrder = [{ id: challengeId.toString(), title: title }]; const newMetaDir = path.resolve(metaDir, block); if (!existsSync(newMetaDir)) { await withTrace(fs.mkdir, newMetaDir); } void withTrace( fs.writeFile, path.resolve(metaDir, `${block}/meta.json`), await format(JSON.stringify(newMeta), { parser: 'json' }) ); }\n\nasync function createQuizChallenge(\n  superBlock: SuperBlocks,\n  block: string,\n  title: string,\n  questionCount: number\n): Promise<ObjectID> {\n  const superBlockSubPath = superBlockToFolderMap[superBlock];\n  const newChallengeDir = path.resolve(\n    __dirname,\n    `../../curriculum/challenges/english/${superBlockSubPath}/${block}`\n  );\n  if (!existsSync(newChallengeDir)) {\n    await withTrace(fs.mkdir, newChallengeDir);\n  }\n  return createQuizFile({\n    projectPath: newChallengeDir + '/',\n    title: title,\n    dashedName: block,\n    questionCount: questionCount\n  });\n}\nfunction parseJson<JsonSchema>(filePath: string) {\n  return withTrace(fs.readFile, filePath, 'utf8').then(\n    // unfortunately, withTrace does not correctly infer that the third argument\n    // is a string, so it uses the (path, options?) overload and we have to cast\n    // result to string.\n    result => JSON.parse(result as string) as JsonSchema\n  );\n}\n\n// fs Promise functions return errors, but no stack trace.  This adds back in\n// the stack trace.\nfunction withTrace<Args extends unknown[], Result>(\n  fn: (...x: Args) => Promise<Result>,\n  ...args: Args\n): Promise<Result> {\n  return fn(...args).catch((reason: Error) => {\n    throw Error(reason.message);\n  });\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5117,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-quiz.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "0897d9b58630f28afb1b60d3f5b8788b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-quiz.ts",
    "source_type": "git_repo",
    "title": "create-quiz",
    "content": "infer that the third argument // is a string, so it uses the (path, options?) overload and we have to cast // result to string. result => JSON.parse(result as string) as JsonSchema ); } // fs Promise functions return errors, but no stack trace. This adds back in // the stack trace. function withTrace<Args extends unknown[], Result>( fn: (...x: Args) => Promise<Result>, ...args: Args ): Promise<Result> { return fn(...args).catch((reason: Error) => { throw Error(reason.message); }); }\n\nvoid prompt([\n  {\n    name: 'superBlock',\n    message: 'Which certification does this belong to?',\n    default: SuperBlocks.FullStackDeveloper,\n    type: 'list',\n    choices: Object.values(SuperBlocks)\n  },\n  {\n    name: 'block',\n    message: 'What is the dashed name (in kebab-case) for this quiz?',\n    validate: validateBlockName,\n    filter: (block: string) => {\n      return block.toLowerCase().trim();\n    }\n  },\n  {\n    name: 'title',\n    default: ({ block }: { block: string }) => block\n  },\n  {\n    name: 'helpCategory',\n    message: 'Choose a help category',\n    default: 'HTML-CSS',\n    type: 'list',\n    choices: helpCategories\n  },\n  {\n    name: 'questionCount',\n    message: 'Should this quiz have either ten or twenty questions?',\n    default: 20,\n    type: 'list',\n    choices: [20, 10]\n  }\n])\n  .then(\n    async ({\n      superBlock,\n      block,\n      title,\n      helpCategory,\n      questionCount\n    }: CreateQuizArgs) =>\n      await createQuiz(superBlock, block, helpCategory, questionCount, title)\n  )\n  .then(() =>\n    console.log(\n      'All set.  Now use pnpm run clean:client in the root and it should be good to go.'\n    )\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5117,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-quiz.ts",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "27da6d071fc25de4a8756c8165749f7d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-this-challenge.ts",
    "source_type": "git_repo",
    "title": "create-this-challenge",
    "content": "/*\n * This is a one-off script to create challenges with specific markdown. Fill in\n * the content below where the comments suggest. When you are done, go to the\n * English block folder where you want to create the challenge in the terminal,\n * and run `pnpm create-this-challenge`. It will use the Object ID as the\n * filename. Change the `challengeId` at the bottom to use the dashed name if\n * you want that.\n */\nimport ObjectID from 'bson-objectid';\nimport { createChallengeFile } from './utils';\nimport { getProjectPath } from './helpers/get-project-info';\nimport { getMetaData, updateMetaData } from './helpers/project-metadata';\n\n// eslint-disable-next-line @typescript-eslint/no-base-to-string\nconst challengeId = new ObjectID().toString();\n\n/***** Only change code below this line *****/\n\n/*\n * Fill in the variables below with the challenge info. Run the script and paste\n * the body of the challenge into the md file created by the script.\n *\n * NOTE: if the body of the challenge is not correctly formatted, see below for\n * examples of the correct format.\n *\n */\n\nconst num = 1;\nconst title = 'Task ' + num;\nconst dashedName = 'task-' + num;\nconst challengeType = 22;\nconst template = `---\nid: ${challengeId}\ntitle: ${title}\nchallengeType: ${challengeType}\ndashedName: ${dashedName}\n---\n\n`;\n\n// template for fill in the blank lessons\n/*\n\n<!--\nAUDIO REFERENCE:\nSarah: \"I see. Let's open an _, then. What happened when you _ the changes?\"\n-->\n\n# --description--\n\nThe word `I'm` is a contraction of `I am`. Contractions are a way to shorten common combinations of words, especially with verbs.\n\n# --fillInTheBlank--\n\n## --sentence--\n\n`Hi, that's right! _ Tom McKenzie.`\n\n## --blanks--\n\n`I'm`\n\n### --feedback--\n\nSome `hints` for the learner.\n\n*/\n\n// template for multiple choice lessons\n\n/*\n<!--\nAUDIO REFERENCE:\nSarah: \"I see. Let's open an issue, then.\"\n-->\n\n# --description--\n\nSarah's response to Bob includes a specific phrase that shows she understands the problem he's facing. Recognizing such phrases is important in understanding communication cues in conversations.\n\n# --question--\n\n## --text--\n\nWhich part of Sarah's sentence shows that she understands the problem?",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3876,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-this-challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "488e868e23129d4a9d82bd4c087e177b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-this-challenge.ts",
    "source_type": "git_repo",
    "title": "create-this-challenge",
    "content": "Tom McKenzie.` ## --blanks-- `I'm` ### --feedback-- Some `hints` for the learner. */ // template for multiple choice lessons /* <!-- AUDIO REFERENCE: Sarah: \"I see. Let's open an issue, then.\" --> # --description-- Sarah's response to Bob includes a specific phrase that shows she understands the problem he's facing. Recognizing such phrases is important in understanding communication cues in conversations. # --question-- ## --text-- Which part of Sarah's sentence shows that she understands the problem?\n\n## --answers–\n\nI see\n\n---\n\nLet's open an issue\n\n### --feedback--\n\nWhile this part suggests a solution, this is not the part that directly indicates understanding.\n\n---\n\n`then`\n\n### --feedback--\n\nThe word `then` is part of suggesting a solution, but it doesn't directly show understanding.\n\n---\n\n`an issue`\n\n### --feedback--\n\nThe term `an issue` relates to the solution, not to the expression of understanding the problem.\n\n## --video-solution--\n\n1\n\n*/\n\n// template for dialogs\n/*\n---\nid: 651dd3e06ffb500e3f2ce478\ntitle: \"Dialogue 1: Maria Introduces Herself to Tom\"\nchallengeType: 21\ndashedName: dialogue-1-maria-introduces-herself-to-tom\n---\n\n# --description--\n\nWatch the video below to understand the context of the upcoming lessons.\n\n# --assignment--\n\nWatch the video\n\n*/\n\n/***** Only change code above this line *****/\n\nconst path = getProjectPath();\nif (\n  !/freeCodeCamp\\/curriculum\\/challenges\\/english\\/[^/]+\\/[^/]+\\/$/.test(path)\n) {\n  throw Error(`\nYou cannot run this script from anywhere other than a block folder of the English curriculum.\nIn the terminal, go to the block folder where you want to create this challenge first.\nFor example: 'freeCodeCamp/curriculum/challenges/english/21-a2-english-for-developers/learn-greetings-in-your-first-day-at-the-office/'\n  `);\n}\n\nconst meta = getMetaData();\nif (meta.challengeOrder.some(c => c.title === title)) {\n  throw Error(`\n    A challenge with the title ${title} already exists in this block.\n  `);\n}\n\nmeta.challengeOrder.push({\n  id: challengeId,\n  title\n});\n\n// write the meta.json file\nupdateMetaData(meta);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3876,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-this-challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "9d834cbfe71a6bb010ff8ca2223d5b13",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-this-challenge.ts",
    "source_type": "git_repo",
    "title": "create-this-challenge",
    "content": "throw Error(` You cannot run this script from anywhere other than a block folder of the English curriculum. In the terminal, go to the block folder where you want to create this challenge first. For example: 'freeCodeCamp/curriculum/challenges/english/21-a2-english-for-developers/learn-greetings-in-your-first-day-at-the-office/' `); } const meta = getMetaData(); if (meta.challengeOrder.some(c => c.title === title)) { throw Error(` A challenge with the title ${title} already exists in this block. `); } meta.challengeOrder.push({ id: challengeId, title }); // write the meta.json file updateMetaData(meta);\n\n// write the challenge file, the first argument is the filename\ncreateChallengeFile(challengeId, template, path);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3876,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-this-challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 163,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "994639320a8631b01d8785b0768e5bfd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\delete-step.ts",
    "source_type": "git_repo",
    "title": "delete-step",
    "content": "import { deleteStep } from './commands';\nimport { getArgValue } from './helpers/get-arg-value';\nimport { validateMetaData } from './helpers/project-metadata';\n\nvalidateMetaData();\ndeleteStep(getArgValue(process.argv));",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 219,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\delete-step.ts",
      "source_type": "git_repo"
    },
    "token_count": 45,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "88ade6326046999de79efbd19b77859a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\delete-challenge.ts",
    "source_type": "git_repo",
    "title": "delete-challenge",
    "content": "import { unlink } from 'fs/promises';\nimport { prompt } from 'inquirer';\nimport { getProjectPath } from './helpers/get-project-info';\nimport { getMetaData, updateMetaData } from './helpers/project-metadata';\nimport { getChallengeOrderFromMeta } from './helpers/get-challenge-order';\nimport { getFileName } from './helpers/get-file-name';\n\nconst deleteChallenge = async () => {\n  const path = getProjectPath();\n\nconst challenges = getChallengeOrderFromMeta();\n\nconst challengeToDelete = (await prompt({\n    name: 'id',\n    message: 'Which challenge should be deleted?',\n    type: 'list',\n    choices: challenges.map(({ id, title }) => ({\n      name: title,\n      value: id\n    }))\n  })) as { id: string };\n  const indexToDelete = challenges.findIndex(\n    ({ id }) => id === challengeToDelete.id\n  );\n  const fileToDelete = await getFileName(challengeToDelete.id);\n\nif (!fileToDelete) {\n    throw new Error(`File not found for challenge ${challengeToDelete.id}`);\n  }\n\nawait unlink(`${path}${fileToDelete}`);\n\nconst meta = getMetaData();\n  meta.challengeOrder.splice(indexToDelete, 1);\n  updateMetaData(meta);\n};\n\nvoid deleteChallenge();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1147,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\delete-challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 254,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1295fa7d1d309890696148da3bf9ee05",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\delete-task.ts",
    "source_type": "git_repo",
    "title": "delete-task",
    "content": "import { unlink } from 'fs/promises';\nimport { prompt } from 'inquirer';\nimport { getProjectPath } from './helpers/get-project-info';\nimport { getChallengeOrderFromMeta } from './helpers/get-challenge-order';\nimport { getFileName } from './helpers/get-file-name';\nimport { validateMetaData } from './helpers/project-metadata';\nimport {\n  deleteChallengeFromMeta,\n  updateTaskMarkdownFiles,\n  updateTaskMeta\n} from './utils';\nimport { isTaskChallenge } from './helpers/task-helpers';\n\nconst deleteTask = async () => {\n  validateMetaData();\n\nconst path = getProjectPath();\n  const challenges = getChallengeOrderFromMeta();\n\nconst challengeToDelete = (await prompt({\n    name: 'id',\n    message: 'Which challenge should be deleted?',\n    type: 'list',\n    choices: challenges.map(({ id, title }) => ({\n      name: title,\n      value: id\n    }))\n  })) as { id: string };\n\nconst indexToDelete = challenges.findIndex(\n    ({ id }) => id === challengeToDelete.id\n  );\n\nconst fileToDelete = await getFileName(challengeToDelete.id);\n  if (!fileToDelete) {\n    throw new Error(`File not found for challenge ${challengeToDelete.id}`);\n  }\n\nawait unlink(`${path}${fileToDelete}`);\n  console.log(`Finished deleting file: '${fileToDelete}'.`);\n\ndeleteChallengeFromMeta(indexToDelete);\n  console.log(`Finished removing challenge from 'meta.json'.`);\n\nif (isTaskChallenge(challenges[indexToDelete].title)) {\n    updateTaskMeta();\n    console.log(\"Finished updating tasks in 'meta.json'.\");\n\nupdateTaskMarkdownFiles();\n    console.log(`Finished updating task markdown files.`);\n  }\n};\n\nvoid deleteTask();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1606,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\delete-task.ts",
      "source_type": "git_repo"
    },
    "token_count": 349,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "969344e2f36726ea49b61336a6cf8ee4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\insert-challenge.ts",
    "source_type": "git_repo",
    "title": "insert-challenge",
    "content": "import ObjectID from 'bson-objectid';\nimport { prompt } from 'inquirer';\nimport { getTemplate } from './helpers/get-challenge-template';\nimport { newChallengePrompts } from './helpers/new-challenge-prompts';\nimport { getProjectPath } from './helpers/get-project-info';\nimport { getMetaData, updateMetaData } from './helpers/project-metadata';\nimport { createChallengeFile } from './utils';\nimport { getChallengeOrderFromMeta } from './helpers/get-challenge-order';\n\nconst insertChallenge = async () => {\n  const path = getProjectPath();\n\nconst options = await newChallengePrompts();\n\nconst challenges = getChallengeOrderFromMeta();\n\nconst challengeAfter = await prompt<{ id: string }>({\n    name: 'id',\n    message: 'Which challenge should come AFTER this new one?',\n    type: 'list',\n    choices: challenges.map(({ id, title }) => ({\n      name: title,\n      value: id\n    }))\n  });\n  const indexToInsert = challenges.findIndex(\n    ({ id }) => id === challengeAfter.id\n  );\n\nconst template = getTemplate(options.challengeType);\n  const challengeId = new ObjectID();\n  const challengeText = template({ ...options, challengeId });\n  createChallengeFile(options.dashedName, challengeText, path);\n\nconst meta = getMetaData();\n  meta.challengeOrder.splice(indexToInsert, 0, {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    id: challengeId.toString(),\n    title: options.title\n  });\n  updateMetaData(meta);\n};\n\nvoid insertChallenge();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1467,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\insert-challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 324,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f8a15832cc83d1a28a5e662838cdafb0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\insert-step.ts",
    "source_type": "git_repo",
    "title": "insert-step",
    "content": "import { getArgValue } from './helpers/get-arg-value';\nimport { insertStep } from './commands';\nimport { validateMetaData } from './helpers/project-metadata';\n\nvalidateMetaData();\ninsertStep(getArgValue(process.argv));",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 219,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\insert-step.ts",
      "source_type": "git_repo"
    },
    "token_count": 45,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "376ade84a2b251117cc8c17f1ba11ab4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"@freecodecamp/curriculum-helper-scripts\",\n  \"version\": \"0.0.0-next.1\",\n  \"description\": \"freeCodeCamp's project-based curriculum scripts\",\n  \"license\": \"BSD-3-Clause\",\n  \"private\": true,\n  \"engines\": {\n    \"node\": \">=16\",\n    \"pnpm\": \">=10\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/freeCodeCamp/freeCodeCamp.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/freeCodeCamp/freeCodeCamp/issues\"\n  },\n  \"homepage\": \"https://github.com/freeCodeCamp/freeCodeCamp#readme\",\n  \"author\": \"freeCodeCamp <team@freecodecamp.org>\",\n  \"main\": \"utils.js\",\n  \"scripts\": {\n    \"test\": \"mocha --delay --reporter progress --bail\",\n    \"create-project\": \"tsx create-project\",\n    \"create-language-block\": \"tsx create-language-block\",\n    \"create-quiz\": \"tsx create-quiz\"\n  },\n  \"devDependencies\": {\n    \"@types/glob\": \"^8.0.1\",\n    \"@types/inquirer\": \"^8.2.5\",\n    \"bson-objectid\": \"2.0.4\",\n    \"glob\": \"^8.1.0\",\n    \"gray-matter\": \"4.0.3\",\n    \"inquirer\": \"8.2.6\",\n    \"prettier\": \"3.2.5\",\n    \"typescript\": \"5.2.2\"\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 1050,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 350,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e48aceb20233482be95021aa08e8e12d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\insert-task.ts",
    "source_type": "git_repo",
    "title": "insert-task",
    "content": "import ObjectID from 'bson-objectid';\nimport { prompt } from 'inquirer';\nimport { getTemplate } from './helpers/get-challenge-template';\nimport { newTaskPrompts } from './helpers/new-task-prompts';\nimport { getProjectPath } from './helpers/get-project-info';\nimport { validateMetaData } from './helpers/project-metadata';\nimport {\n  createChallengeFile,\n  insertChallengeIntoMeta,\n  updateTaskMeta,\n  updateTaskMarkdownFiles\n} from './utils';\nimport { getChallengeOrderFromMeta } from './helpers/get-challenge-order';\n\nconst insertChallenge = async () => {\n  validateMetaData();\n\nconst challenges = getChallengeOrderFromMeta();\n  const challengeAfter = await prompt<{ id: string }>({\n    name: 'id',\n    message: 'Which challenge should come AFTER this new one?',\n    type: 'list',\n    choices: challenges.map(({ id, title }) => ({\n      name: title,\n      value: id\n    }))\n  });\n\nconst indexToInsert = challenges.findIndex(\n    ({ id }) => id === challengeAfter.id\n  );\n\nconst newTaskTitle = 'Task 0';\n\nconst { challengeType } = await newTaskPrompts();\n\nconst options = {\n    title: newTaskTitle,\n    dashedName: 'task-0',\n    challengeType\n  };\n\nconst path = getProjectPath();\n  const template = getTemplate(challengeType);\n  const challengeId = new ObjectID();\n  const challengeText = template({ ...options, challengeId });\n  // eslint-disable-next-line @typescript-eslint/no-base-to-string\n  const challengeIdString = challengeId.toString();\n\ncreateChallengeFile(challengeIdString, challengeText, path);\n  console.log('Finished creating new task markdown file.');\n\ninsertChallengeIntoMeta({\n    index: indexToInsert,\n    id: challengeId,\n    title: newTaskTitle\n  });\n  console.log(`Finished inserting task into 'meta.json' file.`);\n\nupdateTaskMeta();\n  console.log(\"Finished updating tasks in 'meta.json'.\");\n\nupdateTaskMarkdownFiles();\n  console.log('Finished updating task markdown files.');\n};\n\nvoid insertChallenge();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1948,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\insert-task.ts",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "939c7fdbaf2cee087431bc91d7c69a6b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\reorder-tasks.ts",
    "source_type": "git_repo",
    "title": "reorder-tasks",
    "content": "import { validateMetaData } from './helpers/project-metadata';\nimport { updateTaskMeta, updateTaskMarkdownFiles } from './utils';\n\nconst reorderTasks = () => {\n  validateMetaData();\n\nupdateTaskMeta();\n  console.log(\"Finished updating tasks in 'meta.json'.\");\n\nupdateTaskMarkdownFiles();\n  console.log('Finished updating task markdown files.');\n};\n\nvoid reorderTasks();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 373,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\reorder-tasks.ts",
      "source_type": "git_repo"
    },
    "token_count": 74,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "44ca2608870c839718cef70cd49e6489",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\rename-challenge-files.ts",
    "source_type": "git_repo",
    "title": "rename-challenge-files",
    "content": "import { exec } from 'child_process';\nimport { readFile, readdir } from 'fs/promises';\nimport { join } from 'path';\nimport { promisify } from 'util';\n\nimport gray from 'gray-matter';\nimport { prompt } from 'inquirer';\n\nconst asyncExec = promisify(exec);\n\nvoid (async () => {\n  const superblocks = await readdir(\n    join(process.cwd(), 'curriculum', 'challenges', 'english')\n  );\n\nconst { superblock } = (await prompt({\n    name: 'superblock',\n    message: 'Select target superblock:',\n    type: 'list',\n    choices: superblocks.map(e => ({ name: e, value: e }))\n  })) as { superblock: string };\n\nconst blocks = await readdir(\n    join(process.cwd(), 'curriculum', 'challenges', 'english', superblock)\n  );\n\nconst { block } = (await prompt({\n    name: 'block',\n    message: 'Select target block:',\n    type: 'list',\n    choices: blocks.map(e => ({ name: e, value: e }))\n  })) as { block: string };\n\nconst files = await readdir(\n    join(\n      process.cwd(),\n      'curriculum',\n      'challenges',\n      'english',\n      superblock,\n      block\n    )\n  );\n  console.log(`Processing ${files.length} files.`);\n  for (const file of files) {\n    const fileData = await readFile(\n      join(\n        process.cwd(),\n        'curriculum',\n        'challenges',\n        'english',\n        superblock,\n        block,\n        file\n      )\n    );\n    const challengeId = (await gray(fileData).data.id) as string;\n    if (`${challengeId}.md` === file) {\n      console.warn(`${file} already has the correct name. Skipping.`);\n      continue;\n    }\n\nawait asyncExec(\n      `git mv ${join(\n        'curriculum',\n        'challenges',\n        'english',\n        superblock,\n        block,\n        file\n      )} ${join(\n        'curriculum',\n        'challenges',\n        'english',\n        superblock,\n        block,\n        `${challengeId}.md`\n      )}`\n    );\n  }\n})();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1869,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\rename-challenge-files.ts",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "baa1f56fa2970de5a03d46a44a9731fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\repair-meta.ts",
    "source_type": "git_repo",
    "title": "repair-meta",
    "content": "import { repairMeta } from './commands';\n\nvoid (() => repairMeta())();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 71,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\repair-meta.ts",
      "source_type": "git_repo"
    },
    "token_count": 16,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "911b76bbada93bf6d6593015bfeec16c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\update-challenge-order.ts",
    "source_type": "git_repo",
    "title": "update-challenge-order",
    "content": "import { prompt } from 'inquirer';\n\nimport { getMetaData, updateMetaData } from './helpers/project-metadata';\nimport { getChallengeOrderFromMeta } from './helpers/get-challenge-order';\n\nconst updateChallengeOrder = async () => {\n  const oldChallengeOrder = getChallengeOrderFromMeta();\n  console.log('Current challenge order is: ');\n  console.table(oldChallengeOrder.map(({ title }) => ({ title })));\n\nconst newChallengeOrder: { id: string; title: string }[] = [];\n\nwhile (oldChallengeOrder.length) {\n    const nextChallenge = (await prompt({\n      name: 'id',\n      message: newChallengeOrder.length\n        ? `What challenge comes after ${\n            newChallengeOrder[newChallengeOrder.length - 1].title\n          }?`\n        : 'What is the first challenge?',\n      type: 'list',\n      choices: oldChallengeOrder.map(({ id, title }) => ({\n        name: title,\n        value: id\n      }))\n    })) as { id: string };\n    const nextChallengeIndex = oldChallengeOrder.findIndex(\n      ({ id }) => id === nextChallenge.id\n    );\n    const targetChallenge = oldChallengeOrder[nextChallengeIndex];\n    oldChallengeOrder.splice(nextChallengeIndex, 1);\n    newChallengeOrder.push(targetChallenge);\n  }\n\nconsole.log('New challenge order is: ');\n  console.table(newChallengeOrder.map(({ title }) => ({ title })));\n\nconst confirm = await prompt({\n    name: 'correct',\n    message: 'Is this correct?',\n    type: 'confirm',\n    default: false\n  });\n\nif (!confirm.correct) {\n    console.error('Aborting.');\n    return;\n  }\n\nconst meta = getMetaData();\n  meta.challengeOrder = newChallengeOrder;\n  updateMetaData(meta);\n};\n\nvoid (async () => await updateChallengeOrder())();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1675,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\update-challenge-order.ts",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2293a754810558547341af3b35aec684",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\repair-meta.test.ts",
    "source_type": "git_repo",
    "title": "repair-meta.test",
    "content": "import { join } from 'path';\nimport fs from 'fs';\n\nimport { repairMeta } from './commands';\n\nconst basePath = join(\n  process.cwd(),\n  '__fixtures__' + process.env.JEST_WORKER_ID\n);\nconst commonPath = join(basePath, 'curriculum', 'challenges');\n\nconst metaPath = join(commonPath, '_meta', 'project-repair-meta');\nconst superBlockPath = join(commonPath, 'english', 'superblock-repair-meta');\nconst projectPath = join(superBlockPath, 'project-repair-meta');\n\ndescribe('Challenge utils helper scripts', () => {\n  beforeEach(() => {\n    process.env.CALLING_DIR = projectPath;\n    fs.mkdirSync(metaPath, { recursive: true });\n    fs.mkdirSync(superBlockPath, { recursive: true });\n    fs.mkdirSync(projectPath);\n  });\n\nit('should restore the challenge order in the meta.json file', async () => {\n    fs.writeFileSync(\n      join(metaPath, 'meta.json'),\n      // all the challenges from step 1 to 30 in reverse order:\n      `{\"challengeOrder\": [${Array.from(\n        { length: 30 },\n        (_, i) => `{\"id\": \"id-${i + 1}\", \"title\": \"Step ${30 - i}\"}`\n      ).join(',')}]}`,\n      'utf-8'\n    );\n\n// create all 30 challenges:\n    Array.from({ length: 30 }, (_, i) => {\n      fs.writeFileSync(\n        join(projectPath, `step-${i + 1}.md`),\n        `---\nid: id-${i + 1}\ntitle: Step ${30 - i}\n---\n`,\n        'utf-8'\n      );\n    });\n\n// run the repair script:\n    await repairMeta();\n\n// confirm that the meta.json file now has the correct challenge order:\n    const meta = JSON.parse(\n      fs.readFileSync(join(metaPath, 'meta.json'), 'utf-8')\n    ) as { challengeOrder: { id: string; title: string }[] };\n\nexpect(meta.challengeOrder).toEqual(\n      Array.from({ length: 30 }, (_, i) => ({\n        id: `id-${30 - i}`,\n        title: `Step ${i + 1}`\n      }))\n    );\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2015,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\repair-meta.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "936d7e6a57d7e4b46e16adfa7a3107d4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\repair-meta.test.ts",
    "source_type": "git_repo",
    "title": "repair-meta.test",
    "content": "`step-${i + 1}.md`), `--- id: id-${i + 1} title: Step ${30 - i} --- `, 'utf-8' ); }); // run the repair script: await repairMeta(); // confirm that the meta.json file now has the correct challenge order: const meta = JSON.parse( fs.readFileSync(join(metaPath, 'meta.json'), 'utf-8') ) as { challengeOrder: { id: string; title: string }[] }; expect(meta.challengeOrder).toEqual( Array.from({ length: 30 }, (_, i) => ({ id: `id-${30 - i}`, title: `Step ${i + 1}` })) ); });\n\nafterEach(() => {\n    delete process.env.CALLING_DIR;\n    try {\n      fs.rmSync(basePath, { recursive: true });\n    } catch (err) {\n      console.log(err);\n      console.log('Could not remove fixtures folder.');\n    }\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2015,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\repair-meta.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 200,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "48bad0f92e4b73e3acb15ea5aee35c74",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\update-step-titles.ts",
    "source_type": "git_repo",
    "title": "update-step-titles",
    "content": "import { validateMetaData } from './helpers/project-metadata';\nimport { updateStepTitles } from './utils';\n\nvalidateMetaData();\nupdateStepTitles();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 148,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\update-step-titles.ts",
      "source_type": "git_repo"
    },
    "token_count": 28,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e26b800eef4ce397b87b1fc22741f1a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.ts",
    "source_type": "git_repo",
    "title": "utils",
    "content": "import fs from 'fs';\nimport path from 'path';\nimport ObjectID from 'bson-objectid';\nimport matter from 'gray-matter';\nimport { challengeTypes } from '../../shared/config/challenge-types';\nimport { parseMDSync } from '../challenge-parser/parser';\nimport { getMetaData, updateMetaData } from './helpers/project-metadata';\nimport { getProjectPath } from './helpers/get-project-info';\nimport { ChallengeSeed, getStepTemplate } from './helpers/get-step-template';\nimport {\n  isTaskChallenge,\n  getTaskNumberFromTitle\n} from './helpers/task-helpers';\nimport { getTemplate } from './helpers/get-challenge-template';\n\ninterface Options {\n  stepNum: number;\n  challengeType: number;\n  projectPath?: string;\n  challengeSeeds?: Record<string, ChallengeSeed>;\n  isFirstChallenge?: boolean;\n}\n\ninterface QuizOptions {\n  projectPath?: string;\n  title: string;\n  dashedName: string;\n  questionCount: number;\n}\n\nconst createStepFile = ({\n  stepNum,\n  challengeType,\n  projectPath = getProjectPath(),\n  challengeSeeds = {},\n  isFirstChallenge = false\n}: Options): ObjectID => {\n  const challengeId = new ObjectID();\n\nconst template = getStepTemplate({\n    challengeId,\n    challengeSeeds,\n    stepNum,\n    challengeType,\n    isFirstChallenge\n  });\n\n// eslint-disable-next-line @typescript-eslint/no-base-to-string\n  fs.writeFileSync(`${projectPath}${challengeId.toString()}.md`, template);\n\nreturn challengeId;\n};\n\nconst createChallengeFile = (\n  filename: string,\n  template: string,\n  path = getProjectPath()\n): void => {\n  fs.writeFileSync(`${path}${filename}.md`, template);\n};\n\nconst createQuizFile = ({\n  projectPath = getProjectPath(),\n  title,\n  dashedName,\n  questionCount\n}: QuizOptions): ObjectID => {\n  const challengeId = new ObjectID();\n  const challengeType = challengeTypes.quiz.toString();\n  const template = getTemplate(challengeType);\n\nconst quizText = template({\n    challengeId,\n    challengeType,\n    title,\n    dashedName,\n    questionCount\n  });\n  // eslint-disable-next-line @typescript-eslint/no-base-to-string\n  fs.writeFileSync(`${projectPath}${challengeId.toString()}.md`, quizText);\n  return challengeId;\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7608,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.ts",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "c05e131a3864770667d0e7a1e5157ff4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.ts",
    "source_type": "git_repo",
    "title": "utils",
    "content": "stepNum, challengeType, isFirstChallenge }); // eslint-disable-next-line @typescript-eslint/no-base-to-string fs.writeFileSync(`${projectPath}${challengeId.toString()}.md`, template); return challengeId; }; const createChallengeFile = ( filename: string, template: string, path = getProjectPath() ): void => { fs.writeFileSync(`${path}${filename}.md`, template); }; const createQuizFile = ({ projectPath = getProjectPath(), title, dashedName, questionCount }: QuizOptions): ObjectID => { const challengeId = new ObjectID(); const challengeType = challengeTypes.quiz.toString(); const template = getTemplate(challengeType); const quizText = template({ challengeId, challengeType, title, dashedName, questionCount }); // eslint-disable-next-line @typescript-eslint/no-base-to-string fs.writeFileSync(`${projectPath}${challengeId.toString()}.md`, quizText); return challengeId; };\n\nconst createDialogueFile = ({\n  projectPath\n}: {\n  projectPath: string;\n}): ObjectID => {\n  const challengeId = new ObjectID();\n  const challengeType = challengeTypes.dialogue.toString();\n  const template = getTemplate(challengeType);\n\nconst dialogueText = template({\n    challengeId,\n    challengeType,\n    title: \"Dialogue 1: I'm Tom\",\n    dashedName: 'dialogue-1-im-tom'\n  });\n  // eslint-disable-next-line @typescript-eslint/no-base-to-string\n  fs.writeFileSync(`${projectPath}${challengeId.toString()}.md`, dialogueText);\n  return challengeId;\n};\n\ninterface InsertOptions {\n  stepNum: number;\n  stepId: ObjectID;\n}\n\ninterface InsertChallengeOptions {\n  index: number;\n  id: ObjectID;\n  title: string;\n}\n\nfunction insertChallengeIntoMeta({\n  index,\n  id,\n  title\n}: InsertChallengeOptions): void {\n  const existingMeta = getMetaData();\n  const challengeOrder = [...existingMeta.challengeOrder];\n\n// eslint-disable-next-line @typescript-eslint/no-base-to-string\n  challengeOrder.splice(index, 0, { id: id.toString(), title });\n  updateMetaData({ ...existingMeta, challengeOrder });\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7608,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.ts",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "f9b806d78e4f40cf506c4558aa3ff4b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.ts",
    "source_type": "git_repo",
    "title": "utils",
    "content": "const template = getTemplate(challengeType); const dialogueText = template({ challengeId, challengeType, title: \"Dialogue 1: I'm Tom\", dashedName: 'dialogue-1-im-tom' }); // eslint-disable-next-line @typescript-eslint/no-base-to-string fs.writeFileSync(`${projectPath}${challengeId.toString()}.md`, dialogueText); return challengeId; }; interface InsertOptions { stepNum: number; stepId: ObjectID; } interface InsertChallengeOptions { index: number; id: ObjectID; title: string; } function insertChallengeIntoMeta({ index, id, title }: InsertChallengeOptions): void { const existingMeta = getMetaData(); const challengeOrder = [...existingMeta.challengeOrder]; // eslint-disable-next-line @typescript-eslint/no-base-to-string challengeOrder.splice(index, 0, { id: id.toString(), title }); updateMetaData({ ...existingMeta, challengeOrder }); }\n\nfunction insertStepIntoMeta({ stepNum, stepId }: InsertOptions): void {\n  const existingMeta = getMetaData();\n  const oldOrder = [...existingMeta.challengeOrder];\n  // eslint-disable-next-line @typescript-eslint/no-base-to-string\n  oldOrder.splice(stepNum - 1, 0, { id: stepId.toString(), title: '' });\n  // rename all the files in challengeOrder\n  const challengeOrder = oldOrder.map(({ id }, index) => ({\n    id,\n    title: `Step ${index + 1}`\n  }));\n\nupdateMetaData({ ...existingMeta, challengeOrder });\n}\n\nfunction deleteStepFromMeta({ stepNum }: { stepNum: number }): void {\n  const existingMeta = getMetaData();\n  const oldOrder = [...existingMeta.challengeOrder];\n  oldOrder.splice(stepNum - 1, 1);\n  // rename all the files in challengeOrder\n  const challengeOrder = oldOrder.map(({ id }, index) => ({\n    id,\n    title: `Step ${index + 1}`\n  }));\n\nupdateMetaData({ ...existingMeta, challengeOrder });\n}\n\nfunction deleteChallengeFromMeta(challengeIndex: number): void {\n  const existingMeta = getMetaData();\n  const challengeOrder = [...existingMeta.challengeOrder];\n  challengeOrder.splice(challengeIndex, 1);\n  updateMetaData({ ...existingMeta, challengeOrder });\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7608,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.ts",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "8a37e2979bee30750fd57dcf76fd8940",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.ts",
    "source_type": "git_repo",
    "title": "utils",
    "content": "})); updateMetaData({ ...existingMeta, challengeOrder }); } function deleteStepFromMeta({ stepNum }: { stepNum: number }): void { const existingMeta = getMetaData(); const oldOrder = [...existingMeta.challengeOrder]; oldOrder.splice(stepNum - 1, 1); // rename all the files in challengeOrder const challengeOrder = oldOrder.map(({ id }, index) => ({ id, title: `Step ${index + 1}` })); updateMetaData({ ...existingMeta, challengeOrder }); } function deleteChallengeFromMeta(challengeIndex: number): void { const existingMeta = getMetaData(); const challengeOrder = [...existingMeta.challengeOrder]; challengeOrder.splice(challengeIndex, 1); updateMetaData({ ...existingMeta, challengeOrder }); }\n\nfunction updateTaskMeta() {\n  const existingMeta = getMetaData();\n  const oldOrder = [...existingMeta.challengeOrder];\n\nlet currentTaskNumber = 1;\n\nconst challengeOrder = oldOrder.map(challenge => {\n    if (isTaskChallenge(challenge.title)) {\n      return {\n        id: challenge.id,\n        title: `Task ${currentTaskNumber++}`\n      };\n    } else {\n      return challenge;\n    }\n  });\n\nupdateMetaData({ ...existingMeta, challengeOrder });\n}\n\nconst updateStepTitles = (): void => {\n  const meta = getMetaData();\n\nconst fileNames: string[] = [];\n  fs.readdirSync(getProjectPath()).forEach(fileName => {\n    if (path.extname(fileName).toLowerCase() === '.md') {\n      fileNames.push(fileName);\n    }\n  });\n\nfileNames.forEach(fileName => {\n    const filePath = `${getProjectPath()}${fileName}`;\n    const frontMatter = matter.read(filePath);\n    const newStepNum =\n      meta.challengeOrder.findIndex(({ id }) => id === frontMatter.data.id) + 1;\n    const title = `Step ${newStepNum}`;\n    const dashedName = `step-${newStepNum}`;\n    const newData = {\n      ...frontMatter.data,\n      title,\n      dashedName\n    };\n    fs.writeFileSync(filePath, matter.stringify(frontMatter.content, newData));\n  });\n};\n\nconst updateTaskMarkdownFiles = (): void => {\n  const meta = getMetaData();\n\nconst fileNames: string[] = [];\n  fs.readdirSync(getProjectPath()).forEach(fileName => {\n    if (path.extname(fileName).toLowerCase() === '.md') {\n      fileNames.push(fileName);\n    }\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7608,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.ts",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "a20479ac5bd5bd0d242fbaa93f09a12e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.ts",
    "source_type": "git_repo",
    "title": "utils",
    "content": "{ fileNames.push(fileName); } }); fileNames.forEach(fileName => { const filePath = `${getProjectPath()}${fileName}`; const frontMatter = matter.read(filePath); const newStepNum = meta.challengeOrder.findIndex(({ id }) => id === frontMatter.data.id) + 1; const title = `Step ${newStepNum}`; const dashedName = `step-${newStepNum}`; const newData = { ...frontMatter.data, title, dashedName }; fs.writeFileSync(filePath, matter.stringify(frontMatter.content, newData)); }); }; const updateTaskMarkdownFiles = (): void => { const meta = getMetaData(); const fileNames: string[] = []; fs.readdirSync(getProjectPath()).forEach(fileName => { if (path.extname(fileName).toLowerCase() === '.md') { fileNames.push(fileName); } });\n\nfileNames.forEach(fileName => {\n    const filePath = `${getProjectPath()}${fileName}`;\n    const frontMatter = matter.read(filePath);\n\nconst challenge = meta.challengeOrder.find(\n      ({ id }) => id === frontMatter.data.id\n    );\n\nif (!challenge || !challenge.title) {\n      throw new Error(\n        `Challenge id from ${fileName} not found in meta.json file.`\n      );\n    }\n\n// only update task challenges, dialogue challenges shouldn't change\n    if (isTaskChallenge(challenge.title)) {\n      const newTaskNumber = getTaskNumberFromTitle(challenge.title);\n\nconst title = `Task ${newTaskNumber}`;\n      const dashedName = `task-${newTaskNumber}`;\n      const newData = {\n        ...frontMatter.data,\n        title,\n        dashedName\n      };\n      fs.writeFileSync(\n        filePath,\n        matter.stringify(frontMatter.content, newData)\n      );\n    }\n  });\n};\n\nconst getChallengeSeeds = (\n  challengeFilePath: string\n): Record<string, ChallengeSeed> => {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access\n  return parseMDSync(challengeFilePath).challengeFiles;\n};\n\nconst validateBlockName = (block: string): boolean | string => {\n  if (!block.trim().length) {\n    return 'please enter a dashed name';\n  }\n  if (/[^a-z0-9-]/.test(block.trim())) {\n    return 'please use alphanumerical characters and kebab case';\n  }\n  return true;\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7608,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.ts",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "4d2439c0ef844e1bd2fcd47dde4a0d54",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.ts",
    "source_type": "git_repo",
    "title": "utils",
    "content": "= `Task ${newTaskNumber}`; const dashedName = `task-${newTaskNumber}`; const newData = { ...frontMatter.data, title, dashedName }; fs.writeFileSync( filePath, matter.stringify(frontMatter.content, newData) ); } }); }; const getChallengeSeeds = ( challengeFilePath: string ): Record<string, ChallengeSeed> => { // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access return parseMDSync(challengeFilePath).challengeFiles; }; const validateBlockName = (block: string): boolean | string => { if (!block.trim().length) { return 'please enter a dashed name'; } if (/[^a-z0-9-]/.test(block.trim())) { return 'please use alphanumerical characters and kebab case'; } return true; };\n\nexport {\n  createStepFile,\n  createDialogueFile,\n  createChallengeFile,\n  updateStepTitles,\n  updateTaskMeta,\n  updateTaskMarkdownFiles,\n  getChallengeSeeds,\n  insertChallengeIntoMeta,\n  insertStepIntoMeta,\n  deleteChallengeFromMeta,\n  deleteStepFromMeta,\n  validateBlockName,\n  createQuizFile\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7608,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.ts",
      "source_type": "git_repo"
    },
    "token_count": 249,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "ab476d9e1f3da0c31f1878932cb6b982",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "import fs from 'fs';\nimport { join } from 'path';\nimport ObjectID from 'bson-objectid';\nimport glob from 'glob';\nimport matter from 'gray-matter';\n\njest.mock('bson-objectid', () => {\n  return jest.fn(() => ({ toString: () => mockChallengeId }));\n});\n\njest.mock('./helpers/get-step-template', () => {\n  return {\n    getStepTemplate: jest.fn(() => 'Mock template...')\n  };\n});\n\nconst mockChallengeId = '60d35cf3fe32df2ce8e31b03';\nimport { getStepTemplate } from './helpers/get-step-template';\nimport {\n  createChallengeFile,\n  createStepFile,\n  insertStepIntoMeta,\n  updateStepTitles,\n  validateBlockName\n} from './utils';\n\nconst basePath = join(\n  process.cwd(),\n  '__fixtures__' + process.env.JEST_WORKER_ID\n);\nconst commonPath = join(basePath, 'curriculum', 'challenges');\n\nconst block = 'utils-project';\nconst metaPath = join(commonPath, '_meta', block);\nconst superBlockPath = join(commonPath, 'english', 'utils-superblock');\nconst projectPath = join(superBlockPath, block);\n\ndescribe('Challenge utils helper scripts', () => {\n  beforeEach(() => {\n    fs.mkdirSync(superBlockPath, { recursive: true });\n    fs.mkdirSync(projectPath, { recursive: true });\n    fs.mkdirSync(metaPath, { recursive: true });\n  });\n  describe('createStepFile util', () => {\n    it('should create next step and return its identifier', () => {\n      fs.writeFileSync(\n        join(projectPath, 'step-001.md'),\n        'Lorem ipsum...',\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(projectPath, 'step-002.md'),\n        'Lorem ipsum...',\n        'utf-8'\n      );\n      process.env.CALLING_DIR = projectPath;\n      const step = createStepFile({\n        stepNum: 3,\n        challengeType: 0\n      });\n\n// eslint-disable-next-line @typescript-eslint/no-base-to-string\n      expect(step.toString()).toEqual(mockChallengeId);\n      expect(ObjectID).toHaveBeenCalledTimes(1);\n\n// Internal tasks\n      // - Should generate a template for the step that is being created\n      expect(getStepTemplate).toHaveBeenCalledTimes(1);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6828,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "f705e6b57c751f735f952d37500fbe7f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "}); fs.mkdirSync(projectPath, { recursive: true }); fs.mkdirSync(metaPath, { recursive: true }); }); describe('createStepFile util', () => { it('should create next step and return its identifier', () => { fs.writeFileSync( join(projectPath, 'step-001.md'), 'Lorem ipsum...', 'utf-8' ); fs.writeFileSync( join(projectPath, 'step-002.md'), 'Lorem ipsum...', 'utf-8' ); process.env.CALLING_DIR = projectPath; const step = createStepFile({ stepNum: 3, challengeType: 0 }); // eslint-disable-next-line @typescript-eslint/no-base-to-string expect(step.toString()).toEqual(mockChallengeId); expect(ObjectID).toHaveBeenCalledTimes(1); // Internal tasks // - Should generate a template for the step that is being created expect(getStepTemplate).toHaveBeenCalledTimes(1);\n\n// - Should write a file with a given name and template\n      const files = glob.sync(`${projectPath}/*.md`);\n\nexpect(files).toEqual([\n        `${projectPath}/${mockChallengeId}.md`,\n        `${projectPath}/step-001.md`,\n        `${projectPath}/step-002.md`\n      ]);\n    });\n  });\n\ndescribe('createProject util', () => {\n    it('should allow alphanumerical names with trailing whitespace', () => {\n      expect(\n        validateBlockName('learn-callbacks-by-creating-a-bookshelf ')\n      ).toBe(true);\n    });\n    it('should allow alphanumerical names with no trailing whitespace', () => {\n      expect(validateBlockName('learn-callbacks-by-creating-a-bookshelf')).toBe(\n        true\n      );\n    });\n    it('should not allow non-kebab case names', () => {\n      expect(validateBlockName('learnCallbacksBetter')).toBe(\n        'please use alphanumerical characters and kebab case'\n      );\n    });\n    it('should not allow white space names', () => {\n      expect(validateBlockName(' ')).toBe('please enter a dashed name');\n    });\n    it('should not allow empty names', () => {\n      expect(validateBlockName('')).toBe('please enter a dashed name');\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6828,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "aed90f3232374c39f7e09cf3ed7b8e20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "with trailing whitespace', () => { expect( validateBlockName('learn-callbacks-by-creating-a-bookshelf ') ).toBe(true); }); it('should allow alphanumerical names with no trailing whitespace', () => { expect(validateBlockName('learn-callbacks-by-creating-a-bookshelf')).toBe( true ); }); it('should not allow non-kebab case names', () => { expect(validateBlockName('learnCallbacksBetter')).toBe( 'please use alphanumerical characters and kebab case' ); }); it('should not allow white space names', () => { expect(validateBlockName(' ')).toBe('please enter a dashed name'); }); it('should not allow empty names', () => { expect(validateBlockName('')).toBe('please enter a dashed name'); }); });\n\ndescribe('createChallengeFile util', () => {\n    it('should create the challenge', () => {\n      fs.writeFileSync(\n        join(projectPath, 'fake-challenge.md'),\n        'Lorem ipsum...',\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(projectPath, 'so-many-fakes.md'),\n        'Lorem ipsum...',\n        'utf-8'\n      );\n\nprocess.env.CALLING_DIR = projectPath;\n\ncreateChallengeFile('hi', 'pretend this is a template');\n      // - Should write a file with a given name and template\n      const files = glob.sync(`${projectPath}/*.md`);\n\nexpect(files).toEqual([\n        `${projectPath}/fake-challenge.md`,\n        `${projectPath}/hi.md`,\n        `${projectPath}/so-many-fakes.md`\n      ]);\n    });\n  });\n\ndescribe('insertStepIntoMeta util', () => {\n    it('should update the meta with a new file id and name', () => {\n      fs.writeFileSync(\n        join(metaPath, 'meta.json'),\n        `{\"id\": \"mock-id\",\n        \"challengeOrder\": [\n          {\n            \"id\": \"id-1\",\n            \"title\": \"Step 1\"\n          },\n          {\n            \"id\": \"id-2\",\n            \"title\": \"Step 2\"\n          },\n          {\n            \"id\": \"id-3\",\n            \"title\": \"Step 3\"\n          }\n        ]}`,\n        'utf-8'\n      );\n      process.env.CALLING_DIR = projectPath;\n\ninsertStepIntoMeta({ stepNum: 3, stepId: new ObjectID(mockChallengeId) });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6828,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "1a8379f9e45e968f773b70a51e9749be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "a given name and template const files = glob.sync(`${projectPath}/*.md`); expect(files).toEqual([ `${projectPath}/fake-challenge.md`, `${projectPath}/hi.md`, `${projectPath}/so-many-fakes.md` ]); }); }); describe('insertStepIntoMeta util', () => { it('should update the meta with a new file id and name', () => { fs.writeFileSync( join(metaPath, 'meta.json'), `{\"id\": \"mock-id\", \"challengeOrder\": [ { \"id\": \"id-1\", \"title\": \"Step 1\" }, { \"id\": \"id-2\", \"title\": \"Step 2\" }, { \"id\": \"id-3\", \"title\": \"Step 3\" } ]}`, 'utf-8' ); process.env.CALLING_DIR = projectPath; insertStepIntoMeta({ stepNum: 3, stepId: new ObjectID(mockChallengeId) });\n\nconst meta = JSON.parse(\n        fs.readFileSync(join(metaPath, 'meta.json'), 'utf-8')\n      );\n      expect(meta).toEqual({\n        id: 'mock-id',\n        challengeOrder: [\n          {\n            id: 'id-1',\n            title: 'Step 1'\n          },\n          {\n            id: 'id-2',\n            title: 'Step 2'\n          },\n          {\n            id: mockChallengeId,\n            title: 'Step 3'\n          },\n          {\n            id: 'id-3',\n            title: 'Step 4'\n          }\n        ]\n      });\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6828,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 327,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "17c51643f8a0beef70c9b6b2fa2e526a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "\"title\": \"Step 1\" }, { \"id\": \"id-2\", \"title\": \"Step 2\" }, { \"id\": \"id-3\", \"title\": \"Step 3\" } ]}`, 'utf-8' ); process.env.CALLING_DIR = projectPath; insertStepIntoMeta({ stepNum: 3, stepId: new ObjectID(mockChallengeId) }); const meta = JSON.parse( fs.readFileSync(join(metaPath, 'meta.json'), 'utf-8') ); expect(meta).toEqual({ id: 'mock-id', challengeOrder: [ { id: 'id-1', title: 'Step 1' }, { id: 'id-2', title: 'Step 2' }, { id: mockChallengeId, title: 'Step 3' }, { id: 'id-3', title: 'Step 4' } ] }); }); });\n\ndescribe('updateStepTitles util', () => {\n    it('should apply meta.challengeOrder to step files', () => {\n      fs.writeFileSync(\n        join(metaPath, 'meta.json'),\n        `{\"id\": \"mock-id\", \"challengeOrder\": [{\"id\": \"id-1\", \"title\": \"Step 1\"}, {\"id\": \"id-3\", \"title\": \"Step 2\"}, {\"id\": \"id-2\", \"title\": \"Step 3\"}]}`,\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(projectPath, 'id-1.md'),\n        `---\nid: id-1\ntitle: Step 2\nchallengeType: a\ndashedName: step-2\n---\n`,\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(projectPath, 'id-2.md'),\n        `---\nid: id-2\ntitle: Step 1\nchallengeType: b\ndashedName: step-1\n---\n`,\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(projectPath, 'id-3.md'),\n        `---\nid: id-3\ntitle: Step 3\nchallengeType: c\ndashedName: step-3\n---\n`,\n        'utf-8'\n      );\n\nprocess.env.CALLING_DIR = projectPath;\n\nupdateStepTitles();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6828,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "c9dc279a5de2d250a13f2ddf150971a2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "'meta.json'), `{\"id\": \"mock-id\", \"challengeOrder\": [{\"id\": \"id-1\", \"title\": \"Step 1\"}, {\"id\": \"id-3\", \"title\": \"Step 2\"}, {\"id\": \"id-2\", \"title\": \"Step 3\"}]}`, 'utf-8' ); fs.writeFileSync( join(projectPath, 'id-1.md'), `--- id: id-1 title: Step 2 challengeType: a dashedName: step-2 --- `, 'utf-8' ); fs.writeFileSync( join(projectPath, 'id-2.md'), `--- id: id-2 title: Step 1 challengeType: b dashedName: step-1 --- `, 'utf-8' ); fs.writeFileSync( join(projectPath, 'id-3.md'), `--- id: id-3 title: Step 3 challengeType: c dashedName: step-3 --- `, 'utf-8' ); process.env.CALLING_DIR = projectPath; updateStepTitles();\n\nexpect(matter.read(join(projectPath, 'id-1.md')).data).toEqual({\n        id: 'id-1',\n        title: 'Step 1',\n        challengeType: 'a',\n        dashedName: 'step-1'\n      });\n      expect(matter.read(join(projectPath, 'id-2.md')).data).toEqual({\n        id: 'id-2',\n        title: 'Step 3',\n        challengeType: 'b',\n        dashedName: 'step-3'\n      });\n      expect(matter.read(join(projectPath, 'id-3.md')).data).toEqual({\n        id: 'id-3',\n        title: 'Step 2',\n        challengeType: 'c',\n        dashedName: 'step-2'\n      });\n    });\n  });\n  afterEach(() => {\n    delete process.env.CALLING_DIR;\n    try {\n      fs.rmSync(basePath, { recursive: true });\n    } catch (err) {\n      console.log(err);\n      console.log('Could not remove fixtures folder.');\n    }\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6828,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "2a44f4a9a72c1d73ff2cfd6bb136b1cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"@freecodecamp/challenge-parser\",\n  \"version\": \"0 0 1\",\n  \"description\": \"The freeCodeCamp org open-source codebase and curriculum\",\n  \"license\": \"BSD-3-Clause\",\n  \"private\": true,\n  \"engines\": {\n    \"node\": \">=16\",\n    \"pnpm\": \">=10\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github com/freeCodeCamp/freeCodeCamp git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github com/freeCodeCamp/freeCodeCamp/issues\"\n  },\n  \"homepage\": \"https://github com/freeCodeCamp/freeCodeCamp#readme\",\n  \"author\": \"freeCodeCamp <team@freecodecamp org>\",\n  \"main\": \"index js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"dependencies\": {\n    \"hast-util-to-html\": \"7 1 3\",\n    \"js-yaml\": \"3 14 1\",\n    \"lodash\": \"4 17 21\",\n    \"mdast-builder\": \"1 1 1\",\n    \"mdast-util-directive\": \"1 0 1\",\n    \"mdast-util-gfm-strikethrough\": \"0 2 3\",\n    \"mdast-util-gfm-table\": \"0 1 6\",\n    \"mdast-util-to-hast\": \"9 1 2\",\n    \"mdast-util-to-markdown\": \"0 6 5\",\n    \"micromark-extension-gfm-strikethrough\": \"0 6 5\",\n    \"micromark-extension-gfm-table\": \"0 4 3\",\n    \"remark\": \"13 0 0\",\n    \"remark-directive\": \"1 0 1\",\n    \"remark-frontmatter\": \"3 0 0\",\n    \"remark-html\": \"13 0 2\",\n    \"remark-parse\": \"9 0 0\",\n    \"remark-stringify\": \"9 0 1\",\n    \"to-vfile\": \"5 0 3\",\n    \"unified\": \"7 1 0\",\n    \"unist-util-find\": \"1 0 2\",\n    \"unist-util-find-after\": \"3 0 0\",\n    \"unist-util-find-all-after\": \"3 0 2\",\n    \"unist-util-find-all-before\": \"3 0",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 1805,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 538,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "8c08ccd37392e20cc8d1b2abd3ced704",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "1\", \"mdast-util-directive\": \"1 0 1\", \"mdast-util-gfm-strikethrough\": \"0 2 3\", \"mdast-util-gfm-table\": \"0 1 6\", \"mdast-util-to-hast\": \"9 1 2\", \"mdast-util-to-markdown\": \"0 6 5\", \"micromark-extension-gfm-strikethrough\": \"0 6 5\", \"micromark-extension-gfm-table\": \"0 4 3\", \"remark\": \"13 0 0\", \"remark-directive\": \"1 0 1\", \"remark-frontmatter\": \"3 0 0\", \"remark-html\": \"13 0 2\", \"remark-parse\": \"9 0 0\", \"remark-stringify\": \"9 0 1\", \"to-vfile\": \"5 0 3\", \"unified\": \"7 1 0\", \"unist-util-find\": \"1 0 2\", \"unist-util-find-after\": \"3 0 0\", \"unist-util-find-all-after\": \"3 0 2\", \"unist-util-find-all-before\": \"3 01\",\n    \"unist-util-find-all-between\": \"2 1 0\",\n    \"unist-util-is\": \"4 1 0\",\n    \"unist-util-modify-children\": \"2 0 0\",\n    \"unist-util-position\": \"3 1 0\",\n    \"unist-util-remove\": \"2 1 0\",\n    \"unist-util-visit\": \"2 0 3\",\n    \"unist-util-visit-children\": \"1 1 4\"\n  },\n  \"devDependencies\": {\n    \"unist-util-select\": \"3 0 4\"\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 1805,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7cee8476f61e50d486f5f74b83e03384",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\daily-challenges\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"daily-challenges\",\n  \"version\": \"1.0.0\",\n  \"main\": \"seed-daily-challenges.js\",\n  \"scripts\": {\n    \"seed-daily-challenges\": \"tsx seed-daily-challenges.ts\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"description\": \"\",\n  \"devDependencies\": {\n    \"dotenv\": \"16.4.5\",\n    \"mongodb\": \"6.10.0\",\n    \"tsx\": \"4.19.1\",\n    \"typescript\": \"5.8.2\"\n  },\n  \"type\": \"module\"\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 374,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\daily-challenges\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 134,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "44f9b010b188be3fa74a0fded6a56b0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\daily-challenges\\README.md",
    "source_type": "git_repo",
    "title": "README",
    "content": "Script to seed the daily challenges. Used to seed challenges for local or production databases.\nTo run:\nCopy the sample.env to .env,\nMake sure dependencies are installed,\nRun the main client with upcoming changes shown - this is so the script can get the challenges from GraphQL,\ncd tools/daily-challenges to go into the daily-challenges folder,\nRun pnpm seed-daily-challenges to seed the challenges from the \"Dev Playground\" superblock to a DailyCodingChallenges collection in the freecodecamp database.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 521,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\daily-challenges\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 105,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "42f4ca0e7d70b62a4e14165a6699a9cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\daily-challenges\\helpers.ts",
    "source_type": "git_repo",
    "title": "helpers",
    "content": "import { MongoClient, ObjectId } from 'mongodb';\nimport { Challenge, QueryResult } from './types';\n\nconst GRAPHQL_ENDPOINT = 'http://localhost:8000/___graphql';\n\n// Query graphQL - note that the main client needs to be running to query the challenges\nexport async function queryGraphQL(query: string) {\n  const response = await fetch(GRAPHQL_ENDPOINT, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  });\n\nconst json = (await response.json()) as QueryResult;\n\nif (!json?.data?.allChallengeNode?.edges?.length) {\n    throw new Error(\n      'Failed to find any challenges with GraphQL query. The client needs to be running'\n    );\n  }\n\nreturn json;\n}\n\nexport async function fetchChallenges(language: 'javascript' | 'python') {\n  const query = `\nquery {\n  allChallengeNode(\n  filter: {challenge: {superBlock: {eq: \"dev-playground\"}, block: {eq: \"daily-coding-challenges-${language}\"}}}\n  sort: {order: ASC, fields: challenge___challengeOrder}\n  ) {\n    edges {\n      node {\n        challenge {\n          id\n          title\n          description\n          fields {\n            tests {\n              testString\n              text\n            }\n          }\n          challengeFiles {\n            contents\n            fileKey\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nconst queryRes = await queryGraphQL(query);\n\nconst challenges = queryRes.data.allChallengeNode.edges.map(\n    ({ node }) => node.challenge\n  );\n\nreturn challenges;\n}\n\nexport function combineChallenges({\n  jsChallenge,\n  pyChallenge,\n  challengeNumber,\n  date\n}: {\n  jsChallenge: Challenge;\n  pyChallenge: Challenge;\n  challengeNumber: number;\n  date: Date;\n}) {\n  const {\n    id: jsId,\n    title: jsTitle,\n    description: jsDescription,\n    fields: { tests: jsTests },\n    challengeFiles: jsChallengeFiles\n  } = jsChallenge;\n\nconst {\n    title: pyTitle,\n    description: pyDescription,\n    fields: { tests: pyTests },\n    challengeFiles: pyChallengeFiles\n  } = pyChallenge;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3773,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\daily-challenges\\helpers.ts",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "71bff3af8c97104ec900d65b5dc8c7dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\daily-challenges\\helpers.ts",
    "source_type": "git_repo",
    "title": "helpers",
    "content": "} } } } `; const queryRes = await queryGraphQL(query); const challenges = queryRes.data.allChallengeNode.edges.map( ({ node }) => node.challenge ); return challenges; } export function combineChallenges({ jsChallenge, pyChallenge, challengeNumber, date }: { jsChallenge: Challenge; pyChallenge: Challenge; challengeNumber: number; date: Date; }) { const { id: jsId, title: jsTitle, description: jsDescription, fields: { tests: jsTests }, challengeFiles: jsChallengeFiles } = jsChallenge; const { title: pyTitle, description: pyDescription, fields: { tests: pyTests }, challengeFiles: pyChallengeFiles } = pyChallenge;\n\nif (jsTitle.replace('JavaScript ', '') !== pyTitle.replace('Python ', '')) {\n    throw new Error(\n      `JavaScript and Python titles do not match for challenge ${challengeNumber}: \"${jsTitle}\" vs \"${pyTitle}\"`\n    );\n  }\n\nif (jsDescription !== pyDescription) {\n    throw new Error(\n      `JavaScript and Python descriptions do not match for challenge ${challengeNumber}`\n    );\n  }\n\nif (jsTests.length !== pyTests.length) {\n    throw new Error(\n      `JavaScript and Python do not have the same number of tests for challenge ${challengeNumber}: ${jsTests.length} JavaScript vs ${pyTests.length} Python tests`\n    );\n  }\n\n// Use the JS challenge info for the new challenge meta - e.g. id, title, description, etc\n  const challengeData = {\n    // **DO NOT CHANGE THE ID** it's used as the challenge ID - and what gets added to completedDailyCodingChallenges[]\n    _id: new ObjectId(`${jsId}`),\n    challengeNumber,\n    title: jsTitle.replace(`JavaScript Challenge ${challengeNumber}: `, ''),\n    date,\n    description: removeSection(jsDescription),\n    javascript: {\n      tests: jsTests,\n      challengeFiles: jsChallengeFiles\n    },\n    python: {\n      tests: pyTests,\n      challengeFiles: pyChallengeFiles\n    }\n  };\n\nreturn challengeData;\n}\n\nexport function handleError(err: Error, client: MongoClient) {\n  if (err) {\n    console.error('Oh noes!! Error seeding Daily Challenges.');\n    console.error(err);\n    try {\n      client.close();\n    } catch {\n      // no-op\n    } finally {\n      process.exit(1);\n    }\n  }\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3773,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\daily-challenges\\helpers.ts",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "3720db7028340d19611b6c06e73105f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\daily-challenges\\helpers.ts",
    "source_type": "git_repo",
    "title": "helpers",
    "content": "it's used as the challenge ID - and what gets added to completedDailyCodingChallenges[] _id: new ObjectId(`${jsId}`), challengeNumber, title: jsTitle.replace(`JavaScript Challenge ${challengeNumber}: `, ''), date, description: removeSection(jsDescription), javascript: { tests: jsTests, challengeFiles: jsChallengeFiles }, python: { tests: pyTests, challengeFiles: pyChallengeFiles } }; return challengeData; } export function handleError(err: Error, client: MongoClient) { if (err) { console.error('Oh noes!! Error seeding Daily Challenges.'); console.error(err); try { client.close(); } catch { // no-op } finally { process.exit(1); } } }\n\n// Remove the <section id=\"description\"> that our parser adds.\nexport function removeSection(str: string) {\n  return str\n    .replace(/^<section id=\"description\">\\n?/, '')\n    .replace(/\\n?<\\/section>$/, '');\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3773,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\daily-challenges\\helpers.ts",
      "source_type": "git_repo"
    },
    "token_count": 199,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9f18032430b9b3fbcc066a9ae1779a6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\daily-challenges\\seed-daily-challenges.ts",
    "source_type": "git_repo",
    "title": "seed-daily-challenges",
    "content": "/*\n  Script to seed daily challenges to freeCodeCamp database, DailyCodingChallenges collection.\n  It gets the daily challenge data from the dev-playground superblock using GraphQL.\n  The main client needs to be running with upcoming changes shown to get the info from GraphQL.\n  Run the curriculum tests on the dev-playground superblock before seeding to make sure they pass.\n*/\n\nimport 'dotenv/config';\nimport { MongoClient } from 'mongodb';\nimport { combineChallenges, fetchChallenges, handleError } from './helpers';\n\nconst { MONGOHQ_URL } = process.env;\n\n// Number challenges in the dev-playground blocks\n// Update this if the number of challenges changes\nconst EXPECTED_CHALLENGE_COUNT = 24;\n\n// Date to set for the first challenge, second challenge will be one day later, etc...\n// **DO NOT CHANGE THIS AFTER RELEASE (if seeding production - okay for local dev)**\nconst year = 2025;\nconst monthIndex = 6; // 0-indexed -> 5 = June\nconst day = 15;\nconst START_DATE = new Date(Date.UTC(year, monthIndex, day));\nconst ONE_DAY_IN_MS = 24 * 60 * 60 * 1000;\n\n// Sanity check to make sure the start date hasn't unintentionally changed\n// **IT SHOULD NOT CHANGE AFTER RELEASE**\nconst startDateString = '2025-07-15T00:00:00.000Z';\nif (START_DATE.toISOString() !== startDateString) {\n  throw new Error(\n    `It appears the start date has changed from \"${startDateString}\".\n    Are you sure you want to change that? If you are seeding production,\n    you should not change the start date after the daily challenges have been release.\n    `\n  );\n}\n\nconst client = new MongoClient(\n  MONGOHQ_URL || 'mongodb://127.0.0.1:27017/freecodecamp?directConnection=true'\n);\n\nconst seed = async () => {\n  await client.db('admin').command({ ping: 1 });\n  console.log('Successfully connected to mongo');\n\nconst db = client.db('freecodecamp');\n  const dailyCodingChallenges = db.collection('DailyCodingChallenges');\n\nconsole.log('Fetching challenges...');\n  const jsChallenges = await fetchChallenges('javascript');\n  const pyChallenges = await fetchChallenges('python');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3908,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\daily-challenges\\seed-daily-challenges.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "d835490f14d2c1781a7a71c5f76dcd9a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\daily-challenges\\seed-daily-challenges.ts",
    "source_type": "git_repo",
    "title": "seed-daily-challenges",
    "content": "\"${startDateString}\". Are you sure you want to change that? If you are seeding production, you should not change the start date after the daily challenges have been release. ` ); } const client = new MongoClient( MONGOHQ_URL || 'mongodb://127.0.0.1:27017/freecodecamp?directConnection=true' ); const seed = async () => { await client.db('admin').command({ ping: 1 }); console.log('Successfully connected to mongo'); const db = client.db('freecodecamp'); const dailyCodingChallenges = db.collection('DailyCodingChallenges'); console.log('Fetching challenges...'); const jsChallenges = await fetchChallenges('javascript'); const pyChallenges = await fetchChallenges('python');\n\nif (jsChallenges.length !== pyChallenges.length) {\n    throw new Error(\n      `Number of challenges do not match: ${jsChallenges.length} JavaScript vs ${pyChallenges.length} Python challenges found`\n    );\n  }\n\nif (jsChallenges.length !== EXPECTED_CHALLENGE_COUNT) {\n    throw new Error(\n      `Expected ${EXPECTED_CHALLENGE_COUNT} challenges, but found ${jsChallenges.length} challenges`\n    );\n  }\n\nconsole.log(`${jsChallenges.length} challenges found for each language`);\n  console.log('Creating new challenges...');\n  const newChallenges = [];\n\nfor (let i = 0; i < jsChallenges.length; i++) {\n    const jsChallenge = jsChallenges[i];\n    const pyChallenge = pyChallenges[i];\n\nconst newChallenge = combineChallenges({\n      jsChallenge,\n      pyChallenge,\n      challengeNumber: i + 1,\n      date: new Date(START_DATE.getTime() + i * ONE_DAY_IN_MS)\n    });\n\nnewChallenges.push(newChallenge);\n  }\n\nconsole.log('Finished creating new challenges');\n  console.log(`Writing ${newChallenges.length} challenges to database...`);\n\n// Replace if the object exists, create new one if it doesn't\n  const bulkOps = newChallenges.map(challenge => ({\n    replaceOne: {\n      filter: { _id: challenge._id },\n      replacement: challenge,\n      upsert: true\n    }\n  }));\n\nawait dailyCodingChallenges.bulkWrite(bulkOps);\n\nconsole.log(`Finished writing challenges to database`);\n\nconst count = await dailyCodingChallenges.countDocuments();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3908,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\daily-challenges\\seed-daily-challenges.ts",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "c3195ce5f376344902daa9bdce8ebf77",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\daily-challenges\\seed-daily-challenges.ts",
    "source_type": "git_repo",
    "title": "seed-daily-challenges",
    "content": "const pyChallenge = pyChallenges[i]; const newChallenge = combineChallenges({ jsChallenge, pyChallenge, challengeNumber: i + 1, date: new Date(START_DATE.getTime() + i * ONE_DAY_IN_MS) }); newChallenges.push(newChallenge); } console.log('Finished creating new challenges'); console.log(`Writing ${newChallenges.length} challenges to database...`); // Replace if the object exists, create new one if it doesn't const bulkOps = newChallenges.map(challenge => ({ replaceOne: { filter: { _id: challenge._id }, replacement: challenge, upsert: true } })); await dailyCodingChallenges.bulkWrite(bulkOps); console.log(`Finished writing challenges to database`); const count = await dailyCodingChallenges.countDocuments();\n\nif (count !== EXPECTED_CHALLENGE_COUNT) {\n    console.warn(\n      '\\n********** WARNING *********\\n' +\n        '*\\n' +\n        `* Expected ${EXPECTED_CHALLENGE_COUNT} challenges in the database,\\n` +\n        `* but found ${count} documents\\n` +\n        '*\\n' +\n        '********** WARNING *********\\n'\n    );\n  }\n};\n\nseed()\n  .then(() => client.close())\n  .catch(err => handleError(err, client));",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3908,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\daily-challenges\\seed-daily-challenges.ts",
      "source_type": "git_repo"
    },
    "token_count": 268,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "4d3057ab9dd23d9edaf9704836ee7330",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\daily-challenges\\types.ts",
    "source_type": "git_repo",
    "title": "types",
    "content": "export type QueryResult = {\n  data: {\n    allChallengeNode: {\n      edges: {\n        node: {\n          challenge: Challenge;\n        };\n      }[];\n    };\n  };\n};\n\nexport type Challenge = {\n  id: string;\n  title: string;\n  date: Date;\n  description: string;\n  fields: {\n    tests: {\n      testString: string;\n      text: string;\n    }[];\n  };\n  challengeFiles: {\n    contents: string;\n    filekey: string;\n  }[];\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 415,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\daily-challenges\\types.ts",
      "source_type": "git_repo"
    },
    "token_count": 108,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "10dee04e883d183d56cc67b7a258bb9f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\redirect-gen.ts",
    "source_type": "git_repo",
    "title": "redirect-gen",
    "content": "import fs from 'fs';\nimport path from 'path';\n\n/* This can be used to create NGINX maps for redirects. After running this\n   script with `npx tsx redirect-gen`, the map should appear in the current\n   directory.\n*/\n\nfunction createRedirectMap(): void {\n  const basePath = '../../../curriculum/challenges/english/18-project-euler';\n  const directories = fs.readdirSync(path.resolve(__dirname, basePath));\n\nlet mapObject = '';\n\nfor (let i = 0; i < directories.length; i++) {\n    const files = fs.readdirSync(\n      path.resolve(__dirname, `${basePath}/${directories[i]}`)\n    );\n\nfor (let j = 0; j < files.length; j++) {\n      const fileName = path.parse(files[j]).name;\n      mapObject += `~^/learn/coding-interview-prep/project-euler/${fileName}/?$ /learn/project-euler/${directories[i]}/${fileName}; \\n`;\n    }\n  }\n\nfs.writeFile('redirectMap.map', mapObject, 'utf8', function (err) {\n    if (err) {\n      console.log('An error occurred while writing MAP redirect file', err);\n      return console.log(err);\n    }\n\nconsole.log('Map file has been saved.');\n  });\n}\n\ncreateRedirectMap();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1100,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\redirect-gen.ts",
      "source_type": "git_repo"
    },
    "token_count": 266,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "96a18a5de635642693eda0aee4879faf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-curriculum.ts",
    "source_type": "git_repo",
    "title": "build-curriculum",
    "content": "import fs from 'fs';\nimport path from 'path';\n\nimport { getChallengesForLang } from '../../../curriculum/get-challenges';\nimport {\n  buildExtCurriculumDataV1,\n  type Curriculum as CurriculumV1,\n  type CurriculumProps as CurriculumPropsV1\n} from './build-external-curricula-data-v1';\nimport {\n  buildExtCurriculumDataV2,\n  type Curriculum as CurriculumV2,\n  type CurriculumProps as CurriculumPropsV2\n} from './build-external-curricula-data-v2';\n\nconst globalConfigPath = path.resolve(__dirname, '../../../shared/config');\n\n// We are defaulting to English because the ids for the challenges are same\n// across all languages.\nvoid getChallengesForLang('english')\n  .then((result: Record<string, unknown>) => {\n    buildExtCurriculumDataV1(result as CurriculumV1<CurriculumPropsV1>);\n    buildExtCurriculumDataV2(result as CurriculumV2<CurriculumPropsV2>);\n    return result;\n  })\n  .then(JSON.stringify)\n  .then(json => {\n    fs.writeFileSync(`${globalConfigPath}/curriculum.json`, json);\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 992,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-curriculum.ts",
      "source_type": "git_repo"
    },
    "token_count": 241,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "343caadd9c50382167c9f55b8b6616bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.test.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v1.test",
    "content": "import path from 'path';\nimport fs, { readFileSync } from 'fs';\n\nimport readdirp from 'readdirp';\n\nimport {\n  SuperBlocks,\n  SuperBlockStage,\n  superBlockStages\n} from '../../../shared/config/curriculum';\nimport {\n  superblockSchemaValidator,\n  availableSuperBlocksValidator\n} from './external-data-schema-v1';\nimport {\n  type Curriculum,\n  type CurriculumIntros,\n  type GeneratedCurriculumProps,\n  orderedSuperBlockInfo\n} from './build-external-curricula-data-v1';\n\nconst VERSION = 'v1';\nconst intros = JSON.parse(\n  readFileSync(\n    path.resolve(__dirname, '../../../client/i18n/locales/english/intro.json'),\n    'utf-8'\n  )\n) as CurriculumIntros;\n\ndescribe('external curriculum data build', () => {\n  const clientStaticPath = path.resolve(__dirname, '../../../client/static');\n\nconst validateSuperBlock = superblockSchemaValidator();\n\ntest(\"the external curriculum data should be in the client's static directory\", () => {\n    expect(\n      fs.existsSync(`${clientStaticPath}/curriculum-data/${VERSION}`)\n    ).toBe(true);\n\nexpect(\n      fs.readdirSync(`${clientStaticPath}/curriculum-data/${VERSION}`).length\n    ).toBeGreaterThan(0);\n  });\n\ntest('there should be an endpoint to request submit types from', () => {\n    fs.existsSync(\n      `${clientStaticPath}/curriculum-data/${VERSION}/submit-types.json`\n    );\n  });\n\ntest('the available-superblocks file should have the correct structure', async () => {\n    const validateAvailableSuperBlocks = availableSuperBlocksValidator();\n    const availableSuperblocks: unknown = JSON.parse(\n      await fs.promises.readFile(\n        `${clientStaticPath}/curriculum-data/${VERSION}/available-superblocks.json`,\n        'utf-8'\n      )\n    );\n\nconst result = validateAvailableSuperBlocks(availableSuperblocks);\n\nif (result.error) {\n      throw Error(\n        `file: available-superblocks.json\n${result.error.message}`\n      );\n    }\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5628,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "252889da44605a285ef66e1d26a92be9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.test.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v1.test",
    "content": "should be in the client's static directory\", () => { expect( fs.existsSync(`${clientStaticPath}/curriculum-data/${VERSION}`) ).toBe(true); expect( fs.readdirSync(`${clientStaticPath}/curriculum-data/${VERSION}`).length ).toBeGreaterThan(0); }); test('there should be an endpoint to request submit types from', () => { fs.existsSync( `${clientStaticPath}/curriculum-data/${VERSION}/submit-types.json` ); }); test('the available-superblocks file should have the correct structure', async () => { const validateAvailableSuperBlocks = availableSuperBlocksValidator(); const availableSuperblocks: unknown = JSON.parse( await fs.promises.readFile( `${clientStaticPath}/curriculum-data/${VERSION}/available-superblocks.json`, 'utf-8' ) ); const result = validateAvailableSuperBlocks(availableSuperblocks); if (result.error) { throw Error( `file: available-superblocks.json ${result.error.message}` ); } });\n\ntest('the super block files generated should have the correct schema', async () => {\n    const fileArray = (\n      await readdirp.promise(`${clientStaticPath}/curriculum-data/${VERSION}`, {\n        directoryFilter: ['!challenges'],\n        fileFilter: entry => {\n          // path without extension:\n          const filePath = entry.path.replace(/\\.json$/, '');\n          // The directory contains super block files and other curriculum-related files.\n          // We're only interested in super block ones.\n          const superBlocks = Object.values(SuperBlocks);\n          return superBlocks.includes(filePath);\n        }\n      })\n    ).map(file => file.path);\n\nexpect(fileArray.length).toBeGreaterThan(0);\n\nfileArray.forEach(fileInArray => {\n      const fileContent = fs.readFileSync(\n        `${clientStaticPath}/curriculum-data/${VERSION}/${fileInArray}`,\n        'utf-8'\n      );\n\nconst result = validateSuperBlock(JSON.parse(fileContent));\n\nif (result.error) {\n        throw Error(`file: ${fileInArray}\n${result.error.message}`);\n      }\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5628,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "744cdf93a59389847353e700b1acacad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.test.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v1.test",
    "content": "fileArray = ( await readdirp.promise(`${clientStaticPath}/curriculum-data/${VERSION}`, { directoryFilter: ['!challenges'], fileFilter: entry => { // path without extension: const filePath = entry.path.replace(/\\.json$/, ''); // The directory contains super block files and other curriculum-related files. // We're only interested in super block ones. const superBlocks = Object.values(SuperBlocks); return superBlocks.includes(filePath); } }) ).map(file => file.path); expect(fileArray.length).toBeGreaterThan(0); fileArray.forEach(fileInArray => { const fileContent = fs.readFileSync( `${clientStaticPath}/curriculum-data/${VERSION}/${fileInArray}`, 'utf-8' ); const result = validateSuperBlock(JSON.parse(fileContent)); if (result.error) { throw Error(`file: ${fileInArray} ${result.error.message}`); } }); });\n\ntest('super blocks and blocks should have the correct data', async () => {\n    const superBlockFiles = (\n      await readdirp.promise(`${clientStaticPath}/curriculum-data/${VERSION}`, {\n        directoryFilter: ['!challenges'],\n        fileFilter: entry => {\n          // path without extension:\n          const filePath = entry.path.replace(/\\.json$/, '');\n          // The directory contains super block files and other curriculum-related files.\n          // We're only interested in super block ones.\n          const superBlocks = Object.values(SuperBlocks);\n          return superBlocks.includes(filePath);\n        }\n      })\n    ).map(file => file.path);\n\nexpect(superBlockFiles.length).toBeGreaterThan(0);\n\nsuperBlockFiles.forEach(file => {\n      const fileContentJson = fs.readFileSync(\n        `${clientStaticPath}/curriculum-data/${VERSION}/${file}`,\n        'utf-8'\n      );\n\nconst fileContent = JSON.parse(\n        fileContentJson\n      ) as Curriculum<GeneratedCurriculumProps>;\n\nconst superBlock = Object.keys(fileContent)[0] as SuperBlocks;\n\n// Randomly pick a block to check its data.\n      const blocks = Object.keys(fileContent[superBlock].blocks);\n      const randomBlockIndex = Math.floor(Math.random() * blocks.length);\n      const randomBlock = blocks[randomBlockIndex];\n\nexpect(fileContent[superBlock].intro).toEqual(intros[superBlock].intro);\n      expect(fileContent[superBlock].blocks[randomBlock].desc).toEqual(\n        intros[superBlock].blocks[randomBlock].intro\n      );\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5628,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "fb77a451f1059836754098f999c8d402",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.test.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v1.test",
    "content": "other curriculum-related files. // We're only interested in super block ones. const superBlocks = Object.values(SuperBlocks); return superBlocks.includes(filePath); } }) ).map(file => file.path); expect(superBlockFiles.length).toBeGreaterThan(0); superBlockFiles.forEach(file => { const fileContentJson = fs.readFileSync( `${clientStaticPath}/curriculum-data/${VERSION}/${file}`, 'utf-8' ); const fileContent = JSON.parse( fileContentJson ) as Curriculum<GeneratedCurriculumProps>; const superBlock = Object.keys(fileContent)[0] as SuperBlocks; // Randomly pick a block to check its data. const blocks = Object.keys(fileContent[superBlock].blocks); const randomBlockIndex = Math.floor(Math.random() * blocks.length); const randomBlock = blocks[randomBlockIndex]; expect(fileContent[superBlock].intro).toEqual(intros[superBlock].intro); expect(fileContent[superBlock].blocks[randomBlock].desc).toEqual( intros[superBlock].blocks[randomBlock].intro ); }); });\n\ntest('All public SuperBlocks should be present in the SuperBlock object', () => {\n    const dashedNames = orderedSuperBlockInfo.map(\n      ({ dashedName }) => dashedName\n    );\n\nconst publicSuperBlockNames = Object.entries(superBlockStages)\n      .filter(([key]) => {\n        const stage = Number(key) as SuperBlockStage;\n        return (\n          stage !== SuperBlockStage.Next &&\n          stage !== SuperBlockStage.Upcoming &&\n          stage !== SuperBlockStage.Catalog\n        );\n      })\n      .flatMap(([, superBlocks]) => superBlocks);\n\nexpect(dashedNames).toEqual(expect.arrayContaining(publicSuperBlockNames));\n    expect(Object.keys(orderedSuperBlockInfo)).toHaveLength(\n      publicSuperBlockNames.length\n    );\n  });\n\ntest('challenge files should be created and in the correct directory', () => {\n    expect(\n      fs.existsSync(`${clientStaticPath}/curriculum-data/${VERSION}/challenges`)\n    ).toBe(true);\n\nexpect(\n      fs.readdirSync(\n        `${clientStaticPath}/curriculum-data/${VERSION}/challenges`\n      ).length\n    ).toBeGreaterThan(0);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5628,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "b7392b6734404090e7ae996a6f517e44",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\sync-i18n.ts",
    "source_type": "git_repo",
    "title": "sync-i18n",
    "content": "import { exec } from 'child_process';\nimport { readFile, readdir, stat, writeFile } from 'fs/promises';\nimport { join, sep } from 'path';\nimport { promisify } from 'util';\n\nconst asyncExec = promisify(exec);\n\nconst loadDirectory = async (path: string): Promise<string[]> => {\n  const files: string[] = [];\n  const status = await stat(path);\n  if (status.isDirectory()) {\n    const filesInDir = await readdir(path);\n    for (const file of filesInDir) {\n      files.push(...(await loadDirectory(join(path, file))));\n    }\n  } else {\n    files.push(path);\n  }\n  return files.filter(f => !f.includes('DS_Store'));\n}; const syncChallenges = async () => {\n  const block = process env FCC_BLOCK;\n  const ignore = [' markdownlint yaml', '_meta', 'english'];\n  const basePath = join(process cwd(), 'curriculum', 'challenges');\n  const allLangs = await readdir(basePath);\n  const filtered = allLangs filter(lang => ignore includes(lang));\n  // these will be paths\n  const english = await loadDirectory(join(basePath, 'english'));\n  for (const path of english) {\n    await Promise all(\n      filtered map(async lang => {\n        if (block && path includes(block)) {\n          return;\n        }\n        const targetPath = path replace('english', lang);\n        // we swallow the error here to detect if the file doesn't exist\n        const status = await stat(targetPath) catch(() => null);\n        if ( status) {\n          const targetDir = targetPath split(sep);\n          targetDir pop();\n          console log(`Syncing ${path split('/english/')[1]}`);\n          await asyncExec(\n            `mkdir -p ${targetDir join(sep)} && cp ${path} ${targetPath}`\n          );\n        }\n        const englishContent = await readFile(path, 'utf-8');\n        if (path endsWith('LICENSE txt')) {\n          await writeFile(targetPath, englishContent, 'utf-8');\n          return;\n        }\n        const langContent = await readFile(targetPath, 'utf-8');\n        const engLines = englishContent split('\\n');\n        const engId = engLines find(l => l startsWith('id'));\n        const engSlug = engLines find(l => l",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3904,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\sync-i18n.ts",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "5730b1716f26caed9712eea18320bf35",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\sync-i18n.ts",
    "source_type": "git_repo",
    "title": "sync-i18n",
    "content": "= await stat(targetPath) catch(() => null); if ( status) { const targetDir = targetPath split(sep); targetDir pop(); console log(`Syncing ${path split('/english/')[1]}`); await asyncExec( `mkdir -p ${targetDir join(sep)} && cp ${path} ${targetPath}` ); } const englishContent = await readFile(path, 'utf-8'); if (path endsWith('LICENSE txt')) { await writeFile(targetPath, englishContent, 'utf-8'); return; } const langContent = await readFile(targetPath, 'utf-8'); const engLines = englishContent split('\\n'); const engId = engLines find(l => l startsWith('id')); const engSlug = engLines find(l => lstartsWith('dashedName'));\n        const langLines = langContent split('\\n');\n        const langId = langLines find(l => l startsWith('id'));\n        const langSlug = langLines find(\n          l => l startsWith('dashedName') || l startsWith('certification:')\n        );\n        if ( langSlug) {\n          throw new Error(\n            `Missing dashedName for ${targetPath} Please add it so that it matches the English version `\n          );\n        }\n        if ( langId) {\n          throw new Error(\n            `Missing id for ${targetPath} Please add it so that it matches the English version `\n          );\n        }\n        if (engId && engId == langId) {\n          langLines splice(langLines indexOf(langId), 1, engId);\n          console log(`Updating ID for ${targetPath}`);\n          await writeFile(targetPath, langLines join('\\n'), 'utf-8');\n        }\n        if (engSlug && engSlug == langSlug) {\n          langLines splice(langLines indexOf(langSlug), 1, engSlug);\n          console log(`Updating dashed name for ${targetPath}`);\n          await writeFile(targetPath, langLines join('\\n'), 'utf-8');\n        }\n      })\n    );\n  }\n  for (const lang of filtered) {\n    const langPath = join(process cwd(), 'curriculum', 'challenges', lang);\n    const langFiles = await loadDirectory(langPath);\n    for (const path of langFiles) {\n      if (block && path includes(block)) {\n        continue;\n      }\n      const engPath = path",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3904,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\sync-i18n.ts",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5ff937abe74c81898ebecacca330b7e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\sync-i18n.ts",
    "source_type": "git_repo",
    "title": "sync-i18n",
    "content": "engId); console log(`Updating ID for ${targetPath}`); await writeFile(targetPath, langLines join('\\n'), 'utf-8'); } if (engSlug && engSlug == langSlug) { langLines splice(langLines indexOf(langSlug), 1, engSlug); console log(`Updating dashed name for ${targetPath}`); await writeFile(targetPath, langLines join('\\n'), 'utf-8'); } }) ); } for (const lang of filtered) { const langPath = join(process cwd(), 'curriculum', 'challenges', lang); const langFiles = await loadDirectory(langPath); for (const path of langFiles) { if (block && path includes(block)) { continue; } const engPath = pathreplace(lang, 'english');\n      // we don't want an error, only need to know that the file exists\n      const existsEnglish = await stat(engPath) catch(() => null);\n      if ( existsEnglish) {\n        console log(`Unlinking ${path split(`/${lang}/`)[1]}`);\n        await asyncExec(`rm ${path}`);\n      }\n    }\n  }\n};\n\nvoid (async () => {\n  await syncChallenges();\n})();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3904,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\sync-i18n.ts",
      "source_type": "git_repo"
    },
    "token_count": 247,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "f271d79a74c5a8295fb411f5a8445d65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v1",
    "content": "import { mkdirSync, writeFileSync, readFileSync } from 'fs';\nimport { resolve, dirname } from 'path';\nimport { submitTypes } from '../../../shared/config/challenge-types';\nimport { type ChallengeNode } from '../../../client/src/redux/prop-types';\nimport { SuperBlocks } from '../../../shared/config/curriculum';\n\nexport type CurriculumIntros = {\n  [keyValue in SuperBlocks]: {\n    title: string;\n    intro: string[];\n    blocks: Record<string, { title: string; intro: string[] }>;\n  };\n};\n\nexport type Curriculum<T> = {\n  [keyValue in SuperBlocks]: T extends CurriculumProps\n    ? CurriculumProps\n    : GeneratedCurriculumProps;\n};\n\nexport interface CurriculumProps {\n  intro: string[];\n  blocks: Record<string, Block<ChallengeNode['challenge'][]>>;\n}\n\nexport interface GeneratedCurriculumProps {\n  intro: string[];\n  blocks: Record<string, Block<Record<string, unknown>>>;\n}\n\ninterface Block<T> {\n  desc: string[];\n  intro: string[];\n  challenges: T;\n  meta: Record<string, unknown>;\n}\n\nconst ver = 'v1';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5016,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.ts",
      "source_type": "git_repo"
    },
    "token_count": 234,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "8eccc73ded02c28b59ba937e22447e39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v1",
    "content": "type CurriculumIntros = { [keyValue in SuperBlocks]: { title: string; intro: string[]; blocks: Record<string, { title: string; intro: string[] }>; }; }; export type Curriculum<T> = { [keyValue in SuperBlocks]: T extends CurriculumProps ? CurriculumProps : GeneratedCurriculumProps; }; export interface CurriculumProps { intro: string[]; blocks: Record<string, Block<ChallengeNode['challenge'][]>>; } export interface GeneratedCurriculumProps { intro: string[]; blocks: Record<string, Block<Record<string, unknown>>>; } interface Block<T> { desc: string[]; intro: string[]; challenges: T; meta: Record<string, unknown>; } const ver = 'v1';\n\nexport const orderedSuperBlockInfo = [\n  { dashedName: SuperBlocks.RespWebDesignNew, public: true },\n  { dashedName: SuperBlocks.DataAnalysisPy, public: true },\n  { dashedName: SuperBlocks.MachineLearningPy, public: true },\n  { dashedName: SuperBlocks.CollegeAlgebraPy, public: true },\n  { dashedName: SuperBlocks.A2English, public: true },\n  { dashedName: SuperBlocks.B1English, public: true },\n  { dashedName: SuperBlocks.TheOdinProject, public: true },\n  { dashedName: SuperBlocks.RespWebDesign, public: true },\n  { dashedName: SuperBlocks.PythonForEverybody, public: true },\n  { dashedName: SuperBlocks.FullStackDeveloper, public: false },\n  { dashedName: SuperBlocks.JsAlgoDataStructNew, public: false },\n  { dashedName: SuperBlocks.FrontEndDevLibs, public: false },\n  { dashedName: SuperBlocks.DataVis, public: false },\n  { dashedName: SuperBlocks.RelationalDb, public: false },\n  { dashedName: SuperBlocks.BackEndDevApis, public: false },\n  { dashedName: SuperBlocks.QualityAssurance, public: false },\n  { dashedName: SuperBlocks.SciCompPy, public: false },\n  { dashedName: SuperBlocks.InfoSec, public: false },\n  { dashedName: SuperBlocks.FoundationalCSharp, public: false },\n  { dashedName: SuperBlocks.CodingInterviewPrep, public: false },\n  { dashedName: SuperBlocks.ProjectEuler, public: false },\n  { dashedName: SuperBlocks.RosettaCode, public: false },\n  { dashedName: SuperBlocks.JsAlgoDataStruct, public: false }\n];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5016,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.ts",
      "source_type": "git_repo"
    },
    "token_count": 532,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "0568c86a444cca72e3a704220c50b19c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v1",
    "content": "public: false }, { dashedName: SuperBlocks.FrontEndDevLibs, public: false }, { dashedName: SuperBlocks.DataVis, public: false }, { dashedName: SuperBlocks.RelationalDb, public: false }, { dashedName: SuperBlocks.BackEndDevApis, public: false }, { dashedName: SuperBlocks.QualityAssurance, public: false }, { dashedName: SuperBlocks.SciCompPy, public: false }, { dashedName: SuperBlocks.InfoSec, public: false }, { dashedName: SuperBlocks.FoundationalCSharp, public: false }, { dashedName: SuperBlocks.CodingInterviewPrep, public: false }, { dashedName: SuperBlocks.ProjectEuler, public: false }, { dashedName: SuperBlocks.RosettaCode, public: false }, { dashedName: SuperBlocks.JsAlgoDataStruct, public: false } ];\n\nconst dashedNames = orderedSuperBlockInfo.map(({ dashedName }) => dashedName);\n\nexport function buildExtCurriculumDataV1(\n  curriculum: Curriculum<CurriculumProps>\n): void {\n  const staticFolderPath = resolve(__dirname, '../../../client/static');\n  const dataPath = `${staticFolderPath}/curriculum-data/`;\n  const blockIntroPath = resolve(\n    __dirname,\n    '../../../client/i18n/locales/english/intro.json'\n  );\n  const intros = JSON.parse(\n    readFileSync(blockIntroPath, 'utf-8')\n  ) as CurriculumIntros;\n\nmkdirSync(dataPath, { recursive: true });\n\nparseCurriculumData();\n  getSubmitTypes();\n\nfunction parseCurriculumData() {\n    const superBlockKeys = Object.values(SuperBlocks).filter(x =>\n      dashedNames.includes(x)\n    );\n\nwriteToFile('available-superblocks', {\n      superblocks: orderedSuperBlockInfo.map(x => ({\n        ...x,\n        title: intros[x.dashedName].title\n      }))\n    });\n\nfor (const superBlockKey of superBlockKeys) {\n      const superBlock = <Curriculum<GeneratedCurriculumProps>>{};\n      const blockNames = Object.keys(curriculum[superBlockKey].blocks);\n\nif (blockNames.length === 0) continue;\n\nsuperBlock[superBlockKey] = <GeneratedCurriculumProps>{};\n      superBlock[superBlockKey].intro = intros[superBlockKey]['intro'];\n      superBlock[superBlockKey].blocks = {};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5016,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.ts",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "ab1e00e56783ee2bb0cc8ed3a35732b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v1",
    "content": "const dataPath = `${staticFolderPath}/curriculum-data/`; const blockIntroPath = resolve( __dirname, '../../../client/i18n/locales/english/intro.json' ); const intros = JSON.parse( readFileSync(blockIntroPath, 'utf-8') ) as CurriculumIntros; mkdirSync(dataPath, { recursive: true }); parseCurriculumData(); getSubmitTypes(); function parseCurriculumData() { const superBlockKeys = Object.values(SuperBlocks).filter(x => dashedNames.includes(x) ); writeToFile('available-superblocks', { superblocks: orderedSuperBlockInfo.map(x => ({ ...x, title: intros[x.dashedName].title })) }); for (const superBlockKey of superBlockKeys) { const superBlock = <Curriculum<GeneratedCurriculumProps>>{}; const blockNames = Object.keys(curriculum[superBlockKey].blocks); if (blockNames.length === 0) continue; superBlock[superBlockKey] = <GeneratedCurriculumProps>{}; superBlock[superBlockKey].intro = intros[superBlockKey]['intro']; superBlock[superBlockKey].blocks = {};\n\nfor (const blockName of blockNames) {\n        superBlock[superBlockKey]['blocks'][blockName] = <\n          Block<Record<string, unknown>>\n        >{};\n\nsuperBlock[superBlockKey]['blocks'][blockName]['desc'] =\n          intros[superBlockKey]['blocks'][blockName]['intro'];\n\nsuperBlock[superBlockKey]['blocks'][blockName]['challenges'] =\n          curriculum[superBlockKey]['blocks'][blockName]['meta'];\n\nconst blockChallenges =\n          curriculum[superBlockKey]['blocks'][blockName]['challenges'];\n\nfor (const challenge of blockChallenges) {\n          const challengeId = challenge.id;\n          const challengePath = `challenges/${superBlockKey}/${blockName}/${challengeId}`;\n\nwriteToFile(challengePath, challenge);\n        }\n      }\n\nwriteToFile(superBlockKey, superBlock);\n    }\n  }\n\nfunction writeToFile(fileName: string, data: Record<string, unknown>): void {\n    const filePath = `${dataPath}/${ver}/${fileName}.json`;\n    mkdirSync(dirname(filePath), { recursive: true });\n    writeFileSync(filePath, JSON.stringify(data, null, 2));\n  }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5016,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.ts",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "81fd10e9a15c241ab0b46f3cbca5a9e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v1",
    "content": "continue; superBlock[superBlockKey] = <GeneratedCurriculumProps>{}; superBlock[superBlockKey].intro = intros[superBlockKey]['intro']; superBlock[superBlockKey].blocks = {}; for (const blockName of blockNames) { superBlock[superBlockKey]['blocks'][blockName] = < Block<Record<string, unknown>> >{}; superBlock[superBlockKey]['blocks'][blockName]['desc'] = intros[superBlockKey]['blocks'][blockName]['intro']; superBlock[superBlockKey]['blocks'][blockName]['challenges'] = curriculum[superBlockKey]['blocks'][blockName]['meta']; const blockChallenges = curriculum[superBlockKey]['blocks'][blockName]['challenges']; for (const challenge of blockChallenges) { const challengeId = challenge.id; const challengePath = `challenges/${superBlockKey}/${blockName}/${challengeId}`; writeToFile(challengePath, challenge); } } writeToFile(superBlockKey, superBlock); } } function writeToFile(fileName: string, data: Record<string, unknown>): void { const filePath = `${dataPath}/${ver}/${fileName}.json`; mkdirSync(dirname(filePath), { recursive: true }); writeFileSync(filePath, JSON.stringify(data, null, 2)); }\n\nfunction getSubmitTypes() {\n    writeFileSync(\n      `${dataPath}/submit-types.json`,\n      JSON.stringify(submitTypes, null, 2)\n    );\n  }\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5016,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v1.ts",
      "source_type": "git_repo"
    },
    "token_count": 301,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "793a2af9b6f1054150babf7c52819b5b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.test.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2.test",
    "content": "import path from 'path';\nimport fs, { readFileSync } from 'fs';\n\nimport readdirp from 'readdirp';\n\nimport {\n  chapterBasedSuperBlocks,\n  SuperBlocks,\n  SuperBlockStage,\n  superBlockStages\n} from '../../../shared/config/curriculum';\nimport {\n  superblockSchemaValidator,\n  availableSuperBlocksValidator\n} from './external-data-schema-v2';\nimport {\n  type CurriculumIntros,\n  type Curriculum,\n  type GeneratedCurriculumProps,\n  type GeneratedBlockBasedCurriculumProps,\n  type GeneratedChapterBasedCurriculumProps,\n  type ChapterBasedCurriculumIntros,\n  orderedSuperBlockInfo,\n  OrderedSuperBlocks\n} from './build-external-curricula-data-v2';\n\nconst VERSION = 'v2';\nconst intros = JSON.parse(\n  readFileSync(\n    path.resolve(__dirname, '../../../client/i18n/locales/english/intro.json'),\n    'utf-8'\n  )\n) as CurriculumIntros;\n\ndescribe('external curriculum data build', () => {\n  const clientStaticPath = path.resolve(__dirname, '../../../client/static');\n\nconst validateSuperBlock = superblockSchemaValidator();\n\ntest(\"the external curriculum data should be in the client's static directory\", () => {\n    expect(\n      fs.existsSync(`${clientStaticPath}/curriculum-data/${VERSION}`)\n    ).toBe(true);\n\nexpect(\n      fs.readdirSync(`${clientStaticPath}/curriculum-data/${VERSION}`).length\n    ).toBeGreaterThan(0);\n  });\n\ntest('there should be an endpoint to request submit types from', () => {\n    expect(\n      fs.existsSync(\n        `${clientStaticPath}/curriculum-data/${VERSION}/submit-types.json`\n      )\n    ).toBe(true);\n  });\n\ntest('the available-superblocks file should have the correct structure', async () => {\n    const filteredSuperBlockStages: string[] = Object.keys(SuperBlockStage)\n      .filter(key => isNaN(Number(key))) // Filter out numeric keys to get only the names\n      .filter(\n        name => name !== 'Upcoming' && name !== 'Next' && name !== 'Catalog'\n      ) // Filter out 'Upcoming', 'Next', and 'Catalog'\n      .map(name => name.toLowerCase());",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10514,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "19485ecc9ddc83749d3d6a0f5bfee93e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.test.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2.test",
    "content": ").toBeGreaterThan(0); }); test('there should be an endpoint to request submit types from', () => { expect( fs.existsSync( `${clientStaticPath}/curriculum-data/${VERSION}/submit-types.json` ) ).toBe(true); }); test('the available-superblocks file should have the correct structure', async () => { const filteredSuperBlockStages: string[] = Object.keys(SuperBlockStage) .filter(key => isNaN(Number(key))) // Filter out numeric keys to get only the names .filter( name => name !== 'Upcoming' && name !== 'Next' && name !== 'Catalog' ) // Filter out 'Upcoming', 'Next', and 'Catalog' .map(name => name.toLowerCase());\n\nconst validateAvailableSuperBlocks = availableSuperBlocksValidator();\n    const availableSuperblocks = JSON.parse(\n      await fs.promises.readFile(\n        `${clientStaticPath}/curriculum-data/${VERSION}/available-superblocks.json`,\n        'utf-8'\n      )\n    ) as { superblocks: OrderedSuperBlocks };\n\nconst result = validateAvailableSuperBlocks(availableSuperblocks);\n\nexpect(Object.keys(availableSuperblocks.superblocks)).toHaveLength(\n      filteredSuperBlockStages.length\n    );\n\nexpect(Object.keys(availableSuperblocks.superblocks)).toEqual(\n      expect.arrayContaining(filteredSuperBlockStages)\n    );\n\nif (result.error) {\n      throw Error(\n        `file: available-superblocks.json\n${result.error.message}`\n      );\n    }\n  });\n\ntest('the super block files generated should have the correct schema', async () => {\n    const superBlocks = Object.values(SuperBlocks);\n\nconst fileArray = (\n      await readdirp.promise(`${clientStaticPath}/curriculum-data/${VERSION}`, {\n        directoryFilter: ['!challenges'],\n        fileFilter: entry => {\n          // The directory contains super block files and other curriculum-related files.\n          // We're only interested in super block ones.\n          const isSuperBlock = superBlocks.some(superBlock =>\n            entry.basename.includes(superBlock)\n          );\n\nreturn isSuperBlock;\n        }\n      })\n    ).map(file => file.path);\n\nexpect(fileArray.length).toBeGreaterThan(0);\n\nfileArray.forEach(fileInArray => {\n      const fileContent = fs.readFileSync(\n        `${clientStaticPath}/curriculum-data/${VERSION}/${fileInArray}`,\n        'utf-8'\n      );\n\nconst result = validateSuperBlock(JSON.parse(fileContent));",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10514,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "791de9351d468c328490b4b50199d5ab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.test.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2.test",
    "content": "files generated should have the correct schema', async () => { const superBlocks = Object.values(SuperBlocks); const fileArray = ( await readdirp.promise(`${clientStaticPath}/curriculum-data/${VERSION}`, { directoryFilter: ['!challenges'], fileFilter: entry => { // The directory contains super block files and other curriculum-related files. // We're only interested in super block ones. const isSuperBlock = superBlocks.some(superBlock => entry.basename.includes(superBlock) ); return isSuperBlock; } }) ).map(file => file.path); expect(fileArray.length).toBeGreaterThan(0); fileArray.forEach(fileInArray => { const fileContent = fs.readFileSync( `${clientStaticPath}/curriculum-data/${VERSION}/${fileInArray}`, 'utf-8' ); const result = validateSuperBlock(JSON.parse(fileContent));\n\nif (result.error) {\n        throw Error(`file: ${fileInArray}\n${result.error.message}`);\n      }\n    });\n  });\n\ntest('block-based super blocks and blocks should have the correct data', async () => {\n    const superBlocks = Object.values(SuperBlocks);\n\nconst superBlockFiles = (\n      await readdirp.promise(`${clientStaticPath}/curriculum-data/${VERSION}`, {\n        directoryFilter: ['!challenges'],\n        fileFilter: entry => {\n          // The directory contains super block files and other curriculum-related files.\n          // We're only interested in super block ones.\n          const isSuperBlock = superBlocks.some(superBlock =>\n            entry.basename.includes(superBlock)\n          );\n\nconst isChapterBasedSuperBlock = chapterBasedSuperBlocks.some(\n            chapterBasedSuperBlock =>\n              entry.basename.includes(chapterBasedSuperBlock)\n          );\n\nreturn isSuperBlock && !isChapterBasedSuperBlock;\n        }\n      })\n    ).map(file => file.path);\n\nexpect(superBlockFiles.length).toBeGreaterThan(0);\n\nsuperBlockFiles.forEach(file => {\n      const fileContentJson = fs.readFileSync(\n        `${clientStaticPath}/curriculum-data/${VERSION}/${file}`,\n        'utf-8'\n      );\n\nconst fileContent = JSON.parse(\n        fileContentJson\n      ) as Curriculum<GeneratedCurriculumProps>;\n\nconst superBlock = Object.keys(fileContent)[0] as SuperBlocks;\n      const superBlockData = fileContent[\n        superBlock\n      ] as GeneratedBlockBasedCurriculumProps;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10514,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "fcc42f4c79d13713334bc74e9495cc72",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.test.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2.test",
    "content": "// The directory contains super block files and other curriculum-related files. // We're only interested in super block ones. const isSuperBlock = superBlocks.some(superBlock => entry.basename.includes(superBlock) ); const isChapterBasedSuperBlock = chapterBasedSuperBlocks.some( chapterBasedSuperBlock => entry.basename.includes(chapterBasedSuperBlock) ); return isSuperBlock && !isChapterBasedSuperBlock; } }) ).map(file => file.path); expect(superBlockFiles.length).toBeGreaterThan(0); superBlockFiles.forEach(file => { const fileContentJson = fs.readFileSync( `${clientStaticPath}/curriculum-data/${VERSION}/${file}`, 'utf-8' ); const fileContent = JSON.parse( fileContentJson ) as Curriculum<GeneratedCurriculumProps>; const superBlock = Object.keys(fileContent)[0] as SuperBlocks; const superBlockData = fileContent[ superBlock ] as GeneratedBlockBasedCurriculumProps;\n\n// Temporary skip these checks to keep CI stable.\n      // TODO: uncomment these once https://github.com/freeCodeCamp/freeCodeCamp/issues/60660 is completed.\n\n// Randomly pick a block to check its data.\n      // const blocks = superBlockData.blocks;\n      // const randomBlockIndex = Math.floor(Math.random() * blocks.length);\n      // const randomBlock = blocks[randomBlockIndex];\n\nexpect(superBlockData.intro).toEqual(intros[superBlock].intro);\n      // expect(superBlockData.blocks[randomBlockIndex].intro).toEqual(\n      //   intros[superBlock].blocks[randomBlock.meta.dashedName as string].intro\n      // );\n      // expect(superBlockData.blocks[randomBlockIndex].meta.name).toEqual(\n      //   intros[superBlock].blocks[randomBlock.meta.dashedName as string].title\n      // );\n    });\n  });\n\ntest('chapter-based super blocks and blocks should have the correct data', async () => {\n    const superBlocks = Object.values(SuperBlocks);\n\nconst superBlockFiles = (\n      await readdirp.promise(`${clientStaticPath}/curriculum-data/${VERSION}`, {\n        directoryFilter: ['!challenges'],\n        fileFilter: entry => {\n          // The directory contains super block files and other curriculum-related files.\n          // We're only interested in super block ones.\n          const isSuperBlock = superBlocks.some(superBlock =>\n            entry.basename.includes(superBlock)\n          );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10514,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "532fe4d5a9040a9fb9fe5c890a7cf73e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.test.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2.test",
    "content": "expect(superBlockData.intro).toEqual(intros[superBlock].intro); // expect(superBlockData.blocks[randomBlockIndex].intro).toEqual( // intros[superBlock].blocks[randomBlock.meta.dashedName as string].intro // ); // expect(superBlockData.blocks[randomBlockIndex].meta.name).toEqual( // intros[superBlock].blocks[randomBlock.meta.dashedName as string].title // ); }); }); test('chapter-based super blocks and blocks should have the correct data', async () => { const superBlocks = Object.values(SuperBlocks); const superBlockFiles = ( await readdirp.promise(`${clientStaticPath}/curriculum-data/${VERSION}`, { directoryFilter: ['!challenges'], fileFilter: entry => { // The directory contains super block files and other curriculum-related files. // We're only interested in super block ones. const isSuperBlock = superBlocks.some(superBlock => entry.basename.includes(superBlock) );\n\nconst isChapterBasedSuperBlock = chapterBasedSuperBlocks.some(\n            chapterBasedSuperBlock =>\n              entry.basename.includes(chapterBasedSuperBlock)\n          );\n\nreturn isSuperBlock && isChapterBasedSuperBlock;\n        }\n      })\n    ).map(file => file.path);\n\nexpect(superBlockFiles.length).toBeGreaterThan(0);\n\nsuperBlockFiles.forEach(file => {\n      const fileContentJson = fs.readFileSync(\n        `${clientStaticPath}/curriculum-data/${VERSION}/${file}`,\n        'utf-8'\n      );\n\nconst fileContent = JSON.parse(\n        fileContentJson\n      ) as Curriculum<GeneratedCurriculumProps>;\n\nconst superBlock = Object.keys(fileContent)[0] as SuperBlocks;\n      const superBlockData = fileContent[\n        superBlock\n      ] as GeneratedChapterBasedCurriculumProps;\n\nconst superBlockIntros = intros[\n        superBlock\n      ] as ChapterBasedCurriculumIntros[SuperBlocks];\n\n// Check super block data\n      expect(superBlockData.intro).toEqual(superBlockIntros.intro);\n\n// Loop through all chapters\n      superBlockData.chapters\n        .filter(({ comingSoon }) => !comingSoon)\n        .forEach(chapter => {\n          expect(chapter.name).toEqual(\n            superBlockIntros.chapters[chapter.dashedName]\n          );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10514,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "3db6d0215c920340bd8230a7f90b821f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.test.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2.test",
    "content": "=> entry.basename.includes(chapterBasedSuperBlock) ); return isSuperBlock && isChapterBasedSuperBlock; } }) ).map(file => file.path); expect(superBlockFiles.length).toBeGreaterThan(0); superBlockFiles.forEach(file => { const fileContentJson = fs.readFileSync( `${clientStaticPath}/curriculum-data/${VERSION}/${file}`, 'utf-8' ); const fileContent = JSON.parse( fileContentJson ) as Curriculum<GeneratedCurriculumProps>; const superBlock = Object.keys(fileContent)[0] as SuperBlocks; const superBlockData = fileContent[ superBlock ] as GeneratedChapterBasedCurriculumProps; const superBlockIntros = intros[ superBlock ] as ChapterBasedCurriculumIntros[SuperBlocks]; // Check super block data expect(superBlockData.intro).toEqual(superBlockIntros.intro); // Loop through all chapters superBlockData.chapters .filter(({ comingSoon }) => !comingSoon) .forEach(chapter => { expect(chapter.name).toEqual( superBlockIntros.chapters[chapter.dashedName] );\n\n// Loop through all modules in the chapter\n          chapter.modules\n            .filter(({ comingSoon }) => !comingSoon)\n            .forEach(module => {\n              expect(module.name).toEqual(\n                superBlockIntros.modules[module.dashedName]\n              );\n            });\n        });\n\n// Temporary skip these checks to keep CI stable.\n      // TODO: uncomment these once https://github.com/freeCodeCamp/freeCodeCamp/issues/60660 is completed.\n\n// Check block data\n      // expect(\n      //   superBlockData.chapters[randomChapterIndex].modules[randomModuleIndex]\n      //     .blocks[randomBlockIndex].intro\n      // ).toEqual(\n      //   superBlockIntros.blocks[randomBlock.meta.dashedName as string].intro\n      // );\n      // expect(\n      //   superBlockData.chapters[randomChapterIndex].modules[randomModuleIndex]\n      //     .blocks[randomBlockIndex].meta.name\n      // ).toEqual(\n      //   superBlockIntros.blocks[randomBlock.meta.dashedName as string].title\n      // );\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10514,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "a1e919b31063bb3adc090e128623082a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.test.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2.test",
    "content": "expect(chapter.name).toEqual( superBlockIntros.chapters[chapter.dashedName] ); // Loop through all modules in the chapter chapter.modules .filter(({ comingSoon }) => !comingSoon) .forEach(module => { expect(module.name).toEqual( superBlockIntros.modules[module.dashedName] ); }); }); // Temporary skip these checks to keep CI stable. // TODO: uncomment these once https://github.com/freeCodeCamp/freeCodeCamp/issues/60660 is completed. // Check block data // expect( // superBlockData.chapters[randomChapterIndex].modules[randomModuleIndex] // .blocks[randomBlockIndex].intro // ).toEqual( // superBlockIntros.blocks[randomBlock.meta.dashedName as string].intro // ); // expect( // superBlockData.chapters[randomChapterIndex].modules[randomModuleIndex] // .blocks[randomBlockIndex].meta.name // ).toEqual( // superBlockIntros.blocks[randomBlock.meta.dashedName as string].title // ); }); });\n\ntest('All public SuperBlocks should be present in the SuperBlock object', () => {\n    // Create a mapping from string to shared/config SuperBlockStage enum value\n    // so we can look up the enum value by string.\n    const superBlockStageStringMap: Record<string, SuperBlockStage> = {\n      core: SuperBlockStage.Core,\n      english: SuperBlockStage.English,\n      professional: SuperBlockStage.Professional,\n      extra: SuperBlockStage.Extra,\n      legacy: SuperBlockStage.Legacy,\n      upcoming: SuperBlockStage.Upcoming,\n      next: SuperBlockStage.Next\n    };\n\nconst stages = Object.keys(orderedSuperBlockInfo);\n\nexpect(stages).not.toContain('next');\n    expect(stages).not.toContain('upcoming');\n\nfor (const stage of stages) {\n      const superBlockDashedNames = orderedSuperBlockInfo[stage].map(\n        superBlock => superBlock.dashedName\n      );\n\nconst stageValueInNum = superBlockStageStringMap[stage];\n\nexpect(superBlockDashedNames).toEqual(\n        expect.arrayContaining(superBlockStages[stageValueInNum])\n      );\n      expect(superBlockDashedNames).toHaveLength(\n        superBlockStages[stageValueInNum].length\n      );\n    }\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10514,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "a6bd35871cb2a73344a85ba186b6fad3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.test.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2.test",
    "content": "{ // Create a mapping from string to shared/config SuperBlockStage enum value // so we can look up the enum value by string. const superBlockStageStringMap: Record<string, SuperBlockStage> = { core: SuperBlockStage.Core, english: SuperBlockStage.English, professional: SuperBlockStage.Professional, extra: SuperBlockStage.Extra, legacy: SuperBlockStage.Legacy, upcoming: SuperBlockStage.Upcoming, next: SuperBlockStage.Next }; const stages = Object.keys(orderedSuperBlockInfo); expect(stages).not.toContain('next'); expect(stages).not.toContain('upcoming'); for (const stage of stages) { const superBlockDashedNames = orderedSuperBlockInfo[stage].map( superBlock => superBlock.dashedName ); const stageValueInNum = superBlockStageStringMap[stage]; expect(superBlockDashedNames).toEqual( expect.arrayContaining(superBlockStages[stageValueInNum]) ); expect(superBlockDashedNames).toHaveLength( superBlockStages[stageValueInNum].length ); } });\n\ntest('challenge files should be created and in the correct directory', () => {\n    expect(\n      fs.existsSync(`${clientStaticPath}/curriculum-data/${VERSION}/challenges`)\n    ).toBe(true);\n\nexpect(\n      fs.readdirSync(\n        `${clientStaticPath}/curriculum-data/${VERSION}/challenges`\n      ).length\n    ).toBeGreaterThan(0);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10514,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 301,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "606d160911dedf63f476b33ecdabd85d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2",
    "content": "import { mkdirSync, writeFileSync, readFileSync } from 'fs';\nimport { resolve, dirname } from 'path';\nimport { submitTypes } from '../../../shared/config/challenge-types';\nimport { type ChallengeNode } from '../../../client/src/redux/prop-types';\nimport { SuperBlocks } from '../../../shared/config/curriculum';\nimport fullStackSuperBlockStructure from '../../../curriculum/superblock-structure/full-stack.json';\nimport type { Chapter } from '../../../shared/config/chapters';\n\nexport type CurriculumIntros =\n  | BlockBasedCurriculumIntros\n  | ChapterBasedCurriculumIntros;\n\ntype BlockBasedCurriculumIntros = {\n  [keyValue in SuperBlocks]: {\n    title: string;\n    intro: string[];\n    blocks: Record<string, { title: string; intro: string[] }>;\n  };\n};\n\nexport type ChapterBasedCurriculumIntros = {\n  [keyValue in SuperBlocks]: {\n    title: string;\n    intro: string[];\n    chapters: Record<string, string>;\n    modules: Record<string, string>;\n    blocks: Record<string, { title: string; intro: string[] }>;\n  };\n};\n\nexport type Curriculum<T> = {\n  [keyValue in SuperBlocks]: T extends CurriculumProps\n    ? CurriculumProps\n    : GeneratedCurriculumProps;\n};\n\nexport interface CurriculumProps {\n  intro: string[];\n  blocks: Record<string, Block<ChallengeNode['challenge'][]>>;\n}\n\ninterface Block<T> {\n  desc: string[];\n  intro: string[];\n  challenges: T;\n  meta: Record<string, unknown>;\n}\n\nexport type GeneratedCurriculumProps =\n  | GeneratedBlockBasedCurriculumProps\n  | GeneratedChapterBasedCurriculumProps;\n\nexport interface GeneratedBlockBasedCurriculumProps {\n  intro: string[];\n  blocks: GeneratedBlock[];\n}\n\nexport interface GeneratedChapterBasedCurriculumProps {\n  intro: string[];\n  chapters: GeneratedChapter[];\n}\n\ninterface GeneratedChapter {\n  dashedName: string;\n  name: string;\n  comingSoon?: boolean;\n  modules: GeneratedModule[];\n  chapterType?: string;\n}\n\ninterface GeneratedModule {\n  dashedName: string;\n  name: string;\n  comingSoon?: boolean;\n  blocks: GeneratedBlock[];\n  moduleType?: string;\n}\n\ninterface GeneratedBlock {\n  dashedName: string;\n  intro: string;\n  meta: Record<string, unknown>;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10372,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "d773edcbfb044980d9f4d8aa1daf27cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2",
    "content": "{ desc: string[]; intro: string[]; challenges: T; meta: Record<string, unknown>; } export type GeneratedCurriculumProps = | GeneratedBlockBasedCurriculumProps | GeneratedChapterBasedCurriculumProps; export interface GeneratedBlockBasedCurriculumProps { intro: string[]; blocks: GeneratedBlock[]; } export interface GeneratedChapterBasedCurriculumProps { intro: string[]; chapters: GeneratedChapter[]; } interface GeneratedChapter { dashedName: string; name: string; comingSoon?: boolean; modules: GeneratedModule[]; chapterType?: string; } interface GeneratedModule { dashedName: string; name: string; comingSoon?: boolean; blocks: GeneratedBlock[]; moduleType?: string; } interface GeneratedBlock { dashedName: string; intro: string; meta: Record<string, unknown>; }\n\n// This enum is based on the `SuperBlockStage` enum in shared/config,\n// but with string value instead of number.\nenum SuperBlockStage {\n  Core = 'core',\n  English = 'english',\n  Professional = 'professional',\n  Extra = 'extra',\n  Legacy = 'legacy'\n}\n\nexport type OrderedSuperBlocks = Record<\n  string,\n  Array<{ dashedName: SuperBlocks; public: boolean; title: string }>\n>;\n\nconst ver = 'v2';\n\nconst staticFolderPath = resolve(__dirname, '../../../client/static');\nconst dataPath = `${staticFolderPath}/curriculum-data/`;\nconst blockIntroPath = resolve(\n  __dirname,\n  '../../../client/i18n/locales/english/intro.json'\n);\nconst intros = JSON.parse(\n  readFileSync(blockIntroPath, 'utf-8')\n) as CurriculumIntros;\n\nexport const orderedSuperBlockInfo: OrderedSuperBlocks = {\n  [SuperBlockStage.Core]: [\n    {\n      dashedName: SuperBlocks.FullStackDeveloper,\n      public: false,\n      title: intros[SuperBlocks.FullStackDeveloper].title\n    }\n  ],\n\n[SuperBlockStage.English]: [\n    {\n      dashedName: SuperBlocks.A2English,\n      public: true,\n      title: intros[SuperBlocks.A2English].title\n    },\n    {\n      dashedName: SuperBlocks.B1English,\n      public: true,\n      title: intros[SuperBlocks.B1English].title\n    }\n  ],",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10372,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "2d99df14af44f2b94de08b203f529919",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2",
    "content": "Record< string, Array<{ dashedName: SuperBlocks; public: boolean; title: string }> >; const ver = 'v2'; const staticFolderPath = resolve(__dirname, '../../../client/static'); const dataPath = `${staticFolderPath}/curriculum-data/`; const blockIntroPath = resolve( __dirname, '../../../client/i18n/locales/english/intro.json' ); const intros = JSON.parse( readFileSync(blockIntroPath, 'utf-8') ) as CurriculumIntros; export const orderedSuperBlockInfo: OrderedSuperBlocks = { [SuperBlockStage.Core]: [ { dashedName: SuperBlocks.FullStackDeveloper, public: false, title: intros[SuperBlocks.FullStackDeveloper].title } ], [SuperBlockStage.English]: [ { dashedName: SuperBlocks.A2English, public: true, title: intros[SuperBlocks.A2English].title }, { dashedName: SuperBlocks.B1English, public: true, title: intros[SuperBlocks.B1English].title } ],\n\n[SuperBlockStage.Extra]: [\n    {\n      dashedName: SuperBlocks.TheOdinProject,\n      public: true,\n      title: intros[SuperBlocks.TheOdinProject].title\n    },\n    {\n      dashedName: SuperBlocks.CodingInterviewPrep,\n      public: false,\n      title: intros[SuperBlocks.CodingInterviewPrep].title\n    },\n    {\n      dashedName: SuperBlocks.ProjectEuler,\n      public: false,\n      title: intros[SuperBlocks.ProjectEuler].title\n    },\n    {\n      dashedName: SuperBlocks.RosettaCode,\n      public: false,\n      title: intros[SuperBlocks.RosettaCode].title\n    }\n  ], [SuperBlockStage Legacy]: [\n    {\n      dashedName: SuperBlocks RespWebDesignNew,\n      public: true,\n      title: intros[SuperBlocks RespWebDesignNew] title\n    },\n    {\n      dashedName: SuperBlocks JsAlgoDataStructNew,\n      public: false,\n      title: intros[SuperBlocks JsAlgoDataStructNew] title\n    },\n    {\n      dashedName: SuperBlocks FrontEndDevLibs,\n      public: false,\n      title: intros[SuperBlocks FrontEndDevLibs] title\n    },\n    {\n      dashedName: SuperBlocks DataVis,\n      public: false,\n      title: intros[SuperBlocks DataVis]",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10372,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "ea946cdcd4c0c913af19df3e60f0a1ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2",
    "content": "SuperBlocks.TheOdinProject, public: true, title: intros[SuperBlocks.TheOdinProject].title }, { dashedName: SuperBlocks.CodingInterviewPrep, public: false, title: intros[SuperBlocks.CodingInterviewPrep].title }, { dashedName: SuperBlocks.ProjectEuler, public: false, title: intros[SuperBlocks.ProjectEuler].title }, { dashedName: SuperBlocks.RosettaCode, public: false, title: intros[SuperBlocks.RosettaCode].title } ], [SuperBlockStage Legacy]: [ { dashedName: SuperBlocks RespWebDesignNew, public: true, title: intros[SuperBlocks RespWebDesignNew] title }, { dashedName: SuperBlocks JsAlgoDataStructNew, public: false, title: intros[SuperBlocks JsAlgoDataStructNew] title }, { dashedName: SuperBlocks FrontEndDevLibs, public: false, title: intros[SuperBlocks FrontEndDevLibs] title }, { dashedName: SuperBlocks DataVis, public: false, title: intros[SuperBlocks DataVis]title\n    },\n    {\n      dashedName: SuperBlocks RelationalDb,\n      public: false,\n      title: intros[SuperBlocks RelationalDb] title\n    },\n    {\n      dashedName: SuperBlocks BackEndDevApis,\n      public: false,\n      title: intros[SuperBlocks BackEndDevApis] title\n    },\n    {\n      dashedName: SuperBlocks QualityAssurance,\n      public: false,\n      title: intros[SuperBlocks QualityAssurance] title\n    },\n    {\n      dashedName: SuperBlocks SciCompPy,\n      public: false,\n      title: intros[SuperBlocks SciCompPy] title\n    },\n    {\n      dashedName: SuperBlocks DataAnalysisPy,\n      public: true,\n      title: intros[SuperBlocks DataAnalysisPy] title\n    },\n    {\n      dashedName: SuperBlocks InfoSec,\n      public: false,\n      title: intros[SuperBlocks InfoSec] title\n    },\n    {\n      dashedName: SuperBlocks MachineLearningPy,\n      public: true,\n      title: intros[SuperBlocks MachineLearningPy] title\n    },\n    {\n      dashedName: SuperBlocks CollegeAlgebraPy,\n      public: true,\n      title: intros[SuperBlocks CollegeAlgebraPy] title\n    },\n    {\n      dashedName: SuperBlocks",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10372,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "adad42a6dcb00c8a40c6630cd3479105",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2",
    "content": "public: false, title: intros[SuperBlocks BackEndDevApis] title }, { dashedName: SuperBlocks QualityAssurance, public: false, title: intros[SuperBlocks QualityAssurance] title }, { dashedName: SuperBlocks SciCompPy, public: false, title: intros[SuperBlocks SciCompPy] title }, { dashedName: SuperBlocks DataAnalysisPy, public: true, title: intros[SuperBlocks DataAnalysisPy] title }, { dashedName: SuperBlocks InfoSec, public: false, title: intros[SuperBlocks InfoSec] title }, { dashedName: SuperBlocks MachineLearningPy, public: true, title: intros[SuperBlocks MachineLearningPy] title }, { dashedName: SuperBlocks CollegeAlgebraPy, public: true, title: intros[SuperBlocks CollegeAlgebraPy] title }, { dashedName: SuperBlocksRespWebDesign,\n      public: true,\n      title: intros[SuperBlocks RespWebDesign] title\n    },\n    {\n      dashedName: SuperBlocks JsAlgoDataStruct,\n      public: false,\n      title: intros[SuperBlocks JsAlgoDataStruct] title\n    },\n    {\n      dashedName: SuperBlocks PythonForEverybody,\n      public: true,\n      title: intros[SuperBlocks PythonForEverybody] title\n    }\n  ],\n\n[SuperBlockStage.Professional]: [\n    {\n      dashedName: SuperBlocks.FoundationalCSharp,\n      public: false,\n      title: intros[SuperBlocks.FoundationalCSharp].title\n    }\n  ]\n};\n\nexport const superBlockDashedNames = Object.keys(orderedSuperBlockInfo).reduce(\n  (acc, superBlockStage) => {\n    const dashedNames = orderedSuperBlockInfo[superBlockStage].map(\n      superBlock => superBlock.dashedName\n    );\n    acc.push(...dashedNames);\n\nreturn acc;\n  },\n  [] as SuperBlocks[]\n);\n\nexport function buildExtCurriculumDataV2(\n  curriculum: Curriculum<CurriculumProps>\n): void {\n  mkdirSync(dataPath, { recursive: true });\n\nparseCurriculumData();\n  getSubmitTypes();\n\nfunction parseCurriculumData() {\n    const superBlockKeys = Object.values(SuperBlocks).filter(x =>\n      superBlockDashedNames.includes(x)\n    );\n\nwriteToFile('available-superblocks', {\n      superblocks: orderedSuperBlockInfo\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10372,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "ceefa2867a64828ca34a31866d6c6588",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2",
    "content": "PythonForEverybody, public: true, title: intros[SuperBlocks PythonForEverybody] title } ], [SuperBlockStage.Professional]: [ { dashedName: SuperBlocks.FoundationalCSharp, public: false, title: intros[SuperBlocks.FoundationalCSharp].title } ] }; export const superBlockDashedNames = Object.keys(orderedSuperBlockInfo).reduce( (acc, superBlockStage) => { const dashedNames = orderedSuperBlockInfo[superBlockStage].map( superBlock => superBlock.dashedName ); acc.push(...dashedNames); return acc; }, [] as SuperBlocks[] ); export function buildExtCurriculumDataV2( curriculum: Curriculum<CurriculumProps> ): void { mkdirSync(dataPath, { recursive: true }); parseCurriculumData(); getSubmitTypes(); function parseCurriculumData() { const superBlockKeys = Object.values(SuperBlocks).filter(x => superBlockDashedNames.includes(x) ); writeToFile('available-superblocks', { superblocks: orderedSuperBlockInfo });\n\nfor (const superBlockKey of superBlockKeys) {\n      if (superBlockKey === SuperBlocks.FullStackDeveloper) {\n        buildChapterBasedCurriculum(superBlockKey);\n      } else {\n        buildBlockBasedCurriculum(superBlockKey);\n      }\n\nbuildChallengeFiles(superBlockKey);\n    }\n  }\n\nfunction buildChapterBasedCurriculum(superBlockKey: SuperBlocks) {\n    const chapters: Chapter[] = fullStackSuperBlockStructure.chapters;\n    const blocksWithData = curriculum[superBlockKey].blocks;\n\nconst superBlockIntros = intros[\n      superBlockKey\n    ] as ChapterBasedCurriculumIntros[SuperBlocks];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10372,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "673e6634a68e137a8a46f201812cd594",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2",
    "content": "}, [] as SuperBlocks[] ); export function buildExtCurriculumDataV2( curriculum: Curriculum<CurriculumProps> ): void { mkdirSync(dataPath, { recursive: true }); parseCurriculumData(); getSubmitTypes(); function parseCurriculumData() { const superBlockKeys = Object.values(SuperBlocks).filter(x => superBlockDashedNames.includes(x) ); writeToFile('available-superblocks', { superblocks: orderedSuperBlockInfo }); for (const superBlockKey of superBlockKeys) { if (superBlockKey === SuperBlocks.FullStackDeveloper) { buildChapterBasedCurriculum(superBlockKey); } else { buildBlockBasedCurriculum(superBlockKey); } buildChallengeFiles(superBlockKey); } } function buildChapterBasedCurriculum(superBlockKey: SuperBlocks) { const chapters: Chapter[] = fullStackSuperBlockStructure.chapters; const blocksWithData = curriculum[superBlockKey].blocks; const superBlockIntros = intros[ superBlockKey ] as ChapterBasedCurriculumIntros[SuperBlocks];\n\n// Skip upcoming chapter/module as the metadata of their blocks\n    // is not included in the `curriculum` object.\n    const allChapters = chapters.map(chapter => ({\n      dashedName: chapter.dashedName,\n      name: superBlockIntros.chapters[chapter.dashedName],\n      comingSoon: chapter.comingSoon,\n      chapterType: chapter.chapterType,\n      modules: chapter.comingSoon\n        ? []\n        : chapter.modules.map(module => ({\n            dashedName: module.dashedName,\n            name: superBlockIntros.modules[module.dashedName],\n            comingSoon: module.comingSoon,\n            moduleType: module.moduleType,\n            blocks: module.comingSoon\n              ? []\n              : module.blocks\n                  // Upcoming blocks aren't included in blocksWithData\n                  // and thus they have no metadata and need to be filtered out.\n                  .filter(block => blocksWithData[block.dashedName])\n                  .map(block => {\n                    const blockData = blocksWithData[block.dashedName];\n                    return {\n                      intro: superBlockIntros.blocks[block.dashedName].intro,\n                      meta: blockData.meta\n                    };\n                  })\n          }))\n    }));\n\nconst superBlock = {\n      [superBlockKey]: {\n        intro: intros[superBlockKey].intro,\n        chapters: allChapters\n      }\n    };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10372,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "64bc980698820181eeb5bfbe7f130411",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2",
    "content": "chapterType: chapter.chapterType, modules: chapter.comingSoon ? [] : chapter.modules.map(module => ({ dashedName: module.dashedName, name: superBlockIntros.modules[module.dashedName], comingSoon: module.comingSoon, moduleType: module.moduleType, blocks: module.comingSoon ? [] : module.blocks // Upcoming blocks aren't included in blocksWithData // and thus they have no metadata and need to be filtered out. .filter(block => blocksWithData[block.dashedName]) .map(block => { const blockData = blocksWithData[block.dashedName]; return { intro: superBlockIntros.blocks[block.dashedName].intro, meta: blockData.meta }; }) })) })); const superBlock = { [superBlockKey]: { intro: intros[superBlockKey].intro, chapters: allChapters } };\n\nwriteToFile(superBlockKey, superBlock);\n  }\n\nfunction buildBlockBasedCurriculum(superBlockKey: SuperBlocks) {\n    const blockNames = Object.keys(curriculum[superBlockKey].blocks);\n    const blocks = blockNames.map(blockName => {\n      const blockData = curriculum[superBlockKey].blocks[blockName];\n\nreturn {\n        intro: intros[superBlockKey].blocks[blockName].intro,\n        meta: blockData.meta\n      };\n    });\n\nconst superBlock = {\n      [superBlockKey]: {\n        intro: intros[superBlockKey].intro,\n        blocks\n      }\n    };\n\nwriteToFile(superBlockKey, superBlock);\n  }\n\nfunction buildChallengeFiles(superBlockKey: SuperBlocks) {\n    const blocks = Object.keys(curriculum[superBlockKey].blocks);\n\nfor (const block of blocks) {\n      const challenges = curriculum[superBlockKey]['blocks'][block].challenges;\n\nfor (const challenge of challenges) {\n        const challengeId = challenge.id;\n        const challengePath = `challenges/${superBlockKey}/${block}/${challengeId}`;\n\nwriteToFile(challengePath, challenge);\n      }\n    }\n  }\n\nfunction writeToFile(fileName: string, data: Record<string, unknown>): void {\n    const filePath = `${dataPath}/${ver}/${fileName}.json`;\n    mkdirSync(dirname(filePath), { recursive: true });\n    writeFileSync(filePath, JSON.stringify(data, null, 2));\n  }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10372,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "d9f35500d5d0763ed5cf9f9ac1d9fac7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
    "source_type": "git_repo",
    "title": "build-external-curricula-data-v2",
    "content": "blockData.meta }; }); const superBlock = { [superBlockKey]: { intro: intros[superBlockKey].intro, blocks } }; writeToFile(superBlockKey, superBlock); } function buildChallengeFiles(superBlockKey: SuperBlocks) { const blocks = Object.keys(curriculum[superBlockKey].blocks); for (const block of blocks) { const challenges = curriculum[superBlockKey]['blocks'][block].challenges; for (const challenge of challenges) { const challengeId = challenge.id; const challengePath = `challenges/${superBlockKey}/${block}/${challengeId}`; writeToFile(challengePath, challenge); } } } function writeToFile(fileName: string, data: Record<string, unknown>): void { const filePath = `${dataPath}/${ver}/${fileName}.json`; mkdirSync(dirname(filePath), { recursive: true }); writeFileSync(filePath, JSON.stringify(data, null, 2)); }\n\nfunction getSubmitTypes() {\n    writeFileSync(\n      `${dataPath}/${ver}/submit-types.json`,\n      JSON.stringify(submitTypes, null, 2)\n    );\n  }\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10372,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\build-external-curricula-data-v2.ts",
      "source_type": "git_repo"
    },
    "token_count": 224,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "6a1e1e16e6846d9eef777f65d6efba8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\external-data-schema-v1.js",
    "source_type": "git_repo",
    "title": "external-data-schema-v1",
    "content": "const Joi = require('joi');\n\nconst blockSchema = Joi.object({}).keys({\n  desc: Joi.array().min(1),\n  challenges: Joi.object({})\n    .keys({\n      name: Joi.string().required(),\n      isUpcomingChange: Joi.bool().required(),\n      usesMultifileEditor: Joi.bool().optional(),\n      hasEditableBoundaries: Joi.bool().optional(),\n      dashedName: Joi.string().required(),\n      helpCategory: Joi.valid(\n        'JavaScript',\n        'HTML-CSS',\n        'Python',\n        'Backend Development',\n        'C-Sharp',\n        'English',\n        'Odin',\n        'Euler',\n        'Rosetta'\n      ).required(),\n      order: Joi.number().when('superBlock', {\n        is: 'full-stack-developer',\n        then: Joi.forbidden(),\n        otherwise: Joi.required()\n      }),\n      template: Joi.string().allow(''),\n      required: Joi.array(),\n      superBlock: Joi.string().required(),\n      blockLayout: Joi.valid(\n        'challenge-list',\n        'challenge-grid',\n        'dialogue-grid',\n        'link',\n        'project-list',\n        'legacy-challenge-list',\n        'legacy-link',\n        'legacy-challenge-grid'\n      ).required(),\n      blockType: Joi.valid(\n        'lecture',\n        'workshop',\n        'lab',\n        'review',\n        'quiz',\n        'exam'\n      ).when('superBlock', {\n        is: 'full-stack-developer',\n        then: Joi.required(),\n        otherwise: Joi.optional()\n      }),\n      challengeOrder: Joi.array()\n        .items(\n          Joi.object({}).keys({\n            id: Joi.string(),\n            title: Joi.string()\n          })\n        )\n        .min(1)\n        .required(),\n      disableLoopProtectTests: Joi.boolean(),\n      disableLoopProtectPreview: Joi.boolean(),\n      superOrder: Joi.number()\n    })\n    .required()\n});\n\nconst subSchema = Joi.object({}).keys({\n  intro: Joi.array(),\n  blocks: Joi.object({}).pattern(Joi.string(), Joi.object().concat(blockSchema))\n});\n\nconst schema = Joi.object({}).pattern(\n  Joi.string(),\n  Joi.object().concat(subSchema)\n);",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2411,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\external-data-schema-v1.js",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "57f4be61d76628055621fdc0f2d163b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\external-data-schema-v1.js",
    "source_type": "git_repo",
    "title": "external-data-schema-v1",
    "content": "Joi.forbidden(), otherwise: Joi.required() }), template: Joi.string().allow(''), required: Joi.array(), superBlock: Joi.string().required(), blockLayout: Joi.valid( 'challenge-list', 'challenge-grid', 'dialogue-grid', 'link', 'project-list', 'legacy-challenge-list', 'legacy-link', 'legacy-challenge-grid' ).required(), blockType: Joi.valid( 'lecture', 'workshop', 'lab', 'review', 'quiz', 'exam' ).when('superBlock', { is: 'full-stack-developer', then: Joi.required(), otherwise: Joi.optional() }), challengeOrder: Joi.array() .items( Joi.object({}).keys({ id: Joi.string(), title: Joi.string() }) ) .min(1) .required(), disableLoopProtectTests: Joi.boolean(), disableLoopProtectPreview: Joi.boolean(), superOrder: Joi.number() }) .required() }); const subSchema = Joi.object({}).keys({ intro: Joi.array(), blocks: Joi.object({}).pattern(Joi.string(), Joi.object().concat(blockSchema)) }); const schema = Joi.object({}).pattern( Joi.string(), Joi.object().concat(subSchema) );\n\nconst availableSuperBlocksSchema = Joi.object({\n  superblocks: Joi.array().items(\n    Joi.object({\n      dashedName: Joi.string().required(),\n      title: Joi.string().required(),\n      public: Joi.bool().required()\n    })\n  )\n});\n\nexports.superblockSchemaValidator = () => superblock =>\n  schema.validate(superblock);\n\nexports.availableSuperBlocksValidator = () => data =>\n  availableSuperBlocksSchema.validate(data);",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2411,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\external-data-schema-v1.js",
      "source_type": "git_repo"
    },
    "token_count": 331,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8afbc3ef1c7ea0434a7428a6e586955a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"@freecodecamp/scripts-build\",\n  \"version\": \"0.0.1\",\n  \"description\": \"The freeCodeCamp.org open-source codebase and curriculum\",\n  \"license\": \"BSD-3-Clause\",\n  \"private\": true,\n  \"engines\": {\n    \"node\": \">=16\",\n    \"pnpm\": \">=10\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/freeCodeCamp/freeCodeCamp.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/freeCodeCamp/freeCodeCamp/issues\"\n  },\n  \"homepage\": \"https://github.com/freeCodeCamp/freeCodeCamp#readme\",\n  \"author\": \"freeCodeCamp <team@freecodecamp.org>\",\n  \"main\": \"none\",\n  \"devDependencies\": {\n    \"@total-typescript/ts-reset\": \"^0.5.0\",\n    \"@types/chai\": \"^4.3.16\",\n    \"chai\": \"4.4.1\",\n    \"joi\": \"17.12.2\",\n    \"readdirp\": \"3.6.0\"\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 748,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 255,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "40b118641023d2b620ff69e064b63608",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\reset.d.ts",
    "source_type": "git_repo",
    "title": "reset.d",
    "content": "import '@total-typescript/ts-reset';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 37,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\reset.d.ts",
      "source_type": "git_repo"
    },
    "token_count": 8,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ae7350c451d59c49746e232e5efdf8bb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\lint\\index.js",
    "source_type": "git_repo",
    "title": "index",
    "content": "const fs = require('fs');\nconst path = require('path');\nconst YAML = require('js-yaml');\nconst argv = require('yargs').argv;\nconst linter = require('./linter');\n\nconst CONFIG_PATH = path.resolve(\n  __dirname,\n  '../../../curriculum/challenges/.markdownlint.yaml'\n);\nconst isMDRE = /.*\\.md$/;\n\nconst lintRules = fs.readFileSync(CONFIG_PATH, 'utf8');\n\nconst lint = linter(YAML.load(lintRules));\n\nconst files = argv._.filter(arg => isMDRE.test(arg));\nfiles.forEach(path => lint({ path: path }));\n\nmodule.exports = lint;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 517,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\lint\\index.js",
      "source_type": "git_repo"
    },
    "token_count": 131,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a1de3bab2d92e32c2f14eaabc3c9f169",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\external-data-schema-v2.js",
    "source_type": "git_repo",
    "title": "external-data-schema-v2",
    "content": "const Joi = require('joi');\nconst {\n  chapterBasedSuperBlocks\n} = require('../../../shared/config/curriculum');\n\nconst slugRE = new RegExp('^[a-z0-9-]+$');\n\nconst blockSchema = Joi.object().keys({\n  intro: Joi.array().min(1),\n  meta: Joi.object({})\n    .keys({\n      name: Joi.string().required(),\n      isUpcomingChange: Joi.bool().required(),\n      usesMultifileEditor: Joi.bool().optional(),\n      hasEditableBoundaries: Joi.bool().optional(),\n      dashedName: Joi.string().required(),\n      helpCategory: Joi.valid(\n        'JavaScript',\n        'HTML-CSS',\n        'Python',\n        'Backend Development',\n        'C-Sharp',\n        'English',\n        'Odin',\n        'Euler',\n        'Rosetta'\n      ).required(),\n      order: Joi.number().when('superBlock', {\n        is: chapterBasedSuperBlocks,\n        then: Joi.forbidden(),\n        otherwise: Joi.required()\n      }),\n      template: Joi.string().allow(''),\n      required: Joi.array(),\n      superBlock: Joi.string().required(),\n      blockLayout: Joi.valid(\n        'challenge-list',\n        'challenge-grid',\n        'dialogue-grid',\n        'link',\n        'project-list',\n        'legacy-challenge-list',\n        'legacy-link',\n        'legacy-challenge-grid'\n      ).required(),\n      blockType: Joi.valid(\n        'lecture',\n        'workshop',\n        'lab',\n        'review',\n        'quiz',\n        'exam'\n      ).when('superBlock', {\n        is: chapterBasedSuperBlocks,\n        then: Joi.required(),\n        otherwise: Joi.optional()\n      }),\n      challengeOrder: Joi.array().items(\n        Joi.object({})\n          .keys({\n            id: Joi.string(),\n            title: Joi.string()\n          })\n          .min(1)\n          .required()\n      ),\n      disableLoopProtectTests: Joi.boolean(),\n      disableLoopProtectPreview: Joi.boolean(),\n      superOrder: Joi.number()\n    })\n    .required()\n});\n\nconst blockBasedCurriculumSchema = Joi.object().pattern(\n  Joi.string(),\n  Joi.object().keys({\n    intro: Joi.array(),\n    blocks: Joi.array().items(blockSchema)\n  })\n);",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3546,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\external-data-schema-v2.js",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "889cef274f2e817662c1f4159d5f295f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\external-data-schema-v2.js",
    "source_type": "git_repo",
    "title": "external-data-schema-v2",
    "content": "Joi.number().when('superBlock', { is: chapterBasedSuperBlocks, then: Joi.forbidden(), otherwise: Joi.required() }), template: Joi.string().allow(''), required: Joi.array(), superBlock: Joi.string().required(), blockLayout: Joi.valid( 'challenge-list', 'challenge-grid', 'dialogue-grid', 'link', 'project-list', 'legacy-challenge-list', 'legacy-link', 'legacy-challenge-grid' ).required(), blockType: Joi.valid( 'lecture', 'workshop', 'lab', 'review', 'quiz', 'exam' ).when('superBlock', { is: chapterBasedSuperBlocks, then: Joi.required(), otherwise: Joi.optional() }), challengeOrder: Joi.array().items( Joi.object({}) .keys({ id: Joi.string(), title: Joi.string() }) .min(1) .required() ), disableLoopProtectTests: Joi.boolean(), disableLoopProtectPreview: Joi.boolean(), superOrder: Joi.number() }) .required() }); const blockBasedCurriculumSchema = Joi.object().pattern( Joi.string(), Joi.object().keys({ intro: Joi.array(), blocks: Joi.array().items(blockSchema) }) );\n\nconst chapterBasedCurriculumSchema = Joi.object().pattern(\n  Joi.string(),\n  Joi.object().keys({\n    intro: Joi.array(),\n    chapters: Joi.array().items(\n      Joi.object().keys({\n        dashedName: Joi.string().regex(slugRE).required(),\n        name: Joi.string().required(),\n        comingSoon: Joi.boolean().optional(),\n        chapterType: Joi.valid('exam').optional(),\n        modules: Joi.array()\n          .items(\n            Joi.object().keys({\n              moduleType: Joi.valid('review', 'exam').optional(),\n              name: Joi.string().required(),\n              comingSoon: Joi.boolean().optional(),\n              dashedName: Joi.string().regex(slugRE).required(),\n              blocks: Joi.array().items(blockSchema)\n            })\n          )\n          .required()\n      })\n    )\n  })\n);\n\nconst availableSuperBlocksSchema = Joi.object({\n  superblocks: Joi.object().pattern(\n    Joi.string(),\n    Joi.array().items(\n      Joi.object({\n        dashedName: Joi.string().required(),\n        title: Joi.string().required(),\n        public: Joi.bool().required()\n      })\n    )\n  )\n});\n\nexports.superblockSchemaValidator = () => superBlock => {\n  const superBlockName = Object.keys(superBlock)[0];",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3546,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\external-data-schema-v2.js",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ca8f53d61723d51303d2069272ca8137",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\build\\external-data-schema-v2.js",
    "source_type": "git_repo",
    "title": "external-data-schema-v2",
    "content": "Joi.array(), blocks: Joi.array().items(blockSchema) }) ); const chapterBasedCurriculumSchema = Joi.object().pattern( Joi.string(), Joi.object().keys({ intro: Joi.array(), chapters: Joi.array().items( Joi.object().keys({ dashedName: Joi.string().regex(slugRE).required(), name: Joi.string().required(), comingSoon: Joi.boolean().optional(), chapterType: Joi.valid('exam').optional(), modules: Joi.array() .items( Joi.object().keys({ moduleType: Joi.valid('review', 'exam').optional(), name: Joi.string().required(), comingSoon: Joi.boolean().optional(), dashedName: Joi.string().regex(slugRE).required(), blocks: Joi.array().items(blockSchema) }) ) .required() }) ) }) ); const availableSuperBlocksSchema = Joi.object({ superblocks: Joi.object().pattern( Joi.string(), Joi.array().items( Joi.object({ dashedName: Joi.string().required(), title: Joi.string().required(), public: Joi.bool().required() }) ) ) }); exports.superblockSchemaValidator = () => superBlock => { const superBlockName = Object.keys(superBlock)[0];\n\nif (chapterBasedSuperBlocks.includes(superBlockName)) {\n    return chapterBasedCurriculumSchema.validate(superBlock);\n  }\n\nreturn blockBasedCurriculumSchema.validate(superBlock);\n};\n\nexports.availableSuperBlocksValidator = () => data =>\n  availableSuperBlocksSchema.validate(data);",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3546,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\build\\external-data-schema-v2.js",
      "source_type": "git_repo"
    },
    "token_count": 292,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "8ce8e7be48b1ce605d3d696749bc02d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\lint\\index.test.js",
    "source_type": "git_repo",
    "title": "index.test",
    "content": "const path = require('path');\n\nconst lint = require('.');\n\ndescribe('markdown linter', () => {\n  let good = { path: path.join(__dirname, './fixtures/good.md') };\n  let badYML = { path: path.join(__dirname, './fixtures/badYML.md') };\n  let badFencing = { path: path.join(__dirname, './fixtures/badFencing.md') };\n  beforeEach(() => {\n    console.log = jest.fn();\n    // the linter signals that a file failed by setting\n    // exitCode to 1, so it needs (re)setting to 0\n    process.exitCode = 0;\n  });\n  afterEach(() => {\n    process.exitCode = 0;\n  });\n\nit('should pass `good` markdown', done => {\n    function callback() {\n      expect(process.exitCode).toBe(0);\n      done();\n    }\n    lint(good, callback);\n  });\n\nit('should fail invalid YML blocks', done => {\n    function callback() {\n      expect(process.exitCode).toBe(1);\n      done();\n    }\n    lint(badYML, callback);\n  });\n\nit('should fail when code fences are not surrounded by newlines', done => {\n    function callback() {\n      expect(process.exitCode).toBe(1);\n      done();\n    }\n    lint(badFencing, callback);\n  });\n\nit('should write to the console describing the problem', done => {\n    function callback() {\n      const expected =\n        'badYML.md: 19: yaml-linter YAML code blocks should be valid [bad indentation of a mapping entry at line 3, column 17:\\n          testString: testString\\n                    ^] [Context: \"```yml\"]';\n      expect(console.log.mock.calls.length).toBe(1);\n      expect(console.log.mock.calls[0][0]).toEqual(\n        expect.stringContaining(expected)\n      );\n      done();\n    }\n    lint(badYML, callback);\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1631,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\lint\\index.test.js",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "df68843ab6989802d750e458edb602e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"@freecodecamp/scripts-seed\",\n  \"version\": \"0.0.1\",\n  \"description\": \"The freeCodeCamp.org open-source codebase and curriculum\",\n  \"license\": \"BSD-3-Clause\",\n  \"private\": true,\n  \"engines\": {\n    \"node\": \">=16\",\n    \"pnpm\": \">=10\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/freeCodeCamp/freeCodeCamp.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/freeCodeCamp/freeCodeCamp/issues\"\n  },\n  \"homepage\": \"https://github.com/freeCodeCamp/freeCodeCamp#readme\",\n  \"author\": \"freeCodeCamp <team@freecodecamp.org>\",\n  \"main\": \"none\",\n  \"devDependencies\": {\n    \"debug\": \"4.3.4\",\n    \"dotenv\": \"16.4.5\",\n    \"mongodb\": \"6.10.0\"\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 676,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9218e4c7c4fa6320299544a48a56aceb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\lint\\validate-keys.ts",
    "source_type": "git_repo",
    "title": "validate-keys",
    "content": "import fs from 'fs';\nimport path from 'path';\nimport introObject from '../../../client/i18n/locales/english/intro.json';\nimport linksObject from '../../../client/i18n/locales/english/links.json';\nimport metaObject from '../../../client/i18n/locales/english/meta-tags.json';\nimport motivationObject from '../../../client/i18n/locales/english/motivation.json';\nimport translationsObject from '../../../client/i18n/locales/english/translations.json';\n// If this trending.json is missing, most likely the download-trending script failed.\nimport trendingObject from '../../../client/i18n/locales/english/trending.json';\n\n/**\n * Function to flatten a nested object. Written specifically for\n * our translation flow, the `namespace` value is used to create the\n * property chains that are used in the i18n replacement scripts.\n */\nconst flattenAnObject = (\n  obj: Record<string, unknown>,\n  namespace = ''\n): Record<string, unknown> => {\n  const flattened: Record<string, unknown> = {};\n  Object.keys(obj).forEach((key: string) => {\n    if (Array.isArray(obj[key])) {\n      flattened[namespace ? `${namespace}.${key}` : key] = obj[key];\n    } else if (typeof obj[key] === 'object') {\n      Object.assign(\n        flattened,\n        flattenAnObject(\n          obj[key] as Record<string, unknown>,\n          namespace ? `${namespace}.${key}` : key\n        )\n      );\n    } else {\n      flattened[namespace ? `${namespace}.${key}` : key] = obj[key];\n    }\n  });\n  return flattened;\n};\n\nconst translationKeys: string[] = Object.keys(\n  flattenAnObject(translationsObject)\n);\nconst metaKeys: string[] = Object.keys(flattenAnObject(metaObject));\nconst motivationKeys: string[] = Object.keys(flattenAnObject(motivationObject));\nconst introKeys: string[] = Object.keys(flattenAnObject(introObject));\nconst trendingKeys: string[] = Object.keys(flattenAnObject(trendingObject));\nconst linksKeys: string[] = Object.keys(flattenAnObject(linksObject));",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3564,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\lint\\validate-keys.ts",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "c5dc7b5d86dcf728bba299c1a491bb17",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\lint\\validate-keys.ts",
    "source_type": "git_repo",
    "title": "validate-keys",
    "content": "flattened[namespace ? `${namespace}.${key}` : key] = obj[key]; } else if (typeof obj[key] === 'object') { Object.assign( flattened, flattenAnObject( obj[key] as Record<string, unknown>, namespace ? `${namespace}.${key}` : key ) ); } else { flattened[namespace ? `${namespace}.${key}` : key] = obj[key]; } }); return flattened; }; const translationKeys: string[] = Object.keys( flattenAnObject(translationsObject) ); const metaKeys: string[] = Object.keys(flattenAnObject(metaObject)); const motivationKeys: string[] = Object.keys(flattenAnObject(motivationObject)); const introKeys: string[] = Object.keys(flattenAnObject(introObject)); const trendingKeys: string[] = Object.keys(flattenAnObject(trendingObject)); const linksKeys: string[] = Object.keys(flattenAnObject(linksObject));\n\n/**\n * Recursively read through the directory, grabbing .js files\n * in each nested subdirectory and concatenating them all in\n * to one string.\n */\nconst readComponentCode = (filePath: string): string => {\n  let code = '';\n  const isItFolder: boolean = fs.lstatSync(filePath).isDirectory();\n  if (isItFolder) {\n    const contents: string[] = fs.readdirSync(filePath);\n    contents.forEach((file: string) => {\n      code += readComponentCode(path.join(filePath + '/' + file));\n    });\n  } else {\n    if (!filePath.endsWith('.js') || filePath.endsWith('.test.js')) {\n      return '';\n    }\n    code += fs.readFileSync(filePath).toString();\n  }\n  return code;\n};\n\nconst clientCodebase: string = readComponentCode(\n  path.join(process.cwd() + '/src')\n);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3564,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\lint\\validate-keys.ts",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "105ec314f179d2255b4724d3955eea55",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\lint\\validate-keys.ts",
    "source_type": "git_repo",
    "title": "validate-keys",
    "content": "nested subdirectory and concatenating them all in * to one string. */ const readComponentCode = (filePath: string): string => { let code = ''; const isItFolder: boolean = fs.lstatSync(filePath).isDirectory(); if (isItFolder) { const contents: string[] = fs.readdirSync(filePath); contents.forEach((file: string) => { code += readComponentCode(path.join(filePath + '/' + file)); }); } else { if (!filePath.endsWith('.js') || filePath.endsWith('.test.js')) { return ''; } code += fs.readFileSync(filePath).toString(); } return code; }; const clientCodebase: string = readComponentCode( path.join(process.cwd() + '/src') );\n\nfor (const key of translationKeys) {\n  if (!clientCodebase.includes(key)) {\n    console.warn(`The translation key '${key}' appears to be unused.`);\n  }\n}\nfor (const key of motivationKeys) {\n  if (!clientCodebase.includes(key)) {\n    console.warn(`The motivation key '${key}' appears to be unused.`);\n  }\n}\nfor (const key of metaKeys) {\n  if (!clientCodebase.includes(key)) {\n    console.warn(`The meta key '${key}' appears to be unused.`);\n  }\n}\nfor (const key of introKeys) {\n  if (!clientCodebase.includes(key)) {\n    console.warn(`The intro key '${key}' appears to be unused.`);\n  }\n}\nfor (const key of trendingKeys) {\n  if (!clientCodebase.includes(key)) {\n    console.warn(`The trending key '${key}' appears to be unused.`);\n  }\n}\nfor (const key of linksKeys) {\n  if (!clientCodebase.includes(key)) {\n    console.warn(`The links key '${key}' appears to be unused.`);\n  }\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3564,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\lint\\validate-keys.ts",
      "source_type": "git_repo"
    },
    "token_count": 366,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "d289761dd02ba5142db72bd25378254e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\seed-ms-username.js",
    "source_type": "git_repo",
    "title": "seed-ms-username",
    "content": "const path = require('path');\nconst debug = require('debug');\nconst { MongoClient, ObjectId } = require('mongodb');\nrequire('dotenv').config({ path: path.resolve(__dirname, '../../../.env') });\n\nconst log = debug('fcc:tools:seedMsUsername');\nconst { MONGOHQ_URL } = process.env;\n\nconst args = process.argv.slice(2);\n\nconst allowedArgs = ['--delete-only'];\n\n// Check for invalid arguments\nargs.forEach(arg => {\n  if (!allowedArgs.includes(arg))\n    throw new Error(\n      `Invalid argument ${arg}. Allowed arguments are ${allowedArgs.join(', ')}`\n    );\n});\n\nfunction handleError(err, client) {\n  if (err) {\n    console.error('Oh noes!! Error seeding MS username.');\n    console.error(err);\n    try {\n      client.close();\n    } catch {\n      // no-op\n    } finally {\n      process.exit(1);\n    }\n  }\n}\n\nconst msAccountId = new ObjectId('65785b25d4c5bd0565c0184d');\n\nconst certifiedUserAccount = {\n  _id: msAccountId,\n  userId: new ObjectId('5fa2db00a25c1c1fa49ce067'),\n  ttl: 77760000000,\n  msUsername: 'certifieduser'\n};\n\nconst client = new MongoClient(MONGOHQ_URL);\n\nconst run = async () => {\n  await client.db('admin').command({ ping: 1 });\n  log('Connected successfully to mongo');\n\nconst db = client.db('freecodecamp');\n  const msUsername = db.collection('MsUsername');\n  if (args.includes('--delete-only')) {\n    await msUsername.deleteOne({\n      _id: { $eq: msAccountId }\n    });\n\nlog('MS username deleted');\n    return;\n  }\n\n// Rewrite if the object exists, create new if it doesn't\n  await msUsername.updateOne(\n    { _id: msAccountId },\n    { $set: certifiedUserAccount },\n    { upsert: true }\n  );\n\nlog('MS username seeded');\n};\n\nrun()\n  .then(() => client.close())\n  .catch(err => handleError(err, client));",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1731,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\seed-ms-username.js",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4ae14d1be58826a2d6f4c11e47bd4269",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\seed-surveys.js",
    "source_type": "git_repo",
    "title": "seed-surveys",
    "content": "const path = require('path');\nconst debug = require('debug');\nconst { MongoClient, ObjectId } = require('mongodb');\n\nconst { userIds } = require('./user-data');\nrequire('dotenv').config({ path: path.resolve(__dirname, '../../../.env') });\n\nconst args = process.argv.slice(2);\n\nconst allowedArgs = ['delete-only'];\n\n// Check for invalid arguments\nargs.forEach(arg => {\n  if (!allowedArgs.includes(arg))\n    throw new Error(\n      `Invalid argument ${arg}. Allowed arguments are ${allowedArgs.join(', ')}`\n    );\n});\n\nconst log = debug('fcc:tools:seedSurveyInfo');\nconst { MONGOHQ_URL } = process.env;\n\nfunction handleError(err, client) {\n  if (err) {\n    console.error('Oh noes!! Error seeding survey info.');\n    console.error(err);\n    try {\n      client.close();\n    } catch {\n      // no-op\n    } finally {\n      process.exit(1);\n    }\n  }\n}\n\nconst surveyIds = [\n  new ObjectId('651c5a2a5f9b639b584028bc'),\n  new ObjectId('651c5a4c5f9b639b584028bd')\n];\n\nconst defaultUserSurvey = {\n  _id: surveyIds[0],\n  title: 'Foundational C# with Microsoft Survey',\n  responses: [\n    {\n      question: 'Please describe your role:',\n      response: 'Beginner developer (less than 2 years experience)'\n    },\n    {\n      question:\n        'Prior to this course, how experienced were you with .NET and C#?',\n      response: 'Novice (no prior experience)'\n    }\n  ],\n  userId: new ObjectId('5bd30e0f1caf6ac3ddddddb5')\n};\n\nconst certifiedUserSurvey = {\n  _id: surveyIds[1],\n  title: 'Foundational C# with Microsoft Survey',\n  responses: [\n    {\n      question: 'Please describe your role:',\n      response: 'Experienced developer (more than 5 years experience)'\n    },\n    {\n      question:\n        'Prior to this course, how experienced were you with .NET and C#?',\n      response: 'Expert'\n    }\n  ],\n  userId: new ObjectId('5fa2db00a25c1c1fa49ce067')\n};\n\nconst client = new MongoClient(MONGOHQ_URL);",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2432,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\seed-surveys.js",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b17e1fa3945ac029d409278483748b22",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\seed-surveys.js",
    "source_type": "git_repo",
    "title": "seed-surveys",
    "content": "course, how experienced were you with .NET and C#?', response: 'Novice (no prior experience)' } ], userId: new ObjectId('5bd30e0f1caf6ac3ddddddb5') }; const certifiedUserSurvey = { _id: surveyIds[1], title: 'Foundational C# with Microsoft Survey', responses: [ { question: 'Please describe your role:', response: 'Experienced developer (more than 5 years experience)' }, { question: 'Prior to this course, how experienced were you with .NET and C#?', response: 'Expert' } ], userId: new ObjectId('5fa2db00a25c1c1fa49ce067') }; const client = new MongoClient(MONGOHQ_URL);\n\nconst run = async () => {\n  await client.db('admin').command({ ping: 1 });\n  log('Connected successfully to mongo');\n\nconst db = client.db('freecodecamp');\n  const survey = db.collection('Survey');\n\nawait survey.deleteMany({ userId: { $in: userIds } });\n  log('Survey info deleted');\n\nif (!args.includes('delete-only')) {\n    await survey.insertOne(defaultUserSurvey);\n    await survey.insertOne(certifiedUserSurvey);\n    log('Survey info seeded');\n  }\n};\n\nrun()\n  .then(() => client.close())\n  .catch(err => handleError(err, client));",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2432,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\seed-surveys.js",
      "source_type": "git_repo"
    },
    "token_count": 287,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "d225b8012c23b8a5b664bd45447b5600",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\seed-demo-user.js",
    "source_type": "git_repo",
    "title": "seed-demo-user",
    "content": "const { parseArgs } = require('node:util');\n\nconst path = require('path');\nconst debug = require('debug');\nconst { MongoClient } = require('mongodb');\n\nrequire('dotenv').config({ path: path.resolve(__dirname, '../../../.env') });\nconst {\n  demoUser,\n  blankUser,\n  publicUser,\n  fullyCertifiedUser,\n  userIds,\n  almostFullyCertifiedUser,\n  unclaimedUser\n} = require('./user-data');\n\nconst options = {\n  'set-true': { type: 'string', multiple: true },\n  'top-contributor': { type: 'boolean' },\n  'set-false': { type: 'string', multiple: true },\n  'seed-trophy-challenges': { type: 'boolean' },\n  'certified-user': { type: 'boolean' },\n  'almost-certified-user': { type: 'boolean' },\n  'unclaimed-user': { type: 'boolean' }\n};\n\nconst { values: argValues } = parseArgs({ options });\n\nconst log = debug('fcc:tools:seedLocalAuthUser');\nconst { MONGOHQ_URL } = process.env;\n\nfunction handleError(err, client) {\n  if (err) {\n    console.error('Oh noes!! Error seeding local auth user.');\n    console.error(err);\n    try {\n      client.close();\n    } catch {\n      // no-op\n    } finally {\n      process.exit(1);\n    }\n  }\n}",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 4013,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\seed-demo-user.js",
      "source_type": "git_repo"
    },
    "token_count": 303,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "bb3299ae3231c31239f69a7af940a63c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\seed-demo-user.js",
    "source_type": "git_repo",
    "title": "seed-demo-user",
    "content": "{ type: 'string', multiple: true }, 'seed-trophy-challenges': { type: 'boolean' }, 'certified-user': { type: 'boolean' }, 'almost-certified-user': { type: 'boolean' }, 'unclaimed-user': { type: 'boolean' } }; const { values: argValues } = parseArgs({ options }); const log = debug('fcc:tools:seedLocalAuthUser'); const { MONGOHQ_URL } = process.env; function handleError(err, client) { if (err) { console.error('Oh noes!! Error seeding local auth user.'); console.error(err); try { client.close(); } catch { // no-op } finally { process.exit(1); } } }\n\nconst trophyChallenges = [\n  {\n    id: '647f85d407d29547b3bee1bb',\n    solution:\n      'https://learn.microsoft.com/api/gamestatus/achievements/learn.wwl.get-started-c-sharp-part-1.trophy?username=moT01&locale=en-us',\n    completedDate: 1695064765244\n  },\n  {\n    id: '647f87dc07d29547b3bee1bf',\n    solution:\n      'https://learn.microsoft.com/api/gamestatus/achievements/learn.wwl.get-started-c-sharp-part-2.trophy?username=moT01&locale=en-us',\n    completedDate: 1695064900926\n  },\n  {\n    id: '647f882207d29547b3bee1c0',\n    solution:\n      'https://learn.microsoft.com/api/gamestatus/achievements/learn.wwl.get-started-c-sharp-part-3.trophy?username=moT01&locale=en-us',\n    completedDate: 1695064949460\n  },\n  {\n    id: '647f867a07d29547b3bee1bc',\n    solution:\n      'https://learn.microsoft.com/api/gamestatus/achievements/learn.wwl.get-started-c-sharp-part-4.trophy?username=moT01&locale=en-us',\n    completedDate: 1695064986634\n  },\n  {\n    id: '647f877f07d29547b3bee1be',\n    solution:\n      'https://learn.microsoft.com/api/gamestatus/achievements/learn.wwl.get-started-c-sharp-part-5.trophy?username=moT01&locale=en-us',\n    completedDate: 1695065026465\n  },\n  {\n    id: '647f86ff07d29547b3bee1bd',\n    solution:\n      'https://learn.microsoft.com/api/gamestatus/achievements/learn.wwl.get-started-c-sharp-part-6.trophy?username=moT01&locale=en-us',\n    completedDate: 1695065060157\n  }\n];",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 4013,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\seed-demo-user.js",
      "source_type": "git_repo"
    },
    "token_count": 615,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "76efbe13e1559c2ee282ee05c65c18c0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\seed-demo-user.js",
    "source_type": "git_repo",
    "title": "seed-demo-user",
    "content": "console.error('Oh noes!! Error seeding local auth user.'); console.error(err); try { client.close(); } catch { // no-op } finally { process.exit(1); } } } const trophyChallenges = [ { id: '647f85d407d29547b3bee1bb', solution: 'https://learn.microsoft.com/api/gamestatus/achievements/learn.wwl.get-started-c-sharp-part-1.trophy?username=moT01&locale=en-us', completedDate: 1695064765244 }, { id: '647f87dc07d29547b3bee1bf', solution: 'https://learn.microsoft.com/api/gamestatus/achievements/learn.wwl.get-started-c-sharp-part-2.trophy?username=moT01&locale=en-us', completedDate: 1695064900926 }, { id: '647f882207d29547b3bee1c0', solution: 'https://learn.microsoft.com/api/gamestatus/achievements/learn.wwl.get-started-c-sharp-part-3.trophy?username=moT01&locale=en-us', completedDate: 1695064949460 }, { id: '647f867a07d29547b3bee1bc', solution: 'https://learn.microsoft.com/api/gamestatus/achievements/learn.wwl.get-started-c-sharp-part-4.trophy?username=moT01&locale=en-us', completedDate: 1695064986634 }, { id: '647f877f07d29547b3bee1be', solution: 'https://learn.microsoft.com/api/gamestatus/achievements/learn.wwl.get-started-c-sharp-part-5.trophy?username=moT01&locale=en-us', completedDate: 1695065026465 }, { id: '647f86ff07d29547b3bee1bd', solution: 'https://learn.microsoft.com/api/gamestatus/achievements/learn.wwl.get-started-c-sharp-part-6.trophy?username=moT01&locale=en-us', completedDate: 1695065060157 } ];\n\n[demoUser, blankUser, fullyCertifiedUser].forEach(user => {\n  if (argValues['top-contributor']) {\n    user.yearsTopContributor = ['2017', '2018', '2019'];\n  }\n  for (const key of argValues['set-false'] || []) {\n    user[key] = false;\n  }\n  for (const key of argValues['set-true'] || []) {\n    user[key] = true;\n  }\n  if (argValues['--seed-trophy-challenges']) {\n    user.completedChallenges = trophyChallenges;\n  }\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 4013,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\seed-demo-user.js",
      "source_type": "git_repo"
    },
    "token_count": 586,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "9085a839d1419fdb504eda3f1ee5e1f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\seed-demo-user.js",
    "source_type": "git_repo",
    "title": "seed-demo-user",
    "content": "solution: 'https://learn.microsoft.com/api/gamestatus/achievements/learn.wwl.get-started-c-sharp-part-3.trophy?username=moT01&locale=en-us', completedDate: 1695064949460 }, { id: '647f867a07d29547b3bee1bc', solution: 'https://learn.microsoft.com/api/gamestatus/achievements/learn.wwl.get-started-c-sharp-part-4.trophy?username=moT01&locale=en-us', completedDate: 1695064986634 }, { id: '647f877f07d29547b3bee1be', solution: 'https://learn.microsoft.com/api/gamestatus/achievements/learn.wwl.get-started-c-sharp-part-5.trophy?username=moT01&locale=en-us', completedDate: 1695065026465 }, { id: '647f86ff07d29547b3bee1bd', solution: 'https://learn.microsoft.com/api/gamestatus/achievements/learn.wwl.get-started-c-sharp-part-6.trophy?username=moT01&locale=en-us', completedDate: 1695065060157 } ]; [demoUser, blankUser, fullyCertifiedUser].forEach(user => { if (argValues['top-contributor']) { user.yearsTopContributor = ['2017', '2018', '2019']; } for (const key of argValues['set-false'] || []) { user[key] = false; } for (const key of argValues['set-true'] || []) { user[key] = true; } if (argValues['--seed-trophy-challenges']) { user.completedChallenges = trophyChallenges; } });\n\nconst client = new MongoClient(MONGOHQ_URL);\n\nconst db = client.db('freecodecamp');\nconst user = db.collection('user');\n\nconst dropUserTokens = async function () {\n  await db.collection('UserToken').deleteMany({\n    userId: {\n      $in: userIds\n    }\n  });\n};\n\nconst dropUsers = async function () {\n  await db.collection('user').deleteMany({\n    _id: {\n      $in: userIds\n    }\n  });\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 4013,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\seed-demo-user.js",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "8aff146ae4ed56b13af82201161e637b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\seed-demo-user.js",
    "source_type": "git_repo",
    "title": "seed-demo-user",
    "content": "(const key of argValues['set-false'] || []) { user[key] = false; } for (const key of argValues['set-true'] || []) { user[key] = true; } if (argValues['--seed-trophy-challenges']) { user.completedChallenges = trophyChallenges; } }); const client = new MongoClient(MONGOHQ_URL); const db = client.db('freecodecamp'); const user = db.collection('user'); const dropUserTokens = async function () { await db.collection('UserToken').deleteMany({ userId: { $in: userIds } }); }; const dropUsers = async function () { await db.collection('user').deleteMany({ _id: { $in: userIds } }); };\n\nconst run = async () => {\n  await client.db('admin').command({ ping: 1 });\n  log('Connected successfully to mongo');\n\nawait dropUserTokens();\n  await dropUsers();\n  if (argValues['certified-user']) {\n    await user.insertOne(fullyCertifiedUser);\n  } else if (argValues['almost-certified-user']) {\n    await user.insertOne(almostFullyCertifiedUser);\n  } else if (argValues['unclaimed-user']) {\n    await user.insertOne(unclaimedUser);\n  } else {\n    await user.insertOne(demoUser);\n  }\n\nawait user.insertOne(blankUser);\n  await user.insertOne(publicUser);\n\nlog('local auth user seed complete');\n};\n\nrun()\n  .then(() => client.close())\n  .catch(err => handleError(err, client));",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 4013,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\seed-demo-user.js",
      "source_type": "git_repo"
    },
    "token_count": 323,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "863db8b0c51afb3401ec9c8086112bb2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\add-nano-ids.js",
    "source_type": "git_repo",
    "title": "add-nano-ids",
    "content": "/*\n * Script that will add `id` fields to the `questions`, `wrong_answers`, and\n * `correct_answers` of an exam file where the `id` doesn't exist.\n */\nimport { readFileSync, writeFileSync } from 'fs';\nimport { customAlphabet } from 'nanoid';\nimport yaml from 'js-yaml';\n\nconst newId = customAlphabet('1234567890abcdefghijklmnopqrstuvwxyz', 10);\n\n// Change this to the path of the file you want to add id's to\nconst examPath = './exams/example-certification-exam.yml';\nconst examFile = readFileSync(examPath, { encoding: 'utf-8' });\nconst examJson = yaml.load(examFile);\n\n// The strangeness of how the id's are added below is to keep the id at the top\n// of each object when rewriting the YAML at the end\nconst newQuestions = [];\nexamJson.questions?.forEach(question => {\n  let newQuestion;\n\nif (!question.id) {\n    newQuestion = { id: newId(), ...question };\n  } else {\n    newQuestion = { ...question };\n  }\n\nlet newWrongAnswers = [];\n  question.wrongAnswers?.forEach(answer => {\n    if (!answer.id) {\n      newWrongAnswers.push({ id: newId(), ...answer });\n    } else {\n      newWrongAnswers.push(answer);\n    }\n  });\n\nlet newCorrectAnswers = [];\n  question.correctAnswers?.forEach(answer => {\n    if (!answer.id) {\n      newCorrectAnswers.push({ id: newId(), ...answer });\n    } else {\n      newCorrectAnswers.push(answer);\n    }\n  });\n\nnewQuestion.wrongAnswers = newWrongAnswers;\n  newQuestion.correctAnswers = newCorrectAnswers;\n  newQuestions.push(newQuestion);\n});\n\nexamJson.questions = newQuestions;\n\nconst yamlStr = yaml.dump(examJson);\nwriteFileSync(examPath, yamlStr, 'utf8');",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1596,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\add-nano-ids.js",
      "source_type": "git_repo"
    },
    "token_count": 393,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f22ef3783d0b48c0444947b008f6501c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\create-exams.js",
    "source_type": "git_repo",
    "title": "create-exams",
    "content": "import { readFileSync } from 'fs';\nimport path, { join } from 'path';\nimport { fileURLToPath } from 'url';\nimport debug from 'debug';\nimport dotenv from 'dotenv';\nimport yaml from 'js-yaml';\nimport { MongoClient, ObjectId } from 'mongodb';\n\nimport { validateExamSchema } from './exam-schema.js';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\nconst log = debug('fcc:tools:seedExams');\n\ndotenv.config({ path: path.resolve(__dirname, '../../../.env') });\nconst { MONGOHQ_URL } = process.env;\n\n// Only these will be added to or updated in the database\nconst examFilenames = [\n  'foundational-c-sharp-with-microsoft-certification-exam.yml',\n  'example-certification-exam.yml'\n];\n\nconst client = new MongoClient(MONGOHQ_URL);\n\nfunction handleError(err, client) {\n  if (err) {\n    console.error('Oh noes!! Error seeding exams.');\n    console.error(err);\n    try {\n      client.close();\n    } catch {\n      // no-op\n    } finally {\n      process.exit(1);\n    }\n  }\n}\n\nconst seed = async () => {\n  await client.db('admin').command({ ping: 1 });\n  log('Connected successfully to mongo');\n\nconst db = client.db('freecodecamp');\n  const exams = db.collection('Exam');\n  for (const filename of examFilenames) {\n    try {\n      const examPath = join(__dirname, 'exams', filename);\n      const examFile = readFileSync(examPath, { encoding: 'utf-8' });\n      const examJson = yaml.load(examFile);\n      const validExam = validateExamSchema(examJson);\n\nif (validExam.error) {\n        throw new Error(\n          `Invalid exam schema for '${filename}': ${validExam.error.message}`\n        );\n      }\n\nexamJson._id = new ObjectId(examJson._id);\n\n// Update existing database object, or create new if it doesn't exist\n      await exams.updateOne(\n        { _id: examJson._id },\n        { $set: examJson },\n        { upsert: true }\n      );\n\nlog(`'${examJson.title}' added to exams database.`);\n    } catch (err) {\n      handleError(err, client);\n    }\n  }",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2130,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\create-exams.js",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "5c39e4380479f01191ddf6406ceba3f8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\create-exams.js",
    "source_type": "git_repo",
    "title": "create-exams",
    "content": "'exams', filename); const examFile = readFileSync(examPath, { encoding: 'utf-8' }); const examJson = yaml.load(examFile); const validExam = validateExamSchema(examJson); if (validExam.error) { throw new Error( `Invalid exam schema for '${filename}': ${validExam.error.message}` ); } examJson._id = new ObjectId(examJson._id); // Update existing database object, or create new if it doesn't exist await exams.updateOne( { _id: examJson._id }, { $set: examJson }, { upsert: true } ); log(`'${examJson.title}' added to exams database.`); } catch (err) { handleError(err, client); } }\n\nlog('Finished seeding exams.');\n};\n\nseed()\n  .then(() => client.close())\n  .catch(err => handleError(err, client));",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2130,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\create-exams.js",
      "source_type": "git_repo"
    },
    "token_count": 182,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "458f68ca5d31f741406fd6a6af31ec4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exam-schema.js",
    "source_type": "git_repo",
    "title": "exam-schema",
    "content": "import Joi from 'joi';\nimport JoiObjectId from 'joi-objectid';\n\nJoi.objectId = JoiObjectId(Joi);\n\nconst nanoIdRE = new RegExp('[a-z0-9]{10}');\n\nconst PrerequisitesJoi = Joi.object().keys({\n  id: Joi.objectId().required(),\n  title: Joi.string()\n});\n\nconst AnswerJoi = Joi.object().keys({\n  id: Joi.string().regex(nanoIdRE).required(),\n  deprecated: Joi.bool(),\n  answer: Joi.string().required()\n});\n\nconst QuestionJoi = Joi.object().keys({\n  id: Joi.string().regex(nanoIdRE).required(),\n  question: Joi.string().required(),\n  deprecated: Joi.bool(),\n  wrongAnswers: Joi.array()\n    .items(AnswerJoi)\n    .required()\n    .custom((value, helpers) => {\n      const nonDeprecatedCount = value.reduce(\n        (count, answer) => (answer.deprecated ? count : count + 1),\n        0\n      );\n      const minimumAnswers = 4;\n\nif (nonDeprecatedCount < minimumAnswers) {\n        return helpers.message(\n          `'wrongAnswers' must have at least ${minimumAnswers} non-deprecated answers.`\n        );\n      }\n\nreturn value;\n    }),\n  correctAnswers: Joi.array()\n    .items(AnswerJoi)\n    .required()\n    .custom((value, helpers) => {\n      const nonDeprecatedCount = value.reduce(\n        (count, answer) => (answer.deprecated ? count : count + 1),\n        0\n      );\n      const minimumAnswers = 1;\n\nif (nonDeprecatedCount < minimumAnswers) {\n        return helpers.message(\n          `'correctAnswers' must have at least ${minimumAnswers} non-deprecated answer.`\n        );\n      }\n\nreturn value;\n    })\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2324,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exam-schema.js",
      "source_type": "git_repo"
    },
    "token_count": 377,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3099df80b9ef3ff1c00aec17f8e41796",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exam-schema.js",
    "source_type": "git_repo",
    "title": "exam-schema",
    "content": "1), 0 ); const minimumAnswers = 4; if (nonDeprecatedCount < minimumAnswers) { return helpers.message( `'wrongAnswers' must have at least ${minimumAnswers} non-deprecated answers.` ); } return value; }), correctAnswers: Joi.array() .items(AnswerJoi) .required() .custom((value, helpers) => { const nonDeprecatedCount = value.reduce( (count, answer) => (answer.deprecated ? count : count + 1), 0 ); const minimumAnswers = 1; if (nonDeprecatedCount < minimumAnswers) { return helpers.message( `'correctAnswers' must have at least ${minimumAnswers} non-deprecated answer.` ); } return value; }) });\n\nconst schema = Joi.object().keys({\n  // TODO: make sure _id and title match what's in the challenge markdown file\n  _id: Joi.objectId().required(),\n  title: Joi.string().required(),\n  numberOfQuestionsInExam: Joi.number()\n    .min(1)\n    .max(\n      Joi.ref('questions', {\n        adjust: questions => {\n          const nonDeprecatedCount = questions.reduce(\n            (count, question) => (question.deprecated ? count : count + 1),\n            0\n          );\n          return nonDeprecatedCount;\n        }\n      })\n    )\n    .required(),\n  passingPercent: Joi.number().min(0).max(100).required(),\n  prerequisites: Joi.array().items(PrerequisitesJoi),\n  questions: Joi.array().items(QuestionJoi).min(1).required()\n});\n\nexport const validateExamSchema = exam => {\n  return schema.validate(exam);\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2324,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exam-schema.js",
      "source_type": "git_repo"
    },
    "token_count": 341,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3a7d092af1bfe45a61b977980b1f2115",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"@freecodecamp/seed-exams\",\n  \"version\": \"0.0.1\",\n  \"description\": \"Seed certification exams questions to database\",\n  \"license\": \"BSD-3-Clause\",\n  \"private\": true,\n  \"engines\": {\n    \"node\": \">=16\",\n    \"pnpm\": \">=10\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/freeCodeCamp/freeCodeCamp.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/freeCodeCamp/freeCodeCamp/issues\"\n  },\n  \"homepage\": \"https://github.com/freeCodeCamp/freeCodeCamp#readme\",\n  \"author\": \"freeCodeCamp <team@freecodecamp.org>\",\n  \"main\": \"none\",\n  \"devDependencies\": {\n    \"debug\": \"4.3.4\",\n    \"dotenv\": \"16.4.5\",\n    \"joi\": \"17.12.2\",\n    \"joi-objectid\": \"3.0.1\",\n    \"js-yaml\": \"4.1.0\",\n    \"mongodb\": \"6.10.0\",\n    \"nanoid\": \"4.0.2\"\n  },\n  \"type\": \"module\"\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 782,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 279,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2faba21dd9be2537b6c0f6702b1c1e8e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\README.md",
    "source_type": "git_repo",
    "title": "README",
    "content": "WARNING: Never change any of the ID's or delete anything. Mark things as deprecated instead.\nHow to create a new exam:\nAdd the exam file in the exams folder\nAdd the exam meta data:\n_id: This should match the id in the exam challenge markdown file,\ntitle: This should match the title in the exam challenge markdown file,\nnumberOfQuestionsInExam: This is how many questions will be given to campers who take the exam. It must be less than or equal to the length of the questions array.\npassingPercent: Percent of questions needed to get correct to pass the exam\nprerequisites: Array of challenges that are required to complete before being able to take the exam. Each should have an id and title that match what's in their challenge markdown file\nquestions: Array of exam questions\nAdd the exam questions to the questions array:\nquestion: The exam question\nwrongAnswers: Array of answers. There should be at least 4, but 6-7 would be ideal.\ncorrectAnswers: Array of answers. There should be at least 1, but 2 or more would be ideal when possible.\nwrongAnswers and correctAnswers arrays:\nanswer: This is one of the multiple choice options\nAdd the ID's:\nChange the examPath variable in the add-nano-ids.js file to the name of the new exam file\nRun it with node add-nano-ids.js. It will add an id to each question, and each answer.\nAdd a deprecated: true property to any of the questions, wrongAnswers, or correctAnswers. Any that include this will be omitted when generating an exam.\nThe exam files in this folder are not used in production. Never push real exam questions to GitHub or anywhere public. These exams are for local development and testing. To seed the real exams to staging/production databases, replace the example exams here with the real exams, connect to the desired database, and run the create-exams.js script.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1945,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 398,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0428a02ec15500b866e6ab47f96830e5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\example-certification-exam.yml",
    "source_type": "git_repo",
    "title": "example-certification-exam",
    "content": "_id: 645147516c245de4d11eb7ba\ntitle: Example Certification Exam\nnumberOfQuestionsInExam: 5\npassingPercent: 70\nquestions:\n  - id: vjxyn2ngzs\n    question: Which of the following is NOT a JavaScript data type wrongAnswers:\n      - id: h1x269fts9\n        answer: Integer\n      - id: 3x3j6ts2sb\n        answer: Boolean\n      - id: 9g4ix2tr1z\n        answer: Symbol\n      - id: n1rfllrvvy\n        answer: String\n      - id: 33oq8q3aio\n        answer: Bigint\n      - id: 7w1gaddxup\n        answer: Undefined\n      - id: ywgqr2wp6i\n        answer: Object\n    correctAnswers:\n      - id: ydmnlkjviv\n        answer: Array\n      - id: sy2trjs7p8\n        answer: Float\n  - id: lpmv63p5sv\n    question: What does the `NaN` keyword represent in JavaScript wrongAnswers:\n      - id: 3cxs9as4bt\n        answer: Not a Node\n      - id: axn8omt3zf\n        answer: Null and None\n      - id: 7ssyazt4zu\n        answer: No Assignment Named\n      - id: do4cm37x7y\n        answer: Negative Assertion Needed\n      - id: r2hbfnrodz\n        answer: Never Allow Null\n    correctAnswers:\n      - id: ah5kkj38s1\n        answer: Not a Number\n  - id: g2hudvmgoj\n    question: >-\n      Which method is used to remove the last element from an array in\n      JavaScript",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 4693,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\example-certification-exam.yml",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "ad1924b2f814b8def540087e992e3e73",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\example-certification-exam.yml",
    "source_type": "git_repo",
    "title": "example-certification-exam",
    "content": "Float - id: lpmv63p5sv question: What does the `NaN` keyword represent in JavaScript wrongAnswers: - id: 3cxs9as4bt answer: Not a Node - id: axn8omt3zf answer: Null and None - id: 7ssyazt4zu answer: No Assignment Named - id: do4cm37x7y answer: Negative Assertion Needed - id: r2hbfnrodz answer: Never Allow Null correctAnswers: - id: ah5kkj38s1 answer: Not a Number - id: g2hudvmgoj question: >- Which method is used to remove the last element from an array in JavaScriptwrongAnswers:\n      - id: jrxd1hjv63\n        answer: '`shift()`'\n      - id: udc3kecrqn\n        answer: '`unshift()`'\n      - id: a12aysp2et\n        answer: '`slice()`'\n      - id: xljr0lkb0n\n        answer: '`splice()`'\n      - id: qe4z3kxgyz\n        answer: '`concat()`'\n    correctAnswers:\n      - id: gwddf01p89\n        answer: '`pop()`'\n  - id: 7tfdjebrnq\n    question: >-\n      What is the correct way to create a new instance of an object in\n      JavaScript wrongAnswers:\n      - id: 5bygwpaz4d\n        answer: '`Object create(MyObject);`'\n      - id: h5s3304gbl\n        answer: '`MyObject create();`'\n      - id: mdsjsjpi9t\n        answer: '`Object new(MyObject);`'\n      - id: 3o8otd8j9h\n        answer: '`MyObject new();`'\n      - id: h4ozml27zn\n        answer: '`MyObject instance();`'\n        deprecated: true\n    correctAnswers:\n      - id: qbfhqmnedn\n        answer: '`new MyObject();`'\n  - id: hx0gxr5yjc\n    question: What is the purpose of the `querySelectorAll` method in JavaScript",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 4693,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\example-certification-exam.yml",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "b16367ea938d827e1f931abd44750156",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\example-certification-exam.yml",
    "source_type": "git_repo",
    "title": "example-certification-exam",
    "content": "answer: '`pop()`' - id: 7tfdjebrnq question: >- What is the correct way to create a new instance of an object in JavaScript wrongAnswers: - id: 5bygwpaz4d answer: '`Object create(MyObject);`' - id: h5s3304gbl answer: '`MyObject create();`' - id: mdsjsjpi9t answer: '`Object new(MyObject);`' - id: 3o8otd8j9h answer: '`MyObject new();`' - id: h4ozml27zn answer: '`MyObject instance();`' deprecated: true correctAnswers: - id: qbfhqmnedn answer: '`new MyObject();`' - id: hx0gxr5yjc question: What is the purpose of the `querySelectorAll` method in JavaScriptdeprecated: true\n    wrongAnswers:\n      - id: 71iry42cy1\n        answer: To select all elements with a specific ID\n      - id: jjyk5e9e1l\n        answer: To select all elements of a specific tag name\n      - id: k5tpc2o2q8\n        answer: To select all child elements of a specific parent\n      - id: s3cm1tq4wt\n        answer: To select all elements with a specific attribute\n      - id: l1gtuheh87\n        answer: To select elements based on their position in the DOM\n    correctAnswers:\n      - id: e6xz6zdpxr\n        answer: To select all elements with a specific class name\n  - id: eigcj3e0mg\n    question: Which operator is used to compare two values for equality in JavaScript wrongAnswers:\n      - id: ltgdcoyonb\n        answer: '`",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 4693,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\example-certification-exam.yml",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "dd2b04964d38a240431475c7bda19f0c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\example-certification-exam.yml",
    "source_type": "git_repo",
    "title": "example-certification-exam",
    "content": "name - id: k5tpc2o2q8 answer: To select all child elements of a specific parent - id: s3cm1tq4wt answer: To select all elements with a specific attribute - id: l1gtuheh87 answer: To select elements based on their position in the DOM correctAnswers: - id: e6xz6zdpxr answer: To select all elements with a specific class name - id: eigcj3e0mg question: Which operator is used to compare two values for equality in JavaScript wrongAnswers: - id: ltgdcoyonb answer: '`=`'\n      - id: f3szfel7x6\n        answer: '`<`'\n      - id: b0meyxhvtu\n        answer: '`>`'\n      - id: 31dd0pte4i\n        answer: '`<=`'\n      - id: 9u8bi7wqa2\n        answer: '`>=`'\n    correctAnswers:\n      - id: fmo9sof6v2\n        answer: '`==`'\n        deprecated: true\n      - id: tl6eo06r4x\n        answer: '`===`'\n  - id: l5f2beg2ih\n    question: >-\n      Which of the following statements is used to terminate a loop in\n      JavaScript wrongAnswers:\n      - id: kqi1fg8vtm\n        answer: stop\n      - id: a2clf7fmyx\n        answer: exit\n      - id: v58wx865e7\n        answer: return\n      - id: 5mgeaetnf0\n        answer: halt\n      - id: 2u73kyry6o\n        answer: skip\n    correctAnswers:\n      - id: 7j046bkjmf\n        answer: break\n  - id: atuq2zwg4h\n    question: What is the correct syntax to define a function in JavaScript",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 4693,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\example-certification-exam.yml",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "5f533d6a6a7684e1a5dbf247744c35f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\example-certification-exam.yml",
    "source_type": "git_repo",
    "title": "example-certification-exam",
    "content": "id: fmo9sof6v2 answer: '`==`' deprecated: true - id: tl6eo06r4x answer: '`===`' - id: l5f2beg2ih question: >- Which of the following statements is used to terminate a loop in JavaScript wrongAnswers: - id: kqi1fg8vtm answer: stop - id: a2clf7fmyx answer: exit - id: v58wx865e7 answer: return - id: 5mgeaetnf0 answer: halt - id: 2u73kyry6o answer: skip correctAnswers: - id: 7j046bkjmf answer: break - id: atuq2zwg4h question: What is the correct syntax to define a function in JavaScriptwrongAnswers:\n      - id: dusl68wx2o\n        answer: '`function myFunction {}`'\n      - id: dlwjt59a5s\n        answer: '`def myFunction():`'\n      - id: 98p8ai27ko\n        answer: '`function = myFunction {}`'\n      - id: 7ciq8sood9\n        answer: '`function myFunction():`'\n    correctAnswers:\n      - id: wc3h7uc4zn\n        answer: '`function myFunction() {}`'\n  - id: 3ne0ju7yzq\n    question: >-\n      Which of the following methods is used to add a new element to the end of\n      an array in JavaScript wrongAnswers:\n      - id: fytb9yvbug\n        answer: shift()\n      - id: wnc31qc1ie\n        answer: unshift()\n      - id: 22mi7j64h5\n        answer: pop()\n      - id: da96ukvtol\n        answer: splice()\n      - id: gc6elnmtzw\n        answer: concat()\n    correctAnswers:\n      - id: pymbxhyn12\n        answer: push()",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 4693,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\example-certification-exam.yml",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "ec922bee9c7cd6347a89f87fcc475017",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\foundational-c-sharp-with-microsoft-certification-exam.yml",
    "source_type": "git_repo",
    "title": "foundational-c-sharp-with-microsoft-certification-exam",
    "content": "_id: 647e22d18acb466c97ccbef8\ntitle: Foundational C# with Microsoft Certification Exam\nnumberOfQuestionsInExam: 5\npassingPercent: 75\nprerequisites:\n  - id: 647f85d407d29547b3bee1bb\n    title: Trophy - Write Your First Code Using C#\n  - id: 647f87dc07d29547b3bee1bf\n    title: Trophy - Create and Run Simple C# Console Applications\n  - id: 647f882207d29547b3bee1c0\n    title: Trophy - Add Logic to C# Console Applications\n  - id: 647f867a07d29547b3bee1bc\n    title: Trophy - Work with Variable Data in C# Console Applications\n  - id: 647f877f07d29547b3bee1be\n    title: Trophy - Create Methods in C# Console Applications\n  - id: 647f86ff07d29547b3bee1bd\n    title: Trophy - Debug C# Console Applications\nquestions:\n  - id: vjxyn2ngzs\n    question: Which of the following is NOT a JavaScript data type wrongAnswers:\n      - id: 5y7xv9ppc1\n        answer: Integer\n      - id: 3x3j6ts2sb\n        answer: Boolean\n      - id: 9g4ix2tr1z\n        answer: Symbol\n      - id: n1rfllrvvy\n        answer: String\n      - id: 33oq8q3aio\n        answer: Bigint\n      - id: 7w1gaddxup\n        answer: Undefined\n      - id: ywgqr2wp6i\n        answer: Object\n    correctAnswers:\n      - id: ydmnlkjviv\n        answer: Array\n      - id: sy2trjs7p8\n        answer: Float\n  - id: lpmv63p5sv\n    question: What does the `NaN` keyword represent in JavaScript",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 5286,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\foundational-c-sharp-with-microsoft-certification-exam.yml",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "fe512af59a35be37c1846c5b3f8382db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\foundational-c-sharp-with-microsoft-certification-exam.yml",
    "source_type": "git_repo",
    "title": "foundational-c-sharp-with-microsoft-certification-exam",
    "content": "Console Applications questions: - id: vjxyn2ngzs question: Which of the following is NOT a JavaScript data type wrongAnswers: - id: 5y7xv9ppc1 answer: Integer - id: 3x3j6ts2sb answer: Boolean - id: 9g4ix2tr1z answer: Symbol - id: n1rfllrvvy answer: String - id: 33oq8q3aio answer: Bigint - id: 7w1gaddxup answer: Undefined - id: ywgqr2wp6i answer: Object correctAnswers: - id: ydmnlkjviv answer: Array - id: sy2trjs7p8 answer: Float - id: lpmv63p5sv question: What does the `NaN` keyword represent in JavaScriptwrongAnswers:\n      - id: 3cxs9as4bt\n        answer: Not a Node\n      - id: axn8omt3zf\n        answer: Null and None\n      - id: 7ssyazt4zu\n        answer: No Assignment Named\n      - id: do4cm37x7y\n        answer: Negative Assertion Needed\n      - id: r2hbfnrodz\n        answer: Never Allow Null\n    correctAnswers:\n      - id: ah5kkj38s1\n        answer: Not a Number\n  - id: g2hudvmgoj\n    question: >-\n      Which method is used to remove the last element from an array in\n      JavaScript wrongAnswers:\n      - id: jrxd1hjv63\n        answer: '`shift()`'\n      - id: udc3kecrqn\n        answer: '`unshift()`'\n      - id: a12aysp2et\n        answer: '`slice()`'\n      - id: xljr0lkb0n\n        answer: '`splice()`'\n      - id: qe4z3kxgyz\n        answer: '`concat()`'\n    correctAnswers:\n      - id: gwddf01p89\n        answer: '`pop()`'\n  - id: 7tfdjebrnq\n    question: >-\n      What is the correct way to create a new instance of an object in\n      JavaScript",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 5286,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\foundational-c-sharp-with-microsoft-certification-exam.yml",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "1a890ee38d5a1da5e8d6fab5c2c93612",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\foundational-c-sharp-with-microsoft-certification-exam.yml",
    "source_type": "git_repo",
    "title": "foundational-c-sharp-with-microsoft-certification-exam",
    "content": "ah5kkj38s1 answer: Not a Number - id: g2hudvmgoj question: >- Which method is used to remove the last element from an array in JavaScript wrongAnswers: - id: jrxd1hjv63 answer: '`shift()`' - id: udc3kecrqn answer: '`unshift()`' - id: a12aysp2et answer: '`slice()`' - id: xljr0lkb0n answer: '`splice()`' - id: qe4z3kxgyz answer: '`concat()`' correctAnswers: - id: gwddf01p89 answer: '`pop()`' - id: 7tfdjebrnq question: >- What is the correct way to create a new instance of an object in JavaScriptwrongAnswers:\n      - id: 5bygwpaz4d\n        answer: '`Object create(MyObject);`'\n      - id: h5s3304gbl\n        answer: '`MyObject create();`'\n      - id: mdsjsjpi9t\n        answer: '`Object new(MyObject);`'\n      - id: 3o8otd8j9h\n        answer: '`MyObject new();`'\n      - id: h4ozml27zn\n        answer: '`MyObject instance();`'\n        deprecated: true\n    correctAnswers:\n      - id: qbfhqmnedn\n        answer: '`new MyObject();`'\n  - id: hx0gxr5yjc\n    question: What is the purpose of the `querySelectorAll` method in JavaScript",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 5286,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\foundational-c-sharp-with-microsoft-certification-exam.yml",
      "source_type": "git_repo"
    },
    "token_count": 346,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "5303387b4781884995592a8335569b6b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\foundational-c-sharp-with-microsoft-certification-exam.yml",
    "source_type": "git_repo",
    "title": "foundational-c-sharp-with-microsoft-certification-exam",
    "content": "gwddf01p89 answer: '`pop()`' - id: 7tfdjebrnq question: >- What is the correct way to create a new instance of an object in JavaScriptwrongAnswers: - id: 5bygwpaz4d answer: '`Object create(MyObject);`' - id: h5s3304gbl answer: '`MyObject create();`' - id: mdsjsjpi9t answer: '`Object new(MyObject);`' - id: 3o8otd8j9h answer: '`MyObject new();`' - id: h4ozml27zn answer: '`MyObject instance();`' deprecated: true correctAnswers: - id: qbfhqmnedn answer: '`new MyObject();`' - id: hx0gxr5yjc question: What is the purpose of the `querySelectorAll` method in JavaScriptdeprecated: true\n    wrongAnswers:\n      - id: 71iry42cy1\n        answer: To select all elements with a specific ID\n      - id: jjyk5e9e1l\n        answer: To select all elements of a specific tag name\n      - id: k5tpc2o2q8\n        answer: To select all child elements of a specific parent\n      - id: s3cm1tq4wt\n        answer: To select all elements with a specific attribute\n      - id: l1gtuheh87\n        answer: To select elements based on their position in the DOM\n    correctAnswers:\n      - id: e6xz6zdpxr\n        answer: To select all elements with a specific class name\n  - id: eigcj3e0mg\n    question: Which operator is used to compare two values for equality in JavaScript wrongAnswers:\n      - id: ltgdcoyonb\n        answer: '`",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 5286,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\foundational-c-sharp-with-microsoft-certification-exam.yml",
      "source_type": "git_repo"
    },
    "token_count": 399,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "79e5aaead16eed39ea4d864cb18d56db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\foundational-c-sharp-with-microsoft-certification-exam.yml",
    "source_type": "git_repo",
    "title": "foundational-c-sharp-with-microsoft-certification-exam",
    "content": "name - id: k5tpc2o2q8 answer: To select all child elements of a specific parent - id: s3cm1tq4wt answer: To select all elements with a specific attribute - id: l1gtuheh87 answer: To select elements based on their position in the DOM correctAnswers: - id: e6xz6zdpxr answer: To select all elements with a specific class name - id: eigcj3e0mg question: Which operator is used to compare two values for equality in JavaScript wrongAnswers: - id: ltgdcoyonb answer: '`=`'\n      - id: f3szfel7x6\n        answer: '`<`'\n      - id: b0meyxhvtu\n        answer: '`>`'\n      - id: 31dd0pte4i\n        answer: '`<=`'\n      - id: 9u8bi7wqa2\n        answer: '`>=`'\n    correctAnswers:\n      - id: fmo9sof6v2\n        answer: '`==`'\n        deprecated: true\n      - id: tl6eo06r4x\n        answer: '`===`'\n  - id: l5f2beg2ih\n    question: >-\n      Which of the following statements is used to terminate a loop in\n      JavaScript wrongAnswers:\n      - id: kqi1fg8vtm\n        answer: stop\n      - id: a2clf7fmyx\n        answer: exit\n      - id: v58wx865e7\n        answer: return\n      - id: 5mgeaetnf0\n        answer: halt\n      - id: 2u73kyry6o\n        answer: skip\n    correctAnswers:\n      - id: 7j046bkjmf\n        answer: break\n  - id: atuq2zwg4h\n    question: What is the correct syntax to define a function in JavaScript",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 5286,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\foundational-c-sharp-with-microsoft-certification-exam.yml",
      "source_type": "git_repo"
    },
    "token_count": 425,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "e6a5abb3cc43902a7036639e26a4aab8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\foundational-c-sharp-with-microsoft-certification-exam.yml",
    "source_type": "git_repo",
    "title": "foundational-c-sharp-with-microsoft-certification-exam",
    "content": "id: fmo9sof6v2 answer: '`==`' deprecated: true - id: tl6eo06r4x answer: '`===`' - id: l5f2beg2ih question: >- Which of the following statements is used to terminate a loop in JavaScript wrongAnswers: - id: kqi1fg8vtm answer: stop - id: a2clf7fmyx answer: exit - id: v58wx865e7 answer: return - id: 5mgeaetnf0 answer: halt - id: 2u73kyry6o answer: skip correctAnswers: - id: 7j046bkjmf answer: break - id: atuq2zwg4h question: What is the correct syntax to define a function in JavaScriptwrongAnswers:\n      - id: dusl68wx2o\n        answer: '`function myFunction {}`'\n      - id: dlwjt59a5s\n        answer: '`def myFunction():`'\n      - id: 98p8ai27ko\n        answer: '`function = myFunction {}`'\n      - id: 7ciq8sood9\n        answer: '`function myFunction():`'\n    correctAnswers:\n      - id: wc3h7uc4zn\n        answer: '`function myFunction() {}`'\n  - id: 3ne0ju7yzq\n    question: >-\n      Which of the following methods is used to add a new element to the end of\n      an array in JavaScript wrongAnswers:\n      - id: fytb9yvbug\n        answer: shift()\n      - id: wnc31qc1ie\n        answer: unshift()\n      - id: 22mi7j64h5\n        answer: pop()\n      - id: da96ukvtol\n        answer: splice()\n      - id: gc6elnmtzw\n        answer: concat()\n    correctAnswers:\n      - id: pymbxhyn12\n        answer: push()",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 5286,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed-exams\\exams\\foundational-c-sharp-with-microsoft-certification-exam.yml",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "885445a9f5ebb3a3d92326ac6b793293",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\__mocks__\\curriculum.json",
    "source_type": "git_repo",
    "title": "curriculum",
    "content": "{\n  \"super-block-a\": {\n    \"blocks\": {\n      \"block-one\": {\n        \"meta\": {},\n        \"challenges\": [\n          {\n            \"title\": \"Challenge One\",\n            \"block\": \"Block One\",\n            \"superBlock\": \"super-block-a\"\n          },\n          {\n            \"title\": \"Challenge Two\",\n            \"block\": \"Block One\",\n            \"superBlock\": \"super-block-a\"\n          },\n          {\n            \"title\": \"Challenge Three\",\n            \"block\": \"Block One\",\n            \"superBlock\": \"super-block-a\"\n          },\n          {\n            \"title\": \"Challenge Four\",\n            \"block\": \"Block One\",\n            \"superBlock\": \"super-block-a\"\n          }\n        ]\n      },\n      \"block-two\": {\n        \"meta\": {},\n        \"challenges\": [\n          {\n            \"title\": \"Challenge Five\",\n            \"block\": \"Block Two\",\n            \"superBlock\": \"super-block-a\"\n          },\n          {\n            \"title\": \"Challenge Six\",\n            \"block\": \"Block Two\",\n            \"superBlock\": \"super-block-a\"\n          },\n          {\n            \"title\": \"Challenge Seven\",\n            \"block\": \"Block Two\",\n            \"superBlock\": \"super-block-a\"\n          },\n          {\n            \"title\": \"Challenge Eight\",\n            \"block\": \"Block Two\",\n            \"superBlock\": \"super-block-a\"\n          }\n        ]\n      }\n    }\n  },\n  \"super-block-b\": {\n    \"blocks\": {\n      \"block-one\": {\n        \"meta\": {},\n        \"challenges\": [\n          {\n            \"title\": \"Challenge Nine\",\n            \"block\": \"Block One\",\n            \"superBlock\": \"super-block-b\",\n            \"isPrivate\": true\n          },\n          {\n            \"title\": \"Challenge Ten\",\n            \"block\": \"Block One\",\n            \"superBlock\": \"super-block-b\"\n          },\n          {\n            \"title\": \"Challenge Eleven\",\n            \"block\": \"Block One\",\n            \"superBlock\": \"super-block-b\"\n          },\n          {\n            \"title\": \"Challenge Twelve\",\n            \"block\": \"Block One\",\n            \"superBlock\": \"super-block-b\"\n          }\n        ]\n      }\n    }\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 2060,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\__mocks__\\curriculum.json",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "36abe6ce780c18b3d539c166b5956c39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\lint\\fixtures\\badFencing.md",
    "source_type": "git_repo",
    "title": "badFencing",
    "content": "id: ''\ntitle: ''\nchallengeType: 0\nvideoUrl: ''\nDescription\nInstructions\nTests\ntext\n```yml\ntests:\n- text: text\ntestString: testString\n```\nmoretext\nChallenge Seed\nSolution",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 423,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\lint\\fixtures\\badFencing.md",
      "source_type": "git_repo"
    },
    "token_count": 50,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cefca6b35f6931eab7c820ad20974e0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\lint\\fixtures\\badYML.md",
    "source_type": "git_repo",
    "title": "badYML",
    "content": "id: ''\ntitle: ''\nchallengeType: 0\nvideoUrl: ''\nDescription\nInstructions\nTests\n```yml\ntests:\n- text: text\ntestString: testString\n```\nChallenge Seed\nSolution",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 411,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\lint\\fixtures\\badYML.md",
      "source_type": "git_repo"
    },
    "token_count": 45,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "eebd677159ad9c37f62a5c3a6d577ed7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\lint\\fixtures\\good.md",
    "source_type": "git_repo",
    "title": "good",
    "content": "id: ''\ntitle: ''\nchallengeType: 0\nvideoUrl: ''\nDescription\nInstructions\nTests\n```yml\ntests:\n- text: text\ntestString: testString\n```\nChallenge Seed\nSolution",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 409,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\lint\\fixtures\\good.md",
      "source_type": "git_repo"
    },
    "token_count": 45,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0a5fde7b0e11536e3e93d93968ac7385",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\lint\\linter\\fenced-code-block.js",
    "source_type": "git_repo",
    "title": "fenced-code-block",
    "content": "module.exports = {\n  names: ['closed-code-blocks'],\n  description: 'Code blocks must have closing triple backticks',\n  tags: ['code'],\n  function: function rule(params, onError) {\n    params.parsers.micromark.tokens\n      .filter(token => token.type === 'codeFenced')\n      .forEach(token => {\n        if (token.text.trim().slice(-3) !== '```') {\n          onError({\n            lineNumber: token.endLine,\n            detail: `Code blocks must have closing triple backticks.`\n          });\n        }\n      });\n  }\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 517,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\lint\\linter\\fenced-code-block.js",
      "source_type": "git_repo"
    },
    "token_count": 119,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7fadf0a8739f195d9c47e5d91f6c8852",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\lint\\linter\\index.js",
    "source_type": "git_repo",
    "title": "index",
    "content": "const markdownlint = require('markdownlint');\n\nconst lintPrism = require('./markdown-prism');\nconst lintYAML = require('./markdown-yaml');\nconst fencedCodeBlock = require('./fenced-code-block');\n\nfunction linter(rules) {\n  const lint = (file, next) => {\n    const options = {\n      files: [file.path],\n      config: rules,\n      customRules: [lintYAML, lintPrism, fencedCodeBlock]\n    };\n    markdownlint(options, function callback(err, result) {\n      const resultString = (result || '').toString();\n      if (resultString) {\n        process.exitCode = 1;\n        console.log(resultString);\n      }\n      if (next) next(err, file);\n    });\n  };\n  return lint;\n}\n\nmodule.exports = linter;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 689,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\lint\\linter\\index.js",
      "source_type": "git_repo"
    },
    "token_count": 167,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4ead593f06764fef51677f3353764430",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\lint\\linter\\markdown-prism.js",
    "source_type": "git_repo",
    "title": "markdown-prism",
    "content": "const components = require(`prismjs/components`);\n\nmodule.exports = {\n  names: ['prism-langs'],\n  description: 'Code block languages should be supported by PrismJS',\n  tags: ['prism'],\n  function: function rule(params, onError) {\n    params.tokens\n      .filter(param => param.type === 'fence')\n      .forEach(codeBlock => {\n        // whitespace around the language is ignored by the parser, as is case:\n        const baseLang = codeBlock.info.trim().toLowerCase();\n        const lang = getBaseLanguageName(baseLang);\n        // Rule MD040 checks if the block has a language, so this rule only\n        // comes into play if a language has been specified.\n        if (baseLang && !lang) {\n          onError({\n            lineNumber: codeBlock.lineNumber,\n            detail: `'${baseLang}' is not recognised.`\n          });\n        }\n      });\n  }\n};\n\n/*\n * This is the method used by https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-remark-prismjs/src/load-prism-language.js\n */\n\n// Get the real name of a language given it or an alias\nconst getBaseLanguageName = nameOrAlias => {\n  if (components.languages[nameOrAlias]) {\n    return nameOrAlias;\n  }\n  return Object.keys(components.languages).find(language => {\n    const { alias } = components.languages[language];\n    if (!alias) return false;\n    if (Array.isArray(alias)) {\n      return alias.includes(nameOrAlias);\n    } else {\n      return alias === nameOrAlias;\n    }\n  });\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1451,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\lint\\linter\\markdown-prism.js",
      "source_type": "git_repo"
    },
    "token_count": 330,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "575a46e1631d2f2fc3bddef0a8370695",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\lint\\linter\\markdown-yaml.js",
    "source_type": "git_repo",
    "title": "markdown-yaml",
    "content": "const yaml = require('js-yaml');\n\nmodule.exports = {\n  names: ['yaml-linter'],\n  description: 'YAML code blocks should be valid',\n  tags: ['yaml'],\n  function: function rule(params, onError) {\n    params.tokens\n      .filter(param => param.type === 'fence')\n      .filter(param => param.info === 'yml' || param.info === 'yaml')\n      // TODO since the parser only looks for yml, should we reject yaml blocks?\n      .forEach(codeBlock => {\n        try {\n          yaml.safeLoad(codeBlock.content);\n        } catch (e) {\n          onError({\n            lineNumber: codeBlock.lineNumber,\n            detail: e.message,\n            context: codeBlock.line\n          });\n        }\n      });\n  }\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 693,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\lint\\linter\\markdown-yaml.js",
      "source_type": "git_repo"
    },
    "token_count": 160,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b177969a5f300e89fd7dacc6a49ecd4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\index.d.ts",
    "source_type": "git_repo",
    "title": "index.d",
    "content": "import type { PyodideInterface } from 'pyodide';\n\nexport interface FrameDocument extends Document {\n  __initTestFrame: (e: InitTestFrameArg) => Promise<void>;\n  __runTest: (\n    testString: string\n  ) => Promise<\n    { pass: boolean } | { err: { message: string; stack?: string } }\n  >;\n}\n\nexport interface PythonDocument extends FrameDocument {\n  __initPythonFrame: () => Promise<void>;\n  __runPython: (code: string) => Promise<PyodideInterface>;\n}\n\nexport interface InitTestFrameArg {\n  code: {\n    contents?: string;\n    editableContents?: string;\n  };\n  loadEnzyme?: () => void;\n}\n\nexport type FrameWindow = Window &\n  typeof globalThis & {\n    $: typeof $;\n  };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 667,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\index.d.ts",
      "source_type": "git_repo"
    },
    "token_count": 174,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c506a9622e4794b56b8176cf11fd7cf8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"@freecodecamp/browser-scripts\",\n  \"version\": \"1.0.0\",\n  \"description\": \"The freeCodeCamp.org open-source codebase and curriculum\",\n  \"license\": \"BSD-3-Clause\",\n  \"private\": true,\n  \"engines\": {\n    \"node\": \">=18\",\n    \"pnpm\": \">=10\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/freeCodeCamp/freeCodeCamp.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/freeCodeCamp/freeCodeCamp/issues\"\n  },\n  \"homepage\": \"https://github.com/freeCodeCamp/freeCodeCamp#readme\",\n  \"author\": \"freeCodeCamp <team@freecodecamp.org>\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"build\": \"NODE_OPTIONS=\\\"--max-old-space-size=7168\\\" webpack -c webpack.config.cjs\"\n  },\n  \"type\": \"module\",\n  \"keywords\": [],\n  \"devDependencies\": {\n    \"@babel/plugin-syntax-dynamic-import\": \"7.8.3\",\n    \"@babel/plugin-transform-runtime\": \"7.23.7\",\n    \"@babel/preset-env\": \"7.23.7\",\n    \"@babel/preset-typescript\": \"7.23.3\",\n    \"@types/copy-webpack-plugin\": \"^8.0.1\",\n    \"@typescript/vfs\": \"^1.6.0\",\n    \"babel-loader\": \"8.3.0\",\n    \"copy-webpack-plugin\": \"9.1.0\",\n    \"process\": \"0.11.10\",\n    \"pyodide\": \"^0.23.3\",\n    \"sass.js\": \"0.11.1\",\n    \"util\": \"0.12.5\",\n    \"webpack\": \"5.90.3\",\n    \"webpack-cli\": \"4.10.0\"\n  },\n  \"dependencies\": {\n    \"@freecodecamp/curriculum-helpers\": \"^5.4.1\",\n    \"xterm\": \"^5.2.1\"\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 1387,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6e169a540c93b78f81bae0b55f1f7f1c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\python-worker.ts",
    "source_type": "git_repo",
    "title": "python-worker",
    "content": "// We have to specify pyodide.js because we need to import that file (not .mjs)\n// and 'import' defaults to .mjs.\n\n// This is to do with how webpack handles node fallbacks - it uses the node\n// resolution algorithm to find the file, but that requires the full file name.\n// We can't add the extension, because it's in a bundle we're importing. However\n// we can import the .js file and then the strictness does not apply.\nimport { loadPyodide, type PyodideInterface } from 'pyodide/pyodide.js';\nimport pkg from 'pyodide/package.json';\nimport type { PyProxy, PythonError } from 'pyodide/ffi';\nimport * as helpers from '@freecodecamp/curriculum-helpers';\n\nconst ctx: Worker & typeof globalThis = self as unknown as Worker &\n  typeof globalThis;\n\nlet pyodide: PyodideInterface | null = null;\n\ninterface PythonRunEvent extends MessageEvent {\n  data: {\n    type: 'run';\n    code: {\n      contents: string;\n      editableContents: string;\n    };\n  };\n}\n\ninterface ListenRequestEvent extends MessageEvent {\n  data: {\n    type: 'listen';\n  };\n}\n\ninterface CancelEvent extends MessageEvent {\n  data: {\n    type: 'cancel';\n    value: number;\n  };\n}\n\n// Since messages are buffered, it needs to be possible to discard 'run'\n// messages. Otherwise messages could build up while the worker is busy (for\n// example, while loading pyodide) and the work would try to process them in\n// sequence. Instead, it will ignore messages until it receives a 'listen'\n// message and will inform the client every time it starts ignoring messages.\nlet ignoreRunMessages = true;\n\nasync function setupPyodide() {\n  if (pyodide) return pyodide;\n\npyodide = await loadPyodide({\n    // TODO: host this ourselves\n    indexURL: `https://cdn.jsdelivr.net/pyodide/v${pkg.version}/full/`\n  });\n\n// We freeze this to prevent learners from getting the worker into a\n  // weird state. NOTE: this has to come after pyodide is loaded, because\n  // pyodide modifies self while loading.\n  Object.freeze(self);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8207,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\python-worker.ts",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "7a8153527bb19cdc82864f40b0a2c6e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\python-worker.ts",
    "source_type": "git_repo",
    "title": "python-worker",
    "content": "messages until it receives a 'listen' // message and will inform the client every time it starts ignoring messages. let ignoreRunMessages = true; async function setupPyodide() { if (pyodide) return pyodide; pyodide = await loadPyodide({ // TODO: host this ourselves indexURL: `https://cdn.jsdelivr.net/pyodide/v${pkg.version}/full/` }); // We freeze this to prevent learners from getting the worker into a // weird state. NOTE: this has to come after pyodide is loaded, because // pyodide modifies self while loading. Object.freeze(self);\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n  pyodide.FS.writeFile(\n    '/home/pyodide/ast_helpers.py',\n    helpers.python.astHelpers,\n    {\n      encoding: 'utf8'\n    }\n  );\n\nignoreRunMessages = true;\n  postMessage({ type: 'stopped' });\n}\n\nfunction resetPyodide() {\n  if (pyodide) pyodide = null;\n  void setupPyodide();\n}\n\nvoid setupPyodide();\n\nfunction initRunPython() {\n  if (!pyodide) throw new Error('pyodide not loaded');\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n  const str = pyodide.globals.get('str') as (x: unknown) => string;\n\nfunction print(...args: unknown[]) {\n    const text = args.map(x => str(x)).join(' ');\n    postMessage({ type: 'print', text });\n  }\n\nfunction input(text: string) {\n    // TODO: send unique ids to the main thread and the service worker, so we\n    // can have multiple concurrent input requests.\n    postMessage({ type: 'input', text });\n    const request = new XMLHttpRequest();\n    request.open('POST', '/python/intercept-input/', false);\n    request.send(null);\n\n// We want to raise a KeyboardInterrupt if the user cancels. To do that,\n    // this function returns a JS object with the 'type' property set to\n    // 'cancel'. Then the python code can actually raise the exception.\n    return JSON.parse(request.responseText) as {\n      type: 'msg' | 'cancel';\n      value?: string;\n    };\n  }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8207,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\python-worker.ts",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "8f031b6bf5a1825e57abd3f0a1f6b137",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\python-worker.ts",
    "source_type": "git_repo",
    "title": "python-worker",
    "content": "the service worker, so we // can have multiple concurrent input requests. postMessage({ type: 'input', text }); const request = new XMLHttpRequest(); request.open('POST', '/python/intercept-input/', false); request.send(null); // We want to raise a KeyboardInterrupt if the user cancels. To do that, // this function returns a JS object with the 'type' property set to // 'cancel'. Then the python code can actually raise the exception. return JSON.parse(request.responseText) as { type: 'msg' | 'cancel'; value?: string; }; }\n\nfunction __interruptExecution() {\n    postMessage({ type: 'reset' });\n  }\n\n// I tried setting jsglobals here, to provide 'input' and 'print' to python,\n  // without having to modify the global window object. However, it didn't work\n  // because pyodide needs access to that object. Instead, I used\n  // registerJsModule when setting up runPython.\n\n// Make print available to python\n  pyodide.registerJsModule('jscustom', {\n    print,\n    input,\n    __interruptExecution\n  });\n  // Create fresh globals each time user code is run.\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n  const globals = pyodide.globals.get('dict')() as PyProxy;\n  // Some tests rely on __name__ being set to __main__ and we new dicts do not\n  // have this set by default.\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n  globals.set('__name__', '__main__');\n\n// The runPython helper is a shortcut for running python code with our\n  // custom globals.\n  const runPython = (pyCode: string) =>\n    pyodide!.runPython(pyCode, { globals }) as unknown;\n\nrunPython(`\n  from pyodide.ffi import JsException\n\nimport jscustom\n  from jscustom import print\n  from jscustom import input\n\ndef __wrap(func):\n    def fn(*args):\n      try:\n        data = func(*args)\n        if data.type == 'cancel':\n          raise KeyboardInterrupt(data.value)\n        return data.value\n      except JsException:\n        jscustom.__interruptExecution()\n        raise\n    return fn\n  input = __wrap(input)\n  `);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8207,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\python-worker.ts",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "12f93329768326f5ebbab6980c3d00fd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\python-worker.ts",
    "source_type": "git_repo",
    "title": "python-worker",
    "content": "by default. // eslint-disable-next-line @typescript-eslint/no-unsafe-call globals.set('__name__', '__main__'); // The runPython helper is a shortcut for running python code with our // custom globals. const runPython = (pyCode: string) => pyodide!.runPython(pyCode, { globals }) as unknown; runPython(` from pyodide.ffi import JsException import jscustom from jscustom import print from jscustom import input def __wrap(func): def fn(*args): try: data = func(*args) if data.type == 'cancel': raise KeyboardInterrupt(data.value) return data.value except JsException: jscustom.__interruptExecution() raise return fn input = __wrap(input) `);\n\n// Exposing sys.last_value can create memory leaks, so this just returns a\n  // string instead of the actual exception. args[0] is what was passed to the\n  // exception constructor. In our case, that's the id we want.\n  // TODO: I'm using 'join' to make sure we're not leaking a reference to the\n  // exception. This might be excessive, but I don't know enough about pyodide\n  // to be sure.\n  runPython(`\n  import sys\n  def __get_reset_id():\n    if sys.last_value and sys.last_value.args:\n      return \"\".join(str(sys.last_value.args[0]))\n    else:\n      return \"\"\n  `);\n  runPython(`\ndef print_exception():\n    from ast_helpers import format_exception\n    formatted = format_exception(exception=sys.last_value, traceback=sys.last_traceback, filename=\"<exec>\", new_filename=\"main.py\")\n    print(formatted)\n`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n  const printException = globals.get('print_exception') as PyProxy &\n    (() => string);\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n  const getResetId = globals.get('__get_reset_id') as PyProxy & (() => string);\n  return { runPython, getResetId, globals, printException };\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8207,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\python-worker.ts",
      "source_type": "git_repo"
    },
    "token_count": 431,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "e05e0c323468b884cafc4cb0544ee5df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\python-worker.ts",
    "source_type": "git_repo",
    "title": "python-worker",
    "content": "excessive, but I don't know enough about pyodide // to be sure. runPython(` import sys def __get_reset_id(): if sys.last_value and sys.last_value.args: return \"\".join(str(sys.last_value.args[0])) else: return \"\" `); runPython(` def print_exception(): from ast_helpers import format_exception formatted = format_exception(exception=sys.last_value, traceback=sys.last_traceback, filename=\"<exec>\", new_filename=\"main.py\") print(formatted) `); // eslint-disable-next-line @typescript-eslint/no-unsafe-call const printException = globals.get('print_exception') as PyProxy & (() => string); // eslint-disable-next-line @typescript-eslint/no-unsafe-call const getResetId = globals.get('__get_reset_id') as PyProxy & (() => string); return { runPython, getResetId, globals, printException }; }\n\nctx.onmessage = (e: PythonRunEvent | ListenRequestEvent | CancelEvent) => {\n  const { data } = e;\n  if (data.type === 'listen') {\n    handleListenRequest();\n  } else if (data.type === 'cancel') {\n    handleCancelRequest(data);\n  } else {\n    handleRunRequest(data);\n  }\n};\n\n// This lets the client know that there is nothing to cancel.\nfunction handleCancelRequest({ value }: { value: number }) {\n  postMessage({ type: 'is-alive', text: value });\n}\n\nfunction handleListenRequest() {\n  ignoreRunMessages = false;\n}\n\nfunction handleRunRequest(data: PythonRunEvent['data']) {\n  try {\n    if (ignoreRunMessages) return;\n    const code = (data.code.contents || '').slice();\n    // TODO: use reset-terminal for clarity?\n    postMessage({ type: 'reset' });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8207,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\python-worker.ts",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "871ae54c462e2f4dedea3187493207e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\python-worker.ts",
    "source_type": "git_repo",
    "title": "python-worker",
    "content": "{ handleListenRequest(); } else if (data.type === 'cancel') { handleCancelRequest(data); } else { handleRunRequest(data); } }; // This lets the client know that there is nothing to cancel. function handleCancelRequest({ value }: { value: number }) { postMessage({ type: 'is-alive', text: value }); } function handleListenRequest() { ignoreRunMessages = false; } function handleRunRequest(data: PythonRunEvent['data']) { try { if (ignoreRunMessages) return; const code = (data.code.contents || '').slice(); // TODO: use reset-terminal for clarity? postMessage({ type: 'reset' });\n\nconst { runPython, getResetId, globals, printException } = initRunPython();\n    // use pyodide.runPythonAsync if we want top-level await\n    try {\n      runPython(code);\n    } catch (e) {\n      const err = e as PythonError;\n      // the formatted exception is printed to the terminal\n      printException();\n      // but the full error is logged to the console for debugging\n      console.error(err);\n      const resetId = getResetId();\n      // TODO: if a user raises a KeyboardInterrupt with a custom message this\n      // will be treated as a reset, the client will resend their code and this\n      // will loop. Can we fix that? Perhaps by using a custom exception?\n      if (err.type === 'KeyboardInterrupt' && resetId) {\n        // If the client sends a lot of run messages, it's easy for them to build\n        // up while the worker is busy. As such, we both ignore any queued run\n        // messages...\n        ignoreRunMessages = true;\n        // ...and tell the client that we're ignoring them.\n        postMessage({ type: 'stopped', text: getResetId() });\n      }\n    } finally {\n      getResetId.destroy();\n      printException.destroy();\n      globals.destroy();\n    }\n  } catch (e) {\n    // This should only be reach if pyodide crashes, but it's helpful to log\n    // the error in case it's something else.\n    console.error(e);\n    void resetPyodide();\n  }\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8207,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\python-worker.ts",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "00c0c5c31a298511c55f727d6eb4f983",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\sass-compile.ts",
    "source_type": "git_repo",
    "title": "sass-compile",
    "content": "// work around for SASS error in Edge\n// https://github.com/medialize/sass.js/issues/96#issuecomment-424386171\ninterface WorkerWithSass extends Worker {\n  Sass: {\n    compile(data: unknown, callback: unknown): void;\n  };\n}\n\nconst ctx: WorkerWithSass & typeof globalThis =\n  self as unknown as WorkerWithSass & typeof globalThis;\n\nif (!ctx.crypto) {\n  (ctx.crypto as unknown) = {\n    getRandomValues: function (array: number[]) {\n      for (let i = 0, l = array.length; i < l; i++) {\n        array[i] = Math.floor(Math.random() * 256);\n      }\n      return array;\n    }\n  };\n}\n\nctx.importScripts('/js/sass.sync.js');\n\nctx.onmessage = e => {\n  const data: unknown = e.data;\n  ctx.Sass.compile(data, (result: Record<string, unknown>) => {\n    if (result.status === 0) {\n      ctx.postMessage(result.text);\n    } else {\n      ctx.postMessage({\n        type: 'error',\n        data: { message: result.formatted }\n      });\n    }\n  });\n};\n\nctx.postMessage({ type: 'contentLoaded' });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 977,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\sass-compile.ts",
      "source_type": "git_repo"
    },
    "token_count": 258,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0eb7ce6360f72eb6bec6295ab735e885",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\test-runner.ts",
    "source_type": "git_repo",
    "title": "test-runner",
    "content": "export type { FCCTestRunner } from '@freecodecamp/curriculum-helpers/test-runner.js';\n\nexport { version } from '@freecodecamp/curriculum-helpers/package.json';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 160,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\test-runner.ts",
      "source_type": "git_repo"
    },
    "token_count": 40,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e3bcebcf034408b73d7e4f9bee134fce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\tsconfig.json",
    "source_type": "git_repo",
    "title": "tsconfig",
    "content": "{\n  \"compilerOptions\": {\n    \"target\": \"es2022\",\n    \"module\": \"ESNext\",\n    \"moduleResolution\": \"Bundler\",\n    \"lib\": [\"WebWorker\", \"DOM\"],\n    \"allowJs\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"esModuleInterop\": true,\n    \"resolveJsonModule\": true,\n    \"noEmit\": true,\n    \"paths\": {\n      \"pyodide/ffi\": [\"./node_modules/pyodide/ffi.d.ts\"] // Remove after updating pyodide (later versions correctly export ffi)\n    }\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 463,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\tsconfig.json",
      "source_type": "git_repo"
    },
    "token_count": 137,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "aaa83f810ee1ffb7e80d929d6cf4dd38",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\typescript-worker.ts",
    "source_type": "git_repo",
    "title": "typescript-worker",
    "content": "import { type VirtualTypeScriptEnvironment } from '@typescript/vfs';\nimport type { CompilerOptions, CompilerHost } from 'typescript';\n\n// Most of the ts types are only a guideline. This is because we're not bundling\n// TS in this worker. The specific TS version is going to be determined by the\n// challenge (in general - it will be hardcoded in the MVP). So, the vfs types\n// should be correct, but ts may not be.\ndeclare const tsvfs: typeof import('@typescript/vfs');\ndeclare const createDefaultMapFromCDN: typeof import('@typescript/vfs').createDefaultMapFromCDN;\ndeclare const createVirtualCompilerHost: typeof import('@typescript/vfs').createVirtualCompilerHost;\ndeclare const ts: typeof import('typescript');\n\nconst ctx: Worker & typeof globalThis = self as unknown as Worker &\n  typeof globalThis;\n\ninterface TSCompileEvent extends MessageEvent {\n  data: {\n    type: 'compile';\n    code: string;\n  };\n}\n\ninterface TSCompiledMessage {\n  type: 'compiled';\n  value: string;\n  error: string;\n}\n\ninterface CheckIsReadyRequestEvent extends MessageEvent {\n  data: {\n    type: 'check-is-ready';\n  };\n}\n\ninterface CancelEvent extends MessageEvent {\n  data: {\n    type: 'cancel';\n    value: number;\n  };\n}\n\n// Pin at the latest TS version available as cdnjs doesn't support version range.\nconst TS_VERSION = '5.7.3';\n\nlet tsEnv: VirtualTypeScriptEnvironment | null = null;\nlet compilerHost: CompilerHost | null = null;\nlet cachedVersion: string | null = null;\n\n// NOTE: vfs.globals must only be imported once, otherwise it will throw.\nimportScripts(\n  'https://cdn.jsdelivr.net/npm/@typescript/vfs@1.6.0/dist/vfs.globals.js'\n);\n\nfunction importTS(version: string) {\n  if (cachedVersion == version) return;\n  importScripts(\n    `https://cdnjs.cloudflare.com/ajax/libs/typescript/${version}/typescript.min.js`\n  );\n  cachedVersion = version;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4939,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\typescript-worker.ts",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "8071a77834226f8a480949e455852474",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\typescript-worker.ts",
    "source_type": "git_repo",
    "title": "typescript-worker",
    "content": "type: 'cancel'; value: number; }; } // Pin at the latest TS version available as cdnjs doesn't support version range. const TS_VERSION = '5.7.3'; let tsEnv: VirtualTypeScriptEnvironment | null = null; let compilerHost: CompilerHost | null = null; let cachedVersion: string | null = null; // NOTE: vfs.globals must only be imported once, otherwise it will throw. importScripts( 'https://cdn.jsdelivr.net/npm/@typescript/vfs@1.6.0/dist/vfs.globals.js' ); function importTS(version: string) { if (cachedVersion == version) return; importScripts( `https://cdnjs.cloudflare.com/ajax/libs/typescript/${version}/typescript.min.js` ); cachedVersion = version; }\n\nasync function setupTypeScript() {\n  importTS(TS_VERSION);\n  const compilerOptions: CompilerOptions = {\n    target: ts.ScriptTarget.ES2015,\n    skipLibCheck: true // TODO: look into why this is needed. Are we doing something wrong? Could it be that it's not \"synced\"  with this TS version?\n    // from the docs: \"Note: it's possible for this list to get out of\n    // sync with TypeScript over time. It was last synced with TypeScript\n    // 3.8.0-rc.\"\n  };\n  const fsMap = await createDefaultMapFromCDN(\n    compilerOptions,\n    ts.version,\n    false, // TODO: cache this. It needs a store that's available to workers and implements https://github.com/microsoft/TypeScript-Website/blob/ac68b8b8e4a621113c4ee45c4051002fd55ede24/packages/typescript-vfs/src/index.ts#L11\n    ts\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4939,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\typescript-worker.ts",
      "source_type": "git_repo"
    },
    "token_count": 377,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "4d8bf332909f8590cc23696e255de31c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\typescript-worker.ts",
    "source_type": "git_repo",
    "title": "typescript-worker",
    "content": "look into why this is needed. Are we doing something wrong? Could it be that it's not \"synced\" with this TS version? // from the docs: \"Note: it's possible for this list to get out of // sync with TypeScript over time. It was last synced with TypeScript // 3.8.0-rc.\" }; const fsMap = await createDefaultMapFromCDN( compilerOptions, ts.version, false, // TODO: cache this. It needs a store that's available to workers and implements https://github.com/microsoft/TypeScript-Website/blob/ac68b8b8e4a621113c4ee45c4051002fd55ede24/packages/typescript-vfs/src/index.ts#L11 ts );\n\nconst system = tsvfs.createSystem(fsMap);\n  // TODO: if passed an invalid compiler options object (e.g. { module:\n  // ts.ModuleKind.CommonJS, moduleResolution: ts.ModuleResolutionKind.NodeNext\n  // }), this will throw. When we allow users to set compiler options, we should\n  // show them the diagnostics from this function.\n  const env = tsvfs.createVirtualTypeScriptEnvironment(\n    system,\n    [],\n    ts,\n    compilerOptions\n  );\n  compilerHost = createVirtualCompilerHost(\n    system,\n    compilerOptions,\n    ts\n  ).compilerHost;\n\ntsEnv = env;\n\n// We freeze this to prevent learners from getting the worker into a\n  // weird state.\n  Object.freeze(self);\n  return env;\n}\n\nctx.onmessage = (\n  e: TSCompileEvent | CheckIsReadyRequestEvent | CancelEvent\n) => {\n  const { data, ports } = e;\n  if (data.type === 'check-is-ready') {\n    void handleCheckIsReadyRequest(ports[0]);\n  } else if (data.type === 'cancel') {\n    handleCancelRequest(data);\n  } else {\n    handleCompileRequest(data, ports[0]);\n  }\n};\n\nconst isTSSetup = setupTypeScript();\n\n// This lets the client know that there is nothing to cancel.\nfunction handleCancelRequest({ value }: { value: number }) {\n  postMessage({ type: 'is-alive', text: value });\n}\n\nasync function handleCheckIsReadyRequest(port: MessagePort) {\n  await isTSSetup;\n  port.postMessage({ type: 'ready' });\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4939,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\typescript-worker.ts",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "12d0116ee531588c6f6051310b688794",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\typescript-worker.ts",
    "source_type": "git_repo",
    "title": "typescript-worker",
    "content": ") => { const { data, ports } = e; if (data.type === 'check-is-ready') { void handleCheckIsReadyRequest(ports[0]); } else if (data.type === 'cancel') { handleCancelRequest(data); } else { handleCompileRequest(data, ports[0]); } }; const isTSSetup = setupTypeScript(); // This lets the client know that there is nothing to cancel. function handleCancelRequest({ value }: { value: number }) { postMessage({ type: 'is-alive', text: value }); } async function handleCheckIsReadyRequest(port: MessagePort) { await isTSSetup; port.postMessage({ type: 'ready' }); }\n\nfunction handleCompileRequest(data: TSCompileEvent['data'], port: MessagePort) {\n  // If we try to update or create an empty file, the environment will become\n  // permanently unable to interact with that file. The workaround is to create\n  // a file with a single newline character.\n  const code = (data.code || '').slice() || '\\n';\n\n// TODO: If creating the file fresh each time is too slow, we can try checking\n  // if the file exists and updating it if it does.\n  tsEnv?.createFile('index.ts', code);\n\nconst program = tsEnv!.languageService.getProgram()!;\n\nconst emitOutput = tsEnv!.languageService.getEmitOutput('index.ts');\n  const compiled = emitOutput.outputFiles[0].text;\n\nconst message: TSCompiledMessage = {\n    type: 'compiled',\n    value: compiled,\n    // TODO: stop forcing the non-null assertions here.\n    error: ts.formatDiagnostics(\n      ts.getPreEmitDiagnostics(program),\n      compilerHost!\n    )\n  };\n\nport.postMessage(message);\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4939,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\typescript-worker.ts",
      "source_type": "git_repo"
    },
    "token_count": 372,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "3cb29df70cbc0ccf56a359a65a3ff067",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\gatsby-remark-node-identity\\gatsby-node.js",
    "source_type": "git_repo",
    "title": "gatsby-node",
    "content": "exports.onCreateNode = function remarkNodeIdentityOnCreateNode(\n  { node, reporter, actions },\n  { predicate, identity }\n) {\n  if (typeof predicate !== 'function') {\n    reporter.panic(\n      'Please supply a predicate function to `gatsby-remark-node-identity`'\n    );\n  }\n  if (typeof identity !== 'string' || identity.length === 0) {\n    reporter.panic(\n      '`gatsby-remark-node-identity` requires an identify string to add to nodes ' +\n        'that match the predicate'\n    );\n  }\n  const { createNodeField } = actions;\n  if (predicate(node)) {\n    createNodeField({ node, name: 'nodeIdentity', value: identity });\n  }\n  return node;\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 643,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\gatsby-remark-node-identity\\gatsby-node.js",
      "source_type": "git_repo"
    },
    "token_count": 157,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7199c94f7251f1cadb8eed544006557c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\gatsby-remark-node-identity\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"@freecodecamp/gatsby-remark-node-identity\",\n  \"version\": \"0.0.1\",\n  \"description\": \"The freeCodeCamp.org open-source codebase and curriculum\",\n  \"license\": \"BSD-3-Clause\",\n  \"private\": true,\n  \"engines\": {\n    \"node\": \">=16\",\n    \"pnpm\": \">=10\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/freeCodeCamp/freeCodeCamp.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/freeCodeCamp/freeCodeCamp/issues\"\n  },\n  \"homepage\": \"https://github.com/freeCodeCamp/freeCodeCamp#readme\",\n  \"author\": \"freeCodeCamp <team@freecodecamp.org>\",\n  \"main\": \"gatsby-node.js\"\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 603,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\gatsby-remark-node-identity\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 190,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1ab03699f1397cb6685ae7935776448c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\gatsby-source-challenges\\create-challenge-nodes.js",
    "source_type": "git_repo",
    "title": "create-challenge-nodes",
    "content": "const crypto = require('crypto');\n\nconst createdIds = new Set();\n\nfunction createChallengeNode(\n  challenge,\n  reporter,\n  { isReloading } = { isReloading: false }\n) {\n  const contentDigest = crypto\n    .createHash('md5')\n    .update(JSON.stringify(challenge))\n    .digest('hex');\n  const internal = {\n    contentDigest,\n    type: challenge.challengeType === 7 ? 'CertificateNode' : 'ChallengeNode'\n  };\n\nif (internal.type === 'ChallengeNode') {\n    const { tests = [], block, dashedName, superBlock } = challenge;\n    const slug = `/learn/${superBlock}/${block}/${dashedName}`;\n    const blockHashSlug = `/learn/${superBlock}/#${block}`;\n\nchallenge.fields = {\n      slug,\n      blockName: block,\n      tests,\n      blockHashSlug\n    };\n  }\n\n// Challenge id should be unique for CertificateNodes, but not for\n  // ChallengeNodes\n  const id =\n    internal.type === 'ChallengeNode' ? challenge.fields.slug : challenge.id;\n\nif (createdIds.has(id) && !isReloading) {\n    throw Error(`\n    Challenge slugs must be unique, but ${id} already exists.\n    `);\n  }\n  createdIds.add(id);\n\nreturn JSON.parse(\n    JSON.stringify(\n      Object.assign(\n        {},\n        {\n          children: [],\n          parent: null,\n          internal,\n          sourceInstanceName: 'challenge'\n        },\n        { challenge },\n        {\n          id\n        }\n      )\n    )\n  );\n}\n\nexports.createChallengeNode = createChallengeNode;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1422,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\gatsby-source-challenges\\create-challenge-nodes.js",
      "source_type": "git_repo"
    },
    "token_count": 335,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "55a2d9ec9521206192996e1924d01a9f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\gatsby-source-challenges\\gatsby-node.js",
    "source_type": "git_repo",
    "title": "gatsby-node",
    "content": "const path = require('path');\nconst chokidar = require('chokidar');\nconst readdirp = require('readdirp');\n\nconst { createChallengeNode } = require('./create-challenge-nodes');\n\nexports.sourceNodes = function sourceChallengesSourceNodes(\n  { actions, reporter },\n  pluginOptions\n) {\n  const { source, onSourceChange, curriculumPath } = pluginOptions;\n  if (typeof source !== 'function') {\n    reporter.panic(`\n    \"source\" is a required option for fcc-source-challenges. It must be a\n    function that delivers challenge objects to the plugin\n    `);\n  }\n  if (typeof onSourceChange !== 'function') {\n    reporter.panic(`\n    \"onSourceChange\" is a required option for fcc-source-challenges. It must be\n    a function that delivers a new challenge object to the plugin\n    `);\n  }\n  if (typeof curriculumPath !== 'string') {\n    reporter.panic(`\n    \"curriculumPath\" is a required option for fcc-source-challenges. It must be\n    a path to a curriculum directory\n    `);\n  }\n  const { createNode } = actions;\n  const watcher = chokidar.watch(curriculumPath, {\n    ignored: /(^|[/\\\\])\\../,\n    ignoreInitial: true,\n    persistent: true,\n    usePolling: true,\n    cwd: curriculumPath\n  });\n\nwatcher.on('change', filePath =>\n    /\\.md?$/.test(filePath)\n      ? onSourceChange(filePath)\n          .then(challenge => {\n            reporter.info(\n              `\nFile changed at ${filePath}, replacing challengeNode id ${challenge.id}\n              `\n            );\n            createVisibleChallenge(challenge, { isReloading: true });\n          })\n          .catch(e =>\n            reporter.error(`fcc-replace-challenge\n  attempting to replace ${filePath}\n\n${e.message}\n\n`)\n          )\n      : null\n  );",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3477,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\gatsby-source-challenges\\gatsby-node.js",
      "source_type": "git_repo"
    },
    "token_count": 404,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "9234f7410578ad20ad58731f7519e28c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\gatsby-source-challenges\\gatsby-node.js",
    "source_type": "git_repo",
    "title": "gatsby-node",
    "content": "option for fcc-source-challenges. It must be a path to a curriculum directory `); } const { createNode } = actions; const watcher = chokidar.watch(curriculumPath, { ignored: /(^|[/\\\\])\\../, ignoreInitial: true, persistent: true, usePolling: true, cwd: curriculumPath }); watcher.on('change', filePath => /\\.md?$/.test(filePath) ? onSourceChange(filePath) .then(challenge => { reporter.info( ` File changed at ${filePath}, replacing challengeNode id ${challenge.id} ` ); createVisibleChallenge(challenge, { isReloading: true }); }) .catch(e => reporter.error(`fcc-replace-challenge attempting to replace ${filePath} ${e.message} `) ) : null );\n\n// if a file is added, that might change the order of the challenges in the\n  // containing block, so we recreate them all\n  watcher.on('add', filePath => {\n    if (/\\.md?$/.test(filePath)) {\n      const blockPath = path.dirname(filePath);\n      const fullBlockPath = path.join(\n        __dirname,\n        '../../../curriculum/challenges/english/',\n        blockPath\n      );\n      readdirp(fullBlockPath, { fileFilter: '*.md' })\n        .on('data', entry => {\n          const { path: siblingPath } = entry;\n          const relativePath = path.join(blockPath, siblingPath);\n          onSourceChange(relativePath)\n            .then(challenge => {\n              reporter.info(\n                `\nFile changed at ${relativePath}, replacing challengeNode id ${challenge.id}\n            `\n              );\n              createVisibleChallenge(challenge);\n            })\n            .catch(e =>\n              reporter.error(`fcc-replace-challenge\nattempting to replace ${relativePath}\n\n${e.message}\n\n`)\n            );\n        })\n        .on('warn', error => console.error('non-fatal error', error))\n        .on('error', error => console.error('fatal error', error));\n    }\n  });\n\nfunction sourceAndCreateNodes() {\n    return source()\n      .then(challenges => Promise.all(challenges))\n      .then(challenges =>\n        challenges.map(challenge => createVisibleChallenge(challenge))\n      )\n      .catch(e => {\n        console.log(e);\n        reporter.panic(`fcc-source-challenges\n\n${e.message}\n\n`);\n      });\n  }",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3477,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\gatsby-source-challenges\\gatsby-node.js",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5b05ce89c4ddb46246efe1aa180d7b8b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\gatsby-source-challenges\\gatsby-node.js",
    "source_type": "git_repo",
    "title": "gatsby-node",
    "content": "path: siblingPath } = entry; const relativePath = path.join(blockPath, siblingPath); onSourceChange(relativePath) .then(challenge => { reporter.info( ` File changed at ${relativePath}, replacing challengeNode id ${challenge.id} ` ); createVisibleChallenge(challenge); }) .catch(e => reporter.error(`fcc-replace-challenge attempting to replace ${relativePath} ${e.message} `) ); }) .on('warn', error => console.error('non-fatal error', error)) .on('error', error => console.error('fatal error', error)); } }); function sourceAndCreateNodes() { return source() .then(challenges => Promise.all(challenges)) .then(challenges => challenges.map(challenge => createVisibleChallenge(challenge)) ) .catch(e => { console.log(e); reporter.panic(`fcc-source-challenges ${e.message} `); }); }\n\nfunction createVisibleChallenge(challenge, options) {\n    createNode(createChallengeNode(challenge, reporter, options));\n  }\n\nreturn new Promise((resolve, reject) => {\n    watcher.on('ready', () => sourceAndCreateNodes().then(resolve, reject));\n  });\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3477,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\gatsby-source-challenges\\gatsby-node.js",
      "source_type": "git_repo"
    },
    "token_count": 239,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "3a18cb3ae82782f3c46ddb04b47c2ad5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\gatsby-source-challenges\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"@freecodecamp/gatsby-source-challenges\",\n  \"version\": \"0.0.1\",\n  \"description\": \"The freeCodeCamp.org open-source codebase and curriculum\",\n  \"license\": \"BSD-3-Clause\",\n  \"private\": true,\n  \"engines\": {\n    \"node\": \">=16\",\n    \"pnpm\": \">=10\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/freeCodeCamp/freeCodeCamp.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/freeCodeCamp/freeCodeCamp/issues\"\n  },\n  \"homepage\": \"https://github.com/freeCodeCamp/freeCodeCamp#readme\",\n  \"author\": \"freeCodeCamp <team@freecodecamp.org>\",\n  \"main\": \"gatsby-node.js\",\n  \"devDependencies\": {\n    \"chokidar\": \"3.6.0\",\n    \"readdirp\": \"3.6.0\"\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 677,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\gatsby-source-challenges\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "74ebda8d47714bd89003fc8548b11abf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\utils\\format.js",
    "source_type": "git_repo",
    "title": "format",
    "content": "// TODO: this is a straight up copy of the format function from the client.\n// Figure out a way to share it.\n\nimport { inspect } from 'util/util.js';\n\nexport function format(x) {\n  // we're trying to mimic console.log, so we avoid wrapping strings in quotes:\n  if (typeof x === 'string') return x;\n  else if (x instanceof Set) {\n    return `Set(${x.size}) {${Array.from(x).join(', ')}}`;\n  } else if (x instanceof Map) {\n    return `Map(${x.size}) {${Array.from(\n      x.entries(),\n      ([k, v]) => `${k} => ${v}`\n    ).join(', ')}})`;\n  } else if (typeof x === 'bigint') {\n    return x.toString() + 'n';\n  } else if (typeof x === 'symbol') {\n    return x.toString();\n  }\n  return inspect(x);\n}",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 696,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\client-plugins\\browser-scripts\\utils\\format.js",
      "source_type": "git_repo"
    },
    "token_count": 195,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0f1ba5b7d4183309dbce659d02b93f0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\index.acceptance.test.js",
    "source_type": "git_repo",
    "title": "index.acceptance.test",
    "content": "const path = require('path');\n\nconst { parseMD } = require('.');\n\ndescribe('challenge parser', () => {\n  it('should parse a simple md file', async () => {\n    const parsed = await parseMD(\n      path.resolve(__dirname, '__fixtures__/simple.md')\n    );\n    expect(parsed).toMatchSnapshot();\n  });\n\nit('should parse a more realistic md file', async () => {\n    const parsed = await parseMD(\n      path.resolve(__dirname, '__fixtures__/realistic.md')\n    );\n    expect(parsed).toMatchSnapshot();\n  });\n\nit('should import md from other files', async () => {\n    const parsed = await parseMD(\n      path.resolve(__dirname, '__fixtures__/with-imports.md')\n    );\n    expect(parsed).toMatchSnapshot();\n  });\n\nit('should parse frontmatter', async () => {\n    const parsed = await parseMD(\n      path.resolve(__dirname, '__fixtures__/with-frontmatter.md')\n    );\n    expect(parsed).toMatchSnapshot();\n  });\n\nit('should parse gfm strikethrough and frontmatter', async () => {\n    const parsed = await parseMD(\n      path.resolve(__dirname, '__fixtures__/with-gfm.md')\n    );\n    expect(parsed).toMatchSnapshot();\n  });\n\nit('should not mix other YAML with the frontmatter', async () => {\n    const parsed = await parseMD(\n      path.resolve(__dirname, '__fixtures__/with-yaml.md')\n    );\n    expect(parsed).toMatchSnapshot();\n  });\n\nit('it should parse video questions', async () => {\n    const parsed = await parseMD(\n      path.resolve(__dirname, '__fixtures__/with-video-question.md')\n    );\n    expect(parsed).toMatchSnapshot();\n  });\n\nit('it should not parse directives we do not use', async () => {\n    const parsed = await parseMD(\n      path.resolve(__dirname, '__fixtures__/with-directives.md')\n    );\n    expect(parsed).toMatchSnapshot();\n  });\n\nit('it should parse md with a scene', async () => {\n    const parsed = await parseMD(\n      path.resolve(__dirname, '__fixtures__/scene.md')\n    );\n    expect(parsed).toMatchSnapshot();\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1957,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\index.acceptance.test.js",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "26ad0239ec736c4a337fd4794ceaf7ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\index.js",
    "source_type": "git_repo",
    "title": "index",
    "content": "const directive = require('remark-directive');\nconst frontmatter = require('remark-frontmatter');\nconst remark = require('remark-parse');\nconst { readSync } = require('to-vfile');\nconst unified = require('unified');\nconst addFillInTheBlank = require('./plugins/add-fill-in-the-blank');\nconst addFrontmatter = require('./plugins/add-frontmatter');\nconst validateSections = require('./plugins/validate-sections');\nconst addSeed = require('./plugins/add-seed');\nconst addSolution = require('./plugins/add-solution');\nconst addHooks = require('./plugins/add-hooks');\nconst addTests = require('./plugins/add-tests');\nconst addText = require('./plugins/add-text');\nconst addVideoQuestion = require('./plugins/add-video-question');\nconst addAssignment = require('./plugins/add-assignment');\nconst replaceImports = require('./plugins/replace-imports');\nconst restoreDirectives = require('./plugins/restore-directives');\nconst tableAndStrikeThrough = require('./plugins/table-and-strikethrough');\nconst addScene = require('./plugins/add-scene');\nconst addQuizzes = require('./plugins/add-quizzes');",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3406,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\index.js",
      "source_type": "git_repo"
    },
    "token_count": 226,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "583604fb4d3a9736f94407a7c5823199",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\index.js",
    "source_type": "git_repo",
    "title": "index",
    "content": "= require('remark-frontmatter'); const remark = require('remark-parse'); const { readSync } = require('to-vfile'); const unified = require('unified'); const addFillInTheBlank = require('./plugins/add-fill-in-the-blank'); const addFrontmatter = require('./plugins/add-frontmatter'); const validateSections = require('./plugins/validate-sections'); const addSeed = require('./plugins/add-seed'); const addSolution = require('./plugins/add-solution'); const addHooks = require('./plugins/add-hooks'); const addTests = require('./plugins/add-tests'); const addText = require('./plugins/add-text'); const addVideoQuestion = require('./plugins/add-video-question'); const addAssignment = require('./plugins/add-assignment'); const replaceImports = require('./plugins/replace-imports'); const restoreDirectives = require('./plugins/restore-directives'); const tableAndStrikeThrough = require('./plugins/table-and-strikethrough'); const addScene = require('./plugins/add-scene'); const addQuizzes = require('./plugins/add-quizzes');\n\n// by convention, anything that adds to file.data has the name add<name>.\nconst processor = unified()\n  // add the remark parser\n  .use(remark)\n  // modify the parser so that Github flavour tables and strikethroughs get\n  // converted to 'delete' nodes\n  .use(tableAndStrikeThrough)\n  // directives are parsed into 'leafDirective' nodes and used for imports\n  .use(directive)\n  // convert the text at the top of the document (surrounded by ---) into a\n  // 'yaml' node\n  .use(frontmatter, ['yaml'])\n  // extract the content from that 'yaml' node\n  .use(addFrontmatter)\n  // validate all section markers before any plugin tries to extract sections\n  .use(validateSections)\n  // Any imports will be replaced (in the tree) with\n  // the sub-tree of the target file. e.g.\n  // ::import{component=\"Script\" from=\"./file.path\" }\n  // means that file.path's tree will be inserted wherever\n  // ::use{component=\"Script\"}\n  // appears.\n  .use(replaceImports)\n  // the final five 'add' plugins insert content into file.data\n  // TODO: rename test->hint everywhere? It should make things easier to reason\n  // about.\n  .use(addSeed)\n  .use(addSolution)\n  // the directives will have been parsed and used by this point, any remaining\n  // 'directives' will be from text like the css selector :root. These should be\n  // converted back to text before they're added to the challenge object.\n  .use(restoreDirectives)\n  .use(addFillInTheBlank)\n  .use(addVideoQuestion)\n  .use(addAssignment)\n  .use(addScene)\n  .use(addQuizzes)\n  .use(addHooks)\n  .use(addTests)\n  .use(addText, [\n    'description',\n    'instructions',\n    'notes',\n    'explanation',\n    'transcript'\n  ]);",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3406,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\index.js",
      "source_type": "git_repo"
    },
    "token_count": 644,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "c855a4b8c52e15a111e76afa714a2763",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\index.js",
    "source_type": "git_repo",
    "title": "index",
    "content": "insert content into file.data // TODO: rename test->hint everywhere? It should make things easier to reason // about. .use(addSeed) .use(addSolution) // the directives will have been parsed and used by this point, any remaining // 'directives' will be from text like the css selector :root. These should be // converted back to text before they're added to the challenge object. .use(restoreDirectives) .use(addFillInTheBlank) .use(addVideoQuestion) .use(addAssignment) .use(addScene) .use(addQuizzes) .use(addHooks) .use(addTests) .use(addText, [ 'description', 'instructions', 'notes', 'explanation', 'transcript' ]);\n\nexports.parseMD = function parseMD(filename) {\n  return new Promise((resolve, reject) => {\n    const file = readSync(filename);\n    const tree = processor.parse(file);\n\nprocessor.run(tree, file, function (err, node, file) {\n      if (!err) {\n        resolve(file.data);\n      } else {\n        err.message += ' in file ' + filename;\n        reject(err);\n      }\n    });\n  });\n};\n\nexports.parseMDSync = function parseMDSync(filename) {\n  const file = readSync(filename);\n  const tree = processor.parse(file);\n  try {\n    processor.runSync(tree, file);\n  } catch (err) {\n    err.message += ' in file ' + filename;\n    throw err;\n  }\n  return file.data;\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3406,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\index.js",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "8f8ba38b29c7e7317519d6e8176dcf63",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.js",
    "source_type": "git_repo",
    "title": "index",
    "content": "const { cloneDeep } = require('lodash');\n\nexports.translateComments = (text, lang, dict, codeLang) => {\n  const knownComments = Object.keys(dict);\n  const config = { knownComments, dict, lang };\n  const input = { text };\n  switch (codeLang) {\n    case 'js':\n    case 'jsx':\n      return transMultiline(transInline(input, config), config);\n    case 'html':\n      return transScript(transHTML(transCSS(input, config), config), config);\n    default:\n      return input;\n  }\n};\n\nexports.translateCommentsInChallenge = (challenge, lang, dict) => {\n  const challClone = cloneDeep(challenge);\n  if (challClone?.challengeFiles) {\n    challClone.challengeFiles.forEach(challengeFile => {\n      if (challengeFile.contents) {\n        let { text } = this.translateComments(\n          challengeFile.contents,\n          lang,\n          dict,\n          challengeFile.ext\n        );\n        challengeFile.contents = text;\n      }\n    });\n  }\n  return challClone;\n};\n\n// bare urls could be interpreted as comments, so we have to lookbehind for\n// http:// or https://\nfunction transInline(input, config) {\n  return translateGeneric(input, config, '((?<!https?:)//\\\\s*)', '(\\\\s*$)');\n}\n\nfunction transMultiline(input, config) {\n  return translateGeneric(input, config, '(/\\\\*\\\\s*)', '(\\\\s*\\\\*/)');\n}\n\n// CSS has to be handled separately since it is looking for comments inside tags\nfunction transCSS({ text }, config) {\n  const regex = /<style>.*?<\\/style>/gms;\n  const matches = text.matchAll(regex);\n\nfor (const [match] of matches) {\n    let { text: styleText } = transMultiline({ text: match }, config);\n    text = text.replace(match, styleText);\n  }\n  return { text };\n}\n\nfunction transScript({ text }, config) {\n  const regex = /<script>.*?<\\/script>/gms;\n  const matches = text.matchAll(regex);\n\nfor (const [match] of matches) {\n    let { text: scriptText } = transMultiline(\n      transInline({ text: match }, config),\n      config\n    );\n    text = text.replace(match, scriptText);\n  }\n  return { text };\n}",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2829,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.js",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "51a071579976b500e5e4ad81dccebd75",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.js",
    "source_type": "git_repo",
    "title": "index",
    "content": "/<style>.*?<\\/style>/gms; const matches = text.matchAll(regex); for (const [match] of matches) { let { text: styleText } = transMultiline({ text: match }, config); text = text.replace(match, styleText); } return { text }; } function transScript({ text }, config) { const regex = /<script>.*?<\\/script>/gms; const matches = text.matchAll(regex); for (const [match] of matches) { let { text: scriptText } = transMultiline( transInline({ text: match }, config), config ); text = text.replace(match, scriptText); } return { text }; }\n\nfunction transHTML(input, config) {\n  return translateGeneric(input, config, '(<!--\\\\s*)', '(\\\\s*--!?>)');\n}\n\nfunction translateGeneric({ text }, config, regexBefore, regexAfter) {\n  const { knownComments, dict, lang } = config;\n  const regex = new RegExp(regexBefore + '(.*?)' + regexAfter, 'gms');\n  const matches = text.matchAll(regex);\n\nfor (const [match, before, comment, after] of matches) {\n    if (knownComments.includes(comment)) {\n      text = text.replace(match, `${before}${dict[comment][lang]}${after}`);\n    } else if (comment.trim()) {\n      throw `The comment\n${comment}\ndoes not appear in the comment dictionary.\nWhen updating or adding a comment it must have the same text in the English challenges and the comment dictionary.\n`;\n    }\n  }\n\nreturn { text };\n}\n\nexports.translateGeneric = translateGeneric;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2829,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.js",
      "source_type": "git_repo"
    },
    "token_count": 338,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f2706a3f22d7b88c48b938b96b502144",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
    "source_type": "git_repo",
    "title": "index.test",
    "content": "const {\n  ENGLISH_CHALLENGE_NO_FILES\n} = require('./__fixtures__/challenge-objects');\nconst { SIMPLE_TRANSLATION } = require('./__mocks__/mock-comments');\nconst {\n  translateComments,\n  translateCommentsInChallenge,\n  translateGeneric\n} = require('.');\n\nlet logSpy;\n\ndescribe('translation parser', () => {\n  beforeEach(() => {\n    logSpy = jest.spyOn(console, 'warn').mockImplementation();\n  });\n  afterEach(() => {\n    logSpy.mockRestore();\n  });\n\ndescribe('translateGeneric', () => {\n    it('returns an object containing translated text', () => {\n      expect.assertions(1);\n      const seed = `//  Add your code below this line\n      Add your code above this line `;\n      const transSeed = `//  (Chinese) Add your code below this line (Chinese)\n      Add your code above this line `;\n      const knownComments = Object.keys(SIMPLE_TRANSLATION);\n      const config = {\n        knownComments,\n        dict: SIMPLE_TRANSLATION,\n        lang: 'chinese'\n      };\n      const actual = translateGeneric(\n        { text: seed },\n        config,\n        '((?<!https?:)//\\\\s*)',\n        '(\\\\s*$)'\n      );\n      expect(actual.text).toBe(transSeed);\n    });\n  });\n\ndescribe('translateCommentsInChallenge', () => {\n    it('returns a clone of the challenge if there are no comments', () => {\n      expect(\n        translateCommentsInChallenge(\n          ENGLISH_CHALLENGE_NO_FILES,\n          'chinese',\n          SIMPLE_TRANSLATION\n        )\n      ).toEqual(ENGLISH_CHALLENGE_NO_FILES);\n    });\n  });\n  describe('translateComments', () => {\n    it('replaces single line English comments with their translations', () => {\n      const seed = `//  Add your code below this line\n         Add your code above this line `;\n      const transSeed = `//  (Chinese) Add your code below this line (Chinese)\n         Add your code above this line `;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'js').text\n      ).toBe(transSeed);\n    });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 12477,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
      "source_type": "git_repo"
    },
    "token_count": 448,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "9433d04332f7174ff0aa4423f7af911f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
    "source_type": "git_repo",
    "title": "index.test",
    "content": "challenge if there are no comments', () => { expect( translateCommentsInChallenge( ENGLISH_CHALLENGE_NO_FILES, 'chinese', SIMPLE_TRANSLATION ) ).toEqual(ENGLISH_CHALLENGE_NO_FILES); }); }); describe('translateComments', () => { it('replaces single line English comments with their translations', () => { const seed = `// Add your code below this line Add your code above this line `; const transSeed = `// (Chinese) Add your code below this line (Chinese) Add your code above this line `; expect( translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'js').text ).toBe(transSeed); });\n\nit('does not translate urls', () => {\n      const seed = `http:// Add your code below this line\n      Add your code above this line `;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'js').text\n      ).toBe(seed);\n      const seedS = `https:// Add your code below this line\n      Add your code above this line `;\n      expect(\n        translateComments(seedS, 'chinese', SIMPLE_TRANSLATION, 'js').text\n      ).toBe(seedS);\n    });\n\nit('replaces inline English comments with their translations', () => {\n      const seed = `inline comment //  Add your code below this line\n         Add your code above this line `;\n      const transSeed = `inline comment //  (Chinese) Add your code below this line (Chinese)\n         Add your code above this line `;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'js').text\n      ).toBe(transSeed);\n    });\n\nit('replaces multiple English comments with their translations', () => {\n      const seed = `inline comment //  Add your code below this line\n         // Add your code below this line `;\n      const transSeed = `inline comment //  (Chinese) Add your code below this line (Chinese)\n         // (Chinese) Add your code below this line (Chinese) `;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'js').text\n      ).toBe(transSeed);\n    });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 12477,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "e93fc1803027322ae74a4b62654284bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
    "source_type": "git_repo",
    "title": "index.test",
    "content": "(Chinese) Add your code above this line `; expect( translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'js').text ).toBe(transSeed); }); it('replaces multiple English comments with their translations', () => { const seed = `inline comment // Add your code below this line // Add your code below this line `; const transSeed = `inline comment // (Chinese) Add your code below this line (Chinese) // (Chinese) Add your code below this line (Chinese) `; expect( translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'js').text ).toBe(transSeed); });\n\nit('replaces multiline English comments with their translations', () => {\n      const seed = `multiline comment /*  Add your code below this line */\n         /* Add your code above this line */ change code below this line  `;\n      const transSeed = `multiline comment /*  (Chinese) Add your code below this line (Chinese) */\n         /* (Chinese) Add your code above this line (Chinese) */ change code below this line  `;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'js').text\n      ).toBe(transSeed);\n    });\n\nit('replaces repeated multiline comments with their translations', () => {\n      const seed = `multiline comment /*  Add your code below this line */\n         /* Add your code below this line */ change code below this line  `;\n      const transSeed = `multiline comment /*  (Chinese) Add your code below this line (Chinese) */\n         /* (Chinese) Add your code below this line (Chinese) */ change code below this line  `;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'js').text\n      ).toBe(transSeed);\n    });\n\nit('ignores empty comments', () => {\n      expect.assertions(1);\n      const seed = '//';\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'js').text\n      ).toBe(seed);\n    });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 12477,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
      "source_type": "git_repo"
    },
    "token_count": 421,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "d42fd19f78f5512c9cdb5cba6cb5dff1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
    "source_type": "git_repo",
    "title": "index.test",
    "content": "your code below this line */ /* Add your code below this line */ change code below this line `; const transSeed = `multiline comment /* (Chinese) Add your code below this line (Chinese) */ /* (Chinese) Add your code below this line (Chinese) */ change code below this line `; expect( translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'js').text ).toBe(transSeed); }); it('ignores empty comments', () => { expect.assertions(1); const seed = '//'; expect( translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'js').text ).toBe(seed); });\n\nit('only replaces text inside comments, not between them', () => {\n      const seed = `multiline comment /*  Add your code below this line */\n         /* Add your code above this line */ Add your code below this line /* */  `;\n      const transSeed = `multiline comment /*  (Chinese) Add your code below this line (Chinese) */\n         /* (Chinese) Add your code above this line (Chinese) */ Add your code below this line /* */  `;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'js').text\n      ).toBe(transSeed);\n\nconst seedTwo = `multiline /* */  Add your code below this line /* */  `;\n      expect(\n        translateComments(seedTwo, 'chinese', SIMPLE_TRANSLATION, 'js').text\n      ).toBe(seedTwo);\n    });\n\nit('replaces English html comments with their translations', () => {\n      const seed = `<div> <!--  Add your code below this line -->\n         <!-- Add your code above this line --> <span>change code below this line</span>  `;\n      const transSeed = `<div> <!--  (Chinese) Add your code below this line (Chinese) -->\n         <!-- (Chinese) Add your code above this line (Chinese) --> <span>change code below this line</span>  `;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'html').text\n      ).toBe(transSeed);\n    });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 12477,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "3a700a0067f615fc84d036a7d54f5745",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
    "source_type": "git_repo",
    "title": "index.test",
    "content": "'js').text ).toBe(seedTwo); }); it('replaces English html comments with their translations', () => { const seed = `<div> <!-- Add your code below this line --> <!-- Add your code above this line --> <span>change code below this line</span> `; const transSeed = `<div> <!-- (Chinese) Add your code below this line (Chinese) --> <!-- (Chinese) Add your code above this line (Chinese) --> <span>change code below this line</span> `; expect( translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'html').text ).toBe(transSeed); });\n\nit('replaces css comments with their translations', () => {\n      const seed = `<style>\n        /* Add your code below this line */\n      </style>`;\n      const transSeed = `<style>\n        /* (Chinese) Add your code below this line (Chinese) */\n      </style>`;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'html').text\n      ).toBe(transSeed);\n    });\n\nit('replaces multiple css comments with their translations', () => {\n      const seed = `<style>\n        /* Add your code below this line */\n        /* Add your code below this line */\n      </style>`;\n      const transSeed = `<style>\n        /* (Chinese) Add your code below this line (Chinese) */\n        /* (Chinese) Add your code below this line (Chinese) */\n      </style>`;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'html')\n      ).toEqual({ text: transSeed });\n    });\n\nit('ignores css comments outside style tags', () => {\n      const seed = `/* Add your code below this line */`;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'html').text\n      ).toBe(seed);\n    });\n\nit('ignores css comments between style tags', () => {\n      const seed = `<style>\n      </style>\n      /* Add your code below this line */\n      <style>\n      </style>`;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'html').text\n      ).toBe(seed);\n    });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 12477,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "bbcc145c819dbfe3a1ac6e9d698ab691",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
    "source_type": "git_repo",
    "title": "index.test",
    "content": "your code below this line (Chinese) */ </style>`; expect( translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'html') ).toEqual({ text: transSeed }); }); it('ignores css comments outside style tags', () => { const seed = `/* Add your code below this line */`; expect( translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'html').text ).toBe(seed); }); it('ignores css comments between style tags', () => { const seed = `<style> </style> /* Add your code below this line */ <style> </style>`; expect( translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'html').text ).toBe(seed); });\n\nit('only replaces inside English html comments', () => {\n      const seed = `<div> <!-- -->  Add your code below this line <!-- -->`;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'html').text\n      ).toBe(seed);\n    });\n\nit('replaces English JSX comments with their translations', () => {\n      const seed = `{ /*  Add your code below this line */ }\n      { /* Add your code above this line */ } <span>change code below this line</span>  `;\n      const transSeed = `{ /*  (Chinese) Add your code below this line (Chinese) */ }\n      { /* (Chinese) Add your code above this line (Chinese) */ } <span>change code below this line</span>  `;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'jsx').text\n      ).toBe(transSeed);\n    });\n\nit('replaces English script comments with their translations', () => {\n      const seed = `<script>\n        // Add your code below this line\n      </script>`;\n      const transSeed = `<script>\n        // (Chinese) Add your code below this line (Chinese)\n      </script>`;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'html').text\n      ).toBe(transSeed);\n    });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 12477,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "2858149a421aa884b0b9738e6f325d2a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
    "source_type": "git_repo",
    "title": "index.test",
    "content": "your code below this line (Chinese) */ } { /* (Chinese) Add your code above this line (Chinese) */ } <span>change code below this line</span> `; expect( translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'jsx').text ).toBe(transSeed); }); it('replaces English script comments with their translations', () => { const seed = `<script> // Add your code below this line </script>`; const transSeed = `<script> // (Chinese) Add your code below this line (Chinese) </script>`; expect( translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'html').text ).toBe(transSeed); });\n\nit('replaces multiple script comments with their translations', () => {\n      const seed = `<script>\n        /* Add your code below this line */\n        // Add your code below this line\n      </script>`;\n      const transSeed = `<script>\n        /* (Chinese) Add your code below this line (Chinese) */\n        // (Chinese) Add your code below this line (Chinese)\n      </script>`;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'html').text\n      ).toBe(transSeed);\n    });\n\nit('ignores html comments inside JavaScript', () => {\n      const seed = `<div> <!--  Add your code below this line\n         Add your code above this line --> <span>change code below this line</span>  `;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'js').text\n      ).toBe(seed);\n    });\n\nit('ignores html comments inside jsx', () => {\n      const seed = `<div> <!--  Add your code below this line\n         Add your code above this line --> <span>change code below this line</span>  `;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'jsx').text\n      ).toBe(seed);\n    });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 12477,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "4f56dbc43d7d65305f1cae9e283056fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
    "source_type": "git_repo",
    "title": "index.test",
    "content": "comments inside JavaScript', () => { const seed = `<div> <!-- Add your code below this line Add your code above this line --> <span>change code below this line</span> `; expect( translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'js').text ).toBe(seed); }); it('ignores html comments inside jsx', () => { const seed = `<div> <!-- Add your code below this line Add your code above this line --> <span>change code below this line</span> `; expect( translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'jsx').text ).toBe(seed); });\n\nit('throws if there is not an exact match (js)', () => {\n      expect.assertions(2);\n      const seedMulti = `/*  Add your code below this line\n      Add your code above this line */ <span>change code below this line</span>  `;\n      const seedInline = `// Add your code below this line, please`;\n      expect(() =>\n        translateComments(seedMulti, 'chinese', SIMPLE_TRANSLATION, 'js')\n      ).toThrow();\n      expect(() =>\n        translateComments(seedInline, 'chinese', SIMPLE_TRANSLATION, 'js')\n      ).toThrow();\n    });\n\nit('only replaces exact matches (jsx)', () => {\n      expect.assertions(1);\n      const seedMulti = `{ /*  Add your code below this line\n      Add your code above this line */ } <span>change code below this line</span>  `;\n      expect(() =>\n        translateComments(seedMulti, 'chinese', SIMPLE_TRANSLATION, 'jsx')\n      ).toThrow();\n    });\n\nit('only replaces exact matches (html)', () => {\n      expect.assertions(1);\n      const seed = `<div> <!--  Add your code below this line\n       Add your code above this line --> <span>change code below this line</span>  `;\n\nexpect(() =>\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'html')\n      ).toThrow();\n    });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 12477,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "273d5149664ad88054745184efb0d649",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
    "source_type": "git_repo",
    "title": "index.test",
    "content": "{ expect.assertions(1); const seedMulti = `{ /* Add your code below this line Add your code above this line */ } <span>change code below this line</span> `; expect(() => translateComments(seedMulti, 'chinese', SIMPLE_TRANSLATION, 'jsx') ).toThrow(); }); it('only replaces exact matches (html)', () => { expect.assertions(1); const seed = `<div> <!-- Add your code below this line Add your code above this line --> <span>change code below this line</span> `; expect(() => translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'html') ).toThrow(); });\n\nit('only translates jsx comments once', () => {\n      const seed = `{ /*  Add your code below this line */ }`;\n      const transSeed = `{ /*  (Chinese) Add your code below this line (Chinese) */ }`;\n      expect(\n        translateComments(seed, 'chinese', SIMPLE_TRANSLATION, 'jsx').text\n      ).toBe(transSeed);\n    });\n\nit('throws if the comment is not in the dictionary', () => {\n      expect.assertions(6);\n      const seedJSX = `{ /* this is not a comment */ }`;\n      const seedInline = `// this is not a comment `;\n      const seedMulti = `/* this is not a comment */`;\n      const seedCSS = `<style>\n      /* this is not a comment */\n    </style>`;\n      const seedHTML = `<div> <!--  this is not a comment --> `;\n      const seedScript = `<script> // this is not a comment </script>`;\n\nexpect(() =>\n        translateComments(seedJSX, 'chinese', SIMPLE_TRANSLATION, 'jsx')\n      ).toThrow();\n      expect(() =>\n        translateComments(seedInline, 'chinese', SIMPLE_TRANSLATION, 'js')\n      ).toThrow();\n      expect(() =>\n        translateComments(seedMulti, 'chinese', SIMPLE_TRANSLATION, 'js')\n      ).toThrow();\n      expect(() =>\n        translateComments(seedCSS, 'chinese', SIMPLE_TRANSLATION, 'html')\n      ).toThrow();\n      expect(() =>\n        translateComments(seedHTML, 'chinese', SIMPLE_TRANSLATION, 'html')\n      ).toThrow();\n      expect(() =>\n        translateComments(seedScript, 'chinese', SIMPLE_TRANSLATION, 'html')\n      ).toThrow();\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 12477,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\index.test.js",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "a0992518933cf518361dc947312ee10f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\__fixtures__\\challenge-objects.js",
    "source_type": "git_repo",
    "title": "challenge-objects",
    "content": "const ENGLISH_CHALLENGE_NO_FILES = {\n  id: 'id',\n  title: 'Title',\n  challengeType: 0,\n  videoUrl: 'https://scrimba.com/',\n  forumTopicId: 12345,\n  tests: [\n    {\n      text: 'Test text',\n      testString: 'assertions'\n    },\n    {\n      text: 'Test text2',\n      testString: 'assertions2'\n    }\n  ],\n  solutions: ['solution html string'],\n  description: 'description html string',\n  instructions: 'instructions html string',\n  challengeFiles: []\n};\n\nexports.ENGLISH_CHALLENGE_NO_FILES = ENGLISH_CHALLENGE_NO_FILES;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 516,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\__fixtures__\\challenge-objects.js",
      "source_type": "git_repo"
    },
    "token_count": 143,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "741c6da5c0a5347f85c4e47d1abaa4ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\__mocks__\\mock-comments.js",
    "source_type": "git_repo",
    "title": "mock-comments",
    "content": "const SIMPLE_TRANSLATION = {\n  'Add your code below this line': {\n    chinese: '(Chinese) Add your code below this line (Chinese)'\n  },\n  'Add your code above this line': {\n    chinese: '(Chinese) Add your code above this line (Chinese)'\n  },\n  'change code below this line': {\n    chinese: '(Chinese) change code below this line (Chinese)'\n  },\n  'change code above this line': {\n    chinese: '(Chinese) change code above this line (Chinese)'\n  }\n};\n\nexports.SIMPLE_TRANSLATION = SIMPLE_TRANSLATION;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 501,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\translation-parser\\__mocks__\\mock-comments.js",
      "source_type": "git_repo"
    },
    "token_count": 122,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ced09d5dcfed409742240e800c60385a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-assignment.js",
    "source_type": "git_repo",
    "title": "add-assignment",
    "content": "const { getSection } = require('./utils/get-section');\n\nconst mdastToHtml = require('./utils/mdast-to-html');\nconst { splitOnThematicBreak } = require('./utils/split-on-thematic-break');\n\nfunction plugin() {\n  return transformer;\n\nfunction transformer(tree, file) {\n    const assignmentNodes = getSection(tree, '--assignment--');\n\nconst assignment = getAssignments(assignmentNodes).filter(a => a != '');\n\nfile.data.assignments = assignment;\n  }\n\nfunction getAssignments(assignmentNodes) {\n    const assignmentGroups = splitOnThematicBreak(assignmentNodes);\n\nreturn assignmentGroups.map(assignment => mdastToHtml(assignment));\n  }\n}\n\nmodule.exports = plugin;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 674,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-assignment.js",
      "source_type": "git_repo"
    },
    "token_count": 143,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "58b3eda6e4e2b9e8a327d60f61ea8664",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.js",
    "source_type": "git_repo",
    "title": "add-fill-in-the-blank",
    "content": "const { root } = require('mdast-builder');\nconst find = require('unist-util-find');\nconst visit = require('unist-util-visit');\nconst { getSection } = require('./utils/get-section');\nconst getAllBefore = require('./utils/before-heading');\nconst mdastToHtml = require('./utils/mdast-to-html');\n\nconst { splitOnThematicBreak } = require('./utils/split-on-thematic-break');\n\nconst NOT_IN_PARAGRAPHS = `Each inline code block in the fillInTheBlank sentence section must in its own paragraph\nIf you have more than one code block, check that they're separated by a blank line\nExample of bad formatting:\n\\`too close\\`\n\\`to each other\\`\n\nExample of good formatting:\n\\`separated\\`\n\n\\`by a blank line\\`\n\n`;\n\nconst NOT_IN_CODE_BLOCK = `Each paragraph in the fillInTheBlank sentence section must be inside an inline code block\nExample of bad formatting:\n## --sentence--\n\nThis is a sentence\n\nExample of good formatting:\n## --sentence--\n\n\\`This is a sentence\\`\n\n`;\n\nfunction plugin() {\n  return transformer;\n  function transformer(tree, file) {\n    const fillInTheBlankNodes = getSection(tree, '--fillInTheBlank--');\n    if (fillInTheBlankNodes.length > 0) {\n      const fillInTheBlankTree = root(fillInTheBlankNodes);\n\nvalidateBlanksCount(fillInTheBlankTree);\n\nconst sentenceNodes = getSection(fillInTheBlankTree, '--sentence--');\n      const blanksNodes = getSection(fillInTheBlankTree, '--blanks--');\n\nconst fillInTheBlank = getfillInTheBlank(sentenceNodes, blanksNodes);\n\nfile.data.fillInTheBlank = fillInTheBlank;\n    }\n  }\n}\n\nfunction validateBlanksCount(fillInTheBlankTree) {\n  let blanksCount = 0;\n  visit(fillInTheBlankTree, { value: '--blanks--' }, () => {\n    blanksCount++;\n  });\n\nif (blanksCount !== 1)\n    throw Error(\n      `There should only be one --blanks-- section in the fillInTheBlank challenge`\n    );\n}",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3375,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.js",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "0c4f93025af3a40b5e8bebb98fa93942",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.js",
    "source_type": "git_repo",
    "title": "add-fill-in-the-blank",
    "content": "function transformer(tree, file) { const fillInTheBlankNodes = getSection(tree, '--fillInTheBlank--'); if (fillInTheBlankNodes.length > 0) { const fillInTheBlankTree = root(fillInTheBlankNodes); validateBlanksCount(fillInTheBlankTree); const sentenceNodes = getSection(fillInTheBlankTree, '--sentence--'); const blanksNodes = getSection(fillInTheBlankTree, '--blanks--'); const fillInTheBlank = getfillInTheBlank(sentenceNodes, blanksNodes); file.data.fillInTheBlank = fillInTheBlank; } } } function validateBlanksCount(fillInTheBlankTree) { let blanksCount = 0; visit(fillInTheBlankTree, { value: '--blanks--' }, () => { blanksCount++; }); if (blanksCount !== 1) throw Error( `There should only be one --blanks-- section in the fillInTheBlank challenge` ); }\n\nfunction getfillInTheBlank(sentenceNodes, blanksNodes) {\n  const sentenceWithoutCodeBlocks = sentenceNodes.map(node => {\n    node.children.forEach(child => {\n      if (child.type === 'text' && child.value.trim() === '')\n        throw Error(NOT_IN_PARAGRAPHS);\n      if (child.type !== 'inlineCode') throw Error(NOT_IN_CODE_BLOCK);\n    });\n\nconst children = node.children.map(child => ({ ...child, type: 'text' }));\n    return { ...node, children };\n  });\n  const sentence = mdastToHtml(sentenceWithoutCodeBlocks);\n  const blanks = getBlanks(blanksNodes);\n\nif (!sentence) throw Error('sentence is missing from fill in the blank');\n  if (!blanks) throw Error('blanks are missing from fill in the blank');\n  if (sentence.match(/BLANK/g).length !== blanks.length)\n    throw Error(\n      `Number of underscores in sentence doesn't match the number of blanks`\n    );\n\nreturn { sentence, blanks };\n}\n\nfunction getBlanks(blanksNodes) {\n  const blanksGroups = splitOnThematicBreak(blanksNodes);\n\nreturn blanksGroups.map(blanksGroup => {\n    const blanksTree = root(blanksGroup);\n    const feedback = find(blanksTree, { value: '--feedback--' });\n\nif (feedback) {\n      const blanksNodes = getAllBefore(blanksTree, '--feedback--');\n      const feedbackNodes = getSection(blanksTree, '--feedback--');",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3375,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.js",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "6a437938b0d9fd462d9cc041a8eddbd1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.js",
    "source_type": "git_repo",
    "title": "add-fill-in-the-blank",
    "content": "from fill in the blank'); if (!blanks) throw Error('blanks are missing from fill in the blank'); if (sentence.match(/BLANK/g).length !== blanks.length) throw Error( `Number of underscores in sentence doesn't match the number of blanks` ); return { sentence, blanks }; } function getBlanks(blanksNodes) { const blanksGroups = splitOnThematicBreak(blanksNodes); return blanksGroups.map(blanksGroup => { const blanksTree = root(blanksGroup); const feedback = find(blanksTree, { value: '--feedback--' }); if (feedback) { const blanksNodes = getAllBefore(blanksTree, '--feedback--'); const feedbackNodes = getSection(blanksTree, '--feedback--');\n\nreturn {\n        answer: blanksNodes[0].children[0].value,\n        feedback: mdastToHtml(feedbackNodes)\n      };\n    }\n\nreturn { answer: blanksGroup[0].children[0].value, feedback: null };\n  });\n}\n\nmodule.exports = plugin;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3375,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.js",
      "source_type": "git_repo"
    },
    "token_count": 210,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "dbefa589796d575171ac4276f81893d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.test.js",
    "source_type": "git_repo",
    "title": "add-fill-in-the-blank.test",
    "content": "const parseFixture = require('../__fixtures__/parse-fixture');\nconst addFillInTheBlankQuestion = require('./add-fill-in-the-blank');\n\ndescribe('fill-in-the-blanks plugin', () => {\n  let mockFillInTheBlankAST,\n    mockFillInTheBlankYouAreAST,\n    mockFillInTheBlankTwoSentencesAST,\n    mockFillInTheBlankBadSentence,\n    mockFillInTheBlankBadParagraph,\n    mockFillInTheBlankMultipleBlanks;\n  const plugin = addFillInTheBlankQuestion();\n  let file = { data: {} };\n\nbeforeAll(async () => {\n    mockFillInTheBlankAST = await parseFixture('with-fill-in-the-blank.md');\n    mockFillInTheBlankYouAreAST = await parseFixture(\n      'with-fill-in-the-blank-one-blank.md'\n    );\n    mockFillInTheBlankTwoSentencesAST = await parseFixture(\n      'with-fill-in-the-blank-two-sentences.md'\n    );\n    mockFillInTheBlankBadSentence = await parseFixture(\n      'with-fill-in-the-blank-bad-sentence.md'\n    );\n    mockFillInTheBlankBadParagraph = await parseFixture(\n      'with-fill-in-the-blank-bad-paragraph.md'\n    );\n    mockFillInTheBlankMultipleBlanks = await parseFixture(\n      'with-fill-in-the-blank-many-blanks.md'\n    );\n  });\n\nbeforeEach(() => {\n    file = { data: {} };\n  });\n\nit('returns a function', () => {\n    expect(typeof plugin).toEqual('function');\n  });\n\nit('adds a `fillInTheBlank` property to `file.data`', () => {\n    plugin(mockFillInTheBlankAST, file);\n    expect('fillInTheBlank' in file.data).toBe(true);\n  });\n\nit('should generate a fillInTheBlank object from a fill-in-the-blank challenge AST', () => {\n    plugin(mockFillInTheBlankAST, file);\n    const testObject = file.data.fillInTheBlank;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 5651,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.test.js",
      "source_type": "git_repo"
    },
    "token_count": 404,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "ba3d804656a6d6dbf68594d714509eeb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.test.js",
    "source_type": "git_repo",
    "title": "add-fill-in-the-blank.test",
    "content": "await parseFixture( 'with-fill-in-the-blank-two-sentences.md' ); mockFillInTheBlankBadSentence = await parseFixture( 'with-fill-in-the-blank-bad-sentence.md' ); mockFillInTheBlankBadParagraph = await parseFixture( 'with-fill-in-the-blank-bad-paragraph.md' ); mockFillInTheBlankMultipleBlanks = await parseFixture( 'with-fill-in-the-blank-many-blanks.md' ); }); beforeEach(() => { file = { data: {} }; }); it('returns a function', () => { expect(typeof plugin).toEqual('function'); }); it('adds a `fillInTheBlank` property to `file.data`', () => { plugin(mockFillInTheBlankAST, file); expect('fillInTheBlank' in file.data).toBe(true); }); it('should generate a fillInTheBlank object from a fill-in-the-blank challenge AST', () => { plugin(mockFillInTheBlankAST, file); const testObject = file.data.fillInTheBlank;\n\nexpect(Object.keys(testObject).length).toBe(2);\n    expect(testObject).toHaveProperty('sentence');\n    expect(typeof testObject.sentence).toBe('string');\n    expect(testObject).toHaveProperty('blanks');\n    expect(Array.isArray(testObject.blanks)).toBe(true);\n    expect(testObject.blanks.length).toBe(3);\n    expect(testObject.blanks[0]).toHaveProperty('answer');\n    expect(typeof testObject.blanks[0].answer).toBe('string');\n    expect(testObject.blanks[0]).toHaveProperty('feedback');\n    expect(typeof testObject.blanks[0].feedback).toBe('string');\n    expect(testObject.blanks[1]).toHaveProperty('answer');\n    expect(typeof testObject.blanks[1].answer).toBe('string');\n    expect(testObject.blanks[1]).toHaveProperty('feedback');\n    expect(typeof testObject.blanks[1].feedback).toBe('string');\n    expect(testObject.blanks[2]).toHaveProperty('answer');\n    expect(typeof testObject.blanks[2].answer).toBe('string');\n    expect(testObject.blanks[2]).toHaveProperty('feedback');\n    expect(testObject.blanks[2].feedback).toBeNull();\n  });\n\nit('should convert feedback markdown into html', () => {\n    plugin(mockFillInTheBlankAST, file);\n    const testObject = file.data.fillInTheBlank;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 5651,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.test.js",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "d57f6b62e88cab633261ee61f6c104ab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.test.js",
    "source_type": "git_repo",
    "title": "add-fill-in-the-blank.test",
    "content": "plugin).toEqual('function'); }); it('adds a `fillInTheBlank` property to `file.data`', () => { plugin(mockFillInTheBlankAST, file); expect('fillInTheBlank' in file.data).toBe(true); }); it('should generate a fillInTheBlank object from a fill-in-the-blank challenge AST', () => { plugin(mockFillInTheBlankAST, file); const testObject = file.data.fillInTheBlank; expect(Object.keys(testObject).length).toBe(2); expect(testObject).toHaveProperty('sentence'); expect(typeof testObject.sentence).toBe('string'); expect(testObject).toHaveProperty('blanks'); expect(Array.isArray(testObject.blanks)).toBe(true); expect(testObject.blanks.length).toBe(3); expect(testObject.blanks[0]).toHaveProperty('answer'); expect(typeof testObject.blanks[0].answer).toBe('string'); expect(testObject.blanks[0]).toHaveProperty('feedback'); expect(typeof testObject.blanks[0].feedback).toBe('string'); expect(testObject.blanks[1]).toHaveProperty('answer'); expect(typeof testObject.blanks[1].answer).toBe('string'); expect(testObject.blanks[1]).toHaveProperty('feedback'); expect(typeof testObject.blanks[1].feedback).toBe('string'); expect(testObject.blanks[2]).toHaveProperty('answer'); expect(typeof testObject.blanks[2].answer).toBe('string'); expect(testObject.blanks[2]).toHaveProperty('feedback'); expect(testObject.blanks[2].feedback).toBeNull(); }); it('should convert feedback markdown into html', () => { plugin(mockFillInTheBlankAST, file); const testObject = file.data.fillInTheBlank;\n\nexpect(testObject.blanks[0]).toStrictEqual({\n      answer: 'are',\n      feedback:\n        '<p>The verb <code>to be</code> is an irregular verb. ' +\n        'When conjugated with the pronoun <code>you</code>, <code>be</code> ' +\n        'becomes <code>are</code>. For example: <code>You are an English learner.</code></p>'\n    });\n\nexpect(testObject.blanks[1]).toStrictEqual({\n      answer: 'right',\n      feedback: '<p>Feedback 2</p>'\n    });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 5651,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.test.js",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "28e80bac379bab8d3f707225045778be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.test.js",
    "source_type": "git_repo",
    "title": "add-fill-in-the-blank.test",
    "content": "expect(testObject).toHaveProperty('blanks'); expect(Array.isArray(testObject.blanks)).toBe(true); expect(testObject.blanks.length).toBe(3); expect(testObject.blanks[0]).toHaveProperty('answer'); expect(typeof testObject.blanks[0].answer).toBe('string'); expect(testObject.blanks[0]).toHaveProperty('feedback'); expect(typeof testObject.blanks[0].feedback).toBe('string'); expect(testObject.blanks[1]).toHaveProperty('answer'); expect(typeof testObject.blanks[1].answer).toBe('string'); expect(testObject.blanks[1]).toHaveProperty('feedback'); expect(typeof testObject.blanks[1].feedback).toBe('string'); expect(testObject.blanks[2]).toHaveProperty('answer'); expect(typeof testObject.blanks[2].answer).toBe('string'); expect(testObject.blanks[2]).toHaveProperty('feedback'); expect(testObject.blanks[2].feedback).toBeNull(); }); it('should convert feedback markdown into html', () => { plugin(mockFillInTheBlankAST, file); const testObject = file.data.fillInTheBlank; expect(testObject.blanks[0]).toStrictEqual({ answer: 'are', feedback: '<p>The verb <code>to be</code> is an irregular verb. ' + 'When conjugated with the pronoun <code>you</code>, <code>be</code> ' + 'becomes <code>are</code>. For example: <code>You are an English learner.</code></p>' }); expect(testObject.blanks[1]).toStrictEqual({ answer: 'right', feedback: '<p>Feedback 2</p>' });\n\nexpect(testObject.blanks[2]).toStrictEqual({\n      answer: 'Nice',\n      feedback: null\n    });\n  });\n\nit('should extract the sentence from the surrounding inline code block', () => {\n    plugin(mockFillInTheBlankAST, file);\n    const testObject = file.data.fillInTheBlank;\n\nexpect(testObject.sentence).toBe(\n      '<p>Hello, You BLANK the new graphic designer, BLANK? BLANK to meet you!</p>'\n    );\n  });\n\nit('should extract sentences from multiple inline code blocks', () => {\n    plugin(mockFillInTheBlankTwoSentencesAST, file);\n    const testObject = file.data.fillInTheBlank;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 5651,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.test.js",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "c057036a8d3b2b712842e686a1d2ce44",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.test.js",
    "source_type": "git_repo",
    "title": "add-fill-in-the-blank.test",
    "content": "+ 'becomes <code>are</code>. For example: <code>You are an English learner.</code></p>' }); expect(testObject.blanks[1]).toStrictEqual({ answer: 'right', feedback: '<p>Feedback 2</p>' }); expect(testObject.blanks[2]).toStrictEqual({ answer: 'Nice', feedback: null }); }); it('should extract the sentence from the surrounding inline code block', () => { plugin(mockFillInTheBlankAST, file); const testObject = file.data.fillInTheBlank; expect(testObject.sentence).toBe( '<p>Hello, You BLANK the new graphic designer, BLANK? BLANK to meet you!</p>' ); }); it('should extract sentences from multiple inline code blocks', () => { plugin(mockFillInTheBlankTwoSentencesAST, file); const testObject = file.data.fillInTheBlank;\n\nexpect(testObject.sentence).toBe(\n      `<p>A sentence BLANK paragraph 1</p>\n<p>Sentence in BLANK 2</p>`\n    );\n  });\n\nit('should throw if a sentence is not inside an inline code block', () => {\n    expect(() => {\n      plugin(mockFillInTheBlankBadSentence, file);\n    }).toThrow(\n      `Each paragraph in the fillInTheBlank sentence section must be inside an inline code block\nExample of bad formatting:\n## --sentence--\n\nThis is a sentence\n\nExample of good formatting:\n## --sentence--\n\n\\`This is a sentence\\`\n\n`\n    );\n  });\n\nit('should throw if there are multiple inline code blocks in the same paragraph', () => {\n    expect(() => {\n      plugin(mockFillInTheBlankBadParagraph, file);\n    }).toThrow(\n      `Each inline code block in the fillInTheBlank sentence section must in its own paragraph\nIf you have more than one code block, check that they're separated by a blank line\nExample of bad formatting:\n\\`too close\\`\n\\`to each other\\`\n\nExample of good formatting:\n\\`separated\\`\n\n\\`by a blank line\\`\n\n`\n    );\n  });\n\nit('should throw if there are multiple --blanks-- sections', () => {\n    // TODO: Check if this is too wordy\n    expect(() => {\n      plugin(mockFillInTheBlankMultipleBlanks, file);\n    }).toThrow(\n      `There should only be one --blanks-- section in the fillInTheBlank challenge`\n    );\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 5651,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.test.js",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "9a3590e30c2f591c3288365852f71c90",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.test.js",
    "source_type": "git_repo",
    "title": "add-fill-in-the-blank.test",
    "content": "paragraph If you have more than one code block, check that they're separated by a blank line Example of bad formatting: \\`too close\\` \\`to each other\\` Example of good formatting: \\`separated\\` \\`by a blank line\\` ` ); }); it('should throw if there are multiple --blanks-- sections', () => { // TODO: Check if this is too wordy expect(() => { plugin(mockFillInTheBlankMultipleBlanks, file); }).toThrow( `There should only be one --blanks-- section in the fillInTheBlank challenge` ); });\n\nit('should handle one blank', () => {\n    plugin(mockFillInTheBlankYouAreAST, file);\n    const testObject = file.data.fillInTheBlank;\n\nexpect(testObject.blanks[0]).toStrictEqual({\n      answer: 'are',\n      feedback:\n        '<p>The verb <code>to be</code> is an irregular verb. When conjugated with the pronoun <code>you</code>, <code>be</code> becomes <code>are</code>. For example: <code>You are an English learner.</code></p>'\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 5651,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-fill-in-the-blank.test.js",
      "source_type": "git_repo"
    },
    "token_count": 240,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "746935917f1c88d28428e4d04006e1ed",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-frontmatter.js",
    "source_type": "git_repo",
    "title": "add-frontmatter",
    "content": "const YAML = require('js-yaml');\nconst visit = require('unist-util-visit');\n\nfunction plugin() {\n  return transformer;\n\nfunction transformer(tree, file) {\n    visit(tree, 'yaml', visitor);\n\nfunction visitor(node) {\n      const frontmatter = YAML.load(node.value);\n\nfile.data = { ...file.data, ...frontmatter };\n    }\n  }\n}\n\nmodule.exports = plugin;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 361,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-frontmatter.js",
      "source_type": "git_repo"
    },
    "token_count": 80,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9885e36dcbb6882b683aa898d89ab92e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-frontmatter.test.js",
    "source_type": "git_repo",
    "title": "add-frontmatter.test",
    "content": "const { isObject } = require('lodash');\n\nconst parse = require('../__fixtures__/parse-fixture');\nconst processFrontmatter = require('./add-frontmatter');\n\ndescribe('process-frontmatter plugin', () => {\n  let mockAST;\n\nbeforeAll(async () => {\n    mockAST = await parse('with-frontmatter.md');\n  });\n\nconst plugin = processFrontmatter();\n  let file = { data: {} };\n  beforeEach(() => {\n    file = { data: {} };\n  });\n\nit('should return a plugin which is a function', () => {\n    expect(typeof plugin).toEqual('function');\n  });\n\nit('should maintain an object for the `file.data` property', () => {\n    plugin(mockAST, file);\n    expect(isObject(file.data)).toBe(true);\n  });\n\n// And no others. The AST includes some yaml code, and this also\n  // checks that none of those keys get parsed\n  it('should add all keys from frontmatter to the `file.data` property', () => {\n    const expectedKeys = [\n      'id',\n      'title',\n      'challengeType',\n      'isHidden',\n      'videoUrl',\n      'forumTopicId'\n    ];\n    plugin(mockAST, file);\n    const actualKeys = Object.keys(file.data);\n    expect(actualKeys).toEqual(expectedKeys);\n  });\n\nit('should not mutate any type held in the frontmatter', () => {\n    plugin(mockAST, file);\n    const { id, title, challengeType, videoUrl, forumTopicId } = file.data;\n    expect(typeof id).toEqual('string');\n    expect(typeof title).toEqual('string');\n    expect(typeof challengeType).toEqual('number');\n    expect(typeof videoUrl).toEqual('string');\n    expect(typeof forumTopicId).toEqual('number');\n  });\n\nit('should trim extra whitespace from keys and values', () => {\n    plugin(mockAST, file);\n    const whitespaceRE = /(^\\s\\S+|\\S\\s$)/;\n    const keys = Object.keys(file.data);\n    keys.forEach(key => expect(whitespaceRE.test(key)).toBe(false));\n    const values = keys.map(key => file.data[key]);\n    values\n      .filter(value => typeof value === 'string')\n      .forEach(value => expect(whitespaceRE.test(value)).toBe(false));\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2329,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-frontmatter.test.js",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3fed93b804318093063aa1e6d1e2c47f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-frontmatter.test.js",
    "source_type": "git_repo",
    "title": "add-frontmatter.test",
    "content": "it('should not mutate any type held in the frontmatter', () => { plugin(mockAST, file); const { id, title, challengeType, videoUrl, forumTopicId } = file.data; expect(typeof id).toEqual('string'); expect(typeof title).toEqual('string'); expect(typeof challengeType).toEqual('number'); expect(typeof videoUrl).toEqual('string'); expect(typeof forumTopicId).toEqual('number'); }); it('should trim extra whitespace from keys and values', () => { plugin(mockAST, file); const whitespaceRE = /(^\\s\\S+|\\S\\s$)/; const keys = Object.keys(file.data); keys.forEach(key => expect(whitespaceRE.test(key)).toBe(false)); const values = keys.map(key => file.data[key]); values .filter(value => typeof value === 'string') .forEach(value => expect(whitespaceRE.test(value)).toBe(false)); });\n\nit('should not mutate url strings', () => {\n    const expectedUrl = 'https://scrimba.com/p/pVMPUv/cE8Gpt2';\n    plugin(mockAST, file);\n    expect(file.data.videoUrl).toEqual(expectedUrl);\n  });\n\nit('should have an output to match the snapshot', () => {\n    plugin(mockAST, file);\n    expect(file.data).toMatchSnapshot();\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2329,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-frontmatter.test.js",
      "source_type": "git_repo"
    },
    "token_count": 270,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "433f1ede1f0f7cc3557886c1e752db60",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-hooks.js",
    "source_type": "git_repo",
    "title": "add-hooks",
    "content": "const { getSection } = require('./utils/get-section');\n\nfunction plugin() {\n  return transformer;\n\nfunction transformer(tree, file) {\n    const beforeAll = getHook(tree, '--before-all--');\n    const beforeEach = getHook(tree, '--before-each--');\n    const afterEach = getHook(tree, '--after-each--');\n\nif (!beforeAll && !beforeEach && !afterEach) return;\n\nfile.data.hooks = file.data.hooks = {\n      ...(beforeAll && { beforeAll }),\n      ...(beforeEach && { beforeEach }),\n      ...(afterEach && { afterEach })\n    };\n  }\n}\n\nfunction getHook(tree, sectionName) {\n  const section = getSection(tree, sectionName);\n\nif (section.length === 0) return;\n  if (section.length > 1)\n    throw Error(\n      `# ${sectionName} section must only contain a single code block`\n    );\n\nconst codeNode = section[0];\n\nif (codeNode.type !== 'code')\n    throw Error(`# ${sectionName} section must contain a code block`);\n  if (codeNode.lang !== 'javascript' && codeNode.lang !== 'js')\n    throw Error(`# ${sectionName} hook must be written in JavaScript`);\n\nreturn codeNode.value;\n}\n\nmodule.exports = plugin;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1107,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-hooks.js",
      "source_type": "git_repo"
    },
    "token_count": 264,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9d1ebb3ac5f2f259bf327deeef5f7629",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-hooks.test.js",
    "source_type": "git_repo",
    "title": "add-hooks.test",
    "content": "const parseFixture = require('../__fixtures__/parse-fixture');\n\nconst addBeforeHook = require('./add-hooks');\n\ndescribe('add-before-hook plugin', () => {\n  let withBeforeHookAST,\n    withInvalidHookAST,\n    withAnotherInvalidHookAST,\n    withNonJSHookAST,\n    withBeforeEachHookAST,\n    withInvalidBeforeEachHookAST,\n    withAnotherInvalidBeforeEachHookAST,\n    withNonJSBeforeEachHookAST,\n    withAfterEachHookAST,\n    withInvalidAfterEachHookAST,\n    withAnotherInvalidAfterEachHookAST,\n    withNonJSAfterEachHookAST;\n\nconst plugin = addBeforeHook();\n  let file = { data: {} };\n\nbeforeAll(async () => {\n    withBeforeHookAST = await parseFixture('with-before-hook.md');\n    withInvalidHookAST = await parseFixture('with-invalid-before-hook.md');\n    withAnotherInvalidHookAST = await parseFixture(\n      'with-another-invalid-before-hook.md'\n    );\n    withNonJSHookAST = await parseFixture('with-non-js-before-hook.md');\n    withBeforeEachHookAST = await parseFixture('with-before-each-hook.md');\n    withInvalidBeforeEachHookAST = await parseFixture(\n      'with-invalid-before-each-hook.md'\n    );\n    withAnotherInvalidBeforeEachHookAST = await parseFixture(\n      'with-another-invalid-before-each-hook.md'\n    );\n    withNonJSBeforeEachHookAST = await parseFixture(\n      'with-non-js-before-each-hook.md'\n    );\n    withAfterEachHookAST = await parseFixture('with-after-each-hook.md');\n    withInvalidAfterEachHookAST = await parseFixture(\n      'with-invalid-after-each-hook.md'\n    );\n    withAnotherInvalidAfterEachHookAST = await parseFixture(\n      'with-another-invalid-after-each-hook.md'\n    );\n    withNonJSAfterEachHookAST = await parseFixture(\n      'with-non-js-after-each-hook.md'\n    );\n  });\n\nbeforeEach(() => {\n    file = { data: {} };\n  });\n\nit('returns a function', () => {\n    expect(typeof plugin).toEqual('function');\n  });\n\nit('adds a `hooks` property to `file.data`', () => {\n    plugin(withBeforeHookAST, file);\n    expect('hooks' in file.data).toBe(true);\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 4993,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-hooks.test.js",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "18e9da999c91f2b2fc000b8a70ae01b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-hooks.test.js",
    "source_type": "git_repo",
    "title": "add-hooks.test",
    "content": "parseFixture('with-before-each-hook.md'); withInvalidBeforeEachHookAST = await parseFixture( 'with-invalid-before-each-hook.md' ); withAnotherInvalidBeforeEachHookAST = await parseFixture( 'with-another-invalid-before-each-hook.md' ); withNonJSBeforeEachHookAST = await parseFixture( 'with-non-js-before-each-hook.md' ); withAfterEachHookAST = await parseFixture('with-after-each-hook.md'); withInvalidAfterEachHookAST = await parseFixture( 'with-invalid-after-each-hook.md' ); withAnotherInvalidAfterEachHookAST = await parseFixture( 'with-another-invalid-after-each-hook.md' ); withNonJSAfterEachHookAST = await parseFixture( 'with-non-js-after-each-hook.md' ); }); beforeEach(() => { file = { data: {} }; }); it('returns a function', () => { expect(typeof plugin).toEqual('function'); }); it('adds a `hooks` property to `file.data`', () => { plugin(withBeforeHookAST, file); expect('hooks' in file.data).toBe(true); });\n\nit('populates `hooks.beforeAll` with the contents of the code block', () => {\n    plugin(withBeforeHookAST, file);\n    expect(file.data.hooks.beforeAll).toBe(`// before all code\nfunction foo() {\n  return 'bar';\n}\nfoo();`);\n  });\n\nit('should throw an error if the beforeAll section has more than one child', () => {\n    expect(() => plugin(withInvalidHookAST, file)).toThrow(\n      `# --before-all-- section must only contain a single code block`\n    );\n  });\n\nit('should throw an error if the beforeAll section does not contain a code block', () => {\n    expect(() => plugin(withAnotherInvalidHookAST, file)).toThrow(\n      `# --before-all-- section must contain a code block`\n    );\n  });\n\nit('should throw an error if the code language is not javascript', () => {\n    expect(() => plugin(withNonJSHookAST, file)).toThrow(\n      `# --before-all-- hook must be written in JavaScript`\n    );\n  });\n\nit('should have an output to match the snapshot', () => {\n    plugin(withBeforeHookAST, file);\n    expect(file.data).toMatchSnapshot();\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 4993,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-hooks.test.js",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "150b620a7ac598f96213bf9c05e7eb58",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-hooks.test.js",
    "source_type": "git_repo",
    "title": "add-hooks.test",
    "content": "); }); it('should throw an error if the beforeAll section does not contain a code block', () => { expect(() => plugin(withAnotherInvalidHookAST, file)).toThrow( `# --before-all-- section must contain a code block` ); }); it('should throw an error if the code language is not javascript', () => { expect(() => plugin(withNonJSHookAST, file)).toThrow( `# --before-all-- hook must be written in JavaScript` ); }); it('should have an output to match the snapshot', () => { plugin(withBeforeHookAST, file); expect(file.data).toMatchSnapshot(); });\n\nit('populates `hooks.beforeEach` with the contents of the code block', () => {\n    plugin(withBeforeEachHookAST, file);\n    expect(file.data.hooks.beforeEach).toBe(`// before each code\nfunction setup() {\n  return 'initialized';\n}\nsetup();`);\n  });\n\nit('should throw an error if the beforeEach section has more than one child', () => {\n    expect(() => plugin(withInvalidBeforeEachHookAST, file)).toThrow(\n      `# --before-each-- section must only contain a single code block`\n    );\n  });\n\nit('should throw an error if the beforeEach section does not contain a code block', () => {\n    expect(() => plugin(withAnotherInvalidBeforeEachHookAST, file)).toThrow(\n      `# --before-each-- section must contain a code block`\n    );\n  });\n\nit('should throw an error if the beforeEach code language is not javascript', () => {\n    expect(() => plugin(withNonJSBeforeEachHookAST, file)).toThrow(\n      `# --before-each-- hook must be written in JavaScript`\n    );\n  });\n\nit('populates `hooks.afterEach` with the contents of the code block', () => {\n    plugin(withAfterEachHookAST, file);\n    expect(file.data.hooks.afterEach).toBe(`// after each code\nfunction cleanup() {\n  return 'cleaned up';\n}\ncleanup();`);\n  });\n\nit('should throw an error if the afterEach section has more than one child', () => {\n    expect(() => plugin(withInvalidAfterEachHookAST, file)).toThrow(\n      `# --after-each-- section must only contain a single code block`\n    );\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 4993,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-hooks.test.js",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "ff0d64a1c02ba99954aea4c34664071e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-hooks.test.js",
    "source_type": "git_repo",
    "title": "add-hooks.test",
    "content": "() => { expect(() => plugin(withNonJSBeforeEachHookAST, file)).toThrow( `# --before-each-- hook must be written in JavaScript` ); }); it('populates `hooks.afterEach` with the contents of the code block', () => { plugin(withAfterEachHookAST, file); expect(file.data.hooks.afterEach).toBe(`// after each code function cleanup() { return 'cleaned up'; } cleanup();`); }); it('should throw an error if the afterEach section has more than one child', () => { expect(() => plugin(withInvalidAfterEachHookAST, file)).toThrow( `# --after-each-- section must only contain a single code block` ); });\n\nit('should throw an error if the afterEach section does not contain a code block', () => {\n    expect(() => plugin(withAnotherInvalidAfterEachHookAST, file)).toThrow(\n      `# --after-each-- section must contain a code block`\n    );\n  });\n\nit('should throw an error if the afterEach code language is not javascript', () => {\n    expect(() => plugin(withNonJSAfterEachHookAST, file)).toThrow(\n      `# --after-each-- hook must be written in JavaScript`\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 4993,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-hooks.test.js",
      "source_type": "git_repo"
    },
    "token_count": 256,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "9e4c9ddb4dfed6e5d2e62f50e851b351",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-quizzes.js",
    "source_type": "git_repo",
    "title": "add-quizzes",
    "content": "const { root } = require('mdast-builder');\nconst { getSection, getAllSections } = require('./utils/get-section');\nconst mdastToHtml = require('./utils/mdast-to-html');\n\nconst { splitOnThematicBreak } = require('./utils/split-on-thematic-break');\n\nfunction plugin() {\n  return transformer;\n  function transformer(tree, file) {\n    const quizzesNodes = getSection(tree, `--quizzes--`);\n\nif (quizzesNodes.length > 0) {\n      const compiledQuizzes = [];\n      const quizSections = getAllSections(root(quizzesNodes), `--quiz--`);\n\nif (quizSections.length === 0) {\n        throw Error(\n          'The --quizzes-- section should contain at least one quiz.'\n        );\n      }\n\nquizSections.forEach(quizNodes => {\n        const quizQuestions = [];\n        const questionTrees = getAllSections(root(quizNodes), `--question--`);\n\nif (questionTrees.length === 0) {\n          throw Error(\n            'The --quiz-- section should contain at least one question.'\n          );\n        }\n\nquestionTrees.forEach(singleQuestionNodes => {\n          const questionTree = root(singleQuestionNodes);\n\nconst textNodes = getSection(questionTree, '--text--');\n          const distractorNodes = getSection(questionTree, '--distractors--');\n          const answerNodes = getSection(questionTree, '--answer--');\n\nquizQuestions.push(\n            getQuestion(textNodes, distractorNodes, answerNodes)\n          );\n        });\n\ncompiledQuizzes.push({ questions: quizQuestions });\n      });\n\nif (compiledQuizzes.length > 0) {\n        file.data.quizzes = compiledQuizzes;\n      }\n    }\n  }\n}\n\nfunction getQuestion(textNodes, distractorNodes, answerNodes) {\n  const text = mdastToHtml(textNodes);\n  const distractors = getDistractors(distractorNodes);\n  const answer = mdastToHtml(answerNodes);\n\nif (!text) throw Error('--text-- is missing from the quiz question');\n  if (!distractors)\n    throw Error('--distractors-- are missing from quiz question');\n  if (!answer) throw Error('--answer-- is missing from quiz question');\n\nreturn { text, distractors, answer };\n}\n\nfunction getDistractors(distractorsNodes) {\n  const distractorsGroups = splitOnThematicBreak(distractorsNodes);",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2453,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-quizzes.js",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "66876d3f66588366214ca93b31c4099c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-quizzes.js",
    "source_type": "git_repo",
    "title": "add-quizzes",
    "content": "compiledQuizzes.push({ questions: quizQuestions }); }); if (compiledQuizzes.length > 0) { file.data.quizzes = compiledQuizzes; } } } } function getQuestion(textNodes, distractorNodes, answerNodes) { const text = mdastToHtml(textNodes); const distractors = getDistractors(distractorNodes); const answer = mdastToHtml(answerNodes); if (!text) throw Error('--text-- is missing from the quiz question'); if (!distractors) throw Error('--distractors-- are missing from quiz question'); if (!answer) throw Error('--answer-- is missing from quiz question'); return { text, distractors, answer }; } function getDistractors(distractorsNodes) { const distractorsGroups = splitOnThematicBreak(distractorsNodes);\n\nif (distractorsGroups.length !== 3)\n    throw Error('Three distractors are required per quiz-question');\n\nreturn distractorsGroups.map(distractorsGroup => {\n    return mdastToHtml(distractorsGroup);\n  });\n}\n\nmodule.exports = plugin;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2453,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-quizzes.js",
      "source_type": "git_repo"
    },
    "token_count": 222,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "3b238d0c840df3f879a478395029b17f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-quizzes.test.js",
    "source_type": "git_repo",
    "title": "add-quizzes.test",
    "content": "const parseFixture = require('./../__fixtures__/parse-fixture');\nconst addQuizzes = require('./add-quizzes');\n\ndescribe('add-quizzes plugin', () => {\n  let mockQuizzesAST;\n  const plugin = addQuizzes();\n  let file = { data: {} };\n\nbeforeAll(async () => {\n    mockQuizzesAST = await parseFixture('with-quizzes.md');\n  });\n\nbeforeEach(() => {\n    file = { data: {} };\n  });\n\nit('returns a function', () => {\n    expect(typeof plugin).toEqual('function');\n  });\n\nit('adds a `quizzes` property to `file.data`', () => {\n    plugin(mockQuizzesAST, file);\n\nexpect('quizzes' in file.data).toBe(true);\n  });\n\nit('should generate a quizzes array from a quizzes challenge AST', () => {\n    expect.assertions(44);\n    plugin(mockQuizzesAST, file);\n\nconst quizzes = file.data.quizzes;\n    expect(Array.isArray(quizzes)).toBe(true);\n    expect(quizzes.length).toBe(2);\n\nquizzes.forEach(quiz => {\n      expect(quiz).toHaveProperty('questions');\n      expect(Array.isArray(quiz.questions)).toBe(true);\n\nconst questions = quiz.questions;\n      expect(questions.length).toBe(2);\n\nquestions.forEach(question => {\n        expect(question).toHaveProperty('text');\n        expect(typeof question.text).toBe('string');\n        expect(question).toHaveProperty('answer');\n        expect(typeof question.answer).toBe('string');\n        expect(question).toHaveProperty('distractors');\n        expect(Array.isArray(question.distractors)).toBe(true);\n\nconst distractors = question.distractors;\n\ndistractors.forEach(distractor => {\n          expect(typeof distractor).toBe('string');\n        });\n      });\n    });\n  });\n\nit('should match the quizzes snapshot', () => {\n    plugin(mockQuizzesAST, file);\n    expect(file.data).toMatchSnapshot();\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1776,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-quizzes.test.js",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d1ea8681983839edd49091e485161016",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-scene.js",
    "source_type": "git_repo",
    "title": "add-scene",
    "content": "const { getSection } = require('./utils/get-section');\n\nfunction plugin() {\n  return transformer;\n\nfunction transformer(tree, file) {\n    const sceneNodes = getSection(tree, '--scene--');\n\nif (sceneNodes.length > 0) {\n      if (sceneNodes.length !== 1) {\n        throw Error('You can only have one item in a scene, a JSON array.');\n      }\n\nif (sceneNodes[0].type !== 'code' || sceneNodes[0].lang !== 'json') {\n        throw Error('A scene must have a ```json code block');\n      }\n\n// throws if we can't parse it.\n      const sceneJson = JSON.parse(sceneNodes[0].value);\n      file.data.scene = sceneJson;\n    }\n  }\n}\n\nmodule.exports = plugin;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 663,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-scene.js",
      "source_type": "git_repo"
    },
    "token_count": 162,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "43597f487a9902c23f94b6a51235ed92",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.js",
    "source_type": "git_repo",
    "title": "add-seed",
    "content": "const { isEmpty } = require('lodash');\nconst { root } = require('mdast-builder');\nconst visitChildren = require('unist-util-visit-children');\nconst { getSection } = require('./utils/get-section');\nconst { getFileVisitor } = require('./utils/get-file-visitor');\n\nconst editableRegionMarker = '--fcc-editable-region--';\n\nfunction findRegionMarkers(challengeFile) {\n  const lines = challengeFile.contents.split('\\n');\n  const editableLines = lines\n    .map((line, id) => (line.trim() === editableRegionMarker ? id : -1))\n    .filter(id => id >= 0);\n\nif (editableLines.length > 2) {\n    throw Error('Editable region has too many markers: ' + editableLines);\n  }\n\nif (editableLines.length === 0) {\n    return null;\n  } else if (editableLines.length === 1) {\n    throw Error(`Editable region not closed`);\n  } else {\n    return editableLines;\n  }\n}\n\nfunction removeLines(contents, toRemove) {\n  const lines = contents.split('\\n');\n  return lines.filter((_, id) => !toRemove.includes(id)).join('\\n');\n}\n\n// TODO: DRY this.  Start with an array of markers and go from there.\nfunction addSeeds() {\n  function transformer(tree, file) {\n    const seedTree = root(getSection(tree, `--seed--`));\n    // Not all challenges have seeds (video challenges, for example), so we stop\n    // processing in these cases.\n    if (isEmpty(seedTree.children)) return;\n    const contentsTree = root(getSection(seedTree, `--seed-contents--`));\n    const headTree = root(getSection(seedTree, `--before-user-code--`));\n    const tailTree = root(getSection(seedTree, `--after-user-code--`));\n    const seeds = {};\n\n// While before and after code are optional, the contents are not\n    if (isEmpty(contentsTree.children))\n      throw Error('## --seed-contents-- must appear in # --seed-- sections');",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3757,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.js",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "235e050608b62b78f503b66a92f329b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.js",
    "source_type": "git_repo",
    "title": "add-seed",
    "content": "there. function addSeeds() { function transformer(tree, file) { const seedTree = root(getSection(tree, `--seed--`)); // Not all challenges have seeds (video challenges, for example), so we stop // processing in these cases. if (isEmpty(seedTree.children)) return; const contentsTree = root(getSection(seedTree, `--seed-contents--`)); const headTree = root(getSection(seedTree, `--before-user-code--`)); const tailTree = root(getSection(seedTree, `--after-user-code--`)); const seeds = {}; // While before and after code are optional, the contents are not if (isEmpty(contentsTree.children)) throw Error('## --seed-contents-- must appear in # --seed-- sections');\n\nconst visitForContents = visitChildren(\n      getFileVisitor(seeds, 'contents', validateEditableMarkers)\n    );\n    const visitForHead = visitChildren(getFileVisitor(seeds, 'head'));\n    const visitForTail = visitChildren(getFileVisitor(seeds, 'tail'));\n    visitForContents(contentsTree);\n    visitForHead(headTree);\n    visitForTail(tailTree);\n    const seedVals = Object.values(seeds);\n    file.data = {\n      ...file.data,\n      challengeFiles: seedVals\n    };\n\n// process region markers - remove them from content and add them to data\n    const challengeFiles = Object.values(seeds).map(data => {\n      const seed = { ...data };\n      const editRegionMarkers = findRegionMarkers(seed);\n      if (editRegionMarkers) {\n        seed.contents = removeLines(seed.contents, editRegionMarkers);\n\nif (editRegionMarkers[1] <= editRegionMarkers[0]) {\n          throw Error('Editable region must be non zero');\n        }\n        seed.editableRegionBoundaries = editRegionMarkers;\n      } else {\n        seed.editableRegionBoundaries = [];\n      }\n      return seed;\n    });\n\nfile.data = {\n      ...file.data,\n      challengeFiles\n    };\n  }\n\nreturn transformer;\n}",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3757,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.js",
      "source_type": "git_repo"
    },
    "token_count": 417,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "185ba0d8289a53cc4384b765ed7b8f2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.js",
    "source_type": "git_repo",
    "title": "add-seed",
    "content": "challengeFiles: seedVals }; // process region markers - remove them from content and add them to data const challengeFiles = Object.values(seeds).map(data => { const seed = { ...data }; const editRegionMarkers = findRegionMarkers(seed); if (editRegionMarkers) { seed.contents = removeLines(seed.contents, editRegionMarkers); if (editRegionMarkers[1] <= editRegionMarkers[0]) { throw Error('Editable region must be non zero'); } seed.editableRegionBoundaries = editRegionMarkers; } else { seed.editableRegionBoundaries = []; } return seed; }); file.data = { ...file.data, challengeFiles }; } return transformer; }\n\nfunction validateEditableMarkers({ value, position }) {\n  const twoMarkersRE = RegExp(\n    editableRegionMarker + '.*' + editableRegionMarker\n  );\n  const formattedMarkerRE = /--fcc - editable - region--/;\n  const lines = value.split('\\n');\n  const baseLineNumber = position.start.line + 1;\n  lines.forEach((line, index) => {\n    if (line.match(twoMarkersRE)) {\n      throw Error(\n        `Line ${\n          baseLineNumber + index\n        } has two markers. Each line should only have one.`\n      );\n    }\n    if (line.match(formattedMarkerRE)) {\n      throw Error(\n        `Line ${\n          baseLineNumber + index\n        } has a malformed marker. It should be --fcc-editable-region--`\n      );\n    }\n  });\n}\n\nmodule.exports = addSeeds;\nmodule.exports.editableRegionMarker = editableRegionMarker;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3757,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.js",
      "source_type": "git_repo"
    },
    "token_count": 328,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "6938883ddcf42907fa943c3f1c98fae9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
    "source_type": "git_repo",
    "title": "add-seed.test",
    "content": "const isArray = require('lodash/isArray');\nconst parseFixture = require('../__fixtures__/parse-fixture');\n\nconst addSeed = require('./add-seed');\n\ndescribe('add-seed plugin', () => {\n  let adjacentKeysAST,\n    withSeedKeysAST,\n    withBeforeAfterAST,\n    cCodeAST,\n    withErmsOnOneLineAST,\n    withEmptyAfterAST,\n    withEmptyBeforeAST,\n    withEmptyContentsAST,\n    withInvalidBeforeAST,\n    withInvalidAfterAST,\n    simpleAST,\n    withEditableMarkersAST,\n    withSeedKeysOrphanAST,\n    withSeedKeysExtraLinesAST,\n    withSeedKeysJSXAST;\n\nconst plugin = addSeed();\n  let file = { data: {} };\n\nbeforeAll(async () => {\n    adjacentKeysAST = await parseFixture('with-seed-keys-adjacent.md');\n    withSeedKeysAST = await parseFixture('with-seed-keys.md');\n    withBeforeAfterAST = await parseFixture('with-before-and-after.md');\n    cCodeAST = await parseFixture('with-c-code.md');\n    withErmsOnOneLineAST = await parseFixture(\n      'with-editable-markers-on-one-line.md'\n    );\n    withEmptyAfterAST = await parseFixture('with-empty-after.md');\n    withEmptyBeforeAST = await parseFixture('with-empty-before.md');\n    withEmptyContentsAST = await parseFixture('with-empty-contents.md');\n    withInvalidBeforeAST = await parseFixture('with-invalid-before.md');\n    withInvalidAfterAST = await parseFixture('with-invalid-after.md');\n    simpleAST = await parseFixture('simple.md');\n    withEditableMarkersAST = await parseFixture('with-editable-markers.md');\n    withSeedKeysOrphanAST = await parseFixture('with-seed-keys-orphan.md');\n    withSeedKeysExtraLinesAST = await parseFixture(\n      'with-seed-keys-extra-lines.md'\n    );\n    withSeedKeysJSXAST = await parseFixture('with-seed-keys-jsx.md');\n  });\n\nbeforeEach(() => {\n    file = { data: {} };\n  });\n\nit('returns a function', () => {\n    expect(typeof plugin).toEqual('function');\n  });\n\nit('adds a `challengeFiles` property to `file.data`', () => {\n    plugin(simpleAST, file);\n    expect('challengeFiles' in file.data).toBe(true);\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 10030,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "77cc9cae62bf75de5f4f99f91260b02d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
    "source_type": "git_repo",
    "title": "add-seed.test",
    "content": "= await parseFixture('with-empty-after.md'); withEmptyBeforeAST = await parseFixture('with-empty-before.md'); withEmptyContentsAST = await parseFixture('with-empty-contents.md'); withInvalidBeforeAST = await parseFixture('with-invalid-before.md'); withInvalidAfterAST = await parseFixture('with-invalid-after.md'); simpleAST = await parseFixture('simple.md'); withEditableMarkersAST = await parseFixture('with-editable-markers.md'); withSeedKeysOrphanAST = await parseFixture('with-seed-keys-orphan.md'); withSeedKeysExtraLinesAST = await parseFixture( 'with-seed-keys-extra-lines.md' ); withSeedKeysJSXAST = await parseFixture('with-seed-keys-jsx.md'); }); beforeEach(() => { file = { data: {} }; }); it('returns a function', () => { expect(typeof plugin).toEqual('function'); }); it('adds a `challengeFiles` property to `file.data`', () => { plugin(simpleAST, file); expect('challengeFiles' in file.data).toBe(true); });\n\nit('ensures that the `challengeFiles` property is an array', () => {\n    plugin(simpleAST, file);\n    expect(isArray(file.data.challengeFiles)).toBe(true);\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 10030,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
      "source_type": "git_repo"
    },
    "token_count": 262,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "3a3817efd317562d67b27f635bc3efa9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
    "source_type": "git_repo",
    "title": "add-seed.test",
    "content": "withInvalidAfterAST = await parseFixture('with-invalid-after.md'); simpleAST = await parseFixture('simple.md'); withEditableMarkersAST = await parseFixture('with-editable-markers.md'); withSeedKeysOrphanAST = await parseFixture('with-seed-keys-orphan.md'); withSeedKeysExtraLinesAST = await parseFixture( 'with-seed-keys-extra-lines.md' ); withSeedKeysJSXAST = await parseFixture('with-seed-keys-jsx.md'); }); beforeEach(() => { file = { data: {} }; }); it('returns a function', () => { expect(typeof plugin).toEqual('function'); }); it('adds a `challengeFiles` property to `file.data`', () => { plugin(simpleAST, file); expect('challengeFiles' in file.data).toBe(true); }); it('ensures that the `challengeFiles` property is an array', () => { plugin(simpleAST, file); expect(isArray(file.data.challengeFiles)).toBe(true); });\n\nit('adds test objects to the challengeFiles array following a schema', () => {\n    expect.assertions(15);\n    plugin(simpleAST, file);\n    const {\n      data: { challengeFiles }\n    } = file;\n    const testObject = challengeFiles.find(x => x.ext === 'js');\n    expect(Object.keys(testObject).length).toEqual(7);\n    expect(testObject).toHaveProperty('ext');\n    expect(typeof testObject['ext']).toBe('string');\n    expect(testObject).toHaveProperty('name');\n    expect(typeof testObject['name']).toBe('string');\n    expect(testObject).toHaveProperty('contents');\n    expect(typeof testObject['contents']).toBe('string');\n    expect(testObject).toHaveProperty('head');\n    expect(typeof testObject['head']).toBe('string');\n    expect(testObject).toHaveProperty('tail');\n    expect(typeof testObject['tail']).toBe('string');\n    expect(testObject).toHaveProperty('id');\n    expect(typeof testObject['id']).toBe('string');\n    expect(testObject).toHaveProperty('editableRegionBoundaries');\n    expect(isArray(testObject['editableRegionBoundaries'])).toBe(true);\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 10030,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "d89346c3d82d89f9456464aac4e3fe7d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
    "source_type": "git_repo",
    "title": "add-seed.test",
    "content": "plugin(simpleAST, file); expect('challengeFiles' in file.data).toBe(true); }); it('ensures that the `challengeFiles` property is an array', () => { plugin(simpleAST, file); expect(isArray(file.data.challengeFiles)).toBe(true); }); it('adds test objects to the challengeFiles array following a schema', () => { expect.assertions(15); plugin(simpleAST, file); const { data: { challengeFiles } } = file; const testObject = challengeFiles.find(x => x.ext === 'js'); expect(Object.keys(testObject).length).toEqual(7); expect(testObject).toHaveProperty('ext'); expect(typeof testObject['ext']).toBe('string'); expect(testObject).toHaveProperty('name'); expect(typeof testObject['name']).toBe('string'); expect(testObject).toHaveProperty('contents'); expect(typeof testObject['contents']).toBe('string'); expect(testObject).toHaveProperty('head'); expect(typeof testObject['head']).toBe('string'); expect(testObject).toHaveProperty('tail'); expect(typeof testObject['tail']).toBe('string'); expect(testObject).toHaveProperty('id'); expect(typeof testObject['id']).toBe('string'); expect(testObject).toHaveProperty('editableRegionBoundaries'); expect(isArray(testObject['editableRegionBoundaries'])).toBe(true); });\n\nit('parses seeds without ids', () => {\n    expect.assertions(3);\n    plugin(simpleAST, file);\n    const {\n      data: { challengeFiles }\n    } = file;\n    const scriptjs = challengeFiles.find(x => x.ext === 'js');\n    const indexhtml = challengeFiles.find(x => x.ext === 'html');\n    const stylescss = challengeFiles.find(x => x.ext === 'css');\n\nexpect(scriptjs.contents).toBe(`var x = 'y';`);\n    expect(indexhtml.contents).toBe(`<html>\n  <body>\n  </body>\n</html>`);\n    expect(stylescss.contents).toBe(`body {\n  background: green;\n}`);\n  });\n\nit('removes region markers from contents', () => {\n    expect.assertions(2);\n    plugin(withEditableMarkersAST, file);\n    const {\n      data: { challengeFiles }\n    } = file;\n    const stylescss = challengeFiles.find(x => x.ext === 'css');",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 10030,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "0442c98da44c82dea696511c5177f1e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
    "source_type": "git_repo",
    "title": "add-seed.test",
    "content": "file); const { data: { challengeFiles } } = file; const scriptjs = challengeFiles.find(x => x.ext === 'js'); const indexhtml = challengeFiles.find(x => x.ext === 'html'); const stylescss = challengeFiles.find(x => x.ext === 'css'); expect(scriptjs.contents).toBe(`var x = 'y';`); expect(indexhtml.contents).toBe(`<html> <body> </body> </html>`); expect(stylescss.contents).toBe(`body { background: green; }`); }); it('removes region markers from contents', () => { expect.assertions(2); plugin(withEditableMarkersAST, file); const { data: { challengeFiles } } = file; const stylescss = challengeFiles.find(x => x.ext === 'css');\n\nexpect(stylescss.contents).not.toMatch('--fcc-editable-region--');\n    expect(stylescss.editableRegionBoundaries).toEqual([1, 4]);\n  });\n\n// TODO: can we reuse 'name'? It's always 'index', I think, which suggests\n  // it could be reused as an id. Revisit this once the parser is live.\n  it('parses seeds with adjacent ids, adding the id to data', () => {\n    expect.assertions(3);\n    plugin(withSeedKeysAST, file);\n    const {\n      data: { challengeFiles }\n    } = file;\n    const scriptjs = challengeFiles.find(x => x.ext === 'js');\n    const indexhtml = challengeFiles.find(x => x.ext === 'html');\n    const stylescss = challengeFiles.find(x => x.ext === 'css');\n\nexpect(indexhtml.id).toBe('');\n    expect(stylescss.id).toBe('key-for-css');\n    expect(scriptjs.id).toBe('key-for-js');\n  });\n\nit('throws if an id is anywhere except directly before a code node', () => {\n    expect.assertions(2);\n    expect(() => plugin(adjacentKeysAST, file)).toThrow(\n      '::id{#id}s must come before code blocks'\n    );\n    expect(() => plugin(withSeedKeysOrphanAST, file)).toThrow(\n      '::id{#id}s must come before code blocks'\n    );\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 10030,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "d0faf4fb02c5befd601a4b5c23de2395",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
    "source_type": "git_repo",
    "title": "add-seed.test",
    "content": "const { data: { challengeFiles } } = file; const scriptjs = challengeFiles.find(x => x.ext === 'js'); const indexhtml = challengeFiles.find(x => x.ext === 'html'); const stylescss = challengeFiles.find(x => x.ext === 'css'); expect(indexhtml.id).toBe(''); expect(stylescss.id).toBe('key-for-css'); expect(scriptjs.id).toBe('key-for-js'); }); it('throws if an id is anywhere except directly before a code node', () => { expect.assertions(2); expect(() => plugin(adjacentKeysAST, file)).toThrow( '::id{#id}s must come before code blocks' ); expect(() => plugin(withSeedKeysOrphanAST, file)).toThrow( '::id{#id}s must come before code blocks' ); });\n\nit('ignores empty lines between ::id{#id}s and code blocks', () => {\n    expect.assertions(1);\n    plugin(withSeedKeysAST, file);\n    const fileTwo = { data: {} };\n    plugin(withSeedKeysExtraLinesAST, fileTwo);\n    expect(file).toEqual(fileTwo);\n  });\n\nit('gets the before-user-code for each language', () => {\n    expect.assertions(3);\n    plugin(withBeforeAfterAST, file);\n    const {\n      data: { challengeFiles }\n    } = file;\n    const scriptjs = challengeFiles.find(x => x.ext === 'js');\n    const indexhtml = challengeFiles.find(x => x.ext === 'html');\n    const stylescss = challengeFiles.find(x => x.ext === 'css');\n\nexpect(scriptjs.head).toBe('');\n    expect(indexhtml.head).toBe(`<!-- comment -->`);\n    expect(stylescss.head).toBe(`body {\n  etc: ''\n}`);\n  });\n\nit('gets the after-user-code for each language', () => {\n    expect.assertions(3);\n    plugin(withBeforeAfterAST, file);\n    const {\n      data: { challengeFiles }\n    } = file;\n    const scriptjs = challengeFiles.find(x => x.ext === 'js');\n    const indexhtml = challengeFiles.find(x => x.ext === 'html');\n    const stylescss = challengeFiles.find(x => x.ext === 'css');\n\nexpect(scriptjs.tail).toBe(`function teardown(params) {\n  // after\n}`);\n    expect(indexhtml.tail).toBe('');\n    expect(stylescss.tail).toBe(`body {\n  background: blue;\n}`);\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 10030,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "56be3ca4830c6b872def02d97cac369a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
    "source_type": "git_repo",
    "title": "add-seed.test",
    "content": "const stylescss = challengeFiles.find(x => x.ext === 'css'); expect(scriptjs.head).toBe(''); expect(indexhtml.head).toBe(`<!-- comment -->`); expect(stylescss.head).toBe(`body { etc: '' }`); }); it('gets the after-user-code for each language', () => { expect.assertions(3); plugin(withBeforeAfterAST, file); const { data: { challengeFiles } } = file; const scriptjs = challengeFiles.find(x => x.ext === 'js'); const indexhtml = challengeFiles.find(x => x.ext === 'html'); const stylescss = challengeFiles.find(x => x.ext === 'css'); expect(scriptjs.tail).toBe(`function teardown(params) { // after }`); expect(indexhtml.tail).toBe(''); expect(stylescss.tail).toBe(`body { background: blue; }`); });\n\nit('throws an error if there is any code of an unsupported language', () => {\n    expect.assertions(1);\n    expect(() => plugin(cCodeAST, file)).toThrow(\n      \"On line 30 'c' is not a supported language.\\n\" +\n        ' Please use one of js, css, html, jsx or py'\n    );\n  });\n\nit('throws if there is before/after code with empty blocks', () => {\n    expect.assertions(2);\n    expect(() => plugin(withInvalidBeforeAST, file)).toThrow(\n      'Empty code block in --before-user-code-- section'\n    );\n    expect(() => plugin(withInvalidAfterAST, file)).toThrow(\n      'Empty code block in --after-user-code-- section'\n    );\n  });\n\nit('quietly ignores empty before sections', () => {\n    expect.assertions(6);\n    plugin(withEmptyBeforeAST, file);\n    const {\n      data: { challengeFiles }\n    } = file;\n    const scriptjs = challengeFiles.find(x => x.ext === 'js');\n    const indexhtml = challengeFiles.find(x => x.ext === 'html');\n    const stylescss = challengeFiles.find(x => x.ext === 'css');\n\nexpect(scriptjs.head).toBe('');\n    expect(scriptjs.tail).toBe('function teardown(params) {\\n  // after\\n}');\n    expect(indexhtml.head).toBe('');\n    expect(indexhtml.tail).toBe('');\n    expect(stylescss.head).toBe('');\n    expect(stylescss.tail).toBe('body {\\n  background: blue;\\n}');\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 10030,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "fac9cb4b417ed43ffa231128b062c60b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
    "source_type": "git_repo",
    "title": "add-seed.test",
    "content": "code block in --before-user-code-- section' ); expect(() => plugin(withInvalidAfterAST, file)).toThrow( 'Empty code block in --after-user-code-- section' ); }); it('quietly ignores empty before sections', () => { expect.assertions(6); plugin(withEmptyBeforeAST, file); const { data: { challengeFiles } } = file; const scriptjs = challengeFiles.find(x => x.ext === 'js'); const indexhtml = challengeFiles.find(x => x.ext === 'html'); const stylescss = challengeFiles.find(x => x.ext === 'css'); expect(scriptjs.head).toBe(''); expect(scriptjs.tail).toBe('function teardown(params) {\\n // after\\n}'); expect(indexhtml.head).toBe(''); expect(indexhtml.tail).toBe(''); expect(stylescss.head).toBe(''); expect(stylescss.tail).toBe('body {\\n background: blue;\\n}'); });\n\nit('quietly ignores empty after sections', () => {\n    expect.assertions(6);\n    plugin(withEmptyAfterAST, file);\n    const {\n      data: { challengeFiles }\n    } = file;\n    const scriptjs = challengeFiles.find(x => x.ext === 'js');\n    const indexhtml = challengeFiles.find(x => x.ext === 'html');\n    const stylescss = challengeFiles.find(x => x.ext === 'css');\n\nexpect(scriptjs.head).toBe('');\n    expect(scriptjs.tail).toBe('');\n    expect(indexhtml.head).toBe('<!-- comment -->');\n    expect(indexhtml.tail).toBe('');\n    expect(stylescss.head).toBe(\"body {\\n  etc: ''\\n}\");\n    expect(stylescss.tail).toBe('');\n  });\n\nit('throws an error (with line number) if 2 markers appear on 1 line', () => {\n    expect.assertions(1);\n    expect(() => plugin(withErmsOnOneLineAST, file)).toThrow(\n      `Line 53 has two markers. Each line should only have one.`\n    );\n  });\n\nit('handles jsx', () => {\n    expect.assertions(3);\n    plugin(withSeedKeysJSXAST, file);\n    const {\n      data: { challengeFiles }\n    } = file;\n    const indexjsx = challengeFiles.find(x => x.ext === 'jsx');",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 10030,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "59a514c1aecc0e81600a57eb61395f45",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
    "source_type": "git_repo",
    "title": "add-seed.test",
    "content": "challengeFiles.find(x => x.ext === 'css'); expect(scriptjs.head).toBe(''); expect(scriptjs.tail).toBe(''); expect(indexhtml.head).toBe('<!-- comment -->'); expect(indexhtml.tail).toBe(''); expect(stylescss.head).toBe(\"body {\\n etc: ''\\n}\"); expect(stylescss.tail).toBe(''); }); it('throws an error (with line number) if 2 markers appear on 1 line', () => { expect.assertions(1); expect(() => plugin(withErmsOnOneLineAST, file)).toThrow( `Line 53 has two markers. Each line should only have one.` ); }); it('handles jsx', () => { expect.assertions(3); plugin(withSeedKeysJSXAST, file); const { data: { challengeFiles } } = file; const indexjsx = challengeFiles.find(x => x.ext === 'jsx');\n\nexpect(indexjsx.head).toBe(`function setup() {}`);\n    expect(indexjsx.tail).toBe(`function teardown(params) {\n  // after\n}`);\n    expect(indexjsx.contents).toBe(`var x = 'y';\n\n/* comment */\nconst Button = () => {\n  return <button> {/* another comment! */} text </button>;\n};`);\n  });\n\n/* Revisit this once we've decided what to do about multifile imports. I\n  think the best approach is likely to be use the following format for .files\n\nit('combines all the code of a specific language into a single file', () => {\n\n{ css: [css files],\n      html: [html files],\n      ...\n    }\n\nor\n\n{ css: {css files},\n      html: {html files},\n      ...\n    }\n\ndepending on what's easier to work with in graphQL\n\n});\n\n*/\n\nit('should throw an error if a seed has no contents', () => {\n    expect.assertions(1);\n    expect(() => plugin(withEmptyContentsAST, file)).toThrow(\n      `## --seed-contents-- must appear in # --seed-- sections`\n    );\n  });\n\nit('should have an output to match the snapshot', () => {\n    plugin(simpleAST, file);\n    expect(file.data).toMatchSnapshot();\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 10030,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-seed.test.js",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "9482e05a2b83423b87f41e7d6a39d78b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-solution.js",
    "source_type": "git_repo",
    "title": "add-solution",
    "content": "const { isEmpty } = require('lodash');\nconst { root } = require('mdast-builder');\nconst visitChildren = require('unist-util-visit-children');\n\nconst { editableRegionMarker } = require('./add-seed');\nconst { getSection } = require('./utils/get-section');\nconst { getFileVisitor } = require('./utils/get-file-visitor');\nconst { splitOnThematicBreak } = require('./utils/split-on-thematic-break');\n\nfunction validateMarkers({ value }) {\n  const lines = value.split('\\n');\n  if (lines.some(line => line.match(RegExp(editableRegionMarker))))\n    throw Error(\n      '--fcc-editable-region-- should only appear in the --seed-contents--\\n' +\n        'section, not in --solutions--'\n    );\n}\n\nfunction createPlugin() {\n  return function transformer(tree, file) {\n    const solutionArrays = splitOnThematicBreak(\n      getSection(tree, `--solutions--`)\n    );\n    const solutions = [];\n\nsolutionArrays.forEach(nodes => {\n      const solution = {};\n      const solutionTree = root(nodes);\n      const visitForContents = visitChildren(\n        getFileVisitor(solution, 'contents', validateMarkers)\n      );\n\nvisitForContents(solutionTree);\n      if (!isEmpty(solution)) solutions.push(Object.values(solution));\n    });\n\nfile.data = {\n      ...file.data,\n      solutions: solutions\n    };\n  };\n}\n\nmodule.exports = createPlugin;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1329,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-solution.js",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ae31f2ccd5a85609df0bea639e427216",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-solution.test.js",
    "source_type": "git_repo",
    "title": "add-solution.test",
    "content": "const { isObject } = require('lodash');\nconst parseFixture = require('../__fixtures__/parse-fixture');\nconst addSolution = require('./add-solution');\n\ndescribe('add solution plugin', () => {\n  let mockAST, multiSolnsAST, editableSolutionAST;\n\nbeforeAll(async () => {\n    editableSolutionAST = await parseFixture('with-erm-in-solution.md');\n    mockAST = await parseFixture('simple.md');\n    multiSolnsAST = await parseFixture('with-multiple-solns.md');\n  });\n\nconst plugin = addSolution();\n  let file = { data: {} };\n\nbeforeEach(() => {\n    file = { data: {} };\n  });\n\nit('returns a function', () => {\n    expect(typeof plugin).toEqual('function');\n  });\n\nit('adds a `solutions` property to `file.data`', () => {\n    plugin(mockAST, file);\n    expect('solutions' in file.data).toBe(true);\n  });\n\nit('ensures that the `solutions` property is an array', () => {\n    plugin(mockAST, file);\n    expect(Array.isArray(file.data.solutions)).toBe(true);\n  });\n\nit('each entry in the `solutions` array is an object', () => {\n    plugin(mockAST, file);\n\nexpect(file.data.solutions.every(el => isObject(el))).toBe(true);\n  });\n\nit('adds solution objects to the challengeFiles array following a schema', () => {\n    expect.assertions(13);\n    plugin(mockAST, file);\n    const {\n      data: { solutions }\n    } = file;\n    const testObject = solutions[0].find(solution => solution.ext === 'js');\n    expect(Object.keys(testObject).length).toEqual(6);\n    expect(testObject).toHaveProperty('ext');\n    expect(typeof testObject['ext']).toBe('string');\n    expect(testObject).toHaveProperty('name');\n    expect(typeof testObject['name']).toBe('string');\n    expect(testObject).toHaveProperty('contents');\n    expect(typeof testObject['contents']).toBe('string');\n    expect(testObject).toHaveProperty('head');\n    expect(typeof testObject['head']).toBe('string');\n    expect(testObject).toHaveProperty('tail');\n    expect(typeof testObject['tail']).toBe('string');\n    expect(testObject).toHaveProperty('id');\n    expect(typeof testObject['id']).toBe('string');\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3197,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-solution.test.js",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "8c7e30b7d1f4cf22e70fb685bee0a32e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-solution.test.js",
    "source_type": "git_repo",
    "title": "add-solution.test",
    "content": "{ plugin(mockAST, file); expect(Array.isArray(file.data.solutions)).toBe(true); }); it('each entry in the `solutions` array is an object', () => { plugin(mockAST, file); expect(file.data.solutions.every(el => isObject(el))).toBe(true); }); it('adds solution objects to the challengeFiles array following a schema', () => { expect.assertions(13); plugin(mockAST, file); const { data: { solutions } } = file; const testObject = solutions[0].find(solution => solution.ext === 'js'); expect(Object.keys(testObject).length).toEqual(6); expect(testObject).toHaveProperty('ext'); expect(typeof testObject['ext']).toBe('string'); expect(testObject).toHaveProperty('name'); expect(typeof testObject['name']).toBe('string'); expect(testObject).toHaveProperty('contents'); expect(typeof testObject['contents']).toBe('string'); expect(testObject).toHaveProperty('head'); expect(typeof testObject['head']).toBe('string'); expect(testObject).toHaveProperty('tail'); expect(typeof testObject['tail']).toBe('string'); expect(testObject).toHaveProperty('id'); expect(typeof testObject['id']).toBe('string'); });\n\nit('adds multiple solutions if they exist', () => {\n    expect.assertions(5);\n    plugin(multiSolnsAST, file);\n    const {\n      data: { solutions }\n    } = file;\n    expect(solutions.length).toBe(3);\n    expect(solutions[0].find(solution => solution.ext === 'js').contents).toBe(\n      \"var x = 'y';\"\n    );\n    expect(solutions[1].find(solution => solution.ext === 'html').contents)\n      .toBe(`<html>\n  <body>\n  solution number two\n  </body>\n</html>`);\n    expect(solutions[1].find(solution => solution.ext === 'css').contents)\n      .toBe(`body {\n  background: white;\n}`);\n    expect(solutions[2].find(solution => solution.ext === 'js').contents).toBe(\n      \"var x = 'y3';\"\n    );\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3197,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-solution.test.js",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "33c4d1e1806cd53ac7b1d7697c8dc887",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-solution.test.js",
    "source_type": "git_repo",
    "title": "add-solution.test",
    "content": "testObject['contents']).toBe('string'); expect(testObject).toHaveProperty('head'); expect(typeof testObject['head']).toBe('string'); expect(testObject).toHaveProperty('tail'); expect(typeof testObject['tail']).toBe('string'); expect(testObject).toHaveProperty('id'); expect(typeof testObject['id']).toBe('string'); }); it('adds multiple solutions if they exist', () => { expect.assertions(5); plugin(multiSolnsAST, file); const { data: { solutions } } = file; expect(solutions.length).toBe(3); expect(solutions[0].find(solution => solution.ext === 'js').contents).toBe( \"var x = 'y';\" ); expect(solutions[1].find(solution => solution.ext === 'html').contents) .toBe(`<html> <body> solution number two </body> </html>`); expect(solutions[1].find(solution => solution.ext === 'css').contents) .toBe(`body { background: white; }`); expect(solutions[2].find(solution => solution.ext === 'js').contents).toBe( \"var x = 'y3';\" ); });\n\nit('should reject solutions with editable region markers', () => {\n    expect.assertions(1);\n    expect(() => plugin(editableSolutionAST, file)).toThrow(\n      '--fcc-editable-region-- should only appear in the --seed-contents--\\n' +\n        'section, not in --solutions--'\n    );\n  });\n\nit('should have an output to match the snapshot', () => {\n    plugin(mockAST, file);\n    expect(file.data).toMatchSnapshot();\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3197,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-solution.test.js",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "92d3238803ef3afffb4d0a7f5943dfc4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-tests.js",
    "source_type": "git_repo",
    "title": "add-tests",
    "content": "const chunk = require('lodash/chunk');\nconst { getSection } = require('./utils/get-section');\nconst mdastToHtml = require('./utils/mdast-to-html');\n\nfunction plugin() {\n  return transformer;\n\nfunction transformer(tree, file) {\n    const hintNodes = getSection(tree, '--hints--');\n    if (hintNodes.length % 2 !== 0)\n      throw Error('Tests must be in (text, ```testString```) order');\n\nconst tests = chunk(hintNodes, 2).map(getTest);\n    file.data.tests = tests;\n  }\n}\n\nfunction getTest(hintNodes) {\n  const [textNode, testStringNode] = hintNodes;\n  const text = mdastToHtml([textNode]);\n  const testString = testStringNode.value;\n\nif (!text) throw Error('text is missing from hint');\n  // stub tests (i.e. text, but no testString) are allowed, but the md must\n  // have a code block, even if it is empty.\n  if (!testString && testString !== '')\n    throw Error('testString (code block) is missing from hint');\n\nreturn { text, testString };\n}\n\nmodule.exports = plugin;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 980,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-tests.js",
      "source_type": "git_repo"
    },
    "token_count": 250,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e6bd240d2e82a2c63383cd4e231363dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-tests.test.js",
    "source_type": "git_repo",
    "title": "add-tests.test",
    "content": "const parseFixture = require('../__fixtures__/parse-fixture');\nconst addTests = require('./add-tests');\n\ndescribe('add-tests plugin', () => {\n  let brokenHintsAST, simpleAST, missingTestStringAST;\n  const plugin = addTests();\n  let file = { data: {} };\n\nbeforeAll(async () => {\n    simpleAST = await parseFixture('simple.md');\n    brokenHintsAST = await parseFixture('with-broken-hints.md');\n    missingTestStringAST = await parseFixture('with-missing-teststring.md');\n  });\n\nbeforeEach(() => {\n    file = { data: {} };\n  });\n\nit('returns a function', () => {\n    expect(typeof plugin).toEqual('function');\n  });\n\nit('adds a `tests` property to `file.data`', () => {\n    plugin(simpleAST, file);\n\nexpect('tests' in file.data).toBe(true);\n  });\n\nit('adds test objects to the tests array following a schema', () => {\n    expect.assertions(5);\n    plugin(simpleAST, file);\n    const testObject = file.data.tests[0];\n    expect(Object.keys(testObject).length).toBe(2);\n    expect(testObject).toHaveProperty('testString');\n    expect(typeof testObject.testString).toBe('string');\n    expect(testObject).toHaveProperty('text');\n    expect(typeof testObject.text).toBe('string');\n  });\n\n// TODO: make this a bit more robust and informative\n  it('should throw if a test pair is out of order', () => {\n    // TODO: update the markdown so it makes this error\n    expect(() => plugin(brokenHintsAST, file)).toThrow(\n      'Tests must be in (text, ```testString```) order'\n    );\n  });\n\nit('should throw if a test string is not found', () => {\n    expect(() => plugin(missingTestStringAST, file)).toThrow(\n      'testString (code block) is missing from hint'\n    );\n  });\n\nit('preserves code whitespace in testStrings', () => {\n    plugin(simpleAST, file);\n    const testObject = file.data.tests[2];\n    expect(testObject.testString).toBe(`// more test code\nif(let x of xs) {\n  console.log(x);\n}`);\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2520,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-tests.test.js",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "abc7d572ea104d50f8757e5c44d31c76",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-tests.test.js",
    "source_type": "git_repo",
    "title": "add-tests.test",
    "content": "=> { // TODO: update the markdown so it makes this error expect(() => plugin(brokenHintsAST, file)).toThrow( 'Tests must be in (text, ```testString```) order' ); }); it('should throw if a test string is not found', () => { expect(() => plugin(missingTestStringAST, file)).toThrow( 'testString (code block) is missing from hint' ); }); it('preserves code whitespace in testStrings', () => { plugin(simpleAST, file); const testObject = file.data.tests[2]; expect(testObject.testString).toBe(`// more test code if(let x of xs) { console.log(x); }`); });\n\nit('does not encode html', () => {\n    plugin(simpleAST, file);\n    const testObject = file.data.tests[1];\n    expect(testObject.text).toBe('<p>Second hint with <code>code</code></p>');\n  });\n\nit('converts test text from md to html', () => {\n    plugin(simpleAST, file);\n    const testObject = file.data.tests[2];\n    expect(testObject.text).toBe(\n      '<p>Third <em>hint</em> with <code>code</code>' +\n        ' and <code>inline code</code></p>'\n    );\n  });\n\nit('should have an output to match the snapshot', () => {\n    plugin(simpleAST, file);\n    expect(file.data).toMatchSnapshot();\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2520,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-tests.test.js",
      "source_type": "git_repo"
    },
    "token_count": 307,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "93b7d50dcc441adeff837b2e820710f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-text.js",
    "source_type": "git_repo",
    "title": "add-text",
    "content": "const { isEmpty } = require('lodash');\nconst find = require('unist-util-find');\nconst { root } = require('mdast-builder');\nconst { getSection, isMarker } = require('./utils/get-section');\nconst mdastToHTML = require('./utils/mdast-to-html');\n\nfunction addText(sectionIds) {\n  if (!sectionIds || !Array.isArray(sectionIds) || sectionIds.length <= 0) {\n    throw new Error('addText must have an array of section ids supplied');\n  }\n  function transformer(tree, file) {\n    for (const sectionId of sectionIds) {\n      const textNodes = getSection(tree, `--${sectionId}--`);\n      const subSection = find(root(textNodes), isMarker);\n      if (subSection) {\n        throw Error(\n          `The --${sectionId}-- section should not have any subsections. Found subsection ${subSection.children[0].value}`\n        );\n      }\n\nconst sectionText = mdastToHTML(textNodes);\n\nif (!isEmpty(sectionText)) {\n        file.data = {\n          ...file.data,\n          [sectionId]: `<section id=\"${sectionId}\">\n${sectionText}\n</section>`\n        };\n      }\n    }\n  }\n  return transformer;\n}\n\nmodule.exports = addText;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1108,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-text.js",
      "source_type": "git_repo"
    },
    "token_count": 262,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6979ec4b7a79fc933f07077db0f67fe7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-text.test.js",
    "source_type": "git_repo",
    "title": "add-text.test",
    "content": "const parseFixture = require('../__fixtures__/parse-fixture');\nconst addText = require('./add-text');\n\ndescribe('add-text', () => {\n  let realisticAST, mockAST, withSubSectionAST;\n  const descriptionId = 'description';\n  const instructionsId = 'instructions';\n  const missingId = 'missing';\n  let file = { data: {} };\n\nbeforeAll(async () => {\n    realisticAST = await parseFixture('realistic.md');\n    mockAST = await parseFixture('simple.md');\n    withSubSectionAST = await parseFixture('with-subsection.md');\n  });\n\nbeforeEach(() => {\n    file = { data: {} };\n  });\n\nit('should return a function', () => {\n    const plugin = addText(['section']);\n\nexpect(typeof plugin).toEqual('function');\n  });\n\nit('throws when no argument or the incorrect argument is supplied', () => {\n    expect.assertions(5);\n    const expectedError = 'addText must have an array of section ids supplied';\n    expect(() => {\n      addText();\n    }).toThrow(expectedError);\n    expect(() => {\n      addText('');\n    }).toThrow(expectedError);\n    expect(() => {\n      addText({});\n    }).toThrow(expectedError);\n    expect(() => {\n      addText(1);\n    }).toThrow(expectedError);\n    expect(() => {\n      addText([]);\n    }).toThrow(expectedError);\n  });\n\nit('throws when there is a sub-section in one of the sections', () => {\n    const plugin = addText([instructionsId, descriptionId]);\n\nexpect(() => {\n      plugin(withSubSectionAST, file);\n    }).toThrow(\n      'The --description-- section should not have any subsections. Found subsection --not-allowed--'\n    );\n  });\n\nit('should add a string relating to the section id to `file.data`', () => {\n    const plugin = addText([descriptionId]);\n    plugin(mockAST, file);\n    const expectedText = 'Paragraph 1';\n    expect(file.data[descriptionId]).toEqual(\n      expect.stringContaining(expectedText)\n    );\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 4654,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-text.test.js",
      "source_type": "git_repo"
    },
    "token_count": 427,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "951c9e3fee63ae3239d578661fc4f023",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-text.test.js",
    "source_type": "git_repo",
    "title": "add-text.test",
    "content": "{ addText(1); }).toThrow(expectedError); expect(() => { addText([]); }).toThrow(expectedError); }); it('throws when there is a sub-section in one of the sections', () => { const plugin = addText([instructionsId, descriptionId]); expect(() => { plugin(withSubSectionAST, file); }).toThrow( 'The --description-- section should not have any subsections. Found subsection --not-allowed--' ); }); it('should add a string relating to the section id to `file.data`', () => { const plugin = addText([descriptionId]); plugin(mockAST, file); const expectedText = 'Paragraph 1'; expect(file.data[descriptionId]).toEqual( expect.stringContaining(expectedText) ); });\n\nit('should not add a string relating a different id to `file.data`', () => {\n    const plugin = addText([descriptionId]);\n    plugin(mockAST, file);\n    // the following text is in the AST, but is associated with a different\n    // marker (instructions)\n    const expectedText = 'Paragraph 0';\n    expect(file.data[descriptionId]).not.toEqual(\n      expect.stringContaining(expectedText)\n    );\n  });\n\n// TODO: do we need to add the ids to the section tags? Why not just have\n  // <section>?\n  it('should embed the text in sections with appropriate ids', () => {\n    const plugin = addText([descriptionId, instructionsId]);\n    plugin(mockAST, file);\n    // the following text is in the AST, but is associated with a different\n    // marker (instructions)\n    const descriptionSectionText = `<section id=\"description\">\n<p>Paragraph 1</p>\n<pre><code class=\"language-html\">code example\n</code></pre>\n</section>`;\n    expect(file.data[descriptionId]).toEqual(descriptionSectionText);\n    const instructionsSectionText = `<section id=\"instructions\">\n<p>Paragraph 0</p>\n<pre><code class=\"language-html\">code example 0\n</code></pre>\n</section>`;\n    expect(file.data[instructionsId]).toBe(instructionsSectionText);\n  });\n\nit('should add nothing if a section id does not appear in the md', () => {\n    const plugin = addText([missingId]);\n    plugin(mockAST, file);\n    expect(file.data[descriptionId]).toBeUndefined();\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 4654,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-text.test.js",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "eef4bd01b58317b6278ad28510b705e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-text.test.js",
    "source_type": "git_repo",
    "title": "add-text.test",
    "content": "const plugin = addText([descriptionId, instructionsId]); plugin(mockAST, file); // the following text is in the AST, but is associated with a different // marker (instructions) const descriptionSectionText = `<section id=\"description\"> <p>Paragraph 1</p> <pre><code class=\"language-html\">code example </code></pre> </section>`; expect(file.data[descriptionId]).toEqual(descriptionSectionText); const instructionsSectionText = `<section id=\"instructions\"> <p>Paragraph 0</p> <pre><code class=\"language-html\">code example 0 </code></pre> </section>`; expect(file.data[instructionsId]).toBe(instructionsSectionText); }); it('should add nothing if a section id does not appear in the md', () => { const plugin = addText([missingId]); plugin(mockAST, file); expect(file.data[descriptionId]).toBeUndefined(); });\n\nit('should not escape html', () => {\n    const plugin = addText([descriptionId]);\n    plugin(realisticAST, file);\n    const expected = `last <code>h2</code> element`;\n    expect(file.data[descriptionId]).toEqual(expect.stringContaining(expected));\n  });\n\nit('should preserve nested html', () => {\n    const plugin = addText([descriptionId]);\n    plugin(realisticAST, file);\n    const expected = `<blockquote>\n  <p>Some text in a blockquote</p>\n  <p>\n    Some text in a blockquote, with <code>code</code>\n  </p>\n</blockquote>`;\n    expect(file.data[descriptionId]).toEqual(expect.stringContaining(expected));\n  });\n\nit('should not add paragraphs when html elements are separated by whitespace', () => {\n    const plugin = addText([instructionsId]);\n    plugin(realisticAST, file);\n    const expectedText1 = `<code>code</code> <tag>with more after a space</tag>`;\n    const expectedText2 = `another pair of <strong>elements</strong> <em>with a space</em>`;\n    expect(file.data[instructionsId]).toEqual(\n      expect.stringContaining(expectedText1)\n    );\n    expect(file.data[instructionsId]).toEqual(\n      expect.stringContaining(expectedText2)\n    );\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 4654,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-text.test.js",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "af7a6d24e637a3dffc89f7cbf1f69c4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-text.test.js",
    "source_type": "git_repo",
    "title": "add-text.test",
    "content": "() => { const plugin = addText([descriptionId]); plugin(realisticAST, file); const expected = `<blockquote> <p>Some text in a blockquote</p> <p> Some text in a blockquote, with <code>code</code> </p> </blockquote>`; expect(file.data[descriptionId]).toEqual(expect.stringContaining(expected)); }); it('should not add paragraphs when html elements are separated by whitespace', () => { const plugin = addText([instructionsId]); plugin(realisticAST, file); const expectedText1 = `<code>code</code> <tag>with more after a space</tag>`; const expectedText2 = `another pair of <strong>elements</strong> <em>with a space</em>`; expect(file.data[instructionsId]).toEqual( expect.stringContaining(expectedText1) ); expect(file.data[instructionsId]).toEqual( expect.stringContaining(expectedText2) ); });\n\nit('should have an output to match the snapshot', () => {\n    const plugin = addText([descriptionId, instructionsId]);\n    plugin(mockAST, file);\n    expect(file.data).toMatchSnapshot();\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 4654,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-text.test.js",
      "source_type": "git_repo"
    },
    "token_count": 238,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "089d66d8f2525327ce7655b71d842a88",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-video-question.js",
    "source_type": "git_repo",
    "title": "add-video-question",
    "content": "const { root } = require('mdast-builder');\nconst find = require('unist-util-find');\nconst { getSection } = require('./utils/get-section');\nconst getAllBefore = require('./utils/before-heading');\nconst mdastToHtml = require('./utils/mdast-to-html');\nconst { getParagraphContent } = require('./utils/get-paragraph-content');\n\nconst { splitOnThematicBreak } = require('./utils/split-on-thematic-break');\n\nfunction plugin() {\n  return transformer;\n  function transformer(tree, file) {\n    const allQuestionNodes = getSection(tree, '--questions--');\n\nif (allQuestionNodes.length > 0) {\n      const questions = [];\n      const questionTrees = [];\n\nallQuestionNodes.forEach(questionNode => {\n        const isStartOfQuestion =\n          questionNode.children?.[0]?.value === '--text--';\n        if (isStartOfQuestion) {\n          questionTrees.push([questionNode]);\n        } else {\n          questionTrees[questionTrees.length - 1].push(questionNode);\n        }\n      });\n\nquestionTrees.forEach(questionNodes => {\n        const questionTree = root(questionNodes);\n\nconst textNodes = getSection(questionTree, '--text--');\n        const answersNodes = getSection(questionTree, '--answers--');\n        const solutionNodes = getSection(questionTree, '--video-solution--');\n\nquestions.push(getQuestion(textNodes, answersNodes, solutionNodes));\n      });\n\nfile.data.questions = questions;\n    }\n  }\n}\n\nfunction getQuestion(textNodes, answersNodes, solutionNodes) {\n  const text = mdastToHtml(textNodes);\n  const answers = getAnswers(answersNodes);\n  const solution = getSolution(solutionNodes);\n\nif (!text) throw Error('text is missing from question');\n  if (!answers) throw Error('answers are missing from question');\n  if (!solution) throw Error('solution is missing from question');\n\nreturn { text, answers, solution };\n}\n\nfunction getAnswers(answersNodes) {\n  const answerGroups = splitOnThematicBreak(answersNodes);\n\nreturn answerGroups.map(answerGroup => {\n    const answerTree = root(answerGroup);\n    const feedback = find(answerTree, { value: '--feedback--' });\n\nif (feedback) {\n      const answerNodes = getAllBefore(answerTree, '--feedback--');\n      const feedbackNodes = getSection(answerTree, '--feedback--');\n\nif (answerNodes.length < 1) {\n        throw Error('Answer missing');\n      }",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2933,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-video-question.js",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d2ffd5b75bb915029e888ce7fc5eba90",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-video-question.js",
    "source_type": "git_repo",
    "title": "add-video-question",
    "content": "if (!text) throw Error('text is missing from question'); if (!answers) throw Error('answers are missing from question'); if (!solution) throw Error('solution is missing from question'); return { text, answers, solution }; } function getAnswers(answersNodes) { const answerGroups = splitOnThematicBreak(answersNodes); return answerGroups.map(answerGroup => { const answerTree = root(answerGroup); const feedback = find(answerTree, { value: '--feedback--' }); if (feedback) { const answerNodes = getAllBefore(answerTree, '--feedback--'); const feedbackNodes = getSection(answerTree, '--feedback--'); if (answerNodes.length < 1) { throw Error('Answer missing'); }\n\nreturn {\n        answer: mdastToHtml(answerNodes),\n        feedback: mdastToHtml(feedbackNodes)\n      };\n    }\n\nreturn { answer: mdastToHtml(answerGroup), feedback: null };\n  });\n}\n\nfunction getSolution(solutionNodes) {\n  let solution;\n  try {\n    solution = Number(getParagraphContent(solutionNodes[0]));\n    if (Number.isNaN(solution)) throw Error('Not a number');\n    if (solution < 1) throw Error('Not positive number');\n  } catch (e) {\n    console.log(e);\n    throw Error('A video solution should be a positive integer');\n  }\n\nreturn solution;\n}\n\nmodule.exports = plugin;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2933,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-video-question.js",
      "source_type": "git_repo"
    },
    "token_count": 285,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2589484ef16f8dbd253a83d513a41b5c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-video-question.test.js",
    "source_type": "git_repo",
    "title": "add-video-question.test",
    "content": "const parseFixture = require('../__fixtures__/parse-fixture');\nconst addVideoQuestion = require('./add-video-question');\n\ndescribe('add-video-question plugin', () => {\n  let simpleAST, videoAST, multipleQuestionAST, videoOutOfOrderAST;\n  const plugin = addVideoQuestion();\n  let file = { data: {} };\n\nbeforeAll(async () => {\n    simpleAST = await parseFixture('simple.md');\n    videoAST = await parseFixture('with-video-question.md');\n    multipleQuestionAST = await parseFixture(\n      'with-multiple-video-questions.md'\n    );\n    videoOutOfOrderAST = await parseFixture(\n      'with-video-question-out-of-order.md'\n    );\n  });\n\nbeforeEach(() => {\n    file = { data: {} };\n  });\n\nit('returns a function', () => {\n    expect(typeof plugin).toEqual('function');\n  });\n\nit('adds a `questions` property to `file.data`', () => {\n    plugin(videoAST, file);\n\nexpect('questions' in file.data).toBe(true);\n  });\n\nconst checkQuestion = question => {\n    expect(question).toHaveProperty('text');\n    expect(typeof question.text).toBe('string');\n    expect(question).toHaveProperty('solution');\n    expect(typeof question.solution).toBe('number');\n    expect(question).toHaveProperty('answers');\n    expect(Array.isArray(question.answers)).toBe(true);\n    expect(typeof question.answers[0]).toBe('object');\n    expect(question.answers[0]).toHaveProperty('answer');\n    expect(question.answers[0].answer).toBeTruthy();\n    expect(question.answers[0]).toHaveProperty('feedback');\n  };\n\nit('should generate a questions array from a video challenge AST', () => {\n    plugin(videoAST, file);\n    const testArr = file.data.questions;\n    expect(Array.isArray(testArr)).toBe(true);\n    expect(testArr.length).toBe(1);\n\ncheckQuestion(testArr[0]);\n  });\n\nit('should include multiple questions if present', () => {\n    plugin(multipleQuestionAST, file);\n    const testArr = file.data.questions;\n    expect(Array.isArray(testArr)).toBe(true);\n    expect(testArr.length).toBe(2);\n    for (const testObject of testArr) {\n      checkQuestion(testObject);\n    }\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3509,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-video-question.test.js",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "35537b68cd0d0e1fcf52fc5ed6df5cab",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-video-question.test.js",
    "source_type": "git_repo",
    "title": "add-video-question.test",
    "content": "{ plugin(videoAST, file); expect('questions' in file.data).toBe(true); }); const checkQuestion = question => { expect(question).toHaveProperty('text'); expect(typeof question.text).toBe('string'); expect(question).toHaveProperty('solution'); expect(typeof question.solution).toBe('number'); expect(question).toHaveProperty('answers'); expect(Array.isArray(question.answers)).toBe(true); expect(typeof question.answers[0]).toBe('object'); expect(question.answers[0]).toHaveProperty('answer'); expect(question.answers[0].answer).toBeTruthy(); expect(question.answers[0]).toHaveProperty('feedback'); }; it('should generate a questions array from a video challenge AST', () => { plugin(videoAST, file); const testArr = file.data.questions; expect(Array.isArray(testArr)).toBe(true); expect(testArr.length).toBe(1); checkQuestion(testArr[0]); }); it('should include multiple questions if present', () => { plugin(multipleQuestionAST, file); const testArr = file.data.questions; expect(Array.isArray(testArr)).toBe(true); expect(testArr.length).toBe(2); for (const testObject of testArr) { checkQuestion(testObject); } });\n\nit('should convert question and answer markdown into html', () => {\n    plugin(videoAST, file);\n    const testObject = file.data.questions[0];\n    expect(Object.keys(testObject).length).toBe(3);\n    expect(testObject.text).toBe(\n      '<p>Question line 1</p>\\n' +\n        `<pre><code class=\"language-js\">  var x = 'y';\\n` +\n        '</code></pre>'\n    );\n    expect(testObject.solution).toBe(3);\n    expect(testObject.answers[0]).toStrictEqual({\n      answer: '<p>Some inline <code>code</code></p>',\n      feedback: '<p>That is not correct.</p>'\n    });\n    expect(testObject.answers[1]).toStrictEqual({\n      answer: `<p>Some <em>italics</em></p>\n<p>A second answer paragraph.</p>`,\n      feedback: null\n    });\n    expect(testObject.answers[2]).toStrictEqual({\n      answer: '<p><code> code in </code> code tags</p>',\n      feedback: null\n    });\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3509,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-video-question.test.js",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "4d06376eb819f8536b7a3e00ae666c5c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-video-question.test.js",
    "source_type": "git_repo",
    "title": "add-video-question.test",
    "content": "for (const testObject of testArr) { checkQuestion(testObject); } }); it('should convert question and answer markdown into html', () => { plugin(videoAST, file); const testObject = file.data.questions[0]; expect(Object.keys(testObject).length).toBe(3); expect(testObject.text).toBe( '<p>Question line 1</p>\\n' + `<pre><code class=\"language-js\"> var x = 'y';\\n` + '</code></pre>' ); expect(testObject.solution).toBe(3); expect(testObject.answers[0]).toStrictEqual({ answer: '<p>Some inline <code>code</code></p>', feedback: '<p>That is not correct.</p>' }); expect(testObject.answers[1]).toStrictEqual({ answer: `<p>Some <em>italics</em></p> <p>A second answer paragraph.</p>`, feedback: null }); expect(testObject.answers[2]).toStrictEqual({ answer: '<p><code> code in </code> code tags</p>', feedback: null }); });\n\n// TODO: consider testing for more specific messages.  Ideally we them to say\n  // 'The md is missing \"x\"', so it's obvious how to fix things.\n  it('should throw if the subheadings are outside the question heading', () => {\n    expect.assertions(1);\n    expect(() => plugin(videoOutOfOrderAST)).toThrow();\n  });\n\nit('should NOT throw if there is no question', () => {\n    expect.assertions(1);\n    expect(() => plugin(simpleAST)).not.toThrow();\n  });\n\nit('should match the video snapshot', () => {\n    plugin(videoAST, file);\n    expect(file.data).toMatchSnapshot();\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3509,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\add-video-question.test.js",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "a2b695e7a812750ae9df533cc6c4f133",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\replace-imports.js",
    "source_type": "git_repo",
    "title": "replace-imports",
    "content": "const path = require('path');\nconst { isEmpty } = require('lodash');\nconst remark = require('remark');\nconst { read } = require('to-vfile');\nconst modifyChildren = require('unist-util-modify-children');\nconst remove = require('unist-util-remove');\nconst { selectAll } = require('unist-util-select');\nconst visit = require('unist-util-visit');\n\nconst { editableRegionMarker } = require('./add-seed');\nconst tableAndStrikeThrough = require('./table-and-strikethrough');\n\nasync function parse(file) {\n  return await remark().use(tableAndStrikeThrough).parse(file);\n}\n\nfunction plugin() {\n  return transformer;\n\nfunction transformer(tree, file, next) {\n    const importedFiles = selectAll('leafDirective[name=import]', tree);\n    if (!file) {\n      next('replace-imports must be passed a file');\n      return;\n    }\n    if (isEmpty(importedFiles)) {\n      next();\n      return;\n    }\n    const importPromises = importedFiles.map(async ({ attributes }) => {\n      const { from, component } = attributes;\n      // if these are missing, bail, since it's not an import.\n      if (!from || !component) {\n        return null;\n      }\n      const location = path.resolve(file.dirname, from);\n      return await read(location)\n        .then(parse)\n        .then(importedFile => {\n          function modifier(node, index, parent) {\n            const { type, name, attributes } = node;\n            const target = attributes ? attributes.component : null;\n            if (\n              type === 'leafDirective' &&\n              name === 'use' &&\n              target === component\n            ) {\n              if (!validateImports(importedFile))\n                throw Error(\n                  'Importing files containing ' +\n                    editableRegionMarker +\n                    's is not supported.'\n                );\n\nparent.children.splice(index, 1, ...importedFile.children);\n            }\n          }\n\nconst modify = modifyChildren(modifier);\n          modify(tree);\n        });\n    });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3073,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\replace-imports.js",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4eba618d1ff1fd7d21062be1177eadd9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\replace-imports.js",
    "source_type": "git_repo",
    "title": "replace-imports",
    "content": "const location = path.resolve(file.dirname, from); return await read(location) .then(parse) .then(importedFile => { function modifier(node, index, parent) { const { type, name, attributes } = node; const target = attributes ? attributes.component : null; if ( type === 'leafDirective' && name === 'use' && target === component ) { if (!validateImports(importedFile)) throw Error( 'Importing files containing ' + editableRegionMarker + 's is not supported.' ); parent.children.splice(index, 1, ...importedFile.children); } } const modify = modifyChildren(modifier); modify(tree); }); });\n\n// We're not interested in the results of importing, we just want to\n    // modify the tree and pass that new tree to follow plugins - as a result,\n    // we can't just use .then(next), as it would pass the array into next.\n    // Also, we remove the import statements here.\n    Promise.all(importPromises)\n      .then(() => {\n        remove(tree, isImportNode);\n        next();\n      })\n      .catch(err => {\n        console.error('error processing ::import');\n        console.error(err);\n        next(err);\n      });\n  }\n}\n\nfunction isImportNode({ type, name, attributes }) {\n  if (!attributes) return false;\n  return (\n    type === 'leafDirective' &&\n    name === 'import' &&\n    attributes.component &&\n    attributes.from\n  );\n}\n\nfunction validateImports(fileTree) {\n  let valid = true;\n\nfunction visitor({ value }) {\n    if (value && value.includes(editableRegionMarker)) {\n      valid = false;\n      return visit.EXIT;\n    } else {\n      return visit.CONTINUE;\n    }\n  }\n\nvisit(fileTree, visitor);\n  return valid;\n}\n\nmodule.exports = plugin;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3073,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\replace-imports.js",
      "source_type": "git_repo"
    },
    "token_count": 375,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f1aea1db0a87be6053661562c446143f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\replace-imports.test.js",
    "source_type": "git_repo",
    "title": "replace-imports.test",
    "content": "const path = require('path');\nconst cloneDeep = require('lodash/cloneDeep');\nconst toVfile = require('to-vfile');\nconst selectAll = require('unist-util-select').selectAll;\nconst parseFixture = require('../__fixtures__/parse-fixture');\n\nconst addImports = require('./replace-imports');\n\ndescribe('replace-imports', () => {\n  let importsAST,\n    importsTwoAST,\n    importsExtraAST,\n    simpleAST,\n    markerAST,\n    correctFile,\n    incorrectFile;\n\nlet originalImportsAST,\n    originalImportsTwoAST,\n    originalImportsExtraAST,\n    originalMarkerAST,\n    originalSimpleAST;\n\nbeforeAll(async () => {\n    originalImportsAST = await parseFixture('with-imports.md');\n    originalImportsTwoAST = await parseFixture('with-imports-two.md');\n    originalImportsExtraAST = await parseFixture('with-imports-extra.md');\n    originalSimpleAST = await parseFixture('simple.md');\n    originalMarkerAST = await parseFixture('with-marker-imports.md');\n  });\n\nbeforeEach(() => {\n    importsAST = cloneDeep(originalImportsAST);\n    importsTwoAST = cloneDeep(originalImportsTwoAST);\n    importsExtraAST = cloneDeep(originalImportsExtraAST);\n    simpleAST = cloneDeep(originalSimpleAST);\n    markerAST = cloneDeep(originalMarkerAST);\n    correctFile = toVfile(\n      path.resolve(__dirname, '../__fixtures__/with-imports.md')\n    );\n    incorrectFile = toVfile(\n      path.resolve(__dirname, '../__fixtures__/incorrect-path/with-imports.md')\n    );\n  });\n\nit('should return a function', () => {\n    expect.assertions(1);\n    const plugin = addImports();\n\nexpect(typeof plugin).toEqual('function');\n  });\n\nit('should fail when the imported file is null', done => {\n    const plugin = addImports();\n    const next = err => {\n      if (err) {\n        done();\n      } else {\n        done('An error should have been thrown by addImports');\n      }\n    };\n    plugin(importsAST, null, next);\n  });\n\nit('should proceed when the imported file exists', done => {\n    const plugin = addImports();\n    plugin(importsAST, correctFile, done);\n  });\n\nit('should fail when the imported file cannot be found', done => {\n    expect.assertions(1);\n    console.error = jest.fn();\n    const plugin = addImports();",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 7465,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\replace-imports.test.js",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "af604f85f4d297c275b5e65720f9800c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\replace-imports.test.js",
    "source_type": "git_repo",
    "title": "replace-imports.test",
    "content": "imported file is null', done => { const plugin = addImports(); const next = err => { if (err) { done(); } else { done('An error should have been thrown by addImports'); } }; plugin(importsAST, null, next); }); it('should proceed when the imported file exists', done => { const plugin = addImports(); plugin(importsAST, correctFile, done); }); it('should fail when the imported file cannot be found', done => { expect.assertions(1); console.error = jest.fn(); const plugin = addImports();\n\n// we have to rely on the next callback, because that is how you get error\n    // messages out of transformers\n    const next = err => {\n      if (err) {\n        expect(console.error).toHaveBeenCalledTimes(2);\n        done();\n      } else {\n        done('An error should have been thrown by addImports');\n      }\n    };\n    plugin(importsAST, incorrectFile, next);\n  });\n\nit('should modify the tree when there are imports', done => {\n    expect.assertions(1);\n    const plugin = addImports();\n    const next = err => {\n      if (err) {\n        done(err);\n      } else {\n        expect(importsAST).not.toEqual(originalImportsAST);\n        done();\n      }\n    };\n    plugin(importsAST, correctFile, next);\n  });\n\nit('should NOT modify the tree when there are NO imports', done => {\n    expect.assertions(1);\n    const plugin = addImports();\n    const next = err => {\n      if (err) {\n        done(err);\n      } else {\n        expect(simpleAST).toEqual(originalSimpleAST);\n        done();\n      }\n    };\n    plugin(simpleAST, correctFile, next);\n  });\n\nit('should remove all import statements', done => {\n    expect.assertions(2);\n    const selector = 'leafDirective[name=import]';\n    const plugin = addImports();\n    const importNodes = selectAll(selector, importsAST);\n\nexpect(importNodes.length).toBe(1);\n\nconst next = err => {\n      if (err) {\n        done(err);\n      } else {\n        const importNodes = selectAll(selector, importsAST);\n        expect(importNodes.length).toBe(0);\n        done();\n      }\n    };\n    plugin(importsAST, correctFile, next);\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 7465,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\replace-imports.test.js",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "9f800225bd9a5c58e71886c57fde97b2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\replace-imports.test.js",
    "source_type": "git_repo",
    "title": "replace-imports.test",
    "content": "{ expect.assertions(1); const plugin = addImports(); const next = err => { if (err) { done(err); } else { expect(simpleAST).toEqual(originalSimpleAST); done(); } }; plugin(simpleAST, correctFile, next); }); it('should remove all import statements', done => { expect.assertions(2); const selector = 'leafDirective[name=import]'; const plugin = addImports(); const importNodes = selectAll(selector, importsAST); expect(importNodes.length).toBe(1); const next = err => { if (err) { done(err); } else { const importNodes = selectAll(selector, importsAST); expect(importNodes.length).toBe(0); done(); } }; plugin(importsAST, correctFile, next); });\n\nit('should not remove an ::import without the required attributes', done => {\n    expect.assertions(2);\n    const selector = 'leafDirective[name=import]';\n    const plugin = addImports();\n    const importNodes = selectAll(selector, importsExtraAST);\n\nexpect(importNodes.length).toBe(3);\n\nconst next = err => {\n      if (err) {\n        done(err);\n      } else {\n        const importNodes = selectAll(selector, importsExtraAST);\n        expect(importNodes.length).toBe(1);\n        done();\n      }\n    };\n    plugin(importsExtraAST, correctFile, next);\n  });\n\nit('should remove all matching ::use statements', done => {\n    expect.assertions(2);\n    const selector = 'leafDirective[name=use]';\n    const plugin = addImports();\n    const components = selectAll(selector, importsAST);\n\n// one matching component and two other jsx nodes\n    expect(components.length).toBe(1);\n\nconst next = err => {\n      if (err) {\n        done(err);\n      } else {\n        const components = selectAll(selector, importsAST);\n        expect(components.length).toBe(0);\n        done();\n      }\n    };\n    plugin(importsAST, correctFile, next);\n  });\n\nit('should replace the ::use statement with the imported content', done => {\n    // checks the contents of script.md are there after the import step\n    expect.assertions(2);\n    const plugin = addImports();",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 7465,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\replace-imports.test.js",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "6017f7f23b5fa895350e8809f34966aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\replace-imports.test.js",
    "source_type": "git_repo",
    "title": "replace-imports.test",
    "content": "= 'leafDirective[name=use]'; const plugin = addImports(); const components = selectAll(selector, importsAST); // one matching component and two other jsx nodes expect(components.length).toBe(1); const next = err => { if (err) { done(err); } else { const components = selectAll(selector, importsAST); expect(components.length).toBe(0); done(); } }; plugin(importsAST, correctFile, next); }); it('should replace the ::use statement with the imported content', done => { // checks the contents of script.md are there after the import step expect.assertions(2); const plugin = addImports();\n\nconst next = err => {\n      if (err) {\n        done(err);\n      } else {\n        const jsNodes = selectAll('code[lang=js]', importsAST);\n        expect(jsNodes.length).toBe(4);\n\nconst codeValues = jsNodes.map(({ value }) => value);\n        expect(codeValues).toEqual(\n          expect.arrayContaining([\n            `for (let index = 0; index < array.length; index++) {\n  const element = array[index];\n  // imported from script.md\n}`\n          ])\n        );\n        done();\n      }\n    };\n    plugin(importsAST, correctFile, next);\n  });\n\nit('should handle multiple import statements', done => {\n    // checks the contents of script.md are there after the import step\n    expect.assertions(4);\n    const plugin = addImports();\n\nconst next = err => {\n      if (err) {\n        done(err);\n      } else {\n        const jsNodes = selectAll('code[lang=js]', importsTwoAST);\n        expect(jsNodes.length).toBe(4);\n\nconst codeValues = jsNodes.map(({ value }) => value);\n        expect(codeValues).toEqual(\n          expect.arrayContaining([\n            `for (let index = 0; index < array.length; index++) {\n  const element = array[index];\n  // imported from script.md\n}`\n          ])\n        );\n        const cssNodes = selectAll('code[lang=css]', importsTwoAST);\n        expect(cssNodes.length).toBe(2);\n\nconst cssValues = cssNodes.map(({ value }) => value);\n        expect(cssValues).toEqual(\n          expect.arrayContaining([\n            `div {\n  background: red\n}`\n          ])\n        );\n        done();\n      }\n    };\n    plugin(importsTwoAST, correctFile, next);\n  });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 7465,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\replace-imports.test.js",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "18b41941feb511c6251579227d32656b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\replace-imports.test.js",
    "source_type": "git_repo",
    "title": "replace-imports.test",
    "content": "=> { if (err) { done(err); } else { const jsNodes = selectAll('code[lang=js]', importsTwoAST); expect(jsNodes.length).toBe(4); const codeValues = jsNodes.map(({ value }) => value); expect(codeValues).toEqual( expect.arrayContaining([ `for (let index = 0; index < array.length; index++) { const element = array[index]; // imported from script.md }` ]) ); const cssNodes = selectAll('code[lang=css]', importsTwoAST); expect(cssNodes.length).toBe(2); const cssValues = cssNodes.map(({ value }) => value); expect(cssValues).toEqual( expect.arrayContaining([ `div { background: red }` ]) ); done(); } }; plugin(importsTwoAST, correctFile, next); });\n\nit('should reject imported files with editable region markers', done => {\n    expect.assertions(1);\n    console.error = jest.fn();\n    const plugin = addImports();\n    const next = err => {\n      if (err) {\n        expect(console.error).toHaveBeenCalledTimes(2);\n        done();\n      } else {\n        done('An error should have been thrown by addImports');\n      }\n    };\n    plugin(markerAST, correctFile, next);\n  });\n\nit('should have an output to match the snapshot', done => {\n    const plugin = addImports();\n    const next = err => {\n      if (err) {\n        done(err);\n      } else {\n        expect(importsAST).toMatchSnapshot();\n        done();\n      }\n    };\n    plugin(importsAST, correctFile, next);\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 7465,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\replace-imports.test.js",
      "source_type": "git_repo"
    },
    "token_count": 333,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "56e79d35272147c2d807b156d78598ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\restore-directives.js",
    "source_type": "git_repo",
    "title": "restore-directives",
    "content": "const directive = require('mdast-util-directive');\nvar toMarkdown = require('mdast-util-to-markdown');\nconst { matches } = require('unist-util-select');\nconst visit = require('unist-util-visit');\n\nfunction plugin() {\n  return transformer;\n\nfunction transformer(tree) {\n    visit(tree, visitor);\n\nfunction visitor(node, id, parent) {\n      // currently `remark-directive` seems to be ignoring containerDirectives\n      // but, assuming that will get fixed, we test for it anyway.\n      const isDirective =\n        matches('leafDirective', node) ||\n        matches('textDirective', node) ||\n        matches('containerDirective', node);\n\nif (isDirective) {\n        parent.children[id] = {\n          type: 'text',\n          value: toMarkdown(node, {\n            extensions: [directive.toMarkdown]\n          }).trim()\n        };\n      }\n    }\n  }\n}\n\nmodule.exports = plugin;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 882,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\restore-directives.js",
      "source_type": "git_repo"
    },
    "token_count": 189,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a51451676f709306273f3e64c9d9f227",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\restore-directives.test.js",
    "source_type": "git_repo",
    "title": "restore-directives.test",
    "content": "const cloneDeep = require('lodash/cloneDeep');\nconst find = require('unist-util-find');\nconst { selectAll } = require('unist-util-select');\n\nconst parseFixture = require('../__fixtures__/parse-fixture');\nconst restoreDirectives = require('./restore-directives');\n\ndescribe('restore-directives', () => {\n  let directivesAST, directivesOriginalAST;\n  beforeAll(async () => {\n    directivesOriginalAST = await parseFixture('with-directives.md');\n  });\n  beforeEach(() => {\n    directivesAST = cloneDeep(directivesOriginalAST);\n  });\n\nit('should return a function', () => {\n    expect.assertions(1);\n    const plugin = restoreDirectives();\n\nexpect(typeof plugin).toEqual('function');\n  });\n  // TODO: if remark-directive starts processing containers, add them to the\n  // tests\n  it('should remove any directives in the AST', () => {\n    expect.assertions(4);\n    const plugin = restoreDirectives();\n    let leaves = selectAll('leafDirective', directivesAST);\n    let text = selectAll('textDirective', directivesAST);\n    expect(leaves.length).toBe(2);\n    expect(text.length).toBe(2);\n    plugin(directivesAST);\n    leaves = selectAll('leafDirective', directivesAST);\n    text = selectAll('textDirective', directivesAST);\n    expect(leaves.length).toBe(0);\n    expect(text.length).toBe(0);\n  });\n\nit('should put the original text into the AST', () => {\n    expect.assertions(4);\n    const plugin = restoreDirectives();\n\nlet nodeWithImport = find(\n      directivesAST,\n      node => node.value && node.value.includes('::import')\n    );\n    let nodeWithRoot = find(\n      directivesAST,\n      node => node.value && node.value.includes(':root')\n    );\n\nexpect(nodeWithImport).not.toBeTruthy();\n    expect(nodeWithRoot).not.toBeTruthy();\n    plugin(directivesAST);\n\nnodeWithImport = find(\n      directivesAST,\n      node => node.value && node.value.includes('::import')\n    );\n    nodeWithRoot = find(\n      directivesAST,\n      node => node.value && node.value.includes(':root')\n    );\n\nexpect(nodeWithImport).toBeTruthy();\n    expect(nodeWithRoot).toBeTruthy();\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2091,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\restore-directives.test.js",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "261d2708c027602646838b45eb846076",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\table-and-strikethrough.js",
    "source_type": "git_repo",
    "title": "table-and-strikethrough",
    "content": "'use strict';\n\nvar strikethroughFromMD = require('mdast-util-gfm-strikethrough/from-markdown');\nvar tableFromMD = require('mdast-util-gfm-table/from-markdown');\nvar strikethrough = require('micromark-extension-gfm-strikethrough');\nvar table = require('micromark-extension-gfm-table');\n\nmodule.exports = tableAndStrikethrough;\n\nfunction tableAndStrikethrough() {\n  var data = this.data();\n\nadd('micromarkExtensions', strikethrough());\n  add('micromarkExtensions', table);\n  add('fromMarkdownExtensions', strikethroughFromMD);\n  add('fromMarkdownExtensions', tableFromMD);\n\nfunction add(field, value) {\n    if (data[field]) data[field].push(value);\n    else data[field] = [value];\n  }\n}\n\n// Based on remark-gfm, extended as described in\n// https://github.com/remarkjs/remark/tree/main/packages/remark-parse#extending-the-parser",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 830,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\table-and-strikethrough.js",
      "source_type": "git_repo"
    },
    "token_count": 212,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ca5f28a6bf93d98d3684682f00d0ab66",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\validate-sections.js",
    "source_type": "git_repo",
    "title": "validate-sections",
    "content": "const { findAll } = require('./utils/find-all');\nconst { isMarker } = require('./utils/get-section');\n\nconst VALID_MARKERS = [\n  // Level 1\n  '# --after-all--',\n  '# --after-each--',\n  '# --assignment--',\n  '# --before-all--',\n  '# --before-each--',\n  '# --description--',\n  '# --explanation--',\n  '# --fillInTheBlank--',\n  '# --hints--',\n  '# --instructions--',\n  '# --notes--',\n  '# --questions--',\n  '# --quizzes--',\n  '# --scene--',\n  '# --seed--',\n  '# --solutions--',\n  '# --transcript--',\n\n// Level 2\n  '## --answers--',\n  '## --blanks--',\n  '## --quiz--',\n  '## --seed-contents--',\n  '## --sentence--',\n  '## --text--',\n  '## --video-solution--',\n  // TODO: Remove these two markers when https://github.com/freeCodeCamp/freeCodeCamp/issues/57107 is resolved\n  '## --after-user-code--',\n  '## --before-user-code--',\n\n// Level 3\n  '### --feedback--',\n  '### --question--',\n\n// Level 4\n  '#### --answer--',\n  '#### --distractors--',\n  '#### --text--'\n];\n\n// Special markers that should not be used as headings\nconst NON_HEADING_MARKERS = ['--fcc-editable-region--'];\n\nfunction validateSections() {\n  function transformer(tree) {\n    const allMarkers = findAll(tree, isMarker);\n\nconst invalidMarkerNames = [];\n    const invalidHeadingLevels = [];\n    const nonHeadingMarkersAsHeadings = [];\n\nconst errors = [];\n\nfor (const markerNode of allMarkers) {\n      const markerValue = markerNode.children[0].value;\n      const headingLevel = markerNode.depth;\n      const fullMarker = '#'.repeat(headingLevel) + ' ' + markerValue;\n\nif (NON_HEADING_MARKERS.includes(markerValue)) {\n        nonHeadingMarkersAsHeadings.push(fullMarker);\n        continue;\n      }\n\nif (!VALID_MARKERS.includes(fullMarker)) {\n        const markerExistsAtAnyLevel = VALID_MARKERS.some(validMarker =>\n          validMarker.endsWith(markerValue)\n        );",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3370,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\validate-sections.js",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1d0434ef2f3c0104085f14a95f6c2bee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\validate-sections.js",
    "source_type": "git_repo",
    "title": "validate-sections",
    "content": "should not be used as headings const NON_HEADING_MARKERS = ['--fcc-editable-region--']; function validateSections() { function transformer(tree) { const allMarkers = findAll(tree, isMarker); const invalidMarkerNames = []; const invalidHeadingLevels = []; const nonHeadingMarkersAsHeadings = []; const errors = []; for (const markerNode of allMarkers) { const markerValue = markerNode.children[0].value; const headingLevel = markerNode.depth; const fullMarker = '#'.repeat(headingLevel) + ' ' + markerValue; if (NON_HEADING_MARKERS.includes(markerValue)) { nonHeadingMarkersAsHeadings.push(fullMarker); continue; } if (!VALID_MARKERS.includes(fullMarker)) { const markerExistsAtAnyLevel = VALID_MARKERS.some(validMarker => validMarker.endsWith(markerValue) );\n\nif (markerExistsAtAnyLevel) {\n          const validLevels = VALID_MARKERS.filter(validMarker =>\n            validMarker.endsWith(markerValue)\n          ).map(validMarker => validMarker.split(' ')[0]); // Extract the # symbols\n\ninvalidHeadingLevels.push({\n            fullMarker,\n            markerValue,\n            validLevels\n          });\n        } else {\n          invalidMarkerNames.push(markerValue);\n        }\n      }\n    }\n\nif (invalidMarkerNames.length > 0) {\n      errors.push(\n        `Invalid marker names: ${invalidMarkerNames.map(m => `\"${m}\"`).join(', ')}.`\n      );\n    }\n\nif (nonHeadingMarkersAsHeadings.length > 0) {\n      errors.push(\n        `Non-heading markers should not be used as headings: ${nonHeadingMarkersAsHeadings.map(m => `\"${m}\"`).join(', ')}.`\n      );\n    }\n\nif (invalidHeadingLevels.length > 0) {\n      const levelErrors = invalidHeadingLevels.map(\n        ({ fullMarker, markerValue, validLevels }) => {\n          const validText =\n            validLevels.length === 1\n              ? `${validLevels[0]} ${markerValue}`\n              : validLevels\n                  .map(level => `${level} ${markerValue}`)\n                  .join(' or ');\n          return `\"${fullMarker}\" should be \"${validText}\"`;\n        }\n      );\n\nerrors.push(`Invalid heading levels: ${levelErrors.join(', ')}.`);\n    }\n\nif (errors.length > 0) {\n      throw new Error(errors.join('\\n'));\n    }\n  }\n\nreturn transformer;\n}\n\nmodule.exports = validateSections;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3370,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\validate-sections.js",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2a8e5487f19953ff9f3f1c3d7729c575",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\validate-sections.test.js",
    "source_type": "git_repo",
    "title": "validate-sections.test",
    "content": "const unified = require('unified');\nconst remark = require('remark-parse');\nconst frontmatter = require('remark-frontmatter');\nconst addFrontmatter = require('./add-frontmatter');\nconst validateSections = require('./validate-sections');\n\nconst processor = unified()\n  .use(remark)\n  .use(frontmatter, ['yaml'])\n  .use(addFrontmatter)\n  .use(validateSections);\n\ndescribe('validate-sections plugin', () => {\n  it('should pass when all section markers are valid', () => {\n    const file = `---\nid: test\ntitle: Test\n---\n\n# --after-all--\nAfter all hook.\n\n# --after-each--\nAfter each hook.\n\n# --assignment--\nAssignment.\n\n# --before-all--\nBefore all hook.\n\n# --before-each--\nBefore each hook.\n\n# --description--\nText content.\n\n# --explanation--\nExplanation.\n\n# --fillInTheBlank--\nFill in blank.\n\n# --hints--\nHints.\n\n# --instructions--\nMore text.\n\n# --notes--\nNotes.\n\n# --questions--\nVideo questions.\n\n# --quizzes--\nQuiz section.\n\n# --scene--\nScene content.\n\n# --seed--\nSeed section.\n\n# --solutions--\nSolutions.\n\n# --transcript--\nTranscript.\n\n## --answers--\nAnswers.\n\n## --blanks--\nBlanks.\n\n## --quiz--\nIndividual quiz.\n\n## --seed-contents--\nContents here.\n\n## --sentence--\nSentence.\n\n## --text--\nQuestion text.\n\n## --video-solution--\nVideo solution.\n\n## --after-user-code--\nAfter code.\n\n## --before-user-code--\nBefore code.\n\n### --feedback--\nFeedback.\n\n### --question--\nQuiz question.\n\n#### --answer--\nCorrect answer.\n\n#### --distractors--\nDistractors.\n\n#### --text--\nQuestion text.\n\n--fcc-editable-region--\nEditable region.\n`;\n\nexpect(() => {\n      processor.runSync(processor.parse(file));\n    }).not.toThrow();\n  });\n\nit('should throw error for invalid marker names', () => {\n    const file = `---\nid: test\ntitle: Test\n---\n\n# --descriptio--\nTypo in marker name.\n\n# --instructionss--\nAnother typo.\n\n# -- instructions--\nAnother typo.\n\n# --feedback---\nAnother typo.\n\n# --invalid-marker--\nCompletely invalid marker.\n`;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 4386,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\validate-sections.test.js",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "70750f9613f9ef7186b6fa49bc8ce510",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\validate-sections.test.js",
    "source_type": "git_repo",
    "title": "validate-sections.test",
    "content": "## --before-user-code-- Before code. ### --feedback-- Feedback. ### --question-- Quiz question. #### --answer-- Correct answer. #### --distractors-- Distractors. #### --text-- Question text. --fcc-editable-region-- Editable region. `; expect(() => { processor.runSync(processor.parse(file)); }).not.toThrow(); }); it('should throw error for invalid marker names', () => { const file = `--- id: test title: Test --- # --descriptio-- Typo in marker name. # --instructionss-- Another typo. # -- instructions-- Another typo. # --feedback--- Another typo. # --invalid-marker-- Completely invalid marker. `;\n\nexpect(() => {\n      processor.runSync(processor.parse(file));\n    }).toThrow(\n      'Invalid marker names: \"--descriptio--\", \"--instructionss--\", \"-- instructions--\", \"--feedback---\", \"--invalid-marker--\".'\n    );\n  });\n\nit('should validate case-sensitive markers', () => {\n    const file = `---\nid: test\ntitle: Test\n---\n\n# --INSTRUCTIONS--\nWrong case.\n\n# --Instructions--\nAlso wrong case.\n`;\n\nexpect(() => {\n      processor.runSync(processor.parse(file));\n    }).toThrow('Invalid marker names: \"--INSTRUCTIONS--\", \"--Instructions--\".');\n  });\n\nit('should throw error for correct marker at wrong heading level', () => {\n    const file = `---\nid: test\ntitle: Test\n---\n\n## --instructions--\nInstructions should be at level 1, not 2.\n\n### --seed-contents--\nSeed contents should be at level 2, not 3.\n`;\n\nexpect(() => {\n      processor.runSync(processor.parse(file));\n    }).toThrow(\n      'Invalid heading levels: \"## --instructions--\" should be \"# --instructions--\", \"### --seed-contents--\" should be \"## --seed-contents--\".'\n    );\n  });\n\nit('should throw combined errors for invalid markers and wrong levels', () => {\n    const file = `---\nid: test\ntitle: Test\n---\n\n## --instructions--\nWrong level.\n\n# --invalid-marker--\nInvalid marker.\n\n### --seed-contents--\nWrong level.\n`;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 4386,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\validate-sections.test.js",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "a4f05040846649f875ea9d90d18017df",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\validate-sections.test.js",
    "source_type": "git_repo",
    "title": "validate-sections.test",
    "content": "should be at level 1, not 2. ### --seed-contents-- Seed contents should be at level 2, not 3. `; expect(() => { processor.runSync(processor.parse(file)); }).toThrow( 'Invalid heading levels: \"## --instructions--\" should be \"# --instructions--\", \"### --seed-contents--\" should be \"## --seed-contents--\".' ); }); it('should throw combined errors for invalid markers and wrong levels', () => { const file = `--- id: test title: Test --- ## --instructions-- Wrong level. # --invalid-marker-- Invalid marker. ### --seed-contents-- Wrong level. `;\n\nexpect(() => {\n      processor.runSync(processor.parse(file));\n    }).toThrow(\n      'Invalid marker names: \"--invalid-marker--\".\\nInvalid heading levels: \"## --instructions--\" should be \"# --instructions--\", \"### --seed-contents--\" should be \"## --seed-contents--\".'\n    );\n  });\n\nit('should throw error for fcc-editable-region when used as headings', () => {\n    const file = `---\nid: test\ntitle: Test\n---\n\n# --fcc-editable-region--\nThis should not be a heading.\n\n## --fcc-editable-region--\nThis should also not be a heading.\n`;\n\nexpect(() => {\n      processor.runSync(processor.parse(file));\n    }).toThrow(\n      'Non-heading markers should not be used as headings: \"# --fcc-editable-region--\", \"## --fcc-editable-region--\".'\n    );\n  });\n\nit('should throw error for markers valid at multiple levels but used at an invalid level', () => {\n    const file = `---\nid: test\ntitle: Test\n---\n\n### --text--\nThis marker is valid at level 2 or level 4, but not at level 3.\n`;\n\nexpect(() => {\n      processor.runSync(processor.parse(file));\n    }).toThrow(\n      'Invalid heading levels: \"### --text--\" should be \"## --text-- or #### --text--\".'\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 4386,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\validate-sections.test.js",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "4d329b86141ce95f7b33029dbe4481f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\tools\\example.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}\n--seed--\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\njs\nvar x = 'y';\n--solutions--\n```html\n```\ncss\nbody {\nbackground: white;\n}\njs\nvar x = 'y';\n``;",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 679,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\tools\\example.md",
      "source_type": "git_repo"
    },
    "token_count": 135,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7c766da6239e81e388760da83188699d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\tools\\full-parse.js",
    "source_type": "git_repo",
    "title": "full-parse",
    "content": "const path = require('path');\nconst { inspect } = require('util');\n\nconst { parseMD } = require('../index');\n\n(async () => {\n  const fullPath = path.resolve(__dirname, './example.md');\n  const output = await parseMD(fullPath);\n  console.log(inspect(output, null, null, true));\n})();",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 283,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\tools\\full-parse.js",
      "source_type": "git_repo"
    },
    "token_count": 67,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "44cb13c66369ea19f1498e8e778a2144",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\tools\\generate-ast.js",
    "source_type": "git_repo",
    "title": "generate-ast",
    "content": "const remark = require('remark');\nconst directive = require('remark-directive');\nconst frontmatter = require('remark-frontmatter');\nconst { read } = require('to-vfile');\n\n(async () => {\n  const path = './example.md';\n  const file = await read(path);\n  const out = await remark()\n    .use(directive)\n    .use(frontmatter, ['yaml'])\n    .parse(file);\n\nconsole.log(out);\n})();",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 376,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\tools\\generate-ast.js",
      "source_type": "git_repo"
    },
    "token_count": 90,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2d076c71d1b6b70c6ac099458d03c456",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\tools\\inspect-ast.js",
    "source_type": "git_repo",
    "title": "inspect-ast",
    "content": "const { inspect } = require('util');\nconst remark = require('remark');\nconst html = require('remark-html');\nconst { read } = require('to-vfile');\n\n(async () => {\n  const path = './example.md';\n  const file = await read(path);\n  await remark()\n    .use(() => tree => console.log(inspect(tree, null, null, true)))\n    .use(html)\n    .process(file);\n})();",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 353,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\tools\\inspect-ast.js",
      "source_type": "git_repo"
    },
    "token_count": 89,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a26b06e818ef799c82d1395429c97202",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\tools\\parse-md.js",
    "source_type": "git_repo",
    "title": "parse-md",
    "content": "const remark = require('remark');\nconst directives = require('remark-directive');\nconst stringify = require('remark-stringify');\nconst { read } = require('to-vfile');\n\n(async () => {\n  const path = './example.md';\n  const file = await read(path);\n  const contents = await remark()\n    .use(directives)\n    .use(() => tree => console.dir(tree, { depth: null, colors: true }))\n    .use(stringify)\n    .process(file);\n  console.log(contents);\n})();",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 446,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\tools\\parse-md.js",
      "source_type": "git_repo"
    },
    "token_count": 107,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b5b99940ab2115b8c1db7f0f1ebbe57f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\ast-with-quizzes.json",
    "source_type": "git_repo",
    "title": "ast-with-quizzes",
    "content": "{\n  \"type\": \"root\",\n  \"children\": [\n    {\n      \"type\": \"heading\",\n      \"depth\": 1,\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"--quizzes--\",\n          \"position\": {\n            \"start\": {\n              \"line\": 1,\n              \"column\": 3,\n              \"offset\": 2\n            },\n            \"end\": {\n              \"line\": 1,\n              \"column\": 14,\n              \"offset\": 13\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 1,\n          \"column\": 1,\n          \"offset\": 0\n        },\n        \"end\": {\n          \"line\": 1,\n          \"column\": 14,\n          \"offset\": 13\n        }\n      }\n    },\n    {\n      \"type\": \"heading\",\n      \"depth\": 2,\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"--quiz--\",\n          \"position\": {\n            \"start\": {\n              \"line\": 3,\n              \"column\": 4,\n              \"offset\": 18\n            },\n            \"end\": {\n              \"line\": 3,\n              \"column\": 12,\n              \"offset\": 26\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 3,\n          \"column\": 1,\n          \"offset\": 15\n        },\n        \"end\": {\n          \"line\": 3,\n          \"column\": 12,\n          \"offset\": 26\n        }\n      }\n    },\n    {\n      \"type\": \"heading\",\n      \"depth\": 3,\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"--question--\",\n          \"position\": {\n            \"start\": {\n              \"line\": 5,\n              \"column\": 5,\n              \"offset\": 32\n            },\n            \"end\": {\n              \"line\": 5,\n              \"column\": 17,\n              \"offset\": 44\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 5,\n          \"column\": 1,\n          \"offset\": 28\n        },\n        \"end\": {\n          \"line\": 5,\n          \"column\": 17,\n          \"offset\": 44\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 1, question 1\",\n          \"position\": {\n            \"start\": {\n              \"line\": 7,\n              \"column\": 1,\n              \"offset\": 46\n            },\n            \"end\": {\n              \"line\": 7,\n              \"column\": 19,\n              \"offset\": 64\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 7,\n          \"column\": 1,\n          \"offset\": 46\n        },\n        \"end\": {\n          \"line\": 7,\n          \"column\": 19,\n          \"offset\": 64\n        }\n      }\n    },\n    {\n      \"type\": \"heading\",\n      \"depth\": 3,\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"--distractors--\",\n          \"position\": {\n            \"start\": {\n              \"line\": 9,\n              \"column\": 5,\n              \"offset\": 70\n            },\n            \"end\": {\n              \"line\": 9,\n              \"column\": 20,\n              \"offset\": 85\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 9,\n          \"column\": 1,\n          \"offset\": 66\n        },\n        \"end\": {\n          \"line\": 9,\n          \"column\": 20,\n          \"offset\": 85\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 1, question 1, distractor 1\",\n          \"position\": {\n            \"start\": {\n              \"line\": 11,\n              \"column\": 1,\n              \"offset\": 87\n            },\n            \"end\": {\n              \"line\": 11,\n              \"column\": 33,\n              \"offset\": 119\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 11,\n          \"column\": 1,\n          \"offset\": 87\n        },\n        \"end\": {\n          \"line\": 11,\n          \"column\": 33,\n          \"offset\": 119\n        }\n      }\n    },\n    {\n      \"type\": \"thematicBreak\",\n      \"position\": {\n        \"start\": {\n          \"line\": 13,\n          \"column\": 1,\n          \"offset\": 121\n        },\n        \"end\": {\n          \"line\": 13,\n          \"column\": 4,\n          \"offset\": 124\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 1, question 1, distractor 2\",\n          \"position\": {\n            \"start\": {\n              \"line\": 15,\n              \"column\": 1,\n              \"offset\": 126\n            },\n            \"end\": {\n              \"line\": 15,\n              \"column\": 33,\n              \"offset\": 158\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 15,\n          \"column\": 1,\n          \"offset\": 126\n        },\n        \"end\": {\n          \"line\": 15,\n          \"column\": 33,\n          \"offset\": 158\n        }\n      }\n    },\n    {\n      \"type\": \"thematicBreak\",\n      \"position\": {\n        \"start\": {\n          \"line\": 17,\n          \"column\": 1,\n          \"offset\": 160\n        },\n        \"end\": {\n          \"line\": 17,\n          \"column\": 4,\n          \"offset\": 163\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 1, question 1, distractor 3\",\n          \"position\": {\n            \"start\": {\n              \"line\": 19,\n              \"column\": 1,\n              \"offset\": 165\n            },\n            \"end\": {\n              \"line\": 19,\n              \"column\": 33,\n              \"offset\": 197\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 19,\n          \"column\": 1,\n          \"offset\": 165\n        },\n        \"end\": {\n          \"line\": 19,\n          \"column\": 33,\n          \"offset\": 197\n        }\n      }\n    },\n    {\n      \"type\": \"heading\",\n      \"depth\": 3,\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"--answer--\",\n          \"position\": {\n            \"start\": {\n              \"line\": 21,\n              \"column\": 5,\n              \"offset\": 203\n            },\n            \"end\": {\n              \"line\": 21,\n              \"column\": 15,\n              \"offset\": 213\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 21,\n          \"column\": 1,\n          \"offset\": 199\n        },\n        \"end\": {\n          \"line\": 21,\n          \"column\": 15,\n          \"offset\": 213\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 1, question 1, answer\",\n          \"position\": {\n            \"start\": {\n              \"line\": 23,\n              \"column\": 1,\n              \"offset\": 215\n            },\n            \"end\": {\n              \"line\": 23,\n              \"column\": 27,\n              \"offset\": 241\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 23,\n          \"column\": 1,\n          \"offset\": 215\n        },\n        \"end\": {\n          \"line\": 23,\n          \"column\": 27,\n          \"offset\": 241\n        }\n      }\n    },\n    {\n      \"type\": \"heading\",\n      \"depth\": 3,\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"--question--\",\n          \"position\": {\n            \"start\": {\n              \"line\": 25,\n              \"column\": 5,\n              \"offset\": 247\n            },\n            \"end\": {\n              \"line\": 25,\n              \"column\": 17,\n              \"offset\": 259\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 25,\n          \"column\": 1,\n          \"offset\": 243\n        },\n        \"end\": {\n          \"line\": 25,\n          \"column\": 17,\n          \"offset\": 259\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 1, question 2\",\n          \"position\": {\n            \"start\": {\n              \"line\": 27,\n              \"column\": 1,\n              \"offset\": 261\n            },\n            \"end\": {\n              \"line\": 27,\n              \"column\": 19,\n              \"offset\": 279\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 27,\n          \"column\": 1,\n          \"offset\": 261\n        },\n        \"end\": {\n          \"line\": 27,\n          \"column\": 19,\n          \"offset\": 279\n        }\n      }\n    },\n    {\n      \"type\": \"heading\",\n      \"depth\": 3,\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"--distractors--\",\n          \"position\": {\n            \"start\": {\n              \"line\": 29,\n              \"column\": 5,\n              \"offset\": 285\n            },\n            \"end\": {\n              \"line\": 29,\n              \"column\": 20,\n              \"offset\": 300\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 29,\n          \"column\": 1,\n          \"offset\": 281\n        },\n        \"end\": {\n          \"line\": 29,\n          \"column\": 20,\n          \"offset\": 300\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 1, question 2, distractor 1\",\n          \"position\": {\n            \"start\": {\n              \"line\": 31,\n              \"column\": 1,\n              \"offset\": 302\n            },\n            \"end\": {\n              \"line\": 31,\n              \"column\": 33,\n              \"offset\": 334\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 31,\n          \"column\": 1,\n          \"offset\": 302\n        },\n        \"end\": {\n          \"line\": 31,\n          \"column\": 33,\n          \"offset\": 334\n        }\n      }\n    },\n    {\n      \"type\": \"thematicBreak\",\n      \"position\": {\n        \"start\": {\n          \"line\": 33,\n          \"column\": 1,\n          \"offset\": 336\n        },\n        \"end\": {\n          \"line\": 33,\n          \"column\": 4,\n          \"offset\": 339\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 1, question 2, distractor 2\",\n          \"position\": {\n            \"start\": {\n              \"line\": 35,\n              \"column\": 1,\n              \"offset\": 341\n            },\n            \"end\": {\n              \"line\": 35,\n              \"column\": 33,\n              \"offset\": 373\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 35,\n          \"column\": 1,\n          \"offset\": 341\n        },\n        \"end\": {\n          \"line\": 35,\n          \"column\": 33,\n          \"offset\": 373\n        }\n      }\n    },\n    {\n      \"type\": \"thematicBreak\",\n      \"position\": {\n        \"start\": {\n          \"line\": 37,\n          \"column\": 1,\n          \"offset\": 375\n        },\n        \"end\": {\n          \"line\": 37,\n          \"column\": 4,\n          \"offset\": 378\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 1, question 2, distractor 3\",\n          \"position\": {\n            \"start\": {\n              \"line\": 39,\n              \"column\": 1,\n              \"offset\": 380\n            },\n            \"end\": {\n              \"line\": 39,\n              \"column\": 33,\n              \"offset\": 412\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 39,\n          \"column\": 1,\n          \"offset\": 380\n        },\n        \"end\": {\n          \"line\": 39,\n          \"column\": 33,\n          \"offset\": 412\n        }\n      }\n    },\n    {\n      \"type\": \"heading\",\n      \"depth\": 3,\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"--answer--\",\n          \"position\": {\n            \"start\": {\n              \"line\": 41,\n              \"column\": 5,\n              \"offset\": 418\n            },\n            \"end\": {\n              \"line\": 41,\n              \"column\": 15,\n              \"offset\": 428\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 41,\n          \"column\": 1,\n          \"offset\": 414\n        },\n        \"end\": {\n          \"line\": 41,\n          \"column\": 15,\n          \"offset\": 428\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 1, question 2, answer\",\n          \"position\": {\n            \"start\": {\n              \"line\": 43,\n              \"column\": 1,\n              \"offset\": 430\n            },\n            \"end\": {\n              \"line\": 43,\n              \"column\": 27,\n              \"offset\": 456\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 43,\n          \"column\": 1,\n          \"offset\": 430\n        },\n        \"end\": {\n          \"line\": 43,\n          \"column\": 27,\n          \"offset\": 456\n        }\n      }\n    },\n    {\n      \"type\": \"heading\",\n      \"depth\": 2,\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"--quiz--\",\n          \"position\": {\n            \"start\": {\n              \"line\": 45,\n              \"column\": 4,\n              \"offset\": 461\n            },\n            \"end\": {\n              \"line\": 45,\n              \"column\": 12,\n              \"offset\": 469\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 45,\n          \"column\": 1,\n          \"offset\": 458\n        },\n        \"end\": {\n          \"line\": 45,\n          \"column\": 12,\n          \"offset\": 469\n        }\n      }\n    },\n    {\n      \"type\": \"heading\",\n      \"depth\": 3,\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"--question--\",\n          \"position\": {\n            \"start\": {\n              \"line\": 47,\n              \"column\": 5,\n              \"offset\": 475\n            },\n            \"end\": {\n              \"line\": 47,\n              \"column\": 17,\n              \"offset\": 487\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 47,\n          \"column\": 1,\n          \"offset\": 471\n        },\n        \"end\": {\n          \"line\": 47,\n          \"column\": 17,\n          \"offset\": 487\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 2, question 1\",\n          \"position\": {\n            \"start\": {\n              \"line\": 49,\n              \"column\": 1,\n              \"offset\": 489\n            },\n            \"end\": {\n              \"line\": 49,\n              \"column\": 19,\n              \"offset\": 507\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 49,\n          \"column\": 1,\n          \"offset\": 489\n        },\n        \"end\": {\n          \"line\": 49,\n          \"column\": 19,\n          \"offset\": 507\n        }\n      }\n    },\n    {\n      \"type\": \"heading\",\n      \"depth\": 3,\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"--distractors--\",\n          \"position\": {\n            \"start\": {\n              \"line\": 51,\n              \"column\": 5,\n              \"offset\": 513\n            },\n            \"end\": {\n              \"line\": 51,\n              \"column\": 20,\n              \"offset\": 528\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 51,\n          \"column\": 1,\n          \"offset\": 509\n        },\n        \"end\": {\n          \"line\": 51,\n          \"column\": 20,\n          \"offset\": 528\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 2, question 1, distractor 1\",\n          \"position\": {\n            \"start\": {\n              \"line\": 53,\n              \"column\": 1,\n              \"offset\": 530\n            },\n            \"end\": {\n              \"line\": 53,\n              \"column\": 33,\n              \"offset\": 562\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 53,\n          \"column\": 1,\n          \"offset\": 530\n        },\n        \"end\": {\n          \"line\": 53,\n          \"column\": 33,\n          \"offset\": 562\n        }\n      }\n    },\n    {\n      \"type\": \"thematicBreak\",\n      \"position\": {\n        \"start\": {\n          \"line\": 55,\n          \"column\": 1,\n          \"offset\": 564\n        },\n        \"end\": {\n          \"line\": 55,\n          \"column\": 4,\n          \"offset\": 567\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 2, question 1, distractor 2\",\n          \"position\": {\n            \"start\": {\n              \"line\": 57,\n              \"column\": 1,\n              \"offset\": 569\n            },\n            \"end\": {\n              \"line\": 57,\n              \"column\": 33,\n              \"offset\": 601\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 57,\n          \"column\": 1,\n          \"offset\": 569\n        },\n        \"end\": {\n          \"line\": 57,\n          \"column\": 33,\n          \"offset\": 601\n        }\n      }\n    },\n    {\n      \"type\": \"thematicBreak\",\n      \"position\": {\n        \"start\": {\n          \"line\": 59,\n          \"column\": 1,\n          \"offset\": 603\n        },\n        \"end\": {\n          \"line\": 59,\n          \"column\": 4,\n          \"offset\": 606\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 2, question 1, distractor 3\",\n          \"position\": {\n            \"start\": {\n              \"line\": 61,\n              \"column\": 1,\n              \"offset\": 608\n            },\n            \"end\": {\n              \"line\": 61,\n              \"column\": 33,\n              \"offset\": 640\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 61,\n          \"column\": 1,\n          \"offset\": 608\n        },\n        \"end\": {\n          \"line\": 61,\n          \"column\": 33,\n          \"offset\": 640\n        }\n      }\n    },\n    {\n      \"type\": \"heading\",\n      \"depth\": 3,\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"--answer--\",\n          \"position\": {\n            \"start\": {\n              \"line\": 63,\n              \"column\": 5,\n              \"offset\": 646\n            },\n            \"end\": {\n              \"line\": 63,\n              \"column\": 15,\n              \"offset\": 656\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 63,\n          \"column\": 1,\n          \"offset\": 642\n        },\n        \"end\": {\n          \"line\": 63,\n          \"column\": 15,\n          \"offset\": 656\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 2, question 1, answer\",\n          \"position\": {\n            \"start\": {\n              \"line\": 65,\n              \"column\": 1,\n              \"offset\": 658\n            },\n            \"end\": {\n              \"line\": 65,\n              \"column\": 27,\n              \"offset\": 684\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 65,\n          \"column\": 1,\n          \"offset\": 658\n        },\n        \"end\": {\n          \"line\": 65,\n          \"column\": 27,\n          \"offset\": 684\n        }\n      }\n    },\n    {\n      \"type\": \"heading\",\n      \"depth\": 3,\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"--question--\",\n          \"position\": {\n            \"start\": {\n              \"line\": 67,\n              \"column\": 5,\n              \"offset\": 690\n            },\n            \"end\": {\n              \"line\": 67,\n              \"column\": 17,\n              \"offset\": 702\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 67,\n          \"column\": 1,\n          \"offset\": 686\n        },\n        \"end\": {\n          \"line\": 67,\n          \"column\": 17,\n          \"offset\": 702\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 2, question 2\",\n          \"position\": {\n            \"start\": {\n              \"line\": 69,\n              \"column\": 1,\n              \"offset\": 704\n            },\n            \"end\": {\n              \"line\": 69,\n              \"column\": 19,\n              \"offset\": 722\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 69,\n          \"column\": 1,\n          \"offset\": 704\n        },\n        \"end\": {\n          \"line\": 69,\n          \"column\": 19,\n          \"offset\": 722\n        }\n      }\n    },\n    {\n      \"type\": \"heading\",\n      \"depth\": 3,\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"--distractors--\",\n          \"position\": {\n            \"start\": {\n              \"line\": 71,\n              \"column\": 5,\n              \"offset\": 728\n            },\n            \"end\": {\n              \"line\": 71,\n              \"column\": 20,\n              \"offset\": 743\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 71,\n          \"column\": 1,\n          \"offset\": 724\n        },\n        \"end\": {\n          \"line\": 71,\n          \"column\": 20,\n          \"offset\": 743\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 2, question 2, distractor 1\",\n          \"position\": {\n            \"start\": {\n              \"line\": 73,\n              \"column\": 1,\n              \"offset\": 745\n            },\n            \"end\": {\n              \"line\": 73,\n              \"column\": 33,\n              \"offset\": 777\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 73,\n          \"column\": 1,\n          \"offset\": 745\n        },\n        \"end\": {\n          \"line\": 73,\n          \"column\": 33,\n          \"offset\": 777\n        }\n      }\n    },\n    {\n      \"type\": \"thematicBreak\",\n      \"position\": {\n        \"start\": {\n          \"line\": 75,\n          \"column\": 1,\n          \"offset\": 779\n        },\n        \"end\": {\n          \"line\": 75,\n          \"column\": 4,\n          \"offset\": 782\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 2, question 2, distractor 2\",\n          \"position\": {\n            \"start\": {\n              \"line\": 77,\n              \"column\": 1,\n              \"offset\": 784\n            },\n            \"end\": {\n              \"line\": 77,\n              \"column\": 33,\n              \"offset\": 816\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 77,\n          \"column\": 1,\n          \"offset\": 784\n        },\n        \"end\": {\n          \"line\": 77,\n          \"column\": 33,\n          \"offset\": 816\n        }\n      }\n    },\n    {\n      \"type\": \"thematicBreak\",\n      \"position\": {\n        \"start\": {\n          \"line\": 79,\n          \"column\": 1,\n          \"offset\": 818\n        },\n        \"end\": {\n          \"line\": 79,\n          \"column\": 4,\n          \"offset\": 821\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 2, question 2, distractor 3\",\n          \"position\": {\n            \"start\": {\n              \"line\": 81,\n              \"column\": 1,\n              \"offset\": 823\n            },\n            \"end\": {\n              \"line\": 81,\n              \"column\": 33,\n              \"offset\": 855\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 81,\n          \"column\": 1,\n          \"offset\": 823\n        },\n        \"end\": {\n          \"line\": 81,\n          \"column\": 33,\n          \"offset\": 855\n        }\n      }\n    },\n    {\n      \"type\": \"heading\",\n      \"depth\": 3,\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"--answer--\",\n          \"position\": {\n            \"start\": {\n              \"line\": 83,\n              \"column\": 5,\n              \"offset\": 861\n            },\n            \"end\": {\n              \"line\": 83,\n              \"column\": 15,\n              \"offset\": 871\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 83,\n          \"column\": 1,\n          \"offset\": 857\n        },\n        \"end\": {\n          \"line\": 83,\n          \"column\": 15,\n          \"offset\": 871\n        }\n      }\n    },\n    {\n      \"type\": \"paragraph\",\n      \"children\": [\n        {\n          \"type\": \"text\",\n          \"value\": \"Quiz 2, question 2, answer\",\n          \"position\": {\n            \"start\": {\n              \"line\": 85,\n              \"column\": 1,\n              \"offset\": 873\n            },\n            \"end\": {\n              \"line\": 85,\n              \"column\": 27,\n              \"offset\": 899\n            }\n          }\n        }\n      ],\n      \"position\": {\n        \"start\": {\n          \"line\": 85,\n          \"column\": 1,\n          \"offset\": 873\n        },\n        \"end\": {\n          \"line\": 85,\n          \"column\": 27,\n          \"offset\": 899\n        }\n      }\n    }\n  ],\n  \"position\": {\n    \"start\": {\n      \"line\": 1,\n      \"column\": 1,\n      \"offset\": 0\n    },\n    \"end\": {\n      \"line\": 86,\n      \"column\": 1,\n      \"offset\": 900\n    }\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 25471,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\ast-with-quizzes.json",
      "source_type": "git_repo"
    },
    "token_count": 6674,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a5b181a67d74f34bdc1d57d5f0958c98",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\inline-html.md",
    "source_type": "git_repo",
    "title": "inline-html",
    "content": "code in  code tags emphasis followed by some nested html",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 98,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\inline-html.md",
      "source_type": "git_repo"
    },
    "token_count": 11,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f717eeca80450b691aad8c5bd4ccb296",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\mixed-nodes.md",
    "source_type": "git_repo",
    "title": "mixed-nodes",
    "content": "Paragraph 1\nThird hint with code and inline code",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 67,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\mixed-nodes.md",
      "source_type": "git_repo"
    },
    "token_count": 11,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3beb04307b4b64a45093efa9a73537bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\parse-fixture.js",
    "source_type": "git_repo",
    "title": "parse-fixture",
    "content": "const { join } = require('path');\nconst remark = require('remark');\nconst directive = require('remark-directive');\nconst frontmatter = require('remark-frontmatter');\nconst { read } = require('to-vfile');\n\nconst parseFixture = async (filename) => remark()\n  .use(directive)\n  .use(frontmatter, ['yaml'])\n  .parse(await read(join(__dirname, filename)));\n\nmodule.exports = parseFixture;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 385,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\parse-fixture.js",
      "source_type": "git_repo"
    },
    "token_count": 90,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "48ecac8258f878911ab6d2453e8c7161",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\realistic.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nWhen you add a lower rank heading element to the page, it's implied that you're starting a new subsection After the last h2 element of the second section element, add an h3 element with the text Things cats love: Some text in a blockquote\nSome text in a blockquote, with code\n--instructions--\nDo something with the code To test that adjacent tags are handled correctly:\na bit of code with more after a space and another pair of elements with a space\n--hints--\nThe second section element appears to be missing or does not have both an opening and closing tag js\nassert(\ndocument querySelectorAll('main > section')[1] &&\ncode match(/\\<\\/section>/g) length == 2\n);\nThere should be an h3 element right above the second section element's closing tag js\nassert(\ndocument querySelectorAll('main > section')[1] lastElementChild nodeName ===\n'H3'\n);\nThe h3 element right above the second section element's closing tag should have the text Things cats love: Make sure to include the colon at the end of the text js\nassert(\ndocument querySelectorAll('main > section')[1] lastElementChild innerText toLowerCase() replace(/\\s+/g, ' ') === 'things cats love:'\n);\nThere should be an h2 element with the text Cat Lists above the last h3 element that is nested in the last section element' You may have accidentally deleted the h2 element js\nconst secondSectionLastElemNode = document querySelectorAll('main > section')[1] lastElementChild;\nassert(\nsecondSectionLastElemNode nodeName === 'H3' &&\nsecondSectionLastElemNode previousElementSibling innerText toLowerCase() replace(/\\s+/g, ' ') === 'cat lists'\n);\n--seed--\n--before-user-code--\njs\n// this runs before the user's code is evaluated --seed-contents--\n::id{#html-key}\n```html\nCatPhotoApp\nCat Photos\nClick here to view more\ncat photos",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3691,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\realistic.md",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "69b7955a44f9280a4c46cf86f067addc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\realistic.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "the text Cat Lists above the last h3 element that is nested in the last section element' You may have accidentally deleted the h2 element js const secondSectionLastElemNode = document querySelectorAll('main > section')[1] lastElementChild; assert( secondSectionLastElemNode nodeName === 'H3' && secondSectionLastElemNode previousElementSibling innerText toLowerCase() replace(/\\s+/g, ' ') === 'cat lists' ); --seed-- --before-user-code-- js // this runs before the user's code is evaluated --seed-contents-- ::id{#html-key} ```html CatPhotoApp Cat Photos Click here to view more cat photos--fcc-editable-region--\nCat Lists\n--fcc-editable-region--\n```\n```css\nbody {\nbackground: white;\n}\nh1 {\nfont-size: 20px;\n}\n--fcc-editable-region--\n--fcc-editable-region--\na {\ncolor: green;\n}\n```\n::id{#final-key}\njs\nvar x = 'y';\n--solutions--\n::id{#html-key}\n```html\nCatPhotoApp\nCat Photos\nClick here to view more\ncat photos Cat Lists\n```\n```css\nbody {\nbackground: white;\n}\nh1 {\nfont-size: 20px;\n}\na {\ncolor: green;\n}\n```\n::id{#final-key}\njs\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3691,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\realistic.md",
      "source_type": "git_repo"
    },
    "token_count": 290,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "eeed1a8501be335668e975cd1de4316d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\scene.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nThis challenge has a scene.\n--scene--\njson\n{\n\"setup\": {\n\"background\": \"company2-center.png\",\n\"characters\": [\n{\n\"character\": \"Maria\",\n\"position\": { \"x\": 50, \"y\": 0, \"z\": 1.5 },\n\"opacity\": 0\n}\n],\n\"audio\": {\n\"filename\": \"1.1-1.mp3\",\n\"startTime\": 1,\n\"startTimestamp\": 2.6,\n\"finishTimestamp\": 4\n}\n},\n\"commands\": [\n{\n\"character\": \"Maria\",\n\"opacity\": 1,\n\"startTime\": 0\n},\n{\n\"character\": \"Maria\",\n\"startTime\": 0.7,\n\"finishTime\": 2.4,\n\"dialogue\": {\n\"text\": \"I'm Maria, the team lead.\",\n\"align\": \"center\"\n}\n},\n{\n\"character\": \"Maria\",\n\"opacity\": 0,\n\"startTime\": 3.4\n}\n]\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 785,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\scene.md",
      "source_type": "git_repo"
    },
    "token_count": 207,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "36a51a122109e68452ea1dba7d8ededd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\script-two.md",
    "source_type": "git_repo",
    "title": "script-two",
    "content": "css\ndiv {\nbackground: red\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 37,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\script-two.md",
      "source_type": "git_repo"
    },
    "token_count": 9,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "af5d8868c7cb33536ab2c74acf8d2b33",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\script.md",
    "source_type": "git_repo",
    "title": "script",
    "content": "js\nfor (let index = 0; index < array.length; index++) {\nconst element = array[index];\n// imported from script.md\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 126,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\script.md",
      "source_type": "git_repo"
    },
    "token_count": 31,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a1d47c3bd7b15d02b80db434fe6155a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\simple.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}\n--seed--\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\njs\nvar x = 'y';\n--solutions--\n::id{#html-key}\n```html\n```\ncss\nbody {\nbackground: white;\n}\n`js\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 648,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\simple.md",
      "source_type": "git_repo"
    },
    "token_count": 141,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "01d1c7a6f681e7b38fea67f95a820cd5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-after-each-hook.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--after-each--\njs\n// after each code\nfunction cleanup() {\nreturn 'cleaned up';\n}\ncleanup();\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 398,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-after-each-hook.md",
      "source_type": "git_repo"
    },
    "token_count": 88,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c96502300096d8c61d47de2312daa103",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-another-invalid-after-each-hook.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--after-each--\ngubbins\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 320,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-another-invalid-after-each-hook.md",
      "source_type": "git_repo"
    },
    "token_count": 72,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "dc49d846b02dd613c5b0b966f4f8b422",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-another-invalid-before-each-hook.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--before-each--\ngubbins\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 321,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-another-invalid-before-each-hook.md",
      "source_type": "git_repo"
    },
    "token_count": 72,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "49f632227a7adaa3f734c76fb0609183",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-another-invalid-before-hook.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--before-all--\ngubbins\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 320,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-another-invalid-before-hook.md",
      "source_type": "git_repo"
    },
    "token_count": 71,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "719dab6a811cca15e3f57b7fc4af180b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-before-and-after.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}\n--seed--\n--before-user-code--\ncss\nbody {\netc: ''\n}\n```html\n```\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\njs\nvar x = 'y';\n--after-user-code--\ncss\nbody {\nbackground: blue;\n}\njs\nfunction teardown(params) {\n// after\n}\n--solutions--\n::id{#html-key}\n```html\n```\ncss\nbody {\nbackground: white;\n}\n`js\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 851,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-before-and-after.md",
      "source_type": "git_repo"
    },
    "token_count": 184,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "95ed73cac6d8541acfb31f4df9c0658a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-before-each-hook.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--before-each--\njs\n// before each code\nfunction setup() {\nreturn 'initialized';\n}\nsetup();\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 397,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-before-each-hook.md",
      "source_type": "git_repo"
    },
    "token_count": 86,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5dfbeedd89d294928af638faa27765c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-before-hook.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--before-all--\njs\n// before all code\nfunction foo() {\nreturn 'bar';\n}\nfoo();\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 383,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-before-hook.md",
      "source_type": "git_repo"
    },
    "token_count": 85,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5367261987cced1eca8fa1d3ae5c2dcd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-broken-hints.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\njs\n// test code\nFirst hint\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\n--seed--\n```html\n```\ncss\nbody {\nbackground: green;\n}\njs\nvar x = 'y';\n--solutions--\n::id{#html-key}\n```html\n```\ncss\nbody {\nbackground: white;\n}\n`js\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 560,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-broken-hints.md",
      "source_type": "git_repo"
    },
    "token_count": 117,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6cf15b0aa681d068486a2e055dad6aae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-c-code.md",
    "source_type": "git_repo",
    "title": "--seed--",
    "content": "--seed--\n--before-user-code--\ncss\nbody {\netc: ''\n}\n```html\n```\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\nc\nvar x = 'y';\n--after-user-code--\ncss\nbody {\nbackground: blue;\n}\njs\nfunction teardown(params) {\n// after\n}\n--solutions--\n::id{#html-key}\n```html\n```\ncss\nbody {\nbackground: white;\n}\njs\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 496,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-c-code.md",
      "source_type": "git_repo"
    },
    "token_count": 106,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "aa084b0a5ce2b6aa5e694ea1a88dfc37",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-directives.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\n:root appears, :import appears\nthe next paragraph should appear\n::import\neven though it's an import directive, but if we use the full syntax ::directive-name{attr=\"name\" attr2=\"a/path\"}\n::import{component=\"name\" from=\"script.md\"}\nit goes.\n::: name [inline-content] {key=val}\na container directive\n:::",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 328,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-directives.md",
      "source_type": "git_repo"
    },
    "token_count": 81,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "39180e3d829640daf45b9882adca727a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-editable-markers-on-one-line.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}\n--seed--\n--seed-contents--\n```html\n```\n```css\nbody {\n--fcc-editable-region-- --fcc-editable-region--\nbackground: green;\n}\n```\njs\nvar x = 'y';\n--solutions--\n::id{#html-key}\n```html\n```\ncss\nbody {\nbackground: white;\n}\njs\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 699,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-editable-markers-on-one-line.md",
      "source_type": "git_repo"
    },
    "token_count": 155,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "32632205af43fc73359ed697d6b9cbe9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-editable-markers.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}\n--seed--\n--seed-contents--\n```html\n```\n```css\nbody {\n--fcc-editable-region--\nbackground: green;\n--fcc-editable-region--\n}\n```\njs\nvar x = 'y';\n--solutions--\n::id{#html-key}\n```html\n```\ncss\nbody {\nbackground: white;\n}\njs\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 698,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-editable-markers.md",
      "source_type": "git_repo"
    },
    "token_count": 155,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "367bf60efa5f983bf6520e33304f4601",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-empty-after.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}\n--seed--\n--before-user-code--\ncss\nbody {\netc: ''\n}\n```html\n```\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\njs\nvar x = 'y';\n--after-user-code--\n--solutions--\n::id{#html-key}\n```html\n```\ncss\nbody {\nbackground: white;\n}\n`js\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 758,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-empty-after.md",
      "source_type": "git_repo"
    },
    "token_count": 164,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "19e08af248d604e2a54113342061e55e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-empty-before-hook.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--before-all--\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 311,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-empty-before-hook.md",
      "source_type": "git_repo"
    },
    "token_count": 67,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "baee0dd578cfd9b6411f79af1313f059",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-empty-before.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}\n--seed--\n--before-user-code--\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\njs\nvar x = 'y';\n--after-user-code--\ncss\nbody {\nbackground: blue;\n}\njs\nfunction teardown(params) {\n// after\n}\n--solutions--\n::id{#html-key}\n```html\n```\ncss\nbody {\nbackground: white;\n}\n`js\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 789,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-empty-before.md",
      "source_type": "git_repo"
    },
    "token_count": 171,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "032253fc7c6ea6ffc619de52c00d9ed6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-empty-contents.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}\n--seed--\n--before-user-code--\ncss\nbody {\netc: ''\n}\n```html\n```\n--after-user-code--\ncss\nbody {\nbackground: blue;\n}\njs\nfunction teardown(params) {\n// after\n}\n--solutions--\n::id{#html-key}\n```html\n```\ncss\nbody {\nbackground: white;\n}\n`js\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 716,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-empty-contents.md",
      "source_type": "git_repo"
    },
    "token_count": 157,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4873d25781eaef76eb19b8621da771e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-erm-in-solution.md",
    "source_type": "git_repo",
    "title": "--seed--",
    "content": "--seed--\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\njs\nvar x = 'y';\n--solutions--\n::id{#html-key}\n```html\n```\ncss\nbody {\n--fcc-editable-region--\nbackground: white;\n--fcc-editable-region--\n}\njs\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 342,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-erm-in-solution.md",
      "source_type": "git_repo"
    },
    "token_count": 75,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0bef2be44b3ea8fc5cccb7b7b79c9dd8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-extra-heading.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nthis should still be inside --description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}\n--seed--\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\njs\nvar x = 'y';\n--solutions--\n::id{#html-key}\n```html\n```\ncss\nbody {\nbackground: white;\n}\n`js\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 695,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-extra-heading.md",
      "source_type": "git_repo"
    },
    "token_count": 149,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0e19ae5f7b2c97a1619c5950b09a1145",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-fill-in-the-blank-bad-paragraph.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nIn English, to check or confirm something people sometimes use tag questions. For example, You are a programmer, right? Here, right? is used as a tag to check or confirm the previous statement.\n--fillInTheBlank--\n--sentence--\nA sentence BLANK paragraph 1\nnot enough newlines, so no paragraph 2\nSentence in BLANK 2\n--blanks--\nare\n--feedback--\nPay attention to the verb in the sentence.\nright\n--feedback--\nPay attention to the verb in the sentence.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 510,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-fill-in-the-blank-bad-paragraph.md",
      "source_type": "git_repo"
    },
    "token_count": 110,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "77d5eb141eefff92ce8950cf3524e83d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-fill-in-the-blank-bad-sentence.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nIn English, to check or confirm something people sometimes use tag questions. For example, You are a programmer, right? Here, right? is used as a tag to check or confirm the previous statement.\n--fillInTheBlank--\n--sentence--\nA sentence BLANK paragraph 1\nSentence in BLANK 2\n--blanks--\nare\n--feedback--\nPay attention to the verb in the sentence.\nright\n--feedback--\nPay attention to the verb in the sentence.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 469,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-fill-in-the-blank-bad-sentence.md",
      "source_type": "git_repo"
    },
    "token_count": 99,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "12ad57dea4868427486869a29dc26b9d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-fill-in-the-blank-many-blanks.md",
    "source_type": "git_repo",
    "title": "--fillInTheBlank--",
    "content": "--fillInTheBlank--\n--sentence--\nSure thing! BLANK _ _.\n--blanks--\nI'd\n--feedback--\nFeedback 1\n--blanks--\nlove\n--feedback--\nFeedback 2\n--blanks--\nto\n--feedback--\nFeedback 3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 220,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-fill-in-the-blank-many-blanks.md",
      "source_type": "git_repo"
    },
    "token_count": 55,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "06259fd66dc5bcb918b68f364db19890",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-fill-in-the-blank-one-blank.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nIn English, when making introductions or identifying someone, you use the verb to be. In this case, You are is used to address the person Maria is talking to and affirmatively identify their occupation.\nMaria is introducing herself and confirming Tom's job role. Are is used in the present affirmative to make a statement.\n--fillInTheBlank--\n--sentence--\nHello, You BLANK the new graphic designer, right?\n--blanks--\nare\n--feedback--\nThe verb to be is an irregular verb. When conjugated with the pronoun you, be becomes are. For example: You are an English learner.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 624,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-fill-in-the-blank-one-blank.md",
      "source_type": "git_repo"
    },
    "token_count": 127,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "173abae442acc66e9c56f0415011b856",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-fill-in-the-blank-two-sentences.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nIn English, to check or confirm something people sometimes use tag questions. For example, You are a programmer, right? Here, right? is used as a tag to check or confirm the previous statement.\n--fillInTheBlank--\n--sentence--\nA sentence BLANK paragraph 1\nSentence in BLANK 2\n--blanks--\nare\n--feedback--\nPay attention to the verb in the sentence.\nright\n--feedback--\nPay attention to the verb in the sentence.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 471,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-fill-in-the-blank-two-sentences.md",
      "source_type": "git_repo"
    },
    "token_count": 99,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "038c5a2da85b490e96ccd5a274b6b383",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-fill-in-the-blank.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nIn English, when making introductions or identifying someone, you use the verb to be. In this case, You are is used to address the person Maria is talking to and affirmatively identify their occupation.\nMaria is introducing herself and confirming Tom's job role. Are is used in the present affirmative to make a statement.\n--fillInTheBlank--\n--sentence--\nHello, You BLANK the new graphic designer, BLANK? BLANK to meet you!\n--blanks--\nare\n--feedback--\nThe verb to be is an irregular verb. When conjugated with the pronoun you, be becomes are. For example: You are an English learner.\nright\n--feedback--\nFeedback 2\nNice",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 700,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-fill-in-the-blank.md",
      "source_type": "git_repo"
    },
    "token_count": 144,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e551db0b3d5ee0810ced176d91d21cc3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-frontmatter.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "id: bd7123c8c441eddfaeb5bdef\ntitle: Say Hello to HTML Elements\nchallengeType: 0\nisHidden: false\nvideoUrl: 'https://scrimba.com/p/pVMPUv/cE8Gpt2'\nforumTopicId: 18276\n--description--\nParagraph 1\nhtml\ncode example\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\n--seed--\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\njs\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 492,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-frontmatter.md",
      "source_type": "git_repo"
    },
    "token_count": 132,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "808a4d21326bceb70245d435c0c4759d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-gfm.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1 ~~Strikethrough text~~. https://should.not.be.autolinked\nhtml\ncode example\n| example | of a |\n| --- | --- |\n| gfm | table |\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}\n--seed--\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\njs\nvar x = 'y';\n--solutions--\n::id{#html-key}\n```html\n```\ncss\nbody {\nbackground: white;\n}\n`js\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 756,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-gfm.md",
      "source_type": "git_repo"
    },
    "token_count": 175,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "82ccf73e02fd18832cbe6b64fe8d7e5b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-id-node.md",
    "source_type": "git_repo",
    "title": "with-id-node",
    "content": "::id{#html-key}\nParagraph with an image  in it.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 139,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-id-node.md",
      "source_type": "git_repo"
    },
    "token_count": 15,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "195749f615cc8e6fd0f42b1b50153786",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-imports-extra.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "::import{component=\"Script\" from=\"./script.md\" }\n::import{component=\"Second\" from=\"./script-two.md\" }\n::import\n--description--\nParagraph 1 ::import\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\n--seed--\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\n::use{component=\"Second\"}\n::id{#custom-name}\njs\nvar x = 'y';\n::use{component=\"Script\"}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 575,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-imports-extra.md",
      "source_type": "git_repo"
    },
    "token_count": 133,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8f6aa7301d61076513fcc89fc3c90dad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-imports-two.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "::import{component=\"Script\" from=\"./script.md\" }\n::import{component=\"Second\" from=\"./script-two.md\" }\n--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\n--seed--\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\n::use{component=\"Second\"}\n::id{#custom-name}\njs\nvar x = 'y';\n::use{component=\"Script\"}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 557,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-imports-two.md",
      "source_type": "git_repo"
    },
    "token_count": 128,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6e311c955783fb4b691adfca24b03161",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-imports.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "::import{component=\"Script\" from=\"./script.md\" }\n--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\n--seed--\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\n::id{#custom-name}\njs\nvar x = 'y';\n::use{component=\"Script\"}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 477,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-imports.md",
      "source_type": "git_repo"
    },
    "token_count": 107,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8f4ac37531bbb94767c915dd8f808c11",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-invalid-after-each-hook.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--after-each--\njs\n// after each code\nfunction cleanup() {\nreturn 'cleaned up';\n}\ncleanup();\ngubbins\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 407,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-invalid-after-each-hook.md",
      "source_type": "git_repo"
    },
    "token_count": 92,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4784cbd57384179f30510c1ad7bcf73d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-invalid-after.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}\n--seed--\n--before-user-code--\ncss\nbody {\netc: ''\n}\n```html\n```\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\njs\nvar x = 'y';\n--after-user-code--\ncss\njs\nfunction teardown(params) {\n// after\n}\n--solutions--\n::id{#html-key}\n```html\n```\ncss\nbody {\nbackground: white;\n}\n`js\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 822,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-invalid-after.md",
      "source_type": "git_repo"
    },
    "token_count": 177,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "877b2a64e556f17526666c8d089b4e14",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-invalid-before-each-hook.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--before-each--\njs\n// before each code\nfunction setup() {\nreturn 'initialized';\n}\nsetup();\ngubbins\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 406,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-invalid-before-each-hook.md",
      "source_type": "git_repo"
    },
    "token_count": 90,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8846579122f5fa951c21f8df56dd5df8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-invalid-before-hook.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--before-all--\njs\n// before all code\nfunction foo() {\nreturn 'bar';\n}\nfoo();\ngubbins\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 392,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-invalid-before-hook.md",
      "source_type": "git_repo"
    },
    "token_count": 89,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f2ad76174bab9a9c17f45762f402500f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-invalid-before.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}\n--seed--\n--before-user-code--\ncss\n```html\n```\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\njs\nvar x = 'y';\n--after-user-code--\ncss\nbody {\nbackground: blue;\n}\njs\nfunction teardown(params) {\n// after\n}\n--solutions--\n::id{#html-key}\n```html\n```\ncss\nbody {\nbackground: white;\n}\n`js\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 832,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-invalid-before.md",
      "source_type": "git_repo"
    },
    "token_count": 178,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ad7f2f8f2b0e0aff8903eec05a2fd8ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-marker-imports.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "::import{component=\"Script\" from=\"./script-with-markers.md\" }\n--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\n--seed--\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\n::id{#custom-name}\njs\nvar x = 'y';\n::use{component=\"Script\"}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 490,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-marker-imports.md",
      "source_type": "git_repo"
    },
    "token_count": 110,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2cd073f927193b54dffda9de04389a78",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-missing-teststring.md",
    "source_type": "git_repo",
    "title": "--hints--",
    "content": "--hints--\nFirst hint\nWhoops, this should have been a test code block",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 73,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-missing-teststring.md",
      "source_type": "git_repo"
    },
    "token_count": 17,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9bb9eab88c4ba776c4f4e467c7d274c7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-multiple-solns.md",
    "source_type": "git_repo",
    "title": "--seed--",
    "content": "--seed--\n--before-user-code--\ncss\nbody {\netc: ''\n}\n```html\n```\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\njs\nvar x = 'y';\n--after-user-code--\ncss\nbody {\nbackground: blue;\n}\njs\nfunction teardown(params) {\n// after\n}\n--solutions--\n::id{#html-key}\n```html\n```\ncss\nbody {\nbackground: white;\n}\njs\nvar x = 'y';\n::id{#html-key}\n```html\nsolution number two\n```\ncss\nbody {\nbackground: white;\n}\njs\nvar x = 'y';\n::id{#html-key}\n```html\n```\ncss\nbody {\nbackground: white;\n}\njs\nvar x = 'y3';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 790,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-multiple-solns.md",
      "source_type": "git_repo"
    },
    "token_count": 169,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ec106be2992e4134b2e3bcf87e33ecd0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-multiple-video-questions.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--questions--\n--text--\nQuestion line 1\njs\nvar x = 'y';\n--answers--\nSome inline code\n--feedback--\nThat is not correct.\nSome italics\nA second answer paragraph.\ncode in  code tags\n--video-solution--\n3\n--text--\nQuestion 2\njs\nvar anything = 'y';\n--answers--\nSome inline code again\n--feedback--\nThat is not correct.\nSome italics\nA second answer paragraph.\ncode in  code tags\n--video-solution--\n2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 635,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-multiple-video-questions.md",
      "source_type": "git_repo"
    },
    "token_count": 136,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9bce4562882a928ed5d7006b6920a540",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-non-js-after-each-hook.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--after-each--\nts\n// after each code\nfunction cleanup() {\nreturn 'cleaned up';\n}\ncleanup();\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 398,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-non-js-after-each-hook.md",
      "source_type": "git_repo"
    },
    "token_count": 88,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "87bc54e7abb737b298ecd916fc73d4c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-non-js-before-each-hook.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--before-each--\nts\n// before each code\nfunction setup() {\nreturn 'initialized';\n}\nsetup();\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 397,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-non-js-before-each-hook.md",
      "source_type": "git_repo"
    },
    "token_count": 86,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4da9525f41a3d4d85c656b6009157bc3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-non-js-before-hook.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--before-all--\nts\n// before all code\nfunction foo() {\nreturn 'bar';\n}\nfoo();\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\nThird hint with code and inline code\njs\n// more test code\nif(let x of xs) {\nconsole.log(x);\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 383,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-non-js-before-hook.md",
      "source_type": "git_repo"
    },
    "token_count": 85,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bf1ccb27da5427716987a9c96e2f6b56",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-quizzes.md",
    "source_type": "git_repo",
    "title": "--quizzes--",
    "content": "--quizzes--\n--quiz--\n--question--\n--text--\nQuiz 1, question 1\n--distractors--\nQuiz 1, question 1, distractor 1\nQuiz 1, question 1, distractor 2\nQuiz 1, question 1, distractor 3\n--answer--\nQuiz 1, question 1, answer\n--question--\n--text--\nQuiz 1, question 2\n--distractors--\nQuiz 1, question 2, distractor 1\nQuiz 1, question 2, distractor 2\nQuiz 1, question 2, distractor 3\n--answer--\nQuiz 1, question 2, answer\n--quiz--\n--question--\n--text--\nQuiz 2, question 1\n--distractors--\nQuiz 2, question 1, distractor 1\nQuiz 2, question 1, distractor 2\nQuiz 2, question 1, distractor 3\n--answer--\nQuiz 2, question 1, answer\n--question--\n--text--\nQuiz 2, question 2\n--distractors--\nQuiz 2, question 2, distractor 1\nQuiz 2, question 2, distractor 2\nQuiz 2, question 2, distractor 3\n--answer--\nQuiz 2, question 2, answer",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 968,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-quizzes.md",
      "source_type": "git_repo"
    },
    "token_count": 293,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c52a56ad2cae18938c8857ab2caf9072",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-seed-keys-adjacent.md",
    "source_type": "git_repo",
    "title": "--seed--",
    "content": "--seed--\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\n::id{#key-for-css}\n::id{#key-for-js}\njs\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 185,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-seed-keys-adjacent.md",
      "source_type": "git_repo"
    },
    "token_count": 46,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5f68f5e74e2fe9d5d00e3a7882e8a420",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-seed-keys-extra-lines.md",
    "source_type": "git_repo",
    "title": "--seed--",
    "content": "--seed--\n--seed-contents--\n```html\n```\n::id{#key-for-css}\ncss\nbody {\nbackground: green;\n}\n::id{#key-for-js}\njs\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 188,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-seed-keys-extra-lines.md",
      "source_type": "git_repo"
    },
    "token_count": 46,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "14c1e7b50f4d4896ba93d1f685d3132f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-seed-keys-jsx.md",
    "source_type": "git_repo",
    "title": "--seed--",
    "content": "--seed--\n--seed-contents--\n```html\n```\n::id{#key-for-css}\ncss\nbody {\nbackground: green;\n}\n::id{#key-for-jsx}\n```jsx\nvar x = 'y';\n/ comment /\nconst Button = () => {\nreturn  {/ another comment! /} text ;\n};\n```\n--before-user-code--\njsx\nfunction setup() {}\n--after-user-code--\njsx\nfunction teardown(params) {\n// after\n}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 421,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-seed-keys-jsx.md",
      "source_type": "git_repo"
    },
    "token_count": 98,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1cce6c9b908195b3218eed8e092efca0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-seed-keys-orphan.md",
    "source_type": "git_repo",
    "title": "--seed--",
    "content": "--seed--\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\n::id{#key-for-html}",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 143,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-seed-keys-orphan.md",
      "source_type": "git_repo"
    },
    "token_count": 30,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1b080389fb4d23d6b8b604ec1910858a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-seed-keys.md",
    "source_type": "git_repo",
    "title": "--seed--",
    "content": "--seed--\n--seed-contents--\n```html\n```\n::id{#key-for-css}\ncss\nbody {\nbackground: green;\n}\n::id{#key-for-js}\njs\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 185,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-seed-keys.md",
      "source_type": "git_repo"
    },
    "token_count": 46,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fa1d124a1258f691859788f7100ef2db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-subsection.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--not-allowed--\nshould not be allowed\n--instructions--\nParagraph 0\nhtml\ncode example 0",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 161,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-subsection.md",
      "source_type": "git_repo"
    },
    "token_count": 35,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "159f6282b7c2dab9e5b1382d86e41ea8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-video-question-out-of-order.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--text--\nQuestion line 1\njs\nvar x = 'y';\n--questions--\n--answers--\nSome inline code\nSome italics\nA second answer paragraph.\ncode in  code tags\n--video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 341,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-video-question-out-of-order.md",
      "source_type": "git_repo"
    },
    "token_count": 74,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "18f69c53f583644280c9861661534b23",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-video-question.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--questions--\n--text--\nQuestion line 1\njs\nvar x = 'y';\n--answers--\nSome inline code\n--feedback--\nThat is not correct.\nSome italics\nA second answer paragraph.\ncode in  code tags\n--video-solution--\n3",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 381,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-video-question.md",
      "source_type": "git_repo"
    },
    "token_count": 82,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4c9f7d830319affedcaf3aa399f31b85",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "const { ObjectId } = require('mongodb');\n\nconst blankUserId = new ObjectId('5bd30e0f1caf6ac3ddddddb9');\nconst publicUserId = new ObjectId('663b839b24a8b29f57728b13');\nconst demoUserId = new ObjectId('5bd30e0f1caf6ac3ddddddb5');\nconst fullyCertifiedUserId = new ObjectId('5fa2db00a25c1c1fa49ce067');\nconst almostFullyCertifiedUserId = new ObjectId('5bd30e0f1caf6ac3ddddddb9');\nconst unclaimedUserId = new ObjectId('5bd30e0f1caf6ac3ddddddb1');\n\nconst userIds = [\n  blankUserId,\n  publicUserId,\n  demoUserId,\n  fullyCertifiedUserId,\n  almostFullyCertifiedUserId,\n  unclaimedUserId\n];",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 184,
    "chunk_index": 0,
    "total_chunks": 83
  },
  {
    "id": "a9e7ab973b5f96e9dfc254739d40bd57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "const { ObjectId } = require('mongodb');\n\nconst blankUserId = new ObjectId('5bd30e0f1caf6ac3ddddddb9');\nconst publicUserId = new ObjectId('663b839b24a8b29f57728b13');\nconst demoUserId = new ObjectId('5bd30e0f1caf6ac3ddddddb5');\nconst fullyCertifiedUserId = new ObjectId('5fa2db00a25c1c1fa49ce067');\nconst almostFullyCertifiedUserId = new ObjectId('5bd30e0f1caf6ac3ddddddb9');\nconst unclaimedUserId = new ObjectId('5bd30e0f1caf6ac3ddddddb1');\n\nconst userIds = [\n  blankUserId,\n  publicUserId,\n  demoUserId,\n  fullyCertifiedUserId,\n  almostFullyCertifiedUserId,\n  unclaimedUserId\n];\n\nmodule.exports.blankUser = {\n  _id: blankUserId,\n  email: 'bar@bar.com',\n  emailVerified: true,\n  progressTimestamps: [],\n  isBanned: false,\n  isCheater: false,\n  username: 'twaha',\n  about: '',\n  name: 'Development User',\n  location: '',\n  picture: '',\n  acceptedPrivacyTerms: true,\n  sendQuincyEmail: false,\n  currentChallengeId: '',\n  isHonest: false,\n  isFrontEndCert: false,\n  isDataVisCert: false,\n  isBackEndCert: false,\n  isFullStackCert: false,\n  isRespWebDesignCert: false,\n  is2018DataVisCert: false,\n  isFrontEndLibsCert: false,\n  isJsAlgoDataStructCert: false,\n  isApisMicroservicesCert: false,\n  isInfosecQaCert: false,\n  isQaCertV7: false,\n  isInfosecCertV7: false,\n  is2018FullStackCert: false,\n  isSciCompPyCertV7: false,\n  isDataAnalysisPyCertV7: false,\n  isMachineLearningPyCertV7: false,\n  isRelationalDatabaseCertV8: false,\n  isCollegeAlgebraPyCertV8: false,\n  isFoundationalCSharpCertV8: false,\n  completedChallenges: [],\n  portfolio: [],\n  yearsTopContributor: [],\n  rand: 0.6126749173148205,\n  theme: 'default',\n  profileUI: {\n    isLocked: true,\n    showAbout: false,\n    showCerts: false,\n    showDonation: false,\n    showHeatMap: false,\n    showLocation: false,\n    showName: false,\n    showPoints: false,\n    showPortfolio: false,\n    showTimeLine: false\n  },\n  badges: {\n    coreTeam: []\n  },\n  isDonating: false,\n  emailAuthLinkTTL: null,\n  emailVerifyTTL: null,\n  externalId: '',\n  unsubscribeId: 'ecJxUi7OM49f24hTpauP8'\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 643,
    "chunk_index": 1,
    "total_chunks": 83
  },
  {
    "id": "dbc893daeb5e24ebb3a33f7428bf6839",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "false, isFrontEndLibsCert: false, isJsAlgoDataStructCert: false, isApisMicroservicesCert: false, isInfosecQaCert: false, isQaCertV7: false, isInfosecCertV7: false, is2018FullStackCert: false, isSciCompPyCertV7: false, isDataAnalysisPyCertV7: false, isMachineLearningPyCertV7: false, isRelationalDatabaseCertV8: false, isCollegeAlgebraPyCertV8: false, isFoundationalCSharpCertV8: false, completedChallenges: [], portfolio: [], yearsTopContributor: [], rand: 0.6126749173148205, theme: 'default', profileUI: { isLocked: true, showAbout: false, showCerts: false, showDonation: false, showHeatMap: false, showLocation: false, showName: false, showPoints: false, showPortfolio: false, showTimeLine: false }, badges: { coreTeam: [] }, isDonating: false, emailAuthLinkTTL: null, emailVerifyTTL: null, externalId: '', unsubscribeId: 'ecJxUi7OM49f24hTpauP8' };\n\nmodule.exports.publicUser = {\n  _id: publicUserId,\n  email: 'bar@bars.com',\n  emailVerified: true,\n  progressTimestamps: [],\n  isBanned: false,\n  isCheater: false,\n  username: 'publicuser',\n  about: '',\n  name: 'Public User',\n  location: '',\n  picture: '',\n  acceptedPrivacyTerms: true,\n  sendQuincyEmail: false,\n  currentChallengeId: '',\n  isHonest: false,\n  isFrontEndCert: false,\n  isDataVisCert: false,\n  isBackEndCert: false,\n  isFullStackCert: false,\n  isRespWebDesignCert: false,\n  is2018DataVisCert: false,\n  isFrontEndLibsCert: false,\n  isJsAlgoDataStructCert: false,\n  isApisMicroservicesCert: false,\n  isInfosecQaCert: false,\n  isQaCertV7: false,\n  isInfosecCertV7: false,\n  is2018FullStackCert: false,\n  isSciCompPyCertV7: false,\n  isDataAnalysisPyCertV7: false,\n  isMachineLearningPyCertV7: false,\n  isRelationalDatabaseCertV8: false,\n  isCollegeAlgebraPyCertV8: false,\n  isFoundationalCSharpCertV8: false,\n  completedChallenges: [],\n  portfolio: [],\n  yearsTopContributor: [],\n  rand: 0.6126749173148205,\n  theme: 'default',\n  profileUI: {\n    isLocked: false,\n    showAbout: true,\n    showCerts: true,\n    showDonation: true,\n    showHeatMap: true,\n    showLocation: true,\n    showName: true,\n    showPoints: true,\n    showPortfolio: true,\n    showTimeLine: true\n  },\n  badges: {\n    coreTeam: []\n  },\n  isDonating: false,\n  emailAuthLinkTTL: null,\n  emailVerifyTTL: null,\n  externalId: '',\n  unsubscribeId: 'ecJxUi7OM49f24hTpauP8'\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 728,
    "chunk_index": 2,
    "total_chunks": 83
  },
  {
    "id": "58d486046beb4d4f9c708fa6965e020d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "false, isFrontEndLibsCert: false, isJsAlgoDataStructCert: false, isApisMicroservicesCert: false, isInfosecQaCert: false, isQaCertV7: false, isInfosecCertV7: false, is2018FullStackCert: false, isSciCompPyCertV7: false, isDataAnalysisPyCertV7: false, isMachineLearningPyCertV7: false, isRelationalDatabaseCertV8: false, isCollegeAlgebraPyCertV8: false, isFoundationalCSharpCertV8: false, completedChallenges: [], portfolio: [], yearsTopContributor: [], rand: 0.6126749173148205, theme: 'default', profileUI: { isLocked: false, showAbout: true, showCerts: true, showDonation: true, showHeatMap: true, showLocation: true, showName: true, showPoints: true, showPortfolio: true, showTimeLine: true }, badges: { coreTeam: [] }, isDonating: false, emailAuthLinkTTL: null, emailVerifyTTL: null, externalId: '', unsubscribeId: 'ecJxUi7OM49f24hTpauP8' };\n\nmodule.exports.demoUser = {\n  _id: demoUserId,\n  email: 'foo@bar.com',\n  emailVerified: true,\n  progressTimestamps: [],\n  isBanned: false,\n  isCheater: false,\n  username: 'developmentuser',\n  about: '',\n  name: 'Development User',\n  location: '',\n  picture: '',\n  acceptedPrivacyTerms: true,\n  sendQuincyEmail: false,\n  currentChallengeId: '',\n  isHonest: false,\n  isFrontEndCert: false,\n  isDataVisCert: false,\n  isBackEndCert: false,\n  isFullStackCert: false,\n  isRespWebDesignCert: false,\n  is2018DataVisCert: false,\n  isFrontEndLibsCert: false,\n  isJsAlgoDataStructCert: false,\n  isApisMicroservicesCert: false,\n  isInfosecQaCert: false,\n  isQaCertV7: false,\n  isInfosecCertV7: false,\n  is2018FullStackCert: false,\n  isSciCompPyCertV7: false,\n  isDataAnalysisPyCertV7: false,\n  isMachineLearningPyCertV7: false,\n  isRelationalDatabaseCertV8: false,\n  isCollegeAlgebraPyCertV8: false,\n  isFoundationalCSharpCertV8: false,\n  isJsAlgoDataStructCertV8: false,\n  completedChallenges: [],\n  portfolio: [],\n  yearsTopContributor: [],\n  rand: 0.6126749173148205,\n  theme: 'default',\n  profileUI: {\n    isLocked: true,\n    showAbout: false,\n    showCerts: false,\n    showDonation: false,\n    showHeatMap: false,\n    showLocation: false,\n    showName: false,\n    showPoints: false,\n    showPortfolio: false,\n    showTimeLine: false\n  },\n  badges: {\n    coreTeam: []\n  },\n  isDonating: false,\n  emailAuthLinkTTL: null,\n  emailVerifyTTL: null,\n  keyboardShortcuts: true,\n  externalId: '',\n  unsubscribeId: 'ecJxUi7OM49f24hTpauP8'\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 748,
    "chunk_index": 3,
    "total_chunks": 83
  },
  {
    "id": "33878eb0d18455090cfa1523af324991",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "false, isApisMicroservicesCert: false, isInfosecQaCert: false, isQaCertV7: false, isInfosecCertV7: false, is2018FullStackCert: false, isSciCompPyCertV7: false, isDataAnalysisPyCertV7: false, isMachineLearningPyCertV7: false, isRelationalDatabaseCertV8: false, isCollegeAlgebraPyCertV8: false, isFoundationalCSharpCertV8: false, isJsAlgoDataStructCertV8: false, completedChallenges: [], portfolio: [], yearsTopContributor: [], rand: 0.6126749173148205, theme: 'default', profileUI: { isLocked: true, showAbout: false, showCerts: false, showDonation: false, showHeatMap: false, showLocation: false, showName: false, showPoints: false, showPortfolio: false, showTimeLine: false }, badges: { coreTeam: [] }, isDonating: false, emailAuthLinkTTL: null, emailVerifyTTL: null, keyboardShortcuts: true, externalId: '', unsubscribeId: 'ecJxUi7OM49f24hTpauP8' };module exports fullyCertifiedUser = {\n  _id: fullyCertifiedUserId,\n  email: 'foo@bar",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 292,
    "chunk_index": 4,
    "total_chunks": 83
  },
  {
    "id": "bd06fb2621d1dada6e51f20e0bf0c5da",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "false, is2018FullStackCert: false, isSciCompPyCertV7: false, isDataAnalysisPyCertV7: false, isMachineLearningPyCertV7: false, isRelationalDatabaseCertV8: false, isCollegeAlgebraPyCertV8: false, isFoundationalCSharpCertV8: false, isJsAlgoDataStructCertV8: false, completedChallenges: [], portfolio: [], yearsTopContributor: [], rand: 0.6126749173148205, theme: 'default', profileUI: { isLocked: true, showAbout: false, showCerts: false, showDonation: false, showHeatMap: false, showLocation: false, showName: false, showPoints: false, showPortfolio: false, showTimeLine: false }, badges: { coreTeam: [] }, isDonating: false, emailAuthLinkTTL: null, emailVerifyTTL: null, keyboardShortcuts: true, externalId: '', unsubscribeId: 'ecJxUi7OM49f24hTpauP8' };module exports fullyCertifiedUser = { _id: fullyCertifiedUserId, email: 'foo@barcom',\n  emailVerified: true,\n  progressTimestamps: [],\n  isBanned: false,\n  isCheater: false,\n  username: 'certifieduser',\n  about: '',\n  name: 'Full Stack User',\n  location: '',\n  picture: '',\n  acceptedPrivacyTerms: true,\n  sendQuincyEmail: false,\n  currentChallengeId: '',\n  isHonest: true,\n  isFrontEndCert: true,\n  isDataVisCert: true,\n  isBackEndCert: true,\n  isFullStackCert: true,\n  isRespWebDesignCert: true,\n  is2018DataVisCert: true,\n  isFrontEndLibsCert: true,\n  isJsAlgoDataStructCert: true,\n  isJsAlgoDataStructCertV8: true,\n  isApisMicroservicesCert: true,\n  isInfosecQaCert: true,\n  isQaCertV7: true,\n  isInfosecCertV7: true,\n  is2018FullStackCert: true,\n  isSciCompPyCertV7: true,\n  isDataAnalysisPyCertV7: true,\n  isMachineLearningPyCertV7: true,\n  isRelationalDatabaseCertV8: true,\n  isCollegeAlgebraPyCertV8: true,\n  isFoundationalCSharpCertV8: true,\n  completedChallenges: [\n    {\n      id: 'bd7123c8c441eddfaeb5bdef',\n      completedDate: 1475094716730,\n      files: []\n    },\n    {\n      id: '5895f70bf9fc0f352b528e64',\n      completedDate: 1537207306322,\n      files: []\n    },\n    {\n      id: '5895f700f9fc0f352b528e63',\n      completedDate: 1537206156261,\n      files: []\n    },\n    {\n      id: '587d8250367417b2b2512c5d',\n      completedDate: 1537196341863,\n      files: []\n    },\n    {\n      id: '587d824f367417b2b2512c5c',\n      completedDate: 1537196128255,\n      files: []\n    },\n    {\n      id: '587d824f367417b2b2512c5b',\n      completedDate: 1537195761754,\n      files: []\n    },\n    {\n      id: '587d824f367417b2b2512c5a',\n      completedDate: 1537194934561,\n      files: []\n    },\n    {\n      id: '587d824f367417b2b2512c59',\n      completedDate: 1537191541514,\n      files: []\n    },\n    {\n      id: '587d824e367417b2b2512c58',\n      completedDate: 1537191117061,\n      files: []\n    },\n    {\n      id: '587d824e367417b2b2512c57',\n      completedDate: 1537156833598,\n      files: []\n    },\n    {\n      id: '587d824e367417b2b2512c56',\n      completedDate: 1537156784572,\n      files: []\n    },\n    {\n      id: '587d824e367417b2b2512c55',\n      completedDate: 1537156722004,\n      files: []\n    },\n    {\n      id: '587d824d367417b2b2512c54',\n      completedDate: 1537156654992,\n      files: []\n    },\n    {\n      id: '587d824d367417b2b2512c53',\n      completedDate: 1537156621303,\n      files: []\n    },\n    {\n      id: '587d824d367417b2b2512c52',\n      completedDate: 1537156534601,\n      files: []\n    },\n    {\n      id: '587d824d367417b2b2512c51',\n      completedDate: 1537156456357,\n      files: []\n    },\n    {\n      id: '587d824d367417b2b2512c50',\n      completedDate: 1537156425359,\n      files: []\n    },\n    {\n      id: '587d824c367417b2b2512c4f',\n      completedDate: 1537156351862,\n      files: []\n    },\n    {\n      id: '587d824c367417b2b2512c4e',\n      completedDate: 1537155828325,\n      files: []\n    },\n    {\n      id: '587d824c367417b2b2512c4d',\n      completedDate: 1537155787245,\n      files: []\n    },\n    {\n      id: '587d824c367417b2b2512c4c',\n      completedDate: 1537155713207,\n      files: []\n    },\n    {\n      id: '587d824b367417b2b2512c4b',\n      completedDate: 1537155677686,\n      files: []\n    },\n    {\n      id: '587d824b367417b2b2512c4a',\n      completedDate: 1537155558649,\n      files: []\n    },\n    {\n      id: '587d824b367417b2b2512c49',\n      completedDate: 1537155417358,\n      files: []\n    },\n    {\n      id: '587d824b367417b2b2512c48',\n      completedDate: 1537155376892,\n      files: []\n    },\n    {\n      id: '587d824b367417b2b2512c47',\n      completedDate: 1537155346597,\n      files: []\n    },\n    {\n      id: '587d824a367417b2b2512c46',\n      completedDate: 1537155223667,\n      files: []\n    },\n    {\n      id: '5e9a0e9ef99a403d019610cd',\n      completedDate: 1594737025062,\n      files: []\n    },\n    {\n      id: '5e9a0e9ef99a403d019610cc',\n      completedDate: 1594737019383,\n      files: []\n    },\n    {\n      id: '5e9a0e9ef99a403d019610cb',\n      completedDate: 1594737013076,\n      files: []\n    },\n    {\n      id: '5e9a0e9ef99a403d019610ca',\n      completedDate: 1594737007379,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72da6',\n      completedDate: 1594736997931,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72da5',\n      completedDate: 1594736991766,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72da4',\n      completedDate: 1594736985764,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72da3',\n      completedDate: 1594736981667,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72da2',\n      completedDate: 1594736977865,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72da1',\n      completedDate: 1594736973679,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72da0',\n      completedDate: 1594736951770,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d9f',\n      completedDate: 1594736947277,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d9e',\n      completedDate: 1594736941520,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d9d',\n      completedDate: 1594736936531,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d9c',\n      completedDate: 1594736931464,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d9b',\n      completedDate: 1594736928913,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d9a',\n      completedDate: 1594736926241,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d99',\n      completedDate: 1594736922879,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d98',\n      completedDate: 1594736916015,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d97',\n      completedDate: 1594736913489,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d96',\n      completedDate: 1594736911022,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d95',\n      completedDate: 1594736906356,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d94',\n      completedDate: 1594736902879,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d93',\n      completedDate: 1594736899068,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d92',\n      completedDate: 1594736892768,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d91',\n      completedDate: 1594736887031,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d90',\n      completedDate: 1594736881826,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d8f',\n      completedDate: 1594736878283,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d8e',\n      completedDate: 1594736870814,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d8d',\n      completedDate: 1594736867216,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d8c',\n      completedDate: 1594736860834,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d8b',\n      completedDate: 1594736854454,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d8a',\n      completedDate: 1594736850998,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d89',\n      completedDate: 1594736845393,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d88',\n      completedDate: 1594736783329,\n      files: []\n    },\n    {\n      id: '5e8f2f13c4cdbe86b5c72d87',\n      completedDate: 1594736780706,\n      files: []\n    },\n    {\n      id: '5ea9997bbec2e9bc47e94db4',\n      completedDate: 1594736766657,\n      files: []\n    },\n    {\n      id: '5ea9997bbec2e9bc47e94db3',\n      completedDate: 1594736760393,\n      files: []\n    },\n    {\n      id: '5ea9997bbec2e9bc47e94db2',\n      completedDate: 1594736756583,\n      files: []\n    },\n    {\n      id: '5ea9997bbec2e9bc47e94db1',\n      completedDate: 1594736752876,\n      files: []\n    },\n    {\n      id: '5ea9997bbec2e9bc47e94db0',\n      completedDate: 1594736746497,\n      files: []\n    },\n    {\n      id: '5ea9997bbec2e9bc47e94daf',\n      completedDate: 1594736741574,\n      files: []\n    },\n    {\n      id: '5ea9997bbec2e9bc47e94dae',\n      completedDate: 1594736737468,\n      files: []\n    },\n    {\n      id: '5e9a0a8e09c5df3cc3600eda',\n      completedDate: 1594736722645,\n      files: []\n    },\n    {\n      id: '5e9a0a8e09c5df3cc3600ed9',\n      completedDate: 1594736717640,\n      files: []\n    },\n    {\n      id: '5e9a0a8e09c5df3cc3600ed8',\n      completedDate: 1594736714767,\n      files: []\n    },\n    {\n      id: '5e9a0a8e09c5df3cc3600ed7',\n      completedDate: 1594736707875,\n      files: []\n    },\n    {\n      id: '5e9a0a8e09c5df3cc3600ed6',\n      completedDate: 1594736702192,\n      files: []\n    },\n    {\n      id: '5e9a0a8e09c5df3cc3600ed5',\n      completedDate: 1594736698412,\n      files: []\n    },\n    {\n      id: '5e9a0a8e09c5df3cc3600ed4',\n      completedDate: 1594736694389,\n      files: []\n    },\n    {\n      id: '5e9a0a8e09c5df3cc3600ed3',\n      completedDate: 1594736687971,\n      files: []\n    },\n    {\n      id: '5e9a0a8e09c5df3cc3600ed2',\n      completedDate: 1594736682613,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c167',\n      completedDate: 1594736675575,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c166',\n      completedDate: 1594736668250,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c165',\n      completedDate: 1594736665022,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c164',\n      completedDate: 1594736659263,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c163',\n      completedDate: 1594736655408,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c162',\n      completedDate: 1594736649726,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c161',\n      completedDate: 1594736645479,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c160',\n      completedDate: 1594736641203,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c15f',\n      completedDate: 1594736636454,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c15e',\n      completedDate: 1594736632226,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c15d',\n      completedDate: 1594736627710,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c15c',\n      completedDate: 1594736622070,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c15b',\n      completedDate: 1594736618054,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c15a',\n      completedDate: 1594736614700,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c159',\n      completedDate: 1594736608320,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c158',\n      completedDate: 1594736602219,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c157',\n      completedDate: 1594736598552,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c156',\n      completedDate: 1594736593024,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c155',\n      completedDate: 1594736580318,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c154',\n      completedDate: 1594736568877,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c153',\n      completedDate: 1594736563755,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c152',\n      completedDate: 1594736552154,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c151',\n      completedDate: 1594736546567,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c150',\n      completedDate: 1594736539257,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c14f',\n      completedDate: 1594736536366,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c14e',\n      completedDate: 1594736532795,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c14d',\n      completedDate: 1594736530152,\n      files: []\n    },\n    {\n      id: '5e9a093a74c4063ca6f7c14c',\n      completedDate: 1594736526774,\n      files: []\n    },\n    {\n      id: '5e7b9f6a0b6c005b0e76f097',\n      completedDate: 1594736494981,\n      files: []\n    },\n    {\n      id: '5e7b9f6a0b6c005b0e76f096',\n      completedDate: 1594736491249,\n      files: []\n    },\n    {\n      id: '5e7b9f690b6c005b0e76f095',\n      completedDate: 1594736486246,\n      files: []\n    },\n    {\n      id: '5e7b9f190b6c005b0e76f090',\n      completedDate: 1594736476917,\n      files: []\n    },\n    {\n      id: '5e7b9f180b6c005b0e76f08f',\n      completedDate: 1594736461881,\n      files: []\n    },\n    {\n      id: '5e7b9f180b6c005b0e76f08e',\n      completedDate: 1594736452018,\n      files: []\n    },\n    {\n      id: '5e7b9f180b6c005b0e76f08d',\n      completedDate: 1594736444874,\n      files: []\n    },\n    {\n      id: '5e7b9f180b6c005b0e76f08c',\n      completedDate: 1594736437803,\n      files: []\n    },\n    {\n      id: '5e7b9f170b6c005b0e76f08b',\n      completedDate: 1594736432528,\n      files: []\n    },\n    {\n      id: '5e7b9f170b6c005b0e76f08a',\n      completedDate: 1594736422051,\n      files: []\n    },\n    {\n      id: '5e7b9f170b6c005b0e76f088',\n      completedDate: 1594736417716,\n      files: []\n    },\n    {\n      id: '5e7b9f170b6c005b0e76f087',\n      completedDate: 1594736414175,\n      files: []\n    },\n    {\n      id: '5e7b9f160b6c005b0e76f086',\n      completedDate: 1594736410906,\n      files: []\n    },\n    {\n      id: '5e7b9f160b6c005b0e76f085',\n      completedDate: 1594736379721,\n      files: []\n    },\n    {\n      id: '5e7b9f150b6c005b0e76f080',\n      completedDate: 1594736373639,\n      files: []\n    },\n    {\n      id: '5e7b9f150b6c005b0e76f07f',\n      completedDate: 1594736365244,\n      files: []\n    },\n    {\n      id: '5e7b9f140b6c005b0e76f07e',\n      completedDate: 1594736358778,\n      files: []\n    },\n    {\n      id: '5e7b9f140b6c005b0e76f07d',\n      completedDate: 1594736353015,\n      files: []\n    },\n    {\n      id: '5e7b9f0e0b6c005b0e76f07c',\n      completedDate: 1594736348722,\n      files: []\n    },\n    {\n      id: '5e7b9f0e0b6c005b0e76f07b',\n      completedDate: 1594736342374,\n      files: []\n    },\n    {\n      id: '5e7b9f0e0b6c005b0e76f07a',\n      completedDate: 1594736336127,\n      files: []\n    },\n    {\n      id: '5e7b9f0d0b6c005b0e76f076',\n      completedDate: 1594736332128,\n      files: []\n    },\n    {\n      id: '5e7b9f0d0b6c005b0e76f075',\n      completedDate: 1594736324629,\n      files: []\n    },\n    {\n      id: '5e7b9f0c0b6c005b0e76f074',\n      completedDate: 1594736317130,\n      files: []\n    },\n    {\n      id: '5e7b9f0c0b6c005b0e76f073',\n      completedDate: 1594736312374,\n      files: []\n    },\n    {\n      id: '5e7b9f0c0b6c005b0e76f072',\n      completedDate: 1594736298454,\n      files: []\n    },\n    {\n      id: '5e7b9f0c0b6c005b0e76f071',\n      completedDate: 1594736291062,\n      files: []\n    },\n    {\n      id: '5e7b9f0b0b6c005b0e76f070',\n      completedDate: 1594736281756,\n      files: []\n    },\n    {\n      id: '5e7b9f0b0b6c005b0e76f06f',\n      completedDate: 1594736276938,\n      files: []\n    },\n    {\n      id: '5e7b9f0b0b6c005b0e76f06e',\n      completedDate: 1594736270403,\n      files: []\n    },\n    {\n      id: '5e7b9f0b0b6c005b0e76f06d',\n      completedDate: 1594736266728,\n      files: []\n    },\n    {\n      id: '5e7b9f0a0b6c005b0e76f06c',\n      completedDate: 1594736256389,\n      files: []\n    },\n    {\n      id: '5e7b9f0a0b6c005b0e76f069',\n      completedDate: 1594736249458,\n      files: []\n    },\n    {\n      id: '5e7b9f090b6c005b0e76f068',\n      completedDate: 1594736240329,\n      files: []\n    },\n    {\n      id: '5e7b9f090b6c005b0e76f067',\n      completedDate: 1594736231416,\n      files: []\n    },\n    {\n      id: '5e7b9f090b6c005b0e76f066',\n      completedDate: 1594736222820,\n      files: []\n    },\n    {\n      id: '5e7b9f090b6c005b0e76f065',\n      completedDate: 1594736189335,\n      files: []\n    },\n    {\n      id: '5e7b9f080b6c005b0e76f064',\n      completedDate: 1594736184197,\n      files: []\n    },\n    {\n      id: '5e7b9f080b6c005b0e76f063',\n      completedDate: 1594736179115,\n      files: []\n    },\n    {\n      id: '5e7b9f080b6c005b0e76f062',\n      completedDate: 1594736170111,\n      files: []\n    },\n    {\n      id: '5e7b9f070b6c005b0e76f061',\n      completedDate: 1594736166777,\n      files: []\n    },\n    {\n      id: '5e7b9f070b6c005b0e76f060',\n      completedDate: 1594736155841,\n      files: []\n    },\n    {\n      id: '5e7b9f070b6c005b0e76f05f',\n      completedDate: 1594736151207,\n      files: []\n    },\n    {\n      id: '5e7b9f070b6c005b0e76f05e',\n      completedDate: 1594736139632,\n      files: []\n    },\n    {\n      id: '5e7b9f070b6c005b0e76f05d',\n      completedDate: 1594736134513,\n      files: []\n    },\n    {\n      id: '5e7b9f060b6c005b0e76f05c',\n      completedDate: 1594736127815,\n      files: []\n    },\n    {\n      id: '5e7b9f060b6c005b0e76f05b',\n      completedDate: 1594736121855,\n      files: []\n    },\n    {\n      id: '5e7b9f060b6c005b0e76f05a',\n      completedDate: 1594736116852,\n      files: []\n    },\n    {\n      id: '5e7b9f060b6c005b0e76f059',\n      completedDate: 1594736110114,\n      files: []\n    },\n    {\n      id: '5e7b9f050b6c005b0e76f058',\n      completedDate: 1594736099389,\n      files: []\n    },\n    {\n      id: '5e7b9f050b6c005b0e76f057',\n      completedDate: 1594736079471,\n      files: []\n    },\n    {\n      id: '5e7b9f050b6c005b0e76f056',\n      completedDate: 1594736073962,\n      files: []\n    },\n    {\n      id: '5e6a54c358d3af90110a60a3',\n      completedDate: 1594736049167,\n      files: []\n    },\n    {\n      id: '5e6a54ba58d3af90110a60a2',\n      completedDate: 1594736044195,\n      files: []\n    },\n    {\n      id: '5e6a54af58d3af90110a60a1',\n      completedDate: 1594736040286,\n      files: []\n    },\n    {\n      id: '5e6a54a558d3af90110a60a0',\n      completedDate: 1594736018884,\n      files: []\n    },\n    {\n      id: '58a25bcff9fc0f352b528e7e',\n      completedDate: 1537204939276,\n      files: []\n    },\n    {\n      id: '58a25bcff9fc0f352b528e7d',\n      completedDate: 1537204689114,\n      files: []\n    },\n    {\n      id: '587d7db3367417b2b2512b8f',\n      completedDate: 1528836297983,\n      files: []\n    },\n    {\n      id: '587d7db3367417b2b2512b8e',\n      completedDate: 1528836242517,\n      files: []\n    },\n    {\n      id: '587d8251367417b2b2512c64',\n      completedDate: 1584724916681,\n      files: []\n    },\n    {\n      id: '5a23c84252665b21eecc8040',\n      completedDate: 1581377129224,\n      files: []\n    },\n    {\n      id: '5900f3881000cf542c50fe9b',\n      completedDate: 1581267049205,\n      files: []\n    },\n    {\n      id: '5900f3851000cf542c50fe98',\n      completedDate: 1581261142636,\n      files: []\n    },\n    {\n      id: '5a51eabcad78bf416f316e2a',\n      completedDate: 1581259050886,\n      files: []\n    },\n    {\n      id: '5900f37b1000cf542c50fe8e',\n      completedDate: 1581220627138,\n      files: []\n    },\n    {\n      id: '5900f37a1000cf542c50fe8c',\n      completedDate: 1563131237063,\n      files: []\n    },\n    {\n      id: '5900f3781000cf542c50fe8b',\n      completedDate: 1581209840334,\n      files: []\n    },\n    {\n      id: '5900f3761000cf542c50fe89',\n      completedDate: 1581200258395,\n      files: []\n    },\n    {\n      id: '5900f3741000cf542c50fe87',\n      completedDate: 1581197527928,\n      files: []\n    },\n    {\n      id: '5900f3731000cf542c50fe86',\n      completedDate: 1581194166358,\n      files: []\n    },\n    {\n      id: '5900f3721000cf542c50fe85',\n      completedDate: 1581192983102,\n      files: []\n    },\n    {\n      id: '5900f3711000cf542c50fe84',\n      completedDate: 1581107068452,\n      files: []\n    },\n    {\n      id: '5cdafbb0291309899753167f',\n      completedDate: 1574302240996,\n      files: []\n    },\n    {\n      id: '5ccfad82bb2dc6c965a848e5',\n      completedDate: 1574302514181,\n      files: []\n    },\n    {\n      id: '5c3dda8b4d8df89bea71600f',\n      completedDate: 1574302492985,\n      files: []\n    },\n    {\n      id: '5cdafbe72913098997531682',\n      completedDate: 1574302346019,\n      files: []\n    },\n    {\n      id: '5cdafbd72913098997531681',\n      completedDate: 1574302316716,\n      files: []\n    },\n    {\n      id: '5cdafbc32913098997531680',\n      completedDate: 1574302286941,\n      files: []\n    },\n    {\n      id: '5cddbfd622f1a59093ec611d',\n      completedDate: 1574302200001,\n      files: []\n    },\n    {\n      id: '5cfa550e84205a357704ccb6',\n      completedDate: 1574302164631,\n      files: []\n    },\n    {\n      id: '5cd9a70215d3c4e65518328f',\n      completedDate: 1574302134656,\n      files: []\n    },\n    {\n      id: '5cc0bd7a49b71cb96132e54c',\n      completedDate: 1574302122706,\n      files: []\n    },\n    {\n      id: '5c6c06847491271903d37cfd',\n      completedDate: 1574301689702,\n      files: []\n    },\n    {\n      id: '5cfa3679138e7d9595b9d9d4',\n      completedDate: 1572140656699,\n      files: []\n    },\n    {\n      id: '597f24c1dda4e70f53c79c81',\n      completedDate: 1568427791545,\n      files: []\n    },\n    {\n      id: '5a23c84252665b21eecc7e82',\n      completedDate: 1568426995929,\n      files: []\n    },\n    {\n      id: '59669d08d75b60482359409f',\n      completedDate: 1568390166116,\n      files: []\n    },\n    {\n      id: '594d8d0ab97724821379b1e6',\n      completedDate: 1568387040347,\n      files: []\n    },\n    {\n      id: '594810f028c0303b75339ad1',\n      completedDate: 1568346223877,\n      files: []\n    },\n    {\n      id: '596e457071c35c882915b3e4',\n      completedDate: 1568334942324,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf0887a',\n      completedDate: 1475094757107,\n      files: []\n    },\n    {\n      id: 'bd7123c9c441eddfaeb4bdef',\n      completedDate: 1475173147497,\n      files: []\n    },\n    {\n      id: '587d7b89367417b2b2512b49',\n      completedDate: 1528729165835,\n      files: []\n    },\n    {\n      id: '587d7b8c367417b2b2512b58',\n      completedDate: 1528742042170,\n      files: []\n    },\n    {\n      id: '587d7b8c367417b2b2512b57',\n      completedDate: 1528741796573,\n      files: []\n    },\n    {\n      id: '587d7b8c367417b2b2512b56',\n      completedDate: 1528740437095,\n      files: []\n    },\n    {\n      id: '587d7b8c367417b2b2512b55',\n      completedDate: 1528740387410,\n      files: []\n    },\n    {\n      id: '5a24bbe0dba28a8d3cbd4c5d',\n      completedDate: 1528936352198,\n      files: []\n    },\n    {\n      id: '587d7dbc367417b2b2512bb1',\n      completedDate: 1528936259926,\n      files: []\n    },\n    {\n      id: '5a94fe1369fb03452672e45d',\n      completedDate: 1528726237694,\n      files: []\n    },\n    {\n      id: '5a94fe0569fb03452672e45c',\n      completedDate: 1528726188458,\n      files: []\n    },\n    {\n      id: '5a94fdf869fb03452672e45b',\n      completedDate: 1528726170915,\n      files: []\n    },\n    {\n      id: '5a90376038fddaf9a66b5d3c',\n      completedDate: 1528726156897,\n      files: []\n    },\n    {\n      id: '5a90375238fddaf9a66b5d3b',\n      completedDate: 1528726139703,\n      files: []\n    },\n    {\n      id: '5a90374338fddaf9a66b5d3a',\n      completedDate: 1528726130365,\n      files: []\n    },\n    {\n      id: '5a90373638fddaf9a66b5d39',\n      completedDate: 1528726091369,\n      files: []\n    },\n    {\n      id: '5a90372638fddaf9a66b5d38',\n      completedDate: 1528726069769,\n      files: []\n    },\n    {\n      id: '5a9036ee38fddaf9a66b5d37',\n      completedDate: 1528726049483,\n      files: []\n    },\n    {\n      id: '5a9036ee38fddaf9a66b5d36',\n      completedDate: 1528726030349,\n      files: []\n    },\n    {\n      id: '5a9036ee38fddaf9a66b5d35',\n      completedDate: 1528726016678,\n      files: []\n    },\n    {\n      id: '5a9036ee38fddaf9a66b5d34',\n      completedDate: 1528725989219,\n      files: []\n    },\n    {\n      id: '5a9036e138fddaf9a66b5d33',\n      completedDate: 1528725967520,\n      files: []\n    },\n    {\n      id: '5a9036d038fddaf9a66b5d32',\n      completedDate: 1528725949737,\n      files: []\n    },\n    {\n      id: '5a858944d96184f06fd60d61',\n      completedDate: 1528725909984,\n      files: []\n    },\n    {\n      id: '587d8255367417b2b2512c73',\n      completedDate: 1544535146554,\n      files: []\n    },\n    {\n      id: '587d8254367417b2b2512c71',\n      completedDate: 1544451674921,\n      files: []\n    },\n    {\n      id: '587d825b367417b2b2512c8d',\n      completedDate: 1544365302994,\n      files: []\n    },\n    {\n      id: '587d8254367417b2b2512c70',\n      completedDate: 1544279548091,\n      files: []\n    },\n    {\n      id: '587d8255367417b2b2512c72',\n      completedDate: 1544128168268,\n      files: []\n    },\n    {\n      id: '587d8253367417b2b2512c6b',\n      completedDate: 1544016209200,\n      files: []\n    },\n    {\n      id: '8d1323c8c441eddfaeb5bdef',\n      completedDate: 1543963893788,\n      files: []\n    },\n    {\n      id: '8d1923c8c441eddfaeb5bdef',\n      completedDate: 1543842286217,\n      files: []\n    },\n    {\n      id: '587d8255367417b2b2512c74',\n      completedDate: 1539709034423,\n      files: []\n    },\n    {\n      id: '587d8250367417b2b2512c60',\n      completedDate: 1539311762179,\n      files: []\n    },\n    {\n      id: 'bd7158d8c242eddfaeb5bd13',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '587d78af367417b2b2512b04',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '587d78af367417b2b2512b03',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '587d78b0367417b2b2512b05',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: 'bd7158d8c442eddfaeb5bd18',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614ccc21ea91ef1736b9b578',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '613297a923965e0703b64796',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61329b210dac0b08047fd6ab',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61329d52e5010e08d9b9d66b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6133acc353338c0bba9cb553',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6133d11ef548f51f876149e3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '613e2546d0594208229ada50',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '613e275749ebd008e74bb62e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140827cff96e906bd38fc2b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140883f74224508174794c0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61408e4ae3e35d08feb260eb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61408f155e798909b6908712',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614090d5a22b6f0a5a6b464c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6141fabd6f75610664e908fd',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6141fed65b61320743da5894',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614202874ca576084fca625f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614206033d366c090ca7dd42',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61435e3c0679a306c20f1acc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143610161323a081b249c19',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143639d5eddc7094161648c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143908b6aafb00a659ca189',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143920c8eafb00b735746ce',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143931a113bb80c45546287',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614394fb41985e0d2012a93e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143956ed76ed60e012faa51',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614396f7ae83f20ea6f9f4b3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143cb26f7edff2dc28f7da5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6144e818fd5ea704fe56081d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6144f8dc6849e405dd8bb829',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6145e6eeaa66c605eb087fe9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6351e7a8684bf5377c4ee7f7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6145e8b5080a5f06bb0223d0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6145eb5f08a38a0786c7a80c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6145ed1f22caab087630aaad',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6145ee65e2e1530938cb594d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6145f02240ff8f09f7ec913c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6145f14f019a4b0adb94b051',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6145f3a5cd9be60b9459cdd6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6145f47393fbe70c4d885f9c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6145f59029474c0d3dc1c8b8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6145f685797bd30df9784e8c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6145f829ac6a920ebf5797d7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6145f8f8bcd4370f6509078e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6145fb5018cb5b100cb2a88c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6145fc3707fc3310c277f5c8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614796cb8086be482d60e0ac',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6147a14ef5668b5881ef2297',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614878f7a412310647873015',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61487b77d4a37707073a64e5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61487da611a65307e78d2c20',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61487f703571b60899055cf9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614880dc16070e093e29bc56',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614883b6fa720e09fb167de9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614884c1f5d6f30ab3d78cde',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61488ecfd05e290b5712e6da',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148d99cdc7acd0c519862cb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148da157cc0bd0d06df5c0a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148dc095264000dce348bf5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148dcaaf2e8750e6cb4501a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148dd31d210990f0fb140f8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148defa9c01520fb9d178a0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148dfab9b54c110577de165',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148e0bcc13efd10f7d7a6a9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148e161ecec9511941f8833',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148e28706b34912340fd042',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148e335c1edd512d00e4691',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148e41c728f65138addf9cc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148e5aeb102e3142de026a2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f33071498eb2472b87ddee4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3313e74582ad9d063e3a38',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f331e55dfab7a896e53c3a1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3326b143638ee1a09ff1e3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f33294a6af5e9188dbdb8f3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f332a88dc25a0fd25c7687a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f332b23c2045fb843337579',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f344fc1520b6719f2e35605',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f344fbc22624a2976425065',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f344fad8bf01691e71a30eb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f344f9c805cd193c33d829c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3477ae9675db8bb7655b30',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3477ae34c1239cafe128be',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3477aefa51bfc29327200b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3477ae8466a9a3d2cc953c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3477cb2e27333b1ab2b955',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3477cbcb6ba47918c1da92',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3477cb303c5cb61b43aa9b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f34a1fd611d003edeafd681',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f356ed6cf6eab5f15f5cfe6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f356ed63c7807a4f1e6d054',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f356ed60a5decd94ab66986',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f356ed63e0fa262326eef05',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f356ed60785e1f3e9850b6e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f356ed656a336993abd9f7c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f356ed6199b0cdef1d2be8f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f356ed69db0a491745e2bb6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f35e5c44359872a137bd98f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f35e5c4321f818cdc4bed30',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3c866daec9a49519871816',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3c866d5414453fc2d7b480',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3c866d28d7ad0de6470505',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f769541be494f25449b292f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f76967fad478126d6552b0d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f769702e6e33127d14aa120',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3c866de7a5b784048f94b1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3c866dbf362f99b9a0c6d0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3c866d0fc037f7311b4ac8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3c866dd0d0275f01d4d847',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3cade9fa77275d9f4efe62',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3cade94c6576e7f7b7953f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3cade9993019e26313fa8e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f7691dafd882520797cd2f0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f7692f7c5b3ce22a57788b6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f47633757ae3469f2d33d2e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3cade99dda4e6071a85dfd',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3ef6e0e0c3feaebcf647ad',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3ef6e0819d4f23ca7285e6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f716ad029ee4053c7027a7a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f7b87422a560036fd03ccff',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f7b88d37b1f98386f04edc0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f716bee5838c354c728a7c5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3ef6e0eaa7da26e3d34d78',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3ef6e050279c7a4a7101d3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3ef6e04559b939080db057',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3ef6e03d719d5ac4738993',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3ef6e05473f91f948724ab',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3ef6e056bdde6ae6892ba2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3ef6e0e9629bad967cd71e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3ef6e06d34faac0447fc44',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3ef6e087d56ed3ffdc36be',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3ef6e0f8c230bdd2349716',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3ef6e07276f782bb46b93d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3ef6e0a81099d9a697b550',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3ef6e0b431cc215bb16f55',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3ef6e01f288a026d709587',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f3f26fa39591db45e5cd7a0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f459225127805351a6ad057',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f459a7ceb8b5c446656d88b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f459cf202c2a3472fae6a9f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f459fd48bdc98491ca6d1a3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f45a05977e2fa49d9119437',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f45a276c093334f0f6e9df4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f45a5a7c49a8251f0bdb527',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f46fc57528aa1c4b5ea7c2e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f4701b942c824109626c3d8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f46ede1ff8fec5ba656b44c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f45a66d4a2b0453301e5a26',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f45b0731d39e15d54df4dfc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f45b25e7ec2405f166b9de1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f45b3c93c027860d9298dbd',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f45b45d099f3e621fbbb256',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f45b4c81cea7763550e40df',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f45b715301bbf667badc04a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f46e270702a8456a664f0df',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f46e36e745ead58487aabf2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f46e7a4750dd05b5a673920',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f46e8284aae155c83015dee',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f475bb508746c16c9431d42',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f475e1c7f71a61d913836c6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f47fe7e31980053a8d4403b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140c7e645d8e905819f1dd4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140c9d35015ae0ba0c250e8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140cbeec34e970dfe75e710',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140cd32d018ed0f600eefce',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '617ace7d831f9c16a569b38a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140cdebd39d6a101e747529',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140cfc08ca9c5128c3e6478',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140d0069049f5139d78da40',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140d10d50636e14695013b2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140d1a351e88f159ed54fca',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140d263016325162fd076fe',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140d2b687a2cd17bac5730c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140d36b8b747718b50d4b7a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140d3dc359b371b1a21d783',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140d4bc9db3c81c51a09ab7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140d94b5fab7f1d73c9bedb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140dc5e13d0c81e7496f182',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140dd77e0bc5a1f70bd7466',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140de31b1f5b420410728ff',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140df547f09402144e40b92',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140e0d875ec16262f26432b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6140f4b5c1555a2960de1e5f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614100d7d335bb2a5ff74f1f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61410126fa3a6d2b3cda502e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6141019eadec6d2c6c6f007b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6141026ec9882f2d39dcf2b8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6169ab1aaeb4cd1174def700',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6169b1357fcb701bb5efc619',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6169b284950e171d8d0bb16a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61695197ac34f0407e339882',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61695ab9f6ffe951c16d03dd',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61695c4aad56f95497c19583',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61695d1fbc003856628bf561',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '616965351e74d4689eb6de30',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '616968c2c94c8071b349c146',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61696ef7ac756c829f9e4048',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '616971b3cd990186b66c99a1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '616d3a67ccf800ad94ec89ae',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '616d47bc9eedc4bc7f621bec',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '616d4a84b756d9c4b8255093',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '616d50b93ba424d6282c99cf',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '616d525007b8c5d8b3308b1c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '616d55bd160a95e22453a081',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '616d595270d902f0e7086e18',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61764c602bee6974e7790f35',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61764f23ea21477b76f3b80f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61764f7e5240eb7ccc7f6a0a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61764fdda535587e1fefb3aa',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6176519636a76b810ab1219a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '617b65579ce424bf5f02ca73',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '617b8b38f32bf2080a140675',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '617b8e0d93a8d10d9a90e720',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '617b92b9de349513466f6156',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '617b954d9f4f6217a749380e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '617b97abd9f3f61d1590b815',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '617b9ad735109e217284e095',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '617bb5624a75e86463b7e638',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '617bb77353188166af43f3ac',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '617bb9fdef27bc6aa0470ac2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '617bbb6b97a83f6d1f7d6e38',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '617bc3386dc7d07d6469bf20',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '617bc4824e233180553a8069',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '617bd6ec666b1da2587e4e37',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '618a00ed1ca871a2b3aca0cb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '618a0927005553b74bfa05ae',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '618a0b2befb143baefab632b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '618a1275e873dcc803c2d1aa',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '618a132676346ac9f7fd59dd',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '618a16873520a8d088ffdf44',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '618a16d21bd3dad1bb3aa8ef',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619b72a0db211f1c29afb906',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619b7396e57b771f903be90d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619b7424f43ec9215e538afe',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619b74fa777a2b2473c94f82',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619b761916dac02643940022',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619b7c3c83de403126b69c1e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619b7fd56aa2253778bcf5f7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a489b8579e87364b2d2cdb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a493ead935c148d2b76312',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b095989e7fc020b43b1bb9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b095a79e7fc020b43b1bba',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a498399534644f59cff05e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a49d15bdbb5e57cc6fd280',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a4a53c4459446dc134a1c6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a4a6e908bc34725b4c25ac',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a4a7877da33a73a1c1723e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a4ac092eb21e7dbfe61c33',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a4acbb5587197f68544d00',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a4ada3aabeec822b2975d9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a4ae5f29eb5584187201c3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b095c79e7fc020b43b1bbb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a5be9833e7dc178de2af10',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a5bfe091060f1d6a629dd0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a5c906ab73313316e342f0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a5ca57f50ded36d33eef96',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a5d594b887335228ee6533',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a5d6701ee08953ca375243',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a5d79c858bef560e26c685',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a5d7ef1cfcf45764df07a2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61adc60b69cd4b87739d2174',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b092eb9e7fc020b43b1bb2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b093179e7fc020b43b1bb3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b093219e7fc020b43b1bb4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b093329e7fc020b43b1bb5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b093429e7fc020b43b1bb6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b0934c9e7fc020b43b1bb7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b0936d9e7fc020b43b1bb8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61adc91467b5d59328b9f781',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61add79e739a5faee9d96080',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61add929e41980b1edbdba7e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61addaf7e83988b59a7d18ff',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61ade49b2dad60c076cbd32d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b09f739aa6572d2064f9b8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b0a1b2af494934b7ec1a72',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b0a44a6b865738ba49b9fb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b306305810f1c9040ce5a2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b30995968123ceb6b76167',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b30a286c228bd0c493c09a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b31287fb580ae75a486047',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b315e76a63b3ecbbb11b75',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b3183655ec10efd8c0bb07',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b31a451057fff645ec09be',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61b31cd7b0c76bfc076b4719',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61537485c4f2a624f18d7794',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61537a8054753e2f1f2a1574',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61537bb9b1a29430ac15ad38',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61537c5f81f0cf325b4a854c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61537c9eecea6a335db6da79',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61537d86bdc3dd343688fceb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '615380dff67172357fcf0425',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '615f171d05def3218035dc85',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6153893900438b4643590367',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6153897c27f6334716ee5abe',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '615389bd81347947ea7ba896',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6153908a366afb4d57185c8d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '615392916d83fa4f02f7e2cf',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6153938dce8b294ff8f5a4e9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6153947986535e5117e60615',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61539e07e7430b528fbffe21',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61539f32a206bd53ec116465',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6153a04847abee57a3a406ac',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6153a3485f0b20591d26d2a1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6153a3952facd25a83fe8083',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6153a3ebb4f7f05b8401b716',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61437d575fb98f57fa8f7f36',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614385513d91ae5c251c2052',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143862a5e54455d262c212e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143869bb45bd85e3b1926aa',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6165d3b702a5d92ad970b30c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614e0e588f0e8a772a8a81a6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614387cbefeeba5f3654a291',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6169cd8a558aa8434e0ad7f6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614389f601bb4f611db98563',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61438b5b66d76a6264430f2a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61438ec09438696391076d6a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61439dc084fa5f659cf75d7c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61439dfc811e12666b04be6f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61439e33e4fb7967609e0c83',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143a1a228f7d068ab16a130',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143a73279ce6369de4b9bcc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143a778bffc206ac6b1dbe3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143a83fcc32c26bcfae3efa',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143b97c06c3306d23d5da47',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143b9e1f5035c6e5f2a8231',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143bb50e8e48c6f5ef9d8d5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143c2a363865c715f1a3f72',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143cd08fe927072ca3a371d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143cdf48b634a747de42104',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143d003ad9e9d76766293ec',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6143d2842b497779bad947de',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6144d66a5358db0c80628757',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6144d7dbdd3e580da730ff45',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6144de308591ec10e27d5383',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6144e1ba93e435127a7f516d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6144ee46a9d6e614c598cc05',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6144ee790af79815ad15a832',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6144f1410990ea17187a722b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6144f3818bfbc51844152e36',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6144f42204c8c8195f1f3345',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6144f47b7c631e1a6f304dd5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148b07081759c2c691166a9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148b0d764e4192e5712ed92',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148b185ef37522f688316b0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148b30464daf630848c21d4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148b4b150434734143db6f2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148b5623efa8f369f2c3643',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '614e0e503b110f76d3ac2ff6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148b59ef318e03875f35c4a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148bd62bbb8c83a5f1fc1b3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148be3d605d6b3ca9425d11',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148be82ca63c63daa8cca49',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148bf49fcc7913f05dbf9b7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148bfc43df3bc40fe0e6405',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148c004ffc8434252940dc3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148c224ecb157439bc5247c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148c434bd731d45617a76c6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148c5036ddad94692a66230',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148c58bace368497fb11bcf',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148c6aa9981d74af202125e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148c721e74ecd4c619ae51c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148ceaf5d897d4d8b3554b3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148cf094b3f2b4e8a032c63',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148d0b863d10d50544ace0e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148d1bdf39c5b5186f5974b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148d1f9eb63c252e1f8acc4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148d2444d01ab541e64a1e4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148d33e31fccf558696c745',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148d3fff5186b57123d97e2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148d4d57b965358c9fa38bf',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148d7720f0db36775db868a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148d94fdf6a5d6899f8ff15',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148d9825b50a3698aeee644',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148e162e255676ae0da6a76',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148e19c3e26436be0155690',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148e246146b646cf4255f0c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148e2dcdd60306dd77d41cc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148e4d6861a486f60681f36',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148e5a204d99e70343a63e4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148e62a6f768f71c4f04828',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148e789329dc9736ce59b85',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148f34ebedc2274bceeb99c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148f600cde42b7670c2611f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148f693e0728f77c87f3020',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6148f6f7d8914c78e93136ca',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619665c9abd72906f3ad30f9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61967e74a8e3690ab6292daa',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61968df2acd5550bf1616c34',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61a8fe15a6a31306e60d1e89',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61968e9243a4090cc805531c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61968f8877c6720d6d61aaf5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619691693bc14b0e528f5a20',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6196928658b6010f28c39484',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6197f667297bb30a552ce017',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619692ff79f5770fc6d8c0b4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6196990f966e8f10a40094f6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619699c10a0f6e11591d73c4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61969aa6acef5b12200f672e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61969c487ced6f12db8fef94',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61969d66cfcdba137d021558',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61969e7451455614217e901b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6196adc17f77a714d51485f2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6196aead7ac7bf1584b17a7f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6196ce0415498d2463989e84',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6196cee94c6da1253809dff9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6196d00a5d7292262bc02f4c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6196d0cda039d026f7f78d1e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6196d1ac33c68d27dcda5796',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6196d213d99f16287bff22ae',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6196d2c0f22ca0293107c048',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6196d32d1340d829f0f6f57d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6196d41d40bf9b2aaea5d520',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6197cff995d03905b0cca8ad',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6197f40a16afea068c7e60c8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61993b72e874e709b8dfd666',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61993cf26a8e0f0a553db223',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61993dbb35adf30b10d49e38',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61993e9adc9e9a0bb4d28fff',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6199409834ccaf0d10736596',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6199429802b7c10dc79ff871',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619943285a41720e6370d985',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619943876b706d0f35c01dbc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6199442866286d0ff421a4fc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619bcf239fc15905ecd66fce',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619be73b3c806006ccc00bb0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619be7af7b0bf60770f5d2a4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619be80062551a080e32c821',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619be8ce4ea49008c5bfbc30',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619be946958c6009844f1dee',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619c155df0063a0a3fec0e32',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619c16debd0c270b01c5ce38',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619cfdf2e63ddf05feab86ad',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d019488f98c06acbbb71a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d022dc8400c0763829a17',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d02c7bc95bf0827a5d296',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d033915012509031f309a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d03dadadb6509a16f4f5f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d0503e03a790a4179d463',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d05c54dabca0b10058235',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d0882f54bf40bdc4671ed',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d090cd8d6db0c93dc5087',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d0b51ca42ed0d74582186',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d0bc9cb05360e1bf549c3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d0c1594c38c0ebae75878',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d0d18ca99870f884a7bff',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d0daf214542102739b0da',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d0e56f9ca9710fcb974e3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d0eec0ac40611b41e2ccc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d0fc9825c271253df28d4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d102d786c3d13124c37c6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d107edf7ddf13cc77106a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d10cc98145f14820399c5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d115e2adcd71538e82ebb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d11e6d5ef9515d2a16033',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d129a417d0716a94de913',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d1340361095175f4b5115',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d15797b580c1828b05426',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d15d955d9d418c4487bbc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d1629a8adc61960ca8b40',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d1c5fc9f8941a400955da',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d1dab9ff3421ae1976991',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d1deb8b04811b8839ffe4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d1e7a8e81a61c5a819dc4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d1ed33c9a071cf657a0d6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d1fb5d244c31db8a7fdb7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d204bd73ae51e743b8e94',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d20b12996101f430920fb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d21fe6a3f9b2016be9d9d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d229b0e542520cd91c685',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d23089e787e216a7043d6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d237a107c10221ed743fa',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d26b12e651022d80cd017',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d2712853306238f41828e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d2b7a84e78b246f2d17a2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d2bd9c1d43c2526e96f1f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d2d4e80400325ff89664a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d2ebc81ba81271460850d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d2f0e9440bc27caee1cec',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d2fd3ff4f772882e3d998',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d30350883802921bfcccc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d324f5915c929f36ae91d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d32c7fa21f32aaa91d499',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d333b738e3c2b5d58b095',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d337765b9f02c10e93722',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d33c51140292cc5a21742',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d3482f505452d861d0f62',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d3561a951bf2e41a24f10',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d36103839c82efa95dd34',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '619d3711d04d623000013e9e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98c9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98ca',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98cb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98cc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98cd',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98ce',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98cf',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98d0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98d1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98d2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98d3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98d4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98d5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98d6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98d7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98d8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98d9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98da',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98db',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98dc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98dd',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98de',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98df',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98e0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98e1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98e2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98e3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98e4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98e5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98e6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98e7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98e8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98e9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98ea',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98eb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98ec',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98ed',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98ee',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98ef',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98f0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98f1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98f2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98f3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98f4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98f5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98f6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98f7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98f8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98f9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98fa',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98fb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98fc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98fd',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98fe',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e98ff',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9900',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9901',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9902',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9903',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9904',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9905',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9906',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9907',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9908',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9909',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e990a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e990b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e990c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e990d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e990e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e990f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9910',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9911',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9912',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9913',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9914',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9916',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9917',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9918',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9919',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e991a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e991b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e991c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e991d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e991e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e991f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9920',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9921',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9922',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9923',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9924',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9925',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9926',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9927',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9928',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9929',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e992a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e992b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e992c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e992d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e992e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e992f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9930',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9932',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9933',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9915',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9934',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9935',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9931',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9936',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9937',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9938',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e9939',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e993a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e993b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e993c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e993d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5d822fd413a79914d39e993e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dc174fcf86c76b9248c6eb2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dc1798ff86c76b9248c6eb3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dc17d3bf86c76b9248c6eb4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dc17dc8f86c76b9248c6eb5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dc2385ff86c76b9248c6eb7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dc23991f86c76b9248c6eb8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dc23f9bf86c76b9248c6eba',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dc24073f86c76b9248c6ebb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dc24165f86c76b9248c6ebc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dc24614f86c76b9248c6ebd',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ddbd81294d8ddc1510a8e56',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dfa22d1b521be39a3de7be0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62dabe2ef403a12d5d295273',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dfa2407b521be39a3de7be1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dfa30b9eacea3f48c6300ad',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f07be6ef7412fbad0c5626b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f07c98cdb9413cbd4b16750',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dfa3589eacea3f48c6300ae',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dfa371beacea3f48c6300af',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dfa37b9eacea3f48c6300b0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dfb5ecbeacea3f48c6300b1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dfb6250eacea3f48c6300b2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dfb655eeacea3f48c6300b3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5dfb6a35eacea3f48c6300b4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804d0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804d1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804d2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804d3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5efada803cbd2bbdab94e332',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5efae0543cbd2bbdab94e333',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5efae16e3cbd2bbdab94e334',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804d4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f07fb1579dc934717801375',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804d5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804d6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804d7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804d8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5efb23e70dc218d6c85f89b1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '7cf9b03d81a65668421804c3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804d9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804db',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804da',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5efb2c990dc218d6c85f89b2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804dc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804dd',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804df',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f05a1d8e233dff4a68508d8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804de',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f1a80975fc4bcae0edb3497',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804e1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f0d48e7b435f13ab6550051',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f0d4ab1b435f13ab6550052',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f0d4d04b435f13ab6550053',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804e2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5efc54138d6a74d05e68af76',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5efc4f528d6a74d05e68af74',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5efc518e8d6a74d05e68af75',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804e3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5efc575c8d6a74d05e68af77',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5f1a89f1190aff21ae42105a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804e5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804e7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804e8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804e9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804ea',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804eb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804ec',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '5ef9b03c81a63668521804ee',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62bb4009e3458a128ff57d5d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60eebd07ea685b0e777b5583',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f027099a15b00485563dd2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f027c87bc98f050395c139',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f0286404aefb0562a4fdf9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62cc5b1779e4d313466f73c5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f02e7361b68405e27b62a5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f030d388cb74067cf291c3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f1922fcbd2410527b3bd89',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f1a5e2d2c23707a4f9a660',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f1a9cbd23023082e149fee',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f5c3e399ff1a05629964e4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '63541ef4f96cd82e8e6c788a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f5cb8875ab6a0610f05071',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f5d2776c854e069560fbe6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f5dc35c07ac1078f140916',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f803d5241e6a0433a523a1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f805f813eaf2049bc2ceea',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62ff8b9dab5ac88e4d3d43a3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f80e0081e0f2052ae5b505',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f81167d0d4910809f88945',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f81616cff80508badf9ad5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f83e7bfc09900959f41e20',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f84ec41116b209c280ba91',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f852f645b5310a8264f555',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f85a62fb30c80bcea0cedb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f8604682407e0d017bbf7f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60f8618d191b940d62038513',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fab4a123ce4b04526b082b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62ff8e998d3e7eae14d6ae3b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fab8367d35de04e5cb7929',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fab9f17fa294054b74228c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fabf0dd4959805dbae09e6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fac4095512d3066053d73c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fac56271087806def55b33',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fac8d7fdfaee0796934f20',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60faca286cb48b07f6482970',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60facde2d0dc61085b41063f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62ff919a7b5612c0670923a5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60facf914c7b9b08d7510c2c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fad0a812d9890938524f50',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fad1cafcde010995e15306',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fad6dfcc0d930a59becf12',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fad8e6148f310bba7890b1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fad99e09f9d30c1657e790',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fadb18058e950c73925279',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fadce90f85c50d0bb0dd4f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62b30924c5e4ef0daba23b5e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fadd972e6ffe0d6858fa2d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fadfa2b540b70dcfa8b771',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fc219d333e37046f474a6e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fc22d1e64d1b04cdd4e602',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60fc236dc04532052926fdac',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ffe1bc30415f042faea936',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ffe3936796ac04959285a9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ffe4f4ec18cd04dc470c56',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ffe69ee377c6055e192a46',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ffe7d8aae62c05bcc9e7eb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ffe8a5ceb0e90618db06d9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ffe947a868ec068f7850f6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ffe9cb47809106eda2f2c9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ffec2825da1007509ddd06',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ffecefac971607ae73c60f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ffefd6479a3d084fb77cbc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51578',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51579',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b80da8676fb3227967a731',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5157a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5157b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5157c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5157d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5157e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5157f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51580',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51581',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51582',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51583',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51584',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51585',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51586',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51587',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51588',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51589',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5158a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5158b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5158c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5158d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5158e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5158f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51590',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51591',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51592',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51593',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51594',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51595',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51596',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51597',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51598',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c51599',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5159a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5159b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5159c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5159d',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5159e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60bad32219ebcb4a8810ac6a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c5159f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515a0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515a1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515a2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515a3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515a4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515a5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515a6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515a7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515a8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515a9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515aa',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515ab',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515ac',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515ad',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515ae',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515af',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515b0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515b1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515b2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515b3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515b4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515b5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515b6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515b7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515b8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515b9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515ba',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515bc',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ba8914bab51f0fb8228e9c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ba89146b25080f99ab54ad',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ba8913f1704c0f7a8906b8',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ba89123a445e0f5c9e4022',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ba890832b4940f24d1936b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ba929345ab0714a3743655',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ba9296d4d6b414c1b10995',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60ba92987c1e4914dfa7a0b9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515bd',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515be',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515bf',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515c0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515c1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515c2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515c3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515c4',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515c5',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515c6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '60b69a66b6ddb80858c515c7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd5a93fd62bb35968adeab',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd6343fb42013d99bcd7f3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd66c687e610436494c6f1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd67a656743144844941cb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd6ab779390f49148773bb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd6b7c83dbf54a08cf0498',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd6cc9475a784b7776233e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd70336ebb3e4f62ee81ba',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd719788899952e67692b9',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd71d596e8f253b9408b39',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd75ea7f663457612dba02',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd7648a7ba2e5882436831',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd778081276b59d59abad6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd77f7ad2aeb5ae34d07d6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd78621573aa5e8b512f5e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd7a160ed17960e971f28b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd7b3fcaa5406257abc5d1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd8e491324ce717da97ffe',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd8fd08af43372f02952d0',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd9126aa72a474301fc49f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd933ba685de776a94997e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd94056e0355785fbba4d3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd986ddbcbd47ba8fbc5ec',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd990577d8227dd93fbeeb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd9a4ff2fc4481b9157bd7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd9ad665a4a282c8106be3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd9b7285bde783ad5b8aac',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fd9d9fbdfe078800317055',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fda307bde0b091cf7d884a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fda339eadcfd92a6812bed',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fdac1e31692f9a9ad97295',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fdaea3999cb19d76ce717b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fdaf9ff894b6a084ecdc1b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fdafe6f07fd7a1c6785bc2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '61fdb04d9939f0a26ca51c2b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '620159cd5431aa34bc6a4c9c',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62015a5da1c95c358f079ebb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62015cd2654a1139321a89d2',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62015d8942384c3aed48329e',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '620167374bb8b4455cd11125',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '620174ed519dd7506c1a4b61',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '620175b3710a0951cfa86edf',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '64076bbeba941114b0027b6a',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6201782cc420715562f36271',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '620179bc0a6a2358c72b90ad',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62017b6f47454059bf2d3bd1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62017f47c87be96457c49f46',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62017fa5bbef406580ceb44f',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62018243f046a368fab8ffb6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6201830cb0c74b69f1b41635',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '620186f4b6b8356d2def576b',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62018ba1aa263770c953be66',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62018c3e94434a71af1d5eaa',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62018ec29b3ae674f40bef31',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '62019093fe30e278e797d2f6',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '620191707bc65579ddd3ce15',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '620192a767533a7ad19d96d7',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6201995d9ab88e80f1989dce',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '620199c7a7a32c81d4db3410',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6201a1a7af32c287bd6b8183',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6201a1cc668a34888f5b2f52',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6201a20d742f5c89736c8cfb',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6201a42e39bf3b95b6a33bf3',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6201a4adcc6414968b391592',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6201a5258af7b398b030bfaf',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '6201a59be346d399c21d10b1',\n      completedDate: 1689770484197,\n      files: []\n    },\n    {\n      id: '612e6afc009b450a437940a1',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612e77aba7ca691f598feb02',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612e78af05201622d4bab8aa',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612e7d1c29fb872d6384379c',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612e804c54d5e7308d7ebe56',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612e813b3ba67633222cbe54',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612e8279827a28352ce83a72',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612e83ec2eca1e370f830511',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612e89562043183c86df287c',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612e89d254fe5d3df7d6693d',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612e8eebe3a6dc3fcc33a66f',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612e95ef2e4bdf41f69067f9',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612e96fc87fe8e44f69f7ec5',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612e98f3245c98475e49cfc6',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612e9a21381a1949327512e6',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612e9d142affc44a453655db',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612e9f1e7e5ccd4fa9ada0be',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612ea4c4993aba52ab4aa32e',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612ea97df5742154772f312e',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612ead8788d28655ef8db056',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612eaf56b7ba3257fdbfb0db',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612eb4893b63c75bb9251ddf',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612eb75153591b5e3b1ab65e',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612eb7ca8c275d5f89c73333',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612eb8e984cd73677a92b7e9',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612eb934f64a4d6890a45518',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612ebcba99bfa46a15370b11',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612ebe7fe6d07e6b76d1cae2',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612ebedec97e096c8bf64999',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612ebf9a210f2b6d77001e68',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612ec0490ae8626e9adf82e4',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612ec19d5268da7074941f84',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '612ec29c84b9a6718b1f5cec',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6996a',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6996b',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6996c',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6996d',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6996e',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6996f',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69970',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69971',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69972',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69973',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69974',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69975',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69976',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69977',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69978',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69979',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6997a',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6997b',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6997c',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6997d',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6997e',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6997f',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69980',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69981',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69982',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69983',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69984',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69986',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69987',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69988',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69989',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6998a',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6998b',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6998c',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6998d',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6998e',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad6998f',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69990',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69991',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69992',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69993',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69994',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69995',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69996',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '60a3e3396c7b40068ad69997',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f2abbe7d18d49a1e0e1c8',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f2d4150fe0d4cbd0f2628',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f34948891834dd77655a6',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f34ecc1091b4fd5a8a484',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f357957e370510f21ea16',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f378014c2da526a109c81',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f38279e5c3d53692ea441',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f38cabc64e3556f98cc1a',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f3949f58e12577dcefb00',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f39d7da41b15851fa3fb9',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f3b091162165948e1cb33',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f3cafd794015aa9547a6d',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f3d9e59db4b5b8e960762',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f3e1b7233ee5c7595771f',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f3e4af8008c5d494d3afe',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f3ed16592445e57941aec',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f405b89a7ec5f8e2d11f4',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f40b01f680e608d360ed4',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f4172e9eec061d6456221',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f41c979787462e76dab90',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f423cf65d5864132a0956',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f42a021625f656101ef93',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f4bfb9de4a16703b56eb6',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f4ce9d877b668417c0c42',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f4dde9d72e3694cb9ee3b',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f4ec58334106a4170c2a8',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f4f9e4a40566b776a8f38',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f50473cc0196c6dd3892a',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f51257a8a516d80b6c743',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f51e4e5b24a6e80eccce1',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f522dea4f776f64dc3e91',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '6395d33ab5d91bf317107c48',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f5486b8fd4b71633f69b0',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '6396e33fe478dd264ebbf278',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f575b50b91e72af079480',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f5af373a68e744a3c5a76',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f5fd85d0062761f288364',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f61338c8ca176d6445574',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f666ac5edea782feb7e75',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f671b6d1919792745aa5d',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '635bde33c91c80540eae239b',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f6823d0815b7a991f2a75',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f6b2d164f81809efd9bdc',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f6cc778f7698258467596',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f6fddaac1e083502d3e6a',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f70077a4ff98424236c1e',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f72a872354a850d4f533e',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f74a71f1e498619e38ee8',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f7ad94380408d971d14f6',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f7bc680f7168ea01ebf99',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f7c71eab8218f846e4503',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f7d489a581590d1350288',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f7de4487b64919bb4aa5e',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f7e7281626a92bbd62da8',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f7ecb09de9a938ef94756',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f7fa959ab75948f96a0d6',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f808d85793195b0f53be9',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f829d07b18f96f6f6684b',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f83ef928ec9982b785b6a',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f84f246e8ba98e3cd97be',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f887466db4ba14b5342cc',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f89e055040ba294719d2f',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f8bfe0f30a1a3c340356b',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f8f1223601fa546e93f31',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f905fbd1017a65ca224eb',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f94786869e1a7fec54375',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '615f951dff9317a900ef683f',\n      completedDate: 1689770484198,\n      files: []\n    },\n    {\n      id: '587d824a367417b2b2512c45',\n      completedDate: 1538239274460,\n      solution: 'https://fcc-message-bored",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 48949,
    "chunk_index": 5,
    "total_chunks": 83
  },
  {
    "id": "0223231b65140cd43d9b5937e152ced3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "completedDate: 1689770484198, files: [] }, { id: '615f84f246e8ba98e3cd97be', completedDate: 1689770484198, files: [] }, { id: '615f887466db4ba14b5342cc', completedDate: 1689770484198, files: [] }, { id: '615f89e055040ba294719d2f', completedDate: 1689770484198, files: [] }, { id: '615f8bfe0f30a1a3c340356b', completedDate: 1689770484198, files: [] }, { id: '615f8f1223601fa546e93f31', completedDate: 1689770484198, files: [] }, { id: '615f905fbd1017a65ca224eb', completedDate: 1689770484198, files: [] }, { id: '615f94786869e1a7fec54375', completedDate: 1689770484198, files: [] }, { id: '615f951dff9317a900ef683f', completedDate: 1689770484198, files: [] }, { id: '587d824a367417b2b2512c45', completedDate: 1538239274460, solution: 'https://fcc-message-boredglitch me/',\n      githubLink: 'https://github com/moT01/FCC-Message-Board',\n      challengeType: 4,\n      files: []\n    },\n    {\n      id: '587d824a367417b2b2512c44',\n      completedDate: 1537981270657,\n      solution: 'https://fcc-stock-check glitch me/',\n      githubLink: 'https://github com/moT01/FCC-Stock-Checker',\n      challengeType: 4,\n      files: []\n    },\n    {\n      id: '587d824a367417b2b2512c43',\n      completedDate: 1537758214498,\n      solution: 'https://fcc-person-library glitch me/',\n      githubLink: 'https://github",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 6,
    "total_chunks": 83
  },
  {
    "id": "fee74929187352c9804065b1af9b8e29",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "{ id: '615f8f1223601fa546e93f31', completedDate: 1689770484198, files: [] }, { id: '615f905fbd1017a65ca224eb', completedDate: 1689770484198, files: [] }, { id: '615f94786869e1a7fec54375', completedDate: 1689770484198, files: [] }, { id: '615f951dff9317a900ef683f', completedDate: 1689770484198, files: [] }, { id: '587d824a367417b2b2512c45', completedDate: 1538239274460, solution: 'https://fcc-message-boredglitch me/', githubLink: 'https://github com/moT01/FCC-Message-Board', challengeType: 4, files: [] }, { id: '587d824a367417b2b2512c44', completedDate: 1537981270657, solution: 'https://fcc-stock-check glitch me/', githubLink: 'https://github com/moT01/FCC-Stock-Checker', challengeType: 4, files: [] }, { id: '587d824a367417b2b2512c43', completedDate: 1537758214498, solution: 'https://fcc-person-library glitch me/', githubLink: 'https://githubcom/moT01/FCC-Personal-Library',\n      challengeType: 4,\n      files: []\n    },\n    {\n      id: '587d8249367417b2b2512c42',\n      completedDate: 1537738041237,\n      solution: 'https://fcc-issues-tracker glitch me/',\n      githubLink: 'https://github com/moT01/FCC-Issue-Tracker',\n      challengeType: 4,\n      files: []\n    },\n    {\n      id: '5b7d72c338cd7e35b63f3e14',\n      completedDate: 1537653616955,\n      files: []\n    },\n    {\n      id: '587d8249367417b2b2512c41',\n      completedDate: 1537559766968,\n      solution: 'https://fcc-metric-convert glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 7,
    "total_chunks": 83
  },
  {
    "id": "93314669d6878d10a953441f3c120456",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'https://fcc-message-boredglitch me/', githubLink: 'https://github com/moT01/FCC-Message-Board', challengeType: 4, files: [] }, { id: '587d824a367417b2b2512c44', completedDate: 1537981270657, solution: 'https://fcc-stock-check glitch me/', githubLink: 'https://github com/moT01/FCC-Stock-Checker', challengeType: 4, files: [] }, { id: '587d824a367417b2b2512c43', completedDate: 1537758214498, solution: 'https://fcc-person-library glitch me/', githubLink: 'https://githubcom/moT01/FCC-Personal-Library', challengeType: 4, files: [] }, { id: '587d8249367417b2b2512c42', completedDate: 1537738041237, solution: 'https://fcc-issues-tracker glitch me/', githubLink: 'https://github com/moT01/FCC-Issue-Tracker', challengeType: 4, files: [] }, { id: '5b7d72c338cd7e35b63f3e14', completedDate: 1537653616955, files: [] }, { id: '587d8249367417b2b2512c41', completedDate: 1537559766968, solution: 'https://fcc-metric-convert glitchme/',\n      githubLink: 'https://github com/moT01/FCC-Metric-Converter',\n      challengeType: 4,\n      files: []\n    },\n    {\n      id: '58966a17f9fc0f352b528e6d',\n      completedDate: 1537230386653,\n      solution: 'https://torch-player glitch me/',\n      files: []\n    },\n    {\n      id: '589690e6f9fc0f352b528e6e',\n      completedDate: 1537223809877,\n      solution: 'https://eager-harmony glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 451,
    "chunk_index": 8,
    "total_chunks": 83
  },
  {
    "id": "c3a82e335ce380b3136763f2e5e50b0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "id: '587d824a367417b2b2512c43', completedDate: 1537758214498, solution: 'https://fcc-person-library glitch me/', githubLink: 'https://githubcom/moT01/FCC-Personal-Library', challengeType: 4, files: [] }, { id: '587d8249367417b2b2512c42', completedDate: 1537738041237, solution: 'https://fcc-issues-tracker glitch me/', githubLink: 'https://github com/moT01/FCC-Issue-Tracker', challengeType: 4, files: [] }, { id: '5b7d72c338cd7e35b63f3e14', completedDate: 1537653616955, files: [] }, { id: '587d8249367417b2b2512c41', completedDate: 1537559766968, solution: 'https://fcc-metric-convert glitchme/', githubLink: 'https://github com/moT01/FCC-Metric-Converter', challengeType: 4, files: [] }, { id: '58966a17f9fc0f352b528e6d', completedDate: 1537230386653, solution: 'https://torch-player glitch me/', files: [] }, { id: '589690e6f9fc0f352b528e6e', completedDate: 1537223809877, solution: 'https://eager-harmony glitchme/',\n      files: []\n    },\n    {\n      id: '58a25c98f9fc0f352b528e7f',\n      completedDate: 1537222634385,\n      solution: 'https://eager-harmony glitch me/',\n      files: []\n    },\n    {\n      id: '58965611f9fc0f352b528e6c',\n      completedDate: 1537214717318,\n      solution: 'https://eager-harmony glitch me/',\n      files: []\n    },\n    {\n      id: '5895f70ef9fc0f352b528e6b',\n      completedDate: 1537214579404,\n      solution: 'https://eager-harmony glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 9,
    "total_chunks": 83
  },
  {
    "id": "bbba9fef68658443aaabe8f8ec2e2615",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "completedDate: 1537653616955, files: [] }, { id: '587d8249367417b2b2512c41', completedDate: 1537559766968, solution: 'https://fcc-metric-convert glitchme/', githubLink: 'https://github com/moT01/FCC-Metric-Converter', challengeType: 4, files: [] }, { id: '58966a17f9fc0f352b528e6d', completedDate: 1537230386653, solution: 'https://torch-player glitch me/', files: [] }, { id: '589690e6f9fc0f352b528e6e', completedDate: 1537223809877, solution: 'https://eager-harmony glitchme/', files: [] }, { id: '58a25c98f9fc0f352b528e7f', completedDate: 1537222634385, solution: 'https://eager-harmony glitch me/', files: [] }, { id: '58965611f9fc0f352b528e6c', completedDate: 1537214717318, solution: 'https://eager-harmony glitch me/', files: [] }, { id: '5895f70ef9fc0f352b528e6b', completedDate: 1537214579404, solution: 'https://eager-harmony glitchme/',\n      files: []\n    },\n    {\n      id: '5895f70df9fc0f352b528e6a',\n      completedDate: 1537211858590,\n      solution: 'https://eager-harmony glitch me/',\n      files: []\n    },\n    {\n      id: '5895f70df9fc0f352b528e69',\n      completedDate: 1537210025542,\n      solution: 'https://eager-harmony glitch me/',\n      files: []\n    },\n    {\n      id: '5895f70df9fc0f352b528e68',\n      completedDate: 1537209494409,\n      solution: 'https://eager-harmony glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 10,
    "total_chunks": 83
  },
  {
    "id": "0e18b414badb8b20bff8ec2ba02601b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'589690e6f9fc0f352b528e6e', completedDate: 1537223809877, solution: 'https://eager-harmony glitchme/', files: [] }, { id: '58a25c98f9fc0f352b528e7f', completedDate: 1537222634385, solution: 'https://eager-harmony glitch me/', files: [] }, { id: '58965611f9fc0f352b528e6c', completedDate: 1537214717318, solution: 'https://eager-harmony glitch me/', files: [] }, { id: '5895f70ef9fc0f352b528e6b', completedDate: 1537214579404, solution: 'https://eager-harmony glitchme/', files: [] }, { id: '5895f70df9fc0f352b528e6a', completedDate: 1537211858590, solution: 'https://eager-harmony glitch me/', files: [] }, { id: '5895f70df9fc0f352b528e69', completedDate: 1537210025542, solution: 'https://eager-harmony glitch me/', files: [] }, { id: '5895f70df9fc0f352b528e68', completedDate: 1537209494409, solution: 'https://eager-harmony glitchme/',\n      files: []\n    },\n    {\n      id: '5895f70cf9fc0f352b528e67',\n      completedDate: 1537208702252,\n      solution: 'https://eager-harmony glitch me/',\n      files: []\n    },\n    {\n      id: '5895f70cf9fc0f352b528e66',\n      completedDate: 1537208136182,\n      solution: 'https://eager-harmony glitch me/',\n      files: []\n    },\n    {\n      id: '5895f70cf9fc0f352b528e65',\n      completedDate: 1537207848068,\n      solution: 'https://eager-harmony glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 11,
    "total_chunks": 83
  },
  {
    "id": "4ad64b81f70598859547fc4c6f7e1c4f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'5895f70ef9fc0f352b528e6b', completedDate: 1537214579404, solution: 'https://eager-harmony glitchme/', files: [] }, { id: '5895f70df9fc0f352b528e6a', completedDate: 1537211858590, solution: 'https://eager-harmony glitch me/', files: [] }, { id: '5895f70df9fc0f352b528e69', completedDate: 1537210025542, solution: 'https://eager-harmony glitch me/', files: [] }, { id: '5895f70df9fc0f352b528e68', completedDate: 1537209494409, solution: 'https://eager-harmony glitchme/', files: [] }, { id: '5895f70cf9fc0f352b528e67', completedDate: 1537208702252, solution: 'https://eager-harmony glitch me/', files: [] }, { id: '5895f70cf9fc0f352b528e66', completedDate: 1537208136182, solution: 'https://eager-harmony glitch me/', files: [] }, { id: '5895f70cf9fc0f352b528e65', completedDate: 1537207848068, solution: 'https://eager-harmony glitchme/',\n      files: []\n    },\n    {\n      id: '58a25bcef9fc0f352b528e7c',\n      completedDate: 1537200206872,\n      solution: 'https://seemly-fighter glitch me/',\n      files: []\n    },\n    {\n      id: '587d8249367417b2b2512c40',\n      completedDate: 1537199372195,\n      solution: 'https://tidy-roadway glitch me/',\n      files: []\n    },\n    {\n      id: '587d8249367417b2b2512c3f',\n      completedDate: 1537199285395,\n      solution: 'https://tidy-roadway glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 12,
    "total_chunks": 83
  },
  {
    "id": "bd343edfe4c796a2746d4751a8cd9b4b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'5895f70df9fc0f352b528e68', completedDate: 1537209494409, solution: 'https://eager-harmony glitchme/', files: [] }, { id: '5895f70cf9fc0f352b528e67', completedDate: 1537208702252, solution: 'https://eager-harmony glitch me/', files: [] }, { id: '5895f70cf9fc0f352b528e66', completedDate: 1537208136182, solution: 'https://eager-harmony glitch me/', files: [] }, { id: '5895f70cf9fc0f352b528e65', completedDate: 1537207848068, solution: 'https://eager-harmony glitchme/', files: [] }, { id: '58a25bcef9fc0f352b528e7c', completedDate: 1537200206872, solution: 'https://seemly-fighter glitch me/', files: [] }, { id: '587d8249367417b2b2512c40', completedDate: 1537199372195, solution: 'https://tidy-roadway glitch me/', files: [] }, { id: '587d8249367417b2b2512c3f', completedDate: 1537199285395, solution: 'https://tidy-roadway glitchme/',\n      files: []\n    },\n    {\n      id: '587d8249367417b2b2512c3e',\n      completedDate: 1537198926071,\n      solution: 'https://tidy-roadway glitch me/',\n      files: []\n    },\n    {\n      id: '587d8248367417b2b2512c3d',\n      completedDate: 1537198824551,\n      solution: 'https://tidy-roadway glitch me/',\n      files: []\n    },\n    {\n      id: '587d8248367417b2b2512c3c',\n      completedDate: 1537198750481,\n      solution: 'https://tidy-roadway glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 13,
    "total_chunks": 83
  },
  {
    "id": "e3f3f1aac7f0152537e7c89b0c94751a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'5895f70cf9fc0f352b528e65', completedDate: 1537207848068, solution: 'https://eager-harmony glitchme/', files: [] }, { id: '58a25bcef9fc0f352b528e7c', completedDate: 1537200206872, solution: 'https://seemly-fighter glitch me/', files: [] }, { id: '587d8249367417b2b2512c40', completedDate: 1537199372195, solution: 'https://tidy-roadway glitch me/', files: [] }, { id: '587d8249367417b2b2512c3f', completedDate: 1537199285395, solution: 'https://tidy-roadway glitchme/', files: [] }, { id: '587d8249367417b2b2512c3e', completedDate: 1537198926071, solution: 'https://tidy-roadway glitch me/', files: [] }, { id: '587d8248367417b2b2512c3d', completedDate: 1537198824551, solution: 'https://tidy-roadway glitch me/', files: [] }, { id: '587d8248367417b2b2512c3c', completedDate: 1537198750481, solution: 'https://tidy-roadway glitchme/',\n      files: []\n    },\n    {\n      id: '587d8248367417b2b2512c3b',\n      completedDate: 1537198630082,\n      solution: 'https://tidy-roadway glitch me/',\n      files: []\n    },\n    {\n      id: '587d8248367417b2b2512c3a',\n      completedDate: 1537198391567,\n      solution: 'https://tidy-roadway glitch me/',\n      files: []\n    },\n    {\n      id: '587d8247367417b2b2512c39',\n      completedDate: 1537198316053,\n      solution: 'https://tidy-roadway glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 14,
    "total_chunks": 83
  },
  {
    "id": "396e8af800e9e25f803bd57f3b84f571",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'587d8249367417b2b2512c3f', completedDate: 1537199285395, solution: 'https://tidy-roadway glitchme/', files: [] }, { id: '587d8249367417b2b2512c3e', completedDate: 1537198926071, solution: 'https://tidy-roadway glitch me/', files: [] }, { id: '587d8248367417b2b2512c3d', completedDate: 1537198824551, solution: 'https://tidy-roadway glitch me/', files: [] }, { id: '587d8248367417b2b2512c3c', completedDate: 1537198750481, solution: 'https://tidy-roadway glitchme/', files: [] }, { id: '587d8248367417b2b2512c3b', completedDate: 1537198630082, solution: 'https://tidy-roadway glitch me/', files: [] }, { id: '587d8248367417b2b2512c3a', completedDate: 1537198391567, solution: 'https://tidy-roadway glitch me/', files: [] }, { id: '587d8247367417b2b2512c39', completedDate: 1537198316053, solution: 'https://tidy-roadway glitchme/',\n      files: []\n    },\n    {\n      id: '587d8247367417b2b2512c38',\n      completedDate: 1537197942090,\n      solution: 'https://tidy-roadway glitch me/',\n      files: []\n    },\n    {\n      id: '587d8247367417b2b2512c37',\n      completedDate: 1537197832144,\n      solution: 'https://tidy-roadway glitch me/',\n      files: []\n    },\n    {\n      id: '587d8247367417b2b2512c36',\n      completedDate: 1537196939178,\n      solution: 'https://tidy-roadway glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 15,
    "total_chunks": 83
  },
  {
    "id": "af68a02f4266abafdfcf5619ca873a68",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'587d8248367417b2b2512c3c', completedDate: 1537198750481, solution: 'https://tidy-roadway glitchme/', files: [] }, { id: '587d8248367417b2b2512c3b', completedDate: 1537198630082, solution: 'https://tidy-roadway glitch me/', files: [] }, { id: '587d8248367417b2b2512c3a', completedDate: 1537198391567, solution: 'https://tidy-roadway glitch me/', files: [] }, { id: '587d8247367417b2b2512c39', completedDate: 1537198316053, solution: 'https://tidy-roadway glitchme/', files: [] }, { id: '587d8247367417b2b2512c38', completedDate: 1537197942090, solution: 'https://tidy-roadway glitch me/', files: [] }, { id: '587d8247367417b2b2512c37', completedDate: 1537197832144, solution: 'https://tidy-roadway glitch me/', files: [] }, { id: '587d8247367417b2b2512c36', completedDate: 1537196939178, solution: 'https://tidy-roadway glitchme/',\n      files: []\n    },\n    {\n      id: '587d7fa6367417b2b2512bbf',\n      completedDate: 1537144978531,\n      solution: 'https://codepen io/moT01/full/rZxZMq/',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: '587d7dae367417b2b2512b7c',\n      completedDate: 1528904752503,\n      files: []\n    },\n    {\n      id: '5a5d02bd919fcf9ca8cf46cb',\n      completedDate: 1535377692723,\n      solution: 'https://mot01 github",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 16,
    "total_chunks": 83
  },
  {
    "id": "1233306c2170075305a19e68161c005a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "}, { id: '587d8247367417b2b2512c39', completedDate: 1537198316053, solution: 'https://tidy-roadway glitchme/', files: [] }, { id: '587d8247367417b2b2512c38', completedDate: 1537197942090, solution: 'https://tidy-roadway glitch me/', files: [] }, { id: '587d8247367417b2b2512c37', completedDate: 1537197832144, solution: 'https://tidy-roadway glitch me/', files: [] }, { id: '587d8247367417b2b2512c36', completedDate: 1537196939178, solution: 'https://tidy-roadway glitchme/', files: [] }, { id: '587d7fa6367417b2b2512bbf', completedDate: 1537144978531, solution: 'https://codepen io/moT01/full/rZxZMq/', challengeType: 3, files: [] }, { id: '587d7dae367417b2b2512b7c', completedDate: 1528904752503, files: [] }, { id: '5a5d02bd919fcf9ca8cf46cb', completedDate: 1535377692723, solution: 'https://mot01 githubio/FCC-Light-Bright/',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'bd7168d8c242eddfaeb5bd13',\n      completedDate: 1488665231772,\n      solution: 'http://codepen io/moT01/pen/JEMxoj editors=1010',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'bd7178d8c242eddfaeb5bd13',\n      completedDate: 1488665256488,\n      solution: 'http://codepen",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 17,
    "total_chunks": 83
  },
  {
    "id": "b855f5663b7fa8c11ce3663e6aa80cd6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'587d8247367417b2b2512c37', completedDate: 1537197832144, solution: 'https://tidy-roadway glitch me/', files: [] }, { id: '587d8247367417b2b2512c36', completedDate: 1537196939178, solution: 'https://tidy-roadway glitchme/', files: [] }, { id: '587d7fa6367417b2b2512bbf', completedDate: 1537144978531, solution: 'https://codepen io/moT01/full/rZxZMq/', challengeType: 3, files: [] }, { id: '587d7dae367417b2b2512b7c', completedDate: 1528904752503, files: [] }, { id: '5a5d02bd919fcf9ca8cf46cb', completedDate: 1535377692723, solution: 'https://mot01 githubio/FCC-Light-Bright/', challengeType: 3, files: [] }, { id: 'bd7168d8c242eddfaeb5bd13', completedDate: 1488665231772, solution: 'http://codepen io/moT01/pen/JEMxoj editors=1010', challengeType: 3, files: [] }, { id: 'bd7178d8c242eddfaeb5bd13', completedDate: 1488665256488, solution: 'http://codepenio/moT01/pen/zNLPmV',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'bd7188d8c242eddfaeb5bd13',\n      completedDate: 1488665304243,\n      solution: 'http://codepen io/moT01/pen/NdLxNB',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: '587d7fa6367417b2b2512bc0',\n      completedDate: 1535244078849,\n      solution: 'https://codepen",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 18,
    "total_chunks": 83
  },
  {
    "id": "1cb88aa6b8e95a934bbbac5df8efc3ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "1537144978531, solution: 'https://codepen io/moT01/full/rZxZMq/', challengeType: 3, files: [] }, { id: '587d7dae367417b2b2512b7c', completedDate: 1528904752503, files: [] }, { id: '5a5d02bd919fcf9ca8cf46cb', completedDate: 1535377692723, solution: 'https://mot01 githubio/FCC-Light-Bright/', challengeType: 3, files: [] }, { id: 'bd7168d8c242eddfaeb5bd13', completedDate: 1488665231772, solution: 'http://codepen io/moT01/pen/JEMxoj editors=1010', challengeType: 3, files: [] }, { id: 'bd7178d8c242eddfaeb5bd13', completedDate: 1488665256488, solution: 'http://codepenio/moT01/pen/zNLPmV', challengeType: 3, files: [] }, { id: 'bd7188d8c242eddfaeb5bd13', completedDate: 1488665304243, solution: 'http://codepen io/moT01/pen/NdLxNB', challengeType: 3, files: [] }, { id: '587d7fa6367417b2b2512bc0', completedDate: 1535244078849, solution: 'https://codepenio/moT01/full/rrKwzy/',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: '587d825a367417b2b2512c89',\n      completedDate: 1534614153746,\n      files: []\n    },\n    {\n      id: '587d8259367417b2b2512c86',\n      completedDate: 1534256923082,\n      files: []\n    },\n    {\n      id: '587d8259367417b2b2512c85',\n      completedDate: 1534253945342,\n      files: []\n    },\n    {\n      id: '8d5123c8c441eddfaeb5bdef',\n      completedDate: 1534222674479,\n      files: []\n    },\n    {\n      id: 'bd7158d8c443edefaeb5bdef',\n      completedDate: 1498077591986,\n      solution: 'https://mixed-tadpole",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 553,
    "chunk_index": 19,
    "total_chunks": 83
  },
  {
    "id": "2bd39f937025b51eb444c76d6a31ea32",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "{ id: 'bd7178d8c242eddfaeb5bd13', completedDate: 1488665256488, solution: 'http://codepenio/moT01/pen/zNLPmV', challengeType: 3, files: [] }, { id: 'bd7188d8c242eddfaeb5bd13', completedDate: 1488665304243, solution: 'http://codepen io/moT01/pen/NdLxNB', challengeType: 3, files: [] }, { id: '587d7fa6367417b2b2512bc0', completedDate: 1535244078849, solution: 'https://codepenio/moT01/full/rrKwzy/', challengeType: 3, files: [] }, { id: '587d825a367417b2b2512c89', completedDate: 1534614153746, files: [] }, { id: '587d8259367417b2b2512c86', completedDate: 1534256923082, files: [] }, { id: '587d8259367417b2b2512c85', completedDate: 1534253945342, files: [] }, { id: '8d5123c8c441eddfaeb5bdef', completedDate: 1534222674479, files: [] }, { id: 'bd7158d8c443edefaeb5bdef', completedDate: 1498077591986, solution: 'https://mixed-tadpoleglitch me/',\n      challengeType: 4,\n      files: []\n    },\n    {\n      id: 'bd7158d8c443edefaeb5bdff',\n      completedDate: 1498090900090,\n      solution: 'https://phase-continent glitch me/',\n      challengeType: 4,\n      files: []\n    },\n    {\n      id: 'bd7158d8c443edefaeb5bd0e',\n      completedDate: 1499384769762,\n      solution: 'https://ash-airport glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 20,
    "total_chunks": 83
  },
  {
    "id": "682c325e62d74e43ce5ba1da553ad3d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "completedDate: 1535244078849, solution: 'https://codepenio/moT01/full/rrKwzy/', challengeType: 3, files: [] }, { id: '587d825a367417b2b2512c89', completedDate: 1534614153746, files: [] }, { id: '587d8259367417b2b2512c86', completedDate: 1534256923082, files: [] }, { id: '587d8259367417b2b2512c85', completedDate: 1534253945342, files: [] }, { id: '8d5123c8c441eddfaeb5bdef', completedDate: 1534222674479, files: [] }, { id: 'bd7158d8c443edefaeb5bdef', completedDate: 1498077591986, solution: 'https://mixed-tadpoleglitch me/', challengeType: 4, files: [] }, { id: 'bd7158d8c443edefaeb5bdff', completedDate: 1498090900090, solution: 'https://phase-continent glitch me/', challengeType: 4, files: [] }, { id: 'bd7158d8c443edefaeb5bd0e', completedDate: 1499384769762, solution: 'https://ash-airport glitchme/',\n      challengeType: 4,\n      files: []\n    },\n    {\n      id: 'bd7158d8c443edefaeb5bd0f',\n      completedDate: 1500911711138,\n      solution: 'https://zenith-double glitch me/',\n      challengeType: 4,\n      files: []\n    },\n    {\n      id: '5a8b073d06fa14fcfde687aa',\n      completedDate: 1533833478381,\n      solution: 'https://fcc-exercise-tracker herokuapp",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 21,
    "total_chunks": 83
  },
  {
    "id": "8e9a11df6fc7b839a8f8c5efd95ff4ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'587d8259367417b2b2512c85', completedDate: 1534253945342, files: [] }, { id: '8d5123c8c441eddfaeb5bdef', completedDate: 1534222674479, files: [] }, { id: 'bd7158d8c443edefaeb5bdef', completedDate: 1498077591986, solution: 'https://mixed-tadpoleglitch me/', challengeType: 4, files: [] }, { id: 'bd7158d8c443edefaeb5bdff', completedDate: 1498090900090, solution: 'https://phase-continent glitch me/', challengeType: 4, files: [] }, { id: 'bd7158d8c443edefaeb5bd0e', completedDate: 1499384769762, solution: 'https://ash-airport glitchme/', challengeType: 4, files: [] }, { id: 'bd7158d8c443edefaeb5bd0f', completedDate: 1500911711138, solution: 'https://zenith-double glitch me/', challengeType: 4, files: [] }, { id: '5a8b073d06fa14fcfde687aa', completedDate: 1533833478381, solution: 'https://fcc-exercise-tracker herokuappcom/',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: '587d7faf367417b2b2512be9',\n      completedDate: 1533313441660,\n      files: []\n    },\n    {\n      id: '587d7faf367417b2b2512be8',\n      completedDate: 1533313429792,\n      files: []\n    },\n    {\n      id: '587d7fae367417b2b2512be7',\n      completedDate: 1533313418548,\n      files: []\n    },\n    {\n      id: '587d7fae367417b2b2512be6',\n      completedDate: 1533313409789,\n      files: []\n    },\n    {\n      id: '587d7fae367417b2b2512be5',\n      completedDate: 1533313394341,\n      files: []\n    },\n    {\n      id: '587d7fae367417b2b2512be4',\n      completedDate: 1533313287461,\n      files: []\n    },\n    {\n      id: '587d7fae367417b2b2512be3',\n      completedDate: 1533312971665,\n      files: []\n    },\n    {\n      id: '587d7fad367417b2b2512be2',\n      completedDate: 1533312379130,\n      files: []\n    },\n    {\n      id: '587d7fad367417b2b2512be1',\n      completedDate: 1533305186377,\n      files: []\n    },\n    {\n      id: '587d7fad367417b2b2512bdf',\n      completedDate: 1533305081870,\n      files: []\n    },\n    {\n      id: '587d7fac367417b2b2512bde',\n      completedDate: 1533304893213,\n      files: []\n    },\n    {\n      id: '587d7fac367417b2b2512bdd',\n      completedDate: 1533304473980,\n      files: []\n    },\n    {\n      id: '587d7fac367417b2b2512bdc',\n      completedDate: 1533304357934,\n      files: []\n    },\n    {\n      id: '587d7fac367417b2b2512bdb',\n      completedDate: 1533304277919,\n      files: []\n    },\n    {\n      id: '587d7fab367417b2b2512bda',\n      completedDate: 1533304195179,\n      files: []\n    },\n    {\n      id: '587d7fab367417b2b2512bd9',\n      completedDate: 1533304040401,\n      files: []\n    },\n    {\n      id: '587d7fab367417b2b2512bd8',\n      completedDate: 1533303510955,\n      files: []\n    },\n    {\n      id: '587d7fab367417b2b2512bd7',\n      completedDate: 1533303204725,\n      files: []\n    },\n    {\n      id: '587d7faa367417b2b2512bd6',\n      completedDate: 1533302881077,\n      files: []\n    },\n    {\n      id: '587d7faa367417b2b2512bd4',\n      completedDate: 1533302797436,\n      files: []\n    },\n    {\n      id: '587d7faa367417b2b2512bd3',\n      completedDate: 1533302682051,\n      files: []\n    },\n    {\n      id: '587d7faa367417b2b2512bd2',\n      completedDate: 1533302419381,\n      files: []\n    },\n    {\n      id: '587d7fa9367417b2b2512bd1',\n      completedDate: 1533302159045,\n      files: []\n    },\n    {\n      id: '587d7fa9367417b2b2512bd0',\n      completedDate: 1533302136821,\n      files: []\n    },\n    {\n      id: '587d7fa9367417b2b2512bcf',\n      completedDate: 1533301974907,\n      files: []\n    },\n    {\n      id: '587d7fa9367417b2b2512bce',\n      completedDate: 1533301957042,\n      files: []\n    },\n    {\n      id: '587d7fa8367417b2b2512bcd',\n      completedDate: 1533301918702,\n      files: []\n    },\n    {\n      id: '587d7fa8367417b2b2512bcc',\n      completedDate: 1533301841955,\n      files: []\n    },\n    {\n      id: '587d7fa8367417b2b2512bcb',\n      completedDate: 1533301722365,\n      files: []\n    },\n    {\n      id: '587d7fa8367417b2b2512bca',\n      completedDate: 1533301610183,\n      files: []\n    },\n    {\n      id: '587d7fa8367417b2b2512bc9',\n      completedDate: 1533301532665,\n      files: []\n    },\n    {\n      id: '587d7fa7367417b2b2512bc8',\n      completedDate: 1533301461772,\n      files: []\n    },\n    {\n      id: '587d7fa7367417b2b2512bc7',\n      completedDate: 1533301438297,\n      files: []\n    },\n    {\n      id: '587d7fa7367417b2b2512bc6',\n      completedDate: 1533301332393,\n      files: []\n    },\n    {\n      id: '587d7fa7367417b2b2512bc5',\n      completedDate: 1533301304031,\n      files: []\n    },\n    {\n      id: '587d7fa7367417b2b2512bc4',\n      completedDate: 1533301245248,\n      files: []\n    },\n    {\n      id: '587d78b0367417b2b2512b05',\n      completedDate: 1533273771014,\n      solution: 'https://codepen",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 1710,
    "chunk_index": 22,
    "total_chunks": 83
  },
  {
    "id": "37291c9126b40bba935b9ebecc861711",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "completedDate: 1533301841955, files: [] }, { id: '587d7fa8367417b2b2512bcb', completedDate: 1533301722365, files: [] }, { id: '587d7fa8367417b2b2512bca', completedDate: 1533301610183, files: [] }, { id: '587d7fa8367417b2b2512bc9', completedDate: 1533301532665, files: [] }, { id: '587d7fa7367417b2b2512bc8', completedDate: 1533301461772, files: [] }, { id: '587d7fa7367417b2b2512bc7', completedDate: 1533301438297, files: [] }, { id: '587d7fa7367417b2b2512bc6', completedDate: 1533301332393, files: [] }, { id: '587d7fa7367417b2b2512bc5', completedDate: 1533301304031, files: [] }, { id: '587d7fa7367417b2b2512bc4', completedDate: 1533301245248, files: [] }, { id: '587d78b0367417b2b2512b05', completedDate: 1533273771014, solution: 'https://codepenio/moT01/full/JBvzNL/',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: '587d78af367417b2b2512b04',\n      completedDate: 1533265342064,\n      solution: 'https://codepen io/moT01/full/qKyKYL/',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedc08830',\n      completedDate: 1475096459663,\n      files: []\n    },\n    {\n      id: '587d7fb9367417b2b2512c12',\n      completedDate: 1533055320751,\n      solution: 'https://fcc-mongo-mongoose glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 23,
    "total_chunks": 83
  },
  {
    "id": "8733f8879b0a669042d3e0904c2e674f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "files: [] }, { id: '587d7fa7367417b2b2512bc7', completedDate: 1533301438297, files: [] }, { id: '587d7fa7367417b2b2512bc6', completedDate: 1533301332393, files: [] }, { id: '587d7fa7367417b2b2512bc5', completedDate: 1533301304031, files: [] }, { id: '587d7fa7367417b2b2512bc4', completedDate: 1533301245248, files: [] }, { id: '587d78b0367417b2b2512b05', completedDate: 1533273771014, solution: 'https://codepenio/moT01/full/JBvzNL/', challengeType: 3, files: [] }, { id: '587d78af367417b2b2512b04', completedDate: 1533265342064, solution: 'https://codepen io/moT01/full/qKyKYL/', challengeType: 3, files: [] }, { id: 'bad87fee1348bd9aedc08830', completedDate: 1475096459663, files: [] }, { id: '587d7fb9367417b2b2512c12', completedDate: 1533055320751, solution: 'https://fcc-mongo-mongoose glitchme/',\n      files: []\n    },\n    {\n      id: '587d7fb8367417b2b2512c11',\n      completedDate: 1533055049560,\n      solution: 'https://fcc-mongo-mongoose glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb8367417b2b2512c10',\n      completedDate: 1533055004536,\n      solution: 'https://fcc-mongo-mongoose glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb8367417b2b2512c0f',\n      completedDate: 1533054957664,\n      solution: 'https://fcc-mongo-mongoose glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 24,
    "total_chunks": 83
  },
  {
    "id": "b726b1a486a0b73b1f0041e0c617cf7b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "{ id: '587d78b0367417b2b2512b05', completedDate: 1533273771014, solution: 'https://codepenio/moT01/full/JBvzNL/', challengeType: 3, files: [] }, { id: '587d78af367417b2b2512b04', completedDate: 1533265342064, solution: 'https://codepen io/moT01/full/qKyKYL/', challengeType: 3, files: [] }, { id: 'bad87fee1348bd9aedc08830', completedDate: 1475096459663, files: [] }, { id: '587d7fb9367417b2b2512c12', completedDate: 1533055320751, solution: 'https://fcc-mongo-mongoose glitchme/', files: [] }, { id: '587d7fb8367417b2b2512c11', completedDate: 1533055049560, solution: 'https://fcc-mongo-mongoose glitch me/', files: [] }, { id: '587d7fb8367417b2b2512c10', completedDate: 1533055004536, solution: 'https://fcc-mongo-mongoose glitch me/', files: [] }, { id: '587d7fb8367417b2b2512c0f', completedDate: 1533054957664, solution: 'https://fcc-mongo-mongoose glitchme/',\n      files: []\n    },\n    {\n      id: '587d7fb8367417b2b2512c0e',\n      completedDate: 1533054810266,\n      solution: 'https://fcc-mongo-mongoose glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb7367417b2b2512c0d',\n      completedDate: 1533054731172,\n      solution: 'https://fcc-mongo-mongoose glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb7367417b2b2512c0c',\n      completedDate: 1533054681787,\n      solution: 'https://fcc-mongo-mongoose glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 25,
    "total_chunks": 83
  },
  {
    "id": "0679e637b975d63fef642564b9f06a92",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'587d7fb9367417b2b2512c12', completedDate: 1533055320751, solution: 'https://fcc-mongo-mongoose glitchme/', files: [] }, { id: '587d7fb8367417b2b2512c11', completedDate: 1533055049560, solution: 'https://fcc-mongo-mongoose glitch me/', files: [] }, { id: '587d7fb8367417b2b2512c10', completedDate: 1533055004536, solution: 'https://fcc-mongo-mongoose glitch me/', files: [] }, { id: '587d7fb8367417b2b2512c0f', completedDate: 1533054957664, solution: 'https://fcc-mongo-mongoose glitchme/', files: [] }, { id: '587d7fb8367417b2b2512c0e', completedDate: 1533054810266, solution: 'https://fcc-mongo-mongoose glitch me/', files: [] }, { id: '587d7fb7367417b2b2512c0d', completedDate: 1533054731172, solution: 'https://fcc-mongo-mongoose glitch me/', files: [] }, { id: '587d7fb7367417b2b2512c0c', completedDate: 1533054681787, solution: 'https://fcc-mongo-mongoose glitchme/',\n      files: []\n    },\n    {\n      id: '587d7fb7367417b2b2512c0b',\n      completedDate: 1533054615086,\n      solution: 'https://fcc-mongo-mongoose glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb7367417b2b2512c0a',\n      completedDate: 1533054496430,\n      solution: 'https://fcc-mongo-mongoose glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb6367417b2b2512c09',\n      completedDate: 1533054359282,\n      solution: 'https://fcc-mongo-mongoose glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 26,
    "total_chunks": 83
  },
  {
    "id": "1d71bc5de8b53beea5e85b752d28e9a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'587d7fb8367417b2b2512c0f', completedDate: 1533054957664, solution: 'https://fcc-mongo-mongoose glitchme/', files: [] }, { id: '587d7fb8367417b2b2512c0e', completedDate: 1533054810266, solution: 'https://fcc-mongo-mongoose glitch me/', files: [] }, { id: '587d7fb7367417b2b2512c0d', completedDate: 1533054731172, solution: 'https://fcc-mongo-mongoose glitch me/', files: [] }, { id: '587d7fb7367417b2b2512c0c', completedDate: 1533054681787, solution: 'https://fcc-mongo-mongoose glitchme/', files: [] }, { id: '587d7fb7367417b2b2512c0b', completedDate: 1533054615086, solution: 'https://fcc-mongo-mongoose glitch me/', files: [] }, { id: '587d7fb7367417b2b2512c0a', completedDate: 1533054496430, solution: 'https://fcc-mongo-mongoose glitch me/', files: [] }, { id: '587d7fb6367417b2b2512c09', completedDate: 1533054359282, solution: 'https://fcc-mongo-mongoose glitchme/',\n      files: []\n    },\n    {\n      id: '587d7fb6367417b2b2512c07',\n      completedDate: 1533053012175,\n      solution: 'https://fcc-mongo-mongoose glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb6367417b2b2512c06',\n      completedDate: 1533049464594,\n      solution: 'https://fcc-mongo-mongoose glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb2367417b2b2512bf8',\n      completedDate: 1533047350131,\n      solution: 'https://fcc-basic-node-and-express glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 27,
    "total_chunks": 83
  },
  {
    "id": "4227d386e1a6915a2dd04bb80dbd710b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'587d7fb7367417b2b2512c0c', completedDate: 1533054681787, solution: 'https://fcc-mongo-mongoose glitchme/', files: [] }, { id: '587d7fb7367417b2b2512c0b', completedDate: 1533054615086, solution: 'https://fcc-mongo-mongoose glitch me/', files: [] }, { id: '587d7fb7367417b2b2512c0a', completedDate: 1533054496430, solution: 'https://fcc-mongo-mongoose glitch me/', files: [] }, { id: '587d7fb6367417b2b2512c09', completedDate: 1533054359282, solution: 'https://fcc-mongo-mongoose glitchme/', files: [] }, { id: '587d7fb6367417b2b2512c07', completedDate: 1533053012175, solution: 'https://fcc-mongo-mongoose glitch me/', files: [] }, { id: '587d7fb6367417b2b2512c06', completedDate: 1533049464594, solution: 'https://fcc-mongo-mongoose glitch me/', files: [] }, { id: '587d7fb2367417b2b2512bf8', completedDate: 1533047350131, solution: 'https://fcc-basic-node-and-express glitchme/',\n      files: []\n    },\n    {\n      id: '587d7fb2367417b2b2512bf7',\n      completedDate: 1533047240645,\n      solution: 'https://fcc-basic-node-and-express glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb2367417b2b2512bf6',\n      completedDate: 1533046595396,\n      solution: 'https://fcc-basic-node-and-express glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb2367417b2b2512bf5',\n      completedDate: 1533046425247,\n      solution: 'https://fcc-basic-node-and-express glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 28,
    "total_chunks": 83
  },
  {
    "id": "bdd08e7c01bc354c1c2dc2363998ae46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'587d7fb6367417b2b2512c09', completedDate: 1533054359282, solution: 'https://fcc-mongo-mongoose glitchme/', files: [] }, { id: '587d7fb6367417b2b2512c07', completedDate: 1533053012175, solution: 'https://fcc-mongo-mongoose glitch me/', files: [] }, { id: '587d7fb6367417b2b2512c06', completedDate: 1533049464594, solution: 'https://fcc-mongo-mongoose glitch me/', files: [] }, { id: '587d7fb2367417b2b2512bf8', completedDate: 1533047350131, solution: 'https://fcc-basic-node-and-express glitchme/', files: [] }, { id: '587d7fb2367417b2b2512bf7', completedDate: 1533047240645, solution: 'https://fcc-basic-node-and-express glitch me/', files: [] }, { id: '587d7fb2367417b2b2512bf6', completedDate: 1533046595396, solution: 'https://fcc-basic-node-and-express glitch me/', files: [] }, { id: '587d7fb2367417b2b2512bf5', completedDate: 1533046425247, solution: 'https://fcc-basic-node-and-express glitchme/',\n      files: []\n    },\n    {\n      id: '587d7fb1367417b2b2512bf4',\n      completedDate: 1533044706441,\n      solution: 'https://fcc-basic-node-and-express glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb1367417b2b2512bf3',\n      completedDate: 1533044029688,\n      solution: 'https://fcc-basic-node-and-express glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb1367417b2b2512bf2',\n      completedDate: 1533043449812,\n      solution: 'https://fcc-basic-node-and-express glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 29,
    "total_chunks": 83
  },
  {
    "id": "30cff4f8c77507c3d9c4479bc5c280b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'587d7fb2367417b2b2512bf8', completedDate: 1533047350131, solution: 'https://fcc-basic-node-and-express glitchme/', files: [] }, { id: '587d7fb2367417b2b2512bf7', completedDate: 1533047240645, solution: 'https://fcc-basic-node-and-express glitch me/', files: [] }, { id: '587d7fb2367417b2b2512bf6', completedDate: 1533046595396, solution: 'https://fcc-basic-node-and-express glitch me/', files: [] }, { id: '587d7fb2367417b2b2512bf5', completedDate: 1533046425247, solution: 'https://fcc-basic-node-and-express glitchme/', files: [] }, { id: '587d7fb1367417b2b2512bf4', completedDate: 1533044706441, solution: 'https://fcc-basic-node-and-express glitch me/', files: [] }, { id: '587d7fb1367417b2b2512bf3', completedDate: 1533044029688, solution: 'https://fcc-basic-node-and-express glitch me/', files: [] }, { id: '587d7fb1367417b2b2512bf2', completedDate: 1533043449812, solution: 'https://fcc-basic-node-and-express glitchme/',\n      files: []\n    },\n    {\n      id: '587d7fb1367417b2b2512bf1',\n      completedDate: 1533043268417,\n      solution: 'https://fcc-basic-node-and-express glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb0367417b2b2512bf0',\n      completedDate: 1533042013904,\n      solution: 'https://fcc-basic-node-and-express glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb0367417b2b2512bef',\n      completedDate: 1533041880166,\n      solution: 'https://fcc-basic-node-and-express glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 30,
    "total_chunks": 83
  },
  {
    "id": "b4a909fde3a2618594459641c91d7154",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'587d7fb2367417b2b2512bf5', completedDate: 1533046425247, solution: 'https://fcc-basic-node-and-express glitchme/', files: [] }, { id: '587d7fb1367417b2b2512bf4', completedDate: 1533044706441, solution: 'https://fcc-basic-node-and-express glitch me/', files: [] }, { id: '587d7fb1367417b2b2512bf3', completedDate: 1533044029688, solution: 'https://fcc-basic-node-and-express glitch me/', files: [] }, { id: '587d7fb1367417b2b2512bf2', completedDate: 1533043449812, solution: 'https://fcc-basic-node-and-express glitchme/', files: [] }, { id: '587d7fb1367417b2b2512bf1', completedDate: 1533043268417, solution: 'https://fcc-basic-node-and-express glitch me/', files: [] }, { id: '587d7fb0367417b2b2512bf0', completedDate: 1533042013904, solution: 'https://fcc-basic-node-and-express glitch me/', files: [] }, { id: '587d7fb0367417b2b2512bef', completedDate: 1533041880166, solution: 'https://fcc-basic-node-and-express glitchme/',\n      files: []\n    },\n    {\n      id: '587d7fb0367417b2b2512bee',\n      completedDate: 1533041574196,\n      solution: 'https://fcc-basic-node-and-express glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb0367417b2b2512bed',\n      completedDate: 1533041397592,\n      solution: 'https://fcc-basic-node-and-express glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb5367417b2b2512c04',\n      completedDate: 1533041014569,\n      solution: 'https://fcc-manage-npm-packages glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 31,
    "total_chunks": 83
  },
  {
    "id": "ee37964e577b7234764186d92f72f1b5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'587d7fb1367417b2b2512bf2', completedDate: 1533043449812, solution: 'https://fcc-basic-node-and-express glitchme/', files: [] }, { id: '587d7fb1367417b2b2512bf1', completedDate: 1533043268417, solution: 'https://fcc-basic-node-and-express glitch me/', files: [] }, { id: '587d7fb0367417b2b2512bf0', completedDate: 1533042013904, solution: 'https://fcc-basic-node-and-express glitch me/', files: [] }, { id: '587d7fb0367417b2b2512bef', completedDate: 1533041880166, solution: 'https://fcc-basic-node-and-express glitchme/', files: [] }, { id: '587d7fb0367417b2b2512bee', completedDate: 1533041574196, solution: 'https://fcc-basic-node-and-express glitch me/', files: [] }, { id: '587d7fb0367417b2b2512bed', completedDate: 1533041397592, solution: 'https://fcc-basic-node-and-express glitch me/', files: [] }, { id: '587d7fb5367417b2b2512c04', completedDate: 1533041014569, solution: 'https://fcc-manage-npm-packages glitchme/',\n      files: []\n    },\n    {\n      id: '587d7fb5367417b2b2512c03',\n      completedDate: 1533040923088,\n      solution: 'https://fcc-manage-npm-packages glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb5367417b2b2512c02',\n      completedDate: 1533040901236,\n      solution: 'https://fcc-manage-npm-packages glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb5367417b2b2512c01',\n      completedDate: 1533040847451,\n      solution: 'https://fcc-manage-npm-packages glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 32,
    "total_chunks": 83
  },
  {
    "id": "3c5fea23d1f8f8fc8625bc5b2bfd35f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'587d7fb0367417b2b2512bef', completedDate: 1533041880166, solution: 'https://fcc-basic-node-and-express glitchme/', files: [] }, { id: '587d7fb0367417b2b2512bee', completedDate: 1533041574196, solution: 'https://fcc-basic-node-and-express glitch me/', files: [] }, { id: '587d7fb0367417b2b2512bed', completedDate: 1533041397592, solution: 'https://fcc-basic-node-and-express glitch me/', files: [] }, { id: '587d7fb5367417b2b2512c04', completedDate: 1533041014569, solution: 'https://fcc-manage-npm-packages glitchme/', files: [] }, { id: '587d7fb5367417b2b2512c03', completedDate: 1533040923088, solution: 'https://fcc-manage-npm-packages glitch me/', files: [] }, { id: '587d7fb5367417b2b2512c02', completedDate: 1533040901236, solution: 'https://fcc-manage-npm-packages glitch me/', files: [] }, { id: '587d7fb5367417b2b2512c01', completedDate: 1533040847451, solution: 'https://fcc-manage-npm-packages glitchme/',\n      files: []\n    },\n    {\n      id: '587d7fb4367417b2b2512c00',\n      completedDate: 1533040209131,\n      solution: 'https://fcc-manage-npm-packages glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb4367417b2b2512bff',\n      completedDate: 1533040168518,\n      solution: 'https://fcc-manage-npm-packages glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb4367417b2b2512bfe',\n      completedDate: 1533040145047,\n      solution: 'https://fcc-manage-npm-packages glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 33,
    "total_chunks": 83
  },
  {
    "id": "91e565786b8d33465c71fbd0c3a5d1a0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'587d7fb5367417b2b2512c04', completedDate: 1533041014569, solution: 'https://fcc-manage-npm-packages glitchme/', files: [] }, { id: '587d7fb5367417b2b2512c03', completedDate: 1533040923088, solution: 'https://fcc-manage-npm-packages glitch me/', files: [] }, { id: '587d7fb5367417b2b2512c02', completedDate: 1533040901236, solution: 'https://fcc-manage-npm-packages glitch me/', files: [] }, { id: '587d7fb5367417b2b2512c01', completedDate: 1533040847451, solution: 'https://fcc-manage-npm-packages glitchme/', files: [] }, { id: '587d7fb4367417b2b2512c00', completedDate: 1533040209131, solution: 'https://fcc-manage-npm-packages glitch me/', files: [] }, { id: '587d7fb4367417b2b2512bff', completedDate: 1533040168518, solution: 'https://fcc-manage-npm-packages glitch me/', files: [] }, { id: '587d7fb4367417b2b2512bfe', completedDate: 1533040145047, solution: 'https://fcc-manage-npm-packages glitchme/',\n      files: []\n    },\n    {\n      id: '587d7fb4367417b2b2512bfd',\n      completedDate: 1533040107526,\n      solution: 'https://fcc-manage-npm-packages glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb3367417b2b2512bfc',\n      completedDate: 1533040049025,\n      solution: 'https://fcc-manage-npm-packages glitch me/',\n      files: []\n    },\n    {\n      id: '587d7fb3367417b2b2512bfb',\n      completedDate: 1533039944300,\n      solution: 'https://fcc-manage-npm-packages glitch",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 34,
    "total_chunks": 83
  },
  {
    "id": "adefc651faf1811060a61a75c611a59d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'587d7fb5367417b2b2512c01', completedDate: 1533040847451, solution: 'https://fcc-manage-npm-packages glitchme/', files: [] }, { id: '587d7fb4367417b2b2512c00', completedDate: 1533040209131, solution: 'https://fcc-manage-npm-packages glitch me/', files: [] }, { id: '587d7fb4367417b2b2512bff', completedDate: 1533040168518, solution: 'https://fcc-manage-npm-packages glitch me/', files: [] }, { id: '587d7fb4367417b2b2512bfe', completedDate: 1533040145047, solution: 'https://fcc-manage-npm-packages glitchme/', files: [] }, { id: '587d7fb4367417b2b2512bfd', completedDate: 1533040107526, solution: 'https://fcc-manage-npm-packages glitch me/', files: [] }, { id: '587d7fb3367417b2b2512bfc', completedDate: 1533040049025, solution: 'https://fcc-manage-npm-packages glitch me/', files: [] }, { id: '587d7fb3367417b2b2512bfb', completedDate: 1533039944300, solution: 'https://fcc-manage-npm-packages glitchme/',\n      files: []\n    },\n    {\n      id: '587d7dbc367417b2b2512bae',\n      completedDate: 1532961147572,\n      solution: 'https://fcc-drum-machine herokuapp",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 370,
    "chunk_index": 35,
    "total_chunks": 83
  },
  {
    "id": "41f0e6de0b54a8d8e2a8bea468006452",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'587d7fb4367417b2b2512c00', completedDate: 1533040209131, solution: 'https://fcc-manage-npm-packages glitch me/', files: [] }, { id: '587d7fb4367417b2b2512bff', completedDate: 1533040168518, solution: 'https://fcc-manage-npm-packages glitch me/', files: [] }, { id: '587d7fb4367417b2b2512bfe', completedDate: 1533040145047, solution: 'https://fcc-manage-npm-packages glitchme/', files: [] }, { id: '587d7fb4367417b2b2512bfd', completedDate: 1533040107526, solution: 'https://fcc-manage-npm-packages glitch me/', files: [] }, { id: '587d7fb3367417b2b2512bfc', completedDate: 1533040049025, solution: 'https://fcc-manage-npm-packages glitch me/', files: [] }, { id: '587d7fb3367417b2b2512bfb', completedDate: 1533039944300, solution: 'https://fcc-manage-npm-packages glitchme/', files: [] }, { id: '587d7dbc367417b2b2512bae', completedDate: 1532961147572, solution: 'https://fcc-drum-machine herokuappcom/',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403614a',\n      completedDate: 1532794780112,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036149',\n      completedDate: 1532794700815,\n      files: []\n    },\n    {\n      id: '587d7fa6367417b2b2512bc3',\n      completedDate: 1531937190203,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036148',\n      completedDate: 1531489006830,\n      files: []\n    },\n    {\n      id: '587d7b83367417b2b2512b37',\n      completedDate: 1531486599992,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036147',\n      completedDate: 1531482969362,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036146',\n      completedDate: 1531482790969,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036145',\n      completedDate: 1531481644030,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036144',\n      completedDate: 1531481355387,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036143',\n      completedDate: 1531453571962,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036142',\n      completedDate: 1531453316042,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036141',\n      completedDate: 1531445056603,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403615b',\n      completedDate: 1531443499567,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403615a',\n      completedDate: 1531433896792,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036159',\n      completedDate: 1531433516627,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036158',\n      completedDate: 1531433335857,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036157',\n      completedDate: 1531432774927,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036156',\n      completedDate: 1531432281650,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036155',\n      completedDate: 1531431898900,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036154',\n      completedDate: 1531429369572,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036153',\n      completedDate: 1531429194225,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036152',\n      completedDate: 1531429071050,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036151',\n      completedDate: 1531428817943,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036150',\n      completedDate: 1531428663065,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403614c',\n      completedDate: 1531428487038,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403614b',\n      completedDate: 1531428433090,\n      files: []\n    },\n    {\n      id: '5900f3701000cf542c50fe83',\n      completedDate: 1530277993244,\n      files: []\n    },\n    {\n      id: '5900f36f1000cf542c50fe82',\n      completedDate: 1530277838465,\n      files: []\n    },\n    {\n      id: '5900f36e1000cf542c50fe81',\n      completedDate: 1530222499479,\n      files: []\n    },\n    {\n      id: '5900f36e1000cf542c50fe80',\n      completedDate: 1530221644777,\n      files: []\n    },\n    {\n      id: '594810f028c0303b75339acb',\n      completedDate: 1530015953369,\n      files: []\n    },\n    {\n      id: '587d78af367417b2b2512b03',\n      completedDate: 1529938009424,\n      solution: 'https://codepen",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 1517,
    "chunk_index": 36,
    "total_chunks": 83
  },
  {
    "id": "debe008c6631e5fb740682b7af1c46fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "completedDate: 1531428817943, files: [] }, { id: '5a24c314108439a4d4036150', completedDate: 1531428663065, files: [] }, { id: '5a24c314108439a4d403614c', completedDate: 1531428487038, files: [] }, { id: '5a24c314108439a4d403614b', completedDate: 1531428433090, files: [] }, { id: '5900f3701000cf542c50fe83', completedDate: 1530277993244, files: [] }, { id: '5900f36f1000cf542c50fe82', completedDate: 1530277838465, files: [] }, { id: '5900f36e1000cf542c50fe81', completedDate: 1530222499479, files: [] }, { id: '5900f36e1000cf542c50fe80', completedDate: 1530221644777, files: [] }, { id: '594810f028c0303b75339acb', completedDate: 1530015953369, files: [] }, { id: '587d78af367417b2b2512b03', completedDate: 1529938009424, solution: 'https://codepenio/moT01/pen/LrrjGz",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 314,
    "chunk_index": 37,
    "total_chunks": 83
  },
  {
    "id": "9a87cb7147898a4df8c044f881538cbc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "completedDate: 1531428817943, files: [] }, { id: '5a24c314108439a4d4036150', completedDate: 1531428663065, files: [] }, { id: '5a24c314108439a4d403614c', completedDate: 1531428487038, files: [] }, { id: '5a24c314108439a4d403614b', completedDate: 1531428433090, files: [] }, { id: '5900f3701000cf542c50fe83', completedDate: 1530277993244, files: [] }, { id: '5900f36f1000cf542c50fe82', completedDate: 1530277838465, files: [] }, { id: '5900f36e1000cf542c50fe81', completedDate: 1530222499479, files: [] }, { id: '5900f36e1000cf542c50fe80', completedDate: 1530221644777, files: [] }, { id: '594810f028c0303b75339acb', completedDate: 1530015953369, files: [] }, { id: '587d78af367417b2b2512b03', completedDate: 1529938009424, solution: 'https://codepenio/moT01/pen/LrrjGzeditors=1010',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: '5a9d7286424fe3d0e10cad13',\n      completedDate: 1528719842749,\n      files: []\n    },\n    {\n      id: '587d8250367417b2b2512c5f',\n      completedDate: 1529584582909,\n      files: []\n    },\n    {\n      id: '587d8250367417b2b2512c5e',\n      completedDate: 1529584233498,\n      files: []\n    },\n    {\n      id: '587d8253367417b2b2512c6a',\n      completedDate: 1529584147462,\n      files: []\n    },\n    {\n      id: '587d7fa6367417b2b2512bc2',\n      completedDate: 1529186003814,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403614f',\n      completedDate: 1529179243536,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403614e',\n      completedDate: 1528981776099,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403614d',\n      completedDate: 1528981744994,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403618d',\n      completedDate: 1528950851660,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403618c',\n      completedDate: 1528950719262,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403618b',\n      completedDate: 1528950396682,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403618a',\n      completedDate: 1528950304924,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036189',\n      completedDate: 1528949805386,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036188',\n      completedDate: 1528949697883,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036187',\n      completedDate: 1528949067606,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036185',\n      completedDate: 1528948451001,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036184',\n      completedDate: 1528946998407,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036183',\n      completedDate: 1528946875698,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036182',\n      completedDate: 1528946566042,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036181',\n      completedDate: 1528946437132,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036180',\n      completedDate: 1528946299272,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403617f',\n      completedDate: 1528946192923,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403617e',\n      completedDate: 1528945856282,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403617d',\n      completedDate: 1528945678448,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403617c',\n      completedDate: 1528945645295,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403617b',\n      completedDate: 1528945579541,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403617a',\n      completedDate: 1528945447719,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036179',\n      completedDate: 1528945385287,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036178',\n      completedDate: 1528945197650,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036177',\n      completedDate: 1528944290718,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036176',\n      completedDate: 1528943870093,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036174',\n      completedDate: 1528943740058,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036173',\n      completedDate: 1528943671264,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036172',\n      completedDate: 1528943603260,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036171',\n      completedDate: 1528943535660,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036170',\n      completedDate: 1528943507508,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403616f',\n      completedDate: 1528943479564,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403616e',\n      completedDate: 1528943277939,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403616d',\n      completedDate: 1528943091046,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403616c',\n      completedDate: 1528942897945,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403616b',\n      completedDate: 1528942802253,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d403616a',\n      completedDate: 1528942758495,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036169',\n      completedDate: 1528942646063,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036168',\n      completedDate: 1528937140246,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036167',\n      completedDate: 1528936992425,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036166',\n      completedDate: 1528936887008,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036165',\n      completedDate: 1528936818982,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036164',\n      completedDate: 1528936765216,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036163',\n      completedDate: 1528936729634,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036162',\n      completedDate: 1528936661343,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036161',\n      completedDate: 1528936547644,\n      files: []\n    },\n    {\n      id: '5a24c314108439a4d4036160',\n      completedDate: 1528936507205,\n      files: []\n    },\n    {\n      id: '5a24bbe0dba28a8d3cbd4c5f',\n      completedDate: 1528936468035,\n      files: []\n    },\n    {\n      id: '5a24bbe0dba28a8d3cbd4c5e',\n      completedDate: 1528936381238,\n      files: []\n    },\n    {\n      id: '587d7fa5367417b2b2512bbd',\n      completedDate: 1528934178753,\n      files: []\n    },\n    {\n      id: '587d7dbf367417b2b2512bbc',\n      completedDate: 1528934096231,\n      files: []\n    },\n    {\n      id: '587d7dbf367417b2b2512bbb',\n      completedDate: 1528934051468,\n      files: []\n    },\n    {\n      id: '587d7dbf367417b2b2512bba',\n      completedDate: 1528933852430,\n      files: []\n    },\n    {\n      id: '587d7dbe367417b2b2512bb9',\n      completedDate: 1528933741473,\n      files: []\n    },\n    {\n      id: '587d7dbe367417b2b2512bb8',\n      completedDate: 1528933566151,\n      files: []\n    },\n    {\n      id: '587d7dbd367417b2b2512bb6',\n      completedDate: 1528933360001,\n      files: []\n    },\n    {\n      id: '587d7dbd367417b2b2512bb5',\n      completedDate: 1528933151245,\n      files: []\n    },\n    {\n      id: '587d7dbd367417b2b2512bb4',\n      completedDate: 1528933108643,\n      files: []\n    },\n    {\n      id: '587d7dab367417b2b2512b70',\n      completedDate: 1528930450509,\n      files: []\n    },\n    {\n      id: '587d7dab367417b2b2512b6f',\n      completedDate: 1528930224869,\n      files: []\n    },\n    {\n      id: '587d7dab367417b2b2512b6e',\n      completedDate: 1528929785830,\n      files: []\n    },\n    {\n      id: '587d7dab367417b2b2512b6d',\n      completedDate: 1528929659099,\n      files: []\n    },\n    {\n      id: '587d7daa367417b2b2512b6c',\n      completedDate: 1528927786126,\n      files: []\n    },\n    {\n      id: '587d7daa367417b2b2512b6b',\n      completedDate: 1528927735717,\n      files: []\n    },\n    {\n      id: '587d7da9367417b2b2512b6a',\n      completedDate: 1528927426415,\n      files: []\n    },\n    {\n      id: '587d7da9367417b2b2512b69',\n      completedDate: 1528927327998,\n      files: []\n    },\n    {\n      id: '587d7da9367417b2b2512b68',\n      completedDate: 1528927215860,\n      files: []\n    },\n    {\n      id: '587d7da9367417b2b2512b67',\n      completedDate: 1528926108930,\n      files: []\n    },\n    {\n      id: '587d7da9367417b2b2512b66',\n      completedDate: 1528926045666,\n      files: []\n    },\n    {\n      id: '9d7123c8c441eeafaeb5bdef',\n      completedDate: 1528925941088,\n      files: []\n    },\n    {\n      id: '587d7b90367417b2b2512b65',\n      completedDate: 1528925068599,\n      files: []\n    },\n    {\n      id: '587d7b8f367417b2b2512b64',\n      completedDate: 1528924576412,\n      files: []\n    },\n    {\n      id: '587d7b8f367417b2b2512b63',\n      completedDate: 1528917162952,\n      files: []\n    },\n    {\n      id: '587d7b8f367417b2b2512b62',\n      completedDate: 1528916520035,\n      files: []\n    },\n    {\n      id: '587d7b8f367417b2b2512b61',\n      completedDate: 1528916239317,\n      files: []\n    },\n    {\n      id: '587d7b8f367417b2b2512b60',\n      completedDate: 1528909518505,\n      files: []\n    },\n    {\n      id: '587d7b8e367417b2b2512b5f',\n      completedDate: 1528909162568,\n      files: []\n    },\n    {\n      id: '587d7b8e367417b2b2512b5e',\n      completedDate: 1528909113205,\n      files: []\n    },\n    {\n      id: '587d7b8e367417b2b2512b5d',\n      completedDate: 1528908970552,\n      files: []\n    },\n    {\n      id: '587d7b8e367417b2b2512b5c',\n      completedDate: 1528908568106,\n      files: []\n    },\n    {\n      id: '587d7b8d367417b2b2512b5b',\n      completedDate: 1528908421803,\n      files: []\n    },\n    {\n      id: '587d7db2367417b2b2512b8c',\n      completedDate: 1528908345735,\n      files: []\n    },\n    {\n      id: '587d7db2367417b2b2512b8b',\n      completedDate: 1528908123161,\n      files: []\n    },\n    {\n      id: '587d7db2367417b2b2512b8a',\n      completedDate: 1528908033352,\n      files: []\n    },\n    {\n      id: '587d7db2367417b2b2512b89',\n      completedDate: 1528907854219,\n      files: []\n    },\n    {\n      id: '587d7db1367417b2b2512b88',\n      completedDate: 1528907672414,\n      files: []\n    },\n    {\n      id: '587d7db1367417b2b2512b87',\n      completedDate: 1528907527117,\n      files: []\n    },\n    {\n      id: '587d7db1367417b2b2512b86',\n      completedDate: 1528905869367,\n      files: []\n    },\n    {\n      id: '587d7db1367417b2b2512b85',\n      completedDate: 1528905798962,\n      files: []\n    },\n    {\n      id: '587d7db0367417b2b2512b84',\n      completedDate: 1528905563215,\n      files: []\n    },\n    {\n      id: '587d7db0367417b2b2512b83',\n      completedDate: 1528905463958,\n      files: []\n    },\n    {\n      id: '587d7db0367417b2b2512b82',\n      completedDate: 1528905321583,\n      files: []\n    },\n    {\n      id: '587d7db0367417b2b2512b81',\n      completedDate: 1528905197504,\n      files: []\n    },\n    {\n      id: '587d7daf367417b2b2512b80',\n      completedDate: 1528905158628,\n      files: []\n    },\n    {\n      id: '587d7daf367417b2b2512b7f',\n      completedDate: 1528905128321,\n      files: []\n    },\n    {\n      id: '587d7daf367417b2b2512b7e',\n      completedDate: 1528905019142,\n      files: []\n    },\n    {\n      id: '587d7daf367417b2b2512b7d',\n      completedDate: 1528904850131,\n      files: []\n    },\n    {\n      id: '587d7dae367417b2b2512b7b',\n      completedDate: 1528904663799,\n      files: []\n    },\n    {\n      id: '587d7dae367417b2b2512b7a',\n      completedDate: 1528904554118,\n      files: []\n    },\n    {\n      id: '587d7dae367417b2b2512b79',\n      completedDate: 1528904459368,\n      files: []\n    },\n    {\n      id: '587d7dad367417b2b2512b78',\n      completedDate: 1528904402413,\n      files: []\n    },\n    {\n      id: '587d7dad367417b2b2512b77',\n      completedDate: 1528904383963,\n      files: []\n    },\n    {\n      id: '587d7dad367417b2b2512b76',\n      completedDate: 1528904346017,\n      files: []\n    },\n    {\n      id: '587d7dad367417b2b2512b75',\n      completedDate: 1528904316135,\n      files: []\n    },\n    {\n      id: '587d7dac367417b2b2512b74',\n      completedDate: 1528904261166,\n      files: []\n    },\n    {\n      id: '587d7dac367417b2b2512b73',\n      completedDate: 1528904235855,\n      files: []\n    },\n    {\n      id: '579e2a2c335b9d72dd32e05c',\n      completedDate: 1528904005293,\n      files: []\n    },\n    {\n      id: '587d7b7d367417b2b2512b1f',\n      completedDate: 1528902841678,\n      files: []\n    },\n    {\n      id: '587d7b7d367417b2b2512b1e',\n      completedDate: 1528902745590,\n      files: []\n    },\n    {\n      id: '587d7b7d367417b2b2512b1d',\n      completedDate: 1528902722538,\n      files: []\n    },\n    {\n      id: '587d7b7d367417b2b2512b1c',\n      completedDate: 1528902424707,\n      files: []\n    },\n    {\n      id: '587d7b7c367417b2b2512b1b',\n      completedDate: 1528902294822,\n      files: []\n    },\n    {\n      id: '587d7b7c367417b2b2512b1a',\n      completedDate: 1528902266174,\n      files: []\n    },\n    {\n      id: '587d7b7c367417b2b2512b19',\n      completedDate: 1528902204888,\n      files: []\n    },\n    {\n      id: '587d7b7c367417b2b2512b18',\n      completedDate: 1528902177052,\n      files: []\n    },\n    {\n      id: '587d7b7b367417b2b2512b16',\n      completedDate: 1528901096407,\n      files: []\n    },\n    {\n      id: '587d7b7b367417b2b2512b15',\n      completedDate: 1528900938052,\n      files: []\n    },\n    {\n      id: '587d7b7b367417b2b2512b14',\n      completedDate: 1528900292192,\n      files: []\n    },\n    {\n      id: '587d7b7b367417b2b2512b17',\n      completedDate: 1528900239045,\n      files: []\n    },\n    {\n      id: '587d7b7b367417b2b2512b13',\n      completedDate: 1528900119504,\n      files: []\n    },\n    {\n      id: '587d7b7a367417b2b2512b12',\n      completedDate: 1528900024682,\n      files: []\n    },\n    {\n      id: '587d78b3367417b2b2512b11',\n      completedDate: 1528899739768,\n      files: []\n    },\n    {\n      id: '587d7b86367417b2b2512b3d',\n      completedDate: 1528899440260,\n      files: []\n    },\n    {\n      id: '587d7b86367417b2b2512b3c',\n      completedDate: 1528899295294,\n      files: []\n    },\n    {\n      id: '587d7b86367417b2b2512b3b',\n      completedDate: 1528899043297,\n      files: []\n    },\n    {\n      id: '587d7b85367417b2b2512b3a',\n      completedDate: 1528898859706,\n      files: []\n    },\n    {\n      id: '587d7b85367417b2b2512b39',\n      completedDate: 1528898815395,\n      files: []\n    },\n    {\n      id: '587d7b85367417b2b2512b38',\n      completedDate: 1528898783470,\n      files: []\n    },\n    {\n      id: '587d7b84367417b2b2512b37',\n      completedDate: 1528898766004,\n      files: []\n    },\n    {\n      id: '587d7b84367417b2b2512b36',\n      completedDate: 1528898255471,\n      files: []\n    },\n    {\n      id: '587d7b84367417b2b2512b35',\n      completedDate: 1528897930802,\n      files: []\n    },\n    {\n      id: '587d7b84367417b2b2512b34',\n      completedDate: 1528897909366,\n      files: []\n    },\n    {\n      id: '587d7b83367417b2b2512b33',\n      completedDate: 1528897491942,\n      files: []\n    },\n    {\n      id: '587d7dbb367417b2b2512bac',\n      completedDate: 1528858212055,\n      files: []\n    },\n    {\n      id: '587d7dbb367417b2b2512bab',\n      completedDate: 1528857340061,\n      files: []\n    },\n    {\n      id: '587d7dbb367417b2b2512baa',\n      completedDate: 1528857023208,\n      files: []\n    },\n    {\n      id: '587d7dba367417b2b2512ba9',\n      completedDate: 1528845356403,\n      files: []\n    },\n    {\n      id: '587d7dba367417b2b2512ba8',\n      completedDate: 1528843914026,\n      files: []\n    },\n    {\n      id: '587d7db9367417b2b2512ba7',\n      completedDate: 1528843852819,\n      files: []\n    },\n    {\n      id: '587d7db9367417b2b2512ba6',\n      completedDate: 1528843812163,\n      files: []\n    },\n    {\n      id: '587d7db9367417b2b2512ba5',\n      completedDate: 1528843718606,\n      files: []\n    },\n    {\n      id: '587d7db9367417b2b2512ba4',\n      completedDate: 1528842968052,\n      files: []\n    },\n    {\n      id: '587d7db8367417b2b2512ba3',\n      completedDate: 1528842950539,\n      files: []\n    },\n    {\n      id: '587d7db8367417b2b2512ba2',\n      completedDate: 1528842903133,\n      files: []\n    },\n    {\n      id: '587d7db8367417b2b2512ba1',\n      completedDate: 1528842665151,\n      files: []\n    },\n    {\n      id: '5d712346c441eddfaeb5bdef',\n      completedDate: 1528842647554,\n      files: []\n    },\n    {\n      id: '587d7db8367417b2b2512ba0',\n      completedDate: 1528842629216,\n      files: []\n    },\n    {\n      id: '587d7db7367417b2b2512b9f',\n      completedDate: 1528842603772,\n      files: []\n    },\n    {\n      id: '587d7db7367417b2b2512b9e',\n      completedDate: 1528842544267,\n      files: []\n    },\n    {\n      id: '587d7db7367417b2b2512b9d',\n      completedDate: 1528842515275,\n      files: []\n    },\n    {\n      id: '587d7db7367417b2b2512b9c',\n      completedDate: 1528840984420,\n      files: []\n    },\n    {\n      id: '587d7db6367417b2b2512b9b',\n      completedDate: 1528840909886,\n      files: []\n    },\n    {\n      id: '587d7db6367417b2b2512b9a',\n      completedDate: 1528840649575,\n      files: []\n    },\n    {\n      id: '587d7db6367417b2b2512b99',\n      completedDate: 1528839703992,\n      files: []\n    },\n    {\n      id: '587d7db6367417b2b2512b98',\n      completedDate: 1528839624615,\n      files: []\n    },\n    {\n      id: '587d7db5367417b2b2512b97',\n      completedDate: 1528839545835,\n      files: []\n    },\n    {\n      id: '587d7db5367417b2b2512b96',\n      completedDate: 1528839487667,\n      files: []\n    },\n    {\n      id: '587d7db5367417b2b2512b95',\n      completedDate: 1528836793048,\n      files: []\n    },\n    {\n      id: '587d7db5367417b2b2512b94',\n      completedDate: 1528836647039,\n      files: []\n    },\n    {\n      id: '587d7db4367417b2b2512b93',\n      completedDate: 1528836578373,\n      files: []\n    },\n    {\n      id: '587d7db4367417b2b2512b92',\n      completedDate: 1528836503102,\n      files: []\n    },\n    {\n      id: '587d7db4367417b2b2512b91',\n      completedDate: 1528836411536,\n      files: []\n    },\n    {\n      id: '587d7db4367417b2b2512b90',\n      completedDate: 1528836347810,\n      files: []\n    },\n    {\n      id: '587d78b2367417b2b2512b10',\n      completedDate: 1528745824285,\n      files: []\n    },\n    {\n      id: '587d78b2367417b2b2512b0f',\n      completedDate: 1528742744006,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78b2367417b2b2512b0e',\n      completedDate: 1528742701214,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '5a661e0f1068aca922b3ef17',\n      completedDate: 1528742156096,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b7e367417b2b2512b20',\n      completedDate: 1528742135455,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b8d367417b2b2512b59',\n      completedDate: 1528742085698,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b8c367417b2b2512b54',\n      completedDate: 1528734640861,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b8b367417b2b2512b53',\n      completedDate: 1528733256806,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b8b367417b2b2512b50',\n      completedDate: 1528732942662,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b8a367417b2b2512b4f',\n      completedDate: 1528732804161,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b8a367417b2b2512b4e',\n      completedDate: 1528732349407,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b8a367417b2b2512b4d',\n      completedDate: 1528732036101,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b8a367417b2b2512b4c',\n      completedDate: 1528731931778,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b89367417b2b2512b4b',\n      completedDate: 1528729490152,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b89367417b2b2512b4a',\n      completedDate: 1528729413355,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b89367417b2b2512b48',\n      completedDate: 1528729040300,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b88367417b2b2512b47',\n      completedDate: 1528728452978,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b88367417b2b2512b46',\n      completedDate: 1528727990105,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b88367417b2b2512b45',\n      completedDate: 1528727957080,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b88367417b2b2512b44',\n      completedDate: 1528727575858,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b87367417b2b2512b43',\n      completedDate: 1528727550058,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '598f48a36c8c40764b4e52b3',\n      completedDate: 1528727417343,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b87367417b2b2512b42',\n      completedDate: 1528727376633,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b87367417b2b2512b41',\n      completedDate: 1528727272659,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b87367417b2b2512b40',\n      completedDate: 1528727249380,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b87367417b2b2512b3f',\n      completedDate: 1528727222148,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b7e367417b2b2512b21',\n      completedDate: 1528727058038,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b7e367417b2b2512b24',\n      completedDate: 1528726960708,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b7e367417b2b2512b22',\n      completedDate: 1528726712992,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7b7e367417b2b2512b23',\n      completedDate: 1528726687584,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '5a2efd662fb457916e1fe604',\n      completedDate: 1528726654446,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '599a789b454f2bbd91a3ff4d',\n      completedDate: 1528726636685,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '598e8944f009e646fc236146',\n      completedDate: 1528726619417,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '5a94fe8569fb03452672e464',\n      completedDate: 1528726554461,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '5a94fe7769fb03452672e463',\n      completedDate: 1528726497738,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '5a94fe6269fb03452672e462',\n      completedDate: 1528726457422,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '5a94fe5469fb03452672e461',\n      completedDate: 1528726444838,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '5a94fe4469fb03452672e460',\n      completedDate: 1528726409080,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '5a94fe3669fb03452672e45f',\n      completedDate: 1528726361621,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '5a94fe2669fb03452672e45e',\n      completedDate: 1528726329537,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78af367417b2b2512b00',\n      completedDate: 1528725885250,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78ae367417b2b2512aff',\n      completedDate: 1528725862565,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78ae367417b2b2512afe',\n      completedDate: 1528725844043,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78ae367417b2b2512afd',\n      completedDate: 1528725812152,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78ae367417b2b2512afc',\n      completedDate: 1528725789525,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78ad367417b2b2512afb',\n      completedDate: 1528725762069,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78ad367417b2b2512afa',\n      completedDate: 1528725687987,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78ad367417b2b2512af9',\n      completedDate: 1528725643242,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78ad367417b2b2512af8',\n      completedDate: 1528725613909,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78ac367417b2b2512af7',\n      completedDate: 1528725556408,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78ac367417b2b2512af6',\n      completedDate: 1528725501244,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78ac367417b2b2512af5',\n      completedDate: 1528725475416,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78ac367417b2b2512af4',\n      completedDate: 1528725460248,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78ab367417b2b2512af3',\n      completedDate: 1528725430078,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78ab367417b2b2512af2',\n      completedDate: 1528725404445,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78ab367417b2b2512af1',\n      completedDate: 1528725386000,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78ab367417b2b2512af0',\n      completedDate: 1528725349292,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78b1367417b2b2512b0c',\n      completedDate: 1528725216220,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78b1367417b2b2512b0a',\n      completedDate: 1528725059356,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78b1367417b2b2512b09',\n      completedDate: 1528724874946,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78b0367417b2b2512b08',\n      completedDate: 1528724820768,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7790367417b2b2512ab1',\n      completedDate: 1528724720753,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7790367417b2b2512ab0',\n      completedDate: 1528724642030,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7790367417b2b2512aaf',\n      completedDate: 1528724605739,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d778f367417b2b2512aae',\n      completedDate: 1528724413398,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d778f367417b2b2512aad',\n      completedDate: 1528724356893,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d778f367417b2b2512aac',\n      completedDate: 1528724320641,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d778e367417b2b2512aab',\n      completedDate: 1528724190931,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d778d367417b2b2512aaa',\n      completedDate: 1528724078184,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d778c367417b2b2512aa9',\n      completedDate: 1528723974611,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d778b367417b2b2512aa8',\n      completedDate: 1528723909826,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d778b367417b2b2512aa7',\n      completedDate: 1528723549159,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d778a367417b2b2512aa6',\n      completedDate: 1528723491384,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d778a367417b2b2512aa5',\n      completedDate: 1528723445304,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7789367417b2b2512aa4',\n      completedDate: 1528723391089,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7788367417b2b2512aa3',\n      completedDate: 1528723213266,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7788367417b2b2512aa2',\n      completedDate: 1528723191539,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7787367417b2b2512aa1',\n      completedDate: 1528723128518,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d774e367417b2b2512aa0',\n      completedDate: 1528723095947,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d774e367417b2b2512a9f',\n      completedDate: 1528723074570,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d774d367417b2b2512a9e',\n      completedDate: 1528723032367,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d774c367417b2b2512a9d',\n      completedDate: 1528723016297,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d774c367417b2b2512a9c',\n      completedDate: 1528722884705,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a9367417b2b2512ae9',\n      completedDate: 1528722189711,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a9367417b2b2512aea',\n      completedDate: 1528722142299,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a9367417b2b2512ae8',\n      completedDate: 1528722053070,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a8367417b2b2512ae7',\n      completedDate: 1528722032467,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a8367417b2b2512ae6',\n      completedDate: 1528721995155,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a8367417b2b2512ae5',\n      completedDate: 1528721976152,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a8367417b2b2512ae4',\n      completedDate: 1528721951775,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a8367417b2b2512ae3',\n      completedDate: 1528721899118,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a7367417b2b2512ae2',\n      completedDate: 1528721881145,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a7367417b2b2512ae1',\n      completedDate: 1528721845732,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '58a7a6ebf9a6318348e2d5aa',\n      completedDate: 1528721796290,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a7367417b2b2512ae0',\n      completedDate: 1528721775709,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a7367417b2b2512adf',\n      completedDate: 1528721631734,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a6367417b2b2512ade',\n      completedDate: 1528721516690,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a6367417b2b2512add',\n      completedDate: 1528721308692,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a6367417b2b2512adc',\n      completedDate: 1528721257100,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a6367417b2b2512adb',\n      completedDate: 1528721238402,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a5367417b2b2512ada',\n      completedDate: 1528721220923,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a5367417b2b2512ad9',\n      completedDate: 1528721198021,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a5367417b2b2512ad8',\n      completedDate: 1528721176164,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a5367417b2b2512ad7',\n      completedDate: 1528721108378,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a5367417b2b2512ad6',\n      completedDate: 1528721076608,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a4367417b2b2512ad5',\n      completedDate: 1528721029351,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a4367417b2b2512ad4',\n      completedDate: 1528720989595,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a4367417b2b2512ad3',\n      completedDate: 1528720962932,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a4367417b2b2512ad2',\n      completedDate: 1528720915835,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a3367417b2b2512ad1',\n      completedDate: 1528720843738,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a3367417b2b2512ad0',\n      completedDate: 1528720815216,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a3367417b2b2512acf',\n      completedDate: 1528720802544,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78a3367417b2b2512ace',\n      completedDate: 1528720790009,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781e367417b2b2512acc',\n      completedDate: 1528720770993,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781e367417b2b2512acb',\n      completedDate: 1528720747104,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781e367417b2b2512aca',\n      completedDate: 1528720721929,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781e367417b2b2512ac9',\n      completedDate: 1528720703105,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781d367417b2b2512ac8',\n      completedDate: 1528720670005,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781d367417b2b2512ac5',\n      completedDate: 1528720645332,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781c367417b2b2512ac4',\n      completedDate: 1528720634778,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781c367417b2b2512ac3',\n      completedDate: 1528720625208,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781c367417b2b2512ac2',\n      completedDate: 1528720592433,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781c367417b2b2512ac0',\n      completedDate: 1528720543076,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781c367417b2b2512abf',\n      completedDate: 1528720526234,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781b367417b2b2512abe',\n      completedDate: 1528720510632,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781b367417b2b2512abd',\n      completedDate: 1528720467749,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781b367417b2b2512abc',\n      completedDate: 1528720453878,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781b367417b2b2512abb',\n      completedDate: 1528720413342,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781b367417b2b2512aba',\n      completedDate: 1528720403159,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781a367417b2b2512ab9',\n      completedDate: 1528720194712,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781a367417b2b2512ab8',\n      completedDate: 1528720178074,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d781a367417b2b2512ab7',\n      completedDate: 1528720151746,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7791367417b2b2512ab5',\n      completedDate: 1528720134400,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7791367417b2b2512ab4',\n      completedDate: 1528720124159,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d7791367417b2b2512ab3',\n      completedDate: 1528720108175,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '5a9d72ad424fe3d0e10cad16',\n      completedDate: 1528720042777,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '5a9d72a1424fe3d0e10cad15',\n      completedDate: 1528719982834,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '5a9d7295424fe3d0e10cad14',\n      completedDate: 1528719930392,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '5a9d727a424fe3d0e10cad12',\n      completedDate: 1528719809651,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '5a9d726c424fe3d0e10cad11',\n      completedDate: 1528719689520,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '5a9d725e424fe3d0e10cad10',\n      completedDate: 1528719579787,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad82fee1322bd9aedf08721',\n      completedDate: 1528719519470,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '58c383d33e2e3259241f3076',\n      completedDate: 1528719468043,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78aa367417b2b2512aec',\n      completedDate: 1528719392137,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '587d78aa367417b2b2512aed',\n      completedDate: 1528719352474,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad88fee1348bd9aedf08816',\n      completedDate: 1528685796989,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aecf08801',\n      completedDate: 1528684512716,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244dd',\n      completedDate: 1475258032598,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '660add10cb82ac38a17513be',\n      completedDate: 1515450994243,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244de',\n      completedDate: 1475258201433,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08801',\n      completedDate: 1475094786951,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08804',\n      completedDate: 1475094833566,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08833',\n      completedDate: 1475094870641,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fed1348bd9aedf08833',\n      completedDate: 1475094890483,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08803',\n      completedDate: 1475094925451,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08805',\n      completedDate: 1475095000824,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aecf08806',\n      completedDate: 1475095068584,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aefe08806',\n      completedDate: 1475095126954,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08806',\n      completedDate: 1475095220729,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aede08807',\n      completedDate: 1475095251313,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08807',\n      completedDate: 1475095315463,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08808',\n      completedDate: 1475095349372,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08812',\n      completedDate: 1475095439395,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9acdf08812',\n      completedDate: 1475095537795,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9bedf08813',\n      completedDate: 1475095645490,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08814',\n      completedDate: 1475095674621,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08815',\n      completedDate: 1475095702447,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08816',\n      completedDate: 1475095780920,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aede08817',\n      completedDate: 1475095851150,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08817',\n      completedDate: 1475095890671,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08820',\n      completedDate: 1475095950614,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08827',\n      completedDate: 1475096026221,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08828',\n      completedDate: 1475096146254,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08829',\n      completedDate: 1475096175545,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08830',\n      completedDate: 1475096220710,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aede08830',\n      completedDate: 1475096258812,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedd08830',\n      completedDate: 1475096412586,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08834',\n      completedDate: 1475096574019,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08835',\n      completedDate: 1475096736280,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedd08835',\n      completedDate: 1475096767113,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aede08835',\n      completedDate: 1475096824274,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fed1348bd9aede07836',\n      completedDate: 1475096878286,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87eee1348bd9aede07836',\n      completedDate: 1475096925946,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87dee1348bd9aede07836',\n      completedDate: 1475096968597,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad88fee1348bd9aedf08825',\n      completedDate: 1475097030436,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08822',\n      completedDate: 1475097048908,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08823',\n      completedDate: 1475097079567,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08824',\n      completedDate: 1475097122623,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1248bd9aedf08824',\n      completedDate: 1475097163693,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08826',\n      completedDate: 1475097197806,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9afdf08726',\n      completedDate: 1475097220823,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08736',\n      completedDate: 1475097245742,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08746',\n      completedDate: 1475097305636,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08756',\n      completedDate: 1475097367679,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf04756',\n      completedDate: 1475097441406,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd8aedf06756',\n      completedDate: 1475097504209,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf06756',\n      completedDate: 1475097605201,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf07756',\n      completedDate: 1475097675710,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08726',\n      completedDate: 1475102179284,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08721',\n      completedDate: 1475102344318,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08719',\n      completedDate: 1475102399325,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aede08718',\n      completedDate: 1475102447915,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad82fee1348bd9aedf08721',\n      completedDate: 1475102528619,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9acde08712',\n      completedDate: 1475102639748,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9acde08812',\n      completedDate: 1475102771357,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd8acde08812',\n      completedDate: 1475102802266,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348cd8acdf08812',\n      completedDate: 1475102852811,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348cd8acef08812',\n      completedDate: 1475102997685,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348cd8acef08811',\n      completedDate: 1475103090510,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348cd8acef08813',\n      completedDate: 1475103173521,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348ce8acef08814',\n      completedDate: 1475103241775,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad88fee1348ce8acef08815',\n      completedDate: 1475103767585,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1347bd9aedf08845',\n      completedDate: 1475103941867,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08845',\n      completedDate: 1475104193824,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '560add10cb82ac38a17513be',\n      completedDate: 1475104385115,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: '560add37cb82ac38a17513bf',\n      completedDate: 1475105708678,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: '560add56cb82ac38a17513c0',\n      completedDate: 1475105917537,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: '560add71cb82ac38a17513c2',\n      completedDate: 1475105957457,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: '560adf65cb82ac38a17513c2',\n      completedDate: 1475106219178,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: '560add8ccb82ac38a17513c4',\n      completedDate: 1475106445148,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aede08845',\n      completedDate: 1475107618308,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedd08845',\n      completedDate: 1475107867871,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedc08845',\n      completedDate: 1475108019303,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedb08845',\n      completedDate: 1475108135358,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aeda08845',\n      completedDate: 1475108802536,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aed908845',\n      completedDate: 1475108989462,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aec908845',\n      completedDate: 1475109094598,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aec908846',\n      completedDate: 1475109155433,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aec908746',\n      completedDate: 1475109179986,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9bec908846',\n      completedDate: 1475109200468,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aec908847',\n      completedDate: 1475109232567,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aec908848',\n      completedDate: 1475109272839,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aec908849',\n      completedDate: 1475109317110,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aec908850',\n      completedDate: 1475109360603,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aec908852',\n      completedDate: 1475109405858,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aec908853',\n      completedDate: 1475109460239,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aec908854',\n      completedDate: 1475109523665,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aec908855',\n      completedDate: 1475109597253,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aec908856',\n      completedDate: 1475109699779,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aec908857',\n      completedDate: 1475109754181,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '573c96eac9a6be092d7830c1',\n      completedDate: 1475120191143,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: '560ade65cb82ac38a17513c2',\n      completedDate: 1475120213223,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: '570add8ccb82ac38a17513c3',\n      completedDate: 1475120317675,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: '560add8ccb81ac38a17513c4',\n      completedDate: 1475120349142,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9acdd08826',\n      completedDate: 1475120453111,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9bedc08826',\n      completedDate: 1475120559183,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedc08826',\n      completedDate: 1475120631184,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aeda08826',\n      completedDate: 1475120755306,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aeda08726',\n      completedDate: 1475120779449,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aed908626',\n      completedDate: 1475121062291,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aed918626',\n      completedDate: 1475121104072,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aed908826',\n      completedDate: 1475121170178,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aed808826',\n      completedDate: 1475121219834,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '564944c91be2204b269d51e3',\n      completedDate: 1475121806404,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aed708826',\n      completedDate: 1475121839535,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aed608826',\n      completedDate: 1475121896777,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aed508826',\n      completedDate: 1475121971349,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aed308826',\n      completedDate: 1475122255862,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aed208826',\n      completedDate: 1475122353496,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aed108826',\n      completedDate: 1475122451433,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aed008826',\n      completedDate: 1475122549646,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aecb08826',\n      completedDate: 1475122606323,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bd7158d8c442eddfbeb5bd1f',\n      completedDate: 1475123013392,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: 'bd7158d8c442eddfaeb5bd18',\n      completedDate: 1475164643824,\n      solution: 'https://codepen",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 19208,
    "chunk_index": 38,
    "total_chunks": 83
  },
  {
    "id": "6883dab603bda916a65d800719db3a51",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "completedDate: 1475122255862, solution: null, challengeType: null, files: [] }, { id: 'bad87fee1348bd9aed208826', completedDate: 1475122353496, solution: null, challengeType: null, files: [] }, { id: 'bad87fee1348bd9aed108826', completedDate: 1475122451433, solution: null, challengeType: null, files: [] }, { id: 'bad87fee1348bd9aed008826', completedDate: 1475122549646, solution: null, challengeType: null, files: [] }, { id: 'bad87fee1348bd9aecb08826', completedDate: 1475122606323, solution: null, challengeType: null, files: [] }, { id: 'bd7158d8c442eddfbeb5bd1f', completedDate: 1475123013392, solution: null, challengeType: 7, files: [] }, { id: 'bd7158d8c442eddfaeb5bd18', completedDate: 1475164643824, solution: 'https://codepenio/moT01/pen/ZpJpKp',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'bd7123c9c443eddfaeb5bdef',\n      completedDate: 1475173197683,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244a8',\n      completedDate: 1475173236795,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244a9',\n      completedDate: 1475173254001,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244aa',\n      completedDate: 1475173281010,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244ab',\n      completedDate: 1475173381082,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c11feddfaeb3bdef',\n      completedDate: 1475173390858,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c11feddfaeb4bdef',\n      completedDate: 1475173413711,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1231c1c11feddfaeb5bdef',\n      completedDate: 1475173423698,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c11feddfaeb6bdef',\n      completedDate: 1475173438268,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244ac',\n      completedDate: 1475173465003,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244ad',\n      completedDate: 1475173477062,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1391c1c11feddfaeb4bdef',\n      completedDate: 1475173519510,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'bd7993c9c69feddfaeb7bdef',\n      completedDate: 1475173533104,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'bd7993c9ca9feddfaeb7bdef',\n      completedDate: 1475173564954,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244ae',\n      completedDate: 1475176291002,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244af',\n      completedDate: 1475176331489,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244b0',\n      completedDate: 1475176352871,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244b1',\n      completedDate: 1475176403989,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244b2',\n      completedDate: 1475176422046,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244b3',\n      completedDate: 1475176590196,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'bd7123c9c444eddfaeb5bdef',\n      completedDate: 1475176632734,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244b5',\n      completedDate: 1475176719867,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244b4',\n      completedDate: 1475176819114,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244b6',\n      completedDate: 1475176908316,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244b7',\n      completedDate: 1475176990858,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244b8',\n      completedDate: 1475177105048,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244b9',\n      completedDate: 1475177174580,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244ed',\n      completedDate: 1475177236572,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'bd7123c9c448eddfaeb5bdef',\n      completedDate: 1475177278183,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'bd7123c9c549eddfaeb5bdef',\n      completedDate: 1475179313868,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244ba',\n      completedDate: 1475179482988,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'bd7123c9c450eddfaeb5bdef',\n      completedDate: 1475179518666,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'bd7123c9c451eddfaeb5bdef',\n      completedDate: 1475179613795,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'bd7123c9c452eddfaeb5bdef',\n      completedDate: 1475179659278,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244bb',\n      completedDate: 1475179965317,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'bd7993c9c69feddfaeb8bdef',\n      completedDate: 1475180000714,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c11feddfaeb7bdef',\n      completedDate: 1475180039289,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392ca',\n      completedDate: 1475180095658,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c11feddfaeb8bdef',\n      completedDate: 1475181698926,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56592a60ddddeae28f7aa8e1',\n      completedDate: 1475181780041,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392cb',\n      completedDate: 1475181833413,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392cc',\n      completedDate: 1475183501952,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392cd',\n      completedDate: 1475183525070,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392ce',\n      completedDate: 1475183590132,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244bc',\n      completedDate: 1475183698232,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392cf',\n      completedDate: 1475183805400,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244bd',\n      completedDate: 1475246542486,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244be',\n      completedDate: 1475246816353,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244bf',\n      completedDate: 1475246928293,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244c0',\n      completedDate: 1475246987475,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244c2',\n      completedDate: 1475247140834,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244c3',\n      completedDate: 1475247240302,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244c6',\n      completedDate: 1475249114465,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'bd7123c9c441eddfaeb5bdef',\n      completedDate: 1475249172491,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c12feddfaeb3bdef',\n      completedDate: 1475249802320,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244d0',\n      completedDate: 1475255137391,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244d1',\n      completedDate: 1475255166071,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244d2',\n      completedDate: 1475255268194,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244d3',\n      completedDate: 1475255346517,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244d4',\n      completedDate: 1475255395602,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244d5',\n      completedDate: 1475255430440,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244d6',\n      completedDate: 1475255447772,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244d7',\n      completedDate: 1475255476799,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244d8',\n      completedDate: 1475255568397,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244d9',\n      completedDate: 1475255614997,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244da',\n      completedDate: 1475255683109,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244db',\n      completedDate: 1475255732118,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '5690307fddb111c6084545d7',\n      completedDate: 1475255808973,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244dc',\n      completedDate: 1475256242575,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '5664820f61c48e80c9fa476c',\n      completedDate: 1475256945917,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'bd7158d8c443eddfaeb5bdee',\n      completedDate: 1515450964126,\n      solution: 'https://pinter",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 3765,
    "chunk_index": 39,
    "total_chunks": 83
  },
  {
    "id": "45fff5335e2ae6156b570ecc82b0cdba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "completedDate: 1475255614997, solution: null, challengeType: 1, files: [] }, { id: '56533eb9ac21ba0edf2244da', completedDate: 1475255683109, solution: null, challengeType: 1, files: [] }, { id: '56533eb9ac21ba0edf2244db', completedDate: 1475255732118, solution: null, challengeType: 1, files: [] }, { id: '5690307fddb111c6084545d7', completedDate: 1475255808973, solution: null, challengeType: 1, files: [] }, { id: '56533eb9ac21ba0edf2244dc', completedDate: 1475256242575, solution: null, challengeType: 1, files: [] }, { id: '5664820f61c48e80c9fa476c', completedDate: 1475256945917, solution: null, challengeType: 1, files: [] }, { id: 'bd7158d8c443eddfaeb5bdee', completedDate: 1515450964126, solution: 'https://pinterherokuapp",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 272,
    "chunk_index": 40,
    "total_chunks": 83
  },
  {
    "id": "c51dbb3ab6af6d3ca4185339f9787d05",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "completedDate: 1475255614997, solution: null, challengeType: 1, files: [] }, { id: '56533eb9ac21ba0edf2244da', completedDate: 1475255683109, solution: null, challengeType: 1, files: [] }, { id: '56533eb9ac21ba0edf2244db', completedDate: 1475255732118, solution: null, challengeType: 1, files: [] }, { id: '5690307fddb111c6084545d7', completedDate: 1475255808973, solution: null, challengeType: 1, files: [] }, { id: '56533eb9ac21ba0edf2244dc', completedDate: 1475256242575, solution: null, challengeType: 1, files: [] }, { id: '5664820f61c48e80c9fa476c', completedDate: 1475256945917, solution: null, challengeType: 1, files: [] }, { id: 'bd7158d8c443eddfaeb5bdee', completedDate: 1515450964126, solution: 'https://pinterherokuappcom/#/',\n      challengeType: 4,\n      files: []\n    },\n    {\n      id: 'bad87fee1348bd9aedf08802',\n      completedDate: 1475094814477,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244df',\n      completedDate: 1475258308371,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244e0',\n      completedDate: 1475258479391,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '5679ceb97cbaa8c51670a16b',\n      completedDate: 1475259156604,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244c4',\n      completedDate: 1475259288195,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '565bbe00e9cc8ac0725390f4',\n      completedDate: 1475262913431,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392d0',\n      completedDate: 1475266763329,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244c7',\n      completedDate: 1475266806568,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244c8',\n      completedDate: 1475266879713,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244c9',\n      completedDate: 1475267928028,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392d1',\n      completedDate: 1475267998292,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392d2',\n      completedDate: 1475268069965,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392d3',\n      completedDate: 1475268145412,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244ca',\n      completedDate: 1475297124064,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '567af2437cbaa8c51670a16c',\n      completedDate: 1475297309457,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244cb',\n      completedDate: 1475297597704,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244cc',\n      completedDate: 1475297776784,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244cd',\n      completedDate: 1475297918874,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244cf',\n      completedDate: 1475519963758,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c11feddfaeb5bdef',\n      completedDate: 1475520469953,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56104e9e514f539506016a5c',\n      completedDate: 1475520549003,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56105e7b514f539506016a5e',\n      completedDate: 1475520602983,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '5675e877dbd60be8ad28edc6',\n      completedDate: 1475520969902,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244e1',\n      completedDate: 1475521239678,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c11feddfaeb1bdef',\n      completedDate: 1475521320287,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '5688e62ea601b2482ff8422b',\n      completedDate: 1475524381505,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c11feddfaeb9bdef',\n      completedDate: 1475524515916,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c12feddfaeb1bdef',\n      completedDate: 1475524655165,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c12feddfaeb2bdef',\n      completedDate: 1475543615965,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c12feddfaeb6bdef',\n      completedDate: 1475543695668,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'bd7128d8c441eddfbeb5bddf',\n      completedDate: 1475544021850,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'cf1111c1c12feddfaeb7bdef',\n      completedDate: 1475544296945,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c12feddfaeb8bdef',\n      completedDate: 1475544467549,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c13feddfaeb3bdef',\n      completedDate: 1475544513783,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c15feddfaeb1bdef',\n      completedDate: 1475544570212,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c15feddfaeb2bdef',\n      completedDate: 1475544847062,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c15feddfaeb4bdef',\n      completedDate: 1475545110298,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: '563cfb55594311ffcb333c70',\n      completedDate: 1475545212806,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c15feddfaeb3bdef',\n      completedDate: 1475547779361,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c15feddfaeb7bdef',\n      completedDate: 1475547932256,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c15feddfaeb8bdef',\n      completedDate: 1475548117909,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c15feddfaeb9bdef',\n      completedDate: 1475548202572,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c16feddfaeb1bdef',\n      completedDate: 1475548720499,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c16feddfaeb2bdef',\n      completedDate: 1475548785961,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c16feddfaeb3bdef',\n      completedDate: 1475548816796,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c16feddfaeb4bdef',\n      completedDate: 1475548955141,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c16feddfaeb5bdef',\n      completedDate: 1475549004864,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'bd7158d2c442eddfbeb5bd1f',\n      completedDate: 1475549039674,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: 'a202eed8fc186c8434cb6d61',\n      completedDate: 1475549776986,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a302f7aae1aa3152a5b413bc',\n      completedDate: 1475550618044,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'aaa48de84e1ecc7c742e1124',\n      completedDate: 1475551824473,\n      solution:\n        \"\\nfunction palindrome(str) {\\n  \\n  //remove all punctuation and spaces\\n  var str1 = str",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 2799,
    "chunk_index": 41,
    "total_chunks": 83
  },
  {
    "id": "8882c51898d8fa51f3d083c7fe8379b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "completedDate: 1475548955141, solution: null, challengeType: 1, files: [] }, { id: 'cf1111c1c16feddfaeb5bdef', completedDate: 1475549004864, solution: null, challengeType: 1, files: [] }, { id: 'bd7158d2c442eddfbeb5bd1f', completedDate: 1475549039674, solution: null, challengeType: 7, files: [] }, { id: 'a202eed8fc186c8434cb6d61', completedDate: 1475549776986, solution: null, challengeType: 5, files: [] }, { id: 'a302f7aae1aa3152a5b413bc', completedDate: 1475550618044, solution: null, challengeType: 5, files: [] }, { id: 'aaa48de84e1ecc7c742e1124', completedDate: 1475551824473, solution: \"\\nfunction palindrome(str) {\\n \\n //remove all punctuation and spaces\\n var str1 = strreplace(/[^A-Za-z0-9]/g, '');\\n  //make all lower case\\n  var str2 = str1 toLowerCase();\\n  console log(str2);\\n  \\n  var str3 = str2 split('') reverse() join('');\\n  console",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 310,
    "chunk_index": 42,
    "total_chunks": 83
  },
  {
    "id": "212da831cee3bbc6d8aab2d17d86136e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "{ id: 'bd7158d2c442eddfbeb5bd1f', completedDate: 1475549039674, solution: null, challengeType: 7, files: [] }, { id: 'a202eed8fc186c8434cb6d61', completedDate: 1475549776986, solution: null, challengeType: 5, files: [] }, { id: 'a302f7aae1aa3152a5b413bc', completedDate: 1475550618044, solution: null, challengeType: 5, files: [] }, { id: 'aaa48de84e1ecc7c742e1124', completedDate: 1475551824473, solution: \"\\nfunction palindrome(str) {\\n \\n //remove all punctuation and spaces\\n var str1 = strreplace(/[^A-Za-z0-9]/g, '');\\n //make all lower case\\n var str2 = str1 toLowerCase();\\n console log(str2);\\n \\n var str3 = str2 split('') reverse() join('');\\n consolelog(str3);\\n  \\n  if (str2 === str3)\\n  {\\n    return true;\\n  }\\n  \\n  else\\n  {  \\n    return false;\\n  }\\n}\\n\\n\\n\\npalindrome(\\\"eye\\\");\\n\",\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a26cbbe9ad8655a977e1ceb5',\n      completedDate: 1475552516511,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'ab6137d4e35944e21037b769',\n      completedDate: 1475553251232,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a789b3483989747d63b0e427',\n      completedDate: 1475553881835,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'acda2fb1324d9b0fa741e6b5',\n      completedDate: 1475554349724,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'afcc8d540bea9ea2669306b6',\n      completedDate: 1475555795487,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'af2170cad53daa0770fabdea',\n      completedDate: 1475594634836,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'ac6993d51946422351508a41',\n      completedDate: 1475598636059,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a9bd25c716030ec90084d8a1',\n      completedDate: 1475622950421,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'ab31c21b530c0dafa9e241ee',\n      completedDate: 1475628875890,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'adf08ec01beb4f99fc7a68f2',\n      completedDate: 1475634954182,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a39963a4c10bc8b4d4f06d7e',\n      completedDate: 1476834441854,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a24c1a4622e3c05097f71d67',\n      completedDate: 1476839147914,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: '56533eb9ac21ba0edf2244e2',\n      completedDate: 1476843234983,\n      solution:\n        '\\nfunction rot13(str) { // LBH QVQ VG",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 964,
    "chunk_index": 43,
    "total_chunks": 83
  },
  {
    "id": "2f3e02a442f696416b1f73bc14e2ab5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "files: [] }, { id: 'a9bd25c716030ec90084d8a1', completedDate: 1475622950421, solution: null, challengeType: 5, files: [] }, { id: 'ab31c21b530c0dafa9e241ee', completedDate: 1475628875890, solution: null, challengeType: 5, files: [] }, { id: 'adf08ec01beb4f99fc7a68f2', completedDate: 1475634954182, solution: null, challengeType: 5, files: [] }, { id: 'a39963a4c10bc8b4d4f06d7e', completedDate: 1476834441854, solution: null, challengeType: 5, files: [] }, { id: 'a24c1a4622e3c05097f71d67', completedDate: 1476839147914, solution: null, challengeType: 5, files: [] }, { id: '56533eb9ac21ba0edf2244e2', completedDate: 1476843234983, solution: '\\nfunction rot13(str) { // LBH QVQ VG\\n  //var arr0 = str split(\"\");\\n  var arr = [];\\n  var arr2 = [];\\n  var newstr = \"\";\\n  //concat array to string\\n  //var str3 = String fromCharCode(65);\\n  //var str2 = \\'did\\' charCodeAt(0);\\n  \\n for (i=0; i<str length; i++)\\n {\\n    var filler = 0;\\n    if (str charCodeAt(i) >= 65 && str charCodeAt(i) <= 77) //A-M\\n    {\\n      filler = str charCodeAt(i) + 13;\\n      arr push(filler);\\n    }\\n    else if (str charCodeAt(i) > 77 && str charCodeAt(i) <= 90) //N-Z\\n    {\\n      filler = str charCodeAt(i) - 13;\\n      arr push(filler);\\n    }\\n    else //all other characters , * \\n    {\\n      filler = str charCodeAt(i);\\n      arr",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 44,
    "total_chunks": 83
  },
  {
    "id": "2783e7711365c7a72e24a6c5e387e1f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "str3 = String fromCharCode(65);\\n //var str2 = \\'did\\' charCodeAt(0);\\n \\n for (i=0; i<str length; i++)\\n {\\n var filler = 0;\\n if (str charCodeAt(i) >= 65 && str charCodeAt(i) <= 77) //A-M\\n {\\n filler = str charCodeAt(i) + 13;\\n arr push(filler);\\n }\\n else if (str charCodeAt(i) > 77 && str charCodeAt(i) <= 90) //N-Z\\n {\\n filler = str charCodeAt(i) - 13;\\n arr push(filler);\\n }\\n else //all other characters , * \\n {\\n filler = str charCodeAt(i);\\n arrpush(filler);\\n    }\\n }\\n  \\n for (j=0; j<str length; j++)\\n {\\n   var placeme = String fromCharCode(arr[j]);\\n   arr2 push(placeme);\\n }\\n  \\n  \\n  newstr = arr2",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 229,
    "chunk_index": 45,
    "total_chunks": 83
  },
  {
    "id": "1dd515258949ac871566384923440d65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "charCodeAt(i) >= 65 && str charCodeAt(i) <= 77) //A-M\\n {\\n filler = str charCodeAt(i) + 13;\\n arr push(filler);\\n }\\n else if (str charCodeAt(i) > 77 && str charCodeAt(i) <= 90) //N-Z\\n {\\n filler = str charCodeAt(i) - 13;\\n arr push(filler);\\n }\\n else //all other characters , * \\n {\\n filler = str charCodeAt(i);\\n arrpush(filler);\\n }\\n }\\n \\n for (j=0; j<str length; j++)\\n {\\n var placeme = String fromCharCode(arr[j]);\\n arr2 push(placeme);\\n }\\n \\n \\n newstr = arr2join(\"\");\\n  return newstr;\\n}\\n\\n// Change the inputs below to test\\nrot13(\"SERR PBQR PNZC\");\\n',\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392d4',\n      completedDate: 1476843806468,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392d5',\n      completedDate: 1476844475068,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392d6',\n      completedDate: 1476844663724,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392d7',\n      completedDate: 1476844924658,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392d8',\n      completedDate: 1476845007020,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392d9',\n      completedDate: 1476889068031,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: '56bbb991ad1ed5201cd392da',\n      completedDate: 1476889166120,\n      solution: null,\n      challengeType: null,\n      files: []\n    },\n    {\n      id: 'bd7158d8c442eddfaeb5bd13',\n      completedDate: 1476999500595,\n      solution: 'http://codepen",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 584,
    "chunk_index": 46,
    "total_chunks": 83
  },
  {
    "id": "012e3ac20c8298a9ce2fd139bd306e01",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "completedDate: 1476844475068, solution: null, challengeType: null, files: [] }, { id: '56bbb991ad1ed5201cd392d6', completedDate: 1476844663724, solution: null, challengeType: null, files: [] }, { id: '56bbb991ad1ed5201cd392d7', completedDate: 1476844924658, solution: null, challengeType: null, files: [] }, { id: '56bbb991ad1ed5201cd392d8', completedDate: 1476845007020, solution: null, challengeType: null, files: [] }, { id: '56bbb991ad1ed5201cd392d9', completedDate: 1476889068031, solution: null, challengeType: null, files: [] }, { id: '56bbb991ad1ed5201cd392da', completedDate: 1476889166120, solution: null, challengeType: null, files: [] }, { id: 'bd7158d8c442eddfaeb5bd13', completedDate: 1476999500595, solution: 'http://codepenio/moT01/pen/ZpVYLN',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'a3566b1109230028080c9345',\n      completedDate: 1477059269430,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a5de63ebea8dbee56860f4f2',\n      completedDate: 1477064980435,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'bd7127d8c441eddfbeb5bddf',\n      completedDate: 1477109403800,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd7158d8c442eddfaeb5bd10',\n      completedDate: 1477370610122,\n      solution: 'http://codepen",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 47,
    "total_chunks": 83
  },
  {
    "id": "8670e249abd212daa717d8e8616fed13",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "completedDate: 1476889068031, solution: null, challengeType: null, files: [] }, { id: '56bbb991ad1ed5201cd392da', completedDate: 1476889166120, solution: null, challengeType: null, files: [] }, { id: 'bd7158d8c442eddfaeb5bd13', completedDate: 1476999500595, solution: 'http://codepenio/moT01/pen/ZpVYLN', challengeType: 3, files: [] }, { id: 'a3566b1109230028080c9345', completedDate: 1477059269430, solution: null, challengeType: 5, files: [] }, { id: 'a5de63ebea8dbee56860f4f2', completedDate: 1477064980435, solution: null, challengeType: 5, files: [] }, { id: 'bd7127d8c441eddfbeb5bddf', completedDate: 1477109403800, solution: null, challengeType: 6, files: [] }, { id: 'bd7158d8c442eddfaeb5bd10', completedDate: 1477370610122, solution: 'http://codepenio/moT01/pen/ZpVOXo',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'a7f4d8f2483413a6ce226cac',\n      completedDate: 1477447963039,\n      solution:\n        'function convertToRoman(num) {\\n  var newArr = [];\\n  var result;\\n  \\n  while (num>=1000) {\\n    newArr push(\"M\"); \\n    num -= 1000;\\n  }\\n  \\n  if (num >= 900) {\\n    newArr push(\"CM\");\\n    num -= 900;\\n  }\\n  \\n  if (num >= 500) {\\n    newArr push(\"D\");\\n    num -= 500;\\n  }\\n  \\n  if (num >= 400) {\\n    newArr",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 48,
    "total_chunks": 83
  },
  {
    "id": "0d8c18a42bfdeadb67dc8fcb8c67d89d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "solution: null, challengeType: 6, files: [] }, { id: 'bd7158d8c442eddfaeb5bd10', completedDate: 1477370610122, solution: 'http://codepenio/moT01/pen/ZpVOXo', challengeType: 3, files: [] }, { id: 'a7f4d8f2483413a6ce226cac', completedDate: 1477447963039, solution: 'function convertToRoman(num) {\\n var newArr = [];\\n var result;\\n \\n while (num>=1000) {\\n newArr push(\"M\"); \\n num -= 1000;\\n }\\n \\n if (num >= 900) {\\n newArr push(\"CM\");\\n num -= 900;\\n }\\n \\n if (num >= 500) {\\n newArr push(\"D\");\\n num -= 500;\\n }\\n \\n if (num >= 400) {\\n newArrpush(\"CD\");\\n    num -= 400;\\n  }\\n  \\n  while (num >= 100) { \\n    newArr push(\"C\");\\n    num -= 100;\\n  }\\n\\n  if (num >= 90) {\\n    newArr push(\"XC\");\\n    num -= 90;\\n  }\\n  \\n  if (num >= 50) {\\n    newArr push(\"L\");\\n    num -= 50;\\n  }\\n  \\n  if (num >= 40) {\\n    newArr push(\"XL\");\\n    num -= 40;\\n  }\\n  \\n  while (num >= 10) {\\n    newArr push(\"X\");\\n    num -= 10;\\n  }\\n  \\n  if (num >= 9) {\\n    newArr push(\"IX\");\\n    num -= 9;\\n  }\\n  \\n  if (num >= 5) {\\n    newArr push(\"V\");\\n    num -= 5;\\n  }\\n  \\n  if (num >= 4) {\\n    newArr push(\"IV\");\\n    num -= 4;\\n  }\\n  \\n  while (num > 0) {\\n    newArr",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 49,
    "total_chunks": 83
  },
  {
    "id": "ac0e1df33c636d54cf6232590b8ac56a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": ">= 50) {\\n newArr push(\"L\");\\n num -= 50;\\n }\\n \\n if (num >= 40) {\\n newArr push(\"XL\");\\n num -= 40;\\n }\\n \\n while (num >= 10) {\\n newArr push(\"X\");\\n num -= 10;\\n }\\n \\n if (num >= 9) {\\n newArr push(\"IX\");\\n num -= 9;\\n }\\n \\n if (num >= 5) {\\n newArr push(\"V\");\\n num -= 5;\\n }\\n \\n if (num >= 4) {\\n newArr push(\"IV\");\\n num -= 4;\\n }\\n \\n while (num > 0) {\\n newArrpush(\"I\");\\n    num -= 1;\\n  }\\n    \\n  result = newArr join();\\n  result = result replace(/,/g,\"\");\\n  console",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 204,
    "chunk_index": 50,
    "total_chunks": 83
  },
  {
    "id": "7bf22df61741e30e373efa69f0d5a958",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "{\\n newArr push(\"XL\");\\n num -= 40;\\n }\\n \\n while (num >= 10) {\\n newArr push(\"X\");\\n num -= 10;\\n }\\n \\n if (num >= 9) {\\n newArr push(\"IX\");\\n num -= 9;\\n }\\n \\n if (num >= 5) {\\n newArr push(\"V\");\\n num -= 5;\\n }\\n \\n if (num >= 4) {\\n newArr push(\"IV\");\\n num -= 4;\\n }\\n \\n while (num > 0) {\\n newArrpush(\"I\");\\n num -= 1;\\n }\\n \\n result = newArr join();\\n result = result replace(/,/g,\"\");\\n consolelog(result);\\n  return result;\\n}\\n\\nconvertToRoman(36);\\n',\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a0b5010f579e69b815e7c5d6',\n      completedDate: 1477512598599,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'aa7697ea2477d1316795783b',\n      completedDate: 1477516427303,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'afd15382cdfb22c9efe8b7de',\n      completedDate: 1477519032167,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'af7588ade1100bde429baf20',\n      completedDate: 1477520894164,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a77dbc43c33f39daa4429b4f',\n      completedDate: 1477521441905,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a105e963526e7de52b219be9',\n      completedDate: 1477523752866,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a6b0bb188d873cb2c8729495',\n      completedDate: 1477529331616,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a5229172f011153519423690',\n      completedDate: 1477535395217,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a8d97bd4c764e91f9d2bda01',\n      completedDate: 1477592139677,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'af4afb223120f7348cdfc9fd',\n      completedDate: 1478129569493,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'bd7158d8c442eddfaeb5bd19',\n      completedDate: 1479175997023,\n      solution: 'http://codepen",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 735,
    "chunk_index": 51,
    "total_chunks": 83
  },
  {
    "id": "c656343f4ac8841e12b9d4eb70aef15f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "completedDate: 1477521441905, solution: null, challengeType: 5, files: [] }, { id: 'a105e963526e7de52b219be9', completedDate: 1477523752866, solution: null, challengeType: 5, files: [] }, { id: 'a6b0bb188d873cb2c8729495', completedDate: 1477529331616, solution: null, challengeType: 5, files: [] }, { id: 'a5229172f011153519423690', completedDate: 1477535395217, solution: null, challengeType: 5, files: [] }, { id: 'a8d97bd4c764e91f9d2bda01', completedDate: 1477592139677, solution: null, challengeType: 5, files: [] }, { id: 'af4afb223120f7348cdfc9fd', completedDate: 1478129569493, solution: null, challengeType: 5, files: [] }, { id: 'bd7158d8c442eddfaeb5bd19', completedDate: 1479175997023, solution: 'http://codepenio/moT01/pen/LRoxrQ',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'a8e512fbe388ac2f9198f0fa',\n      completedDate: 1481583669528,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a103376db3ba46b2d50db289',\n      completedDate: 1481587010971,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a3bfc1673c0526e06d3ac698',\n      completedDate: 1481608493885,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'ae9defd7acaf69703ab432ea',\n      completedDate: 1481736052042,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a6e40f1041b06c996f7b2406',\n      completedDate: 1481736237406,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a5deed1811a43193f9f1c841',\n      completedDate: 1481740006290,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'ab306dbdcc907c7ddfc30830',\n      completedDate: 1481745472605,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a10d2431ad0c6a099a4b8b52',\n      completedDate: 1481746815383,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a97fd23d9b809dac9921074f',\n      completedDate: 1481758984188,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a3f503de51cfab748ff001aa',\n      completedDate: 1481824947299,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a56138aff60341a09ed6c480',\n      completedDate: 1481837456810,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a3f503de51cf954ede28891d',\n      completedDate: 1481845736605,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f315184',\n      completedDate: 1481860652201,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f315185',\n      completedDate: 1481860854284,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f31518f',\n      completedDate: 1481861004554,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f31518e',\n      completedDate: 1481862599572,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f31518c',\n      completedDate: 1481862758623,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f31518d',\n      completedDate: 1481862797677,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f31518b',\n      completedDate: 1481862861505,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f31518a',\n      completedDate: 1481862919212,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f315189',\n      completedDate: 1481863139471,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f315188',\n      completedDate: 1481863215509,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f315187',\n      completedDate: 1481863487868,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f315186',\n      completedDate: 1481863524852,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd7129d8a441eddfbeb5bddf',\n      completedDate: 1481863610234,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd7126d8c441eddfbeb5bddf',\n      completedDate: 1481863731854,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd7125d8c441eddfbeb5bddf',\n      completedDate: 1481864211145,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd7122d8c441eddfbeb5bddf',\n      completedDate: 1481864321324,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd7124d8c441eddfbeb5bddf',\n      completedDate: 1481864475753,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd7123d8c441eddfbeb5bddf',\n      completedDate: 1481864582256,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd7121d8c441eddfbeb5bddf',\n      completedDate: 1481864696095,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd7120d8c441eddfbeb5bddf',\n      completedDate: 1481864846892,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd712fd8c441eddfbeb5bddf',\n      completedDate: 1481864954292,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd712ed8c441eddfbeb5bddf',\n      completedDate: 1481865043747,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd712dd8c441eddfbeb5bddf',\n      completedDate: 1481865144055,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd712cd8c441eddfbeb5bddf',\n      completedDate: 1481865164967,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f31510f',\n      completedDate: 1481865503851,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd7129d80441eddfbeb5bddf',\n      completedDate: 1481865687477,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd7129d8b441eddfbeb5bddf',\n      completedDate: 1481866381587,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd7029d8c441eddfbeb5bddf',\n      completedDate: 1481868133911,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd712ad8c441eddfbeb5bddf',\n      completedDate: 1481868315911,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd7119d8c441eddfbeb5bddf',\n      completedDate: 1481868379586,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd712bd8c441eddfbeb5bddf',\n      completedDate: 1481868532739,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'bd7129d89441eddfbeb5bddf',\n      completedDate: 1481868862816,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f315183',\n      completedDate: 1481897167093,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f315182',\n      completedDate: 1481897290924,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f315181',\n      completedDate: 1481897771281,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f315180',\n      completedDate: 1481898177819,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f31517f',\n      completedDate: 1481898276836,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f31517e',\n      completedDate: 1481898787535,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f31517d',\n      completedDate: 1481898913196,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f31517c',\n      completedDate: 1481899378324,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f31517b',\n      completedDate: 1481899595427,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: '56b15f15632298c12f31517a',\n      completedDate: 1481900212775,\n      solution: null,\n      challengeType: 6,\n      files: []\n    },\n    {\n      id: 'a2f1d72d9b908d0bd72bb9f6',\n      completedDate: 1481903430810,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'aff0395860f5d3034dc0bfc9',\n      completedDate: 1482122509252,\n      solution:\n        '\\nfunction telephoneCheck(str) {\\n  \\n  var tests = /^(1|1[\\\\s-])",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 3045,
    "chunk_index": 52,
    "total_chunks": 83
  },
  {
    "id": "49f4c1d2f9caecea88bb2742e84a952a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "[] }, { id: '56b15f15632298c12f31517d', completedDate: 1481898913196, solution: null, challengeType: 6, files: [] }, { id: '56b15f15632298c12f31517c', completedDate: 1481899378324, solution: null, challengeType: 6, files: [] }, { id: '56b15f15632298c12f31517b', completedDate: 1481899595427, solution: null, challengeType: 6, files: [] }, { id: '56b15f15632298c12f31517a', completedDate: 1481900212775, solution: null, challengeType: 6, files: [] }, { id: 'a2f1d72d9b908d0bd72bb9f6', completedDate: 1481903430810, solution: null, challengeType: 5, files: [] }, { id: 'aff0395860f5d3034dc0bfc9', completedDate: 1482122509252, solution: '\\nfunction telephoneCheck(str) {\\n \\n var tests = /^(1|1[\\\\s-])(\\\\d{3}|\\\\d{3}[\\\\s-]|\\\\(\\\\d{3}\\\\)|\\\\(\\\\d{3}\\\\)\\\\s)(\\\\d{3}|\\\\d{3}[\\\\s-])\\\\d{4}$/g;\\n  return tests",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 329,
    "chunk_index": 53,
    "total_chunks": 83
  },
  {
    "id": "dfe44e24397c513878e0f2411c842d36",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "{ id: '56b15f15632298c12f31517d', completedDate: 1481898913196, solution: null, challengeType: 6, files: [] }, { id: '56b15f15632298c12f31517c', completedDate: 1481899378324, solution: null, challengeType: 6, files: [] }, { id: '56b15f15632298c12f31517b', completedDate: 1481899595427, solution: null, challengeType: 6, files: [] }, { id: '56b15f15632298c12f31517a', completedDate: 1481900212775, solution: null, challengeType: 6, files: [] }, { id: 'a2f1d72d9b908d0bd72bb9f6', completedDate: 1481903430810, solution: null, challengeType: 5, files: [] }, { id: 'aff0395860f5d3034dc0bfc9', completedDate: 1482122509252, solution: '\\nfunction telephoneCheck(str) {\\n \\n var tests = /^(1|1[\\\\s-])(\\\\d{3}|\\\\d{3}[\\\\s-]|\\\\(\\\\d{3}\\\\)|\\\\(\\\\d{3}\\\\)\\\\s)(\\\\d{3}|\\\\d{3}[\\\\s-])\\\\d{4}$/g;\\n return teststest(str);\\n}\\n\\n\\n\\ntelephoneCheck(\"555-555-5555\");\\n',\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a7bf700cd123b9a54eef01d5',\n      completedDate: 1482185656510,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'a19f0fbe1872186acd434d5a',\n      completedDate: 1482201811080,\n      solution: null,\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'aa2e6f85cab2ab736c9a9b24',\n      completedDate: 1482248818632,\n      solution:\n        '\\nfunction checkCashRegister(price, cash, cid) {\\n  var changeleft = Math",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 522,
    "chunk_index": 54,
    "total_chunks": 83
  },
  {
    "id": "ef30a23aa1bf58d37cafdf346c7662e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "6, files: [] }, { id: 'a2f1d72d9b908d0bd72bb9f6', completedDate: 1481903430810, solution: null, challengeType: 5, files: [] }, { id: 'aff0395860f5d3034dc0bfc9', completedDate: 1482122509252, solution: '\\nfunction telephoneCheck(str) {\\n \\n var tests = /^(1|1[\\\\s-])(\\\\d{3}|\\\\d{3}[\\\\s-]|\\\\(\\\\d{3}\\\\)|\\\\(\\\\d{3}\\\\)\\\\s)(\\\\d{3}|\\\\d{3}[\\\\s-])\\\\d{4}$/g;\\n return teststest(str);\\n}\\n\\n\\n\\ntelephoneCheck(\"555-555-5555\");\\n', challengeType: 5, files: [] }, { id: 'a7bf700cd123b9a54eef01d5', completedDate: 1482185656510, solution: null, challengeType: 5, files: [] }, { id: 'a19f0fbe1872186acd434d5a', completedDate: 1482201811080, solution: null, challengeType: 5, files: [] }, { id: 'aa2e6f85cab2ab736c9a9b24', completedDate: 1482248818632, solution: '\\nfunction checkCashRegister(price, cash, cid) {\\n var changeleft = Mathround((cash-price)*100)/100, changetotal = Math round((cash-price)*100)/100, totalcid = 0, arr = [], temp = 0, temp2 = 0;\\n\\n  var values = [[\"PENNY\", 0 01], \\n                [\"NICKEL\", 0 05], \\n                [\"DIME\", 0 10], \\n                [\"QUARTER\", 0 25], \\n                [\"ONE\", 1 00], \\n                [\"FIVE\", 5 00], \\n                [\"TEN\", 10 00], \\n                [\"TWENTY\", 20 00], \\n                [\"ONE HUNDRED\", 100",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 55,
    "total_chunks": 83
  },
  {
    "id": "ea362a33a0b2b22d5159778cfdf5ee96",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "solution: null, challengeType: 5, files: [] }, { id: 'aa2e6f85cab2ab736c9a9b24', completedDate: 1482248818632, solution: '\\nfunction checkCashRegister(price, cash, cid) {\\n var changeleft = Mathround((cash-price)*100)/100, changetotal = Math round((cash-price)*100)/100, totalcid = 0, arr = [], temp = 0, temp2 = 0;\\n\\n var values = [[\"PENNY\", 0 01], \\n [\"NICKEL\", 0 05], \\n [\"DIME\", 0 10], \\n [\"QUARTER\", 0 25], \\n [\"ONE\", 1 00], \\n [\"FIVE\", 5 00], \\n [\"TEN\", 10 00], \\n [\"TWENTY\", 20 00], \\n [\"ONE HUNDRED\", 10000]];\\n  \\n  //this get the cash in the till\\n  for(var i=0; i<cid length; i++) {\\n    totalcid += Math round(cid[i][1]*100)/100;\\n  }\\n  \\n  if(totalcid < changeleft) {\\n    return \"Insufficient Funds\";\\n  }\\n  \\n  function getchange(j,value) {\\n    temp=0;\\n    while(changeleft >= value && cid[j][1] >= value) {\\n      changeleft = Math round((changeleft-value)*100)/100;\\n      cid[j][1] = Math round((cid[j][1]-value)*100)/ 100;\\n      totalcid = Math round((totalcid-value)*100)/100;\\n      temp = Math round((temp+value)*100)/100;\\n    }\\n    temp2 = Math round((temp2+temp)*100)/100;\\n    if(temp == 0) {\\n      arr",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 56,
    "total_chunks": 83
  },
  {
    "id": "879a0e299de55b27e0de03d03f27b445",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "\\n [\"TWENTY\", 20 00], \\n [\"ONE HUNDRED\", 10000]];\\n \\n //this get the cash in the till\\n for(var i=0; i<cid length; i++) {\\n totalcid += Math round(cid[i][1]*100)/100;\\n }\\n \\n if(totalcid < changeleft) {\\n return \"Insufficient Funds\";\\n }\\n \\n function getchange(j,value) {\\n temp=0;\\n while(changeleft >= value && cid[j][1] >= value) {\\n changeleft = Math round((changeleft-value)*100)/100;\\n cid[j][1] = Math round((cid[j][1]-value)*100)/ 100;\\n totalcid = Math round((totalcid-value)*100)/100;\\n temp = Math round((temp+value)*100)/100;\\n }\\n temp2 = Math round((temp2+temp)*100)/100;\\n if(temp == 0) {\\n arrpush([values[j][0],temp]);\\n    }\\n  }\\n  \\n  for(var k=8; k>=0; k--) {\\n    getchange(k, values[k][1]);\\n  }\\n\\n  if(temp2 < changetotal) {\\n    return \"Insufficient Funds\";\\n  }\\n  if(totalcid == 0) {\\n    return arr;\\n  } else {\\n    return \"Closed\";\\n  }\\n}',\n      challengeType: 5,\n      files: []\n    },\n    {\n      id: 'bd7158d8c442eddfaeb5bd1c',\n      completedDate: 1484354051397,\n      solution: 'http://codepen io/moT01/pen/jyqrNr',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'bd7158d8c442eddfaeb5bd1f',\n      completedDate: 1484776063352,\n      solution: 'http://codepen",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 57,
    "total_chunks": 83
  },
  {
    "id": "b795c6aae089e4b9af65d6bc0baf8013",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "round((cid[j][1]-value)*100)/ 100;\\n totalcid = Math round((totalcid-value)*100)/100;\\n temp = Math round((temp+value)*100)/100;\\n }\\n temp2 = Math round((temp2+temp)*100)/100;\\n if(temp == 0) {\\n arrpush([values[j][0],temp]);\\n }\\n }\\n \\n for(var k=8; k>=0; k--) {\\n getchange(k, values[k][1]);\\n }\\n\\n if(temp2 < changetotal) {\\n return \"Insufficient Funds\";\\n }\\n if(totalcid == 0) {\\n return arr;\\n } else {\\n return \"Closed\";\\n }\\n}', challengeType: 5, files: [] }, { id: 'bd7158d8c442eddfaeb5bd1c', completedDate: 1484354051397, solution: 'http://codepen io/moT01/pen/jyqrNr', challengeType: 3, files: [] }, { id: 'bd7158d8c442eddfaeb5bd1f', completedDate: 1484776063352, solution: 'http://codepenio/moT01/pen/WRGERp',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'bd7158d8c442eddfaeb5bd0f',\n      completedDate: 1485204463074,\n      solution: 'http://codepen io/moT01/pen/PbrzQo',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'bd7158d8c442eedfaeb5bd1c',\n      completedDate: 1485204700866,\n      solution: 'http://codepen io/moT01/pen/egOKqO',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'bd7158d8c442eddfaeb5bd17',\n      completedDate: 1485289601534,\n      solution: 'http://codepen",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 58,
    "total_chunks": 83
  },
  {
    "id": "bd12accac0732142900caacdb488d6e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "}\\n if(totalcid == 0) {\\n return arr;\\n } else {\\n return \"Closed\";\\n }\\n}', challengeType: 5, files: [] }, { id: 'bd7158d8c442eddfaeb5bd1c', completedDate: 1484354051397, solution: 'http://codepen io/moT01/pen/jyqrNr', challengeType: 3, files: [] }, { id: 'bd7158d8c442eddfaeb5bd1f', completedDate: 1484776063352, solution: 'http://codepenio/moT01/pen/WRGERp', challengeType: 3, files: [] }, { id: 'bd7158d8c442eddfaeb5bd0f', completedDate: 1485204463074, solution: 'http://codepen io/moT01/pen/PbrzQo', challengeType: 3, files: [] }, { id: 'bd7158d8c442eedfaeb5bd1c', completedDate: 1485204700866, solution: 'http://codepen io/moT01/pen/egOKqO', challengeType: 3, files: [] }, { id: 'bd7158d8c442eddfaeb5bd17', completedDate: 1485289601534, solution: 'http://codepenio/moT01/pen/rWxJoa',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'bd7158d8c242eddfaeb5bd13',\n      completedDate: 1485315439137,\n      solution: 'http://codepen",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 372,
    "chunk_index": 59,
    "total_chunks": 83
  },
  {
    "id": "5f6767e6d6dc1fd8db87cd594812eabd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "}\\n}', challengeType: 5, files: [] }, { id: 'bd7158d8c442eddfaeb5bd1c', completedDate: 1484354051397, solution: 'http://codepen io/moT01/pen/jyqrNr', challengeType: 3, files: [] }, { id: 'bd7158d8c442eddfaeb5bd1f', completedDate: 1484776063352, solution: 'http://codepenio/moT01/pen/WRGERp', challengeType: 3, files: [] }, { id: 'bd7158d8c442eddfaeb5bd0f', completedDate: 1485204463074, solution: 'http://codepen io/moT01/pen/PbrzQo', challengeType: 3, files: [] }, { id: 'bd7158d8c442eedfaeb5bd1c', completedDate: 1485204700866, solution: 'http://codepen io/moT01/pen/egOKqO', challengeType: 3, files: [] }, { id: 'bd7158d8c442eddfaeb5bd17', completedDate: 1485289601534, solution: 'http://codepenio/moT01/pen/rWxJoa', challengeType: 3, files: [] }, { id: 'bd7158d8c242eddfaeb5bd13', completedDate: 1485315439137, solution: 'http://codepenio/moT01/pen/vgOaoJ',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: '561add10cb82ac38a17513be',\n      completedDate: 1485316065499,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: 'cf1111c1c16feddfaeb6bdef',\n      completedDate: 1485467383567,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'cf1111c1c16feddfaeb7bdef',\n      completedDate: 1485467595207,\n      solution: null,\n      challengeType: 1,\n      files: []\n    },\n    {\n      id: 'bd7154d8c242eddfaeb5bd13',\n      completedDate: 1488664622012,\n      solution: 'http://codepen",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 550,
    "chunk_index": 60,
    "total_chunks": 83
  },
  {
    "id": "25f6fa29c5ba13ef73bc21ad58693887",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "1485204700866, solution: 'http://codepen io/moT01/pen/egOKqO', challengeType: 3, files: [] }, { id: 'bd7158d8c442eddfaeb5bd17', completedDate: 1485289601534, solution: 'http://codepenio/moT01/pen/rWxJoa', challengeType: 3, files: [] }, { id: 'bd7158d8c242eddfaeb5bd13', completedDate: 1485315439137, solution: 'http://codepenio/moT01/pen/vgOaoJ', challengeType: 3, files: [] }, { id: '561add10cb82ac38a17513be', completedDate: 1485316065499, solution: null, challengeType: 7, files: [] }, { id: 'cf1111c1c16feddfaeb6bdef', completedDate: 1485467383567, solution: null, challengeType: 1, files: [] }, { id: 'cf1111c1c16feddfaeb7bdef', completedDate: 1485467595207, solution: null, challengeType: 1, files: [] }, { id: 'bd7154d8c242eddfaeb5bd13', completedDate: 1488664622012, solution: 'http://codepenio/moT01/pen/aJzJQg',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'bd7155d8c242eddfaeb5bd13',\n      completedDate: 1488665107117,\n      solution: 'http://codepen io/moT01/pen/ygwEaK',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'bd7157d8c242eddfaeb5bd13',\n      completedDate: 1488665153261,\n      solution: 'http://codepen",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 61,
    "total_chunks": 83
  },
  {
    "id": "1a524bb33d0a1fa6b2fbace8efcb4a40",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "1485315439137, solution: 'http://codepenio/moT01/pen/vgOaoJ', challengeType: 3, files: [] }, { id: '561add10cb82ac38a17513be', completedDate: 1485316065499, solution: null, challengeType: 7, files: [] }, { id: 'cf1111c1c16feddfaeb6bdef', completedDate: 1485467383567, solution: null, challengeType: 1, files: [] }, { id: 'cf1111c1c16feddfaeb7bdef', completedDate: 1485467595207, solution: null, challengeType: 1, files: [] }, { id: 'bd7154d8c242eddfaeb5bd13', completedDate: 1488664622012, solution: 'http://codepenio/moT01/pen/aJzJQg', challengeType: 3, files: [] }, { id: 'bd7155d8c242eddfaeb5bd13', completedDate: 1488665107117, solution: 'http://codepen io/moT01/pen/ygwEaK', challengeType: 3, files: [] }, { id: 'bd7157d8c242eddfaeb5bd13', completedDate: 1488665153261, solution: 'http://codepenio/moT01/pen/egrZzr',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'bd7156d8c242eddfaeb5bd13',\n      completedDate: 1488665196848,\n      solution: 'http://codepen io/moT01/pen/ggBEWY',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: '58d9cc820ce2197370032a13',\n      completedDate: 1490789539522,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: 'bd7198d8c242eddfaeb5bd13',\n      completedDate: 1490790216213,\n      solution: 'http://codepen",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 62,
    "total_chunks": 83
  },
  {
    "id": "e6d1e1c88649dade6b736261383c0679",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "solution: null, challengeType: 1, files: [] }, { id: 'bd7154d8c242eddfaeb5bd13', completedDate: 1488664622012, solution: 'http://codepenio/moT01/pen/aJzJQg', challengeType: 3, files: [] }, { id: 'bd7155d8c242eddfaeb5bd13', completedDate: 1488665107117, solution: 'http://codepen io/moT01/pen/ygwEaK', challengeType: 3, files: [] }, { id: 'bd7157d8c242eddfaeb5bd13', completedDate: 1488665153261, solution: 'http://codepenio/moT01/pen/egrZzr', challengeType: 3, files: [] }, { id: 'bd7156d8c242eddfaeb5bd13', completedDate: 1488665196848, solution: 'http://codepen io/moT01/pen/ggBEWY', challengeType: 3, files: [] }, { id: '58d9cc820ce2197370032a13', completedDate: 1490789539522, solution: null, challengeType: 7, files: [] }, { id: 'bd7198d8c242eddfaeb5bd13', completedDate: 1490790216213, solution: 'http://codepenio/moT01/pen/EWmYPq',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'bd7108d8c242eddfaeb5bd13',\n      completedDate: 1491529027827,\n      solution: 'http://codepen io/moT01/full/dvEgav/',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: 'bd7153d8c242eddfaeb5bd13',\n      completedDate: 1491530360535,\n      solution: 'http://codepen",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 63,
    "total_chunks": 83
  },
  {
    "id": "4fc5f280e211062bc1e519431ce20149",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'http://codepen io/moT01/pen/ygwEaK', challengeType: 3, files: [] }, { id: 'bd7157d8c242eddfaeb5bd13', completedDate: 1488665153261, solution: 'http://codepenio/moT01/pen/egrZzr', challengeType: 3, files: [] }, { id: 'bd7156d8c242eddfaeb5bd13', completedDate: 1488665196848, solution: 'http://codepen io/moT01/pen/ggBEWY', challengeType: 3, files: [] }, { id: '58d9cc820ce2197370032a13', completedDate: 1490789539522, solution: null, challengeType: 7, files: [] }, { id: 'bd7198d8c242eddfaeb5bd13', completedDate: 1490790216213, solution: 'http://codepenio/moT01/pen/EWmYPq', challengeType: 3, files: [] }, { id: 'bd7108d8c242eddfaeb5bd13', completedDate: 1491529027827, solution: 'http://codepen io/moT01/full/dvEgav/', challengeType: 3, files: [] }, { id: 'bd7153d8c242eddfaeb5bd13', completedDate: 1491530360535, solution: 'http://codepenio/moT01/full/OpOOxg/',\n      challengeType: 3,\n      files: []\n    },\n    {\n      id: '561add10cb82ac38a17513b3',\n      completedDate: 1491530482152,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: 'bd7353d8c341eddeaeb5bd0f',\n      completedDate: 1496195906794,\n      solution: null,\n      challengeType: 2,\n      files: []\n    },\n    {\n      id: 'bd7153d8c441eddfaeb5bd0f',\n      completedDate: 1496235235066,\n      solution: null,\n      challengeType: 2,\n      files: []\n    },\n    {\n      id: 'bd7153d8c441eddfaeb5bdff',\n      completedDate: 1496603882718,\n      solution: null,\n      challengeType: 2,\n      files: []\n    },\n    {\n      id: 'bd7153d8c441eddfaeb5bdfe',\n      completedDate: 1496603911653,\n      solution: null,\n      challengeType: 2,\n      files: []\n    },\n    {\n      id: 'bd7153d8c441eddfaeb5bdfd',\n      completedDate: 1496603991361,\n      solution: null,\n      challengeType: 2,\n      files: []\n    },\n    {\n      id: 'bd7153d8c441eddfaeb5bd1f',\n      completedDate: 1496752318061,\n      solution: null,\n      challengeType: 2,\n      files: []\n    },\n    {\n      id: 'bd7243d8c341eddeaeb5bd0f',\n      completedDate: 1497409186851,\n      solution: null,\n      challengeType: 2,\n      files: []\n    },\n    {\n      id: '576d6e1b12fd92c4207a9cbd',\n      completedDate: 1497411084548,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: 'bd7158d8c443edefaeb5bdee',\n      completedDate: 1500083078110,\n      solution: 'https://web-searcher",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 845,
    "chunk_index": 64,
    "total_chunks": 83
  },
  {
    "id": "2033ef731aa4d5654fde3ef08b812b7f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "completedDate: 1496603882718, solution: null, challengeType: 2, files: [] }, { id: 'bd7153d8c441eddfaeb5bdfe', completedDate: 1496603911653, solution: null, challengeType: 2, files: [] }, { id: 'bd7153d8c441eddfaeb5bdfd', completedDate: 1496603991361, solution: null, challengeType: 2, files: [] }, { id: 'bd7153d8c441eddfaeb5bd1f', completedDate: 1496752318061, solution: null, challengeType: 2, files: [] }, { id: 'bd7243d8c341eddeaeb5bd0f', completedDate: 1497409186851, solution: null, challengeType: 2, files: [] }, { id: '576d6e1b12fd92c4207a9cbd', completedDate: 1497411084548, solution: null, challengeType: 7, files: [] }, { id: 'bd7158d8c443edefaeb5bdee', completedDate: 1500083078110, solution: 'https://web-searcherglitch me/',\n      challengeType: 4,\n      files: []\n    },\n    {\n      id: 'bd7158d8c443eddfaeb5bcef',\n      completedDate: 1500911842686,\n      solution: null,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: 'bd7158d8c443eddfaeb5bdef',\n      completedDate: 1503596314310,\n      solution: 'https://vote-app glitch me/',\n      challengeType: 4,\n      files: []\n    },\n    {\n      id: 'bd7158d8c443eddfaeb5bd0e',\n      completedDate: 1504564623846,\n      solution: 'http://mystocks glitch me/',\n      challengeType: 4,\n      files: []\n    },\n    {\n      id: 'bd7158d8c443eddfaeb5bdff',\n      completedDate: 1509469714079,\n      solution: 'https://yoyo44 herokuapp",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 65,
    "total_chunks": 83
  },
  {
    "id": "8560cb61d7de106dfb1b19a9fd8a004f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "files: [] }, { id: '576d6e1b12fd92c4207a9cbd', completedDate: 1497411084548, solution: null, challengeType: 7, files: [] }, { id: 'bd7158d8c443edefaeb5bdee', completedDate: 1500083078110, solution: 'https://web-searcherglitch me/', challengeType: 4, files: [] }, { id: 'bd7158d8c443eddfaeb5bcef', completedDate: 1500911842686, solution: null, challengeType: 7, files: [] }, { id: 'bd7158d8c443eddfaeb5bdef', completedDate: 1503596314310, solution: 'https://vote-app glitch me/', challengeType: 4, files: [] }, { id: 'bd7158d8c443eddfaeb5bd0e', completedDate: 1504564623846, solution: 'http://mystocks glitch me/', challengeType: 4, files: [] }, { id: 'bd7158d8c443eddfaeb5bdff', completedDate: 1509469714079, solution: 'https://yoyo44 herokuappcom/',\n      challengeType: 4,\n      files: []\n    },\n    {\n      id: 'bd7158d8c443eddfaeb5bd0f',\n      completedDate: 1513966678577,\n      solution: 'https://book-fcc herokuapp",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 336,
    "chunk_index": 66,
    "total_chunks": 83
  },
  {
    "id": "0f14c3b5bc0edee385571cd62c4c33a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "[] }, { id: 'bd7158d8c443edefaeb5bdee', completedDate: 1500083078110, solution: 'https://web-searcherglitch me/', challengeType: 4, files: [] }, { id: 'bd7158d8c443eddfaeb5bcef', completedDate: 1500911842686, solution: null, challengeType: 7, files: [] }, { id: 'bd7158d8c443eddfaeb5bdef', completedDate: 1503596314310, solution: 'https://vote-app glitch me/', challengeType: 4, files: [] }, { id: 'bd7158d8c443eddfaeb5bd0e', completedDate: 1504564623846, solution: 'http://mystocks glitch me/', challengeType: 4, files: [] }, { id: 'bd7158d8c443eddfaeb5bdff', completedDate: 1509469714079, solution: 'https://yoyo44 herokuappcom/', challengeType: 4, files: [] }, { id: 'bd7158d8c443eddfaeb5bd0f', completedDate: 1513966678577, solution: 'https://book-fcc herokuappcom/',\n      challengeType: 4,\n      files: []\n    },\n    {\n      id: '561abd10cb81ac38a17513bc',\n      completedDate: 1528930836376,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: '561acd10cb82ac38a17513bc',\n      completedDate: 1532961178690,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: '561add10cb82ac38a17513bc',\n      completedDate: 1533273784477,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: '561add10cb82ac38a17523bc',\n      completedDate: 1533833480936,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: '5a553ca864b52e1d8bceea14',\n      completedDate: 1537145017407,\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: '561add10cb82ac38a17213bc',\n      completedDate: 1538239301985,\n      challengeType: 7,\n      files: []\n    },\n    {\n      completedDate: 1642566694752,\n      id: '602da04c22201c65d2a019f4',\n      files: []\n    },\n    {\n      completedDate: 1642566450182,\n      id: '602d9ff222201c65d2a019f2',\n      files: []\n    },\n    {\n      completedDate: 1642566442917,\n      id: '5fa323cdaf6a73463d590659',\n      files: []\n    },\n    {\n      completedDate: 1642566429622,\n      id: '5f32db63eb37f7e17323f459',\n      files: []\n    },\n    {\n      completedDate: 1642566416673,\n      id: '5f87ac112ae598023a42df1a',\n      files: []\n    },\n    {\n      completedDate: 1642566406680,\n      id: '5f5b969a05380d2179fe6e18',\n      files: []\n    },\n    {\n      completedDate: 1642566390464,\n      id: '602da0de22201c65d2a019f6',\n      files: []\n    },\n    {\n      completedDate: 1642566369992,\n      id: '5f9771307d4d22b9d2b75a94',\n      files: []\n    },\n    {\n      completedDate: 1642566358706,\n      id: '618590adb0730ca724e37672',\n      files: []\n    },\n    {\n      completedDate: 1642566353635,\n      id: '602da0c222201c65d2a019f5',\n      files: []\n    },\n    {\n      completedDate: 1642566336874,\n      id: '5f5904ac738bc2fa9efecf5a',\n      files: []\n    },\n    {\n      completedDate: 1642566305566,\n      id: '5f1a4ef5d5d6b5ab580fc6ae',\n      files: []\n    },\n    {\n      completedDate: 1642566297762,\n      id: '5f2c289f164c29556da632fd',\n      files: []\n    },\n    {\n      completedDate: 1642566255203,\n      id: '5ea8adfab628f68d805bfc5e',\n      files: []\n    },\n    {\n      completedDate: 1642615978255,\n      id: '606243f50267e718b1e755f4',\n      challengeType: 7,\n      files: []\n    },\n    {\n      id: '647f85d407d29547b3bee1bb',\n      solution:\n        'https://learn",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 1159,
    "chunk_index": 67,
    "total_chunks": 83
  },
  {
    "id": "1933a1948f6a541c8210deb2aed63296",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "id: '602da0de22201c65d2a019f6', files: [] }, { completedDate: 1642566369992, id: '5f9771307d4d22b9d2b75a94', files: [] }, { completedDate: 1642566358706, id: '618590adb0730ca724e37672', files: [] }, { completedDate: 1642566353635, id: '602da0c222201c65d2a019f5', files: [] }, { completedDate: 1642566336874, id: '5f5904ac738bc2fa9efecf5a', files: [] }, { completedDate: 1642566305566, id: '5f1a4ef5d5d6b5ab580fc6ae', files: [] }, { completedDate: 1642566297762, id: '5f2c289f164c29556da632fd', files: [] }, { completedDate: 1642566255203, id: '5ea8adfab628f68d805bfc5e', files: [] }, { completedDate: 1642615978255, id: '606243f50267e718b1e755f4', challengeType: 7, files: [] }, { id: '647f85d407d29547b3bee1bb', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-1 trophy",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 341,
    "chunk_index": 68,
    "total_chunks": 83
  },
  {
    "id": "ecbef22d73ec2fbe7702c392ce42fcb1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "}, { completedDate: 1642566369992, id: '5f9771307d4d22b9d2b75a94', files: [] }, { completedDate: 1642566358706, id: '618590adb0730ca724e37672', files: [] }, { completedDate: 1642566353635, id: '602da0c222201c65d2a019f5', files: [] }, { completedDate: 1642566336874, id: '5f5904ac738bc2fa9efecf5a', files: [] }, { completedDate: 1642566305566, id: '5f1a4ef5d5d6b5ab580fc6ae', files: [] }, { completedDate: 1642566297762, id: '5f2c289f164c29556da632fd', files: [] }, { completedDate: 1642566255203, id: '5ea8adfab628f68d805bfc5e', files: [] }, { completedDate: 1642615978255, id: '606243f50267e718b1e755f4', challengeType: 7, files: [] }, { id: '647f85d407d29547b3bee1bb', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-1 trophyusername=moT01&locale=en-us',\n      completedDate: 1695064765244\n    },\n    {\n      id: '647e239e8acb466c97ccbf05',\n      completedDate: 1695064829390\n    },\n    {\n      id: '647e238f8acb466c97ccbf04',\n      completedDate: 1695064849296\n    },\n    {\n      id: '647e23828acb466c97ccbf03',\n      completedDate: 1695064852639\n    },\n    {\n      id: '647e23788acb466c97ccbf02',\n      completedDate: 1695064856424\n    },\n    {\n      id: '647e235a8acb466c97ccbf00',\n      completedDate: 1695064861958\n    },\n    {\n      id: '647e236d8acb466c97ccbf01',\n      completedDate: 1695064864950\n    },\n    {\n      id: '647e21f88acb466c97ccbeeb',\n      completedDate: 1695064876515\n    },\n    {\n      id: '647e21c48acb466c97ccbee7',\n      completedDate: 1695064880298\n    },\n    {\n      id: '647e21ba8acb466c97ccbee6',\n      completedDate: 1695064883688\n    },\n    {\n      id: '647e22058acb466c97ccbeec',\n      completedDate: 1695064886045\n    },\n    {\n      id: '647e21df8acb466c97ccbee9',\n      completedDate: 1695064888237\n    },\n    {\n      id: '647e21eb8acb466c97ccbeea',\n      completedDate: 1695064890737\n    },\n    {\n      id: '647e21d08acb466c97ccbee8',\n      completedDate: 1695064894620\n    },\n    {\n      id: '647f87dc07d29547b3bee1bf',\n      solution:\n        'https://learn",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 784,
    "chunk_index": 69,
    "total_chunks": 83
  },
  {
    "id": "f4c130260f5384e1f89b80aac3609b41",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "id: '647e238f8acb466c97ccbf04', completedDate: 1695064849296 }, { id: '647e23828acb466c97ccbf03', completedDate: 1695064852639 }, { id: '647e23788acb466c97ccbf02', completedDate: 1695064856424 }, { id: '647e235a8acb466c97ccbf00', completedDate: 1695064861958 }, { id: '647e236d8acb466c97ccbf01', completedDate: 1695064864950 }, { id: '647e21f88acb466c97ccbeeb', completedDate: 1695064876515 }, { id: '647e21c48acb466c97ccbee7', completedDate: 1695064880298 }, { id: '647e21ba8acb466c97ccbee6', completedDate: 1695064883688 }, { id: '647e22058acb466c97ccbeec', completedDate: 1695064886045 }, { id: '647e21df8acb466c97ccbee9', completedDate: 1695064888237 }, { id: '647e21eb8acb466c97ccbeea', completedDate: 1695064890737 }, { id: '647e21d08acb466c97ccbee8', completedDate: 1695064894620 }, { id: '647f87dc07d29547b3bee1bf', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-2 trophy",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 70,
    "total_chunks": 83
  },
  {
    "id": "c4a4556a39f5ed95f137ce4888aab0c2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "}, { id: '647e23828acb466c97ccbf03', completedDate: 1695064852639 }, { id: '647e23788acb466c97ccbf02', completedDate: 1695064856424 }, { id: '647e235a8acb466c97ccbf00', completedDate: 1695064861958 }, { id: '647e236d8acb466c97ccbf01', completedDate: 1695064864950 }, { id: '647e21f88acb466c97ccbeeb', completedDate: 1695064876515 }, { id: '647e21c48acb466c97ccbee7', completedDate: 1695064880298 }, { id: '647e21ba8acb466c97ccbee6', completedDate: 1695064883688 }, { id: '647e22058acb466c97ccbeec', completedDate: 1695064886045 }, { id: '647e21df8acb466c97ccbee9', completedDate: 1695064888237 }, { id: '647e21eb8acb466c97ccbeea', completedDate: 1695064890737 }, { id: '647e21d08acb466c97ccbee8', completedDate: 1695064894620 }, { id: '647f87dc07d29547b3bee1bf', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-2 trophyusername=moT01&locale=en-us',\n      completedDate: 1695064900926\n    },\n    {\n      id: '647e21708acb466c97ccbee3',\n      completedDate: 1695064919032\n    },\n    {\n      id: '647e21658acb466c97ccbee2',\n      completedDate: 1695064922948\n    },\n    {\n      id: '647e214b8acb466c97ccbee0',\n      completedDate: 1695064926971\n    },\n    {\n      id: '647e218f8acb466c97ccbee5',\n      completedDate: 1695064931632\n    },\n    {\n      id: '647e1f4e8acb466c97ccbedf',\n      completedDate: 1695064937887\n    },\n    {\n      id: '647e217e8acb466c97ccbee4',\n      completedDate: 1695064943252\n    },\n    {\n      id: '647e21598acb466c97ccbee1',\n      completedDate: 1695064947396\n    },\n    {\n      id: '647f882207d29547b3bee1c0',\n      solution:\n        'https://learn",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 616,
    "chunk_index": 71,
    "total_chunks": 83
  },
  {
    "id": "298be911812752032b7c0546cc84c3dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "id: '647e21df8acb466c97ccbee9', completedDate: 1695064888237 }, { id: '647e21eb8acb466c97ccbeea', completedDate: 1695064890737 }, { id: '647e21d08acb466c97ccbee8', completedDate: 1695064894620 }, { id: '647f87dc07d29547b3bee1bf', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-2 trophyusername=moT01&locale=en-us', completedDate: 1695064900926 }, { id: '647e21708acb466c97ccbee3', completedDate: 1695064919032 }, { id: '647e21658acb466c97ccbee2', completedDate: 1695064922948 }, { id: '647e214b8acb466c97ccbee0', completedDate: 1695064926971 }, { id: '647e218f8acb466c97ccbee5', completedDate: 1695064931632 }, { id: '647e1f4e8acb466c97ccbedf', completedDate: 1695064937887 }, { id: '647e217e8acb466c97ccbee4', completedDate: 1695064943252 }, { id: '647e21598acb466c97ccbee1', completedDate: 1695064947396 }, { id: '647f882207d29547b3bee1c0', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-3 trophy",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 72,
    "total_chunks": 83
  },
  {
    "id": "8c0f18fb18888ae3590961b1319143f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "}, { id: '647e21eb8acb466c97ccbeea', completedDate: 1695064890737 }, { id: '647e21d08acb466c97ccbee8', completedDate: 1695064894620 }, { id: '647f87dc07d29547b3bee1bf', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-2 trophyusername=moT01&locale=en-us', completedDate: 1695064900926 }, { id: '647e21708acb466c97ccbee3', completedDate: 1695064919032 }, { id: '647e21658acb466c97ccbee2', completedDate: 1695064922948 }, { id: '647e214b8acb466c97ccbee0', completedDate: 1695064926971 }, { id: '647e218f8acb466c97ccbee5', completedDate: 1695064931632 }, { id: '647e1f4e8acb466c97ccbedf', completedDate: 1695064937887 }, { id: '647e217e8acb466c97ccbee4', completedDate: 1695064943252 }, { id: '647e21598acb466c97ccbee1', completedDate: 1695064947396 }, { id: '647f882207d29547b3bee1c0', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-3 trophyusername=moT01&locale=en-us',\n      completedDate: 1695064949460\n    },\n    {\n      id: '647e23188acb466c97ccbefa',\n      completedDate: 1695064958629\n    },\n    {\n      id: '647e23248acb466c97ccbefb',\n      completedDate: 1695064963473\n    },\n    {\n      id: '647e23508acb466c97ccbeff',\n      completedDate: 1695064967029\n    },\n    {\n      id: '647e232c8acb466c97ccbefc',\n      completedDate: 1695064971575\n    },\n    {\n      id: '647e23438acb466c97ccbefe',\n      completedDate: 1695064977375\n    },\n    {\n      id: '647e23368acb466c97ccbefd',\n      completedDate: 1695064981893\n    },\n    {\n      id: '647e230c8acb466c97ccbef9',\n      completedDate: 1695064984337\n    },\n    {\n      id: '647f867a07d29547b3bee1bc',\n      solution:\n        'https://learn",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 626,
    "chunk_index": 73,
    "total_chunks": 83
  },
  {
    "id": "d4a8d4a3a16eb62ee39e33784e138d3f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "id: '647e1f4e8acb466c97ccbedf', completedDate: 1695064937887 }, { id: '647e217e8acb466c97ccbee4', completedDate: 1695064943252 }, { id: '647e21598acb466c97ccbee1', completedDate: 1695064947396 }, { id: '647f882207d29547b3bee1c0', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-3 trophyusername=moT01&locale=en-us', completedDate: 1695064949460 }, { id: '647e23188acb466c97ccbefa', completedDate: 1695064958629 }, { id: '647e23248acb466c97ccbefb', completedDate: 1695064963473 }, { id: '647e23508acb466c97ccbeff', completedDate: 1695064967029 }, { id: '647e232c8acb466c97ccbefc', completedDate: 1695064971575 }, { id: '647e23438acb466c97ccbefe', completedDate: 1695064977375 }, { id: '647e23368acb466c97ccbefd', completedDate: 1695064981893 }, { id: '647e230c8acb466c97ccbef9', completedDate: 1695064984337 }, { id: '647f867a07d29547b3bee1bc', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-4 trophy",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 74,
    "total_chunks": 83
  },
  {
    "id": "d659f06ed9a33e93af1193329b0abe7f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "}, { id: '647e217e8acb466c97ccbee4', completedDate: 1695064943252 }, { id: '647e21598acb466c97ccbee1', completedDate: 1695064947396 }, { id: '647f882207d29547b3bee1c0', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-3 trophyusername=moT01&locale=en-us', completedDate: 1695064949460 }, { id: '647e23188acb466c97ccbefa', completedDate: 1695064958629 }, { id: '647e23248acb466c97ccbefb', completedDate: 1695064963473 }, { id: '647e23508acb466c97ccbeff', completedDate: 1695064967029 }, { id: '647e232c8acb466c97ccbefc', completedDate: 1695064971575 }, { id: '647e23438acb466c97ccbefe', completedDate: 1695064977375 }, { id: '647e23368acb466c97ccbefd', completedDate: 1695064981893 }, { id: '647e230c8acb466c97ccbef9', completedDate: 1695064984337 }, { id: '647f867a07d29547b3bee1bc', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-4 trophyusername=moT01&locale=en-us',\n      completedDate: 1695064986634\n    },\n    {\n      id: '647e226a8acb466c97ccbef1',\n      completedDate: 1695065005456\n    },\n    {\n      id: '647e224b8acb466c97ccbeef',\n      completedDate: 1695065010582\n    },\n    {\n      id: '647e223c8acb466c97ccbeee',\n      completedDate: 1695065016929\n    },\n    {\n      id: '647e225e8acb466c97ccbef0',\n      completedDate: 1695065019309\n    },\n    {\n      id: '647e22338acb466c97ccbeed',\n      completedDate: 1695065024538\n    },\n    {\n      id: '647f877f07d29547b3bee1be',\n      solution:\n        'https://learn",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 561,
    "chunk_index": 75,
    "total_chunks": 83
  },
  {
    "id": "adb67476c0a586445bc66391fb787b6f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "id: '647e23508acb466c97ccbeff', completedDate: 1695064967029 }, { id: '647e232c8acb466c97ccbefc', completedDate: 1695064971575 }, { id: '647e23438acb466c97ccbefe', completedDate: 1695064977375 }, { id: '647e23368acb466c97ccbefd', completedDate: 1695064981893 }, { id: '647e230c8acb466c97ccbef9', completedDate: 1695064984337 }, { id: '647f867a07d29547b3bee1bc', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-4 trophyusername=moT01&locale=en-us', completedDate: 1695064986634 }, { id: '647e226a8acb466c97ccbef1', completedDate: 1695065005456 }, { id: '647e224b8acb466c97ccbeef', completedDate: 1695065010582 }, { id: '647e223c8acb466c97ccbeee', completedDate: 1695065016929 }, { id: '647e225e8acb466c97ccbef0', completedDate: 1695065019309 }, { id: '647e22338acb466c97ccbeed', completedDate: 1695065024538 }, { id: '647f877f07d29547b3bee1be', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-5 trophy",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 378,
    "chunk_index": 76,
    "total_chunks": 83
  },
  {
    "id": "d4957c56af97a793cb14a0d023736a7c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "}, { id: '647e232c8acb466c97ccbefc', completedDate: 1695064971575 }, { id: '647e23438acb466c97ccbefe', completedDate: 1695064977375 }, { id: '647e23368acb466c97ccbefd', completedDate: 1695064981893 }, { id: '647e230c8acb466c97ccbef9', completedDate: 1695064984337 }, { id: '647f867a07d29547b3bee1bc', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-4 trophyusername=moT01&locale=en-us', completedDate: 1695064986634 }, { id: '647e226a8acb466c97ccbef1', completedDate: 1695065005456 }, { id: '647e224b8acb466c97ccbeef', completedDate: 1695065010582 }, { id: '647e223c8acb466c97ccbeee', completedDate: 1695065016929 }, { id: '647e225e8acb466c97ccbef0', completedDate: 1695065019309 }, { id: '647e22338acb466c97ccbeed', completedDate: 1695065024538 }, { id: '647f877f07d29547b3bee1be', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-5 trophyusername=moT01&locale=en-us',\n      completedDate: 1695065026465\n    },\n    {\n      id: '647e22c08acb466c97ccbef7',\n      completedDate: 1695065036502\n    },\n    {\n      id: '647e22b38acb466c97ccbef6',\n      completedDate: 1695065038793\n    },\n    {\n      id: '647e22a08acb466c97ccbef5',\n      completedDate: 1695065045073\n    },\n    {\n      id: '647e228a8acb466c97ccbef3',\n      completedDate: 1695065047728\n    },\n    {\n      id: '647e22958acb466c97ccbef4',\n      completedDate: 1695065052249\n    },\n    {\n      id: '647e22778acb466c97ccbef2',\n      completedDate: 1695065057986\n    },\n    {\n      id: '647f86ff07d29547b3bee1bd',\n      solution:\n        'https://learn",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 595,
    "chunk_index": 77,
    "total_chunks": 83
  },
  {
    "id": "3406238c3c6dcaa5ec2003217d625d24",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "id: '647e224b8acb466c97ccbeef', completedDate: 1695065010582 }, { id: '647e223c8acb466c97ccbeee', completedDate: 1695065016929 }, { id: '647e225e8acb466c97ccbef0', completedDate: 1695065019309 }, { id: '647e22338acb466c97ccbeed', completedDate: 1695065024538 }, { id: '647f877f07d29547b3bee1be', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-5 trophyusername=moT01&locale=en-us', completedDate: 1695065026465 }, { id: '647e22c08acb466c97ccbef7', completedDate: 1695065036502 }, { id: '647e22b38acb466c97ccbef6', completedDate: 1695065038793 }, { id: '647e22a08acb466c97ccbef5', completedDate: 1695065045073 }, { id: '647e228a8acb466c97ccbef3', completedDate: 1695065047728 }, { id: '647e22958acb466c97ccbef4', completedDate: 1695065052249 }, { id: '647e22778acb466c97ccbef2', completedDate: 1695065057986 }, { id: '647f86ff07d29547b3bee1bd', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-6 trophy username=moT01&locale=en-us',\n      completedDate: 1695065060157\n    },\n    {\n      id: '647e22d18acb466c97ccbef8',\n      challengeType: 17,\n      completedDate: 1695065170436,\n      examResults: {\n        numberOfCorrectAnswers: 70,\n        numberOfQuestionsInExam: 80,\n        percentCorrect: 87",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 78,
    "total_chunks": 83
  },
  {
    "id": "730e122e71eee27d7d9a14d2f3f736e9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "{ id: '647f877f07d29547b3bee1be', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-5 trophyusername=moT01&locale=en-us', completedDate: 1695065026465 }, { id: '647e22c08acb466c97ccbef7', completedDate: 1695065036502 }, { id: '647e22b38acb466c97ccbef6', completedDate: 1695065038793 }, { id: '647e22a08acb466c97ccbef5', completedDate: 1695065045073 }, { id: '647e228a8acb466c97ccbef3', completedDate: 1695065047728 }, { id: '647e22958acb466c97ccbef4', completedDate: 1695065052249 }, { id: '647e22778acb466c97ccbef2', completedDate: 1695065057986 }, { id: '647f86ff07d29547b3bee1bd', solution: 'https://learnmicrosoft com/api/gamestatus/achievements/learn wwl get-started-c-sharp-part-6 trophy username=moT01&locale=en-us', completedDate: 1695065060157 }, { id: '647e22d18acb466c97ccbef8', challengeType: 17, completedDate: 1695065170436, examResults: { numberOfCorrectAnswers: 70, numberOfQuestionsInExam: 80, percentCorrect: 875,\n        passingPercent: 70,\n        passed: true,\n        examTimeInSeconds: 2195\n      }\n    },\n    {\n      completedDate: 1695065177436,\n      id: '647f7da207d29547b3bee1ba',\n      challengeType: 7,\n      files: []\n    },\n    {\n      completedDate: 1729240849345,\n      id: '671141d8e32fe934c26fa1be',\n      challengeType: 0,\n      files: []\n    },\n    {\n      completedDate: 1729240849345,\n      id: '671141f948cbab359e74cc93',\n      challengeType: 0,\n      files: []\n    },\n    {\n      completedDate: 1729240849345,\n      id: '671141feba228a35cefba82d',\n      challengeType: 0,\n      files: []\n    },\n    {\n      completedDate: 1729240849345,\n      id: '671144cdcc01d73f7dd79dc9',\n      challengeType: 0,\n      files: []\n    },\n    {\n      completedDate: 1729240849345,\n      id: '6734ddabad59e593a49afafe'\n    },\n    {\n      completedDate: 1729240849345,\n      id: '6734e2c5780912abd874e79c'\n    },\n    {\n      completedDate: 1729240849345,\n      id: '6763500bd5a85d5898cc21a9'\n    },\n    {\n      completedDate: 1729240849345,\n      id: '672d26269456511aa3db614d'\n    },\n    {\n      completedDate: 1729240849345,\n      id: '672d45583fd75a504136fbbb'\n    },\n    {\n      completedDate: 1729240849345,\n      id: '672d45651d83b450801efb3a'\n    },\n    {\n      completedDate: 1729240849345,\n      id: '672d456f4ac35950b300e93f'\n    }\n  ],\n  completedDailyCodingChallenges: [\n    {\n      id: '6814d8e1516e86b171929de4',\n      completedDate: 1729240849345,\n      languages: ['javascript']\n    }\n  ],\n  completedExams: [\n    {\n      id: '647e22d18acb466c97ccbef8',\n      challengeType: 17,\n      completedDate: 1695065170436,\n      examResults: {\n        numberOfCorrectAnswers: 70,\n        numberOfQuestionsInExam: 80,\n        percentCorrect: 87",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 942,
    "chunk_index": 79,
    "total_chunks": 83
  },
  {
    "id": "6e54638bfeb69c776f114ebb1aea4fda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "challengeType: 0, files: [] }, { completedDate: 1729240849345, id: '6734ddabad59e593a49afafe' }, { completedDate: 1729240849345, id: '6734e2c5780912abd874e79c' }, { completedDate: 1729240849345, id: '6763500bd5a85d5898cc21a9' }, { completedDate: 1729240849345, id: '672d26269456511aa3db614d' }, { completedDate: 1729240849345, id: '672d45583fd75a504136fbbb' }, { completedDate: 1729240849345, id: '672d45651d83b450801efb3a' }, { completedDate: 1729240849345, id: '672d456f4ac35950b300e93f' } ], completedDailyCodingChallenges: [ { id: '6814d8e1516e86b171929de4', completedDate: 1729240849345, languages: ['javascript'] } ], completedExams: [ { id: '647e22d18acb466c97ccbef8', challengeType: 17, completedDate: 1695065170436, examResults: { numberOfCorrectAnswers: 70, numberOfQuestionsInExam: 80, percentCorrect: 875,\n        passingPercent: 70,\n        passed: true,\n        examTimeInSeconds: 2195\n      }\n    }\n  ],\n  portfolio: [],\n  yearsTopContributor: ['2019'],\n  rand: 0",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 361,
    "chunk_index": 80,
    "total_chunks": 83
  },
  {
    "id": "7f887d59a036e335549c743e24e08e57",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "'6734e2c5780912abd874e79c' }, { completedDate: 1729240849345, id: '6763500bd5a85d5898cc21a9' }, { completedDate: 1729240849345, id: '672d26269456511aa3db614d' }, { completedDate: 1729240849345, id: '672d45583fd75a504136fbbb' }, { completedDate: 1729240849345, id: '672d45651d83b450801efb3a' }, { completedDate: 1729240849345, id: '672d456f4ac35950b300e93f' } ], completedDailyCodingChallenges: [ { id: '6814d8e1516e86b171929de4', completedDate: 1729240849345, languages: ['javascript'] } ], completedExams: [ { id: '647e22d18acb466c97ccbef8', challengeType: 17, completedDate: 1695065170436, examResults: { numberOfCorrectAnswers: 70, numberOfQuestionsInExam: 80, percentCorrect: 875, passingPercent: 70, passed: true, examTimeInSeconds: 2195 } } ], portfolio: [], yearsTopContributor: ['2019'], rand: 06126749173148205,\n  theme: 'default',\n  keyboardShortcuts: false,\n  profileUI: {\n    isLocked: false,\n    showAbout: true,\n    showCerts: true,\n    showDonation: true,\n    showHeatMap: true,\n    showLocation: true,\n    showName: true,\n    showPoints: true,\n    showPortfolio: true,\n    showTimeLine: true\n  },\n  badges: {\n    coreTeam: []\n  },\n  isDonating: false,\n  emailAuthLinkTTL: null,\n  emailVerifyTTL: null,\n  externalId: '',\n  unsubscribeId: 'tBX8stC5jiustPBteF2mV'\n};\n\nmodule.exports.unclaimedUser = {\n  ...module.exports.fullyCertifiedUser,\n  id: unclaimedUserId,\n  isFrontEndLibsCert: false\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 81,
    "total_chunks": 83
  },
  {
    "id": "a05a1eaeafb49234db5ef1f86a380eaf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
    "source_type": "git_repo",
    "title": "user-data",
    "content": "1695065170436, examResults: { numberOfCorrectAnswers: 70, numberOfQuestionsInExam: 80, percentCorrect: 875, passingPercent: 70, passed: true, examTimeInSeconds: 2195 } } ], portfolio: [], yearsTopContributor: ['2019'], rand: 06126749173148205, theme: 'default', keyboardShortcuts: false, profileUI: { isLocked: false, showAbout: true, showCerts: true, showDonation: true, showHeatMap: true, showLocation: true, showName: true, showPoints: true, showPortfolio: true, showTimeLine: true }, badges: { coreTeam: [] }, isDonating: false, emailAuthLinkTTL: null, emailVerifyTTL: null, externalId: '', unsubscribeId: 'tBX8stC5jiustPBteF2mV' }; module.exports.unclaimedUser = { ...module.exports.fullyCertifiedUser, id: unclaimedUserId, isFrontEndLibsCert: false };\n\nmodule.exports.almostFullyCertifiedUser = {\n  ...module.exports.fullyCertifiedUser,\n  id: almostFullyCertifiedUserId,\n  completedChallenges:\n    module.exports.fullyCertifiedUser.completedChallenges.filter(\n      challenge => challenge.id !== 'bd7158d8c442eddfaeb5bd13'\n    )\n};\n\nmodule.exports.userIds = userIds;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 267519,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\scripts\\seed\\user-data.js",
      "source_type": "git_repo"
    },
    "token_count": 305,
    "chunk_index": 82,
    "total_chunks": 83
  },
  {
    "id": "305c5b58a477a472652369c5a54c74ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-yaml.md",
    "source_type": "git_repo",
    "title": "--description--",
    "content": "--description--\nParagraph 1\nhtml\ncode example\nyaml\nkey:\n- subkey: value\nanothersubkey: another value\n--instructions--\nParagraph 0\nhtml\ncode example 0\n--hints--\nFirst hint\njs\n// test code\nSecond hint with code\njs\n// more test code\n--seed--\n--seed-contents--\n```html\n```\ncss\nbody {\nbackground: green;\n}\njs\nvar x = 'y';",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 448,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\__fixtures__\\with-yaml.md",
      "source_type": "git_repo"
    },
    "token_count": 98,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5bc8b77668908ea7eae41d732e14cc82",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\before-heading.js",
    "source_type": "git_repo",
    "title": "before-heading",
    "content": "const find = require('unist-util-find');\nconst findAllBefore = require('unist-util-find-all-before');\n\nfunction getAllBefore(tree, marker) {\n  const start = find(tree, {\n    type: 'heading',\n    children: [\n      {\n        type: 'text',\n        value: marker\n      }\n    ]\n  });\n\nif (!start) return [];\n\n// reverse because it goes up the tree backwards and adds nodes in that order\n  return findAllBefore(tree, start).reverse();\n}\n\nmodule.exports = getAllBefore;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 467,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\before-heading.js",
      "source_type": "git_repo"
    },
    "token_count": 105,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7fe2daf9e4b7ec92b4eb7eff5e11b953",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\find-all.js",
    "source_type": "git_repo",
    "title": "find-all",
    "content": "const visit = require('unist-util-visit');\nconst _ = require('lodash');\n\n/**\n * Finds all nodes in a tree that match a given condition. This is a trivial\n * extension of `unist-util-find` that returns all matching nodes.\n *\n * @param {Object} tree - The unist tree to search through.\n * @param {Function|Object} condition - The condition to match nodes\n * against. This can be a function that accepts a single node argument or an object to match.\n * @returns {Array} An array of nodes that match the condition.\n */\nfunction findAll(tree, condition) {\n  const predicate = _.iteratee(condition);\n  const results = [];\n  visit(tree, node => {\n    if (predicate(node)) {\n      results.push(node);\n    }\n\nreturn visit.CONTINUE;\n  });\n\nreturn results;\n}\n\nmodule.exports.findAll = findAll;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 789,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\find-all.js",
      "source_type": "git_repo"
    },
    "token_count": 178,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a8f80911cfb434557cf7c87fd39bf360",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\before-heading.test.js",
    "source_type": "git_repo",
    "title": "before-heading.test",
    "content": "const isArray = require('lodash/isArray');\n\nconst parseFixture = require('../../__fixtures__/parse-fixture');\nconst getAllBefore = require('./before-heading');\n\ndescribe('before-headings', () => {\n  let simpleAst;\n\nbeforeAll(async () => {\n    simpleAst = await parseFixture('simple.md');\n  });\n\nit('should return an array', () => {\n    expect.assertions(1);\n    const actual = getAllBefore(simpleAst, '--hints--');\n    expect(isArray(actual)).toBe(true);\n  });\n\nit('should return an empty array if the marker is not present', () => {\n    expect.assertions(2);\n    const actual = getAllBefore(simpleAst, '--not-a-marker--');\n    expect(isArray(actual)).toBe(true);\n    expect(actual.length).toBe(0);\n  });\n\nit('should include the whole AST before the marker', () => {\n    expect.assertions(1);\n    const actual = getAllBefore(simpleAst, '--hints--');\n    expect(actual).toHaveLength(6);\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 904,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\before-heading.test.js",
      "source_type": "git_repo"
    },
    "token_count": 212,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d70f48c4f8cbf6f6a30a74b17c33d484",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\find-all.test.js",
    "source_type": "git_repo",
    "title": "find-all.test",
    "content": "const { findAll } = require('./find-all');\n\nconst testTree = {\n  type: 'root',\n  children: [\n    {\n      type: 'heading',\n      depth: 1,\n      children: [{ type: 'text', value: 'test', testId: 1 }]\n    },\n    {\n      type: 'paragraph',\n      children: [{ type: 'text', value: 'different', testId: 2 }]\n    },\n    {\n      type: 'heading',\n      depth: 2,\n      children: [{ type: 'text', value: 'test', testId: 3 }]\n    },\n    {\n      type: 'heading',\n      depth: 1,\n      children: [{ type: 'text', value: 'test', testId: 4 }]\n    }\n  ]\n};\n\ndescribe('findAll', () => {\n  it('should return an array', () => {\n    expect(findAll(testTree, () => false)).toEqual([]);\n  });\n  it('should return an array of nodes that match the test', () => {\n    expect(findAll(testTree, { type: 'text', value: 'test' })).toEqual([\n      { type: 'text', value: 'test', testId: 1 },\n      { type: 'text', value: 'test', testId: 3 },\n      { type: 'text', value: 'test', testId: 4 }\n    ]);\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 980,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\find-all.test.js",
      "source_type": "git_repo"
    },
    "token_count": 296,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e68d4ca87d2dca282b5f4c979ec972f0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-file-visitor.test.js",
    "source_type": "git_repo",
    "title": "get-file-visitor.test",
    "content": "describe('get-file-visitor', () => {\n  it('should join code with newlines', () => {\n    /* i.e. if you've got two js code blocks it should do this\n\n```js\n    one\n    ```\n\n```js\n    two\n    ```\n\nbecome\n\n```js\n    one\n    two\n    ```\n\nnot\n\n```js\n    onetwo\n    ```\n    or\n    ```js\n\none\n    two\n    ```\n    */\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 346,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-file-visitor.test.js",
      "source_type": "git_repo"
    },
    "token_count": 105,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2ca2a9b48640a68cce63beacd80207a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-id.js",
    "source_type": "git_repo",
    "title": "get-id",
    "content": "// getId expects the image reference node to be the sole node in a paragraph\nfunction getId(node) {\n  const { type, name, attributes } = node;\n  if (type !== 'leafDirective' || name !== 'id' || !attributes) return null;\n  return attributes.id;\n}\n\nmodule.exports = getId;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 271,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-id.js",
      "source_type": "git_repo"
    },
    "token_count": 66,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "52a37ab7d68e0167980fe30844d9eb92",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-file-visitor.js",
    "source_type": "git_repo",
    "title": "get-file-visitor",
    "content": "const { isEmpty } = require('lodash');\nconst is = require('unist-util-is');\nconst position = require('unist-util-position');\n\nconst getId = require('./get-id');\n\nconst keyToSection = {\n  head: 'before-user-code',\n  tail: 'after-user-code'\n};\nconst supportedLanguages = ['js', 'css', 'html', 'jsx', 'py', 'ts'];\nconst longToShortLanguages = {\n  javascript: 'js',\n  typescript: 'ts',\n  python: 'py'\n};\n\nfunction defaultFile(lang, id) {\n  return {\n    ext: lang,\n    name: getFilenames(lang),\n    contents: '',\n    head: '',\n    tail: '',\n    id\n  };\n}\n\nfunction getFilenames(lang) {\n  const langToFilename = {\n    js: 'script',\n    css: 'styles',\n    py: 'main'\n  };\n  return langToFilename[lang] ?? 'index';\n}\n\nfunction getFileVisitor(seeds, seedKey, validate) {\n  return (node, index, parent) => {\n    if (is(node, 'root')) return;\n    if (is(node, 'code')) {\n      codeToData(node, seeds, seedKey, validate);\n      return;\n    }\n    idToData(node, index, parent, seeds);\n  };\n}\n\nfunction codeToData(node, seeds, seedKey, validate) {\n  if (validate) validate(node);\n  const lang = node.lang;\n  const shortLang = longToShortLanguages[lang] ?? lang;\n  if (!supportedLanguages.includes(shortLang))\n    throw Error(`On line ${\n      position.start(node).line\n    } '${shortLang}' is not a supported language.\n Please use one of js, css, html, jsx or py\n`);\n\nconst fileId = `index${shortLang}`;\n  const id = seeds[fileId] ? seeds[fileId].id : '';\n  // the contents will be missing if there is an id preceding this code\n  // block.\n  if (!seeds[fileId]) {\n    seeds[fileId] = defaultFile(shortLang, id);\n  }\n  if (isEmpty(node.value) && seedKey !== 'contents') {\n    const section = keyToSection[seedKey];\n    throw Error(`Empty code block in --${section}-- section`);\n  }",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2696,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-file-visitor.js",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1c997c8aacb339933562c20e8effde35",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-file-visitor.js",
    "source_type": "git_repo",
    "title": "get-file-visitor",
    "content": "line ${ position.start(node).line } '${shortLang}' is not a supported language. Please use one of js, css, html, jsx or py `); const fileId = `index${shortLang}`; const id = seeds[fileId] ? seeds[fileId].id : ''; // the contents will be missing if there is an id preceding this code // block. if (!seeds[fileId]) { seeds[fileId] = defaultFile(shortLang, id); } if (isEmpty(node.value) && seedKey !== 'contents') { const section = keyToSection[seedKey]; throw Error(`Empty code block in --${section}-- section`); }\n\nseeds[fileId][seedKey] = isEmpty(seeds[fileId][seedKey])\n    ? node.value\n    : seeds[fileId][seedKey] + '\\n' + node.value;\n}\n\nfunction idToData(node, index, parent, seeds) {\n  const id = getId(node);\n\n// If this is reached, the node type is neither root nor code. If it is not\n  // an id, there must be a syntax error.\n  if (!id) {\n    throw Error(\n      'Unexpected syntax in seed/solution. Must be ::id{#id} or a code ' +\n        'block (```) \\n'\n    );\n  }\n  const codeNode = parent.children[index + 1];\n  if (codeNode && is(codeNode, 'code')) {\n    const shortLang = longToShortLanguages[codeNode.lang] ?? codeNode.lang;\n    const fileKey = `index${shortLang}`;\n    if (seeds[fileKey]) throw Error('::id{#id}s must come before code blocks');\n    seeds[fileKey] = defaultFile(shortLang, id);\n  } else {\n    throw Error('::id{#id}s must come before code blocks');\n  }\n}\n\nmodule.exports.getFileVisitor = getFileVisitor;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2696,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-file-visitor.js",
      "source_type": "git_repo"
    },
    "token_count": 396,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5093ca4b1de86079d0ff5ea0183198e6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-id.test.js",
    "source_type": "git_repo",
    "title": "get-id.test",
    "content": "const parseFixture = require('../../__fixtures__/parse-fixture');\nconst getId = require('./get-id');\n\ndescribe('get-id', () => {\n  let idNode, imageNode, multipleChildrenNode;\n  beforeAll(async () => {\n    const withIdNode = await parseFixture('with-id-node.md');\n    idNode = withIdNode.children[0];\n    imageNode = withIdNode.children[1];\n    multipleChildrenNode = withIdNode.children[2];\n  });\n  it('should return a string', () => {\n    expect.assertions(1);\n    const actual = getId(idNode);\n    expect(typeof actual).toBe('string');\n  });\n\nit('should get the expected identifier', () => {\n    expect.assertions(1);\n    const actual = getId(idNode);\n    expect(actual).toBe('html-key');\n  });\n\nit('should return null if the node does contain an id', () => {\n    expect.assertions(1);\n    const actual = getId(imageNode);\n    expect(actual).toBeNull();\n  });\n\n// TODO: bin this (and the json!) after development (it'll be a silly test\n  // once we're using directives)\n  it('should ignore image nodes', () => {\n    expect.assertions(1);\n    const actual = getId(imageNode);\n    expect(actual).toBeNull();\n  });\n\n// TODO: bin this (and the json!) after development (it'll be a silly test\n  // once we're using directives)\n\n// TODO: do we want to fail silently? Might it be better to output warnings\n  // or perhaps even stop the parser? Probably warnings if anything.\n  it('should ignore paragraphs that contain more than the id element', () => {\n    expect.assertions(1);\n    const actual = getId(multipleChildrenNode);\n    expect(actual).toBeNull();\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1575,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-id.test.js",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "645da136d7ec52bf5e72ef762dabcf2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-paragraph-content.js",
    "source_type": "git_repo",
    "title": "get-paragraph-content",
    "content": "const mdastToHtml = require('./mdast-to-html');\n\nfunction getParagraphContent(node) {\n  return node.type === 'paragraph' ? mdastToHtml(node.children) : null;\n}\n\nmodule.exports.getParagraphContent = getParagraphContent;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 219,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-paragraph-content.js",
      "source_type": "git_repo"
    },
    "token_count": 50,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c4a3bcd7612c3987e0d1cce78bcecbe3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-paragraph-content.test.js",
    "source_type": "git_repo",
    "title": "get-paragraph-content.test",
    "content": "const parseFixture = require('../../__fixtures__/parse-fixture');\nconst { getParagraphContent } = require('./get-paragraph-content');\n\ndescribe('getParagraphContent', () => {\n  let simpleAST;\n\nbeforeAll(async () => {\n    simpleAST = await parseFixture('simple.md');\n  });\n\nit('should return the content of a paragraph node', () => {\n    const paragraphNode = simpleAST.children[1];\n    expect(paragraphNode.type).toBe('paragraph');\n    expect(getParagraphContent(paragraphNode)).toEqual('Paragraph 1');\n  });\n\nit('should return null if the node is not a paragraph', () => {\n    const headingNode = simpleAST.children[0];\n    expect(headingNode.type).toBe('heading');\n    expect(getParagraphContent(headingNode)).toBeNull();\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 740,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-paragraph-content.test.js",
      "source_type": "git_repo"
    },
    "token_count": 166,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d9adef9d6d7f2b2b04cc8d86f211d056",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-section.js",
    "source_type": "git_repo",
    "title": "get-section",
    "content": "const find = require('unist-util-find');\nconst findAfter = require('unist-util-find-after');\nconst findAllAfter = require('unist-util-find-all-after');\nconst between = require('unist-util-find-all-between');\nconst { findAll } = require('./find-all');\n\nconst isMarker = node => {\n  if (node.children && node.children[0]) {\n    const child = node.children[0];\n    return (\n      child.type === 'text' &&\n      child.value.startsWith('--') &&\n      child.value.endsWith('--') &&\n      node.type === 'heading'\n    );\n  }\n  return false;\n};\n\nfunction _getSection(tree) {\n  return start => {\n    if (!start) return [];\n\nconst isEnd = node => {\n      return node.depth <= start.depth && isMarker(node);\n    };\n\nconst end = findAfter(tree, start, isEnd);\n\nconst targetNodes = end\n      ? between(tree, start, end)\n      : findAllAfter(tree, start);\n    return targetNodes;\n  };\n}\n\nconst startNode = marker => ({\n  type: 'heading',\n  children: [\n    {\n      type: 'text',\n      value: marker\n    }\n  ]\n});\n\nfunction getSection(tree, marker) {\n  const start = find(tree, startNode(marker));\n  return _getSection(tree)(start);\n}\n\nfunction getAllSections(tree, marker) {\n  const starts = findAll(tree, startNode(marker));\n  return starts.map(_getSection(tree));\n}\n\nmodule.exports = { getSection, getAllSections, isMarker };",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1324,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-section.js",
      "source_type": "git_repo"
    },
    "token_count": 311,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f51ddda4293f952860855dcad2f3c63a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\mdast-to-html.js",
    "source_type": "git_repo",
    "title": "mdast-to-html",
    "content": "const hastToHTML = require('hast-util-to-html');\nconst { root } = require('mdast-builder');\nconst mdastToHast = require('mdast-util-to-hast');\n\nfunction mdastToHTML(nodes) {\n  if (!Array.isArray(nodes))\n    throw Error('mdastToHTML expects an array argument');\n  // - the 'nodes' are children, so first need embedding in a parent\n\nreturn hastToHTML(mdastToHast(root(nodes), { allowDangerousHtml: true }), {\n    allowDangerousHtml: true\n  });\n}\n\nmodule.exports = mdastToHTML;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 477,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\mdast-to-html.js",
      "source_type": "git_repo"
    },
    "token_count": 126,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "215a36e5e7232fa970a21c09dc43a8a8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-section.test.js",
    "source_type": "git_repo",
    "title": "get-section.test",
    "content": "const isArray = require('lodash/isArray');\nconst { root } = require('mdast-builder');\nconst find = require('unist-util-find');\n\nconst parseFixture = require('../../__fixtures__/parse-fixture');\nconst { getSection } = require('./get-section');\n\ndescribe('getSection', () => {\n  let simpleAst, extraHeadingAst;\n\nbeforeAll(async () => {\n    extraHeadingAst = await parseFixture('with-extra-heading.md');\n    simpleAst = await parseFixture('simple.md');\n  });\n\nit('should return an array', () => {\n    expect.assertions(1);\n    const actual = getSection(simpleAst, '--hints--');\n    expect(isArray(actual)).toBe(true);\n  });\n\nit('should return an empty array if the marker is not present', () => {\n    expect.assertions(2);\n    const actual = getSection(simpleAst, '--not-a-marker--');\n    expect(isArray(actual)).toBe(true);\n    expect(actual.length).toBe(0);\n  });\n\nit('should include any headings without markers', () => {\n    expect.assertions(1);\n    const actual = getSection(extraHeadingAst, '--description--');\n    expect(\n      find(root(actual), {\n        value: 'this should still be inside --description--'\n      })\n    ).not.toBeUndefined();\n  });\n\nit('should include the rest of the AST if there is no end marker', () => {\n    expect.assertions(2);\n    const actual = getSection(extraHeadingAst, '--solutions--');\n    expect(actual.length > 0).toBe(true);\n    expect(\n      find(root(actual), { value: 'body {\\n  background: white;\\n}' })\n    ).not.toBeUndefined();\n  });\n\nit('should match the hints snapshot', () => {\n    const actual = getSection(simpleAst, '--hints--');\n    expect(actual).toMatchSnapshot();\n  });\n  it('should match the instructions snapshot', () => {\n    const actual = getSection(simpleAst, '--instructions--');\n    expect(actual).toMatchSnapshot();\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1805,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\get-section.test.js",
      "source_type": "git_repo"
    },
    "token_count": 421,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f5918e1031858873717cb21ebf59db93",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\split-on-thematic-break.js",
    "source_type": "git_repo",
    "title": "split-on-thematic-break",
    "content": "const is = require('unist-util-is');\n\n// TODO: specific tests for this would be nice, even though it is somewhat\n// covered by the plugins that use it.\nfunction splitOnThematicBreak(nodes) {\n  return nodes.reduce(\n    (prev, curr) => {\n      if (is(curr, 'thematicBreak')) {\n        return [...prev, []];\n      } else {\n        const first = prev.slice(0, -1);\n        const last = prev.slice(-1)[0];\n        return [...first, [...last, curr]];\n      }\n    },\n    [[]]\n  );\n}\n\nexports.splitOnThematicBreak = splitOnThematicBreak;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 530,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\split-on-thematic-break.js",
      "source_type": "git_repo"
    },
    "token_count": 136,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "78de1c899dd3aa875a612f403fa54441",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\mdast-to-html.test.js",
    "source_type": "git_repo",
    "title": "mdast-to-html.test",
    "content": "const parseFixture = require('../../__fixtures__/parse-fixture');\nconst mdastToHTML = require('./mdast-to-html');\n\ndescribe('mdast-to-html', () => {\n  let mdastMixedNodes, singleNode, inlineHTMLNodes;\n\nbeforeAll(async () => {\n    const mdastMixedAST = await parseFixture('mixed-nodes.md');\n    const mdastInlineHTMLAST = await parseFixture('inline-html.md');\n    mdastMixedNodes = mdastMixedAST.children;\n    singleNode = mdastMixedAST.children[0];\n    inlineHTMLNodes = mdastInlineHTMLAST.children;\n  });\n\nit('should return a string', () => {\n    expect.assertions(1);\n    const actual = mdastToHTML(mdastMixedNodes);\n    expect(typeof actual).toBe('string');\n  });\n\nit('throws if it is not passed an array', () => {\n    expect.assertions(1);\n    expect(() => mdastToHTML(singleNode)).toThrow(\n      'mdastToHTML expects an array argument'\n    );\n  });\n\nit('should not escape html', () => {\n    const actual = mdastToHTML(mdastMixedNodes);\n    expect(actual).toBe(`<p>Paragraph 1</p>\n<p>Third <em>hint</em> with <code>code</code> and <code>inline code</code></p>`);\n  });\n\nit('should put inline html inside the enclosing paragraph', () => {\n    const actual = mdastToHTML(inlineHTMLNodes);\n    expect(actual).toBe(\n      '<p><code> code in </code> code tags <em>emphasis</em> followed' +\n        ' by <div><span>some nested html </span></div></p>'\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1376,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-parser\\parser\\plugins\\utils\\mdast-to-html.test.js",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7e962ef45f0dce1e38d377542d54cbf9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\create-intro.ts",
    "source_type": "git_repo",
    "title": "create-intro",
    "content": "import path from 'node:path';\nimport fs from 'node:fs/promises';\n\nfunction introTemplate(\n  superBlock: string,\n  block: string,\n  title: string\n): string {\n  return `---\ntitle: Introduction to the ${title}\nblock: ${block}\nsuperBlock: ${superBlock}\n---\n\n## Introduction to the ${title}\n\nThis page is for the ${title}\n`;\n}\n\nexport async function createIntroMD(\n  superBlock: string,\n  block: string,\n  title: string\n) {\n  const dirPath = path.resolve(\n    __dirname,\n    `../../../client/src/pages/learn/${superBlock}/${block}/`\n  );\n  await fs.mkdir(dirPath, { recursive: true });\n\nconst filePath = path.resolve(dirPath, 'index.md');\n  await fs.writeFile(filePath, introTemplate(superBlock, block, title), {\n    encoding: 'utf8'\n  });\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 739,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\create-intro.ts",
      "source_type": "git_repo"
    },
    "token_count": 186,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "39c27a7584a62874cc59efdc27a4797e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-arg-value.ts",
    "source_type": "git_repo",
    "title": "get-arg-value",
    "content": "const isIntRE = /^\\d+$/;\nfunction getArgValue(argv: string[] = []): number {\n  if (argv.length !== 3) throw Error('only one argument allowed');\n  const value = argv[2];\n  const intValue = parseInt(value, 10);\n  if (!isIntRE.test(value) || !Number.isInteger(intValue))\n    throw Error('argument must be an integer');\n  return intValue;\n}\n\nexport { getArgValue };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 362,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-arg-value.ts",
      "source_type": "git_repo"
    },
    "token_count": 96,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d14ec189e882fec3260e102ba13b5ee4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-arg-value.test.ts",
    "source_type": "git_repo",
    "title": "get-arg-value.test",
    "content": "import { getArgValue } from './get-arg-value';\n\ndescribe('getArgValue helper', () => {\n  it('should throw if there no arguments', () => {\n    const args = ['/Path/to/node', '/Path/to/script'];\n    expect(() => getArgValue(args)).toThrow('only one argument allowed');\n  });\n\nit('should throw if the argument is not an integer', () => {\n    expect.assertions(3);\n    const args = ['/Path/to/node', '/Path/to/script', 'num=4'];\n    expect(() => getArgValue(args)).toThrow('argument must be an integer');\n    const args2 = ['/Path/to/node', '/Path/to/script', '4.1'];\n    expect(() => getArgValue(args2)).toThrow('argument must be an integer');\n    const args3 = ['/Path/to/node', '/Path/to/script', '4'];\n    expect(getArgValue(args3)).toBe(4);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 754,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-arg-value.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 197,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "616b2eea27f55d379f982c74b0ba0569",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-base-meta.ts",
    "source_type": "git_repo",
    "title": "get-base-meta",
    "content": "const baseMeta = {\n  name: '',\n  isUpcomingChange: true,\n  dashedName: '',\n  superBlock: '',\n  order: 42,\n  helpCategory: '',\n  challengeOrder: [\n    {\n      id: '',\n      title: ''\n    }\n  ]\n};\n\nconst stepMeta = {\n  ...baseMeta,\n  usesMultifileEditor: true,\n  hasEditableBoundaries: true\n};\n\nconst quizMeta = {\n  ...baseMeta,\n  blockType: 'quiz',\n  blockLayout: 'link'\n};\n\nconst languageMeta = {\n  ...baseMeta,\n  blockLayout: 'dialogue-grid'\n};\n\nexport const getBaseMeta = (projectType: 'Step' | 'Quiz' | 'Language') => {\n  switch (projectType) {\n    case 'Step':\n      return stepMeta;\n    case 'Quiz':\n      return quizMeta;\n    case 'Language':\n      return languageMeta;\n    default:\n      return stepMeta;\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 719,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-base-meta.ts",
      "source_type": "git_repo"
    },
    "token_count": 202,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "064a9a9a7ca1edad47b35f5aac7e0e1f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-order.ts",
    "source_type": "git_repo",
    "title": "get-challenge-order",
    "content": "import { readdir } from 'fs/promises';\nimport { join } from 'path';\n\nimport matter from 'gray-matter';\n\nimport { getProjectPath } from './get-project-info';\nimport { getMetaData } from './project-metadata';\n\nexport const getChallengeOrderFromFileTree = async (): Promise<\n  { id: string; title: string }[]\n> => {\n  const path = getProjectPath();\n  const fileList = await readdir(path);\n  const challengeOrder = fileList\n    .map(file => {\n      return matter.read(join(path, file));\n    })\n    .map(({ data }) => ({\n      id: data.id as string,\n      title: data.title as string\n    }));\n  return challengeOrder;\n};\n\nexport const getChallengeOrderFromMeta = (): {\n  id: string;\n  title: string;\n}[] => {\n  const meta = getMetaData();\n  return meta.challengeOrder.map(({ id, title }) => ({\n    id,\n    title\n  }));\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 817,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-order.ts",
      "source_type": "git_repo"
    },
    "token_count": 200,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5a2d7e769633779d22a2ec64333fad18",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-order.test.ts",
    "source_type": "git_repo",
    "title": "get-challenge-order.test",
    "content": "import fs from 'fs';\nimport { join } from 'path';\n\nimport {\n  getChallengeOrderFromFileTree,\n  getChallengeOrderFromMeta\n} from './get-challenge-order';\n\nconst basePath = join(\n  process.cwd(),\n  '__fixtures__' + process.env.JEST_WORKER_ID\n);\nconst commonPath = join(basePath, 'curriculum', 'challenges');\n\nconst block = 'project-get-challenge-order';\nconst metaPath = join(commonPath, '_meta', block);\nconst superBlockPath = join(\n  commonPath,\n  'english',\n  'superblock-get-challenge-order'\n);\nconst projectPath = join(superBlockPath, block);\n\ndescribe('get-challenge-order helper', () => {\n  beforeEach(() => {\n    fs.mkdirSync(superBlockPath, { recursive: true });\n    fs.mkdirSync(projectPath, { recursive: true });\n    fs.mkdirSync(metaPath, { recursive: true });\n  });\n  describe('getChallengeOrderFromMeta helper', () => {\n    beforeEach(() => {\n      fs.writeFileSync(\n        join(projectPath, 'this-is-a-challenge.md'),\n        '---\\nid: 1\\ntitle: This is a Challenge\\n---',\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(projectPath, 'what-a-cool-thing.md'),\n        '---\\nid: 100\\ntitle: What a Cool Thing\\n---',\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(projectPath, 'i-dunno.md'),\n        '---\\nid: 2\\ntitle: I Dunno\\n---'\n      );\n      fs.writeFileSync(\n        join(metaPath, 'meta.json'),\n        `{\n      \"id\": \"mock-id\",\n      \"challengeOrder\": [{\"id\": \"1\", \"title\": \"This title is wrong\"}, {\"id\": \"2\", \"title\": \"I Dunno\"}, {\"id\": \"100\", \"title\": \"What a Cool Thing\"}]}`,\n        'utf-8'\n      );\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3437,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-order.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "620621fdf80dce34e64a45137b3ab22b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-order.test.ts",
    "source_type": "git_repo",
    "title": "get-challenge-order.test",
    "content": "recursive: true }); fs.mkdirSync(metaPath, { recursive: true }); }); describe('getChallengeOrderFromMeta helper', () => { beforeEach(() => { fs.writeFileSync( join(projectPath, 'this-is-a-challenge.md'), '---\\nid: 1\\ntitle: This is a Challenge\\n---', 'utf-8' ); fs.writeFileSync( join(projectPath, 'what-a-cool-thing.md'), '---\\nid: 100\\ntitle: What a Cool Thing\\n---', 'utf-8' ); fs.writeFileSync( join(projectPath, 'i-dunno.md'), '---\\nid: 2\\ntitle: I Dunno\\n---' ); fs.writeFileSync( join(metaPath, 'meta.json'), `{ \"id\": \"mock-id\", \"challengeOrder\": [{\"id\": \"1\", \"title\": \"This title is wrong\"}, {\"id\": \"2\", \"title\": \"I Dunno\"}, {\"id\": \"100\", \"title\": \"What a Cool Thing\"}]}`, 'utf-8' ); });\n\nit('should load the file order', () => {\n      process.env.CALLING_DIR = projectPath;\n      const challengeOrder = getChallengeOrderFromMeta();\n      expect(challengeOrder).toEqual([\n        { id: '1', title: 'This title is wrong' },\n        { id: '2', title: 'I Dunno' },\n        { id: '100', title: 'What a Cool Thing' }\n      ]);\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3437,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-order.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "ea672e98358983b6dbb61e3a2cc22151",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-order.test.ts",
    "source_type": "git_repo",
    "title": "get-challenge-order.test",
    "content": "I Dunno\\n---' ); fs.writeFileSync( join(metaPath, 'meta.json'), `{ \"id\": \"mock-id\", \"challengeOrder\": [{\"id\": \"1\", \"title\": \"This title is wrong\"}, {\"id\": \"2\", \"title\": \"I Dunno\"}, {\"id\": \"100\", \"title\": \"What a Cool Thing\"}]}`, 'utf-8' ); }); it('should load the file order', () => { process.env.CALLING_DIR = projectPath; const challengeOrder = getChallengeOrderFromMeta(); expect(challengeOrder).toEqual([ { id: '1', title: 'This title is wrong' }, { id: '2', title: 'I Dunno' }, { id: '100', title: 'What a Cool Thing' } ]); }); });\n\ndescribe('getChallengeOrderFromFileTree helper', () => {\n    beforeEach(() => {\n      fs.writeFileSync(\n        join(projectPath, 'step-001.md'),\n        '---\\nid: a8d97bd4c764e91f9d2bda01\\ntitle: Step 1\\n---',\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(projectPath, 'step-002.md'),\n        '---\\nid: a6b0bb188d873cb2c8729495\\ntitle: Step 2\\n---',\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(projectPath, 'step-003.md'),\n        '---\\nid: a5de63ebea8dbee56860f4f2\\ntitle: Step 3\\n---'\n      );\n      fs.writeFileSync(\n        join(metaPath, 'meta.json'),\n        `{\n      \"id\": \"mock-id\",\n      \"challengeOrder\": [{\"id\": \"a8d97bd4c764e91f9d2bda01\", \"title\": \"Step 1\"}, {\"id\": \"a6b0bb188d873cb2c8729495\", \"title\": \"Step 3\"}, {\"id\": \"a5de63ebea8dbee56860f4f2\", \"title\": \"Step 2\"}]}`,\n        'utf-8'\n      );\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3437,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-order.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "cdb8a4f63bd16da407ff31cbbe39ab0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-order.test.ts",
    "source_type": "git_repo",
    "title": "get-challenge-order.test",
    "content": "'2', title: 'I Dunno' }, { id: '100', title: 'What a Cool Thing' } ]); }); }); describe('getChallengeOrderFromFileTree helper', () => { beforeEach(() => { fs.writeFileSync( join(projectPath, 'step-001.md'), '---\\nid: a8d97bd4c764e91f9d2bda01\\ntitle: Step 1\\n---', 'utf-8' ); fs.writeFileSync( join(projectPath, 'step-002.md'), '---\\nid: a6b0bb188d873cb2c8729495\\ntitle: Step 2\\n---', 'utf-8' ); fs.writeFileSync( join(projectPath, 'step-003.md'), '---\\nid: a5de63ebea8dbee56860f4f2\\ntitle: Step 3\\n---' ); fs.writeFileSync( join(metaPath, 'meta.json'), `{ \"id\": \"mock-id\", \"challengeOrder\": [{\"id\": \"a8d97bd4c764e91f9d2bda01\", \"title\": \"Step 1\"}, {\"id\": \"a6b0bb188d873cb2c8729495\", \"title\": \"Step 3\"}, {\"id\": \"a5de63ebea8dbee56860f4f2\", \"title\": \"Step 2\"}]}`, 'utf-8' ); });\n\nit('should load the file order', async () => {\n      expect.assertions(1);\n      process.env.CALLING_DIR = projectPath;\n      const challengeOrder = await getChallengeOrderFromFileTree();\n      expect(challengeOrder).toEqual([\n        { id: 'a8d97bd4c764e91f9d2bda01', title: 'Step 1' },\n        { id: 'a6b0bb188d873cb2c8729495', title: 'Step 2' },\n        { id: 'a5de63ebea8dbee56860f4f2', title: 'Step 3' }\n      ]);\n    });\n  });\n  afterEach(() => {\n    delete process.env.CALLING_DIR;\n    try {\n      fs.rmSync(basePath, { recursive: true });\n    } catch (err) {\n      console.log(err);\n      console.log('Could not remove fixtures folder.');\n    }\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3437,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-order.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "90e43c63195036bff9dc3ff66a60305d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-template.ts",
    "source_type": "git_repo",
    "title": "get-challenge-template",
    "content": "/* eslint-disable @typescript-eslint/no-base-to-string */\nimport ObjectID from 'bson-objectid';\n\nconst sanitizeTitle = (title: string) => {\n  return title.includes(':') || title.includes(\"'\") ? `\"${title}\"` : title;\n};\n\ninterface ChallengeOptions {\n  challengeId: ObjectID;\n  title: string;\n  dashedName: string;\n  challengeType: string;\n  questionCount?: number;\n}\n\nconst buildFrontMatter = ({\n  challengeId,\n  title,\n  dashedName,\n  challengeType\n}: ChallengeOptions) => `---\nid: ${challengeId.toString()}\ntitle: ${sanitizeTitle(title)}\nchallengeType: ${challengeType}\ndashedName: ${dashedName}\n---`;\n\nconst buildFrontMatterWithVideo = ({\n  challengeId,\n  title,\n  dashedName,\n  challengeType\n}: ChallengeOptions) => `---\nid: ${challengeId.toString()}\nvideoId: ADD YOUR VIDEO ID HERE!!!\ntitle: ${sanitizeTitle(title)}\nchallengeType: ${challengeType}\ndashedName: ${dashedName}\n---`;\n\nconst getLegacyChallengeTemplate = (\n  options: ChallengeOptions\n): string => `${buildFrontMatter(options)}\n\n# --description--\n\n${options.title} description.\n\n# --instructions--\n\n${options.title} instructions.\n\n# --hints--\n\nTest 1\n\n\\`\\`\\`js\n\n\\`\\`\\`\n\n# --seed--\n\n\\`\\`\\`js\n\n\\`\\`\\`\n\n# --solutions--\n\n\\`\\`\\`js\n\n\\`\\`\\`\n`;\n\nconst getQuizChallengeTemplate = (\n  options: ChallengeOptions\n): string => `${buildFrontMatter(options)}\n\n# --description--\n\nTo pass the quiz, you must correctly answer at least ${options.questionCount! == 20 ? '18' : '9'} of the ${options.questionCount!.toString()} questions below.\n\n# --quizzes--\n\n## --quiz--\n\n${`### --question--\n\n#### --text--\n\nPlaceholder question\n\n#### --distractors--\n\nPlaceholder distractor 1\n\n---\n\nPlaceholder distractor 2\n\n---\n\nPlaceholder distractor 3\n\n#### --answer--\n\nPlaceholder answer\n\n`.repeat(options.questionCount! - 1)}\n### --question--\n\n#### --text--\n\nPlaceholder question\n\n#### --distractors--\n\nPlaceholder distractor 1\n\n---\n\nPlaceholder distractor 2\n\n---\n\nPlaceholder distractor 3\n\n#### --answer--\n\nPlaceholder answer\n`;\n\nconst getVideoChallengeTemplate = (\n  options: ChallengeOptions\n): string => `${buildFrontMatterWithVideo(options)}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6196,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-template.ts",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "7433ecbd4e12129f90c004da50114e73",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-template.ts",
    "source_type": "git_repo",
    "title": "get-challenge-template",
    "content": "${options.questionCount! == 20 ? '18' : '9'} of the ${options.questionCount!.toString()} questions below. # --quizzes-- ## --quiz-- ${`### --question-- #### --text-- Placeholder question #### --distractors-- Placeholder distractor 1 --- Placeholder distractor 2 --- Placeholder distractor 3 #### --answer-- Placeholder answer `.repeat(options.questionCount! - 1)} ### --question-- #### --text-- Placeholder question #### --distractors-- Placeholder distractor 1 --- Placeholder distractor 2 --- Placeholder distractor 3 #### --answer-- Placeholder answer `; const getVideoChallengeTemplate = ( options: ChallengeOptions ): string => `${buildFrontMatterWithVideo(options)}\n\n# --description--\n\n${options.title} description.\n\n# --question--\n\n## --text--\n\n${options.title} question?\n\n## --answers--\n\nAnswer 1\n\n---\n\nAnswer 2\n\n---\n\nAnswer 3\n\n## --video-solution--\n\n1\n`;\n\nconst getAssignmentChallengeTemplate = (\n  options: ChallengeOptions\n): string => `${buildFrontMatter(options)}\n\n# --description--\n\n${options.title} description.\n\n# --assignment--\n\n${options.title} assignment!\n\n# --question--\n\n## --text--\n\n${options.title} question?\n\n## --answers--\n\nAnswer 1\n\n---\n\nAnswer 2\n\n---\n\nAnswer 3\n\n## --video-solution--\n\n1\n`;\n\nconst getMultipleChoiceChallengeTemplate = (\n  options: ChallengeOptions\n): string => `${buildFrontMatter(options)}\n\n# --description--\n\n${options.title} description.\n\n# --questions--\n\n## --text--\n\n${options.title} question?\n\n## --answers--\n\nAnswer 1\n\n### --feedback--\n\nInclude feedback for answer 1 here, but remove these last four lines if this is the correct answer.\n\n---\n\nAnswer 2\n\n### --feedback--\n\nInclude feedback for answer 2 here, but remove these last four lines if this is the correct answer.\n\n---\n\nAnswer 3\n\n### --feedback--\n\nInclude feedback for answer 3 here, but remove these last four lines if this is the correct answer.\n\n---\n\nAnswer 4\n\n### --feedback--\n\nInclude feedback for answer 4 here, but remove these last four lines if this is the correct answer.\n\n## --video-solution--\n\n1\n`;\n\nconst getFillInTheBlankChallengeTemplate = (\n  options: ChallengeOptions\n): string => `${buildFrontMatter(options)}\n\n# --description--\n\n${options.title} description.\n\n# --fillInTheBlank--",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6196,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-template.ts",
      "source_type": "git_repo"
    },
    "token_count": 508,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "68024d243f6945dca7115eeae726ab17",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-template.ts",
    "source_type": "git_repo",
    "title": "get-challenge-template",
    "content": "these last four lines if this is the correct answer. --- Answer 3 ### --feedback-- Include feedback for answer 3 here, but remove these last four lines if this is the correct answer. --- Answer 4 ### --feedback-- Include feedback for answer 4 here, but remove these last four lines if this is the correct answer. ## --video-solution-- 1 `; const getFillInTheBlankChallengeTemplate = ( options: ChallengeOptions ): string => `${buildFrontMatter(options)} # --description-- ${options.title} description. # --fillInTheBlank--\n\n## --sentence--\n\n\\`Fill BLANK the BLANK sentence.\\`\n\n## --blanks--\n\n\\`in\\`\n\n### --feedback--\n\nIt's \\`in\\`\n\n---\n\n\\`blank\\`\n`;\n\nconst getDialogueChallengeTemplate = (\n  options: ChallengeOptions\n): string => `${buildFrontMatter(options)}\n\n# --description--\n\nWatch the video below to understand the context of the upcoming lessons.\n\n# --assignment--\n\nWatch the video.\n\n# --scene--\n\n\\`\\`\\`json\n{\n  \"setup\": {\n    \"background\": \"chaos.png\",\n    \"characters\": [\n      {\n        \"character\": \"David\",\n        \"position\": {\"x\":50,\"y\":80,\"z\":8},\n        \"opacity\": 0\n      }\n    ],\n    \"audio\": {\n      \"filename\": \"1.1-1.mp3\",\n      \"startTime\": 1,\n      \"startTimestamp\": 5.7,\n      \"finishTimestamp\": 6.48\n    }\n  },\n  \"commands\": [\n    {\n      \"character\": \"David\",\n      \"opacity\": 1,\n      \"startTime\": 0\n    },\n    {\n      \"character\": \"David\",\n      \"startTime\": 1,\n      \"finishTime\": 0.78,\n      \"dialogue\": {\n        \"text\": \"I'm Tom.\",\n        \"align\": \"center\"\n      }\n    },\n    {\n      \"character\": \"Tom\",\n      \"opacity\": 0,\n      \"startTime\": 1.28\n    }\n  ]\n}\n\\`\\`\\`\n`;\n\nconst getGenericChallengeTemplate = (\n  options: ChallengeOptions\n): string => `${buildFrontMatter(options)}\n\n# --description--\n\nGeneric challenge description.\n\n# --assignment--\n\nDo the assignment.\n`;\n\ntype Template = (opts: ChallengeOptions) => string;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6196,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-template.ts",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "dcab47a3161b9cec97d53e23f54163f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-template.ts",
    "source_type": "git_repo",
    "title": "get-challenge-template",
    "content": "\"filename\": \"1.1-1.mp3\", \"startTime\": 1, \"startTimestamp\": 5.7, \"finishTimestamp\": 6.48 } }, \"commands\": [ { \"character\": \"David\", \"opacity\": 1, \"startTime\": 0 }, { \"character\": \"David\", \"startTime\": 1, \"finishTime\": 0.78, \"dialogue\": { \"text\": \"I'm Tom.\", \"align\": \"center\" } }, { \"character\": \"Tom\", \"opacity\": 0, \"startTime\": 1.28 } ] } \\`\\`\\` `; const getGenericChallengeTemplate = ( options: ChallengeOptions ): string => `${buildFrontMatter(options)} # --description-- Generic challenge description. # --assignment-- Do the assignment. `; type Template = (opts: ChallengeOptions) => string;\n\nexport const getTemplate = (challengeType: string): Template => {\n  const template = challengeTypeToTemplate[challengeType];\n  if (!template) {\n    throw Error(`Challenge type ${challengeType} has no template.\nTo create one, please add a new function to this file and include it in the challengeTypeToTemplate map.\n`);\n  }\n  return template;\n};\n\n/**\n * This should be kept in parity with the challengeTypes in the\n * client.\n *\n * Keys are explicitly marked null so we know the challenge type itself\n * exists, and can expand this to use the correct template later on.\n */",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6196,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-template.ts",
      "source_type": "git_repo"
    },
    "token_count": 309,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "93ed976ac0781af8aff2303ed4f695e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-template.ts",
    "source_type": "git_repo",
    "title": "get-challenge-template",
    "content": "if (!template) { throw Error(`Challenge type ${challengeType} has no template. To create one, please add a new function to this file and include it in the challengeTypeToTemplate map. `); } return template; }; /** * This should be kept in parity with the challengeTypes in the * client. * * Keys are explicitly marked null so we know the challenge type itself * exists, and can expand this to use the correct template later on. */\n\nconst challengeTypeToTemplate: {\n  [key: string]: null | Template;\n} = {\n  0: getLegacyChallengeTemplate,\n  1: getLegacyChallengeTemplate,\n  2: null,\n  3: getLegacyChallengeTemplate,\n  4: getLegacyChallengeTemplate,\n  5: getLegacyChallengeTemplate,\n  6: getLegacyChallengeTemplate,\n  7: null,\n  8: getQuizChallengeTemplate,\n  9: null,\n  10: null,\n  11: getVideoChallengeTemplate,\n  12: null,\n  13: null,\n  14: null,\n  15: getAssignmentChallengeTemplate,\n  16: null,\n  17: null,\n  18: null,\n  19: getMultipleChoiceChallengeTemplate,\n  20: null,\n  21: getDialogueChallengeTemplate,\n  22: getFillInTheBlankChallengeTemplate,\n  23: null,\n  24: getGenericChallengeTemplate\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6196,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-challenge-template.ts",
      "source_type": "git_repo"
    },
    "token_count": 308,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "54a1793d7ea0d0db7312e8d3cbb35e8a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-file-name.ts",
    "source_type": "git_repo",
    "title": "get-file-name",
    "content": "import { readdir } from 'fs/promises';\nimport matter from 'gray-matter';\nimport { getProjectPath } from './get-project-info';\n\nexport const getFileName = async (id: string): Promise<string | null> => {\n  const path = getProjectPath();\n  const files = await readdir(path);\n  for (const file of files) {\n    if (!file.endsWith('.md')) {\n      continue;\n    }\n    let frontMatter = null;\n    try {\n      frontMatter = matter.read(`${path}${file}`);\n    } catch (_err) {\n      frontMatter = null;\n    }\n    if (String(frontMatter?.data.id) === id) {\n      return file;\n    }\n  }\n  return null;\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 593,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-file-name.ts",
      "source_type": "git_repo"
    },
    "token_count": 154,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "76ee584682298354283ce2ee0007c88c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-last-step-file-number.ts",
    "source_type": "git_repo",
    "title": "get-last-step-file-number",
    "content": "import { last } from 'lodash';\nimport { getMetaData } from './project-metadata';\n\nfunction getLastStep(): { stepNum: number } {\n  const meta = getMetaData();\n  const challengeOrder = meta.challengeOrder;\n  const step = last(challengeOrder);\n  if (!step) throw new Error('No steps found');\n\nreturn { stepNum: challengeOrder.length };\n}\n\nexport { getLastStep };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 362,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-last-step-file-number.ts",
      "source_type": "git_repo"
    },
    "token_count": 83,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8e928505a96ee4a84f085370f20c10ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-file-name.test.ts",
    "source_type": "git_repo",
    "title": "get-file-name.test",
    "content": "import fs from 'fs';\nimport { join } from 'path';\n\nimport { getFileName } from './get-file-name';\n\nconst basePath = join(\n  process.cwd(),\n  '__fixtures__' + process.env.JEST_WORKER_ID\n);\nconst commonPath = join(basePath, 'curriculum', 'challenges');\n\nconst block = 'project-get-file-name';\nconst metaPath = join(commonPath, '_meta', block);\nconst superBlockPath = join(commonPath, 'english', 'superblock-get-file-name');\nconst projectPath = join(superBlockPath, block);\n\ndescribe('getFileName helper', () => {\n  beforeEach(() => {\n    fs.mkdirSync(superBlockPath, { recursive: true });\n    fs.mkdirSync(projectPath, { recursive: true });\n    fs.mkdirSync(metaPath, { recursive: true });\n    fs.writeFileSync(\n      join(projectPath, 'this-is-a-challenge.md'),\n      '---\\nid: a\\ntitle: This is a Challenge\\n---',\n      'utf-8'\n    );\n    fs.writeFileSync(\n      join(projectPath, 'what-a-cool-thing.md'),\n      '---\\nid: b\\ntitle: What a Cool Thing\\n---',\n      'utf-8'\n    );\n    fs.writeFileSync(\n      join(projectPath, 'i-dunno.md'),\n      '---\\nid: c\\ntitle: I Dunno\\n---',\n      'utf-8'\n    );\n    fs.writeFileSync(\n      join(metaPath, 'meta.json'),\n      `{\n        \"id\": \"mock-id\",\n        \"challengeOrder\": [{\"id\": \"a\", \"title\": \"This title is wrong\"}, {\"id\": \"b\", \"title\": \"I Dunno\"}, {\"id\": \"c\", \"title\": \"What a Cool Thing\"}}}]}`,\n      'utf-8'\n    );\n  });\n\nit('should return the file name if found', async () => {\n    expect.assertions(1);\n    process.env.CALLING_DIR = projectPath;\n    const fileName = await getFileName('a');\n    expect(fileName).toEqual('this-is-a-challenge.md');\n  });\n\nit('should return null if not found', async () => {\n    expect.assertions(1);\n    process.env.CALLING_DIR = projectPath;\n    const fileName = await getFileName('d');\n    expect(fileName).toBeNull();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2047,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-file-name.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2259839cb6d6f74e47c78a34e2c369ca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-file-name.test.ts",
    "source_type": "git_repo",
    "title": "get-file-name.test",
    "content": "I Dunno\\n---', 'utf-8' ); fs.writeFileSync( join(metaPath, 'meta.json'), `{ \"id\": \"mock-id\", \"challengeOrder\": [{\"id\": \"a\", \"title\": \"This title is wrong\"}, {\"id\": \"b\", \"title\": \"I Dunno\"}, {\"id\": \"c\", \"title\": \"What a Cool Thing\"}}}]}`, 'utf-8' ); }); it('should return the file name if found', async () => { expect.assertions(1); process.env.CALLING_DIR = projectPath; const fileName = await getFileName('a'); expect(fileName).toEqual('this-is-a-challenge.md'); }); it('should return null if not found', async () => { expect.assertions(1); process.env.CALLING_DIR = projectPath; const fileName = await getFileName('d'); expect(fileName).toBeNull(); });\n\nafterEach(() => {\n    delete process.env.CALLING_DIR;\n    try {\n      fs.rmSync(basePath, { recursive: true });\n    } catch (err) {\n      console.log(err);\n      console.log('Could not remove fixtures folder.');\n    }\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2047,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-file-name.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 241,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4a620b46ec252c460881a4e4d6f0fdeb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-project-info.test.ts",
    "source_type": "git_repo",
    "title": "get-project-info.test",
    "content": "import { getProjectName, getProjectPath } from './get-project-info';\n\ndescribe('getProjectPath helper', () => {\n  it('should return the calling dir path', () => {\n    const mockCallingDir = 'calling/dir';\n    const expected = `${mockCallingDir}/`;\n\n// Add mock to test condition\n    process.env.CALLING_DIR = mockCallingDir;\n\nexpect(getProjectPath()).toEqual(expected);\n\n// Remove mock to not affect other tests\n    delete process.env.CALLING_DIR;\n  });\n\nit('should return the projects absolute path', () => {\n    const expected = `${process.cwd()}/`;\n\nexpect(getProjectPath()).toEqual(expected);\n  });\n});\n\ndescribe('getProjectName helper', () => {\n  it('should return the last path segment of the calling dir', () => {\n    const mockCallingDir = 'calling/dir';\n    const expected = 'dir';\n\n// Add mock to test condition\n    process.env.CALLING_DIR = mockCallingDir;\n\nexpect(getProjectName()).toEqual(expected);\n\n// Remove mock to not affect other tests\n    delete process.env.CALLING_DIR;\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1031,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-project-info.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 231,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9bc888920e79a9b336bdba6625ec0d54",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-project-info.ts",
    "source_type": "git_repo",
    "title": "get-project-info",
    "content": "export function getProjectPath(): string {\n  return (process.env.CALLING_DIR || process.cwd()) + '/';\n}\n\nexport function getProjectName(): string {\n  return getProjectPath().split('/').slice(-2)[0];\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 201,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-project-info.ts",
      "source_type": "git_repo"
    },
    "token_count": 48,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c83cbb9a5172ae90e803aa4a06b70053",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-step-template.test.ts",
    "source_type": "git_repo",
    "title": "get-step-template.test",
    "content": "import ObjectID from 'bson-objectid';\nimport { getStepTemplate } from './get-step-template';\n\n// Note: evaluates at highlevel the process, but seedHeads and seedTails could\n// be tested if more specifics are needed.\ndescribe('getStepTemplate util', () => {\n  it('should be able to create a markdown', () => {\n    const baseOutput = `---\nid: 60d4ebe4801158d1abe1b18f\ntitle: Step 5\nchallengeType: 0\ndashedName: step-5\n---\n\n# --description--\n\nstep 5 instructions\n\n# --hints--\n\nTest 1\n\n\\`\\`\\`js\n\n\\`\\`\\`\n\n# --seed--\n\n## --seed-contents--\n\n\\`\\`\\`html\n--fcc-editable-region--\n\n--fcc-editable-region--\n\\`\\`\\`\\n`;\n\nconst props = {\n      challengeId: new ObjectID('60d4ebe4801158d1abe1b18f'),\n      challengeSeeds: {\n        indexhtml: {\n          contents: '',\n          editableRegionBoundaries: [0, 2],\n          ext: 'html',\n          head: '',\n          id: '',\n          key: 'indexhtml',\n          name: 'index',\n          tail: ''\n        }\n      },\n      stepNum: 5,\n      challengeType: 0\n    };\n\nexpect(getStepTemplate(props)).toEqual(baseOutput);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1067,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-step-template.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 301,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8508be15f927b138f5ab824e67ed01c1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\insert-erms.test.ts",
    "source_type": "git_repo",
    "title": "insert-erms.test",
    "content": "import { insertErms } from './insert-erms';\n\ndescribe('insertErms helper', () => {\n  const code = `<h1>Hello World</h1>\n<main>\n<h2>CatPhotoApp</h2>\n<img src=\"https://www.bit.ly/fcc-relaxing-cat\" alt=\"A cute orange cat lying on its back.\">\n<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>\n<p>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>\n</main>`;\n\nit('should throw error if erm length is less than 2', () => {\n    const items = [[], [1]];\n\nitems.forEach(item => {\n      expect(() => {\n        insertErms(code, item);\n      }).toThrow();\n    });\n  });\n\nit('should update code with markers if provided', () => {\n    const newCode = `--fcc-editable-region--\n<h1>Hello World</h1>\n<main>\n<h2>CatPhotoApp</h2>\n<img src=\"https://www.bit.ly/fcc-relaxing-cat\" alt=\"A cute orange cat lying on its back.\">\n<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>\n<p>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>\n--fcc-editable-region--\n</main>`;\n\nexpect(insertErms(code, [0, 7])).toEqual(newCode);\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2061,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\insert-erms.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 361,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "440ae648b2483ea7b479e2792eeaeaf3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\insert-erms.test.ts",
    "source_type": "git_repo",
    "title": "insert-erms.test",
    "content": "if provided', () => { const newCode = `--fcc-editable-region-- <h1>Hello World</h1> <main> <h2>CatPhotoApp</h2> <img src=\"https://www.bit.ly/fcc-relaxing-cat\" alt=\"A cute orange cat lying on its back.\"> <p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p> <p>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p> --fcc-editable-region-- </main>`; expect(insertErms(code, [0, 7])).toEqual(newCode); });\n\nit('should update code with 2 markers if more are provided', () => {\n    const newCode = `<h1>Hello World</h1>\n<main>\n--fcc-editable-region--\n<h2>CatPhotoApp</h2>\n--fcc-editable-region--\n<img src=\"https://www.bit.ly/fcc-relaxing-cat\" alt=\"A cute orange cat lying on its back.\">\n<p>Kitty ipsum dolor sit amet, shed everywhere shed everywhere stretching attack your ankles chase the red dot, hairball run catnip eat the grass sniff.</p>\n<p>Purr jump eat the grass rip the couch scratched sunbathe, shed everywhere rip the couch sleep in the sink fluffy fur catnip scratched.</p>\n</main>`;\n\nexpect(insertErms(code, [2, 4, 6, 7])).toEqual(newCode);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2061,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\insert-erms.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 338,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5b90f73d59fb7fcfbd6ea402b0476109",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-step-template.ts",
    "source_type": "git_repo",
    "title": "get-step-template",
    "content": "/* eslint-disable @typescript-eslint/no-base-to-string */\nimport ObjectID from 'bson-objectid';\nimport { insertErms } from './insert-erms';\n\n// Builds a block\nfunction getCodeBlock(label: string, content?: string) {\n  return `\\`\\`\\`${label}\n${typeof content !== 'undefined' ? content : ''}\n\\`\\`\\`\\n`;\n}\n\n// Builds a section\nfunction getSeedSection(content: string, label: string) {\n  return content\n    ? `\n\n## --${label}--\n\n${content}`\n    : '';\n}\n\ntype StepOptions = {\n  challengeId: ObjectID;\n  challengeSeeds: Record<string, ChallengeSeed>;\n  stepNum: number;\n  challengeType: number;\n  isFirstChallenge?: boolean;\n};\n\nexport interface ChallengeSeed {\n  contents: string;\n  ext: string;\n  editableRegionBoundaries: number[];\n  head?: string;\n  tail?: string;\n}\n\n// Build the base markdown for a step\nfunction getStepTemplate({\n  challengeId,\n  challengeSeeds,\n  stepNum,\n  challengeType,\n  isFirstChallenge = false\n}: StepOptions): string {\n  const seedTexts = Object.values(challengeSeeds)\n    .map(({ contents, ext, editableRegionBoundaries }: ChallengeSeed) => {\n      let fullContents = contents;\n      if (editableRegionBoundaries.length >= 2) {\n        fullContents = insertErms(contents, editableRegionBoundaries);\n      }\n      return getCodeBlock(ext, fullContents);\n    })\n    .join('\\n');\n\nconst seedHeads = Object.values(challengeSeeds)\n    .filter(({ head }: ChallengeSeed) => head)\n    .map(({ ext, head }: ChallengeSeed) => getCodeBlock(ext, head))\n    .join('\\n');\n\nconst seedTails = Object.values(challengeSeeds)\n    .filter(({ tail }: ChallengeSeed) => tail)\n    .map(({ ext, tail }: ChallengeSeed) => getCodeBlock(ext, tail))\n    .join('\\n');\n\nconst stepDescription = `step ${stepNum} instructions`;\n  const seedChallengeSection = getSeedSection(seedTexts, 'seed-contents');\n  const seedHeadSection = getSeedSection(seedHeads, 'before-user-code');\n  const seedTailSection = getSeedSection(seedTails, 'after-user-code');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2492,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-step-template.ts",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "78d8a1486c5bee6ee15cc830d3b6afd3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-step-template.ts",
    "source_type": "git_repo",
    "title": "get-step-template",
    "content": "= contents; if (editableRegionBoundaries.length >= 2) { fullContents = insertErms(contents, editableRegionBoundaries); } return getCodeBlock(ext, fullContents); }) .join('\\n'); const seedHeads = Object.values(challengeSeeds) .filter(({ head }: ChallengeSeed) => head) .map(({ ext, head }: ChallengeSeed) => getCodeBlock(ext, head)) .join('\\n'); const seedTails = Object.values(challengeSeeds) .filter(({ tail }: ChallengeSeed) => tail) .map(({ ext, tail }: ChallengeSeed) => getCodeBlock(ext, tail)) .join('\\n'); const stepDescription = `step ${stepNum} instructions`; const seedChallengeSection = getSeedSection(seedTexts, 'seed-contents'); const seedHeadSection = getSeedSection(seedHeads, 'before-user-code'); const seedTailSection = getSeedSection(seedTails, 'after-user-code');\n\nconst demoString = isFirstChallenge\n    ? `\n# demoType can either be 'onClick' or 'onLoad'. If the project or lab doesn't have a preview, delete the property\ndemoType: onClick`\n    : '';\n\nreturn (\n    `---\nid: ${challengeId.toString()}\ntitle: Step ${stepNum}\nchallengeType: ${challengeType}\ndashedName: step-${stepNum}${demoString}\n---\n\n# --description--\n\n${stepDescription}\n\n# --hints--\n\nTest 1\n\n${getCodeBlock('js')}\n# --seed--` +\n    seedChallengeSection +\n    seedHeadSection +\n    seedTailSection\n  );\n}\n\nexport { getStepTemplate };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2492,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\get-step-template.ts",
      "source_type": "git_repo"
    },
    "token_count": 334,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ae8cb2cefa1033616de3881447369375",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\insert-erms.ts",
    "source_type": "git_repo",
    "title": "insert-erms",
    "content": "// Update given value with markers (labels)\nconst insertErms = (seedCode: string, erms: number[]): string => {\n  if (!erms || erms.length <= 1) {\n    throw Error('erms should be provided');\n  }\n\nif (erms.length <= 1) {\n    throw Error('erms should contain 2 elements');\n  }\n\nconst separator = '\\n';\n  const lines = seedCode.split(separator);\n  const markerLabel = '--fcc-editable-region--';\n\n// Generate a version of seed code with the erm markers\n  const newSeedCode = erms\n    .slice(0, 2)\n    .reduce((acc, erm) => {\n      if (Number.isInteger(erm)) {\n        acc.splice(erm, 0, markerLabel);\n      }\n\nreturn acc;\n    }, lines)\n    .join(separator);\n\nreturn newSeedCode;\n};\n\nexport { insertErms };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 715,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\insert-erms.ts",
      "source_type": "git_repo"
    },
    "token_count": 193,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8ed0c6ea62634b225efe29f29238bdf3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\new-task-prompts.ts",
    "source_type": "git_repo",
    "title": "new-task-prompts",
    "content": "import { prompt } from 'inquirer';\nimport { challengeTypes } from '../../../shared/config/challenge-types';\n\nconst taskChallenges = [\n  challengeTypes.multipleChoice,\n  challengeTypes.fillInTheBlank,\n  challengeTypes.generic\n];\n\nexport const newTaskPrompts = async (): Promise<{\n  challengeType: string;\n}> => {\n  const challengeType = await prompt<{ value: string }>({\n    name: 'value',\n    message: 'What type of task challenge is this?',\n    type: 'list',\n    choices: Object.entries(challengeTypes)\n      .filter(entry => taskChallenges.includes(entry[1]))\n      .map(([key, value]) => ({\n        name: key,\n        value\n      }))\n  });\n\nreturn {\n    challengeType: challengeType.value\n  };\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 702,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\new-task-prompts.ts",
      "source_type": "git_repo"
    },
    "token_count": 162,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8e2f6f4a4f1b8e12d3c1f3cdf1c2327e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\new-challenge-prompts.ts",
    "source_type": "git_repo",
    "title": "new-challenge-prompts",
    "content": "import { prompt } from 'inquirer';\nimport { challengeTypes } from '../../../shared/config/challenge-types';\nimport { getLastStep } from './get-last-step-file-number';\n\nexport const newChallengePrompts = async (): Promise<{\n  title: string;\n  dashedName: string;\n  challengeType: string;\n}> => {\n  const challengeType = await prompt<{ value: string }>({\n    name: 'value',\n    message: 'What type of challenge is this?',\n    type: 'list',\n    choices: Object.entries(challengeTypes).map(([key, value]) => ({\n      name: key,\n      value\n    }))\n  });\n\nconst lastStep = getLastStep().stepNum;\n  const defaultTitle = `Step ${lastStep + 1}`;\n  const defaultDashedName = `step-${lastStep + 1}`;\n\nconst dashedName = await prompt<{ value: string }>({\n    name: 'value',\n    message: 'What is the dashed name (in kebab-case) for this challenge?',\n    validate: (block: string) => {\n      if (!block.length) {\n        return 'please enter a dashed name';\n      }\n      if (/[^a-z0-9-]/.test(block)) {\n        return 'please use alphanumerical characters and kebab case';\n      }\n      return true;\n    },\n    filter: (block: string) => {\n      return block.toLowerCase();\n    },\n    default: defaultDashedName\n  });\n  const title = await prompt<{ value: string }>({\n    name: 'value',\n    message: 'What is the title of this challenge?',\n    default: defaultTitle\n  });\n\nreturn {\n    title: title.value,\n    dashedName: dashedName.value,\n    challengeType: challengeType.value\n  };\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1482,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\new-challenge-prompts.ts",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "49abbce9e05b7b544961ba223bcdc08f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\project-metadata.ts",
    "source_type": "git_repo",
    "title": "project-metadata",
    "content": "import fs from 'fs';\nimport path from 'path';\nimport glob from 'glob';\nimport { getProjectName, getProjectPath } from './get-project-info';\n\nexport type Meta = {\n  name: string;\n  blockLayout: string;\n  blockType: string;\n  isUpcomingChange: boolean;\n  dashedName: string;\n  helpCategory: string;\n  order: number;\n  time: string;\n  template: string;\n  required: string[];\n  superBlock: string;\n  challengeOrder: { id: string; title: string }[];\n};\n\nfunction getMetaData(): Meta {\n  const metaData = fs.readFileSync(getProjectMetaPath(), 'utf-8');\n  return JSON.parse(metaData) as Meta;\n}\n\nfunction updateMetaData(newMetaData: Record<string, unknown>): void {\n  fs.writeFileSync(getProjectMetaPath(), JSON.stringify(newMetaData, null, 2));\n}\n\nfunction getProjectMetaPath(): string {\n  return path.join(\n    getProjectPath(),\n    '../../..',\n    '_meta',\n    getProjectName(),\n    'meta.json'\n  );\n}\n\n// This (and everything else) should be async, but it's fast enough\n// for the moment.\nfunction validateMetaData(): void {\n  const { challengeOrder } = getMetaData();\n\n// each step in the challengeOrder should correspond to a file\n  challengeOrder.forEach(({ id }) => {\n    const filePath = `${getProjectPath()}${id}.md`;\n    try {\n      fs.accessSync(filePath);\n    } catch (_e) {\n      throw new Error(\n        `The file\n${filePath}\ndoes not exist, but is required by the challengeOrder of\n${getProjectMetaPath()}\n\nTo fix this, you can rename the file containing id: ${id} to ${id}.md\nIf there is no file for this id, then either the challengeOrder needs to be updated, or the file needs to be created.\n`\n      );\n    }\n  });\n\n// each file should have a corresponding step in the challengeOrder\n  glob.sync(`${getProjectPath()}/*.md`).forEach(file => {\n    const id = path.basename(file, '.md');\n    if (!challengeOrder.find(({ id: stepId }) => stepId === id))\n      throw new Error(\n        `File ${file} should be in the meta.json's challengeOrder`\n      );\n  });\n}\n\nexport { getMetaData, updateMetaData, getProjectMetaPath, validateMetaData };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2052,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\project-metadata.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "16b64a2539dc6ceee2550a2544239fbd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\task-helpers.ts",
    "source_type": "git_repo",
    "title": "task-helpers",
    "content": "function isTaskChallenge(title: string): boolean {\n  return /^\\s*task\\s\\d+$/gi.test(title);\n}\n\nfunction getTaskNumberFromTitle(title: string): number {\n  return parseInt(title.replace(/\\D/g, ''), 10);\n}\n\nexport { getTaskNumberFromTitle, isTaskChallenge };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 256,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\task-helpers.ts",
      "source_type": "git_repo"
    },
    "token_count": 63,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5118c438ab57ca6ff5f5ff6be0999e3b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"@freecodecamp/challenge-editor\",\n  \"version\": \"1.0.0\",\n  \"private\": true,\n  \"description\": \"Editor to help with new challenge structure\",\n  \"scripts\": {\n    \"start\": \"tsx server.ts\",\n    \"postinstall\": \"shx cp ./sample.env ./.env\"\n  },\n  \"author\": \"freeCodeCamp\",\n  \"license\": \"BSD-3-Clause\",\n  \"dependencies\": {\n    \"cors\": \"2.8.5\",\n    \"express\": \"4.18.2\",\n    \"gray-matter\": \"4.0.3\"\n  },\n  \"devDependencies\": {\n    \"@types/cors\": \"^2.8.13\",\n    \"@types/express\": \"4.17.21\",\n    \"dotenv\": \"16.4.5\",\n    \"shx\": \"0.3.4\",\n    \"typescript\": \"5.2.2\"\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 566,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 206,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b1589370ea9c1210c0c93c6f1a376b9e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\project-metadata.test.ts",
    "source_type": "git_repo",
    "title": "project-metadata.test",
    "content": "import fs from 'fs';\nimport { join } from 'path';\nimport {\n  getMetaData,\n  getProjectMetaPath,\n  validateMetaData\n} from './project-metadata';\n\nconst basePath = join(\n  process.cwd(),\n  '__fixtures__' + process.env.JEST_WORKER_ID\n);\nconst commonPath = join(basePath, 'curriculum', 'challenges');\n\nconst block = 'project-project-metadata';\nconst metaPath = join(commonPath, '_meta', block);\nconst superBlockPath = join(\n  commonPath,\n  'english',\n  'superblock-project-metadata'\n);\nconst projectPath = join(superBlockPath, block);\n\ndescribe('project-metadata helper', () => {\n  beforeEach(() => {\n    fs.mkdirSync(superBlockPath, { recursive: true });\n    fs.mkdirSync(projectPath, { recursive: true });\n    fs.mkdirSync(metaPath, { recursive: true });\n  });\n  describe('getProjectMetaPath helper', () => {\n    it('should return the meta path', () => {\n      const expected = join(metaPath, 'meta.json');\n\nprocess.env.CALLING_DIR = projectPath;\n\nexpect(getProjectMetaPath()).toEqual(expected);\n    });\n  });\n\ndescribe('getMetaData helper', () => {\n    beforeEach(() => {\n      fs.writeFileSync(\n        join(projectPath, 'step-001.md'),\n        'Lorem ipsum...',\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(projectPath, 'step-002.md'),\n        'Lorem ipsum...',\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(projectPath, 'step-003.md'),\n        'Lorem ipsum...',\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(metaPath, 'meta.json'),\n        `{\n      \"id\": \"mock-id\",\n      \"challengeOrder\": [{\"id\": \"1\", \"title\": \"Step 1\"}, {\"id\": \"2\", \"title\": \"Step 2\"}, {\"id\": \"1\", \"title\": \"Step 3\"}]}`,\n        'utf-8'\n      );\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4855,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\project-metadata.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 424,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "0e195f0e090448e5c5c902565fbb5e06",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\project-metadata.test.ts",
    "source_type": "git_repo",
    "title": "project-metadata.test",
    "content": "() => { it('should return the meta path', () => { const expected = join(metaPath, 'meta.json'); process.env.CALLING_DIR = projectPath; expect(getProjectMetaPath()).toEqual(expected); }); }); describe('getMetaData helper', () => { beforeEach(() => { fs.writeFileSync( join(projectPath, 'step-001.md'), 'Lorem ipsum...', 'utf-8' ); fs.writeFileSync( join(projectPath, 'step-002.md'), 'Lorem ipsum...', 'utf-8' ); fs.writeFileSync( join(projectPath, 'step-003.md'), 'Lorem ipsum...', 'utf-8' ); fs.writeFileSync( join(metaPath, 'meta.json'), `{ \"id\": \"mock-id\", \"challengeOrder\": [{\"id\": \"1\", \"title\": \"Step 1\"}, {\"id\": \"2\", \"title\": \"Step 2\"}, {\"id\": \"1\", \"title\": \"Step 3\"}]}`, 'utf-8' ); });\n\nit('should process requested file', () => {\n      const expected = {\n        id: 'mock-id',\n        challengeOrder: [\n          { id: '1', title: 'Step 1' },\n          { id: '2', title: 'Step 2' },\n          { id: '1', title: 'Step 3' }\n        ]\n      };\n      process.env.CALLING_DIR = projectPath;\n      expect(getMetaData()).toEqual(expected);\n    });\n\nit('should throw if file is not found', () => {\n      process.env.CALLING_DIR =\n        'curriculum/challenges/english/superblock/mick-priject';\n\nconst errorPath = join(\n        'curriculum',\n        'challenges',\n        '_meta',\n        'mick-priject',\n        'meta.json'\n      );\n      expect(() => {\n        getMetaData();\n      }).toThrowError(\n        new Error(`ENOENT: no such file or directory, open '${errorPath}'`)\n      );\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4855,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\project-metadata.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 410,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "8c4b11ca3183aa849aca6e304c043e65",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\project-metadata.test.ts",
    "source_type": "git_repo",
    "title": "project-metadata.test",
    "content": "const expected = { id: 'mock-id', challengeOrder: [ { id: '1', title: 'Step 1' }, { id: '2', title: 'Step 2' }, { id: '1', title: 'Step 3' } ] }; process.env.CALLING_DIR = projectPath; expect(getMetaData()).toEqual(expected); }); it('should throw if file is not found', () => { process.env.CALLING_DIR = 'curriculum/challenges/english/superblock/mick-priject'; const errorPath = join( 'curriculum', 'challenges', '_meta', 'mick-priject', 'meta.json' ); expect(() => { getMetaData(); }).toThrowError( new Error(`ENOENT: no such file or directory, open '${errorPath}'`) ); }); });\n\ndescribe('validateMetaData helper', () => {\n    it('should throw if a stepfile is missing', () => {\n      fs.writeFileSync(\n        join(projectPath, 'step-001.md'),\n        `---\nid: id-1\ntitle: Step 2\nchallengeType: a\ndashedName: step-2\n---\n`,\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(projectPath, 'step-003.md'),\n        `---\nid: id-3\ntitle: Step 3\nchallengeType: c\ndashedName: step-3\n---\n`,\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(metaPath, 'meta.json'),\n        `{\n      \"id\": \"mock-id\",\n      \"challengeOrder\": [{\"id\": \"1\", \"title\": \"Step 1\"}, {\"id\": \"2\", \"title\": \"Step 2\"}, {\"id\": \"1\", \"title\": \"Step 3\"}]}`,\n        'utf-8'\n      );\n\nprocess.env.CALLING_DIR = projectPath;\n\nexpect(() => validateMetaData()).toThrow(\n        `The file\n${projectPath}/1.md\ndoes not exist, but is required by the challengeOrder of\n${metaPath}/meta.json\n\nTo fix this, you can rename the file containing id: 1 to 1.md\nIf there is no file for this id, then either the challengeOrder needs to be updated, or the file needs to be created.\n`\n      );\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4855,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\project-metadata.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "bbea97e04373e8b916f2502594d6a164",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\project-metadata.test.ts",
    "source_type": "git_repo",
    "title": "project-metadata.test",
    "content": "[{\"id\": \"1\", \"title\": \"Step 1\"}, {\"id\": \"2\", \"title\": \"Step 2\"}, {\"id\": \"1\", \"title\": \"Step 3\"}]}`, 'utf-8' ); process.env.CALLING_DIR = projectPath; expect(() => validateMetaData()).toThrow( `The file ${projectPath}/1.md does not exist, but is required by the challengeOrder of ${metaPath}/meta.json To fix this, you can rename the file containing id: 1 to 1.md If there is no file for this id, then either the challengeOrder needs to be updated, or the file needs to be created. ` ); });\n\nit('should throw if a step is present in the project, but not the meta', () => {\n      fs.writeFileSync(\n        join(projectPath, '1.md'),\n        `---\nid: id-1\ntitle: Step 2\nchallengeType: a\ndashedName: step-2\n---\n`,\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(projectPath, '2.md'),\n        `---\nid: id-2\ntitle: Step 1\nchallengeType: b\ndashedName: step-1\n---\n`,\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(projectPath, '3.md'),\n        `---\nid: id-3\ntitle: Step 3\nchallengeType: c\ndashedName: step-3\n---\n`,\n        'utf-8'\n      );\n      fs.writeFileSync(\n        join(metaPath, 'meta.json'),\n        `{\n      \"id\": \"mock-id\",\n      \"challengeOrder\": [{\"id\": \"1\", \"title\": \"Step 1\"}, {\"id\": \"2\", \"title\": \"Step 2\"}, {\"id\": \"1\", \"title\": \"Step 3\"}]}`,\n        'utf-8'\n      );\n\nprocess.env.CALLING_DIR = projectPath;\n\nexpect(() => validateMetaData()).toThrow(\n        `File ${projectPath}/3.md should be in the meta.json's challengeOrder`\n      );\n    });\n  });\n  afterEach(() => {\n    delete process.env.CALLING_DIR;\n    try {\n      fs.rmSync(basePath, { recursive: true });\n    } catch (err) {\n      console.log(err);\n      console.log('Could not remove fixtures folder.');\n    }\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4855,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\helpers\\project-metadata.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "0132dde3450581110eea6b14649d7e46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\server.ts",
    "source_type": "git_repo",
    "title": "server",
    "content": "import * as dotenv from 'dotenv';\ndotenv.config();\n\nimport cors from 'cors';\nimport express from 'express';\nimport { blockRoute } from './routes/block-route';\nimport { indexRoute } from './routes/index-route';\nimport { saveRoute } from './routes/save-route';\nimport { stepRoute } from './routes/step-route';\nimport { superblockRoute } from './routes/super-block-route';\nimport { toolsRoute } from './routes/tools-route';\n\nconst app = express();\n\napp.use(\n  cors({\n    origin: process.env.CHALLENGE_EDITOR_CLIENT_LOCATION\n  })\n);\n\napp.use(express.static('public'));\napp.use(express.json());\n\napp.post('/:superblock/:block/_tools/:command', (req, res, next) => {\n  toolsRoute(req, res).catch(next);\n});\n\napp.post('/:superblock/:block/:step', (req, res, next) => {\n  saveRoute(req, res).catch(next);\n});\n\napp.get('/:superblock/:block/:step', (req, res, next) => {\n  stepRoute(req, res).catch(next);\n});\n\napp.get('/:superblock/:block', (req, res, next) => {\n  blockRoute(req, res).catch(next);\n});\n\napp.get('/:superblock', (req, res, next) => {\n  superblockRoute(req, res).catch(next);\n});\n\napp.get('/', indexRoute);\n\napp.listen(3200, () => console.log('App is live on 3200!'));",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1175,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\server.ts",
      "source_type": "git_repo"
    },
    "token_count": 306,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b32504938e6fe2de9bef416e04a249cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\index.html",
    "source_type": "git_repo",
    "title": "freeCodeCamp Challenge Editor",
    "content": "freeCodeCamp Challenge Editor\nYou need to enable JavaScript to run this app.",
    "metadata": {
      "file_extension": ".html",
      "file_type": "html",
      "file_size": 535,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\index.html",
      "source_type": "git_repo"
    },
    "token_count": 16,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "35ba69076a69d051b682965c7e197dd8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\tsconfig.json",
    "source_type": "git_repo",
    "title": "tsconfig",
    "content": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"esModuleInterop\": true,\n    \"allowSyntheticDefaultImports\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"noEmit\": true,\n    \"jsx\": \"react-jsx\",\n    \"types\": [\"node\"]\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 504,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\tsconfig.json",
      "source_type": "git_repo"
    },
    "token_count": 152,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "940a2c9d13194a49640d5e057a97c8c9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"@freecodecamp/challenge-editor-client\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@vitejs/plugin-react\": \"4.2.1\",\n    \"codemirror\": \"5.65.16\",\n    \"react\": \"17.0.2\",\n    \"react-dom\": \"17.0.2\",\n    \"react-router-dom\": \"6.18.0\",\n    \"typescript\": \"5.2.2\",\n    \"vite\": \"4.5.2\"\n  },\n  \"scripts\": {\n    \"start\": \"PORT=3300 vite\",\n    \"build\": \"tsc && vite build\",\n    \"test\": \"echo \\\"no tests here yet\\\"\",\n    \"postinstall\": \"shx cp ./sample.env ./.env\"\n  },\n  \"devDependencies\": {\n    \"@types/codemirror\": \"5.60.15\",\n    \"@types/react\": \"17.0.83\",\n    \"@types/react-dom\": \"17.0.19\",\n    \"@uiw/react-codemirror\": \"3.2.10\",\n    \"shx\": \"0.3.4\"\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 680,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 259,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "873c58fa7aedf7f7c9824ee15264ba53",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\vite.config.ts",
    "source_type": "git_repo",
    "title": "vite.config",
    "content": "import { defineConfig } from 'vite';\nimport react from '@vitejs/plugin-react';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  base: '/',\n  plugins: [react()],\n  envPrefix: 'CHALLENGE_EDITOR_',\n  server: {\n    port: 3300\n  }\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 244,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\vite.config.ts",
      "source_type": "git_repo"
    },
    "token_count": 69,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6e9cd7b9ff444ed57eadeede46d01c20",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\interfaces\\block.ts",
    "source_type": "git_repo",
    "title": "block",
    "content": "export interface Block {\n  name: string;\n  path: string;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 59,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\interfaces\\block.ts",
      "source_type": "git_repo"
    },
    "token_count": 15,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "38c28a12543cd49d5050f4a627eb7b02",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\interfaces\\challenge-data.ts",
    "source_type": "git_repo",
    "title": "challenge-data",
    "content": "export interface ChallengeData {\n  name: string;\n  id: string;\n  path: string;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 81,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\interfaces\\challenge-data.ts",
      "source_type": "git_repo"
    },
    "token_count": 21,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cbc185bdbb078e9d1d1bdecc138e355d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\interfaces\\challenge-content.ts",
    "source_type": "git_repo",
    "title": "challenge-content",
    "content": "export interface ChallengeContent {\n  name: string;\n  fileData: string;\n  dashedName: string;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 96,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\interfaces\\challenge-content.ts",
      "source_type": "git_repo"
    },
    "token_count": 23,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7faabcf4c9f8d4c8ece0d14c2be3c08f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\interfaces\\super-block.ts",
    "source_type": "git_repo",
    "title": "super-block",
    "content": "export interface SuperBlock {\n  name: string;\n  path: string;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 64,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\interfaces\\super-block.ts",
      "source_type": "git_repo"
    },
    "token_count": 16,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ad2d28a13a565251f4df6638fbe470bb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\interfaces\\prop-types.ts",
    "source_type": "git_repo",
    "title": "prop-types",
    "content": "export interface BlockRequiredProps {\n  superblock?: string;\n  block?: string;\n}\n\nexport interface ChallengeContentRequiredProps extends BlockRequiredProps {\n  challenge?: string;\n  content: string;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 201,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\interfaces\\prop-types.ts",
      "source_type": "git_repo"
    },
    "token_count": 40,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8d1c81800648cdfe54a13f951f34ba10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\app.tsx",
    "source_type": "git_repo",
    "title": "app",
    "content": "import * as React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Header from './components/header/header';\nimport Landing from './components/landing/landing';\nimport SuperBlock from './components/superblock/super-block';\nimport Block from './components/block/block';\nimport Editor from './components/editor/editor';\nimport Tools from './components/tools/tools';\n\nconst App = () => {\n  return (\n    <div className='app'>\n      <Header />\n      <Router>\n        <Routes>\n          <Route index element={<Landing />} />\n          <Route path=':superblock' element={<SuperBlock />} />\n          <Route path=':superblock/:block' element={<Block />} />\n          <Route path=':superblock/:block/_tools' element={<Tools />} />\n          <Route path=':superblock/:block/:challenge' element={<Editor />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 921,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\app.tsx",
      "source_type": "git_repo"
    },
    "token_count": 203,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "59a4075b05f3579fba5b908bde606715",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\index.tsx",
    "source_type": "git_repo",
    "title": "index",
    "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 219,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\index.tsx",
      "source_type": "git_repo"
    },
    "token_count": 50,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b6884b9dcdb6ec576361f1c6efac7d94",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\index.css",
    "source_type": "git_repo",
    "title": "index",
    "content": ":root {\n  --nav-background: #0a0a23;\n  --background: #1b1b32;\n  --content: #f5f6f7;\n  --grey: #3b3b4f;\n  --font-family-sans-serif: 'Lato', sans-serif;\n  --font-family-monospace: 'Hack-ZeroSlash', monospace;\n}\n\n@font-face {\n  font-family: 'Lato';\n  src: url('./fonts/Lato-Regular.woff');\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: var(--font-family-sans-serif);\n  text-align: center;\n  background: var(--background);\n  color: var(--content);\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\np,\nli {\n  font-size: 1.2rem;\n}\n\na {\n  color: var(--content);\n}\n\nbutton {\n  text-align: center;\n  vertical-align: middle;\n  border: 3px solid var(--content);\n  font-size: 16pt;\n  padding: 6px 12px;\n  margin: 10px auto;\n  background: var(--grey);\n  color: var(--content);\n  cursor: pointer;\n}\n\nbutton:active {\n  color: var(--background);\n  background: var(--content);\n}\n\ncode {\n  background: var(--grey);\n}\n\n.breadcrumb {\n  font-size: 1.2rem;\n  font-style: italic;\n}",
    "metadata": {
      "file_extension": ".css",
      "file_type": "css",
      "file_size": 965,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\index.css",
      "source_type": "git_repo"
    },
    "token_count": 315,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3b1f2f9f28bca46c26ff36c3a9ee2de8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\vite-app-env.d.ts",
    "source_type": "git_repo",
    "title": "vite-app-env.d",
    "content": "/// <reference types=\"vite/client\" />\n\ninterface ImportMetaEnv {\n  readonly CHALLENGE_EDITOR_LEARN_CLIENT_LOCATION: string;\n}\n\ninterface ImportMeta {\n  readonly env: ImportMetaEnv;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 183,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\vite-app-env.d.ts",
      "source_type": "git_repo"
    },
    "token_count": 42,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "20c62df4aee81fed0b04e5d797fd967d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\utils\\handle-request.ts",
    "source_type": "git_repo",
    "title": "handle-request",
    "content": "export const handleRequest = (makeRequest: () => Promise<Response>) => () => {\n  makeRequest()\n    .then(\n      res =>\n        res.json() as Promise<{\n          stdout?: string;\n          stderr?: string;\n          message?: string;\n        }>\n    )\n    .then(data => {\n      if (data.message) {\n        alert(data.message);\n      } else {\n        alert(JSON.stringify(data));\n      }\n    })\n    .catch(err => console.error(err));\n};\n\nexport const API_LOCATION = import.meta.env\n  .CHALLENGE_EDITOR_API_LOCATION as string;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 523,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\utils\\handle-request.ts",
      "source_type": "git_repo"
    },
    "token_count": 117,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "585111fb4bc8abc47ef0068eb8a74bcc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\block\\block.css",
    "source_type": "git_repo",
    "title": "block",
    "content": ".step-grid {\n  column-count: 3;\n}",
    "metadata": {
      "file_extension": ".css",
      "file_type": "css",
      "file_size": 34,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\block\\block.css",
      "source_type": "git_repo"
    },
    "token_count": 11,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5d6831282d30655fe7760bb187f55326",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\utils\\block-name-translator.ts",
    "source_type": "git_repo",
    "title": "block-name-translator",
    "content": "export const superBlockNameMap: { [key: string]: string } = {\n  '01-responsive-web-design': 'responsive-web-design',\n  '02-javascript-algorithms-and-data-structures':\n    'javascript-algorithms-and-data-structures',\n  '03-front-end-development-libraries': 'front-end-development-libraries',\n  '04-data-visualization': 'data-visualization',\n  '05-back-end-development-and-apis': 'back-end-development-and-apis',\n  '06-quality-assurance': 'quality-assurance',\n  '07-scientific-computing-with-python': 'scientific-computing-with-python',\n  '08-data-analysis-with-python': 'data-analysis-with-python',\n  '09-information-security': 'information-security',\n  '10-coding-interview-prep': 'coding-interview-prep',\n  '11-machine-learning-with-python': 'machine-learning-with-python',\n  '13-relational-databases': 'relational-databases',\n  '14-responsive-web-design-22': '2022/responsive-web-design',\n  '15-javascript-algorithms-and-data-structures-22':\n    'javascript-algorithms-and-data-structures-v8',\n  '16-the-odin-project': 'the-odin-project',\n  '17-college-algebra-with-python': 'college-algebra-with-python',\n  '18-project-euler': 'project-euler',\n  '19-foundational-c-sharp-with-microsoft':\n    'foundational-c-sharp-with-microsoft',\n  '21-a2-english-for-developers': 'a2-english-for-developers',\n  '22-rosetta-code': 'rosetta-code',\n  '23-python-for-everybody': 'python-for-everybody',\n  '24-b1-english-for-developers': 'b1-english-for-developers',\n  '25-front-end-development': 'full-stack-developer',\n  '26-a2-professional-spanish': 'a2-professional-spanish',\n  '27-a2-professional-chinese': 'a2-professional-chinese',\n  '30-a1-professional-chinese': 'a1-professional-chinese'\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1683,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\utils\\block-name-translator.ts",
      "source_type": "git_repo"
    },
    "token_count": 447,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6d3e44e6e6799bc67868a6db54264b00",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\buttons\\create-empty-steps.tsx",
    "source_type": "git_repo",
    "title": "create-empty-steps",
    "content": "import React, { useState } from 'react';\nimport { BlockRequiredProps } from '../../../interfaces/prop-types';\nimport { API_LOCATION, handleRequest } from '../../utils/handle-request';\n\nconst CreateEmptySteps = ({ superblock, block }: BlockRequiredProps) => {\n  const [num, setNum] = useState(0);\n\nconst click = handleRequest(() =>\n    fetch(\n      `${API_LOCATION}/${superblock || ''}/${\n        block || ''\n      }/_tools/create-empty-steps`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ num })\n      }\n    )\n  );\n\nconst changeNum = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNum(parseInt(e.target.value, 10));\n  };\n\nreturn (\n    <div>\n      <label htmlFor='num'>\n        Number of steps to create:\n        <input id='num' type='number' onChange={changeNum} />\n      </label>\n      <button onClick={click}>Create Empty Steps</button>\n    </div>\n  );\n};\n\nexport default CreateEmptySteps;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 997,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\buttons\\create-empty-steps.tsx",
      "source_type": "git_repo"
    },
    "token_count": 234,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0b4d15a857f28d6533d5d0ce1662e3e7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\buttons\\create-next-step.tsx",
    "source_type": "git_repo",
    "title": "create-next-step",
    "content": "import React from 'react';\nimport { BlockRequiredProps } from '../../../interfaces/prop-types';\nimport { API_LOCATION, handleRequest } from '../../utils/handle-request';\n\nconst CreateNextStep = ({ superblock, block }: BlockRequiredProps) => {\n  const click = handleRequest(() =>\n    fetch(\n      `${API_LOCATION}/${superblock || ''}/${\n        block || ''\n      }/_tools/create-next-step`,\n      {\n        method: 'POST'\n      }\n    )\n  );\n\nreturn <button onClick={click}>Create Next Step</button>;\n};\n\nexport default CreateNextStep;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 536,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\buttons\\create-next-step.tsx",
      "source_type": "git_repo"
    },
    "token_count": 120,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1d8f21f053cc64adcb4c5ee0c1783b4d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\buttons\\delete-step.tsx",
    "source_type": "git_repo",
    "title": "delete-step",
    "content": "import React, { useState } from 'react';\nimport { BlockRequiredProps } from '../../../interfaces/prop-types';\nimport { API_LOCATION, handleRequest } from '../../utils/handle-request';\n\nconst DeleteStep = ({ superblock, block }: BlockRequiredProps) => {\n  const [num, setNum] = useState(0);\n\nconst click = handleRequest(() =>\n    fetch(\n      `${API_LOCATION}/${superblock || ''}/${block || ''}/_tools/delete-step`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ num })\n      }\n    )\n  );\n\nconst changeNum = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNum(parseInt(e.target.value, 10));\n  };\n\nreturn (\n    <div>\n      <label htmlFor='num'>\n        Step to delete:\n        <input id='num' type='number' onChange={changeNum} />\n      </label>\n      <button onClick={click}>Delete Step</button>\n    </div>\n  );\n};\n\nexport default DeleteStep;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 944,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\buttons\\delete-step.tsx",
      "source_type": "git_repo"
    },
    "token_count": 223,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "70d0a41f8881ac659f2b5c3ead46802f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\buttons\\insert-step.tsx",
    "source_type": "git_repo",
    "title": "insert-step",
    "content": "import React, { useState } from 'react';\nimport { BlockRequiredProps } from '../../../interfaces/prop-types';\nimport { API_LOCATION, handleRequest } from '../../utils/handle-request';\n\nconst InsertStep = ({ superblock, block }: BlockRequiredProps) => {\n  const [num, setNum] = useState(0);\n\nconst click = handleRequest(() =>\n    fetch(\n      `${API_LOCATION}/${superblock || ''}/${block || ''}/_tools/insert-step`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ num })\n      }\n    )\n  );\n\nconst changeNum = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNum(parseInt(e.target.value, 10));\n  };\n\nreturn (\n    <div>\n      <label htmlFor='num'>\n        Step Number:\n        <input id='num' type='number' onChange={changeNum} />\n      </label>\n      <button onClick={click}>Insert Step</button>\n    </div>\n  );\n};\n\nexport default InsertStep;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 941,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\buttons\\insert-step.tsx",
      "source_type": "git_repo"
    },
    "token_count": 223,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "77f0f4b23b9cbacb73c78308c59079eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\block\\block.tsx",
    "source_type": "git_repo",
    "title": "block",
    "content": "import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { ChallengeData } from '../../../interfaces/challenge-data';\nimport { API_LOCATION } from '../../utils/handle-request';\nimport './block.css';\n\nconst stepBasedSuperblocks = [\n  '07-scientific-computing-with-python',\n  '14-responsive-web-design-22',\n  '15-javascript-algorithms-and-data-structures-22',\n  '25-front-end-development'\n];\n\nconst taskBasedSuperblocks = [\n  '21-a2-english-for-developers',\n  '24-b1-english-for-developers',\n  '26-a2-professional-spanish',\n  '27-a2-professional-chinese',\n  '30-a1-professional-chinese'\n];\n\nconst Block = () => {\n  const [error, setError] = useState<Error | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [items, setItems] = useState([] as ChallengeData[]);\n  const params = useParams() as { superblock: string; block: string };\n\nuseEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\nconst fetchData = () => {\n    setLoading(true);\n    fetch(`${API_LOCATION}/${params.superblock}/${params.block}`)\n      .then(res => res.json() as Promise<ChallengeData[]>)\n      .then(\n        superblocks => {\n          setLoading(false);\n          setItems(superblocks);\n        },\n        (error: Error) => {\n          setLoading(false);\n          setError(error);\n        }\n      );\n  };\n\nif (error) {\n    return <div>Error: {error.message}</div>;\n  }\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\nconst isStepBasedSuperblock = stepBasedSuperblocks.includes(\n    params.superblock\n  );\n\nconst isTaskBasedSuperblock = taskBasedSuperblocks.includes(\n    params.superblock\n  ); return (\n    <div>\n      <h1>{params block}</h1>\n      <span className='breadcrumb'>{params superblock}</span>\n      <ul className='step-grid'>\n        {items map((challenge, i) => (\n          <li key={challenge name}>\n            { isStepBasedSuperblock && <span>{`${i + 1}: `}</span>}\n            <Link\n              to={`/${params",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4862,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\block\\block.tsx",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "c7c6e9860822fcba6ffa548ebf537ac6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\block\\block.tsx",
    "source_type": "git_repo",
    "title": "block",
    "content": "{ setLoading(true); fetch(`${API_LOCATION}/${params.superblock}/${params.block}`) .then(res => res.json() as Promise<ChallengeData[]>) .then( superblocks => { setLoading(false); setItems(superblocks); }, (error: Error) => { setLoading(false); setError(error); } ); }; if (error) { return <div>Error: {error.message}</div>; } if (loading) { return <div>Loading...</div>; } const isStepBasedSuperblock = stepBasedSuperblocks.includes( params.superblock ); const isTaskBasedSuperblock = taskBasedSuperblocks.includes( params.superblock ); return ( <div> <h1>{params block}</h1> <span className='breadcrumb'>{params superblock}</span> <ul className='step-grid'> {items map((challenge, i) => ( <li key={challenge name}> { isStepBasedSuperblock && <span>{`${i + 1}: `}</span>} <Link to={`/${paramssuperblock}/${params block}/${challenge path}`}\n            >\n              {challenge name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <p>\n        <Link to={`/${params superblock}`}>Return to Blocks</Link>\n      </p>\n      <hr />\n      <h2>Project Controls</h2>\n      {isStepBasedSuperblock (\n        <p>\n          Looking to add, remove, or edit steps {' '}\n          <Link to={`/${params superblock}/${params block}/_tools`}>\n            Use the step tools </Link>\n        </p>\n      ) : isTaskBasedSuperblock (\n        <>\n          <p>\n            Looking to add or remove challenges Navigate to <br />\n            <code>\n              freeCodeCamp/curriculum/challenges/english\n              {`/${params superblock}/${params",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4862,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\block\\block.tsx",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "bbc09364dff942c5708993a835ea15fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\block\\block.tsx",
    "source_type": "git_repo",
    "title": "block",
    "content": "=> ( <li key={challenge name}> { isStepBasedSuperblock && <span>{`${i + 1}: `}</span>} <Link to={`/${paramssuperblock}/${params block}/${challenge path}`} > {challenge name} </Link> </li> ))} </ul> <p> <Link to={`/${params superblock}`}>Return to Blocks</Link> </p> <hr /> <h2>Project Controls</h2> {isStepBasedSuperblock ( <p> Looking to add, remove, or edit steps {' '} <Link to={`/${params superblock}/${params block}/_tools`}> Use the step tools </Link> </p> ) : isTaskBasedSuperblock ( <> <p> Looking to add or remove challenges Navigate to <br /> <code> freeCodeCamp/curriculum/challenges/english {`/${params superblock}/${paramsblock}/`}\n            </code>\n            <br />\n            in your terminal and run the following commands:\n          </p>\n          <ul>\n            <li>\n              <code>pnpm create-next-task</code>: Create the next task style\n              challenge in this block\n            </li>\n            <li>\n              <code>pnpm create-next-challenge</code>: Create the next challenge\n              of a different style in this block\n            </li>\n            <li>\n              <code>pnpm insert-task</code>: Create a new task style challenge\n              in the middle of this block </li>\n            <li>\n              <code>pnpm delete-task</code>: Delete a task style challenge in\n              this block </li>\n            <li>\n              <code>pnpm reorder-tasks</code>: Rename the tasks to the correct\n              order </li>\n          </ul>\n          <p>\n            Refresh the page after running a command to see the changes\n            reflected </p>\n        </>\n      ) : (\n        <>\n          <p>\n            Looking to add or remove challenges Navigate to <br />\n            <code>\n              freeCodeCamp/curriculum/challenges/english\n              {`/${params superblock}/${params",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4862,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\block\\block.tsx",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "ea263218f2a65e1dc2e6c387fcc729b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\block\\block.tsx",
    "source_type": "git_repo",
    "title": "block",
    "content": "block </li> <li> <code>pnpm insert-task</code>: Create a new task style challenge in the middle of this block </li> <li> <code>pnpm delete-task</code>: Delete a task style challenge in this block </li> <li> <code>pnpm reorder-tasks</code>: Rename the tasks to the correct order </li> </ul> <p> Refresh the page after running a command to see the changes reflected </p> </> ) : ( <> <p> Looking to add or remove challenges Navigate to <br /> <code> freeCodeCamp/curriculum/challenges/english {`/${params superblock}/${paramsblock}/`}\n            </code>\n            <br />\n            in your terminal and run the following commands:\n          </p>\n          <ul>\n            <li>\n              <code>pnpm create-next-challenge</code>: Create a new challenge at\n              the end of this block </li>\n            <li>\n              <code>pnpm insert-challenge</code>: Create a new challenge in the\n              middle of this block </li>\n            <li>\n              <code>pnpm delete-challenge</code>: Delete a challenge in this\n              block </li>\n          </ul>\n          <p>\n            Refresh the page after running a command to see the changes\n            reflected </p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Block;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 4862,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\block\\block.tsx",
      "source_type": "git_repo"
    },
    "token_count": 301,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "4b11a1a5518846ee50642e7fd11a26cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\buttons\\save-challenge.tsx",
    "source_type": "git_repo",
    "title": "save-challenge",
    "content": "import React from 'react';\nimport { ChallengeContentRequiredProps } from '../../../interfaces/prop-types';\nimport { API_LOCATION, handleRequest } from '../../utils/handle-request';\n\nconst SaveChallenge = ({\n  superblock,\n  block,\n  challenge,\n  content\n}: ChallengeContentRequiredProps) => {\n  const click = handleRequest(() =>\n    fetch(\n      `${API_LOCATION}/${superblock || ''}/${block || ''}/${challenge || ''}`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ content })\n      }\n    )\n  );\n\nreturn <button onClick={click}>Save Changes</button>;\n};\n\nexport default SaveChallenge;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 677,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\buttons\\save-challenge.tsx",
      "source_type": "git_repo"
    },
    "token_count": 145,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "9051a572927a502f21ce12d784a0c14d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\buttons\\update-step-titles.tsx",
    "source_type": "git_repo",
    "title": "update-step-titles",
    "content": "import React from 'react';\nimport { BlockRequiredProps } from '../../../interfaces/prop-types';\nimport { API_LOCATION, handleRequest } from '../../utils/handle-request';\n\nconst UpdateStepTitles = ({ superblock, block }: BlockRequiredProps) => {\n  const click = handleRequest(() =>\n    fetch(\n      `${API_LOCATION}/${superblock || ''}/${\n        block || ''\n      }/_tools/update-step-titles`,\n      {\n        method: 'POST'\n      }\n    )\n  );\n\nreturn <button onClick={click}>Reorder Steps</button>;\n};\n\nexport default UpdateStepTitles;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 539,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\buttons\\update-step-titles.tsx",
      "source_type": "git_repo"
    },
    "token_count": 121,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7b298fe781cac81fddccf7e4f4c125fd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\editor\\editor.css",
    "source_type": "git_repo",
    "title": "editor",
    "content": "textarea {\n  display: block;\n  margin: auto;\n  width: 500px;\n  max-width: 100vw;\n  height: 500px;\n}\n\n.CodeMirror {\n  /* need to add important to overwrite the specificity of the classes in the dependency */\n  height: 70vh !important;\n  max-width: 80vw;\n  margin: auto;\n  text-align: left;\n}",
    "metadata": {
      "file_extension": ".css",
      "file_type": "css",
      "file_size": 291,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\editor\\editor.css",
      "source_type": "git_repo"
    },
    "token_count": 84,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ada8df25f1519a5504d6f780d41192d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\header\\header.css",
    "source_type": "git_repo",
    "title": "header",
    "content": ".header {\n  width: 100vw;\n  margin-top: 0;\n  text-align: center;\n  background: var(--background);\n  color: var(--content);\n}\n\n.header a {\n  color: var(--content);\n}\n\n.header p {\n  margin: 0;\n  font-size: 2rem;\n}",
    "metadata": {
      "file_extension": ".css",
      "file_type": "css",
      "file_size": 212,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\header\\header.css",
      "source_type": "git_repo"
    },
    "token_count": 66,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bc4d7b9bd67824441bf1f51f9543facd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\header\\header.tsx",
    "source_type": "git_repo",
    "title": "header",
    "content": "import React from 'react';\nimport './header.css';\n\nconst Header = () => {\n  return (\n    <div className='header'>\n      <p>\n        <a href='/'>freeCodeCamp Challenge Editor</a>\n      </p>\n    </div>\n  );\n};\n\nexport default Header;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 232,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\header\\header.tsx",
      "source_type": "git_repo"
    },
    "token_count": 60,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d7a7302a27c90ebb26e89a10ac505174",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\editor\\editor.tsx",
    "source_type": "git_repo",
    "title": "editor",
    "content": "import React, { useEffect, useState } from 'react';\nimport CodeMirror from '@uiw/react-codemirror';\nimport * as codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/markdown/markdown';\n// we need to import this mode to get the fenced codeblock highlighting\nimport 'codemirror/mode/css/css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/jsx/jsx';\nimport { Link, useParams } from 'react-router-dom';\nimport { ChallengeContent } from '../../../interfaces/challenge-content';\nimport SaveChallenge from '../buttons/save-challenge';\nimport './editor.css';\nimport { API_LOCATION } from '../../utils/handle-request';\nimport { superBlockNameMap } from '../../utils/block-name-translator';\n\nconst Editor = () => {\n  const [error, setError] = useState<Error | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [items, setItems] = useState({\n    name: '',\n    dashedName: '',\n    fileData: ''\n  });\n  const [stepContent, setStepContent] = useState('');\n  const { superblock, block, challenge } = useParams();\n\nuseEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\nconst fetchData = () => {\n    setLoading(true);\n    fetch(\n      `${API_LOCATION}/${superblock || ''}/${block || ''}/${challenge || ''}`\n    )\n      .then(res => res.json() as Promise<ChallengeContent>)\n      .then(\n        content => {\n          setLoading(false);\n          setItems(content);\n          setStepContent(content.fileData);\n        },\n        (error: Error) => {\n          setLoading(false);\n          setError(error);\n        }\n      );\n  };\n\nconst handleChange = (instance: codemirror.Editor) => {\n    const editedContent = instance.getValue();\n    setStepContent(editedContent);\n  };",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 3067,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\editor\\editor.tsx",
      "source_type": "git_repo"
    },
    "token_count": 419,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f97e6b551c973d6a4f66d39c123f2f0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\editor\\editor.tsx",
    "source_type": "git_repo",
    "title": "editor",
    "content": "fileData: '' }); const [stepContent, setStepContent] = useState(''); const { superblock, block, challenge } = useParams(); useEffect(() => { fetchData(); // eslint-disable-next-line react-hooks/exhaustive-deps }, []); const fetchData = () => { setLoading(true); fetch( `${API_LOCATION}/${superblock || ''}/${block || ''}/${challenge || ''}` ) .then(res => res.json() as Promise<ChallengeContent>) .then( content => { setLoading(false); setItems(content); setStepContent(content.fileData); }, (error: Error) => { setLoading(false); setError(error); } ); }; const handleChange = (instance: codemirror.Editor) => { const editedContent = instance.getValue(); setStepContent(editedContent); };\n\nif (error) {\n    return <div>Error: {error.message}</div>;\n  }\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div>\n      <h1>{items.name}</h1>\n      <span className='breadcrumb'>\n        {superblock || ''} / {block || ''}\n      </span>\n      <CodeMirror\n        value={stepContent}\n        onChange={handleChange}\n        options={{\n          mode: {\n            name: 'markdown',\n            highlightFormatting: true\n          },\n          theme: 'material',\n          lineNumbers: true,\n          lineWrapping: true\n        }}\n      />\n      <SaveChallenge\n        superblock={superblock || ''}\n        block={block || ''}\n        challenge={challenge}\n        content={stepContent}\n      />\n      <p>\n        <Link to={`/${superblock || ''}/${block || ''}`}>Return to Block</Link>\n      </p>\n      <p>\n        <Link\n          to={`${import.meta.env.CHALLENGE_EDITOR_LEARN_CLIENT_LOCATION}/learn/${superBlockNameMap[superblock || '']}/${block || ''}/${\n            items.dashedName\n          }`}\n          target='_blank'\n        >\n          View Live Version of the Challenge in your running development\n          environment\n        </Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Editor;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 3067,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\editor\\editor.tsx",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "67f57af784ceadef2fc212eb48caa91b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\landing\\landing.tsx",
    "source_type": "git_repo",
    "title": "landing",
    "content": "import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { SuperBlock } from '../../../interfaces/super-block';\nimport { API_LOCATION } from '../../utils/handle-request';\n\nconst Landing = () => {\n  const [error, setError] = useState<Error | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [items, setItems] = useState([] as SuperBlock[]);\n\nuseEffect(() => {\n    fetchData();\n  }, []);\n\nconst fetchData = () => {\n    setLoading(true);\n    fetch(API_LOCATION)\n      .then(res => res.json() as Promise<SuperBlock[]>)\n      .then(\n        superblocks => {\n          setLoading(false);\n          setItems(superblocks);\n        },\n        (error: Error) => {\n          setLoading(false);\n          setError(error);\n        }\n      );\n  };\n\nif (error) {\n    return <div>Error: {error.message}</div>;\n  }\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div>\n      <h1>Superblocks</h1>\n      <ul>\n        {items.map(superblock => (\n          <li key={superblock.name}>\n            <Link to={`/${superblock.path}`}>{superblock.name}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Landing;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 1208,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\landing\\landing.tsx",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "26ede0eb68b7fd35bb03683c3d7aba42",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\tools\\tools.css",
    "source_type": "git_repo",
    "title": "tools",
    "content": "label {\n  display: block;\n  font-size: 1.2rem;\n  margin-bottom: 0.5rem;\n}\n\ninput {\n  background-color: var(--grey);\n  border: 2px solid var(--content);\n  padding: 6px 12px;\n  margin-left: 10px;\n  color: white;\n}",
    "metadata": {
      "file_extension": ".css",
      "file_type": "css",
      "file_size": 212,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\tools\\tools.css",
      "source_type": "git_repo"
    },
    "token_count": 73,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7cc1aff240a7de5f014c70c369031323",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\superblock\\super-block.tsx",
    "source_type": "git_repo",
    "title": "super-block",
    "content": "import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Block } from '../../../interfaces/block';\nimport { API_LOCATION } from '../../utils/handle-request';\n\nconst SuperBlock = () => {\n  const [error, setError] = useState<Error | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [items, setItems] = useState([] as Block[]);\n  const params = useParams() as { superblock: string; block: string };\n\nuseEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\nconst fetchData = () => {\n    setLoading(true);\n    fetch(`${API_LOCATION}/${params.superblock}`)\n      .then(res => res.json() as Promise<Block[]>)\n      .then(\n        blocks => {\n          setLoading(false);\n          setItems(blocks);\n        },\n        (error: Error) => {\n          setLoading(false);\n          setError(error);\n        }\n      );\n  };\n\nif (error) {\n    return <div>Error: {error.message}</div>;\n  }\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div>\n      <h1>{params.superblock}</h1>\n      <ul>\n        {items.map(block => (\n          <li key={block.name}>\n            <Link to={`/${params.superblock}/${block.path}`}>{block.name}</Link>\n          </li>\n        ))}\n      </ul>\n      <p>\n        <Link to={'/'}>Return to Superblocks</Link>\n      </p>\n      <hr />\n      <h2>Create New Project</h2>\n      <p>\n        Want to create a new project? Open your terminal and run{' '}\n        <code>pnpm run create-new-project</code>\n      </p>\n    </div>\n  );\n};\n\nexport default SuperBlock;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 1620,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\superblock\\super-block.tsx",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ed0619eab3fe11190333eb84faa3ed2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\configs\\paths.ts",
    "source_type": "git_repo",
    "title": "paths",
    "content": "import { join } from 'path';\n\nexport const CHALLENGE_DIR = join(\n  process.cwd(),\n  '..',\n  '..',\n  '..',\n  'curriculum',\n  'challenges',\n  'english'\n);\n\nexport const META_DIR = join(\n  process.cwd(),\n  '..',\n  '..',\n  '..',\n  'curriculum',\n  'challenges',\n  '_meta'\n);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 270,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\configs\\paths.ts",
      "source_type": "git_repo"
    },
    "token_count": 80,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f1a040b87003c7af4b892452ff2b6890",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\tools\\tools.tsx",
    "source_type": "git_repo",
    "title": "tools",
    "content": "import React, { Link, useParams } from 'react-router-dom';\nimport CreateEmptySteps from '../buttons/create-empty-steps';\nimport CreateNextStep from '../buttons/create-next-step';\nimport DeleteStep from '../buttons/delete-step';\nimport InsertStep from '../buttons/insert-step';\nimport UpdateStepTitles from '../buttons/update-step-titles';\n\nimport './tools.css';\n\nconst Tools = () => {\n  const { block, superblock } = useParams() as {\n    block: string;\n    superblock: string;\n  };\n  return (\n    <div>\n      <h1>Editing Steps for {block}</h1>\n      <p>These tools will allow you to create, delete, and reorder steps.</p>\n      <h2>Create Next Step</h2>\n      <p>This tool creates a new step at the end of the project.</p>\n      <CreateNextStep {...{ superblock, block }} />\n      <h2>Create Empty Steps</h2>\n      <p>\n        This tool creates <code>n</code> number of empty steps at the end of the\n        project.\n      </p>\n      <CreateEmptySteps {...{ superblock, block }} />\n      <h2>Insert Step</h2>\n      <p>\n        This tool inserts a new step as the <code>nth</code> step.\n      </p>\n      <InsertStep {...{ superblock, block }} />\n      <h2>Delete Step</h2>\n      <p>\n        This tool deletes step <code>n</code>.\n      </p>\n      <DeleteStep {...{ superblock, block }} />\n      <h2>Update Step Titles</h2>\n      <p>\n        This reorders the existing steps, updating the meta for the block. You\n        should not need to use this one unless you&apos;ve manually changed the\n        file order.\n      </p>\n      <UpdateStepTitles {...{ superblock, block }} />\n      <hr />\n      <Link to={`/${superblock}/${block}`}>Return to Block</Link>\n    </div>\n  );\n};\n\nexport default Tools;",
    "metadata": {
      "file_extension": ".tsx",
      "file_type": "tsx",
      "file_size": 1697,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\client\\src\\components\\tools\\tools.tsx",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "52c85fc888636b614602c4282231ee4a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\interfaces\\challenge-data.ts",
    "source_type": "git_repo",
    "title": "challenge-data",
    "content": "export interface ChallengeData {\n  name: string;\n  id: string;\n  path: string;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 81,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\interfaces\\challenge-data.ts",
      "source_type": "git_repo"
    },
    "token_count": 21,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f575b8a4b58510caf035224a1bab2693",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\interfaces\\partial-meta.ts",
    "source_type": "git_repo",
    "title": "partial-meta",
    "content": "export interface PartialMeta {\n  name: string;\n  dashedName: string;\n  challengeOrder: { id: string; title: string }[];\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 122,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\interfaces\\partial-meta.ts",
      "source_type": "git_repo"
    },
    "token_count": 31,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "78e1f9611b705eeba6db70172c2596e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\configs\\super-block-list.ts",
    "source_type": "git_repo",
    "title": "super-block-list",
    "content": "export const superBlockList = [\n  {\n    name: 'Legacy Responsive Web Design',\n    path: '01-responsive-web-design'\n  },\n  {\n    name: 'Legacy JavaScript Algorithms and Data Structures',\n    path: '02-javascript-algorithms-and-data-structures'\n  },\n  {\n    name: 'Front End Development Libraries',\n    path: '03-front-end-development-libraries'\n  },\n  {\n    name: 'Data Visualization',\n    path: '04-data-visualization'\n  },\n  {\n    name: 'Back End Development and APIs',\n    path: '05-back-end-development-and-apis'\n  },\n  {\n    name: 'Quality Assurance',\n    path: '06-quality-assurance'\n  },\n  {\n    name: 'Scientific Computing with Python',\n    path: '07-scientific-computing-with-python'\n  },\n  {\n    name: 'Data Analysis with Python',\n    path: '08-data-analysis-with-python'\n  },\n  {\n    name: 'Information Security',\n    path: '09-information-security'\n  },\n  {\n    name: 'Coding Interview Prep',\n    path: '10-coding-interview-prep'\n  },\n  {\n    name: 'Machine Learning with Python',\n    path: '11-machine-learning-with-python'\n  },\n  {\n    name: 'Relational Databases',\n    path: '13-relational-databases'\n  },\n  {\n    name: 'Responsive Web Design',\n    path: '14-responsive-web-design-22'\n  },\n  {\n    name: 'JavaScript Algorithms and Data Structures',\n    path: '15-javascript-algorithms-and-data-structures-22'\n  },\n  {\n    name: 'The Odin Project',\n    path: '16-the-odin-project'\n  },\n  {\n    name: 'College Algebra with Python',\n    path: '17-college-algebra-with-python'\n  },\n  {\n    name: 'Project Euler',\n    path: '18-project-euler'\n  },\n  {\n    name: '(New) Foundational C# with Microsoft',\n    path: '19-foundational-c-sharp-with-microsoft'\n  },\n  {\n    name: 'A2 English for Developers (Beta)',\n    path: '21-a2-english-for-developers'\n  },\n  {\n    name: 'Rosetta Code',\n    path: '22-rosetta-code'\n  },\n  {\n    name: 'Python For Everybody',\n    path: '23-python-for-everybody'\n  },\n  {\n    name: 'B1 English for Developers (Beta)',\n    path: '24-b1-english-for-developers'\n  },\n  {\n    name: 'Certified Full Stack Developer',\n    path: '25-front-end-development'\n  },\n  {\n    name: 'A2 Professional Spanish (Beta)',\n    path: '26-a2-professional-spanish'\n  },\n  {\n    name: 'A2 Professional Chinese (Beta)',\n    path: '27-a2-professional-chinese'\n  },\n  {\n    name: 'Basic HTML',\n    path: '28-basic-html'\n  },\n  {\n    name: 'Semantic HTML',\n    path: '29-semantic-html'\n  },\n  {\n    name: 'A1 Professional Chinese (Beta)',\n    path: '30-a1-professional-chinese'\n  }\n];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2493,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\configs\\super-block-list.ts",
      "source_type": "git_repo"
    },
    "token_count": 687,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5a8ee9d12f3567ded0b671690eb8224a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\interfaces\\tools.ts",
    "source_type": "git_repo",
    "title": "tools",
    "content": "type ToolsFunction = (\n  directory: string\n) => Promise<{ stdout: string; stderr: string }>;\n\ntype ToolsFunctionWithArg = (\n  directory: string,\n  start: number\n) => Promise<{ stdout: string; stderr: string }>;\n\nexport interface ToolsSwitch {\n  'create-next-step': ToolsFunction;\n  'create-empty-steps': ToolsFunctionWithArg;\n  'insert-step': ToolsFunctionWithArg;\n  'delete-step': ToolsFunctionWithArg;\n  'update-step-titles': ToolsFunction;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 445,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\interfaces\\tools.ts",
      "source_type": "git_repo"
    },
    "token_count": 110,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "52fc7d19168a6ee6744c003d34a3a384",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\routes\\block-route.ts",
    "source_type": "git_repo",
    "title": "block-route",
    "content": "import { Request, Response } from 'express';\nimport { getSteps } from '../utils/get-steps';\n\nexport const blockRoute = async (\n  req: Request,\n  res: Response\n): Promise<void> => {\n  const { superblock, block } = req.params;\n\nconst steps = await getSteps(superblock, block);\n\nres.json(steps);\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 300,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\routes\\block-route.ts",
      "source_type": "git_repo"
    },
    "token_count": 73,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "27fb2342d0a02345fd5dc4a5f48dbced",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\routes\\index-route.ts",
    "source_type": "git_repo",
    "title": "index-route",
    "content": "import { Request, Response } from 'express';\nimport { superBlockList } from '../configs/super-block-list';\n\nexport const indexRoute = (req: Request, res: Response): void => {\n  res.json(superBlockList);\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 206,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\routes\\index-route.ts",
      "source_type": "git_repo"
    },
    "token_count": 49,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "27e348fc2dc577d26a77438a3f05bf23",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\routes\\save-route.ts",
    "source_type": "git_repo",
    "title": "save-route",
    "content": "import { Request, Response } from 'express';\nimport { saveStep } from '../utils/save-step';\n\nexport const saveRoute = async (req: Request, res: Response): Promise<void> => {\n  const { superblock, block, step } = req.params;\n  const content = (req.body as { content: string }).content;\n\nconst success = await saveStep(superblock, block, step, content);\n\nconst message = success\n    ? 'Your changes have been saved and are ready to commit!'\n    : 'There was an error when saving your changes. Please try again.';\n\nres.json({ message });\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 544,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\routes\\save-route.ts",
      "source_type": "git_repo"
    },
    "token_count": 127,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "005a2ccc15f709c575b42321b6117ef6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\routes\\step-route.ts",
    "source_type": "git_repo",
    "title": "step-route",
    "content": "import { Request, Response } from 'express';\nimport { getStepContent } from '../utils/get-step-contents';\n\nexport const stepRoute = async (req: Request, res: Response): Promise<void> => {\n  const { superblock, block, step } = req.params;\n\nconst stepContents = await getStepContent(superblock, block, step);\n  res.json(stepContents);\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 338,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\routes\\step-route.ts",
      "source_type": "git_repo"
    },
    "token_count": 80,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c9a351a37e6a6fdf9dca1a70172a176a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\routes\\super-block-route.ts",
    "source_type": "git_repo",
    "title": "super-block-route",
    "content": "import { Request, Response } from 'express';\nimport { getBlocks } from '../utils/get-blocks';\n\nexport const superblockRoute = async (\n  req: Request,\n  res: Response\n): Promise<void> => {\n  const sup = req.params.superblock;\n\nconst blocks = await getBlocks(sup);\n\nres.json(blocks);\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 289,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\routes\\super-block-route.ts",
      "source_type": "git_repo"
    },
    "token_count": 69,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0f9e15357e812205c242ceadac803959",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\utils\\get-blocks.ts",
    "source_type": "git_repo",
    "title": "get-blocks",
    "content": "import { readdir, readFile } from 'fs/promises';\nimport { join } from 'path';\nimport { CHALLENGE_DIR, META_DIR } from '../configs/paths';\n\nimport { PartialMeta } from '../interfaces/partial-meta';\n\ntype Block = {\n  name: string;\n  path: string;\n};\n\nexport const getBlocks = async (sup: string): Promise<Block[]> => {\n  const filePath = join(CHALLENGE_DIR, sup);\n\nconst files = await readdir(filePath);\n  const blocks = await Promise.all(\n    files.map(async file => {\n      const metaPath = join(META_DIR, file, 'meta.json');\n\nconst metaData = JSON.parse(\n        await readFile(metaPath, 'utf8')\n      ) as PartialMeta;\n\nreturn {\n        name: metaData.name,\n        path: file\n      };\n    })\n  );\n\nreturn blocks;\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 735,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\utils\\get-blocks.ts",
      "source_type": "git_repo"
    },
    "token_count": 174,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "eaab8a932a35d5a257266a9a115e6952",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\routes\\tools-route.ts",
    "source_type": "git_repo",
    "title": "tools-route",
    "content": "import { exec } from 'child_process';\nimport { join } from 'path';\nimport { promisify } from 'util';\n\nimport { Request, Response } from 'express';\nimport { ToolsSwitch } from '../interfaces/tools';\n\nconst asyncExec = promisify(exec);\n\nconst toolsSwitch: ToolsSwitch = {\n  'create-next-step': directory => {\n    return asyncExec(`cd ${directory} && pnpm run create-next-step`);\n  },\n  'create-empty-steps': (directory, num) => {\n    return asyncExec(`cd ${directory} && pnpm run create-empty-steps ${num}`);\n  },\n  'insert-step': (directory, num) => {\n    return asyncExec(`cd ${directory} && pnpm run insert-step ${num}`);\n  },\n  'delete-step': (directory, num) => {\n    return asyncExec(`cd ${directory} && pnpm run delete-step ${num}`);\n  },\n  'update-step-titles': directory => {\n    return asyncExec(`cd ${directory} && pnpm run update-step-titles`);\n  }\n};\n\nexport const toolsRoute = async (\n  req: Request,\n  res: Response\n): Promise<void> => {\n  const { superblock, block, command } = req.params;\n  const { num } = req.body as Record<string, number>;\n  const directory = join(\n    __dirname,\n    '..',\n    '..',\n    '..',\n    '..',\n    'curriculum',\n    'challenges',\n    'english',\n    superblock,\n    block\n  );\n\nif (!(command in toolsSwitch)) {\n    res.json({ stdout: '', stderr: 'Command not found' });\n    return;\n  }\n\nconst parsed = command as keyof ToolsSwitch;\n\nconst { stdout, stderr } = await toolsSwitch[parsed](directory, num);\n  res.json({ stdout, stderr });\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1488,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\routes\\tools-route.ts",
      "source_type": "git_repo"
    },
    "token_count": 380,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "719d2110589b77f7feca9e74bf4672c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\utils\\get-step-contents.ts",
    "source_type": "git_repo",
    "title": "get-step-contents",
    "content": "import { readFile } from 'fs/promises';\nimport { join } from 'path';\nimport matter from 'gray-matter';\nimport { CHALLENGE_DIR } from '../configs/paths';\n\nexport const getStepContent = async (\n  sup: string,\n  block: string,\n  step: string\n): Promise<{ name: string; dashedName: string; fileData: string }> => {\n  const filePath = join(CHALLENGE_DIR, sup, block, step);\n\nconst fileData = await readFile(filePath, 'utf8');\n  const name = matter(fileData).data.title as string;\n  const dashedName = matter(fileData).data.dashedName as string;\n  return { name, dashedName, fileData };\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 586,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\utils\\get-step-contents.ts",
      "source_type": "git_repo"
    },
    "token_count": 150,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e157499025da3ae0dd91bfbadb7f4f40",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\utils\\save-step.ts",
    "source_type": "git_repo",
    "title": "save-step",
    "content": "import { writeFile } from 'fs/promises';\nimport { join } from 'path';\nimport { CHALLENGE_DIR } from '../configs/paths';\n\nexport const saveStep = async (\n  sup: string,\n  block: string,\n  step: string,\n  content: string\n): Promise<boolean> => {\n  try {\n    const filePath = join(CHALLENGE_DIR, sup, block, step);\n\nawait writeFile(filePath, content);\n\nreturn true;\n  } catch (err) {\n    console.log(err);\n    return false;\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 436,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\utils\\save-step.ts",
      "source_type": "git_repo"
    },
    "token_count": 111,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a6e6b4f2098c15bcbec72688e24d194c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\utils\\get-steps.ts",
    "source_type": "git_repo",
    "title": "get-steps",
    "content": "import { readdir, readFile } from 'fs/promises';\nimport { join } from 'path';\n\nimport matter from 'gray-matter';\n\nimport { PartialMeta } from '../interfaces/partial-meta';\nimport { CHALLENGE_DIR, META_DIR } from '../configs/paths';\n\nconst getFileOrder = (id: string, meta: PartialMeta) => {\n  return meta.challengeOrder.findIndex(({ id: f }) => f === id);\n};\n\ntype Step = {\n  name: string;\n  id: string;\n  path: string;\n};\n\nexport const getSteps = async (sup: string, block: string): Promise<Step[]> => {\n  const filePath = join(CHALLENGE_DIR, sup, block);\n\nconst metaPath = join(META_DIR, block, 'meta.json');\n\nconst metaData = JSON.parse(await readFile(metaPath, 'utf8')) as PartialMeta;\n\nconst stepFilenames = await readdir(filePath);\n  const stepData = await Promise.all(\n    stepFilenames.map(async filename => {\n      const stepPath = join(filePath, filename);\n      const step = await readFile(stepPath, 'utf8');\n      const frontMatter = matter(step);\n\nreturn {\n        name: frontMatter.data.title as string,\n        id: frontMatter.data.id as string,\n        path: filename\n      };\n    })\n  );\n\nreturn stepData.sort(\n    (a, b) => getFileOrder(a.id, metaData) - getFileOrder(b.id, metaData)\n  );\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1224,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-editor\\api\\utils\\get-steps.ts",
      "source_type": "git_repo"
    },
    "token_count": 302,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "195a214cd3aeba5c4cd31c5a2f78240e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\blocks.ts",
    "source_type": "git_repo",
    "title": "blocks",
    "content": "export enum BlockTypes {\n  lecture = 'lecture',\n  workshop = 'workshop',\n  lab = 'lab',\n  review = 'review',\n  quiz = 'quiz',\n  exam = 'exam'\n}\n\nexport enum BlockLayouts {\n  /**\n   * These three are for the new Full Stack Developer Certification,\n   * so we can play with them without affecting the existing block layouts\n   */\n  ChallengeList = 'challenge-list',\n  Link = 'link',\n  ChallengeGrid = 'challenge-grid',\n\nDialogueGrid = 'dialogue-grid',\n\n/**\n   * ChallengeList displays challenges in a list.\n   * This layout is used in backend blocks, The Odin Project blocks, and blocks in legacy certification.\n   * Example: https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#basic-javascript\n   */\n  LegacyChallengeList = 'legacy-challenge-list',\n\n/**\n   * LegacyChallengeGrid displays challenges in a grid.\n   * This layout is used for step-based blocks.\n   * Example: https://www.freecodecamp.org/learn/2022/responsive-web-design/#learn-html-by-building-a-cat-photo-app\n   */\n  LegacyChallengeGrid = 'legacy-challenge-grid',\n\n/**\n   * Link displays the block as a single link.\n   * This layout is used if the block has a single challenge.\n   * Example: https://www.freecodecamp.org/learn/2022/responsive-web-design/#build-a-survey-form-project\n   */\n  LegacyLink = 'legacy-link',\n\n/**\n   * ProjectList displays a list of certification projects.\n   * This layout is used in legacy certifications.\n   * Example: https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/#javascript-algorithms-and-data-structures-projects\n   */\n  ProjectList = 'project-list'\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1617,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\blocks.ts",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "641a9bc29467250c0f388846d860275f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\catalog.test.ts",
    "source_type": "git_repo",
    "title": "catalog.test",
    "content": "import { catalogSuperBlocks } from './curriculum';\nimport { catalog } from './catalog';\n\ndescribe('catalog', () => {\n  it('should have exactly one entry for each superblock in SuperBlockStage.Catalog', () => {\n    expect(catalog.map(course => course.superBlock.toString()).sort()).toEqual(\n      catalogSuperBlocks.map(sb => sb.toString()).sort()\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 364,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\catalog.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 81,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8336800fd86d6dc8baa4127ffe1ecfc5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\catalog.ts",
    "source_type": "git_repo",
    "title": "catalog",
    "content": "import { SuperBlocks } from './curriculum';\n\nenum Levels {\n  Beginner = 'beginner',\n  Intermediate = 'intermediate',\n  Advanced = 'advanced'\n}\n\ninterface Catalog {\n  superBlock: SuperBlocks;\n  level: Levels;\n  hours: number;\n}\n\nexport const catalog: Catalog[] = [\n  {\n    superBlock: SuperBlocks.BasicHtml,\n    level: Levels.Beginner,\n    hours: 2\n  },\n  {\n    superBlock: SuperBlocks.SemanticHtml,\n    level: Levels.Beginner,\n    hours: 2\n  }\n];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 447,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\catalog.ts",
      "source_type": "git_repo"
    },
    "token_count": 118,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ac32d0ce08f5892fb02fe7f6b2fa1dbf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.test.ts",
    "source_type": "git_repo",
    "title": "certification-settings.test",
    "content": "import { Certification, linkedInCredentialIds } from './certification-settings';\n\ndescribe('linkedInCredentialIds', () => {\n  it('should contain a value for all certifications', () => {\n    const allCertifications = Object.values(Certification).sort();\n    const linkedInCredentialIdsKeys = Object.keys(linkedInCredentialIds).sort();\n\nexpect(linkedInCredentialIdsKeys).toEqual(allCertifications);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 411,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 87,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fd8342556918eb357d78911d0c503520",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\challenge-types.ts",
    "source_type": "git_repo",
    "title": "challenge-types",
    "content": "const html = 0;\nconst js = 1;\nconst backend = 2;\nconst zipline = 3;\nconst frontEndProject = 3;\nconst backEndProject = 4;\nconst jsProject = 5;\nconst modern = 6;\nconst step = 7;\nconst quiz = 8;\nconst invalid = 9;\nconst pythonProject = 10;\nconst video = 11;\nconst codeAllyPractice = 12;\nconst codeAllyCert = 13;\nconst multifileCertProject = 14;\nconst theOdinProject = 15;\nconst colab = 16;\nconst exam = 17;\nconst msTrophy = 18;\nconst multipleChoice = 19;\nconst python = 20;\nconst dialogue = 21;\nconst fillInTheBlank = 22;\nconst multifilePythonCertProject = 23;\nconst generic = 24;\nconst lab = 25;\nconst jsLab = 26;\nconst pyLab = 27;\nconst dailyChallengeJs = 28;\nconst dailyChallengePy = 29;\nconst examDownload = 30;\n\nexport const challengeTypes = {\n  html,\n  js,\n  backend,\n  zipline,\n  frontEndProject,\n  backEndProject,\n  pythonProject,\n  jsProject,\n  modern,\n  step,\n  quiz,\n  invalid,\n  video,\n  codeAllyPractice,\n  codeAllyCert,\n  multifileCertProject,\n  theOdinProject,\n  colab,\n  exam,\n  msTrophy,\n  multipleChoice,\n  python,\n  dialogue,\n  fillInTheBlank,\n  multifilePythonCertProject,\n  generic,\n  lab,\n  jsLab,\n  pyLab,\n  dailyChallengeJs,\n  dailyChallengePy,\n  examDownload\n};\n\nexport const hasNoSolution = (challengeType: number): boolean => {\n  const noSolutions = [\n    backend,\n    zipline,\n    frontEndProject,\n    backEndProject,\n    step,\n    quiz,\n    invalid,\n    pythonProject,\n    video,\n    codeAllyPractice,\n    codeAllyCert,\n    theOdinProject,\n    colab,\n    exam,\n    msTrophy,\n    multipleChoice,\n    dialogue,\n    fillInTheBlank,\n    generic,\n    examDownload\n  ];\n\nreturn noSolutions.includes(challengeType);\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4315,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\challenge-types.ts",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "526634e10e5814a6ac2443089115b10b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\challenge-types.ts",
    "source_type": "git_repo",
    "title": "challenge-types",
    "content": "30; export const challengeTypes = { html, js, backend, zipline, frontEndProject, backEndProject, pythonProject, jsProject, modern, step, quiz, invalid, video, codeAllyPractice, codeAllyCert, multifileCertProject, theOdinProject, colab, exam, msTrophy, multipleChoice, python, dialogue, fillInTheBlank, multifilePythonCertProject, generic, lab, jsLab, pyLab, dailyChallengeJs, dailyChallengePy, examDownload }; export const hasNoSolution = (challengeType: number): boolean => { const noSolutions = [ backend, zipline, frontEndProject, backEndProject, step, quiz, invalid, pythonProject, video, codeAllyPractice, codeAllyCert, theOdinProject, colab, exam, msTrophy, multipleChoice, dialogue, fillInTheBlank, generic, examDownload ]; return noSolutions.includes(challengeType); };\n\n// determine the component view for each challenge\nexport const viewTypes = {\n  [html]: 'classic',\n  [js]: 'classic',\n  [jsProject]: 'classic',\n  [frontEndProject]: 'frontend',\n  [backEndProject]: 'backend',\n  [pythonProject]: 'frontend',\n  [modern]: 'modern',\n  [step]: 'step',\n  [quiz]: 'quiz',\n  [backend]: 'backend',\n  [video]: 'generic',\n  [codeAllyPractice]: 'codeAlly',\n  [codeAllyCert]: 'codeAlly',\n  [multifileCertProject]: 'classic',\n  [theOdinProject]: 'generic',\n  [colab]: 'frontend',\n  [exam]: 'exam',\n  [msTrophy]: 'msTrophy',\n  [multipleChoice]: 'generic',\n  [python]: 'modern',\n  [dialogue]: 'generic',\n  [fillInTheBlank]: 'fillInTheBlank',\n  [multifilePythonCertProject]: 'classic',\n  [generic]: 'generic',\n  [lab]: 'classic',\n  [jsLab]: 'classic',\n  [pyLab]: 'classic',\n  [dailyChallengeJs]: 'classic',\n  [dailyChallengePy]: 'classic',\n  [examDownload]: 'examDownload'\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4315,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\challenge-types.ts",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "3064b96178b073167697637d988d021b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\challenge-types.ts",
    "source_type": "git_repo",
    "title": "challenge-types",
    "content": "noSolutions.includes(challengeType); }; // determine the component view for each challenge export const viewTypes = { [html]: 'classic', [js]: 'classic', [jsProject]: 'classic', [frontEndProject]: 'frontend', [backEndProject]: 'backend', [pythonProject]: 'frontend', [modern]: 'modern', [step]: 'step', [quiz]: 'quiz', [backend]: 'backend', [video]: 'generic', [codeAllyPractice]: 'codeAlly', [codeAllyCert]: 'codeAlly', [multifileCertProject]: 'classic', [theOdinProject]: 'generic', [colab]: 'frontend', [exam]: 'exam', [msTrophy]: 'msTrophy', [multipleChoice]: 'generic', [python]: 'modern', [dialogue]: 'generic', [fillInTheBlank]: 'fillInTheBlank', [multifilePythonCertProject]: 'classic', [generic]: 'generic', [lab]: 'classic', [jsLab]: 'classic', [pyLab]: 'classic', [dailyChallengeJs]: 'classic', [dailyChallengePy]: 'classic', [examDownload]: 'examDownload' };\n\n// determine the type of submit function to use for the challenge on completion\nexport const submitTypes = {\n  [html]: 'tests',\n  [js]: 'tests',\n  [jsProject]: 'tests',\n  // requires just a single url\n  // like codepen.com/my-project\n  [frontEndProject]: 'project.frontEnd',\n  // requires two urls\n  // a hosted URL where the app is running live\n  // project code url like GitHub\n  [backEndProject]: 'project.backEnd',\n  [pythonProject]: 'project.backEnd',\n  [step]: 'step',\n  [quiz]: 'tests',\n  [backend]: 'backend',\n  [modern]: 'tests',\n  [video]: 'tests',\n  [codeAllyCert]: 'project.frontEnd',\n  [multifileCertProject]: 'tests',\n  [theOdinProject]: 'tests',\n  [colab]: 'project.backEnd',\n  [exam]: 'exam',\n  [msTrophy]: 'msTrophy',\n  [multipleChoice]: 'tests',\n  [python]: 'tests',\n  [dialogue]: 'tests',\n  [fillInTheBlank]: 'tests',\n  [multifilePythonCertProject]: 'tests',\n  [generic]: 'tests',\n  [lab]: 'tests',\n  [jsLab]: 'tests',\n  [pyLab]: 'tests',\n  [dailyChallengeJs]: 'tests',\n  [dailyChallengePy]: 'tests',\n  [examDownload]: 'examDownload'\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4315,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\challenge-types.ts",
      "source_type": "git_repo"
    },
    "token_count": 567,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "0dc8bb20c9354bbd82e3de841fbf54bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\challenge-types.ts",
    "source_type": "git_repo",
    "title": "challenge-types",
    "content": "// like codepen.com/my-project [frontEndProject]: 'project.frontEnd', // requires two urls // a hosted URL where the app is running live // project code url like GitHub [backEndProject]: 'project.backEnd', [pythonProject]: 'project.backEnd', [step]: 'step', [quiz]: 'tests', [backend]: 'backend', [modern]: 'tests', [video]: 'tests', [codeAllyCert]: 'project.frontEnd', [multifileCertProject]: 'tests', [theOdinProject]: 'tests', [colab]: 'project.backEnd', [exam]: 'exam', [msTrophy]: 'msTrophy', [multipleChoice]: 'tests', [python]: 'tests', [dialogue]: 'tests', [fillInTheBlank]: 'tests', [multifilePythonCertProject]: 'tests', [generic]: 'tests', [lab]: 'tests', [jsLab]: 'tests', [pyLab]: 'tests', [dailyChallengeJs]: 'tests', [dailyChallengePy]: 'tests', [examDownload]: 'examDownload' };\n\nexport const canSaveToDB = (challengeType: number): boolean =>\n  challengeType === challengeTypes.multifileCertProject ||\n  challengeType === challengeTypes.multifilePythonCertProject;\n\nexport const dailyCodingChallengeTypes = [\n  challengeTypes.dailyChallengeJs,\n  challengeTypes.dailyChallengePy\n];\n\nexport const getIsDailyCodingChallenge = (challengeType: number): boolean =>\n  dailyCodingChallengeTypes.includes(challengeType);\n\nexport const dailyCodingChallengeLanguages = {\n  [challengeTypes.dailyChallengeJs]: 'javascript',\n  [challengeTypes.dailyChallengePy]: 'python'\n};\n\nexport const getDailyCodingChallengeLanguage = (\n  challengeType: number\n): string | undefined => dailyCodingChallengeLanguages[challengeType];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4315,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\challenge-types.ts",
      "source_type": "git_repo"
    },
    "token_count": 379,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "f880291b141121e2a4621abbc73fce6e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\chapters.ts",
    "source_type": "git_repo",
    "title": "chapters",
    "content": "import type { Module } from './modules';\n\n// TODO: Dynamically create these from intro.json or full-stack.json\nexport enum FsdChapters {\n  Welcome = 'freecodecamp',\n  Html = 'html',\n  Css = 'css',\n  Javascript = 'javascript',\n  FrontendLibraries = 'frontend-libraries',\n  Python = 'python',\n  RelationalDatabases = 'relational-databases',\n  BackendJavascript = 'backend-javascript',\n  Career = 'career'\n}\n\nexport interface Chapter {\n  dashedName: string;\n  comingSoon?: boolean;\n  modules: Module[];\n  chapterType?: string;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 526,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\chapters.ts",
      "source_type": "git_repo"
    },
    "token_count": 131,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7ad5883a8afce380154b5c4c00a87259",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\constants.test.ts",
    "source_type": "git_repo",
    "title": "constants.test",
    "content": "import { blocklistedUsernames } from './constants';\n\ndescribe('constants', () => {\n  describe('blocklistedUsernames', () => {\n    it('should not contain duplicate values', () => {\n      const uniqueValues = new Set(blocklistedUsernames);\n      expect(blocklistedUsernames.length).toEqual(uniqueValues.size);\n    });\n\nit('should contain all the letters in the latin alphabet', () => {\n      const alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('');\n      expect(blocklistedUsernames).toEqual(expect.arrayContaining(alphabet));\n    });\n  });\n});\n\n// Type tests:\ntype BlocklistedUsernames = (typeof blocklistedUsernames)[number];\n\ntype HasString = string extends BlocklistedUsernames ? true : false;\n\ntype Expect<T extends true> = T;\n\n// @ts-expect-error - This is intended to fail since we want to ensure that blocklistedUsernames is an array of literals\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype Test = Expect<HasString>;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 949,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\constants.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 202,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0f267af905aef4503408e23d1bd00cc1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "import { SuperBlocks } from '../../shared/config/curriculum';\n\n/**\n * Certifications are not equivalent to superblocks. Each superblock corresponds\n * to 0 or 1 certifications, but a certification may not correspond to a\n * superblock.\n *\n * As an example of the former: the CodingInterviewPrep superblock does not\n * correspond to a certification. As an example of the latter: the legacy\n * front-end certification no longer has a corresponding superblock.\n *\n * The value of each enum member is the slug of the corresponding certification.\n */\nexport enum Certification {\n  RespWebDesign = 'responsive-web-design',\n  JsAlgoDataStructNew = 'javascript-algorithms-and-data-structures-v8',\n  FrontEndDevLibs = 'front-end-development-libraries',\n  DataVis = 'data-visualization',\n  RelationalDb = 'relational-database-v8',\n  BackEndDevApis = 'back-end-development-and-apis',\n  QualityAssurance = 'quality-assurance-v7',\n  SciCompPy = 'scientific-computing-with-python-v7',\n  DataAnalysisPy = 'data-analysis-with-python-v7',\n  InfoSec = 'information-security-v7',\n  MachineLearningPy = 'machine-learning-with-python-v7',\n  CollegeAlgebraPy = 'college-algebra-with-python-v8',\n  FoundationalCSharp = 'foundational-c-sharp-with-microsoft',\n  // Upcoming certifications\n  FullStackDeveloper = 'full-stack-developer-v9',\n  A2English = 'a2-english-for-developers-v8',\n  B1English = 'b1-english-for-developers-v8',\n  A2Spanish = 'a2-professional-spanish-v8',\n  A2Chinese = 'a2-professional-chinese-v8',\n  A1Chinese = 'a1-professional-chinese-v8',\n  // Legacy certifications\n  LegacyFrontEnd = 'legacy-front-end',\n  JsAlgoDataStruct = 'javascript-algorithms-and-data-structures',\n  LegacyBackEnd = 'legacy-back-end',\n  LegacyDataVis = 'legacy-data-visualization',\n  LegacyInfoSecQa = 'information-security-and-quality-assurance',\n  LegacyFullStack = 'full-stack'\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 0,
    "total_chunks": 19
  },
  {
    "id": "c13debeb6a765ac617542387ec7de0cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "FrontEndDevLibs = 'front-end-development-libraries', DataVis = 'data-visualization', RelationalDb = 'relational-database-v8', BackEndDevApis = 'back-end-development-and-apis', QualityAssurance = 'quality-assurance-v7', SciCompPy = 'scientific-computing-with-python-v7', DataAnalysisPy = 'data-analysis-with-python-v7', InfoSec = 'information-security-v7', MachineLearningPy = 'machine-learning-with-python-v7', CollegeAlgebraPy = 'college-algebra-with-python-v8', FoundationalCSharp = 'foundational-c-sharp-with-microsoft', // Upcoming certifications FullStackDeveloper = 'full-stack-developer-v9', A2English = 'a2-english-for-developers-v8', B1English = 'b1-english-for-developers-v8', A2Spanish = 'a2-professional-spanish-v8', A2Chinese = 'a2-professional-chinese-v8', A1Chinese = 'a1-professional-chinese-v8', // Legacy certifications LegacyFrontEnd = 'legacy-front-end', JsAlgoDataStruct = 'javascript-algorithms-and-data-structures', LegacyBackEnd = 'legacy-back-end', LegacyDataVis = 'legacy-data-visualization', LegacyInfoSecQa = 'information-security-and-quality-assurance', LegacyFullStack = 'full-stack' }\n\n// \"Current\" certifications are the subset of standard certifications that are\n// live and not legacy.\nexport const currentCertifications = [\n  Certification.RespWebDesign,\n  Certification.JsAlgoDataStructNew,\n  Certification.FrontEndDevLibs,\n  Certification.DataVis,\n  Certification.RelationalDb,\n  Certification.BackEndDevApis,\n  Certification.QualityAssurance,\n  Certification.SciCompPy,\n  Certification.DataAnalysisPy,\n  Certification.InfoSec,\n  Certification.MachineLearningPy,\n  Certification.CollegeAlgebraPy,\n  Certification.FoundationalCSharp\n] as const;\n\n// \"Legacy\" certifications are another class of standard certifications. They're\n// still live and claimable, but some parts of the UI handle them differently.\nexport const legacyCertifications = [\n  Certification.LegacyFrontEnd,\n  Certification.JsAlgoDataStruct,\n  Certification.LegacyBackEnd,\n  Certification.LegacyDataVis,\n  Certification.LegacyInfoSecQa\n] as const;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 19
  },
  {
    "id": "5a5d15eb2d977ca72fbdf3952014cb9f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "'full-stack' } // \"Current\" certifications are the subset of standard certifications that are // live and not legacy. export const currentCertifications = [ Certification.RespWebDesign, Certification.JsAlgoDataStructNew, Certification.FrontEndDevLibs, Certification.DataVis, Certification.RelationalDb, Certification.BackEndDevApis, Certification.QualityAssurance, Certification.SciCompPy, Certification.DataAnalysisPy, Certification.InfoSec, Certification.MachineLearningPy, Certification.CollegeAlgebraPy, Certification.FoundationalCSharp ] as const; // \"Legacy\" certifications are another class of standard certifications. They're // still live and claimable, but some parts of the UI handle them differently. export const legacyCertifications = [ Certification.LegacyFrontEnd, Certification.JsAlgoDataStruct, Certification.LegacyBackEnd, Certification.LegacyDataVis, Certification.LegacyInfoSecQa ] as const;\n\n// The Legacy Full Stack certification can only be claimed when specific\n// \"current\" and \"legacy\" certifications have been claimed.\nexport const legacyFullStackCertification = [\n  Certification.LegacyFullStack\n] as const;\n\n// \"Upcoming\" certifications are standard certifications that are not live unless\n// showUpcomingChanges is true.\nexport const upcomingCertifications = [\n  Certification.FullStackDeveloper,\n  Certification.A2English,\n  Certification.B1English,\n  Certification.A2Spanish,\n  Certification.A2Chinese,\n  Certification.A1Chinese\n] as const;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 309,
    "chunk_index": 2,
    "total_chunks": 19
  },
  {
    "id": "4f44840ebff46a8ddff49970d8ffd2af",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "the UI handle them differently. export const legacyCertifications = [ Certification.LegacyFrontEnd, Certification.JsAlgoDataStruct, Certification.LegacyBackEnd, Certification.LegacyDataVis, Certification.LegacyInfoSecQa ] as const; // The Legacy Full Stack certification can only be claimed when specific // \"current\" and \"legacy\" certifications have been claimed. export const legacyFullStackCertification = [ Certification.LegacyFullStack ] as const; // \"Upcoming\" certifications are standard certifications that are not live unless // showUpcomingChanges is true. export const upcomingCertifications = [ Certification.FullStackDeveloper, Certification.A2English, Certification.B1English, Certification.A2Spanish, Certification.A2Chinese, Certification.A1Chinese ] as const;\n\nexport const certTypes = {\n  frontEnd: 'isFrontEndCert',\n  backEnd: 'isBackEndCert',\n  dataVis: 'isDataVisCert',\n  respWebDesign: 'isRespWebDesignCert',\n  frontEndDevLibs: 'isFrontEndLibsCert',\n  dataVis2018: 'is2018DataVisCert',\n  jsAlgoDataStruct: 'isJsAlgoDataStructCert',\n  apisMicroservices: 'isApisMicroservicesCert',\n  infosecQa: 'isInfosecQaCert',\n  qaV7: 'isQaCertV7',\n  infosecV7: 'isInfosecCertV7',\n  sciCompPyV7: 'isSciCompPyCertV7',\n  dataAnalysisPyV7: 'isDataAnalysisPyCertV7',\n  machineLearningPyV7: 'isMachineLearningPyCertV7',\n  fullStack: 'isFullStackCert',\n  relationalDatabaseV8: 'isRelationalDatabaseCertV8',\n  collegeAlgebraPyV8: 'isCollegeAlgebraPyCertV8',\n  foundationalCSharpV8: 'isFoundationalCSharpCertV8',\n  jsAlgoDataStructV8: 'isJsAlgoDataStructCertV8'\n} as const;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 3,
    "total_chunks": 19
  },
  {
    "id": "82f032c0b0194d644a1ba8f74e33cb7b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "const; // \"Upcoming\" certifications are standard certifications that are not live unless // showUpcomingChanges is true. export const upcomingCertifications = [ Certification.FullStackDeveloper, Certification.A2English, Certification.B1English, Certification.A2Spanish, Certification.A2Chinese, Certification.A1Chinese ] as const; export const certTypes = { frontEnd: 'isFrontEndCert', backEnd: 'isBackEndCert', dataVis: 'isDataVisCert', respWebDesign: 'isRespWebDesignCert', frontEndDevLibs: 'isFrontEndLibsCert', dataVis2018: 'is2018DataVisCert', jsAlgoDataStruct: 'isJsAlgoDataStructCert', apisMicroservices: 'isApisMicroservicesCert', infosecQa: 'isInfosecQaCert', qaV7: 'isQaCertV7', infosecV7: 'isInfosecCertV7', sciCompPyV7: 'isSciCompPyCertV7', dataAnalysisPyV7: 'isDataAnalysisPyCertV7', machineLearningPyV7: 'isMachineLearningPyCertV7', fullStack: 'isFullStackCert', relationalDatabaseV8: 'isRelationalDatabaseCertV8', collegeAlgebraPyV8: 'isCollegeAlgebraPyCertV8', foundationalCSharpV8: 'isFoundationalCSharpCertV8', jsAlgoDataStructV8: 'isJsAlgoDataStructCertV8' } as const;\n\nexport const certIds = {\n  legacyFrontEndChallengeId: '561add10cb82ac38a17513be',\n  legacyBackEndChallengeId: '660add10cb82ac38a17513be',\n  legacyDataVisId: '561add10cb82ac39a17513bc',\n  legacyInfosecQaId: '561add10cb82ac38a17213bc',\n  legacyFullStackId: '561add10cb82ac38a17213bd',\n  respWebDesignId: '561add10cb82ac38a17513bc',\n  frontEndDevLibsId: '561acd10cb82ac38a17513bc',\n  dataVis2018Id: '5a553ca864b52e1d8bceea14',\n  jsAlgoDataStructId: '561abd10cb81ac38a17513bc',\n  apisMicroservicesId: '561add10cb82ac38a17523bc',\n  qaV7Id: '5e611829481575a52dc59c0e',\n  infosecV7Id: '5e6021435ac9d0ecd8b94b00',\n  sciCompPyV7Id: '5e44431b903586ffb414c951',\n  dataAnalysisPyV7Id: '5e46fc95ac417301a38fb934',\n  machineLearningPyV7Id: '5e46fc95ac417301a38fb935',\n  relationalDatabaseV8Id: '606243f50267e718b1e755f4',\n  collegeAlgebraPyV8Id: '61531b20cc9dfa2741a5b800',\n  foundationalCSharpV8Id: '647f7da207d29547b3bee1ba',\n  jsAlgoDataStructV8Id: '658180220947283cdc0689ce'\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 733,
    "chunk_index": 4,
    "total_chunks": 19
  },
  {
    "id": "d6b95d8a1e4e63aa6e41255542716fc9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "'isFrontEndLibsCert', dataVis2018: 'is2018DataVisCert', jsAlgoDataStruct: 'isJsAlgoDataStructCert', apisMicroservices: 'isApisMicroservicesCert', infosecQa: 'isInfosecQaCert', qaV7: 'isQaCertV7', infosecV7: 'isInfosecCertV7', sciCompPyV7: 'isSciCompPyCertV7', dataAnalysisPyV7: 'isDataAnalysisPyCertV7', machineLearningPyV7: 'isMachineLearningPyCertV7', fullStack: 'isFullStackCert', relationalDatabaseV8: 'isRelationalDatabaseCertV8', collegeAlgebraPyV8: 'isCollegeAlgebraPyCertV8', foundationalCSharpV8: 'isFoundationalCSharpCertV8', jsAlgoDataStructV8: 'isJsAlgoDataStructCertV8' } as const; export const certIds = { legacyFrontEndChallengeId: '561add10cb82ac38a17513be', legacyBackEndChallengeId: '660add10cb82ac38a17513be', legacyDataVisId: '561add10cb82ac39a17513bc', legacyInfosecQaId: '561add10cb82ac38a17213bc', legacyFullStackId: '561add10cb82ac38a17213bd', respWebDesignId: '561add10cb82ac38a17513bc', frontEndDevLibsId: '561acd10cb82ac38a17513bc', dataVis2018Id: '5a553ca864b52e1d8bceea14', jsAlgoDataStructId: '561abd10cb81ac38a17513bc', apisMicroservicesId: '561add10cb82ac38a17523bc', qaV7Id: '5e611829481575a52dc59c0e', infosecV7Id: '5e6021435ac9d0ecd8b94b00', sciCompPyV7Id: '5e44431b903586ffb414c951', dataAnalysisPyV7Id: '5e46fc95ac417301a38fb934', machineLearningPyV7Id: '5e46fc95ac417301a38fb935', relationalDatabaseV8Id: '606243f50267e718b1e755f4', collegeAlgebraPyV8Id: '61531b20cc9dfa2741a5b800', foundationalCSharpV8Id: '647f7da207d29547b3bee1ba', jsAlgoDataStructV8Id: '658180220947283cdc0689ce' };\n\nexport const completionHours = {\n  [certTypes.frontEnd]: 300,\n  [certTypes.backEnd]: 300,\n  [certTypes.dataVis]: 300,\n  [certTypes.infosecQa]: 300,\n  [certTypes.fullStack]: 1800,\n  [certTypes.respWebDesign]: 300,\n  [certTypes.frontEndDevLibs]: 300,\n  [certTypes.jsAlgoDataStruct]: 300,\n  [certTypes.dataVis2018]: 300,\n  [certTypes.apisMicroservices]: 300,\n  [certTypes.qaV7]: 300,\n  [certTypes.infosecV7]: 300,\n  [certTypes.sciCompPyV7]: 300,\n  [certTypes.dataAnalysisPyV7]: 300,\n  [certTypes.machineLearningPyV7]: 300,\n  [certTypes.relationalDatabaseV8]: 300,\n  [certTypes.collegeAlgebraPyV8]: 300,\n  [certTypes.foundationalCSharpV8]: 300,\n  [certTypes.jsAlgoDataStructV8]: 300\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 843,
    "chunk_index": 5,
    "total_chunks": 19
  },
  {
    "id": "bbd56401f569788d0d9ae01c86aeb3b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "'561add10cb82ac38a17213bc', legacyFullStackId: '561add10cb82ac38a17213bd', respWebDesignId: '561add10cb82ac38a17513bc', frontEndDevLibsId: '561acd10cb82ac38a17513bc', dataVis2018Id: '5a553ca864b52e1d8bceea14', jsAlgoDataStructId: '561abd10cb81ac38a17513bc', apisMicroservicesId: '561add10cb82ac38a17523bc', qaV7Id: '5e611829481575a52dc59c0e', infosecV7Id: '5e6021435ac9d0ecd8b94b00', sciCompPyV7Id: '5e44431b903586ffb414c951', dataAnalysisPyV7Id: '5e46fc95ac417301a38fb934', machineLearningPyV7Id: '5e46fc95ac417301a38fb935', relationalDatabaseV8Id: '606243f50267e718b1e755f4', collegeAlgebraPyV8Id: '61531b20cc9dfa2741a5b800', foundationalCSharpV8Id: '647f7da207d29547b3bee1ba', jsAlgoDataStructV8Id: '658180220947283cdc0689ce' }; export const completionHours = { [certTypes.frontEnd]: 300, [certTypes.backEnd]: 300, [certTypes.dataVis]: 300, [certTypes.infosecQa]: 300, [certTypes.fullStack]: 1800, [certTypes.respWebDesign]: 300, [certTypes.frontEndDevLibs]: 300, [certTypes.jsAlgoDataStruct]: 300, [certTypes.dataVis2018]: 300, [certTypes.apisMicroservices]: 300, [certTypes.qaV7]: 300, [certTypes.infosecV7]: 300, [certTypes.sciCompPyV7]: 300, [certTypes.dataAnalysisPyV7]: 300, [certTypes.machineLearningPyV7]: 300, [certTypes.relationalDatabaseV8]: 300, [certTypes.collegeAlgebraPyV8]: 300, [certTypes.foundationalCSharpV8]: 300, [certTypes.jsAlgoDataStructV8]: 300 };\n\nexport const certSlugTypeMap = {\n  // legacy\n  [Certification.LegacyFrontEnd]: certTypes.frontEnd,\n  [Certification.JsAlgoDataStruct]: certTypes.jsAlgoDataStruct,\n  [Certification.LegacyBackEnd]: certTypes.backEnd,\n  [Certification.LegacyDataVis]: certTypes.dataVis,\n  [Certification.LegacyInfoSecQa]: certTypes.infosecQa,\n  [Certification.LegacyFullStack]: certTypes.fullStack,",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 655,
    "chunk_index": 6,
    "total_chunks": 19
  },
  {
    "id": "e4e259e841eaa232573cb0368a727c46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "dataAnalysisPyV7Id: '5e46fc95ac417301a38fb934', machineLearningPyV7Id: '5e46fc95ac417301a38fb935', relationalDatabaseV8Id: '606243f50267e718b1e755f4', collegeAlgebraPyV8Id: '61531b20cc9dfa2741a5b800', foundationalCSharpV8Id: '647f7da207d29547b3bee1ba', jsAlgoDataStructV8Id: '658180220947283cdc0689ce' }; export const completionHours = { [certTypes.frontEnd]: 300, [certTypes.backEnd]: 300, [certTypes.dataVis]: 300, [certTypes.infosecQa]: 300, [certTypes.fullStack]: 1800, [certTypes.respWebDesign]: 300, [certTypes.frontEndDevLibs]: 300, [certTypes.jsAlgoDataStruct]: 300, [certTypes.dataVis2018]: 300, [certTypes.apisMicroservices]: 300, [certTypes.qaV7]: 300, [certTypes.infosecV7]: 300, [certTypes.sciCompPyV7]: 300, [certTypes.dataAnalysisPyV7]: 300, [certTypes.machineLearningPyV7]: 300, [certTypes.relationalDatabaseV8]: 300, [certTypes.collegeAlgebraPyV8]: 300, [certTypes.foundationalCSharpV8]: 300, [certTypes.jsAlgoDataStructV8]: 300 }; export const certSlugTypeMap = { // legacy [Certification.LegacyFrontEnd]: certTypes.frontEnd, [Certification.JsAlgoDataStruct]: certTypes.jsAlgoDataStruct, [Certification.LegacyBackEnd]: certTypes.backEnd, [Certification.LegacyDataVis]: certTypes.dataVis, [Certification.LegacyInfoSecQa]: certTypes.infosecQa, [Certification.LegacyFullStack]: certTypes.fullStack,\n\n// modern\n  [Certification.RespWebDesign]: certTypes.respWebDesign,\n  [Certification.JsAlgoDataStructNew]: certTypes.jsAlgoDataStructV8,\n  [Certification.FrontEndDevLibs]: certTypes.frontEndDevLibs,\n  [Certification.DataVis]: certTypes.dataVis2018,\n  [Certification.BackEndDevApis]: certTypes.apisMicroservices,\n  [Certification.QualityAssurance]: certTypes.qaV7,\n  [Certification.InfoSec]: certTypes.infosecV7,\n  [Certification.SciCompPy]: certTypes.sciCompPyV7,\n  [Certification.DataAnalysisPy]: certTypes.dataAnalysisPyV7,\n  [Certification.MachineLearningPy]: certTypes.machineLearningPyV7,\n  [Certification.RelationalDb]: certTypes.relationalDatabaseV8,\n  [Certification.CollegeAlgebraPy]: certTypes.collegeAlgebraPyV8,\n  [Certification.FoundationalCSharp]: certTypes.foundationalCSharpV8",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 679,
    "chunk_index": 7,
    "total_chunks": 19
  },
  {
    "id": "b62dec69d9049b2a40f82c665b3fc887",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "[certTypes.respWebDesign]: 300, [certTypes.frontEndDevLibs]: 300, [certTypes.jsAlgoDataStruct]: 300, [certTypes.dataVis2018]: 300, [certTypes.apisMicroservices]: 300, [certTypes.qaV7]: 300, [certTypes.infosecV7]: 300, [certTypes.sciCompPyV7]: 300, [certTypes.dataAnalysisPyV7]: 300, [certTypes.machineLearningPyV7]: 300, [certTypes.relationalDatabaseV8]: 300, [certTypes.collegeAlgebraPyV8]: 300, [certTypes.foundationalCSharpV8]: 300, [certTypes.jsAlgoDataStructV8]: 300 }; export const certSlugTypeMap = { // legacy [Certification.LegacyFrontEnd]: certTypes.frontEnd, [Certification.JsAlgoDataStruct]: certTypes.jsAlgoDataStruct, [Certification.LegacyBackEnd]: certTypes.backEnd, [Certification.LegacyDataVis]: certTypes.dataVis, [Certification.LegacyInfoSecQa]: certTypes.infosecQa, [Certification.LegacyFullStack]: certTypes.fullStack, // modern [Certification.RespWebDesign]: certTypes.respWebDesign, [Certification.JsAlgoDataStructNew]: certTypes.jsAlgoDataStructV8, [Certification.FrontEndDevLibs]: certTypes.frontEndDevLibs, [Certification.DataVis]: certTypes.dataVis2018, [Certification.BackEndDevApis]: certTypes.apisMicroservices, [Certification.QualityAssurance]: certTypes.qaV7, [Certification.InfoSec]: certTypes.infosecV7, [Certification.SciCompPy]: certTypes.sciCompPyV7, [Certification.DataAnalysisPy]: certTypes.dataAnalysisPyV7, [Certification.MachineLearningPy]: certTypes.machineLearningPyV7, [Certification.RelationalDb]: certTypes.relationalDatabaseV8, [Certification.CollegeAlgebraPy]: certTypes.collegeAlgebraPyV8, [Certification.FoundationalCSharp]: certTypes.foundationalCSharpV8\n\n// upcoming\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 8,
    "total_chunks": 19
  },
  {
    "id": "8f11e0e04e5607567ebd424981e76c10",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "300, [certTypes.jsAlgoDataStruct]: 300, [certTypes.dataVis2018]: 300, [certTypes.apisMicroservices]: 300, [certTypes.qaV7]: 300, [certTypes.infosecV7]: 300, [certTypes.sciCompPyV7]: 300, [certTypes.dataAnalysisPyV7]: 300, [certTypes.machineLearningPyV7]: 300, [certTypes.relationalDatabaseV8]: 300, [certTypes.collegeAlgebraPyV8]: 300, [certTypes.foundationalCSharpV8]: 300, [certTypes.jsAlgoDataStructV8]: 300 }; export const certSlugTypeMap = { // legacy [Certification.LegacyFrontEnd]: certTypes.frontEnd, [Certification.JsAlgoDataStruct]: certTypes.jsAlgoDataStruct, [Certification.LegacyBackEnd]: certTypes.backEnd, [Certification.LegacyDataVis]: certTypes.dataVis, [Certification.LegacyInfoSecQa]: certTypes.infosecQa, [Certification.LegacyFullStack]: certTypes.fullStack, // modern [Certification.RespWebDesign]: certTypes.respWebDesign, [Certification.JsAlgoDataStructNew]: certTypes.jsAlgoDataStructV8, [Certification.FrontEndDevLibs]: certTypes.frontEndDevLibs, [Certification.DataVis]: certTypes.dataVis2018, [Certification.BackEndDevApis]: certTypes.apisMicroservices, [Certification.QualityAssurance]: certTypes.qaV7, [Certification.InfoSec]: certTypes.infosecV7, [Certification.SciCompPy]: certTypes.sciCompPyV7, [Certification.DataAnalysisPy]: certTypes.dataAnalysisPyV7, [Certification.MachineLearningPy]: certTypes.machineLearningPyV7, [Certification.RelationalDb]: certTypes.relationalDatabaseV8, [Certification.CollegeAlgebraPy]: certTypes.collegeAlgebraPyV8, [Certification.FoundationalCSharp]: certTypes.foundationalCSharpV8 // upcoming };\n\nexport const superBlockCertTypeMap = {\n  // legacy\n  'legacy-front-end': certTypes.frontEnd,\n  [SuperBlocks.JsAlgoDataStruct]: certTypes.jsAlgoDataStruct,\n  'legacy-back-end': certTypes.backEnd,\n  'legacy-data-visualization': certTypes.dataVis,\n  'information-security-and-quality-assurance': certTypes.infosecQa,\n  'full-stack': certTypes.fullStack,",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 557,
    "chunk_index": 9,
    "total_chunks": 19
  },
  {
    "id": "335bedacd490660d71ce842da921ea2c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "[certTypes.collegeAlgebraPyV8]: 300, [certTypes.foundationalCSharpV8]: 300, [certTypes.jsAlgoDataStructV8]: 300 }; export const certSlugTypeMap = { // legacy [Certification.LegacyFrontEnd]: certTypes.frontEnd, [Certification.JsAlgoDataStruct]: certTypes.jsAlgoDataStruct, [Certification.LegacyBackEnd]: certTypes.backEnd, [Certification.LegacyDataVis]: certTypes.dataVis, [Certification.LegacyInfoSecQa]: certTypes.infosecQa, [Certification.LegacyFullStack]: certTypes.fullStack, // modern [Certification.RespWebDesign]: certTypes.respWebDesign, [Certification.JsAlgoDataStructNew]: certTypes.jsAlgoDataStructV8, [Certification.FrontEndDevLibs]: certTypes.frontEndDevLibs, [Certification.DataVis]: certTypes.dataVis2018, [Certification.BackEndDevApis]: certTypes.apisMicroservices, [Certification.QualityAssurance]: certTypes.qaV7, [Certification.InfoSec]: certTypes.infosecV7, [Certification.SciCompPy]: certTypes.sciCompPyV7, [Certification.DataAnalysisPy]: certTypes.dataAnalysisPyV7, [Certification.MachineLearningPy]: certTypes.machineLearningPyV7, [Certification.RelationalDb]: certTypes.relationalDatabaseV8, [Certification.CollegeAlgebraPy]: certTypes.collegeAlgebraPyV8, [Certification.FoundationalCSharp]: certTypes.foundationalCSharpV8 // upcoming }; export const superBlockCertTypeMap = { // legacy 'legacy-front-end': certTypes.frontEnd, [SuperBlocks.JsAlgoDataStruct]: certTypes.jsAlgoDataStruct, 'legacy-back-end': certTypes.backEnd, 'legacy-data-visualization': certTypes.dataVis, 'information-security-and-quality-assurance': certTypes.infosecQa, 'full-stack': certTypes.fullStack,\n\n// modern\n  [SuperBlocks.RespWebDesign]: certTypes.respWebDesign,\n  [SuperBlocks.JsAlgoDataStructNew]: certTypes.jsAlgoDataStructV8,\n  [SuperBlocks.FrontEndDevLibs]: certTypes.frontEndDevLibs,\n  [SuperBlocks.DataVis]: certTypes.dataVis2018,\n  [SuperBlocks.BackEndDevApis]: certTypes.apisMicroservices,\n  [SuperBlocks.QualityAssurance]: certTypes.qaV7,\n  [SuperBlocks.InfoSec]: certTypes.infosecV7,\n  [SuperBlocks.SciCompPy]: certTypes.sciCompPyV7,\n  [SuperBlocks.DataAnalysisPy]: certTypes.dataAnalysisPyV7,\n  [SuperBlocks.MachineLearningPy]: certTypes.machineLearningPyV7,\n  [SuperBlocks.RelationalDb]: certTypes.relationalDatabaseV8,\n  [SuperBlocks.CollegeAlgebraPy]: certTypes.collegeAlgebraPyV8,\n  [SuperBlocks.FoundationalCSharp]: certTypes.foundationalCSharpV8,",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 668,
    "chunk_index": 10,
    "total_chunks": 19
  },
  {
    "id": "6b6f4ad57ea99afd374a919791cbd971",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "[Certification.RespWebDesign]: certTypes.respWebDesign, [Certification.JsAlgoDataStructNew]: certTypes.jsAlgoDataStructV8, [Certification.FrontEndDevLibs]: certTypes.frontEndDevLibs, [Certification.DataVis]: certTypes.dataVis2018, [Certification.BackEndDevApis]: certTypes.apisMicroservices, [Certification.QualityAssurance]: certTypes.qaV7, [Certification.InfoSec]: certTypes.infosecV7, [Certification.SciCompPy]: certTypes.sciCompPyV7, [Certification.DataAnalysisPy]: certTypes.dataAnalysisPyV7, [Certification.MachineLearningPy]: certTypes.machineLearningPyV7, [Certification.RelationalDb]: certTypes.relationalDatabaseV8, [Certification.CollegeAlgebraPy]: certTypes.collegeAlgebraPyV8, [Certification.FoundationalCSharp]: certTypes.foundationalCSharpV8 // upcoming }; export const superBlockCertTypeMap = { // legacy 'legacy-front-end': certTypes.frontEnd, [SuperBlocks.JsAlgoDataStruct]: certTypes.jsAlgoDataStruct, 'legacy-back-end': certTypes.backEnd, 'legacy-data-visualization': certTypes.dataVis, 'information-security-and-quality-assurance': certTypes.infosecQa, 'full-stack': certTypes.fullStack, // modern [SuperBlocks.RespWebDesign]: certTypes.respWebDesign, [SuperBlocks.JsAlgoDataStructNew]: certTypes.jsAlgoDataStructV8, [SuperBlocks.FrontEndDevLibs]: certTypes.frontEndDevLibs, [SuperBlocks.DataVis]: certTypes.dataVis2018, [SuperBlocks.BackEndDevApis]: certTypes.apisMicroservices, [SuperBlocks.QualityAssurance]: certTypes.qaV7, [SuperBlocks.InfoSec]: certTypes.infosecV7, [SuperBlocks.SciCompPy]: certTypes.sciCompPyV7, [SuperBlocks.DataAnalysisPy]: certTypes.dataAnalysisPyV7, [SuperBlocks.MachineLearningPy]: certTypes.machineLearningPyV7, [SuperBlocks.RelationalDb]: certTypes.relationalDatabaseV8, [SuperBlocks.CollegeAlgebraPy]: certTypes.collegeAlgebraPyV8, [SuperBlocks.FoundationalCSharp]: certTypes.foundationalCSharpV8,\n\n// post-modern\n  // TODO: use enum\n  [SuperBlocks.RespWebDesignNew]: certTypes.respWebDesign",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 535,
    "chunk_index": 11,
    "total_chunks": 19
  },
  {
    "id": "15cdc541809cb7329bace4df5b4d5f93",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "[Certification.BackEndDevApis]: certTypes.apisMicroservices, [Certification.QualityAssurance]: certTypes.qaV7, [Certification.InfoSec]: certTypes.infosecV7, [Certification.SciCompPy]: certTypes.sciCompPyV7, [Certification.DataAnalysisPy]: certTypes.dataAnalysisPyV7, [Certification.MachineLearningPy]: certTypes.machineLearningPyV7, [Certification.RelationalDb]: certTypes.relationalDatabaseV8, [Certification.CollegeAlgebraPy]: certTypes.collegeAlgebraPyV8, [Certification.FoundationalCSharp]: certTypes.foundationalCSharpV8 // upcoming }; export const superBlockCertTypeMap = { // legacy 'legacy-front-end': certTypes.frontEnd, [SuperBlocks.JsAlgoDataStruct]: certTypes.jsAlgoDataStruct, 'legacy-back-end': certTypes.backEnd, 'legacy-data-visualization': certTypes.dataVis, 'information-security-and-quality-assurance': certTypes.infosecQa, 'full-stack': certTypes.fullStack, // modern [SuperBlocks.RespWebDesign]: certTypes.respWebDesign, [SuperBlocks.JsAlgoDataStructNew]: certTypes.jsAlgoDataStructV8, [SuperBlocks.FrontEndDevLibs]: certTypes.frontEndDevLibs, [SuperBlocks.DataVis]: certTypes.dataVis2018, [SuperBlocks.BackEndDevApis]: certTypes.apisMicroservices, [SuperBlocks.QualityAssurance]: certTypes.qaV7, [SuperBlocks.InfoSec]: certTypes.infosecV7, [SuperBlocks.SciCompPy]: certTypes.sciCompPyV7, [SuperBlocks.DataAnalysisPy]: certTypes.dataAnalysisPyV7, [SuperBlocks.MachineLearningPy]: certTypes.machineLearningPyV7, [SuperBlocks.RelationalDb]: certTypes.relationalDatabaseV8, [SuperBlocks.CollegeAlgebraPy]: certTypes.collegeAlgebraPyV8, [SuperBlocks.FoundationalCSharp]: certTypes.foundationalCSharpV8, // post-modern // TODO: use enum [SuperBlocks.RespWebDesignNew]: certTypes.respWebDesign\n\n// upcoming\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 12,
    "total_chunks": 19
  },
  {
    "id": "fcaa0e3526cbce864c7f701dcbcabd1d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "certTypes.qaV7, [Certification.InfoSec]: certTypes.infosecV7, [Certification.SciCompPy]: certTypes.sciCompPyV7, [Certification.DataAnalysisPy]: certTypes.dataAnalysisPyV7, [Certification.MachineLearningPy]: certTypes.machineLearningPyV7, [Certification.RelationalDb]: certTypes.relationalDatabaseV8, [Certification.CollegeAlgebraPy]: certTypes.collegeAlgebraPyV8, [Certification.FoundationalCSharp]: certTypes.foundationalCSharpV8 // upcoming }; export const superBlockCertTypeMap = { // legacy 'legacy-front-end': certTypes.frontEnd, [SuperBlocks.JsAlgoDataStruct]: certTypes.jsAlgoDataStruct, 'legacy-back-end': certTypes.backEnd, 'legacy-data-visualization': certTypes.dataVis, 'information-security-and-quality-assurance': certTypes.infosecQa, 'full-stack': certTypes.fullStack, // modern [SuperBlocks.RespWebDesign]: certTypes.respWebDesign, [SuperBlocks.JsAlgoDataStructNew]: certTypes.jsAlgoDataStructV8, [SuperBlocks.FrontEndDevLibs]: certTypes.frontEndDevLibs, [SuperBlocks.DataVis]: certTypes.dataVis2018, [SuperBlocks.BackEndDevApis]: certTypes.apisMicroservices, [SuperBlocks.QualityAssurance]: certTypes.qaV7, [SuperBlocks.InfoSec]: certTypes.infosecV7, [SuperBlocks.SciCompPy]: certTypes.sciCompPyV7, [SuperBlocks.DataAnalysisPy]: certTypes.dataAnalysisPyV7, [SuperBlocks.MachineLearningPy]: certTypes.machineLearningPyV7, [SuperBlocks.RelationalDb]: certTypes.relationalDatabaseV8, [SuperBlocks.CollegeAlgebraPy]: certTypes.collegeAlgebraPyV8, [SuperBlocks.FoundationalCSharp]: certTypes.foundationalCSharpV8, // post-modern // TODO: use enum [SuperBlocks.RespWebDesignNew]: certTypes.respWebDesign // upcoming };\n\nexport const certTypeIdMap = {\n  [certTypes.frontEnd]: certIds.legacyFrontEndChallengeId,\n  [certTypes.backEnd]: certIds.legacyBackEndChallengeId,\n  [certTypes.dataVis]: certIds.legacyDataVisId,\n  [certTypes.infosecQa]: certIds.legacyInfosecQaId,\n  [certTypes.fullStack]: certIds.legacyFullStackId,\n  [certTypes.respWebDesign]: certIds.respWebDesignId,\n  [certTypes.frontEndDevLibs]: certIds.frontEndDevLibsId,\n  [certTypes.jsAlgoDataStruct]: certIds.jsAlgoDataStructId,\n  [certTypes.dataVis2018]: certIds.dataVis2018Id,\n  [certTypes.apisMicroservices]: certIds.apisMicroservicesId,\n  [certTypes.qaV7]: certIds.qaV7Id,\n  [certTypes.infosecV7]: certIds.infosecV7Id,\n  [certTypes.sciCompPyV7]: certIds.sciCompPyV7Id,\n  [certTypes.dataAnalysisPyV7]: certIds.dataAnalysisPyV7Id,\n  [certTypes.machineLearningPyV7]: certIds.machineLearningPyV7Id,\n  [certTypes.relationalDatabaseV8]: certIds.relationalDatabaseV8Id,\n  [certTypes.collegeAlgebraPyV8]: certIds.collegeAlgebraPyV8Id,\n  [certTypes.foundationalCSharpV8]: certIds.foundationalCSharpV8Id,\n  [certTypes.jsAlgoDataStructV8]: certIds.jsAlgoDataStructV8Id\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 802,
    "chunk_index": 13,
    "total_chunks": 19
  },
  {
    "id": "eacb18e5765e8bef718fbb6ab7e604a9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "certTypes.frontEndDevLibs, [SuperBlocks.DataVis]: certTypes.dataVis2018, [SuperBlocks.BackEndDevApis]: certTypes.apisMicroservices, [SuperBlocks.QualityAssurance]: certTypes.qaV7, [SuperBlocks.InfoSec]: certTypes.infosecV7, [SuperBlocks.SciCompPy]: certTypes.sciCompPyV7, [SuperBlocks.DataAnalysisPy]: certTypes.dataAnalysisPyV7, [SuperBlocks.MachineLearningPy]: certTypes.machineLearningPyV7, [SuperBlocks.RelationalDb]: certTypes.relationalDatabaseV8, [SuperBlocks.CollegeAlgebraPy]: certTypes.collegeAlgebraPyV8, [SuperBlocks.FoundationalCSharp]: certTypes.foundationalCSharpV8, // post-modern // TODO: use enum [SuperBlocks.RespWebDesignNew]: certTypes.respWebDesign // upcoming }; export const certTypeIdMap = { [certTypes.frontEnd]: certIds.legacyFrontEndChallengeId, [certTypes.backEnd]: certIds.legacyBackEndChallengeId, [certTypes.dataVis]: certIds.legacyDataVisId, [certTypes.infosecQa]: certIds.legacyInfosecQaId, [certTypes.fullStack]: certIds.legacyFullStackId, [certTypes.respWebDesign]: certIds.respWebDesignId, [certTypes.frontEndDevLibs]: certIds.frontEndDevLibsId, [certTypes.jsAlgoDataStruct]: certIds.jsAlgoDataStructId, [certTypes.dataVis2018]: certIds.dataVis2018Id, [certTypes.apisMicroservices]: certIds.apisMicroservicesId, [certTypes.qaV7]: certIds.qaV7Id, [certTypes.infosecV7]: certIds.infosecV7Id, [certTypes.sciCompPyV7]: certIds.sciCompPyV7Id, [certTypes.dataAnalysisPyV7]: certIds.dataAnalysisPyV7Id, [certTypes.machineLearningPyV7]: certIds.machineLearningPyV7Id, [certTypes.relationalDatabaseV8]: certIds.relationalDatabaseV8Id, [certTypes.collegeAlgebraPyV8]: certIds.collegeAlgebraPyV8Id, [certTypes.foundationalCSharpV8]: certIds.foundationalCSharpV8Id, [certTypes.jsAlgoDataStructV8]: certIds.jsAlgoDataStructV8Id };\n\nexport const certTypeTitleMap = {\n  [certTypes.frontEnd]: 'Legacy Front End',\n  [certTypes.backEnd]: 'Legacy Back End',\n  [certTypes.dataVis]: 'Legacy Data Visualization',\n  [certTypes.infosecQa]: 'Legacy Information Security and Quality Assurance',\n  [certTypes.fullStack]: 'Legacy Full Stack',\n  [certTypes.respWebDesign]: 'Responsive Web Design',\n  [certTypes.frontEndDevLibs]: 'Front End Development Libraries',\n  [certTypes.jsAlgoDataStruct]:\n    'Legacy JavaScript Algorithms and Data Structures',\n  [certTypes.dataVis2018]: 'Data Visualization',\n  [certTypes.apisMicroservices]: 'Back End Development and APIs',\n  [certTypes.qaV7]: 'Quality Assurance',\n  [certTypes.infosecV7]: 'Information Security',\n  [certTypes.sciCompPyV7]: 'Scientific Computing with Python',\n  [certTypes.dataAnalysisPyV7]: 'Data Analysis with Python',\n  [certTypes.machineLearningPyV7]: 'Machine Learning with Python',\n  [certTypes.relationalDatabaseV8]: 'Relational Database',\n  [certTypes.collegeAlgebraPyV8]: 'College Algebra with Python',\n  [certTypes.foundationalCSharpV8]: 'Foundational C# with Microsoft',\n  [certTypes.jsAlgoDataStructV8]: 'JavaScript Algorithms and Data Structures'\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 827,
    "chunk_index": 14,
    "total_chunks": 19
  },
  {
    "id": "000098be2359964e55c2b7a5ce58d2f9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "'Legacy Information Security and Quality Assurance', [certTypes.fullStack]: 'Legacy Full Stack', [certTypes.respWebDesign]: 'Responsive Web Design', [certTypes.frontEndDevLibs]: 'Front End Development Libraries', [certTypes.jsAlgoDataStruct]: 'Legacy JavaScript Algorithms and Data Structures', [certTypes.dataVis2018]: 'Data Visualization', [certTypes.apisMicroservices]: 'Back End Development and APIs', [certTypes.qaV7]: 'Quality Assurance', [certTypes.infosecV7]: 'Information Security', [certTypes.sciCompPyV7]: 'Scientific Computing with Python', [certTypes.dataAnalysisPyV7]: 'Data Analysis with Python', [certTypes.machineLearningPyV7]: 'Machine Learning with Python', [certTypes.relationalDatabaseV8]: 'Relational Database', [certTypes.collegeAlgebraPyV8]: 'College Algebra with Python', [certTypes.foundationalCSharpV8]: 'Foundational C# with Microsoft', [certTypes.jsAlgoDataStructV8]: 'JavaScript Algorithms and Data Structures' };\n\nexport const superBlockToCertMap: {\n  [key in SuperBlocks]: Certification | null;\n} = {\n  [SuperBlocks.RespWebDesign]: Certification.RespWebDesign,\n  [SuperBlocks.JsAlgoDataStructNew]: Certification.JsAlgoDataStructNew,\n  [SuperBlocks.FrontEndDevLibs]: Certification.FrontEndDevLibs,\n  [SuperBlocks.DataVis]: Certification.DataVis,\n  [SuperBlocks.RelationalDb]: Certification.RelationalDb,\n  [SuperBlocks.BackEndDevApis]: Certification.BackEndDevApis,\n  [SuperBlocks.QualityAssurance]: Certification.QualityAssurance,\n  [SuperBlocks.SciCompPy]: Certification.SciCompPy,\n  [SuperBlocks.DataAnalysisPy]: Certification.DataAnalysisPy,\n  [SuperBlocks.InfoSec]: Certification.InfoSec,\n  [SuperBlocks.MachineLearningPy]: Certification.MachineLearningPy,\n  [SuperBlocks.CollegeAlgebraPy]: Certification.CollegeAlgebraPy,\n  [SuperBlocks.FoundationalCSharp]: Certification.FoundationalCSharp,\n  [SuperBlocks.RespWebDesignNew]: Certification.RespWebDesign,\n  [SuperBlocks.JsAlgoDataStruct]: Certification.JsAlgoDataStruct,\n  [SuperBlocks.FullStackDeveloper]: Certification.FullStackDeveloper,\n  [SuperBlocks.A2English]: Certification.A2English,\n  [SuperBlocks.B1English]: Certification.B1English,\n  [SuperBlocks.A2Spanish]: Certification.A2Spanish,\n  [SuperBlocks.A2Chinese]: Certification.A2Chinese,\n  [SuperBlocks.A1Chinese]: Certification.A1Chinese,\n  [SuperBlocks.PythonForEverybody]: null,\n  [SuperBlocks.CodingInterviewPrep]: null,\n  [SuperBlocks.ProjectEuler]: null,\n  [SuperBlocks.TheOdinProject]: null,\n  [SuperBlocks.RosettaCode]: null,\n  [SuperBlocks.BasicHtml]: null,\n  [SuperBlocks.SemanticHtml]: null,\n  [SuperBlocks.DevPlayground]: null\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 649,
    "chunk_index": 15,
    "total_chunks": 19
  },
  {
    "id": "7b5ec52435b9ba433c93d7f8a5ebddc6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "and Data Structures' }; export const superBlockToCertMap: { [key in SuperBlocks]: Certification | null; } = { [SuperBlocks.RespWebDesign]: Certification.RespWebDesign, [SuperBlocks.JsAlgoDataStructNew]: Certification.JsAlgoDataStructNew, [SuperBlocks.FrontEndDevLibs]: Certification.FrontEndDevLibs, [SuperBlocks.DataVis]: Certification.DataVis, [SuperBlocks.RelationalDb]: Certification.RelationalDb, [SuperBlocks.BackEndDevApis]: Certification.BackEndDevApis, [SuperBlocks.QualityAssurance]: Certification.QualityAssurance, [SuperBlocks.SciCompPy]: Certification.SciCompPy, [SuperBlocks.DataAnalysisPy]: Certification.DataAnalysisPy, [SuperBlocks.InfoSec]: Certification.InfoSec, [SuperBlocks.MachineLearningPy]: Certification.MachineLearningPy, [SuperBlocks.CollegeAlgebraPy]: Certification.CollegeAlgebraPy, [SuperBlocks.FoundationalCSharp]: Certification.FoundationalCSharp, [SuperBlocks.RespWebDesignNew]: Certification.RespWebDesign, [SuperBlocks.JsAlgoDataStruct]: Certification.JsAlgoDataStruct, [SuperBlocks.FullStackDeveloper]: Certification.FullStackDeveloper, [SuperBlocks.A2English]: Certification.A2English, [SuperBlocks.B1English]: Certification.B1English, [SuperBlocks.A2Spanish]: Certification.A2Spanish, [SuperBlocks.A2Chinese]: Certification.A2Chinese, [SuperBlocks.A1Chinese]: Certification.A1Chinese, [SuperBlocks.PythonForEverybody]: null, [SuperBlocks.CodingInterviewPrep]: null, [SuperBlocks.ProjectEuler]: null, [SuperBlocks.TheOdinProject]: null, [SuperBlocks.RosettaCode]: null, [SuperBlocks.BasicHtml]: null, [SuperBlocks.SemanticHtml]: null, [SuperBlocks.DevPlayground]: null };\n\nexport type CertSlug = (typeof Certification)[keyof typeof Certification];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 407,
    "chunk_index": 16,
    "total_chunks": 19
  },
  {
    "id": "8d40797dbb6220a4a5477dcb384427b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "[key in SuperBlocks]: Certification | null; } = { [SuperBlocks.RespWebDesign]: Certification.RespWebDesign, [SuperBlocks.JsAlgoDataStructNew]: Certification.JsAlgoDataStructNew, [SuperBlocks.FrontEndDevLibs]: Certification.FrontEndDevLibs, [SuperBlocks.DataVis]: Certification.DataVis, [SuperBlocks.RelationalDb]: Certification.RelationalDb, [SuperBlocks.BackEndDevApis]: Certification.BackEndDevApis, [SuperBlocks.QualityAssurance]: Certification.QualityAssurance, [SuperBlocks.SciCompPy]: Certification.SciCompPy, [SuperBlocks.DataAnalysisPy]: Certification.DataAnalysisPy, [SuperBlocks.InfoSec]: Certification.InfoSec, [SuperBlocks.MachineLearningPy]: Certification.MachineLearningPy, [SuperBlocks.CollegeAlgebraPy]: Certification.CollegeAlgebraPy, [SuperBlocks.FoundationalCSharp]: Certification.FoundationalCSharp, [SuperBlocks.RespWebDesignNew]: Certification.RespWebDesign, [SuperBlocks.JsAlgoDataStruct]: Certification.JsAlgoDataStruct, [SuperBlocks.FullStackDeveloper]: Certification.FullStackDeveloper, [SuperBlocks.A2English]: Certification.A2English, [SuperBlocks.B1English]: Certification.B1English, [SuperBlocks.A2Spanish]: Certification.A2Spanish, [SuperBlocks.A2Chinese]: Certification.A2Chinese, [SuperBlocks.A1Chinese]: Certification.A1Chinese, [SuperBlocks.PythonForEverybody]: null, [SuperBlocks.CodingInterviewPrep]: null, [SuperBlocks.ProjectEuler]: null, [SuperBlocks.TheOdinProject]: null, [SuperBlocks.RosettaCode]: null, [SuperBlocks.BasicHtml]: null, [SuperBlocks.SemanticHtml]: null, [SuperBlocks.DevPlayground]: null }; export type CertSlug = (typeof Certification)[keyof typeof Certification];\n\nexport const linkedInCredentialIds = {\n  [Certification.LegacyFrontEnd]: 'lfe',\n  [Certification.LegacyBackEnd]: 'lbe',\n  [Certification.LegacyDataVis]: 'ldv',\n  [Certification.LegacyInfoSecQa]: 'lisaqa',\n  [Certification.LegacyFullStack]: 'lfs',\n  [Certification.RespWebDesign]: 'rwd',\n  [Certification.FrontEndDevLibs]: 'fedl',\n  [Certification.JsAlgoDataStruct]: 'ljaads',\n  [Certification.DataVis]: 'dv',\n  [Certification.BackEndDevApis]: 'bedaa',\n  [Certification.QualityAssurance]: 'qa',\n  [Certification.InfoSec]: 'is',\n  [Certification.SciCompPy]: 'scwp',\n  [Certification.DataAnalysisPy]: 'dawp',\n  [Certification.MachineLearningPy]: 'mlwp',\n  [Certification.RelationalDb]: 'rd',\n  [Certification.CollegeAlgebraPy]: 'cawp',\n  [Certification.FoundationalCSharp]: 'fcswm',\n  [Certification.FullStackDeveloper]: 'fsd',\n  [Certification.JsAlgoDataStructNew]: 'jaads',\n  [Certification.A2English]: 'a2efd',\n  [Certification.B1English]: 'b1efd',\n  [Certification.A2Spanish]: 'a2ps',\n  [Certification.A2Chinese]: 'a2pc',\n  [Certification.A1Chinese]: 'a1pc'\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 736,
    "chunk_index": 17,
    "total_chunks": 19
  },
  {
    "id": "7ea3eb505fb7d32428596c9a9f8ad632",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
    "source_type": "git_repo",
    "title": "certification-settings",
    "content": "null, [SuperBlocks.TheOdinProject]: null, [SuperBlocks.RosettaCode]: null, [SuperBlocks.BasicHtml]: null, [SuperBlocks.SemanticHtml]: null, [SuperBlocks.DevPlayground]: null }; export type CertSlug = (typeof Certification)[keyof typeof Certification]; export const linkedInCredentialIds = { [Certification.LegacyFrontEnd]: 'lfe', [Certification.LegacyBackEnd]: 'lbe', [Certification.LegacyDataVis]: 'ldv', [Certification.LegacyInfoSecQa]: 'lisaqa', [Certification.LegacyFullStack]: 'lfs', [Certification.RespWebDesign]: 'rwd', [Certification.FrontEndDevLibs]: 'fedl', [Certification.JsAlgoDataStruct]: 'ljaads', [Certification.DataVis]: 'dv', [Certification.BackEndDevApis]: 'bedaa', [Certification.QualityAssurance]: 'qa', [Certification.InfoSec]: 'is', [Certification.SciCompPy]: 'scwp', [Certification.DataAnalysisPy]: 'dawp', [Certification.MachineLearningPy]: 'mlwp', [Certification.RelationalDb]: 'rd', [Certification.CollegeAlgebraPy]: 'cawp', [Certification.FoundationalCSharp]: 'fcswm', [Certification.FullStackDeveloper]: 'fsd', [Certification.JsAlgoDataStructNew]: 'jaads', [Certification.A2English]: 'a2efd', [Certification.B1English]: 'b1efd', [Certification.A2Spanish]: 'a2ps', [Certification.A2Chinese]: 'a2pc', [Certification.A1Chinese]: 'a1pc' };\n\nexport const oldDataVizId = '561add10cb82ac38a17513b3';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 13357,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\certification-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 404,
    "chunk_index": 18,
    "total_chunks": 19
  },
  {
    "id": "01a62e8e12e7b1e98d989b60ad2165dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\curriculum.test.ts",
    "source_type": "git_repo",
    "title": "curriculum.test",
    "content": "import { Languages } from './i18n';\nimport {\n  SuperBlocks,\n  SuperBlockStage,\n  superBlockStages,\n  notAuditedSuperBlocks,\n  generateSuperBlockList,\n  getAuditedSuperBlocks\n} from './curriculum';\n\ndescribe('superBlockOrder', () => {\n  it('should contain all SuperBlocks', () => {\n    const allSuperBlocks = Object.values(SuperBlocks);\n    const superBlockOrderValues = Object.values(superBlockStages).flat();\n    expect(superBlockOrderValues).toHaveLength(allSuperBlocks.length);\n    expect(superBlockOrderValues).toEqual(\n      expect.arrayContaining(allSuperBlocks)\n    );\n  });\n});\n\ndescribe('generateSuperBlockList', () => {\n  it('should return an array of SuperBlocks object with all elements when if all configs are true', () => {\n    const result = generateSuperBlockList({\n      showUpcomingChanges: true\n    });\n    expect(result).toHaveLength(Object.values(superBlockStages).flat().length);\n  });\n\nit('should return an array of SuperBlocks without Upcoming when { showUpcomingChanges: false }', () => {\n    const result = generateSuperBlockList({\n      showUpcomingChanges: false\n    });\n    const tempSuperBlockMap = { ...superBlockStages };\n    tempSuperBlockMap[SuperBlockStage.Upcoming] = [];\n    tempSuperBlockMap[SuperBlockStage.Catalog] = [];\n    expect(result).toHaveLength(Object.values(tempSuperBlockMap).flat().length);\n  });\n});\n\ndescribe('Immutability of superBlockOrder, notAuditedSuperBlocks, and flatSuperBlockMap', () => {\n  it('should not allow modification of superBlockOrder', () => {\n    expect(() => {\n      superBlockStages[SuperBlockStage.Core] = [];\n    }).toThrow(TypeError);\n  });\n\nit('should not allow modification of notAuditedSuperBlocks', () => {\n    expect(() => {\n      notAuditedSuperBlocks[Languages.English] = [];\n    }).toThrow(TypeError);\n  });\n\nit('should not allow modification of flatSuperBlockMap', () => {\n    expect(() => {\n      notAuditedSuperBlocks[Languages.English] = [];\n    }).toThrow(TypeError);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2420,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\curriculum.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f464de3b556f3f1ab062de805d0646db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\curriculum.test.ts",
    "source_type": "git_repo",
    "title": "curriculum.test",
    "content": "const tempSuperBlockMap = { ...superBlockStages }; tempSuperBlockMap[SuperBlockStage.Upcoming] = []; tempSuperBlockMap[SuperBlockStage.Catalog] = []; expect(result).toHaveLength(Object.values(tempSuperBlockMap).flat().length); }); }); describe('Immutability of superBlockOrder, notAuditedSuperBlocks, and flatSuperBlockMap', () => { it('should not allow modification of superBlockOrder', () => { expect(() => { superBlockStages[SuperBlockStage.Core] = []; }).toThrow(TypeError); }); it('should not allow modification of notAuditedSuperBlocks', () => { expect(() => { notAuditedSuperBlocks[Languages.English] = []; }).toThrow(TypeError); }); it('should not allow modification of flatSuperBlockMap', () => { expect(() => { notAuditedSuperBlocks[Languages.English] = []; }).toThrow(TypeError); }); });\n\ndescribe('getAuditedSuperBlocks', () => {\n  Object.keys(notAuditedSuperBlocks).forEach(language => {\n    it(`should return only audited SuperBlocks for ${language}`, () => {\n      const auditedSuperBlocks = getAuditedSuperBlocks({\n        language\n      });\n\nauditedSuperBlocks.forEach(superblock => {\n        expect(notAuditedSuperBlocks[language as Languages]).not.toContain(\n          superblock\n        );\n      });\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2420,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\curriculum.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 287,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e15622ef18bfa4b40a496215b7483918",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
    "source_type": "git_repo",
    "title": "constants",
    "content": "const alphabet = [\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z'\n] as const;\n\nexport const i18nConstants = [\n  // reserved paths for localizations\n  'afrikaans',\n  'arabic',\n  'bengali',\n  'catalan',\n  'chinese',\n  'czech',\n  'danish',\n  'dutch',\n  'espanol',\n  'finnish',\n  'french',\n  'german',\n  'greek',\n  'hebrew',\n  'hindi',\n  'hungarian',\n  'italian',\n  'japanese',\n  'korean',\n  'norwegian',\n  'polish',\n  'portuguese',\n  'romanian',\n  'russian',\n  'serbian',\n  'spanish',\n  'swahili',\n  'swedish',\n  'turkish',\n  'ukrainian',\n  'vietnamese'\n] as const; export const blocklistedUsernames = [ alphabet, i18nConstants,\n  'about',\n  'academic-honesty',\n  'account',\n  'agile',\n  'all-stories',\n  'api',\n  'backend-challenge-completed',\n  'blocked',\n  'bonfire',\n  'catalog',\n  'cats",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8722,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
      "source_type": "git_repo"
    },
    "token_count": 364,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "27c4927eebbe6bee7c936cdadaecad86",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
    "source_type": "git_repo",
    "title": "constants",
    "content": "'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z' ] as const; export const i18nConstants = [ // reserved paths for localizations 'afrikaans', 'arabic', 'bengali', 'catalan', 'chinese', 'czech', 'danish', 'dutch', 'espanol', 'finnish', 'french', 'german', 'greek', 'hebrew', 'hindi', 'hungarian', 'italian', 'japanese', 'korean', 'norwegian', 'polish', 'portuguese', 'romanian', 'russian', 'serbian', 'spanish', 'swahili', 'swedish', 'turkish', 'ukrainian', 'vietnamese' ] as const; export const blocklistedUsernames = [ alphabet, i18nConstants, 'about', 'academic-honesty', 'account', 'agile', 'all-stories', 'api', 'backend-challenge-completed', 'blocked', 'bonfire', 'catalog', 'catsjson',\n  'challenge-completed',\n  'challenge',\n  'challenges',\n  'chat',\n  'code-of-conduct',\n  'coding-bootcamp-cost-calculator',\n  'completed-bonfire',\n  'completed-challenge',\n  'completed-field-guide',\n  'completed-jsProject',\n  'completed-zipline-or-basejump',\n  'copyright-policy',\n  'copyright',\n  'deprecated-signin',\n  'donate',\n  'email-signin',\n  'events',\n  'exam',\n  'explorer',\n  'external',\n  'field-guide',\n  'forgot',\n  'forum',\n  'freecodecamp',\n  'get-help',\n  'get-pai',\n  'guide',\n  'how-nonprofit-projects-work',\n  'internal',\n  'jobs-form',\n  'jobs',\n  'jsProject',\n  'learn-to-code',\n  'learn',\n  'login',\n  'logout',\n  'map',\n  'modern-challenge-completed',\n  'news',\n  'nonprofit-project-instructions',\n  'nonprofits-form',\n  'nonprofits',\n  'open-api',\n  'passwordless-change',\n  'pmi-acp-agile-project-managers-form',\n  'pmi-acp-agile-project-managers',\n  'privacy-policy',\n  'privacy',\n  'profile',\n  'project-completed',\n  'reset',\n  'services',\n  'shop',\n  'signin',\n  'signout',\n  'signup',\n  'sitemap",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8722,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
      "source_type": "git_repo"
    },
    "token_count": 558,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "ddbdc21d9cde4f727ca2249db078167a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
    "source_type": "git_repo",
    "title": "constants",
    "content": "const; export const blocklistedUsernames = [ alphabet, i18nConstants, 'about', 'academic-honesty', 'account', 'agile', 'all-stories', 'api', 'backend-challenge-completed', 'blocked', 'bonfire', 'catalog', 'catsjson', 'challenge-completed', 'challenge', 'challenges', 'chat', 'code-of-conduct', 'coding-bootcamp-cost-calculator', 'completed-bonfire', 'completed-challenge', 'completed-field-guide', 'completed-jsProject', 'completed-zipline-or-basejump', 'copyright-policy', 'copyright', 'deprecated-signin', 'donate', 'email-signin', 'events', 'exam', 'explorer', 'external', 'field-guide', 'forgot', 'forum', 'freecodecamp', 'get-help', 'get-pai', 'guide', 'how-nonprofit-projects-work', 'internal', 'jobs-form', 'jobs', 'jsProject', 'learn-to-code', 'learn', 'login', 'logout', 'map', 'modern-challenge-completed', 'news', 'nonprofit-project-instructions', 'nonprofits-form', 'nonprofits', 'open-api', 'passwordless-change', 'pmi-acp-agile-project-managers-form', 'pmi-acp-agile-project-managers', 'privacy-policy', 'privacy', 'profile', 'project-completed', 'reset', 'services', 'shop', 'signin', 'signout', 'signup', 'sitemapxml',\n  'software-resources-for-nonprofits',\n  'sponsors',\n  'stories',\n  'support',\n  'terms-of-service',\n  'terms',\n  'the-fastest-web-page-on-the-internet',\n  'twitch',\n  'unsubscribe',\n  'unsubscribed',\n  'update-my-honesty',\n  'update-my-portfolio',\n  'update-my-profile-ui',\n  'update-my-quincy-email',\n  'update-my-socials',\n  'update-my-sound',\n  'update-my-theme',\n  'update-my-keyboard-shortcuts',\n  'update-my-username',\n  'user',\n  'username',\n  'wiki',\n  // some more names from https://github com/marteinn/The-Big-Username-Blacklist-JS/blob/master/src/list js\n  ' htaccess',\n  ' htpasswd',\n  '",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8722,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "efb76873402474a7950c8843d60b034a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
    "source_type": "git_repo",
    "title": "constants",
    "content": "'events', 'exam', 'explorer', 'external', 'field-guide', 'forgot', 'forum', 'freecodecamp', 'get-help', 'get-pai', 'guide', 'how-nonprofit-projects-work', 'internal', 'jobs-form', 'jobs', 'jsProject', 'learn-to-code', 'learn', 'login', 'logout', 'map', 'modern-challenge-completed', 'news', 'nonprofit-project-instructions', 'nonprofits-form', 'nonprofits', 'open-api', 'passwordless-change', 'pmi-acp-agile-project-managers-form', 'pmi-acp-agile-project-managers', 'privacy-policy', 'privacy', 'profile', 'project-completed', 'reset', 'services', 'shop', 'signin', 'signout', 'signup', 'sitemapxml', 'software-resources-for-nonprofits', 'sponsors', 'stories', 'support', 'terms-of-service', 'terms', 'the-fastest-web-page-on-the-internet', 'twitch', 'unsubscribe', 'unsubscribed', 'update-my-honesty', 'update-my-portfolio', 'update-my-profile-ui', 'update-my-quincy-email', 'update-my-socials', 'update-my-sound', 'update-my-theme', 'update-my-keyboard-shortcuts', 'update-my-username', 'user', 'username', 'wiki', // some more names from https://github com/marteinn/The-Big-Username-Blacklist-JS/blob/master/src/list js ' htaccess', ' htpasswd', 'well-known',\n  '400',\n  '401',\n  '403',\n  '404',\n  '405',\n  '406',\n  '407',\n  '408',\n  '409',\n  '410',\n  '411',\n  '412',\n  '413',\n  '414',\n  '415',\n  '416',\n  '417',\n  '421',\n  '422',\n  '423',\n  '424',\n  '426',\n  '428',\n  '429',\n  '431',\n  '500',\n  '501',\n  '502',\n  '503',\n  '504',\n  '505',\n  '506',\n  '507',\n  '508',\n  '509',\n  '510',\n  '511',\n  'about-us',\n  'abuse',\n  'access',\n  'accounts',\n  'ad',\n  'add',\n  'admin',\n  'administration',\n  'administrator',\n  'ads',\n  'advertise',\n  'advertising',\n  'aes128-ctr',\n  'aes128-gcm',\n  'aes192-ctr',\n  'aes256-ctr',\n  'aes256-gcm',\n  'affiliate',\n  'affiliates',\n  'ajax',\n  'alert',\n  'alerts',\n  'alpha',\n  'amp',\n  'analytics',\n  'app',\n  'apps',\n  'asc',\n  'assets',\n  'atom',\n  'auth',\n  'authentication',\n  'authorize',\n  'autoconfig',\n  'autodiscover',\n  'avatar',\n  'backup',\n  'banner',\n  'banners',\n  'beta',\n  'billing',\n  'billings',\n  'blog',\n  'blogs',\n  'board',\n  'bookmark',\n  'bookmarks',\n  'broadcasthost',\n  'business',\n  'buy',\n  'cache',\n  'calendar',\n  'campaign',\n  'captcha',\n  'careers',\n  'cart',\n  'cas',\n  'categories',\n  'category',\n  'cdn',\n  'cgi',\n  'cgi-bin',\n  'chacha20-poly1305',\n  'change',\n  'channel',\n  'channels',\n  'chart',\n  'checkout',\n  'clear',\n  'client',\n  'close',\n  'cms',\n  'com',\n  'comment',\n  'comments',\n  'community',\n  'compare',\n  'compose',\n  'config',\n  'connect',\n  'contact',\n  'contest',\n  'cookies',\n  'copy',\n  'count',\n  'create',\n  'crossdomain",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8722,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
      "source_type": "git_repo"
    },
    "token_count": 864,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "763207bdb1f388bb5f931b304183df9b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
    "source_type": "git_repo",
    "title": "constants",
    "content": "'advertising', 'aes128-ctr', 'aes128-gcm', 'aes192-ctr', 'aes256-ctr', 'aes256-gcm', 'affiliate', 'affiliates', 'ajax', 'alert', 'alerts', 'alpha', 'amp', 'analytics', 'app', 'apps', 'asc', 'assets', 'atom', 'auth', 'authentication', 'authorize', 'autoconfig', 'autodiscover', 'avatar', 'backup', 'banner', 'banners', 'beta', 'billing', 'billings', 'blog', 'blogs', 'board', 'bookmark', 'bookmarks', 'broadcasthost', 'business', 'buy', 'cache', 'calendar', 'campaign', 'captcha', 'careers', 'cart', 'cas', 'categories', 'category', 'cdn', 'cgi', 'cgi-bin', 'chacha20-poly1305', 'change', 'channel', 'channels', 'chart', 'checkout', 'clear', 'client', 'close', 'cms', 'com', 'comment', 'comments', 'community', 'compare', 'compose', 'config', 'connect', 'contact', 'contest', 'cookies', 'copy', 'count', 'create', 'crossdomainxml',\n  'css',\n  'curve25519-sha256',\n  'customer',\n  'customers',\n  'customize',\n  'dashboard',\n  'db',\n  'deals',\n  'debug',\n  'delete',\n  'desc',\n  'destroy',\n  'dev',\n  'developer',\n  'developers',\n  'diffie-hellman-group-exchange-sha256',\n  'diffie-hellman-group14-sha1',\n  'disconnect',\n  'discuss',\n  'dns',\n  'dns0',\n  'dns1',\n  'dns2',\n  'dns3',\n  'dns4',\n  'docs',\n  'documentation',\n  'domain',\n  'download',\n  'downloads',\n  'downvote',\n  'draft',\n  'drop',\n  'ecdh-sha2-nistp256',\n  'ecdh-sha2-nistp384',\n  'ecdh-sha2-nistp521',\n  'edit',\n  'editor',\n  'email',\n  'enterprise',\n  'error',\n  'errors',\n  'event',\n  'example',\n  'exception',\n  'exit',\n  'explore',\n  'export',\n  'extensions',\n  'false',\n  'family',\n  'faq',\n  'faqs',\n  'favicon",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8722,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
      "source_type": "git_repo"
    },
    "token_count": 537,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "da8e40a90619cafe910bcc27baac8e0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
    "source_type": "git_repo",
    "title": "constants",
    "content": "'channels', 'chart', 'checkout', 'clear', 'client', 'close', 'cms', 'com', 'comment', 'comments', 'community', 'compare', 'compose', 'config', 'connect', 'contact', 'contest', 'cookies', 'copy', 'count', 'create', 'crossdomainxml', 'css', 'curve25519-sha256', 'customer', 'customers', 'customize', 'dashboard', 'db', 'deals', 'debug', 'delete', 'desc', 'destroy', 'dev', 'developer', 'developers', 'diffie-hellman-group-exchange-sha256', 'diffie-hellman-group14-sha1', 'disconnect', 'discuss', 'dns', 'dns0', 'dns1', 'dns2', 'dns3', 'dns4', 'docs', 'documentation', 'domain', 'download', 'downloads', 'downvote', 'draft', 'drop', 'ecdh-sha2-nistp256', 'ecdh-sha2-nistp384', 'ecdh-sha2-nistp521', 'edit', 'editor', 'email', 'enterprise', 'error', 'errors', 'event', 'example', 'exception', 'exit', 'explore', 'export', 'extensions', 'false', 'family', 'faq', 'faqs', 'faviconico',\n  'features',\n  'feed',\n  'feedback',\n  'feeds',\n  'file',\n  'files',\n  'filter',\n  'follow',\n  'follower',\n  'followers',\n  'following',\n  'fonts',\n  'forgot-password',\n  'forgotpassword',\n  'form',\n  'forms',\n  'forums',\n  'friend',\n  'friends',\n  'ftp',\n  'get',\n  'git',\n  'go',\n  'group',\n  'groups',\n  'guest',\n  'guidelines',\n  'guides',\n  'head',\n  'header',\n  'help',\n  'hide',\n  'hmac-sha',\n  'hmac-sha1',\n  'hmac-sha1-etm',\n  'hmac-sha2-256',\n  'hmac-sha2-256-etm',\n  'hmac-sha2-512',\n  'hmac-sha2-512-etm',\n  'home',\n  'host',\n  'hosting',\n  'hostmaster',\n  'htpasswd',\n  'http',\n  'httpd',\n  'https',\n  'humans",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8722,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
      "source_type": "git_repo"
    },
    "token_count": 530,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "c99e9fd4e017a1fbb85b6813f542fa0f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
    "source_type": "git_repo",
    "title": "constants",
    "content": "'documentation', 'domain', 'download', 'downloads', 'downvote', 'draft', 'drop', 'ecdh-sha2-nistp256', 'ecdh-sha2-nistp384', 'ecdh-sha2-nistp521', 'edit', 'editor', 'email', 'enterprise', 'error', 'errors', 'event', 'example', 'exception', 'exit', 'explore', 'export', 'extensions', 'false', 'family', 'faq', 'faqs', 'faviconico', 'features', 'feed', 'feedback', 'feeds', 'file', 'files', 'filter', 'follow', 'follower', 'followers', 'following', 'fonts', 'forgot-password', 'forgotpassword', 'form', 'forms', 'forums', 'friend', 'friends', 'ftp', 'get', 'git', 'go', 'group', 'groups', 'guest', 'guidelines', 'guides', 'head', 'header', 'help', 'hide', 'hmac-sha', 'hmac-sha1', 'hmac-sha1-etm', 'hmac-sha2-256', 'hmac-sha2-256-etm', 'hmac-sha2-512', 'hmac-sha2-512-etm', 'home', 'host', 'hosting', 'hostmaster', 'htpasswd', 'http', 'httpd', 'https', 'humanstxt',\n  'icons',\n  'images',\n  'imap',\n  'img',\n  'import',\n  'index',\n  'info',\n  'insert',\n  'investors',\n  'invitations',\n  'invite',\n  'invites',\n  'invoice',\n  'is',\n  'isatap',\n  'issues',\n  'it',\n  'join',\n  'js',\n  'json',\n  'keybase",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8722,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "c1d580abc38292de580346db98d9bf02",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
    "source_type": "git_repo",
    "title": "constants",
    "content": "'export', 'extensions', 'false', 'family', 'faq', 'faqs', 'faviconico', 'features', 'feed', 'feedback', 'feeds', 'file', 'files', 'filter', 'follow', 'follower', 'followers', 'following', 'fonts', 'forgot-password', 'forgotpassword', 'form', 'forms', 'forums', 'friend', 'friends', 'ftp', 'get', 'git', 'go', 'group', 'groups', 'guest', 'guidelines', 'guides', 'head', 'header', 'help', 'hide', 'hmac-sha', 'hmac-sha1', 'hmac-sha1-etm', 'hmac-sha2-256', 'hmac-sha2-256-etm', 'hmac-sha2-512', 'hmac-sha2-512-etm', 'home', 'host', 'hosting', 'hostmaster', 'htpasswd', 'http', 'httpd', 'https', 'humanstxt', 'icons', 'images', 'imap', 'img', 'import', 'index', 'info', 'insert', 'investors', 'invitations', 'invite', 'invites', 'invoice', 'is', 'isatap', 'issues', 'it', 'join', 'js', 'json', 'keybasetxt',\n  'legal',\n  'license',\n  'licensing',\n  'like',\n  'limit',\n  'live',\n  'load',\n  'local',\n  'localdomain',\n  'localhost',\n  'lock',\n  'lost-password',\n  'mail',\n  'mail0',\n  'mail1',\n  'mail2',\n  'mail3',\n  'mail4',\n  'mail5',\n  'mail6',\n  'mail7',\n  'mail8',\n  'mail9',\n  'mailer-daemon',\n  'mailerdaemon',\n  'marketing',\n  'marketplace',\n  'master',\n  'me',\n  'media',\n  'member',\n  'members',\n  'message',\n  'messages',\n  'metrics',\n  'mis',\n  'mobile',\n  'moderator',\n  'modify',\n  'more',\n  'mx',\n  'my',\n  'net',\n  'network',\n  'new',\n  'newsletter',\n  'newsletters',\n  'next',\n  'nil',\n  'no-reply',\n  'nobody',\n  'noc',\n  'none',\n  'noreply',\n  'notification',\n  'notifications',\n  'ns',\n  'ns0',\n  'ns1',\n  'ns2',\n  'ns3',\n  'ns4',\n  'ns5',\n  'ns6',\n  'ns7',\n  'ns8',\n  'ns9',\n  'null',\n  'oauth',\n  'oauth2',\n  'offer',\n  'offers',\n  'online',\n  'openid',\n  'order',\n  'orders',\n  'overview',\n  'owner',\n  'page',\n  'pages',\n  'partners',\n  'passwd',\n  'password',\n  'pay',\n  'payment',\n  'payments',\n  'photo',\n  'photos',\n  'pixel',\n  'plans',\n  'plugins',\n  'policies',\n  'policy',\n  'pop',\n  'pop3',\n  'popular',\n  'portfolio',\n  'post',\n  'postfix',\n  'postmaster',\n  'poweruser',\n  'preferences',\n  'premium',\n  'press',\n  'previous',\n  'pricing',\n  'print',\n  'private',\n  'prod',\n  'product',\n  'production',\n  'profiles',\n  'project',\n  'projects',\n  'public',\n  'purchase',\n  'put',\n  'quota',\n  'redirect',\n  'reduce',\n  'refund',\n  'refunds',\n  'register',\n  'registration',\n  'remove',\n  'replies',\n  'reply',\n  'report',\n  'request',\n  'request-password',\n  'reset-password',\n  'response',\n  'return',\n  'returns',\n  'review',\n  'reviews',\n  'robots",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8722,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
      "source_type": "git_repo"
    },
    "token_count": 878,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "172554b7bbc7452019438e05ab0a961e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
    "source_type": "git_repo",
    "title": "constants",
    "content": "'ns4', 'ns5', 'ns6', 'ns7', 'ns8', 'ns9', 'null', 'oauth', 'oauth2', 'offer', 'offers', 'online', 'openid', 'order', 'orders', 'overview', 'owner', 'page', 'pages', 'partners', 'passwd', 'password', 'pay', 'payment', 'payments', 'photo', 'photos', 'pixel', 'plans', 'plugins', 'policies', 'policy', 'pop', 'pop3', 'popular', 'portfolio', 'post', 'postfix', 'postmaster', 'poweruser', 'preferences', 'premium', 'press', 'previous', 'pricing', 'print', 'private', 'prod', 'product', 'production', 'profiles', 'project', 'projects', 'public', 'purchase', 'put', 'quota', 'redirect', 'reduce', 'refund', 'refunds', 'register', 'registration', 'remove', 'replies', 'reply', 'report', 'request', 'request-password', 'reset-password', 'response', 'return', 'returns', 'review', 'reviews', 'robotstxt',\n  'root',\n  'rootuser',\n  'rsa-sha2-2',\n  'rsa-sha2-512',\n  'rss',\n  'rules',\n  'sales',\n  'save',\n  'script',\n  'sdk',\n  'search',\n  'secure',\n  'security',\n  'select',\n  'session',\n  'sessions',\n  'settings',\n  'setup',\n  'share',\n  'shift',\n  'site',\n  'sitemap',\n  'sites',\n  'smtp',\n  'sort',\n  'source',\n  'sql',\n  'ssh',\n  'ssh-rsa',\n  'ssl',\n  'ssladmin',\n  'ssladministrator',\n  'sslwebmaster',\n  'stage',\n  'staging',\n  'stat',\n  'static',\n  'statistics',\n  'stats',\n  'status',\n  'store',\n  'style',\n  'styles',\n  'stylesheet',\n  'stylesheets',\n  'subdomain',\n  'subscribe',\n  'sudo',\n  'super',\n  'superuser',\n  'survey',\n  'sync',\n  'sysadmin',\n  'system',\n  'tablet',\n  'tag',\n  'tags',\n  'team',\n  'telnet',\n  'terms-of-use',\n  'test',\n  'testimonials',\n  'theme',\n  'themes',\n  'today',\n  'tools',\n  'topic',\n  'topics',\n  'tour',\n  'training',\n  'translate',\n  'translations',\n  'trending',\n  'trial',\n  'true',\n  'umac-128',\n  'umac-128-etm',\n  'umac-64',\n  'umac-64-etm',\n  'undefined',\n  'unfollow',\n  'unlike',\n  'update',\n  'upgrade',\n  'usenet',\n  'users',\n  'uucp',\n  'var',\n  'verify',\n  'video',\n  'view',\n  'void',\n  'vote',\n  'webmail',\n  'webmaster',\n  'website',\n  'widget',\n  'widgets',\n  'wpad',\n  'write',\n  'www',\n  'www-data',\n  'www1',\n  'www2',\n  'www3',\n  'www4',\n  'you',\n  'yourname',\n  'yourusername',\n  'zlib'\n] as const;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8722,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\constants.ts",
      "source_type": "git_repo"
    },
    "token_count": 749,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "f2d1bf9acad8c7ba9935ed6c8a2e9235",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
    "source_type": "git_repo",
    "title": "curriculum",
    "content": "// TODO: eventually this should all flow from the curriculum service, since it\n// defines the top-level structure of the curriculum.\nimport { Languages } from './i18n';\n\n// all superblocks\nexport enum SuperBlocks {\n  RespWebDesignNew = '2022/responsive-web-design',\n  RespWebDesign = 'responsive-web-design',\n  JsAlgoDataStruct = 'javascript-algorithms-and-data-structures',\n  JsAlgoDataStructNew = 'javascript-algorithms-and-data-structures-v8',\n  FrontEndDevLibs = 'front-end-development-libraries',\n  DataVis = 'data-visualization',\n  RelationalDb = 'relational-database',\n  BackEndDevApis = 'back-end-development-and-apis',\n  QualityAssurance = 'quality-assurance',\n  SciCompPy = 'scientific-computing-with-python',\n  DataAnalysisPy = 'data-analysis-with-python',\n  InfoSec = 'information-security',\n  MachineLearningPy = 'machine-learning-with-python',\n  CodingInterviewPrep = 'coding-interview-prep',\n  TheOdinProject = 'the-odin-project',\n  ProjectEuler = 'project-euler',\n  CollegeAlgebraPy = 'college-algebra-with-python',\n  FoundationalCSharp = 'foundational-c-sharp-with-microsoft',\n  FullStackDeveloper = 'full-stack-developer',\n  A2English = 'a2-english-for-developers',\n  B1English = 'b1-english-for-developers',\n  A2Spanish = 'a2-professional-spanish',\n  A2Chinese = 'a2-professional-chinese',\n  A1Chinese = 'a1-professional-chinese',\n  RosettaCode = 'rosetta-code',\n  PythonForEverybody = 'python-for-everybody',\n  BasicHtml = 'basic-html',\n  SemanticHtml = 'semantic-html',\n  DevPlayground = 'dev-playground'\n} // Note that this object is used to create folderToSuperBlockMap object\nexport const superBlockToFolderMap = {\n  [SuperBlocks RespWebDesign]: '01-responsive-web-design',\n  [SuperBlocks JsAlgoDataStruct]:\n    '02-javascript-algorithms-and-data-structures',\n  [SuperBlocks FrontEndDevLibs]: '03-front-end-development-libraries',\n  [SuperBlocks DataVis]: '04-data-visualization',\n  [SuperBlocks",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 12782,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 13
  },
  {
    "id": "be85ddf1d2112e12b8ba0f04e544d040",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
    "source_type": "git_repo",
    "title": "curriculum",
    "content": "'coding-interview-prep', TheOdinProject = 'the-odin-project', ProjectEuler = 'project-euler', CollegeAlgebraPy = 'college-algebra-with-python', FoundationalCSharp = 'foundational-c-sharp-with-microsoft', FullStackDeveloper = 'full-stack-developer', A2English = 'a2-english-for-developers', B1English = 'b1-english-for-developers', A2Spanish = 'a2-professional-spanish', A2Chinese = 'a2-professional-chinese', A1Chinese = 'a1-professional-chinese', RosettaCode = 'rosetta-code', PythonForEverybody = 'python-for-everybody', BasicHtml = 'basic-html', SemanticHtml = 'semantic-html', DevPlayground = 'dev-playground' } // Note that this object is used to create folderToSuperBlockMap object export const superBlockToFolderMap = { [SuperBlocks RespWebDesign]: '01-responsive-web-design', [SuperBlocks JsAlgoDataStruct]: '02-javascript-algorithms-and-data-structures', [SuperBlocks FrontEndDevLibs]: '03-front-end-development-libraries', [SuperBlocks DataVis]: '04-data-visualization', [SuperBlocksBackEndDevApis]: '05-back-end-development-and-apis',\n  [SuperBlocks QualityAssurance]: '06-quality-assurance',\n  [SuperBlocks SciCompPy]: '07-scientific-computing-with-python',\n  [SuperBlocks DataAnalysisPy]: '08-data-analysis-with-python',\n  [SuperBlocks InfoSec]: '09-information-security',\n  [SuperBlocks CodingInterviewPrep]: '10-coding-interview-prep',\n  [SuperBlocks MachineLearningPy]: '11-machine-learning-with-python',\n  [SuperBlocks RelationalDb]: '13-relational-databases',\n  [SuperBlocks RespWebDesignNew]: '14-responsive-web-design-22',\n  [SuperBlocks JsAlgoDataStructNew]:\n    '15-javascript-algorithms-and-data-structures-22',\n  [SuperBlocks TheOdinProject]: '16-the-odin-project',\n  [SuperBlocks CollegeAlgebraPy]: '17-college-algebra-with-python',\n  [SuperBlocks ProjectEuler]: '18-project-euler',\n  [SuperBlocks FoundationalCSharp]: '19-foundational-c-sharp-with-microsoft',\n  [SuperBlocks",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 12782,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 13
  },
  {
    "id": "4e0775e0bf26e52d59d38ae8ea7098d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
    "source_type": "git_repo",
    "title": "curriculum",
    "content": "= 'semantic-html', DevPlayground = 'dev-playground' } // Note that this object is used to create folderToSuperBlockMap object export const superBlockToFolderMap = { [SuperBlocks RespWebDesign]: '01-responsive-web-design', [SuperBlocks JsAlgoDataStruct]: '02-javascript-algorithms-and-data-structures', [SuperBlocks FrontEndDevLibs]: '03-front-end-development-libraries', [SuperBlocks DataVis]: '04-data-visualization', [SuperBlocksBackEndDevApis]: '05-back-end-development-and-apis', [SuperBlocks QualityAssurance]: '06-quality-assurance', [SuperBlocks SciCompPy]: '07-scientific-computing-with-python', [SuperBlocks DataAnalysisPy]: '08-data-analysis-with-python', [SuperBlocks InfoSec]: '09-information-security', [SuperBlocks CodingInterviewPrep]: '10-coding-interview-prep', [SuperBlocks MachineLearningPy]: '11-machine-learning-with-python', [SuperBlocks RelationalDb]: '13-relational-databases', [SuperBlocks RespWebDesignNew]: '14-responsive-web-design-22', [SuperBlocks JsAlgoDataStructNew]: '15-javascript-algorithms-and-data-structures-22', [SuperBlocks TheOdinProject]: '16-the-odin-project', [SuperBlocks CollegeAlgebraPy]: '17-college-algebra-with-python', [SuperBlocks ProjectEuler]: '18-project-euler', [SuperBlocks FoundationalCSharp]: '19-foundational-c-sharp-with-microsoft', [SuperBlocksA2English]: '21-a2-english-for-developers',\n  [SuperBlocks RosettaCode]: '22-rosetta-code',\n  [SuperBlocks PythonForEverybody]: '23-python-for-everybody',\n  [SuperBlocks B1English]: '24-b1-english-for-developers',\n  [SuperBlocks FullStackDeveloper]: '25-front-end-development',\n  [SuperBlocks A2Spanish]: '26-a2-professional-spanish',\n  [SuperBlocks A2Chinese]: '27-a2-professional-chinese',\n  [SuperBlocks BasicHtml]: '28-basic-html',\n  [SuperBlocks SemanticHtml]: '29-semantic-html',\n  [SuperBlocks A1Chinese]: '30-a1-professional-chinese',\n  [SuperBlocks DevPlayground]: '99-dev-playground'\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 12782,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 13
  },
  {
    "id": "16e54bcfbb503e11f2d886fed4982745",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
    "source_type": "git_repo",
    "title": "curriculum",
    "content": "DataVis]: '04-data-visualization', [SuperBlocksBackEndDevApis]: '05-back-end-development-and-apis', [SuperBlocks QualityAssurance]: '06-quality-assurance', [SuperBlocks SciCompPy]: '07-scientific-computing-with-python', [SuperBlocks DataAnalysisPy]: '08-data-analysis-with-python', [SuperBlocks InfoSec]: '09-information-security', [SuperBlocks CodingInterviewPrep]: '10-coding-interview-prep', [SuperBlocks MachineLearningPy]: '11-machine-learning-with-python', [SuperBlocks RelationalDb]: '13-relational-databases', [SuperBlocks RespWebDesignNew]: '14-responsive-web-design-22', [SuperBlocks JsAlgoDataStructNew]: '15-javascript-algorithms-and-data-structures-22', [SuperBlocks TheOdinProject]: '16-the-odin-project', [SuperBlocks CollegeAlgebraPy]: '17-college-algebra-with-python', [SuperBlocks ProjectEuler]: '18-project-euler', [SuperBlocks FoundationalCSharp]: '19-foundational-c-sharp-with-microsoft', [SuperBlocksA2English]: '21-a2-english-for-developers', [SuperBlocks RosettaCode]: '22-rosetta-code', [SuperBlocks PythonForEverybody]: '23-python-for-everybody', [SuperBlocks B1English]: '24-b1-english-for-developers', [SuperBlocks FullStackDeveloper]: '25-front-end-development', [SuperBlocks A2Spanish]: '26-a2-professional-spanish', [SuperBlocks A2Chinese]: '27-a2-professional-chinese', [SuperBlocks BasicHtml]: '28-basic-html', [SuperBlocks SemanticHtml]: '29-semantic-html', [SuperBlocks A1Chinese]: '30-a1-professional-chinese', [SuperBlocks DevPlayground]: '99-dev-playground' };\n\n// Same as superBlockToFolderMap but with the keys and values reversed\nexport const folderToSuperBlockMap = Object.fromEntries(\n  Object.entries(superBlockToFolderMap).map(([key, value]) => [value, key])\n);\n\nexport const languageSuperBlocks = [\n  SuperBlocks.A2English,\n  SuperBlocks.B1English,\n  SuperBlocks.A2Spanish,\n  SuperBlocks.A2Chinese\n];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 12782,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 3,
    "total_chunks": 13
  },
  {
    "id": "081c40da72ca0416b2be054d3d46c03b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
    "source_type": "git_repo",
    "title": "curriculum",
    "content": "TheOdinProject]: '16-the-odin-project', [SuperBlocks CollegeAlgebraPy]: '17-college-algebra-with-python', [SuperBlocks ProjectEuler]: '18-project-euler', [SuperBlocks FoundationalCSharp]: '19-foundational-c-sharp-with-microsoft', [SuperBlocksA2English]: '21-a2-english-for-developers', [SuperBlocks RosettaCode]: '22-rosetta-code', [SuperBlocks PythonForEverybody]: '23-python-for-everybody', [SuperBlocks B1English]: '24-b1-english-for-developers', [SuperBlocks FullStackDeveloper]: '25-front-end-development', [SuperBlocks A2Spanish]: '26-a2-professional-spanish', [SuperBlocks A2Chinese]: '27-a2-professional-chinese', [SuperBlocks BasicHtml]: '28-basic-html', [SuperBlocks SemanticHtml]: '29-semantic-html', [SuperBlocks A1Chinese]: '30-a1-professional-chinese', [SuperBlocks DevPlayground]: '99-dev-playground' }; // Same as superBlockToFolderMap but with the keys and values reversed export const folderToSuperBlockMap = Object.fromEntries( Object.entries(superBlockToFolderMap).map(([key, value]) => [value, key]) ); export const languageSuperBlocks = [ SuperBlocks.A2English, SuperBlocks.B1English, SuperBlocks.A2Spanish, SuperBlocks.A2Chinese ];\n\n/*\n * SuperBlockStages.Upcoming = SHOW_UPCOMING_CHANGES === 'true'\n * 'Upcoming' is for development -> not shown on stag or prod anywhere\n *\n * SuperBlockStages.Next = deployed, but only shown if the Growthbook feature\n * is enabled.\n *\n */\nexport enum SuperBlockStage {\n  Core,\n  English,\n  Professional,\n  Extra,\n  Legacy,\n  Upcoming,\n  Next,\n  Catalog\n}\n\nconst defaultStageOrder = [\n  SuperBlockStage.Core,\n  SuperBlockStage.English,\n  SuperBlockStage.Extra,\n  SuperBlockStage.Legacy,\n  SuperBlockStage.Professional,\n  SuperBlockStage.Next\n];\n\nexport function getStageOrder({\n  showUpcomingChanges\n}: Config): SuperBlockStage[] {\n  const stageOrder = [...defaultStageOrder];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 12782,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 4,
    "total_chunks": 13
  },
  {
    "id": "cfd9f66d259f0a633861791d45fcd940",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
    "source_type": "git_repo",
    "title": "curriculum",
    "content": "SuperBlocks.A2Spanish, SuperBlocks.A2Chinese ]; /* * SuperBlockStages.Upcoming = SHOW_UPCOMING_CHANGES === 'true' * 'Upcoming' is for development -> not shown on stag or prod anywhere * * SuperBlockStages.Next = deployed, but only shown if the Growthbook feature * is enabled. * */ export enum SuperBlockStage { Core, English, Professional, Extra, Legacy, Upcoming, Next, Catalog } const defaultStageOrder = [ SuperBlockStage.Core, SuperBlockStage.English, SuperBlockStage.Extra, SuperBlockStage.Legacy, SuperBlockStage.Professional, SuperBlockStage.Next ]; export function getStageOrder({ showUpcomingChanges }: Config): SuperBlockStage[] { const stageOrder = [...defaultStageOrder];\n\nif (showUpcomingChanges) {\n    stageOrder.push(SuperBlockStage.Upcoming, SuperBlockStage.Catalog);\n  }\n  return stageOrder;\n}\n\nexport type StageMap = {\n  [key in SuperBlockStage]: SuperBlocks[];\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 12782,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
      "source_type": "git_repo"
    },
    "token_count": 214,
    "chunk_index": 5,
    "total_chunks": 13
  },
  {
    "id": "9de533f86e5d139723b8eaf46d791237",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
    "source_type": "git_repo",
    "title": "curriculum",
    "content": "stag or prod anywhere * * SuperBlockStages.Next = deployed, but only shown if the Growthbook feature * is enabled. * */ export enum SuperBlockStage { Core, English, Professional, Extra, Legacy, Upcoming, Next, Catalog } const defaultStageOrder = [ SuperBlockStage.Core, SuperBlockStage.English, SuperBlockStage.Extra, SuperBlockStage.Legacy, SuperBlockStage.Professional, SuperBlockStage.Next ]; export function getStageOrder({ showUpcomingChanges }: Config): SuperBlockStage[] { const stageOrder = [...defaultStageOrder]; if (showUpcomingChanges) { stageOrder.push(SuperBlockStage.Upcoming, SuperBlockStage.Catalog); } return stageOrder; } export type StageMap = { [key in SuperBlockStage]: SuperBlocks[]; };\n\n// Groups of superblocks in learn map. This should include all superblocks.\nexport const superBlockStages: StageMap = {\n  [SuperBlockStage.Core]: [SuperBlocks.FullStackDeveloper],\n  [SuperBlockStage.English]: [SuperBlocks.A2English, SuperBlocks.B1English],\n  [SuperBlockStage.Professional]: [SuperBlocks.FoundationalCSharp],\n  [SuperBlockStage.Extra]: [\n    SuperBlocks.TheOdinProject,\n    SuperBlocks.CodingInterviewPrep,\n    SuperBlocks.ProjectEuler,\n    SuperBlocks.RosettaCode\n  ],\n  [SuperBlockStage.Legacy]: [\n    SuperBlocks.RespWebDesignNew,\n    SuperBlocks.JsAlgoDataStructNew,\n    SuperBlocks.FrontEndDevLibs,\n    SuperBlocks.DataVis,\n    SuperBlocks.RelationalDb,\n    SuperBlocks.BackEndDevApis,\n    SuperBlocks.QualityAssurance,\n    SuperBlocks.SciCompPy,\n    SuperBlocks.DataAnalysisPy,\n    SuperBlocks.InfoSec,\n    SuperBlocks.MachineLearningPy,\n    SuperBlocks.CollegeAlgebraPy,\n    SuperBlocks.RespWebDesign,\n    SuperBlocks.JsAlgoDataStruct,\n    SuperBlocks.PythonForEverybody\n  ],\n  [SuperBlockStage.Next]: [],\n  [SuperBlockStage.Upcoming]: [\n    SuperBlocks.A2Spanish,\n    SuperBlocks.A2Chinese,\n    SuperBlocks.A1Chinese,\n    SuperBlocks.DevPlayground\n  ],\n  // Catalog is treated like upcoming for now\n  // Add catalog superBlocks to catalog.ts when adding new superBlocks\n  [SuperBlockStage.Catalog]: [SuperBlocks.BasicHtml, SuperBlocks.SemanticHtml]\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 12782,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
      "source_type": "git_repo"
    },
    "token_count": 520,
    "chunk_index": 6,
    "total_chunks": 13
  },
  {
    "id": "384bf013a8efddfd9311164863484a0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
    "source_type": "git_repo",
    "title": "curriculum",
    "content": "learn map. This should include all superblocks. export const superBlockStages: StageMap = { [SuperBlockStage.Core]: [SuperBlocks.FullStackDeveloper], [SuperBlockStage.English]: [SuperBlocks.A2English, SuperBlocks.B1English], [SuperBlockStage.Professional]: [SuperBlocks.FoundationalCSharp], [SuperBlockStage.Extra]: [ SuperBlocks.TheOdinProject, SuperBlocks.CodingInterviewPrep, SuperBlocks.ProjectEuler, SuperBlocks.RosettaCode ], [SuperBlockStage.Legacy]: [ SuperBlocks.RespWebDesignNew, SuperBlocks.JsAlgoDataStructNew, SuperBlocks.FrontEndDevLibs, SuperBlocks.DataVis, SuperBlocks.RelationalDb, SuperBlocks.BackEndDevApis, SuperBlocks.QualityAssurance, SuperBlocks.SciCompPy, SuperBlocks.DataAnalysisPy, SuperBlocks.InfoSec, SuperBlocks.MachineLearningPy, SuperBlocks.CollegeAlgebraPy, SuperBlocks.RespWebDesign, SuperBlocks.JsAlgoDataStruct, SuperBlocks.PythonForEverybody ], [SuperBlockStage.Next]: [], [SuperBlockStage.Upcoming]: [ SuperBlocks.A2Spanish, SuperBlocks.A2Chinese, SuperBlocks.A1Chinese, SuperBlocks.DevPlayground ], // Catalog is treated like upcoming for now // Add catalog superBlocks to catalog.ts when adding new superBlocks [SuperBlockStage.Catalog]: [SuperBlocks.BasicHtml, SuperBlocks.SemanticHtml] };\n\nObject.freeze(superBlockStages);\n\nexport const catalogSuperBlocks = superBlockStages[SuperBlockStage.Catalog];\n\ntype NotAuditedSuperBlocks = {\n  [key in Languages]: SuperBlocks[];\n}; // when a superBlock is audited, remove it from its language below\n// when adding a new language, add all (not audited) superblocks to the object\nexport const notAuditedSuperBlocks: NotAuditedSuperBlocks = {\n  [Languages English]: [],\n  [Languages Espanol]: [\n    SuperBlocks InfoSec,\n    SuperBlocks MachineLearningPy,\n    SuperBlocks CollegeAlgebraPy,\n    SuperBlocks FoundationalCSharp,\n    SuperBlocks CodingInterviewPrep,\n    SuperBlocks ProjectEuler,\n    SuperBlocks JsAlgoDataStructNew,\n    SuperBlocks TheOdinProject,\n    SuperBlocks FullStackDeveloper,\n    SuperBlocks A2English,\n    SuperBlocks B1English,\n    SuperBlocks",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 12782,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 7,
    "total_chunks": 13
  },
  {
    "id": "843a33dd112595b72a8f45281f207e59",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
    "source_type": "git_repo",
    "title": "curriculum",
    "content": "Object.freeze(superBlockStages); export const catalogSuperBlocks = superBlockStages[SuperBlockStage.Catalog]; type NotAuditedSuperBlocks = { [key in Languages]: SuperBlocks[]; }; // when a superBlock is audited, remove it from its language below // when adding a new language, add all (not audited) superblocks to the object export const notAuditedSuperBlocks: NotAuditedSuperBlocks = { [Languages English]: [], [Languages Espanol]: [ SuperBlocks InfoSec, SuperBlocks MachineLearningPy, SuperBlocks CollegeAlgebraPy, SuperBlocks FoundationalCSharp, SuperBlocks CodingInterviewPrep, SuperBlocks ProjectEuler, SuperBlocks JsAlgoDataStructNew, SuperBlocks TheOdinProject, SuperBlocks FullStackDeveloper, SuperBlocks A2English, SuperBlocks B1English, SuperBlocksA2Spanish,\n    SuperBlocks A2Chinese,\n    SuperBlocks A1Chinese,\n    SuperBlocks PythonForEverybody,\n    SuperBlocks BasicHtml,\n    SuperBlocks SemanticHtml,\n    SuperBlocks DevPlayground\n  ],\n  [Languages Chinese]: [\n    SuperBlocks CodingInterviewPrep,\n    SuperBlocks ProjectEuler,\n    SuperBlocks TheOdinProject,\n    SuperBlocks FullStackDeveloper,\n    SuperBlocks A2English,\n    SuperBlocks B1English,\n    SuperBlocks A2Spanish,\n    SuperBlocks A2Chinese,\n    SuperBlocks A1Chinese,\n    SuperBlocks PythonForEverybody,\n    SuperBlocks BasicHtml,\n    SuperBlocks SemanticHtml,\n    SuperBlocks DevPlayground\n  ],\n  [Languages ChineseTraditional]: [\n    SuperBlocks CodingInterviewPrep,\n    SuperBlocks ProjectEuler,\n    SuperBlocks TheOdinProject,\n    SuperBlocks FullStackDeveloper,\n    SuperBlocks A2English,\n    SuperBlocks B1English,\n    SuperBlocks A2Spanish,\n    SuperBlocks A2Chinese,\n    SuperBlocks A1Chinese,\n    SuperBlocks PythonForEverybody,\n    SuperBlocks BasicHtml,\n    SuperBlocks SemanticHtml,\n    SuperBlocks DevPlayground\n  ],\n  [Languages Italian]: [\n    SuperBlocks FoundationalCSharp,\n    SuperBlocks JsAlgoDataStructNew,\n    SuperBlocks TheOdinProject,\n    SuperBlocks FullStackDeveloper,\n    SuperBlocks A2English,\n    SuperBlocks B1English,\n    SuperBlocks A2Spanish,\n    SuperBlocks A2Chinese,\n    SuperBlocks A1Chinese,\n    SuperBlocks",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 12782,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 8,
    "total_chunks": 13
  },
  {
    "id": "270dcbbd43b76ba88fbac749c53ddc87",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
    "source_type": "git_repo",
    "title": "curriculum",
    "content": "ProjectEuler, SuperBlocks TheOdinProject, SuperBlocks FullStackDeveloper, SuperBlocks A2English, SuperBlocks B1English, SuperBlocks A2Spanish, SuperBlocks A2Chinese, SuperBlocks A1Chinese, SuperBlocks PythonForEverybody, SuperBlocks BasicHtml, SuperBlocks SemanticHtml, SuperBlocks DevPlayground ], [Languages ChineseTraditional]: [ SuperBlocks CodingInterviewPrep, SuperBlocks ProjectEuler, SuperBlocks TheOdinProject, SuperBlocks FullStackDeveloper, SuperBlocks A2English, SuperBlocks B1English, SuperBlocks A2Spanish, SuperBlocks A2Chinese, SuperBlocks A1Chinese, SuperBlocks PythonForEverybody, SuperBlocks BasicHtml, SuperBlocks SemanticHtml, SuperBlocks DevPlayground ], [Languages Italian]: [ SuperBlocks FoundationalCSharp, SuperBlocks JsAlgoDataStructNew, SuperBlocks TheOdinProject, SuperBlocks FullStackDeveloper, SuperBlocks A2English, SuperBlocks B1English, SuperBlocks A2Spanish, SuperBlocks A2Chinese, SuperBlocks A1Chinese, SuperBlocksPythonForEverybody,\n    SuperBlocks BasicHtml,\n    SuperBlocks SemanticHtml,\n    SuperBlocks DevPlayground\n  ],\n  [Languages Portuguese]: [\n    SuperBlocks JsAlgoDataStructNew,\n    SuperBlocks FullStackDeveloper,\n    SuperBlocks A2English,\n    SuperBlocks B1English,\n    SuperBlocks A2Spanish,\n    SuperBlocks A2Chinese,\n    SuperBlocks A1Chinese,\n    SuperBlocks PythonForEverybody,\n    SuperBlocks BasicHtml,\n    SuperBlocks SemanticHtml,\n    SuperBlocks DevPlayground\n  ],\n  [Languages Ukrainian]: [\n    SuperBlocks JsAlgoDataStructNew,\n    SuperBlocks FullStackDeveloper,\n    SuperBlocks A2English,\n    SuperBlocks B1English,\n    SuperBlocks A2Spanish,\n    SuperBlocks A2Chinese,\n    SuperBlocks A1Chinese,\n    SuperBlocks BasicHtml,\n    SuperBlocks SemanticHtml,\n    SuperBlocks DevPlayground\n  ],\n  [Languages Japanese]: [\n    SuperBlocks JsAlgoDataStructNew,\n    SuperBlocks TheOdinProject,\n    SuperBlocks FullStackDeveloper,\n    SuperBlocks A2English,\n    SuperBlocks B1English,\n    SuperBlocks A2Spanish,\n    SuperBlocks A2Chinese,\n    SuperBlocks A1Chinese,\n    SuperBlocks BasicHtml,\n    SuperBlocks SemanticHtml,\n    SuperBlocks",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 12782,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 9,
    "total_chunks": 13
  },
  {
    "id": "569d1528e55e237cbb0dbe69bb006947",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
    "source_type": "git_repo",
    "title": "curriculum",
    "content": "DevPlayground ], [Languages Portuguese]: [ SuperBlocks JsAlgoDataStructNew, SuperBlocks FullStackDeveloper, SuperBlocks A2English, SuperBlocks B1English, SuperBlocks A2Spanish, SuperBlocks A2Chinese, SuperBlocks A1Chinese, SuperBlocks PythonForEverybody, SuperBlocks BasicHtml, SuperBlocks SemanticHtml, SuperBlocks DevPlayground ], [Languages Ukrainian]: [ SuperBlocks JsAlgoDataStructNew, SuperBlocks FullStackDeveloper, SuperBlocks A2English, SuperBlocks B1English, SuperBlocks A2Spanish, SuperBlocks A2Chinese, SuperBlocks A1Chinese, SuperBlocks BasicHtml, SuperBlocks SemanticHtml, SuperBlocks DevPlayground ], [Languages Japanese]: [ SuperBlocks JsAlgoDataStructNew, SuperBlocks TheOdinProject, SuperBlocks FullStackDeveloper, SuperBlocks A2English, SuperBlocks B1English, SuperBlocks A2Spanish, SuperBlocks A2Chinese, SuperBlocks A1Chinese, SuperBlocks BasicHtml, SuperBlocks SemanticHtml, SuperBlocksDevPlayground\n  ],\n  [Languages German]: [\n    SuperBlocks RelationalDb,\n    SuperBlocks QualityAssurance,\n    SuperBlocks InfoSec,\n    SuperBlocks MachineLearningPy,\n    SuperBlocks CollegeAlgebraPy,\n    SuperBlocks FoundationalCSharp,\n    SuperBlocks CodingInterviewPrep,\n    SuperBlocks ProjectEuler,\n    SuperBlocks JsAlgoDataStructNew,\n    SuperBlocks TheOdinProject,\n    SuperBlocks FullStackDeveloper,\n    SuperBlocks A2English,\n    SuperBlocks B1English,\n    SuperBlocks A2Spanish,\n    SuperBlocks A2Chinese,\n    SuperBlocks A1Chinese,\n    SuperBlocks PythonForEverybody,\n    SuperBlocks BasicHtml,\n    SuperBlocks SemanticHtml,\n    SuperBlocks DevPlayground\n  ],\n  [Languages Swahili]: [\n    SuperBlocks DataVis,\n    SuperBlocks RelationalDb,\n    SuperBlocks BackEndDevApis,\n    SuperBlocks QualityAssurance,\n    SuperBlocks SciCompPy,\n    SuperBlocks DataAnalysisPy,\n    SuperBlocks InfoSec,\n    SuperBlocks MachineLearningPy,\n    SuperBlocks CollegeAlgebraPy,\n    SuperBlocks FoundationalCSharp,\n    SuperBlocks CodingInterviewPrep,\n    SuperBlocks ProjectEuler,\n    SuperBlocks TheOdinProject,\n    SuperBlocks RespWebDesign,\n    SuperBlocks FrontEndDevLibs,\n    SuperBlocks JsAlgoDataStructNew,\n    SuperBlocks",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 12782,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 10,
    "total_chunks": 13
  },
  {
    "id": "9ac5d31d476cef2079f45540023e2979",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
    "source_type": "git_repo",
    "title": "curriculum",
    "content": "RelationalDb, SuperBlocks QualityAssurance, SuperBlocks InfoSec, SuperBlocks MachineLearningPy, SuperBlocks CollegeAlgebraPy, SuperBlocks FoundationalCSharp, SuperBlocks CodingInterviewPrep, SuperBlocks ProjectEuler, SuperBlocks JsAlgoDataStructNew, SuperBlocks TheOdinProject, SuperBlocks FullStackDeveloper, SuperBlocks A2English, SuperBlocks B1English, SuperBlocks A2Spanish, SuperBlocks A2Chinese, SuperBlocks A1Chinese, SuperBlocks PythonForEverybody, SuperBlocks BasicHtml, SuperBlocks SemanticHtml, SuperBlocks DevPlayground ], [Languages Swahili]: [ SuperBlocks DataVis, SuperBlocks RelationalDb, SuperBlocks BackEndDevApis, SuperBlocks QualityAssurance, SuperBlocks SciCompPy, SuperBlocks DataAnalysisPy, SuperBlocks InfoSec, SuperBlocks MachineLearningPy, SuperBlocks CollegeAlgebraPy, SuperBlocks FoundationalCSharp, SuperBlocks CodingInterviewPrep, SuperBlocks ProjectEuler, SuperBlocks TheOdinProject, SuperBlocks RespWebDesign, SuperBlocks FrontEndDevLibs, SuperBlocks JsAlgoDataStructNew, SuperBlocksJsAlgoDataStruct,\n    SuperBlocks FullStackDeveloper,\n    SuperBlocks A2English,\n    SuperBlocks B1English,\n    SuperBlocks A2Spanish,\n    SuperBlocks A2Chinese,\n    SuperBlocks A1Chinese,\n    SuperBlocks PythonForEverybody,\n    SuperBlocks BasicHtml,\n    SuperBlocks SemanticHtml,\n    SuperBlocks DevPlayground\n  ],\n  [Languages Korean]: [\n    SuperBlocks RespWebDesignNew,\n    SuperBlocks JsAlgoDataStruct,\n    SuperBlocks BackEndDevApis,\n    SuperBlocks QualityAssurance,\n    SuperBlocks SciCompPy,\n    SuperBlocks DataAnalysisPy,\n    SuperBlocks InfoSec,\n    SuperBlocks MachineLearningPy,\n    SuperBlocks CollegeAlgebraPy,\n    SuperBlocks FoundationalCSharp,\n    SuperBlocks CodingInterviewPrep,\n    SuperBlocks ProjectEuler,\n    SuperBlocks TheOdinProject,\n    SuperBlocks FrontEndDevLibs,\n    SuperBlocks JsAlgoDataStructNew,\n    SuperBlocks FullStackDeveloper,\n    SuperBlocks A2English,\n    SuperBlocks B1English,\n    SuperBlocks A2Spanish,\n    SuperBlocks A2Chinese,\n    SuperBlocks A1Chinese,\n    SuperBlocks PythonForEverybody,\n    SuperBlocks DataVis,\n    SuperBlocks RelationalDb,\n    SuperBlocks",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 12782,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 11,
    "total_chunks": 13
  },
  {
    "id": "918fe300c421f90c20a8791228ec5df5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
    "source_type": "git_repo",
    "title": "curriculum",
    "content": "SuperBlocks JsAlgoDataStructNew, SuperBlocksJsAlgoDataStruct, SuperBlocks FullStackDeveloper, SuperBlocks A2English, SuperBlocks B1English, SuperBlocks A2Spanish, SuperBlocks A2Chinese, SuperBlocks A1Chinese, SuperBlocks PythonForEverybody, SuperBlocks BasicHtml, SuperBlocks SemanticHtml, SuperBlocks DevPlayground ], [Languages Korean]: [ SuperBlocks RespWebDesignNew, SuperBlocks JsAlgoDataStruct, SuperBlocks BackEndDevApis, SuperBlocks QualityAssurance, SuperBlocks SciCompPy, SuperBlocks DataAnalysisPy, SuperBlocks InfoSec, SuperBlocks MachineLearningPy, SuperBlocks CollegeAlgebraPy, SuperBlocks FoundationalCSharp, SuperBlocks CodingInterviewPrep, SuperBlocks ProjectEuler, SuperBlocks TheOdinProject, SuperBlocks FrontEndDevLibs, SuperBlocks JsAlgoDataStructNew, SuperBlocks FullStackDeveloper, SuperBlocks A2English, SuperBlocks B1English, SuperBlocks A2Spanish, SuperBlocks A2Chinese, SuperBlocks A1Chinese, SuperBlocks PythonForEverybody, SuperBlocks DataVis, SuperBlocks RelationalDb, SuperBlocksRosettaCode,\n    SuperBlocks BasicHtml,\n    SuperBlocks SemanticHtml,\n    SuperBlocks DevPlayground\n  ]\n};\n\nObject.freeze(notAuditedSuperBlocks);\n\nexport const chapterBasedSuperBlocks = [SuperBlocks.FullStackDeveloper];\nObject.freeze(chapterBasedSuperBlocks);\n\ntype Config = {\n  showUpcomingChanges: boolean;\n};\n\nexport function generateSuperBlockList(config: Config): SuperBlocks[] {\n  return getStageOrder(config)\n    .map(stage => superBlockStages[stage])\n    .flat();\n}\n\nexport function getAuditedSuperBlocks({\n  language = 'english'\n}: {\n  language: string;\n}): SuperBlocks[] {\n  if (!Object.prototype.hasOwnProperty.call(notAuditedSuperBlocks, language)) {\n    throw Error(`'${language}' key not found in 'notAuditedSuperBlocks'`);\n  }\n\n// To find the audited superblocks, we need to start with all superblocks.\n  const flatSuperBlockMap = generateSuperBlockList({\n    showUpcomingChanges: true\n  });\n  const auditedSuperBlocks = flatSuperBlockMap.filter(\n    superBlock =>\n      !notAuditedSuperBlocks[language as Languages].includes(superBlock)\n  );\n  return auditedSuperBlocks;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 12782,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\curriculum.ts",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 12,
    "total_chunks": 13
  },
  {
    "id": "3f9351288672b069edb44ab916ba23ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\donation-settings.ts",
    "source_type": "git_repo",
    "title": "donation-settings",
    "content": "// Configuration for client side\n\nexport type DonationAmount = 500 | 1000 | 2000 | 4000;\nexport type DonationDuration = 'one-time' | 'month';\nexport interface DonationConfig {\n  donationAmount: DonationAmount;\n  donationDuration: DonationDuration;\n}\n\nexport const subscriptionAmounts: DonationAmount[] = [500, 1000, 2000, 4000];\n\nexport const defaultDonation: DonationConfig = {\n  donationAmount: 500,\n  donationDuration: 'month'\n};\n\nexport const defaultTierAmount: DonationAmount = 2000;\n\nexport const onetimeSKUConfig = {\n  production: [\n    { amount: '15000', id: 'sku_IElisJHup0nojP' },\n    { amount: '10000', id: 'sku_IEliodY88lglPk' },\n    { amount: '7500', id: 'sku_IEli9AXW8DwNtT' },\n    { amount: '5000', id: 'sku_IElhJxkNh9UgDp' },\n    { amount: '2500', id: 'sku_IElhQtqLgKZC8y' }\n  ],\n  staging: [\n    { amount: '15000', id: 'sku_IEPNpHACYJmUwz' },\n    { amount: '10000', id: 'sku_IEPMY1OXxnY4WU' },\n    { amount: '7500', id: 'sku_IEPLOotEqlMOWC' },\n    { amount: '5000', id: 'sku_IEPKAxxAxfMnUI' },\n    { amount: '2500', id: 'sku_IEPIgLRzViwq5z' }\n  ]\n};\n\n// Configuration for server side\nexport const durationKeysConfig = ['month', 'one-time'];\nexport const donationOneTimeConfig = [100000, 25000, 6000];\nexport const donationSubscriptionConfig = {\n  duration: {\n    month: 'monthly'\n  },\n  plans: {\n    month: subscriptionAmounts\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3972,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\donation-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "09230ccba5093a11b8b764a7e6a324be",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\donation-settings.ts",
    "source_type": "git_repo",
    "title": "donation-settings",
    "content": "}, { amount: '2500', id: 'sku_IElhQtqLgKZC8y' } ], staging: [ { amount: '15000', id: 'sku_IEPNpHACYJmUwz' }, { amount: '10000', id: 'sku_IEPMY1OXxnY4WU' }, { amount: '7500', id: 'sku_IEPLOotEqlMOWC' }, { amount: '5000', id: 'sku_IEPKAxxAxfMnUI' }, { amount: '2500', id: 'sku_IEPIgLRzViwq5z' } ] }; // Configuration for server side export const durationKeysConfig = ['month', 'one-time']; export const donationOneTimeConfig = [100000, 25000, 6000]; export const donationSubscriptionConfig = { duration: { month: 'monthly' }, plans: { month: subscriptionAmounts } };\n\n// Shared paypal configuration\n// keep the 5 dollars for the modal\nexport const paypalConfigTypes = {\n  production: {\n    month: {\n      500: { planId: 'P-6B636789V3105190KMTJFH7A' },\n      1000: { planId: 'P-53P76823N8780520DMVTWF3I' },\n      2000: { planId: 'P-8HY47434FB9663500MVTWFOA' },\n      3000: { planId: 'P-1KY930839N8045117L6E4BKY' },\n      4000: { planId: 'P-0MH28916302828423MVTWEBI' },\n      5000: { planId: 'P-0WR49877YD949401BL6E4CTA' }\n    }\n  },\n  staging: {\n    month: {\n      500: { planId: 'P-37N14480BW163382FLZYPVMA' },\n      1000: { planId: 'P-28B62039J8092810UL6E3FXA' },\n      2000: { planId: 'P-7HR706961M9170433L6HI5VI' },\n      3000: { planId: 'P-35V33574BU596924JL6HI6XY' },\n      4000: { planId: 'P-45M45060289267734L6HJSXA' },\n      5000: { planId: 'P-0MD70861FY4172444L6HJTUQ' }\n    }\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3972,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\donation-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 577,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "729c1879524457bca10e3fb030391c83",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\donation-settings.ts",
    "source_type": "git_repo",
    "title": "donation-settings",
    "content": "paypalConfigTypes = { production: { month: { 500: { planId: 'P-6B636789V3105190KMTJFH7A' }, 1000: { planId: 'P-53P76823N8780520DMVTWF3I' }, 2000: { planId: 'P-8HY47434FB9663500MVTWFOA' }, 3000: { planId: 'P-1KY930839N8045117L6E4BKY' }, 4000: { planId: 'P-0MH28916302828423MVTWEBI' }, 5000: { planId: 'P-0WR49877YD949401BL6E4CTA' } } }, staging: { month: { 500: { planId: 'P-37N14480BW163382FLZYPVMA' }, 1000: { planId: 'P-28B62039J8092810UL6E3FXA' }, 2000: { planId: 'P-7HR706961M9170433L6HI5VI' }, 3000: { planId: 'P-35V33574BU596924JL6HI6XY' }, 4000: { planId: 'P-45M45060289267734L6HJSXA' }, 5000: { planId: 'P-0MD70861FY4172444L6HJTUQ' } } } };\n\ninterface OneTimeConfig {\n  amount: DonationAmount;\n  duration: 'one-time';\n  planId: null;\n}\n\ninterface SubscriptionConfig {\n  amount: DonationAmount;\n  duration: 'month';\n  planId: string;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3972,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\donation-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "369e20af1828b90d91fc310b4335009a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\donation-settings.ts",
    "source_type": "git_repo",
    "title": "donation-settings",
    "content": "'P-8HY47434FB9663500MVTWFOA' }, 3000: { planId: 'P-1KY930839N8045117L6E4BKY' }, 4000: { planId: 'P-0MH28916302828423MVTWEBI' }, 5000: { planId: 'P-0WR49877YD949401BL6E4CTA' } } }, staging: { month: { 500: { planId: 'P-37N14480BW163382FLZYPVMA' }, 1000: { planId: 'P-28B62039J8092810UL6E3FXA' }, 2000: { planId: 'P-7HR706961M9170433L6HI5VI' }, 3000: { planId: 'P-35V33574BU596924JL6HI6XY' }, 4000: { planId: 'P-45M45060289267734L6HJSXA' }, 5000: { planId: 'P-0MD70861FY4172444L6HJTUQ' } } } }; interface OneTimeConfig { amount: DonationAmount; duration: 'one-time'; planId: null; } interface SubscriptionConfig { amount: DonationAmount; duration: 'month'; planId: string; }\n\nexport const paypalConfigurator = (\n  donationAmount: DonationAmount,\n  donationDuration: 'one-time' | 'month',\n  paypalConfig: {\n    month: {\n      500: { planId: string };\n      1000: { planId: string };\n      2000: { planId: string };\n      3000: { planId: string };\n      4000: { planId: string };\n      5000: { planId: string };\n    };\n  }\n): OneTimeConfig | SubscriptionConfig => {\n  if (donationDuration === 'one-time') {\n    return { amount: donationAmount, duration: donationDuration, planId: null };\n  }\n  return {\n    amount: donationAmount,\n    duration: donationDuration,\n    planId: paypalConfig[donationDuration][donationAmount].planId\n  };\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3972,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\donation-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "f73ad80f75c4ca544109f7f0dabb007f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\donation-settings.ts",
    "source_type": "git_repo",
    "title": "donation-settings",
    "content": "paypalConfigurator = ( donationAmount: DonationAmount, donationDuration: 'one-time' | 'month', paypalConfig: { month: { 500: { planId: string }; 1000: { planId: string }; 2000: { planId: string }; 3000: { planId: string }; 4000: { planId: string }; 5000: { planId: string }; }; } ): OneTimeConfig | SubscriptionConfig => { if (donationDuration === 'one-time') { return { amount: donationAmount, duration: donationDuration, planId: null }; } return { amount: donationAmount, duration: donationDuration, planId: paypalConfig[donationDuration][donationAmount].planId }; };\n\nexport const donationUrls = {\n  successUrl: 'https://www.freecodecamp.org/news/thank-you-for-donating/',\n  cancelUrl: 'https://freecodecamp.org/donate'\n};\n\nexport enum PaymentContext {\n  Modal = 'modal',\n  DonatePage = 'donate page',\n  Certificate = 'certificate'\n}\n\nexport enum PaymentProvider {\n  Paypal = 'paypal',\n  Patreon = 'patreon',\n  Stripe = 'stripe',\n  StripeCard = 'stripe card'\n}\n\nconst stripeProductIds = {\n  production: {\n    month: {\n      500: 'prod_Cc9bIxB2NvjpLy',\n      1000: 'prod_BuiSxWk7jGSFlJ',\n      2000: 'prod_IElpZVK7kOn6Fe',\n      4000: 'prod_IElq1foW39g3Cx'\n    }\n  },\n  staging: {\n    month: {\n      500: 'prod_GD1GGbJsqQaupl',\n      1000: 'prod_GD1IzNEXfSCGgy',\n      2000: 'prod_IEkNp8M03xvsuB',\n      4000: 'prod_IEkPebxS63mVbs'\n    }\n  }\n};\n\nexport const allStripeProductIdsArray = [\n  ...Object.values(stripeProductIds['production']['month']),\n  ...Object.values(stripeProductIds['staging']['month'])\n];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3972,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\donation-settings.ts",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "420594b41c545ff5cd7d9c882d5ebc2f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\modules.ts",
    "source_type": "git_repo",
    "title": "modules",
    "content": "export interface Module {\n  dashedName: string;\n  comingSoon?: boolean;\n  blocks: {\n    dashedName: string;\n  }[];\n  moduleType?: string;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 140,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\modules.ts",
      "source_type": "git_repo"
    },
    "token_count": 36,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "3a4151e70b2979177be67dd98308622b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\utils\\get-lines.test.ts",
    "source_type": "git_repo",
    "title": "get-lines.test",
    "content": "import { getLines } from './get-lines';\n\nconst content = 'one\\ntwo\\nthree';\n\ndescribe('dasherize', () => {\n  it('returns a string', () => {\n    expect(getLines('')).toBe('');\n  });\n  it(\"returns '' when the second arg is empty\", () => {\n    expect(getLines(content)).toBe('');\n  });\n  it(\"returns '' when the range is negative\", () => {\n    expect(getLines(content, [1, -1])).toBe('');\n  });\n  it(\"returns '' when the range is [n,n]\", () => {\n    expect(getLines(content, [0, 0])).toBe('');\n    expect(getLines(content, [1, 1])).toBe('');\n    expect(getLines(content, [2, 2])).toBe('');\n  });\n\nit('returns the first line when the range is [0,2]', () => {\n    expect(getLines(content, [0, 2])).toBe('one');\n  });\n  it('returns the second line when the range is [1,3]', () => {\n    expect(getLines(content, [1, 3])).toBe('two');\n  });\n  it('returns the first and second lines when the range is [0,3]', () => {\n    expect(getLines(content, [0, 3])).toBe('one\\ntwo');\n  });\n  it('returns the second and third lines when the range is [1,4]', () => {\n    expect(getLines(content, [1, 4])).toBe('two\\nthree');\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1115,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\utils\\get-lines.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 322,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "67a43e0efee991abafaebfee9d7701cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\utils\\get-lines.ts",
    "source_type": "git_repo",
    "title": "get-lines",
    "content": "export function getLines(contents: string, range?: number[]): string {\n  if (!range) {\n    return '';\n  }\n\nconst lines = contents.split('\\n');\n  const editableLines =\n    range[1] <= range[0] ? [] : lines.slice(range[0], range[1] - 1);\n  return editableLines.join('\\n');\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 275,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\utils\\get-lines.ts",
      "source_type": "git_repo"
    },
    "token_count": 74,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "1514fc3a12148ceeb24959fecfe2df28",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\i18n.ts",
    "source_type": "git_repo",
    "title": "i18n",
    "content": "export enum Languages {\n  English = 'english',\n  Espanol = 'espanol',\n  Chinese = 'chinese',\n  ChineseTraditional = 'chinese-traditional',\n  Italian = 'italian',\n  Portuguese = 'portuguese',\n  Ukrainian = 'ukrainian',\n  Japanese = 'japanese',\n  German = 'german',\n  Swahili = 'swahili',\n  Korean = 'korean'\n}\n\n/*\n * List of languages with localizations enabled for builds.\n *\n * Client is the UI, and Curriculum is the Challenge Content.\n *\n * An error will be thrown if the CLIENT_LOCALE and CURRICULUM_LOCALE variables\n * from the .env file aren't found in their respective arrays below\n */\nexport const availableLangs = {\n  client: [\n    Languages.English,\n    Languages.Espanol,\n    Languages.Chinese,\n    Languages.ChineseTraditional,\n    Languages.Italian,\n    Languages.Portuguese,\n    Languages.Ukrainian,\n    Languages.Japanese,\n    Languages.German,\n    Languages.Swahili,\n    Languages.Korean\n  ],\n  curriculum: [\n    Languages.English,\n    Languages.Espanol,\n    Languages.Chinese,\n    Languages.ChineseTraditional,\n    Languages.Italian,\n    Languages.Portuguese,\n    Languages.Ukrainian,\n    Languages.Japanese,\n    Languages.German,\n    Languages.Swahili,\n    Languages.Korean\n  ]\n};\n\n// ---------------------------------------------------------------------------\n\n// Each client language needs an entry in the rest of the variables below\n\n/* These strings set the i18next language. It needs to be the two character\n * string for the language to take advantage of available functionality.\n * Use a 639-1 code here https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n */\nexport const i18nextCodes = {\n  [Languages.English]: 'en',\n  [Languages.Espanol]: 'es',\n  [Languages.Chinese]: 'zh',\n  [Languages.ChineseTraditional]: 'zh-Hant',\n  [Languages.Italian]: 'it',\n  [Languages.Portuguese]: 'pt-BR',\n  [Languages.Ukrainian]: 'uk',\n  [Languages.Japanese]: 'ja',\n  [Languages.German]: 'de',\n  [Languages.Swahili]: 'sw',\n  [Languages.Korean]: 'ko'\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3808,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\i18n.ts",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "469ef99664f8ca81acd8457a0a0d5200",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\i18n.ts",
    "source_type": "git_repo",
    "title": "i18n",
    "content": "--------------------------------------------------------------------------- // Each client language needs an entry in the rest of the variables below /* These strings set the i18next language. It needs to be the two character * string for the language to take advantage of available functionality. * Use a 639-1 code here https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes */ export const i18nextCodes = { [Languages.English]: 'en', [Languages.Espanol]: 'es', [Languages.Chinese]: 'zh', [Languages.ChineseTraditional]: 'zh-Hant', [Languages.Italian]: 'it', [Languages.Portuguese]: 'pt-BR', [Languages.Ukrainian]: 'uk', [Languages.Japanese]: 'ja', [Languages.German]: 'de', [Languages.Swahili]: 'sw', [Languages.Korean]: 'ko' };\n\n// These are for the language selector dropdown menu in the footer\nexport const LangNames: { [key: string]: string } = {\n  [Languages.English]: 'English',\n  [Languages.Espanol]: 'Español',\n  [Languages.Chinese]: '中文（简体字）',\n  [Languages.ChineseTraditional]: '中文（繁體字）',\n  [Languages.Italian]: 'Italiano',\n  [Languages.Portuguese]: 'Português',\n  [Languages.Ukrainian]: 'Українська',\n  [Languages.Japanese]: '日本語',\n  [Languages.German]: 'Deutsch',\n  [Languages.Swahili]: 'Swahili',\n  [Languages.Korean]: '한국어'\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3808,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\i18n.ts",
      "source_type": "git_repo"
    },
    "token_count": 350,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "dfdce47c52c9d63252afdd6a501fb521",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\i18n.ts",
    "source_type": "git_repo",
    "title": "i18n",
    "content": "here https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes */ export const i18nextCodes = { [Languages.English]: 'en', [Languages.Espanol]: 'es', [Languages.Chinese]: 'zh', [Languages.ChineseTraditional]: 'zh-Hant', [Languages.Italian]: 'it', [Languages.Portuguese]: 'pt-BR', [Languages.Ukrainian]: 'uk', [Languages.Japanese]: 'ja', [Languages.German]: 'de', [Languages.Swahili]: 'sw', [Languages.Korean]: 'ko' }; // These are for the language selector dropdown menu in the footer export const LangNames: { [key: string]: string } = { [Languages.English]: 'English', [Languages.Espanol]: 'Español', [Languages.Chinese]: '中文（简体字）', [Languages.ChineseTraditional]: '中文（繁體字）', [Languages.Italian]: 'Italiano', [Languages.Portuguese]: 'Português', [Languages.Ukrainian]: 'Українська', [Languages.Japanese]: '日本語', [Languages.German]: 'Deutsch', [Languages.Swahili]: 'Swahili', [Languages.Korean]: '한국어' };\n\n/* These are for formatting dates and numbers. Used with JS .toLocaleString().\n * There's an example in profile/components/Camper.js\n * List: https://github.com/unicode-cldr/cldr-dates-modern/tree/master/main\n */\nexport const LangCodes = {\n  [Languages.English]: 'en-US',\n  [Languages.Espanol]: 'es-419',\n  [Languages.Chinese]: 'zh',\n  [Languages.ChineseTraditional]: 'zh-Hant',\n  [Languages.Italian]: 'it',\n  [Languages.Portuguese]: 'pt-BR',\n  [Languages.Ukrainian]: 'uk',\n  [Languages.Japanese]: 'ja',\n  [Languages.German]: 'de',\n  [Languages.Swahili]: 'sw',\n  [Languages.Korean]: 'ko'\n};\n\n/**\n * This array contains languages that should NOT appear in the language selector.\n */\nexport const hiddenLangs = [Languages.Korean];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3808,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\i18n.ts",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "f78af3a698584b65d5028bee99d3219d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\config\\i18n.ts",
    "source_type": "git_repo",
    "title": "i18n",
    "content": "'Deutsch', [Languages.Swahili]: 'Swahili', [Languages.Korean]: '한국어' }; /* These are for formatting dates and numbers. Used with JS .toLocaleString(). * There's an example in profile/components/Camper.js * List: https://github.com/unicode-cldr/cldr-dates-modern/tree/master/main */ export const LangCodes = { [Languages.English]: 'en-US', [Languages.Espanol]: 'es-419', [Languages.Chinese]: 'zh', [Languages.ChineseTraditional]: 'zh-Hant', [Languages.Italian]: 'it', [Languages.Portuguese]: 'pt-BR', [Languages.Ukrainian]: 'uk', [Languages.Japanese]: 'ja', [Languages.German]: 'de', [Languages.Swahili]: 'sw', [Languages.Korean]: 'ko' }; /** * This array contains languages that should NOT appear in the language selector. */ export const hiddenLangs = [Languages.Korean];\n\n/**\n * This array contains languages that use the RTL layouts.\n */\nexport const rtlLangs: Languages[] = [];\n\n// locale is sourced from a JSON file, so we use getLangCode to\n// find the associated enum values\n\nexport function getLangCode(locale: PropertyKey): string {\n  if (isPropertyOf(LangCodes, locale)) return LangCodes[locale];\n  throw new Error(`${String(locale)} is not a valid locale`);\n}\n\nfunction isPropertyOf<O>(\n  obj: Record<string, string>,\n  key: PropertyKey\n): key is keyof O {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3808,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\config\\i18n.ts",
      "source_type": "git_repo"
    },
    "token_count": 342,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "d7505ffe6579ae63ad4bef7343aa2fa0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\utils\\is-audited.ts",
    "source_type": "git_repo",
    "title": "is-audited",
    "content": "import {\n  type SuperBlocks,\n  getAuditedSuperBlocks\n} from '../../shared/config/curriculum';\n\nexport function isAuditedSuperBlock(language: string, superblock: SuperBlocks) {\n  // TODO: when all the consumers of this function use TypeScript we can remove\n  // this check\n  if (!language || !superblock)\n    throw Error('Both arguments must be provided for auditing');\n\nconst auditedSuperBlocks = getAuditedSuperBlocks({\n    language\n  });\n  return auditedSuperBlocks.includes(superblock);\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 494,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\utils\\is-audited.ts",
      "source_type": "git_repo"
    },
    "token_count": 112,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "eb65519bc263a23038a31db5284c4131",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\utils\\polyvinyl.test.ts",
    "source_type": "git_repo",
    "title": "polyvinyl.test",
    "content": "import { createPoly, createSource } from './polyvinyl';\n\nconst polyData = {\n  name: 'test',\n  ext: 'js',\n  contents: 'var hello = world;',\n  history: ['test.js']\n};\n\ndescribe('createSource', () => {\n  it('should return a vinyl object with a source matching the contents', () => {\n    const original = createPoly(polyData);\n\nconst updated = createSource(original);\n    expect(original).not.toHaveProperty('source');\n    expect(updated).toHaveProperty('source', 'var hello = world;');\n    expect(updated).toMatchObject(original);\n  });\n\nit('should not update the source if it already exists', () => {\n    const original = createPoly({\n      ...polyData,\n      source: 'const hello = world;'\n    });\n\nconst updated = createSource(original);\n    expect(updated).toStrictEqual(original);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 803,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\utils\\polyvinyl.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 182,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e05262f039affe7b0473c513a9604ad3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\utils\\shuffle-array.ts",
    "source_type": "git_repo",
    "title": "shuffle-array",
    "content": "/** Shuffle array using the Fisher–Yates shuffle algorithm */\nexport const shuffleArray = <T>(arrToShuffle: Array<T>) => {\n  const arr = [...arrToShuffle];\n\nfor (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n\n// We know that i and j are within the bounds of the array, TS doesn't\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    [arr[i], arr[j]] = [arr[j]!, arr[i]!];\n  }\n\nreturn arr;\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 477,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\utils\\shuffle-array.ts",
      "source_type": "git_repo"
    },
    "token_count": 137,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c00a4a6ac0ca5a290431168a9f1d67cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\utils\\validate.test.ts",
    "source_type": "git_repo",
    "title": "validate.test",
    "content": "import {\n  isValidUsername,\n  usernameTooShort,\n  validationSuccess,\n  usernameIsHttpStatusCode,\n  invalidCharError,\n  isMicrosoftTranscriptLink\n} from './validate';\n\nfunction inRange(num: number, range: number[]) {\n  return num >= range[0] && num <= range[1];\n}\n\ndescribe('isValidUsername', () => {\n  it('rejects strings with less than 3 characters', () => {\n    expect(isValidUsername('')).toStrictEqual(usernameTooShort);\n    expect(isValidUsername('12')).toStrictEqual(usernameTooShort);\n    expect(isValidUsername('a')).toStrictEqual(usernameTooShort);\n    expect(isValidUsername('12a')).toStrictEqual(validationSuccess);\n  });\n  it('rejects strings which are http response status codes 100-599', () => {\n    expect(isValidUsername('429')).toStrictEqual(usernameIsHttpStatusCode);\n    expect(isValidUsername('789')).toStrictEqual(validationSuccess);\n  });\n  it('rejects non-ASCII characters', () => {\n    expect(isValidUsername('👀👂👄')).toStrictEqual(invalidCharError);\n  });\n  it('rejects with invalidCharError even if the string is too short', () => {\n    expect(isValidUsername('.')).toStrictEqual(invalidCharError);\n  });\n  it('accepts alphanumeric characters', () => {\n    expect(\n      isValidUsername('abcdefghijklmnopqrstuvwxyz0123456789')\n    ).toStrictEqual(validationSuccess);\n  });\n  it('accepts hyphens and underscores', () => {\n    expect(isValidUsername('a-b')).toStrictEqual(validationSuccess);\n    expect(isValidUsername('a_b')).toStrictEqual(validationSuccess);\n  });\n\nit('rejects all other ASCII characters', () => {\n    const allowedCharactersList = ['-', '_', '+'];\n    const numbers = [48, 57];\n    const upperCase = [65, 90];\n    const lowerCase = [97, 122];\n    const base = 'user';\n    const finalCode = 127;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3838,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\utils\\validate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "2002765724e0e9933e565596a9dac680",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\utils\\validate.test.ts",
    "source_type": "git_repo",
    "title": "validate.test",
    "content": "=> { expect(isValidUsername('👀👂👄')).toStrictEqual(invalidCharError); }); it('rejects with invalidCharError even if the string is too short', () => { expect(isValidUsername('.')).toStrictEqual(invalidCharError); }); it('accepts alphanumeric characters', () => { expect( isValidUsername('abcdefghijklmnopqrstuvwxyz0123456789') ).toStrictEqual(validationSuccess); }); it('accepts hyphens and underscores', () => { expect(isValidUsername('a-b')).toStrictEqual(validationSuccess); expect(isValidUsername('a_b')).toStrictEqual(validationSuccess); }); it('rejects all other ASCII characters', () => { const allowedCharactersList = ['-', '_', '+']; const numbers = [48, 57]; const upperCase = [65, 90]; const lowerCase = [97, 122]; const base = 'user'; const finalCode = 127;\n\nfor (let code = 0; code <= finalCode; code++) {\n      const char = String.fromCharCode(code);\n      let expected: { valid: boolean; error: null | string } = invalidCharError;\n      if (allowedCharactersList.includes(char)) expected = validationSuccess;\n      if (inRange(code, numbers)) expected = validationSuccess;\n      if (inRange(code, upperCase)) expected = validationSuccess;\n      if (inRange(code, lowerCase)) expected = validationSuccess;\n      expect(isValidUsername(base + char)).toStrictEqual(expected);\n    }\n  });\n});\n\nconst baseUrl = 'https://learn.microsoft.com/';\n\ndescribe('isMicrosoftTranscriptLink', () => {\n  it('should reject links to domains other than learn.microsoft.com', () => {\n    {\n      expect(isMicrosoftTranscriptLink('https://lean.microsoft.com')).toBe(\n        false\n      );\n      expect(isMicrosoftTranscriptLink('https://learn.microsft.com')).toBe(\n        false\n      );\n    }\n  });\n\nit('should reject links without a username', () => {\n    expect(isMicrosoftTranscriptLink(`${baseUrl}/en-us/users/`)).toBe(false);\n  });\n\nit('should reject links without a unique id', () => {\n    expect(\n      isMicrosoftTranscriptLink(`${baseUrl}/en-us/users/moT01/transcript`)\n    ).toBe(false);\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3838,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\utils\\validate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "1085e201c15ac21df2e38dacc69bb1ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\utils\\validate.test.ts",
    "source_type": "git_repo",
    "title": "validate.test",
    "content": "(inRange(code, numbers)) expected = validationSuccess; if (inRange(code, upperCase)) expected = validationSuccess; if (inRange(code, lowerCase)) expected = validationSuccess; expect(isValidUsername(base + char)).toStrictEqual(expected); } }); }); const baseUrl = 'https://learn.microsoft.com/'; describe('isMicrosoftTranscriptLink', () => { it('should reject links to domains other than learn.microsoft.com', () => { { expect(isMicrosoftTranscriptLink('https://lean.microsoft.com')).toBe( false ); expect(isMicrosoftTranscriptLink('https://learn.microsft.com')).toBe( false ); } }); it('should reject links without a username', () => { expect(isMicrosoftTranscriptLink(`${baseUrl}/en-us/users/`)).toBe(false); }); it('should reject links without a unique id', () => { expect( isMicrosoftTranscriptLink(`${baseUrl}/en-us/users/moT01/transcript`) ).toBe(false); });\n\nit('should reject links with anything after the unique id', () => {\n    expect(\n      isMicrosoftTranscriptLink(\n        `${baseUrl}/en-us/users/moT01/transcript/any-id/more-stuff`\n      )\n    ).toBe(false);\n  });\n\nit('should reject the placeholder link', () => {\n    expect(\n      isMicrosoftTranscriptLink(\n        'https://learn.microsoft.com/LOCALE/users/USERNAME/transcript/ID'\n      )\n    ).toBe(false);\n    expect(\n      isMicrosoftTranscriptLink(\n        'https://learn.microsoft.com/LOCALE/users/USERNAME/transcript/ID/'\n      )\n    ).toBe(false);\n  });\n\nit.each(['en-us', 'fr-fr', 'lang-country'])(\n    'should accept links with the %s locale',\n    locale => {\n      expect(\n        isMicrosoftTranscriptLink(\n          `https://learn.microsoft.com/${locale}/users/moT01/transcript/any-id`\n        )\n      ).toBe(true);\n    }\n  );\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3838,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\utils\\validate.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "836eea59e94f4dbf9202b9b3866fb80f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\utils\\polyvinyl.ts",
    "source_type": "git_repo",
    "title": "polyvinyl",
    "content": "// originally based off of https://github.com/gulpjs/vinyl\nimport invariant from 'invariant';\n\nconst exts = ['js', 'html', 'css', 'jsx', 'ts', 'py'] as const;\nexport type Ext = (typeof exts)[number];\n\nexport interface IncompleteChallengeFile {\n  fileKey: string;\n  ext: Ext;\n  name: string;\n  contents: string;\n  head?: string;\n  tail?: string;\n}\n\nexport interface ChallengeFile extends IncompleteChallengeFile {\n  editableRegionBoundaries?: number[];\n  editableContents?: string;\n  usesMultifileEditor?: boolean;\n  error?: unknown;\n  head: string;\n  tail: string;\n  seed?: string;\n  source?: string;\n  path: string;\n  history: string[];\n}\n\ntype PolyProps = {\n  name: string;\n  ext: string;\n  contents: string;\n  history?: string[];\n};\n\n// The types are a little awkward, but should suffice until we move the\n// curriculum to TypeScript.\ntype AddedProperties = {\n  path: string;\n  fileKey: string;\n  error: null;\n};\n\nexport function createPoly<Rest>({\n  name,\n  ext,\n  contents,\n  history,\n  ...rest\n}: PolyProps & Rest): PolyProps & AddedProperties & Rest {\n  invariant(typeof name === 'string', 'name must be a string but got %s', name);\n\ninvariant(typeof ext === 'string', 'ext must be a string, but was %s', ext);\n\ninvariant(\n    typeof contents === 'string',\n    'contents must be a string but got %s',\n    contents\n  );\n\nreturn {\n    ...rest,\n    history: Array.isArray(history) ? history : [name + '.' + ext],\n    name,\n    ext,\n    path: name + '.' + ext,\n    fileKey: name + ext,\n    contents,\n    error: null\n  } as PolyProps & AddedProperties & Rest;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4579,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\utils\\polyvinyl.ts",
      "source_type": "git_repo"
    },
    "token_count": 409,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "a36ec7c024485850219a015678cf2ed3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\utils\\polyvinyl.ts",
    "source_type": "git_repo",
    "title": "polyvinyl",
    "content": "name === 'string', 'name must be a string but got %s', name); invariant(typeof ext === 'string', 'ext must be a string, but was %s', ext); invariant( typeof contents === 'string', 'contents must be a string but got %s', contents ); return { ...rest, history: Array.isArray(history) ? history : [name + '.' + ext], name, ext, path: name + '.' + ext, fileKey: name + ext, contents, error: null } as PolyProps & AddedProperties & Rest; }\n\nexport function isPoly(poly: unknown): poly is ChallengeFile {\n  function hasProperties(poly: unknown): poly is Record<string, unknown> {\n    return (\n      !!poly &&\n      typeof poly === 'object' &&\n      'contents' in poly &&\n      'name' in poly &&\n      'ext' in poly &&\n      'fileKey' in poly &&\n      'head' in poly &&\n      'tail' in poly &&\n      'history' in poly\n    );\n  }\n\nconst hasCorrectTypes = (poly: Record<string, unknown>): boolean =>\n    typeof poly.contents === 'string' &&\n    typeof poly.name === 'string' &&\n    exts.includes(poly.ext as Ext) &&\n    typeof poly.fileKey === 'string' &&\n    typeof poly.head === 'string' &&\n    typeof poly.tail === 'string' &&\n    Array.isArray(poly.history);\n\nreturn hasProperties(poly) && hasCorrectTypes(poly);\n}\n\nfunction checkPoly(poly: ChallengeFile) {\n  invariant(\n    isPoly(poly),\n    'function should receive a PolyVinyl, but got %s',\n    JSON.stringify(poly)\n  );\n}\n\n// setContent will lose source if not supplied\nexport function setContent(\n  contents: string,\n  poly: ChallengeFile,\n  source?: string\n): ChallengeFile {\n  checkPoly(poly);\n  return {\n    ...poly,\n    contents,\n    source\n  };\n}\n\n// This is currently only used to add back properties that are not stored in the\n// database.\nexport function regenerateMissingProperties(file: IncompleteChallengeFile) {\n  const newPath = file.name + '.' + file.ext;\n  const newFile = {\n    ...file,\n    path: newPath,\n    history: [newPath],\n    head: file.head ?? '',\n    tail: file.tail ?? ''\n  };\n  return newFile;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4579,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\utils\\polyvinyl.ts",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "1a31e18f1396cc51df892d3db5860fae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\utils\\polyvinyl.ts",
    "source_type": "git_repo",
    "title": "polyvinyl",
    "content": "source if not supplied export function setContent( contents: string, poly: ChallengeFile, source?: string ): ChallengeFile { checkPoly(poly); return { ...poly, contents, source }; } // This is currently only used to add back properties that are not stored in the // database. export function regenerateMissingProperties(file: IncompleteChallengeFile) { const newPath = file.name + '.' + file.ext; const newFile = { ...file, path: newPath, history: [newPath], head: file.head ?? '', tail: file.tail ?? '' }; return newFile; }\n\nasync function clearHeadTail(polyP: Promise<ChallengeFile>) {\n  const poly = await polyP;\n  checkPoly(poly);\n  return {\n    ...poly,\n    head: '',\n    tail: ''\n  };\n}\n\nexport async function compileHeadTail(padding = '', poly: ChallengeFile) {\n  return clearHeadTail(\n    transformContents(\n      () => [poly.head, poly.contents, poly.tail].join(padding),\n      poly\n    )\n  );\n}\n\ntype Wrapper = (x: string) => Promise<string> | string;\n// transformContents will keep a copy of the original\n// code in the `source` property. If the original polyvinyl\n// already contains a source, this version will continue as\n// the source property\nexport async function transformContents(\n  wrap: Wrapper,\n  polyP: ChallengeFile | Promise<ChallengeFile>\n) {\n  const poly = await polyP;\n  const newPoly = setContent(await wrap(poly.contents), poly, poly.source);\n  return newPoly;\n}\n\nexport async function transformHeadTailAndContents(\n  wrap: Wrapper,\n  polyP: ChallengeFile | Promise<ChallengeFile>\n) {\n  const poly = await polyP;\n  const contents = await transformContents(wrap, poly);\n  const head = await wrap(poly.head);\n  const tail = await wrap(poly.tail);\n  return {\n    ...contents,\n    head,\n    tail\n  };\n}\n\n// createSource(poly: PolyVinyl) => PolyVinyl\nexport function createSource<Rest>(\n  poly: Pick<ChallengeFile, 'contents' | 'source'> & Rest\n): Rest & { contents: string; source: string } {\n  return {\n    ...poly,\n    source: poly.source ?? poly.contents\n  };\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4579,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\utils\\polyvinyl.ts",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "f1929f43be7c2599960cf52ff38dfae9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\utils\\validate.ts",
    "source_type": "git_repo",
    "title": "validate",
    "content": "type Valid = {\n  valid: true;\n  error: null;\n};\n\ntype Invalid = {\n  valid: false;\n  error: string;\n};\n\ntype Validated = Valid | Invalid;\n\nexport const invalidCharError: Invalid = {\n  valid: false,\n  error: 'contains invalid characters'\n};\nexport const validationSuccess: Valid = { valid: true, error: null };\nexport const usernameTooShort: Invalid = {\n  valid: false,\n  error: 'is too short'\n};\nexport const usernameIsHttpStatusCode: Invalid = {\n  valid: false,\n  error: 'is a reserved error code'\n};\n\nconst validCharsRE = /^[a-zA-Z0-9\\-_+]*$/;\nexport const isHttpStatusCode = (str: string): boolean => {\n  const output = parseInt(str, 10);\n  return !isNaN(output) && output >= 100 && output <= 599;\n};\n\nexport const isValidUsername = (str: string): Validated => {\n  if (!validCharsRE.test(str)) return invalidCharError;\n  if (str.length < 3) return usernameTooShort;\n  if (isHttpStatusCode(str)) return usernameIsHttpStatusCode;\n  return validationSuccess;\n};\n\n// link template:\n// https://learn.microsoft.com/LOCALE/users/USERNAME/transcript/ID\nexport const isMicrosoftTranscriptLink = (value: string): boolean => {\n  let url;\n  try {\n    url = new URL(value);\n  } catch {\n    return false;\n  }\n\nconst correctDomain = url.hostname === 'learn.microsoft.com';\n  const correctPath = !!url.pathname.match(\n    /^\\/[^/]+\\/users\\/[^/]+\\/transcript\\/[^/]+$/\n  );\n  const notPlaceholder = !url.pathname.match(\n    '/LOCALE/users/USERNAME/transcript/ID'\n  );\n  return correctDomain && correctPath && notPlaceholder;\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1514,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\utils\\validate.ts",
      "source_type": "git_repo"
    },
    "token_count": 389,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "da667ee57009ba1ca7b973160b29c8a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
    "source_type": "git_repo",
    "title": "algolia-five-hits",
    "content": "{\n  \"results\": [\n    {\n      \"hits\": [\n        {\n          \"title\": \"How to Scrape Wikipedia Articles with Python\",\n          \"author\": {\n            \"name\": \"Dirk Hoekstra\",\n            \"url\": \"https://www freecodecamp org/news/author/dirk/\",\n            \"profileImage\": \"https://www gravatar com/avatar/70c37f72ed7bd4bde1524f41f385ee46 s=250&d=mm&r=x\"\n          },\n          \"tags\": [\n            {\n              \"name\": \"Web Scraping\",\n              \"url\": \"https://www freecodecamp org/news/tag/web-scraping/\"\n            },\n            {\n              \"name\": \"Python\",\n              \"url\": \"https://www freecodecamp org/news/tag/python/\"\n            }\n          ],\n          \"url\": \"https://www freecodecamp org/news/scraping-wikipedia-articles-with-python/\",\n          \"featureImage\": \"https://www freecodecamp org/news/content/images/2020/08/artem-maltsev-vgQFlPq8tVQ-unsplash-1 jpg\",\n          \"publishedAt\": \"2020-08-24T17:24:24 000Z\",\n          \"publishedAtTimestamp\": 1598289864,\n          \"filterTerms\": [],\n          \"objectID\": \"5f9c9913740569d1a4ca1db1\",\n          \"_highlightResult\": {\n            \"title\": {\n              \"value\": \"How to Scrape Wikipedia __ais-highlight__Article__/ais-highlight__s with Python\",\n              \"matchLevel\": \"full\",\n              \"fullyHighlighted\": false,\n              \"matchedWords\": [\n                \"article\"\n              ]\n            }\n          }\n        },\n        {\n          \"title\": \"How to Give Feedback on a freeCodeCamp Article\",\n          \"author\": {\n            \"name\": \"freeCodeCamp org\",\n            \"url\": \"https://www freecodecamp org/news/author/freecodecamp/\",\n            \"profileImage\": \"https://www gravatar com/avatar/fcda43852608626fe46d7fd43145766e s=250&d=mm&r=x\"\n          },\n          \"tags\": [\n            {\n              \"name\": \"Community\",\n              \"url\": \"https://www freecodecamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 8456,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 10
  },
  {
    "id": "f643ea069da0ff8f4ab266e4b8a10993",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
    "source_type": "git_repo",
    "title": "algolia-five-hits",
    "content": "} ], \"url\": \"https://www freecodecamp org/news/scraping-wikipedia-articles-with-python/\", \"featureImage\": \"https://www freecodecamp org/news/content/images/2020/08/artem-maltsev-vgQFlPq8tVQ-unsplash-1 jpg\", \"publishedAt\": \"2020-08-24T17:24:24 000Z\", \"publishedAtTimestamp\": 1598289864, \"filterTerms\": [], \"objectID\": \"5f9c9913740569d1a4ca1db1\", \"_highlightResult\": { \"title\": { \"value\": \"How to Scrape Wikipedia __ais-highlight__Article__/ais-highlight__s with Python\", \"matchLevel\": \"full\", \"fullyHighlighted\": false, \"matchedWords\": [ \"article\" ] } } }, { \"title\": \"How to Give Feedback on a freeCodeCamp Article\", \"author\": { \"name\": \"freeCodeCamp org\", \"url\": \"https://www freecodecamp org/news/author/freecodecamp/\", \"profileImage\": \"https://www gravatar com/avatar/fcda43852608626fe46d7fd43145766e s=250&d=mm&r=x\" }, \"tags\": [ { \"name\": \"Community\", \"url\": \"https://www freecodecamporg/news/tag/community/\"\n            }\n          ],\n          \"url\": \"https://www freecodecamp org/news/how-to-give-feedback-on-a-freecodecamp-article/\",\n          \"featureImage\": \"https://images unsplash com/photo-1504618223053-559bdef9dd5a ixlib=rb-1 2 1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\",\n          \"publishedAt\": \"2020-04-08T17:16:00",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 8456,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 1,
    "total_chunks": 10
  },
  {
    "id": "75f33e96a89d1ec9893aa3dcb022c4e2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
    "source_type": "git_repo",
    "title": "algolia-five-hits",
    "content": "1598289864, \"filterTerms\": [], \"objectID\": \"5f9c9913740569d1a4ca1db1\", \"_highlightResult\": { \"title\": { \"value\": \"How to Scrape Wikipedia __ais-highlight__Article__/ais-highlight__s with Python\", \"matchLevel\": \"full\", \"fullyHighlighted\": false, \"matchedWords\": [ \"article\" ] } } }, { \"title\": \"How to Give Feedback on a freeCodeCamp Article\", \"author\": { \"name\": \"freeCodeCamp org\", \"url\": \"https://www freecodecamp org/news/author/freecodecamp/\", \"profileImage\": \"https://www gravatar com/avatar/fcda43852608626fe46d7fd43145766e s=250&d=mm&r=x\" }, \"tags\": [ { \"name\": \"Community\", \"url\": \"https://www freecodecamporg/news/tag/community/\" } ], \"url\": \"https://www freecodecamp org/news/how-to-give-feedback-on-a-freecodecamp-article/\", \"featureImage\": \"https://images unsplash com/photo-1504618223053-559bdef9dd5a ixlib=rb-1 2 1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\", \"publishedAt\": \"2020-04-08T17:16:00000Z\",\n          \"publishedAtTimestamp\": 1586366160,\n          \"filterTerms\": [],\n          \"objectID\": \"5f9c9bb8740569d1a4ca2d7f\",\n          \"_highlightResult\": {\n            \"title\": {\n              \"value\": \"How to Give Feedback on a freeCodeCamp __ais-highlight__Article__/ais-highlight__\",\n              \"matchLevel\": \"full\",\n              \"fullyHighlighted\": false,\n              \"matchedWords\": [\n                \"article\"\n              ]\n            }\n          }\n        },\n        {\n          \"title\": \"How To Embed Multiple Choice Quiz Questions into Your Article\",\n          \"author\": {\n            \"name\": \"Alexander Arobelidze\",\n            \"url\": \"https://www freecodecamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 8456,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 2,
    "total_chunks": 10
  },
  {
    "id": "af4e80e5bf870c6492ee523851e9561d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
    "source_type": "git_repo",
    "title": "algolia-five-hits",
    "content": "com/avatar/fcda43852608626fe46d7fd43145766e s=250&d=mm&r=x\" }, \"tags\": [ { \"name\": \"Community\", \"url\": \"https://www freecodecamporg/news/tag/community/\" } ], \"url\": \"https://www freecodecamp org/news/how-to-give-feedback-on-a-freecodecamp-article/\", \"featureImage\": \"https://images unsplash com/photo-1504618223053-559bdef9dd5a ixlib=rb-1 2 1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\", \"publishedAt\": \"2020-04-08T17:16:00000Z\", \"publishedAtTimestamp\": 1586366160, \"filterTerms\": [], \"objectID\": \"5f9c9bb8740569d1a4ca2d7f\", \"_highlightResult\": { \"title\": { \"value\": \"How to Give Feedback on a freeCodeCamp __ais-highlight__Article__/ais-highlight__\", \"matchLevel\": \"full\", \"fullyHighlighted\": false, \"matchedWords\": [ \"article\" ] } } }, { \"title\": \"How To Embed Multiple Choice Quiz Questions into Your Article\", \"author\": { \"name\": \"Alexander Arobelidze\", \"url\": \"https://www freecodecamporg/news/author/alex-arobelidze/\",\n            \"profileImage\": \"https://www freecodecamp org/news/content/images/2020/02/fcc-1 JPG\"\n          },\n          \"tags\": [\n            {\n              \"name\": \"Blog\",\n              \"url\": \"https://www freecodecamp org/news/tag/blog/\"\n            },\n            {\n              \"name\": \"Blogging\",\n              \"url\": \"https://www freecodecamp org/news/tag/blogging/\"\n            }\n          ],\n          \"url\": \"https://www freecodecamp org/news/multiple-choice-quiz-template/\",\n          \"featureImage\": \"https://images unsplash com/photo-1501504905252-473c47e087f8 ixlib=rb-1 2",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 8456,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 3,
    "total_chunks": 10
  },
  {
    "id": "d565f76f8317651bb509609bff3853f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
    "source_type": "git_repo",
    "title": "algolia-five-hits",
    "content": "{ \"value\": \"How to Give Feedback on a freeCodeCamp __ais-highlight__Article__/ais-highlight__\", \"matchLevel\": \"full\", \"fullyHighlighted\": false, \"matchedWords\": [ \"article\" ] } } }, { \"title\": \"How To Embed Multiple Choice Quiz Questions into Your Article\", \"author\": { \"name\": \"Alexander Arobelidze\", \"url\": \"https://www freecodecamporg/news/author/alex-arobelidze/\", \"profileImage\": \"https://www freecodecamp org/news/content/images/2020/02/fcc-1 JPG\" }, \"tags\": [ { \"name\": \"Blog\", \"url\": \"https://www freecodecamp org/news/tag/blog/\" }, { \"name\": \"Blogging\", \"url\": \"https://www freecodecamp org/news/tag/blogging/\" } ], \"url\": \"https://www freecodecamp org/news/multiple-choice-quiz-template/\", \"featureImage\": \"https://images unsplash com/photo-1501504905252-473c47e087f8 ixlib=rb-1 21&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\",\n          \"publishedAt\": \"2020-04-06T08:30:53 000Z\",\n          \"publishedAtTimestamp\": 1586161853,\n          \"filterTerms\": [],\n          \"objectID\": \"5f9c9bc5740569d1a4ca2dcf\",\n          \"_highlightResult\": {\n            \"title\": {\n              \"value\": \"How To Embed Multiple Choice Quiz Questions into Your __ais-highlight__Article__/ais-highlight__\",\n              \"matchLevel\": \"full\",\n              \"fullyHighlighted\": false,\n              \"matchedWords\": [\n                \"article\"\n              ]\n            }\n          }\n        },\n        {\n          \"title\": \"How to Add a Table of Contents to Your Blog Post or Article\",\n          \"author\": {\n            \"name\": \"Colby Fayock\",\n            \"url\": \"https://www freecodecamp org/news/author/colbyfayock/\",\n            \"profileImage\": \"https://www freecodecamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 8456,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 4,
    "total_chunks": 10
  },
  {
    "id": "11a0014542dc7f31cb26bae1953e3d3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
    "source_type": "git_repo",
    "title": "algolia-five-hits",
    "content": "freecodecamp org/news/tag/blogging/\" } ], \"url\": \"https://www freecodecamp org/news/multiple-choice-quiz-template/\", \"featureImage\": \"https://images unsplash com/photo-1501504905252-473c47e087f8 ixlib=rb-1 21&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ\", \"publishedAt\": \"2020-04-06T08:30:53 000Z\", \"publishedAtTimestamp\": 1586161853, \"filterTerms\": [], \"objectID\": \"5f9c9bc5740569d1a4ca2dcf\", \"_highlightResult\": { \"title\": { \"value\": \"How To Embed Multiple Choice Quiz Questions into Your __ais-highlight__Article__/ais-highlight__\", \"matchLevel\": \"full\", \"fullyHighlighted\": false, \"matchedWords\": [ \"article\" ] } } }, { \"title\": \"How to Add a Table of Contents to Your Blog Post or Article\", \"author\": { \"name\": \"Colby Fayock\", \"url\": \"https://www freecodecamp org/news/author/colbyfayock/\", \"profileImage\": \"https://www freecodecamporg/news/content/images/2020/03/star-wars-hug-yellow-cropped png\"\n          },\n          \"tags\": [\n            {\n              \"name\": \"Writing\",\n              \"url\": \"https://www freecodecamp org/news/tag/writing/\"\n            },\n            {\n              \"name\": \"Technical Writing\",\n              \"url\": \"https://www freecodecamp org/news/tag/technical-writing/\"\n            },\n            {\n              \"name\": \"Writing Tips\",\n              \"url\": \"https://www freecodecamp org/news/tag/writing-tips/\"\n            },\n            {\n              \"name\": \"Blog\",\n              \"url\": \"https://www freecodecamp org/news/tag/blog/\"\n            },\n            {\n              \"name\": \"Blogger\",\n              \"url\": \"https://www freecodecamp org/news/tag/blogger/\"\n            },\n            {\n              \"name\": \"Blogging\",\n              \"url\": \"https://www freecodecamp",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 8456,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 5,
    "total_chunks": 10
  },
  {
    "id": "abfd31dcbbb551f927219db28dcdadb3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
    "source_type": "git_repo",
    "title": "algolia-five-hits",
    "content": "to Add a Table of Contents to Your Blog Post or Article\", \"author\": { \"name\": \"Colby Fayock\", \"url\": \"https://www freecodecamp org/news/author/colbyfayock/\", \"profileImage\": \"https://www freecodecamporg/news/content/images/2020/03/star-wars-hug-yellow-cropped png\" }, \"tags\": [ { \"name\": \"Writing\", \"url\": \"https://www freecodecamp org/news/tag/writing/\" }, { \"name\": \"Technical Writing\", \"url\": \"https://www freecodecamp org/news/tag/technical-writing/\" }, { \"name\": \"Writing Tips\", \"url\": \"https://www freecodecamp org/news/tag/writing-tips/\" }, { \"name\": \"Blog\", \"url\": \"https://www freecodecamp org/news/tag/blog/\" }, { \"name\": \"Blogger\", \"url\": \"https://www freecodecamp org/news/tag/blogger/\" }, { \"name\": \"Blogging\", \"url\": \"https://www freecodecamporg/news/tag/blogging/\"\n            },\n            {\n              \"name\": \"Publishing\",\n              \"url\": \"https://www freecodecamp org/news/tag/publishing/\"\n            }\n          ],\n          \"url\": \"https://www freecodecamp org/news/how-to-add-a-table-of-contents-to-your-blog-post-or-article/\",\n          \"featureImage\": \"https://www freecodecamp org/news/content/images/2020/02/table-of-contents jpg\",\n          \"publishedAt\": \"2020-02-12T15:45:00",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 8456,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
      "source_type": "git_repo"
    },
    "token_count": 349,
    "chunk_index": 6,
    "total_chunks": 10
  },
  {
    "id": "1596bd111785fb7f8436c26d90af540a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
    "source_type": "git_repo",
    "title": "algolia-five-hits",
    "content": "\"profileImage\": \"https://www freecodecamporg/news/content/images/2020/03/star-wars-hug-yellow-cropped png\" }, \"tags\": [ { \"name\": \"Writing\", \"url\": \"https://www freecodecamp org/news/tag/writing/\" }, { \"name\": \"Technical Writing\", \"url\": \"https://www freecodecamp org/news/tag/technical-writing/\" }, { \"name\": \"Writing Tips\", \"url\": \"https://www freecodecamp org/news/tag/writing-tips/\" }, { \"name\": \"Blog\", \"url\": \"https://www freecodecamp org/news/tag/blog/\" }, { \"name\": \"Blogger\", \"url\": \"https://www freecodecamp org/news/tag/blogger/\" }, { \"name\": \"Blogging\", \"url\": \"https://www freecodecamporg/news/tag/blogging/\" }, { \"name\": \"Publishing\", \"url\": \"https://www freecodecamp org/news/tag/publishing/\" } ], \"url\": \"https://www freecodecamp org/news/how-to-add-a-table-of-contents-to-your-blog-post-or-article/\", \"featureImage\": \"https://www freecodecamp org/news/content/images/2020/02/table-of-contents jpg\", \"publishedAt\": \"2020-02-12T15:45:00000Z\",\n          \"publishedAtTimestamp\": 1581522300,\n          \"filterTerms\": [],\n          \"objectID\": \"5f9c9c9d740569d1a4ca332b\",\n          \"_highlightResult\": {\n            \"title\": {\n              \"value\": \"How to Add a Table of Contents to Your Blog Post or __ais-highlight__Article__/ais-highlight__\",\n              \"matchLevel\": \"full\",\n              \"fullyHighlighted\": false,\n              \"matchedWords\": [\n                \"article\"\n              ]\n            }\n          }\n        },\n        {\n          \"title\": \"What 500+ blog posts taught me about writing great articles\",\n          \"author\": {\n            \"name\": \"Burke Holland\",\n            \"url\": \"https://www freecodecamp org/news/author/burkeholland/\",\n            \"profileImage\": \"https://www gravatar com/avatar/59247a80fdf2632dfea43b8824e07cdb",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 8456,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 7,
    "total_chunks": 10
  },
  {
    "id": "5ca99b23f3640a18f5f338103163d78b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
    "source_type": "git_repo",
    "title": "algolia-five-hits",
    "content": "\"https://www freecodecamp org/news/tag/publishing/\" } ], \"url\": \"https://www freecodecamp org/news/how-to-add-a-table-of-contents-to-your-blog-post-or-article/\", \"featureImage\": \"https://www freecodecamp org/news/content/images/2020/02/table-of-contents jpg\", \"publishedAt\": \"2020-02-12T15:45:00000Z\", \"publishedAtTimestamp\": 1581522300, \"filterTerms\": [], \"objectID\": \"5f9c9c9d740569d1a4ca332b\", \"_highlightResult\": { \"title\": { \"value\": \"How to Add a Table of Contents to Your Blog Post or __ais-highlight__Article__/ais-highlight__\", \"matchLevel\": \"full\", \"fullyHighlighted\": false, \"matchedWords\": [ \"article\" ] } } }, { \"title\": \"What 500+ blog posts taught me about writing great articles\", \"author\": { \"name\": \"Burke Holland\", \"url\": \"https://www freecodecamp org/news/author/burkeholland/\", \"profileImage\": \"https://www gravatar com/avatar/59247a80fdf2632dfea43b8824e07cdbs=250&d=mm&r=x\"\n          },\n          \"tags\": [\n            {\n              \"name\": \"Writing\",\n              \"url\": \"https://www freecodecamp org/news/tag/writing/\"\n            },\n            {\n              \"name\": \"Technical Writing\",\n              \"url\": \"https://www freecodecamp org/news/tag/technical-writing/\"\n            },\n            {\n              \"name\": \"Blogging\",\n              \"url\": \"https://www freecodecamp org/news/tag/blogging/\"\n            }\n          ],\n          \"url\": \"https://www freecodecamp org/news/what-500-blog-posts-taught-me-about-writing-great-articles/\",\n          \"featureImage\": \"https://www freecodecamp org/news/content/images/2019/07/writing-technical-articles-banner png\",\n          \"publishedAt\": \"2019-07-31T15:00:00",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 8456,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 8,
    "total_chunks": 10
  },
  {
    "id": "eb832dbe7eca10c80e64486211318450",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
    "source_type": "git_repo",
    "title": "algolia-five-hits",
    "content": "\"matchLevel\": \"full\", \"fullyHighlighted\": false, \"matchedWords\": [ \"article\" ] } } }, { \"title\": \"What 500+ blog posts taught me about writing great articles\", \"author\": { \"name\": \"Burke Holland\", \"url\": \"https://www freecodecamp org/news/author/burkeholland/\", \"profileImage\": \"https://www gravatar com/avatar/59247a80fdf2632dfea43b8824e07cdbs=250&d=mm&r=x\" }, \"tags\": [ { \"name\": \"Writing\", \"url\": \"https://www freecodecamp org/news/tag/writing/\" }, { \"name\": \"Technical Writing\", \"url\": \"https://www freecodecamp org/news/tag/technical-writing/\" }, { \"name\": \"Blogging\", \"url\": \"https://www freecodecamp org/news/tag/blogging/\" } ], \"url\": \"https://www freecodecamp org/news/what-500-blog-posts-taught-me-about-writing-great-articles/\", \"featureImage\": \"https://www freecodecamp org/news/content/images/2019/07/writing-technical-articles-banner png\", \"publishedAt\": \"2019-07-31T15:00:00000Z\",\n          \"publishedAtTimestamp\": 1564585200,\n          \"filterTerms\": [],\n          \"objectID\": \"5f9ca121740569d1a4ca4cde\",\n          \"_highlightResult\": {\n            \"title\": {\n              \"value\": \"What 500+ blog posts taught me about writing great __ais-highlight__article__/ais-highlight__s\",\n              \"matchLevel\": \"full\",\n              \"fullyHighlighted\": false,\n              \"matchedWords\": [\n                \"article\"\n              ]\n            }\n          }\n        }\n      ],\n      \"nbHits\": 30,\n      \"page\": 0,\n      \"nbPages\": 6,\n      \"hitsPerPage\": 5,\n      \"exhaustiveNbHits\": true,\n      \"exhaustiveTypo\": true,\n      \"exhaustive\": {\n        \"nbHits\": true,\n        \"typo\": true\n      },\n      \"query\": \"article\",\n      \"params\": \"highlightPostTag=__%2Fais-highlight__&highlightPreTag=__ais-highlight__&hitsPerPage=5&query=article\",\n      \"index\": \"news\",\n      \"renderingContent\": {},\n      \"processingTimeMS\": 1,\n      \"processingTimingsMS\": {\n        \"_request\": {\n          \"roundTrip\": 90\n        }\n      }\n    }\n  ]\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 8456,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-five-hits.json",
      "source_type": "git_repo"
    },
    "token_count": 558,
    "chunk_index": 9,
    "total_chunks": 10
  },
  {
    "id": "975dcc92f3ca7542665b38e7fd66500b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-no-hits.json",
    "source_type": "git_repo",
    "title": "algolia-no-hits",
    "content": "{\n  \"results\": [\n    {\n      \"hits\": [],\n      \"nbHits\": 0,\n      \"page\": 0,\n      \"nbPages\": 0,\n      \"hitsPerPage\": 5,\n      \"exhaustiveNbHits\": true,\n      \"exhaustiveTypo\": true,\n      \"exhaustive\": {\n        \"nbHits\": true,\n        \"typo\": true\n      },\n      \"query\": \"sdefpuhsdfpiouhdsfgp\",\n      \"params\": \"highlightPostTag=__%2Fais-highlight__&highlightPreTag=__ais-highlight__&hitsPerPage=5&query=sdefpuhsdfpiouhdsfgp\",\n      \"index\": \"news\",\n      \"renderingContent\": {},\n      \"processingTimeMS\": 1,\n      \"processingTimingsMS\": {\n        \"_request\": {\n          \"roundTrip\": 94\n        },\n        \"total\": 1\n      },\n      \"serverTimeMS\": 1\n    }\n  ]\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 665,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\fixtures\\algolia-no-hits.json",
      "source_type": "git_repo"
    },
    "token_count": 215,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "55f45249c79b64fee9fa8c8d1166a049",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\fixtures\\build-a-personal-portfolio-webpage.json",
    "source_type": "git_repo",
    "title": "build-a-personal-portfolio-webpage",
    "content": "{\n  \"content\": \"<head><style>@media (max-width: 500px){nav{display: none;}}</style></head><body><nav id=\\\"navbar\\\"><a href=\\\"#projects\\\">text</a> | </nav><main><section id=\\\"welcome-section\\\"><h1>text</h1></section><hr><section id=\\\"projects\\\"><h1>Projects</h1><h2 class=\\\"project-tile\\\"><a id=\\\"profile-link\\\" target=\\\"_blank\\\" href=\\\"https://freecodecamp.org\\\">text</a></h2></section><hr></body></html>\"\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 408,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\fixtures\\build-a-personal-portfolio-webpage.json",
      "source_type": "git_repo"
    },
    "token_count": 128,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "952adba121b0e3faddccfda65c8119f5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Introduction\nBy now you should feel pretty good working with strings, arrays and hashes We'll do a couple of classic \"intro to programming\" problems here to help solidify your knowledge and get warmed up to working on small projects You'll need to rely on some of your basic knowledge of conditionals and flow control from the prep work but you shouldn't need to do anything you haven't seen before You can do these in IRB or create a separate script file to run from the command line if you know how to do that (we'll cover it in the next few sections) Note: If you want to actually write and run your own Ruby code, you can either use IRB from the command line (type irb after the prompt), or run it from a script file using $ ruby /your_file_name_in_the_current_directory rb, or use the online editor at repl it Project 1: Caesar Cipher\nFrom Wikipedia:\nIn cryptography, a Caesar cipher, also known as Caesar's cipher, the shift cipher, Caesar's code or Caesar shift, is one of the simplest and most widely known encryption techniques It is a type of substitution cipher in which each letter in the plaintext is replaced by a letter some fixed number of positions down the alphabet For example, with a left shift of 3, D would be replaced by A, E would become B, and so on The method is named after Julius Caesar, who used it in his private correspondence There's a video about it from Harvard's CS50 class Assignment\nImplement a caesar cipher that takes in a string and the shift factor and then outputs the modified string:\n~~~ruby\n> caesar_cipher(\"What a string \", 5)\n=> \"Bmfy f xywnsl \"\n~~~\n**Quick Tips:**\n* You will need to remember how to convert a string into a number * Don't forget to wrap from `z` to `a` * Don't forget to keep the same case Student Solutions\nSubmit a link below to this file on the ruby course github repo with your files in it by using a pull request See the section on Contributing for how Show Student Solutions\n* Add your solution below this line * [aaronhalstonlee's solution](https://github com/aaronhalstonlee/building_blocks)\n* [Andrew Baldwin's Solution](https://github com/andrewbaldwin44/Ceaser_Cipher/blob/master/ceasar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2218
  },
  {
    "id": "3c14e2f29a44d5eee4d71547a3dee021",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "how to convert a string into a number * Don't forget to wrap from `z` to `a` * Don't forget to keep the same case Student Solutions Submit a link below to this file on the ruby course github repo with your files in it by using a pull request See the section on Contributing for how Show Student Solutions * Add your solution below this line * [aaronhalstonlee's solution](https://github com/aaronhalstonlee/building_blocks) * [Andrew Baldwin's Solution](https://github com/andrewbaldwin44/Ceaser_Cipher/blob/master/ceasar_cipherrb)\n* [tenacious-qi's Solution](https://github com/Tenacious-Qi/ruby-building-blocks/blob/master/caesar-cipher rb)\n* [Ogunmola Israel's Solution](https://github com/Lippins/ruby_building_blocks/blob/master/caesar_cipher rb)\n* [Edd's Solution](https://github com/casualc0der/odin-ruby/blob/master/caesar-cipher rb)\n* [Alison's Solution](https://github com/chenalison/ruby_programming/blob/master/caesar-cipher rb)\n* [YesSeri's Solution](https://github com/YesSeri/caesar)\n* [pudu87's Solution](https://github com/pudu87/ruby-exercises/blob/master/caesar-cipher/caesar-cipher rb)\n* [Brandon Austin's Solution](https://github com/brandonricharda/caesar/blob/master/caesar rb)\n* [Bruno Novais's Solution](https://gist github com/novasdream/9061d0536a148b1ce77a27438c2bce19)\n* [Hector's Solution](https://github com/hectorgarcia07/caesar_cipher-odin/blob/master/caesar rb)\n* [rlmoser's Solution](https://github com/rlmoser99/ruby_exercises/blob/master/caesar_cipher rb)\n* [Callie's Solution](https://github com/callieglade/ruby_exercises/blob/master/caesar_cipher rb)\n* [Johongirr's Solution](https://github com/Johongirr/ruby_coding_challenges/blob/master/algorithmic_challenges/caesar_cipher rb)\n* [Nix-star's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 1,
    "total_chunks": 2218
  },
  {
    "id": "bb8b5108ef02cf074f5c9bbfe39e850f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "this line * [aaronhalstonlee's solution](https://github com/aaronhalstonlee/building_blocks) * [Andrew Baldwin's Solution](https://github com/andrewbaldwin44/Ceaser_Cipher/blob/master/ceasar_cipherrb) * [tenacious-qi's Solution](https://github com/Tenacious-Qi/ruby-building-blocks/blob/master/caesar-cipher rb) * [Ogunmola Israel's Solution](https://github com/Lippins/ruby_building_blocks/blob/master/caesar_cipher rb) * [Edd's Solution](https://github com/casualc0der/odin-ruby/blob/master/caesar-cipher rb) * [Alison's Solution](https://github com/chenalison/ruby_programming/blob/master/caesar-cipher rb) * [YesSeri's Solution](https://github com/YesSeri/caesar) * [pudu87's Solution](https://github com/pudu87/ruby-exercises/blob/master/caesar-cipher/caesar-cipher rb) * [Brandon Austin's Solution](https://github com/brandonricharda/caesar/blob/master/caesar rb) * [Bruno Novais's Solution](https://gist github com/novasdream/9061d0536a148b1ce77a27438c2bce19) * [Hector's Solution](https://github com/hectorgarcia07/caesar_cipher-odin/blob/master/caesar rb) * [rlmoser's Solution](https://github com/rlmoser99/ruby_exercises/blob/master/caesar_cipher rb) * [Callie's Solution](https://github com/callieglade/ruby_exercises/blob/master/caesar_cipher rb) * [Johongirr's Solution](https://github com/Johongirr/ruby_coding_challenges/blob/master/algorithmic_challenges/caesar_cipher rb) * [Nix-star's Solution](https://githubcom/nix-star/caesar/blob/master/caesar rb)\n* [el's Solution](https://github com/elxa-dal/ruby-exercises/blob/master/caeser_cypher rb)\n* [Armo's Solution](https://github com/Armoilane/ruby_exercises/)\n* [Zach's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 2,
    "total_chunks": 2218
  },
  {
    "id": "d676117f670dd350cb3611bcd35ce962",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://github com/Tenacious-Qi/ruby-building-blocks/blob/master/caesar-cipher rb) * [Ogunmola Israel's Solution](https://github com/Lippins/ruby_building_blocks/blob/master/caesar_cipher rb) * [Edd's Solution](https://github com/casualc0der/odin-ruby/blob/master/caesar-cipher rb) * [Alison's Solution](https://github com/chenalison/ruby_programming/blob/master/caesar-cipher rb) * [YesSeri's Solution](https://github com/YesSeri/caesar) * [pudu87's Solution](https://github com/pudu87/ruby-exercises/blob/master/caesar-cipher/caesar-cipher rb) * [Brandon Austin's Solution](https://github com/brandonricharda/caesar/blob/master/caesar rb) * [Bruno Novais's Solution](https://gist github com/novasdream/9061d0536a148b1ce77a27438c2bce19) * [Hector's Solution](https://github com/hectorgarcia07/caesar_cipher-odin/blob/master/caesar rb) * [rlmoser's Solution](https://github com/rlmoser99/ruby_exercises/blob/master/caesar_cipher rb) * [Callie's Solution](https://github com/callieglade/ruby_exercises/blob/master/caesar_cipher rb) * [Johongirr's Solution](https://github com/Johongirr/ruby_coding_challenges/blob/master/algorithmic_challenges/caesar_cipher rb) * [Nix-star's Solution](https://githubcom/nix-star/caesar/blob/master/caesar rb) * [el's Solution](https://github com/elxa-dal/ruby-exercises/blob/master/caeser_cypher rb) * [Armo's Solution](https://github com/Armoilane/ruby_exercises/) * [Zach's Solution](https://githubcom/ZachBaird/CaesarCipher)\n* [Jakob's Solution](https://github com/jodokusquack/Ruby-Challenges)\n* [fossegrim's Solution](https://github com/olav35/building-blocks-exercise/blob/master/caesar_cipher rb)\n* [Lucas Bide's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 2218
  },
  {
    "id": "316b731e55e4384229cdb62c86e8f031",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "rb) * [Alison's Solution](https://github com/chenalison/ruby_programming/blob/master/caesar-cipher rb) * [YesSeri's Solution](https://github com/YesSeri/caesar) * [pudu87's Solution](https://github com/pudu87/ruby-exercises/blob/master/caesar-cipher/caesar-cipher rb) * [Brandon Austin's Solution](https://github com/brandonricharda/caesar/blob/master/caesar rb) * [Bruno Novais's Solution](https://gist github com/novasdream/9061d0536a148b1ce77a27438c2bce19) * [Hector's Solution](https://github com/hectorgarcia07/caesar_cipher-odin/blob/master/caesar rb) * [rlmoser's Solution](https://github com/rlmoser99/ruby_exercises/blob/master/caesar_cipher rb) * [Callie's Solution](https://github com/callieglade/ruby_exercises/blob/master/caesar_cipher rb) * [Johongirr's Solution](https://github com/Johongirr/ruby_coding_challenges/blob/master/algorithmic_challenges/caesar_cipher rb) * [Nix-star's Solution](https://githubcom/nix-star/caesar/blob/master/caesar rb) * [el's Solution](https://github com/elxa-dal/ruby-exercises/blob/master/caeser_cypher rb) * [Armo's Solution](https://github com/Armoilane/ruby_exercises/) * [Zach's Solution](https://githubcom/ZachBaird/CaesarCipher) * [Jakob's Solution](https://github com/jodokusquack/Ruby-Challenges) * [fossegrim's Solution](https://github com/olav35/building-blocks-exercise/blob/master/caesar_cipher rb) * [Lucas Bide's Solution](https://githubcom/Lucas-Bide/caesar_cipher/blob/master/caesar_cipher rb)\n* [Andrew Huntington's Solution](https://github com/AndrewHuntington/ruby_projects/tree/master/p1_caesar_cipher)\n* [Will's Solution](https://github com/dunlapww/odin_project/blob/master/project_odin/caesar_cipher rb)\n* [Nasser Abachi's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 4,
    "total_chunks": 2218
  },
  {
    "id": "27655cc33e87f6fc84924f1a7fe3727c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Brandon Austin's Solution](https://github com/brandonricharda/caesar/blob/master/caesar rb) * [Bruno Novais's Solution](https://gist github com/novasdream/9061d0536a148b1ce77a27438c2bce19) * [Hector's Solution](https://github com/hectorgarcia07/caesar_cipher-odin/blob/master/caesar rb) * [rlmoser's Solution](https://github com/rlmoser99/ruby_exercises/blob/master/caesar_cipher rb) * [Callie's Solution](https://github com/callieglade/ruby_exercises/blob/master/caesar_cipher rb) * [Johongirr's Solution](https://github com/Johongirr/ruby_coding_challenges/blob/master/algorithmic_challenges/caesar_cipher rb) * [Nix-star's Solution](https://githubcom/nix-star/caesar/blob/master/caesar rb) * [el's Solution](https://github com/elxa-dal/ruby-exercises/blob/master/caeser_cypher rb) * [Armo's Solution](https://github com/Armoilane/ruby_exercises/) * [Zach's Solution](https://githubcom/ZachBaird/CaesarCipher) * [Jakob's Solution](https://github com/jodokusquack/Ruby-Challenges) * [fossegrim's Solution](https://github com/olav35/building-blocks-exercise/blob/master/caesar_cipher rb) * [Lucas Bide's Solution](https://githubcom/Lucas-Bide/caesar_cipher/blob/master/caesar_cipher rb) * [Andrew Huntington's Solution](https://github com/AndrewHuntington/ruby_projects/tree/master/p1_caesar_cipher) * [Will's Solution](https://github com/dunlapww/odin_project/blob/master/project_odin/caesar_cipher rb) * [Nasser Abachi's Solution](https://githubcom/abachi/theodinproject/tree/master/building-projects/caesar_cipher/)\n* [Bradley's Solution](https://github com/spaceincase/ruby_exercises/blob/master/building_blocks rb)\n* [Philipp's Solution](https://github com/philipp-mcvity/Odin Ruby building_blocks/blob/master/caesar_cipher/caesar-cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 5,
    "total_chunks": 2218
  },
  {
    "id": "85fbfe592130402ba7eccd1cff5b22ac",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "com/novasdream/9061d0536a148b1ce77a27438c2bce19) * [Hector's Solution](https://github com/hectorgarcia07/caesar_cipher-odin/blob/master/caesar rb) * [rlmoser's Solution](https://github com/rlmoser99/ruby_exercises/blob/master/caesar_cipher rb) * [Callie's Solution](https://github com/callieglade/ruby_exercises/blob/master/caesar_cipher rb) * [Johongirr's Solution](https://github com/Johongirr/ruby_coding_challenges/blob/master/algorithmic_challenges/caesar_cipher rb) * [Nix-star's Solution](https://githubcom/nix-star/caesar/blob/master/caesar rb) * [el's Solution](https://github com/elxa-dal/ruby-exercises/blob/master/caeser_cypher rb) * [Armo's Solution](https://github com/Armoilane/ruby_exercises/) * [Zach's Solution](https://githubcom/ZachBaird/CaesarCipher) * [Jakob's Solution](https://github com/jodokusquack/Ruby-Challenges) * [fossegrim's Solution](https://github com/olav35/building-blocks-exercise/blob/master/caesar_cipher rb) * [Lucas Bide's Solution](https://githubcom/Lucas-Bide/caesar_cipher/blob/master/caesar_cipher rb) * [Andrew Huntington's Solution](https://github com/AndrewHuntington/ruby_projects/tree/master/p1_caesar_cipher) * [Will's Solution](https://github com/dunlapww/odin_project/blob/master/project_odin/caesar_cipher rb) * [Nasser Abachi's Solution](https://githubcom/abachi/theodinproject/tree/master/building-projects/caesar_cipher/) * [Bradley's Solution](https://github com/spaceincase/ruby_exercises/blob/master/building_blocks rb) * [Philipp's Solution](https://github com/philipp-mcvity/Odin Ruby building_blocks/blob/master/caesar_cipher/caesar-cipherrb)\n* [Noelle's Solution](https://github com/elleon003/Caesar-Cipher)\n* [Jithin's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 6,
    "total_chunks": 2218
  },
  {
    "id": "6b393de575fe9a2e0810f2a138603c3a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[rlmoser's Solution](https://github com/rlmoser99/ruby_exercises/blob/master/caesar_cipher rb) * [Callie's Solution](https://github com/callieglade/ruby_exercises/blob/master/caesar_cipher rb) * [Johongirr's Solution](https://github com/Johongirr/ruby_coding_challenges/blob/master/algorithmic_challenges/caesar_cipher rb) * [Nix-star's Solution](https://githubcom/nix-star/caesar/blob/master/caesar rb) * [el's Solution](https://github com/elxa-dal/ruby-exercises/blob/master/caeser_cypher rb) * [Armo's Solution](https://github com/Armoilane/ruby_exercises/) * [Zach's Solution](https://githubcom/ZachBaird/CaesarCipher) * [Jakob's Solution](https://github com/jodokusquack/Ruby-Challenges) * [fossegrim's Solution](https://github com/olav35/building-blocks-exercise/blob/master/caesar_cipher rb) * [Lucas Bide's Solution](https://githubcom/Lucas-Bide/caesar_cipher/blob/master/caesar_cipher rb) * [Andrew Huntington's Solution](https://github com/AndrewHuntington/ruby_projects/tree/master/p1_caesar_cipher) * [Will's Solution](https://github com/dunlapww/odin_project/blob/master/project_odin/caesar_cipher rb) * [Nasser Abachi's Solution](https://githubcom/abachi/theodinproject/tree/master/building-projects/caesar_cipher/) * [Bradley's Solution](https://github com/spaceincase/ruby_exercises/blob/master/building_blocks rb) * [Philipp's Solution](https://github com/philipp-mcvity/Odin Ruby building_blocks/blob/master/caesar_cipher/caesar-cipherrb) * [Noelle's Solution](https://github com/elleon003/Caesar-Cipher) * [Jithin's Solution](https://githubcom/jithindasad/odin-ruby-exercise/blob/master/ceaser_shift rb)\n* [Olugbade Olalekan's Solution](https://github com/gbadesimple/caesar_cipher)\n* [Robin's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 7,
    "total_chunks": 2218
  },
  {
    "id": "e63a8c1c8e743cc701fe95fbfb9549ff",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Johongirr's Solution](https://github com/Johongirr/ruby_coding_challenges/blob/master/algorithmic_challenges/caesar_cipher rb) * [Nix-star's Solution](https://githubcom/nix-star/caesar/blob/master/caesar rb) * [el's Solution](https://github com/elxa-dal/ruby-exercises/blob/master/caeser_cypher rb) * [Armo's Solution](https://github com/Armoilane/ruby_exercises/) * [Zach's Solution](https://githubcom/ZachBaird/CaesarCipher) * [Jakob's Solution](https://github com/jodokusquack/Ruby-Challenges) * [fossegrim's Solution](https://github com/olav35/building-blocks-exercise/blob/master/caesar_cipher rb) * [Lucas Bide's Solution](https://githubcom/Lucas-Bide/caesar_cipher/blob/master/caesar_cipher rb) * [Andrew Huntington's Solution](https://github com/AndrewHuntington/ruby_projects/tree/master/p1_caesar_cipher) * [Will's Solution](https://github com/dunlapww/odin_project/blob/master/project_odin/caesar_cipher rb) * [Nasser Abachi's Solution](https://githubcom/abachi/theodinproject/tree/master/building-projects/caesar_cipher/) * [Bradley's Solution](https://github com/spaceincase/ruby_exercises/blob/master/building_blocks rb) * [Philipp's Solution](https://github com/philipp-mcvity/Odin Ruby building_blocks/blob/master/caesar_cipher/caesar-cipherrb) * [Noelle's Solution](https://github com/elleon003/Caesar-Cipher) * [Jithin's Solution](https://githubcom/jithindasad/odin-ruby-exercise/blob/master/ceaser_shift rb) * [Olugbade Olalekan's Solution](https://github com/gbadesimple/caesar_cipher) * [Robin's Solution](https://githubcom/CoolGlasses/Building_Blocks/blob/master/caesar_cipher rb)\n* [Awais Ali Khan](https://github com/awaisalikhan/ruby_programming/blob/master/caesar_cipher rb)\n* [Mike Farias' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 8,
    "total_chunks": 2218
  },
  {
    "id": "18a3f489769111fd931ebffe761f6c23",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://github com/elxa-dal/ruby-exercises/blob/master/caeser_cypher rb) * [Armo's Solution](https://github com/Armoilane/ruby_exercises/) * [Zach's Solution](https://githubcom/ZachBaird/CaesarCipher) * [Jakob's Solution](https://github com/jodokusquack/Ruby-Challenges) * [fossegrim's Solution](https://github com/olav35/building-blocks-exercise/blob/master/caesar_cipher rb) * [Lucas Bide's Solution](https://githubcom/Lucas-Bide/caesar_cipher/blob/master/caesar_cipher rb) * [Andrew Huntington's Solution](https://github com/AndrewHuntington/ruby_projects/tree/master/p1_caesar_cipher) * [Will's Solution](https://github com/dunlapww/odin_project/blob/master/project_odin/caesar_cipher rb) * [Nasser Abachi's Solution](https://githubcom/abachi/theodinproject/tree/master/building-projects/caesar_cipher/) * [Bradley's Solution](https://github com/spaceincase/ruby_exercises/blob/master/building_blocks rb) * [Philipp's Solution](https://github com/philipp-mcvity/Odin Ruby building_blocks/blob/master/caesar_cipher/caesar-cipherrb) * [Noelle's Solution](https://github com/elleon003/Caesar-Cipher) * [Jithin's Solution](https://githubcom/jithindasad/odin-ruby-exercise/blob/master/ceaser_shift rb) * [Olugbade Olalekan's Solution](https://github com/gbadesimple/caesar_cipher) * [Robin's Solution](https://githubcom/CoolGlasses/Building_Blocks/blob/master/caesar_cipher rb) * [Awais Ali Khan](https://github com/awaisalikhan/ruby_programming/blob/master/caesar_cipher rb) * [Mike Farias' Solution](https://githubcom/mkezmkez/ruby-buildingblocks/blob/master/practice1 rb arb)\n* [Sulabh Chaturvedi's Solution](https://github com/ChaturvediSulabh/the-odin-project/blob/master/Building_Blocks/project1/caeser_cipher rb)\n* [Guillaume Occuly's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 9,
    "total_chunks": 2218
  },
  {
    "id": "6f8d96adc60a8f759bba2ae579c71a3c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://github com/jodokusquack/Ruby-Challenges) * [fossegrim's Solution](https://github com/olav35/building-blocks-exercise/blob/master/caesar_cipher rb) * [Lucas Bide's Solution](https://githubcom/Lucas-Bide/caesar_cipher/blob/master/caesar_cipher rb) * [Andrew Huntington's Solution](https://github com/AndrewHuntington/ruby_projects/tree/master/p1_caesar_cipher) * [Will's Solution](https://github com/dunlapww/odin_project/blob/master/project_odin/caesar_cipher rb) * [Nasser Abachi's Solution](https://githubcom/abachi/theodinproject/tree/master/building-projects/caesar_cipher/) * [Bradley's Solution](https://github com/spaceincase/ruby_exercises/blob/master/building_blocks rb) * [Philipp's Solution](https://github com/philipp-mcvity/Odin Ruby building_blocks/blob/master/caesar_cipher/caesar-cipherrb) * [Noelle's Solution](https://github com/elleon003/Caesar-Cipher) * [Jithin's Solution](https://githubcom/jithindasad/odin-ruby-exercise/blob/master/ceaser_shift rb) * [Olugbade Olalekan's Solution](https://github com/gbadesimple/caesar_cipher) * [Robin's Solution](https://githubcom/CoolGlasses/Building_Blocks/blob/master/caesar_cipher rb) * [Awais Ali Khan](https://github com/awaisalikhan/ruby_programming/blob/master/caesar_cipher rb) * [Mike Farias' Solution](https://githubcom/mkezmkez/ruby-buildingblocks/blob/master/practice1 rb arb) * [Sulabh Chaturvedi's Solution](https://github com/ChaturvediSulabh/the-odin-project/blob/master/Building_Blocks/project1/caeser_cipher rb) * [Guillaume Occuly's Solution](https://githubcom/GuillaumeOcculy/TheOdinProject/tree/master/caesar_cipher)\n* [Run After's Solution](https://github com/run-after/caesar_cipher/blob/master/caesar_cipher rb)\n* [William Bowen's Solution](https://github com/WillWBowen/ruby_projects/blob/master/caesar_cipher/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 10,
    "total_chunks": 2218
  },
  {
    "id": "e26bd6e158fbb440c3a457524b14b359",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "rb) * [Andrew Huntington's Solution](https://github com/AndrewHuntington/ruby_projects/tree/master/p1_caesar_cipher) * [Will's Solution](https://github com/dunlapww/odin_project/blob/master/project_odin/caesar_cipher rb) * [Nasser Abachi's Solution](https://githubcom/abachi/theodinproject/tree/master/building-projects/caesar_cipher/) * [Bradley's Solution](https://github com/spaceincase/ruby_exercises/blob/master/building_blocks rb) * [Philipp's Solution](https://github com/philipp-mcvity/Odin Ruby building_blocks/blob/master/caesar_cipher/caesar-cipherrb) * [Noelle's Solution](https://github com/elleon003/Caesar-Cipher) * [Jithin's Solution](https://githubcom/jithindasad/odin-ruby-exercise/blob/master/ceaser_shift rb) * [Olugbade Olalekan's Solution](https://github com/gbadesimple/caesar_cipher) * [Robin's Solution](https://githubcom/CoolGlasses/Building_Blocks/blob/master/caesar_cipher rb) * [Awais Ali Khan](https://github com/awaisalikhan/ruby_programming/blob/master/caesar_cipher rb) * [Mike Farias' Solution](https://githubcom/mkezmkez/ruby-buildingblocks/blob/master/practice1 rb arb) * [Sulabh Chaturvedi's Solution](https://github com/ChaturvediSulabh/the-odin-project/blob/master/Building_Blocks/project1/caeser_cipher rb) * [Guillaume Occuly's Solution](https://githubcom/GuillaumeOcculy/TheOdinProject/tree/master/caesar_cipher) * [Run After's Solution](https://github com/run-after/caesar_cipher/blob/master/caesar_cipher rb) * [William Bowen's Solution](https://github com/WillWBowen/ruby_projects/blob/master/caesar_cipher/caesar_cipherrb)\n* [Michael Marchand's Solution](https://github com/MarchandMD/Odin_Project_coursework/blob/master/caeser_cipher/caeser_cipher rb)\n* [Paulo Felipe's Solution](https://github com/Pauloparakleto/caesar_cipher/blob/master/caesar_cipher_case_sensitive",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 11,
    "total_chunks": 2218
  },
  {
    "id": "259f2ded5ad7b605a835223475074e14",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Nasser Abachi's Solution](https://githubcom/abachi/theodinproject/tree/master/building-projects/caesar_cipher/) * [Bradley's Solution](https://github com/spaceincase/ruby_exercises/blob/master/building_blocks rb) * [Philipp's Solution](https://github com/philipp-mcvity/Odin Ruby building_blocks/blob/master/caesar_cipher/caesar-cipherrb) * [Noelle's Solution](https://github com/elleon003/Caesar-Cipher) * [Jithin's Solution](https://githubcom/jithindasad/odin-ruby-exercise/blob/master/ceaser_shift rb) * [Olugbade Olalekan's Solution](https://github com/gbadesimple/caesar_cipher) * [Robin's Solution](https://githubcom/CoolGlasses/Building_Blocks/blob/master/caesar_cipher rb) * [Awais Ali Khan](https://github com/awaisalikhan/ruby_programming/blob/master/caesar_cipher rb) * [Mike Farias' Solution](https://githubcom/mkezmkez/ruby-buildingblocks/blob/master/practice1 rb arb) * [Sulabh Chaturvedi's Solution](https://github com/ChaturvediSulabh/the-odin-project/blob/master/Building_Blocks/project1/caeser_cipher rb) * [Guillaume Occuly's Solution](https://githubcom/GuillaumeOcculy/TheOdinProject/tree/master/caesar_cipher) * [Run After's Solution](https://github com/run-after/caesar_cipher/blob/master/caesar_cipher rb) * [William Bowen's Solution](https://github com/WillWBowen/ruby_projects/blob/master/caesar_cipher/caesar_cipherrb) * [Michael Marchand's Solution](https://github com/MarchandMD/Odin_Project_coursework/blob/master/caeser_cipher/caeser_cipher rb) * [Paulo Felipe's Solution](https://github com/Pauloparakleto/caesar_cipher/blob/master/caesar_cipher_case_sensitiverb)\n* [Uzay-G's Solution](https://github com/Uzay-G/ruby_exercises/blob/master/caesar rb)\n* [BasicBrownie](https://github com/basicbrownie/ruby_basics)\n* [Billy Coffin's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 12,
    "total_chunks": 2218
  },
  {
    "id": "b616614b9f961cfd3d976d2f37b0ff1b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "com/philipp-mcvity/Odin Ruby building_blocks/blob/master/caesar_cipher/caesar-cipherrb) * [Noelle's Solution](https://github com/elleon003/Caesar-Cipher) * [Jithin's Solution](https://githubcom/jithindasad/odin-ruby-exercise/blob/master/ceaser_shift rb) * [Olugbade Olalekan's Solution](https://github com/gbadesimple/caesar_cipher) * [Robin's Solution](https://githubcom/CoolGlasses/Building_Blocks/blob/master/caesar_cipher rb) * [Awais Ali Khan](https://github com/awaisalikhan/ruby_programming/blob/master/caesar_cipher rb) * [Mike Farias' Solution](https://githubcom/mkezmkez/ruby-buildingblocks/blob/master/practice1 rb arb) * [Sulabh Chaturvedi's Solution](https://github com/ChaturvediSulabh/the-odin-project/blob/master/Building_Blocks/project1/caeser_cipher rb) * [Guillaume Occuly's Solution](https://githubcom/GuillaumeOcculy/TheOdinProject/tree/master/caesar_cipher) * [Run After's Solution](https://github com/run-after/caesar_cipher/blob/master/caesar_cipher rb) * [William Bowen's Solution](https://github com/WillWBowen/ruby_projects/blob/master/caesar_cipher/caesar_cipherrb) * [Michael Marchand's Solution](https://github com/MarchandMD/Odin_Project_coursework/blob/master/caeser_cipher/caeser_cipher rb) * [Paulo Felipe's Solution](https://github com/Pauloparakleto/caesar_cipher/blob/master/caesar_cipher_case_sensitiverb) * [Uzay-G's Solution](https://github com/Uzay-G/ruby_exercises/blob/master/caesar rb) * [BasicBrownie](https://github com/basicbrownie/ruby_basics) * [Billy Coffin's Solution](https://githubcom/bcoffin9/odin-ruby)\n* [Ian's Solution](https://github com/IanMKesler/practice/blob/master/caesar-cipher rb)\n* [Saranoya's Solution](https://github com/Saranoya/odin/blob/master/ruby/basics/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 13,
    "total_chunks": 2218
  },
  {
    "id": "8e3958b2d06ca93e7976f561677a8ebd",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/jithindasad/odin-ruby-exercise/blob/master/ceaser_shift rb) * [Olugbade Olalekan's Solution](https://github com/gbadesimple/caesar_cipher) * [Robin's Solution](https://githubcom/CoolGlasses/Building_Blocks/blob/master/caesar_cipher rb) * [Awais Ali Khan](https://github com/awaisalikhan/ruby_programming/blob/master/caesar_cipher rb) * [Mike Farias' Solution](https://githubcom/mkezmkez/ruby-buildingblocks/blob/master/practice1 rb arb) * [Sulabh Chaturvedi's Solution](https://github com/ChaturvediSulabh/the-odin-project/blob/master/Building_Blocks/project1/caeser_cipher rb) * [Guillaume Occuly's Solution](https://githubcom/GuillaumeOcculy/TheOdinProject/tree/master/caesar_cipher) * [Run After's Solution](https://github com/run-after/caesar_cipher/blob/master/caesar_cipher rb) * [William Bowen's Solution](https://github com/WillWBowen/ruby_projects/blob/master/caesar_cipher/caesar_cipherrb) * [Michael Marchand's Solution](https://github com/MarchandMD/Odin_Project_coursework/blob/master/caeser_cipher/caeser_cipher rb) * [Paulo Felipe's Solution](https://github com/Pauloparakleto/caesar_cipher/blob/master/caesar_cipher_case_sensitiverb) * [Uzay-G's Solution](https://github com/Uzay-G/ruby_exercises/blob/master/caesar rb) * [BasicBrownie](https://github com/basicbrownie/ruby_basics) * [Billy Coffin's Solution](https://githubcom/bcoffin9/odin-ruby) * [Ian's Solution](https://github com/IanMKesler/practice/blob/master/caesar-cipher rb) * [Saranoya's Solution](https://github com/Saranoya/odin/blob/master/ruby/basics/caesar_cipherrb)\n* [Carlos' Solution](https://github com/bycdiaz/caesar-cipher)\n* [JB's Solution](https://github com/ugSh7hbY/CaeSar_CiPher/blob/master/script",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 14,
    "total_chunks": 2218
  },
  {
    "id": "8cb60ba7cc9a7d6adac6efdd86df21aa",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Robin's Solution](https://githubcom/CoolGlasses/Building_Blocks/blob/master/caesar_cipher rb) * [Awais Ali Khan](https://github com/awaisalikhan/ruby_programming/blob/master/caesar_cipher rb) * [Mike Farias' Solution](https://githubcom/mkezmkez/ruby-buildingblocks/blob/master/practice1 rb arb) * [Sulabh Chaturvedi's Solution](https://github com/ChaturvediSulabh/the-odin-project/blob/master/Building_Blocks/project1/caeser_cipher rb) * [Guillaume Occuly's Solution](https://githubcom/GuillaumeOcculy/TheOdinProject/tree/master/caesar_cipher) * [Run After's Solution](https://github com/run-after/caesar_cipher/blob/master/caesar_cipher rb) * [William Bowen's Solution](https://github com/WillWBowen/ruby_projects/blob/master/caesar_cipher/caesar_cipherrb) * [Michael Marchand's Solution](https://github com/MarchandMD/Odin_Project_coursework/blob/master/caeser_cipher/caeser_cipher rb) * [Paulo Felipe's Solution](https://github com/Pauloparakleto/caesar_cipher/blob/master/caesar_cipher_case_sensitiverb) * [Uzay-G's Solution](https://github com/Uzay-G/ruby_exercises/blob/master/caesar rb) * [BasicBrownie](https://github com/basicbrownie/ruby_basics) * [Billy Coffin's Solution](https://githubcom/bcoffin9/odin-ruby) * [Ian's Solution](https://github com/IanMKesler/practice/blob/master/caesar-cipher rb) * [Saranoya's Solution](https://github com/Saranoya/odin/blob/master/ruby/basics/caesar_cipherrb) * [Carlos' Solution](https://github com/bycdiaz/caesar-cipher) * [JB's Solution](https://github com/ugSh7hbY/CaeSar_CiPher/blob/master/scriptrb)\n* [Nils' Solution](https://github com/matic1909/caesar_cipher/blob/master/caesar_cipher rb)\n* [mistervoga's Solution](https://github com/mistervoga/caesar-cipher)\n* [Chirs' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 15,
    "total_chunks": 2218
  },
  {
    "id": "b5b70425a2fd17fc40df767a493b6579",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/mkezmkez/ruby-buildingblocks/blob/master/practice1 rb arb) * [Sulabh Chaturvedi's Solution](https://github com/ChaturvediSulabh/the-odin-project/blob/master/Building_Blocks/project1/caeser_cipher rb) * [Guillaume Occuly's Solution](https://githubcom/GuillaumeOcculy/TheOdinProject/tree/master/caesar_cipher) * [Run After's Solution](https://github com/run-after/caesar_cipher/blob/master/caesar_cipher rb) * [William Bowen's Solution](https://github com/WillWBowen/ruby_projects/blob/master/caesar_cipher/caesar_cipherrb) * [Michael Marchand's Solution](https://github com/MarchandMD/Odin_Project_coursework/blob/master/caeser_cipher/caeser_cipher rb) * [Paulo Felipe's Solution](https://github com/Pauloparakleto/caesar_cipher/blob/master/caesar_cipher_case_sensitiverb) * [Uzay-G's Solution](https://github com/Uzay-G/ruby_exercises/blob/master/caesar rb) * [BasicBrownie](https://github com/basicbrownie/ruby_basics) * [Billy Coffin's Solution](https://githubcom/bcoffin9/odin-ruby) * [Ian's Solution](https://github com/IanMKesler/practice/blob/master/caesar-cipher rb) * [Saranoya's Solution](https://github com/Saranoya/odin/blob/master/ruby/basics/caesar_cipherrb) * [Carlos' Solution](https://github com/bycdiaz/caesar-cipher) * [JB's Solution](https://github com/ugSh7hbY/CaeSar_CiPher/blob/master/scriptrb) * [Nils' Solution](https://github com/matic1909/caesar_cipher/blob/master/caesar_cipher rb) * [mistervoga's Solution](https://github com/mistervoga/caesar-cipher) * [Chirs' Solution](https://githubcom/CSalois114/project_building_blocks/blob/master/caesar_cipher rb)\n* [Alain Suarez's Solution](https://gitlab com/asuar/ruby-building-blocks/blob/master/caesar-cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 16,
    "total_chunks": 2218
  },
  {
    "id": "9d81692cc40600d2b733e59f741972f8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://github com/ChaturvediSulabh/the-odin-project/blob/master/Building_Blocks/project1/caeser_cipher rb) * [Guillaume Occuly's Solution](https://githubcom/GuillaumeOcculy/TheOdinProject/tree/master/caesar_cipher) * [Run After's Solution](https://github com/run-after/caesar_cipher/blob/master/caesar_cipher rb) * [William Bowen's Solution](https://github com/WillWBowen/ruby_projects/blob/master/caesar_cipher/caesar_cipherrb) * [Michael Marchand's Solution](https://github com/MarchandMD/Odin_Project_coursework/blob/master/caeser_cipher/caeser_cipher rb) * [Paulo Felipe's Solution](https://github com/Pauloparakleto/caesar_cipher/blob/master/caesar_cipher_case_sensitiverb) * [Uzay-G's Solution](https://github com/Uzay-G/ruby_exercises/blob/master/caesar rb) * [BasicBrownie](https://github com/basicbrownie/ruby_basics) * [Billy Coffin's Solution](https://githubcom/bcoffin9/odin-ruby) * [Ian's Solution](https://github com/IanMKesler/practice/blob/master/caesar-cipher rb) * [Saranoya's Solution](https://github com/Saranoya/odin/blob/master/ruby/basics/caesar_cipherrb) * [Carlos' Solution](https://github com/bycdiaz/caesar-cipher) * [JB's Solution](https://github com/ugSh7hbY/CaeSar_CiPher/blob/master/scriptrb) * [Nils' Solution](https://github com/matic1909/caesar_cipher/blob/master/caesar_cipher rb) * [mistervoga's Solution](https://github com/mistervoga/caesar-cipher) * [Chirs' Solution](https://githubcom/CSalois114/project_building_blocks/blob/master/caesar_cipher rb) * [Alain Suarez's Solution](https://gitlab com/asuar/ruby-building-blocks/blob/master/caesar-cipherrb)\n* [Nicolás Nisoria's Solution](https://github com/niconisoria/project_building_blocks/blob/master/caesar_cipher rb)\n* [John-san's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 17,
    "total_chunks": 2218
  },
  {
    "id": "976c0716de46f22d4e557e1b17b2d4ba",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "After's Solution](https://github com/run-after/caesar_cipher/blob/master/caesar_cipher rb) * [William Bowen's Solution](https://github com/WillWBowen/ruby_projects/blob/master/caesar_cipher/caesar_cipherrb) * [Michael Marchand's Solution](https://github com/MarchandMD/Odin_Project_coursework/blob/master/caeser_cipher/caeser_cipher rb) * [Paulo Felipe's Solution](https://github com/Pauloparakleto/caesar_cipher/blob/master/caesar_cipher_case_sensitiverb) * [Uzay-G's Solution](https://github com/Uzay-G/ruby_exercises/blob/master/caesar rb) * [BasicBrownie](https://github com/basicbrownie/ruby_basics) * [Billy Coffin's Solution](https://githubcom/bcoffin9/odin-ruby) * [Ian's Solution](https://github com/IanMKesler/practice/blob/master/caesar-cipher rb) * [Saranoya's Solution](https://github com/Saranoya/odin/blob/master/ruby/basics/caesar_cipherrb) * [Carlos' Solution](https://github com/bycdiaz/caesar-cipher) * [JB's Solution](https://github com/ugSh7hbY/CaeSar_CiPher/blob/master/scriptrb) * [Nils' Solution](https://github com/matic1909/caesar_cipher/blob/master/caesar_cipher rb) * [mistervoga's Solution](https://github com/mistervoga/caesar-cipher) * [Chirs' Solution](https://githubcom/CSalois114/project_building_blocks/blob/master/caesar_cipher rb) * [Alain Suarez's Solution](https://gitlab com/asuar/ruby-building-blocks/blob/master/caesar-cipherrb) * [Nicolás Nisoria's Solution](https://github com/niconisoria/project_building_blocks/blob/master/caesar_cipher rb) * [John-san's Solution](https://githubcom/john-san/basic_ruby/blob/master/caesar_cipher rb)\n* [Jose Salvador's Solution](https://github com/Jsalvadorpp/Basic-Ruby-Projects/blob/master/CaesarCipher rb)\n* [Rafe Draper's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 18,
    "total_chunks": 2218
  },
  {
    "id": "aa70fda2466f4b27d74c3ed93e81ccf5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Marchand's Solution](https://github com/MarchandMD/Odin_Project_coursework/blob/master/caeser_cipher/caeser_cipher rb) * [Paulo Felipe's Solution](https://github com/Pauloparakleto/caesar_cipher/blob/master/caesar_cipher_case_sensitiverb) * [Uzay-G's Solution](https://github com/Uzay-G/ruby_exercises/blob/master/caesar rb) * [BasicBrownie](https://github com/basicbrownie/ruby_basics) * [Billy Coffin's Solution](https://githubcom/bcoffin9/odin-ruby) * [Ian's Solution](https://github com/IanMKesler/practice/blob/master/caesar-cipher rb) * [Saranoya's Solution](https://github com/Saranoya/odin/blob/master/ruby/basics/caesar_cipherrb) * [Carlos' Solution](https://github com/bycdiaz/caesar-cipher) * [JB's Solution](https://github com/ugSh7hbY/CaeSar_CiPher/blob/master/scriptrb) * [Nils' Solution](https://github com/matic1909/caesar_cipher/blob/master/caesar_cipher rb) * [mistervoga's Solution](https://github com/mistervoga/caesar-cipher) * [Chirs' Solution](https://githubcom/CSalois114/project_building_blocks/blob/master/caesar_cipher rb) * [Alain Suarez's Solution](https://gitlab com/asuar/ruby-building-blocks/blob/master/caesar-cipherrb) * [Nicolás Nisoria's Solution](https://github com/niconisoria/project_building_blocks/blob/master/caesar_cipher rb) * [John-san's Solution](https://githubcom/john-san/basic_ruby/blob/master/caesar_cipher rb) * [Jose Salvador's Solution](https://github com/Jsalvadorpp/Basic-Ruby-Projects/blob/master/CaesarCipher rb) * [Rafe Draper's Solution](https://githubcom/rafeDraper/ruby_programming/blob/master/cipher_string rb)\n* [Sarp's Solution](https://github com/sarpisik/ruby_programming/blob/master/Basic_Ruby_Projects/caesar_cipher rb)\n* [ofperfection's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 19,
    "total_chunks": 2218
  },
  {
    "id": "5b4040bdcf2166c1830b567f89a3e45d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Uzay-G's Solution](https://github com/Uzay-G/ruby_exercises/blob/master/caesar rb) * [BasicBrownie](https://github com/basicbrownie/ruby_basics) * [Billy Coffin's Solution](https://githubcom/bcoffin9/odin-ruby) * [Ian's Solution](https://github com/IanMKesler/practice/blob/master/caesar-cipher rb) * [Saranoya's Solution](https://github com/Saranoya/odin/blob/master/ruby/basics/caesar_cipherrb) * [Carlos' Solution](https://github com/bycdiaz/caesar-cipher) * [JB's Solution](https://github com/ugSh7hbY/CaeSar_CiPher/blob/master/scriptrb) * [Nils' Solution](https://github com/matic1909/caesar_cipher/blob/master/caesar_cipher rb) * [mistervoga's Solution](https://github com/mistervoga/caesar-cipher) * [Chirs' Solution](https://githubcom/CSalois114/project_building_blocks/blob/master/caesar_cipher rb) * [Alain Suarez's Solution](https://gitlab com/asuar/ruby-building-blocks/blob/master/caesar-cipherrb) * [Nicolás Nisoria's Solution](https://github com/niconisoria/project_building_blocks/blob/master/caesar_cipher rb) * [John-san's Solution](https://githubcom/john-san/basic_ruby/blob/master/caesar_cipher rb) * [Jose Salvador's Solution](https://github com/Jsalvadorpp/Basic-Ruby-Projects/blob/master/CaesarCipher rb) * [Rafe Draper's Solution](https://githubcom/rafeDraper/ruby_programming/blob/master/cipher_string rb) * [Sarp's Solution](https://github com/sarpisik/ruby_programming/blob/master/Basic_Ruby_Projects/caesar_cipher rb) * [ofperfection's Solution](https://githubcom/ofperfection/TOP_ruby_buildingblocks/blob/master/substrings_method rb)\n* [Elias White's Solution](https://github com/elias-white/theodinproject/blob/master/Ruby/caesarcipher rb)\n* [Jacob Thompson's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 20,
    "total_chunks": 2218
  },
  {
    "id": "efbc76ee4e8749278e93a45b8ebee07a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/bcoffin9/odin-ruby) * [Ian's Solution](https://github com/IanMKesler/practice/blob/master/caesar-cipher rb) * [Saranoya's Solution](https://github com/Saranoya/odin/blob/master/ruby/basics/caesar_cipherrb) * [Carlos' Solution](https://github com/bycdiaz/caesar-cipher) * [JB's Solution](https://github com/ugSh7hbY/CaeSar_CiPher/blob/master/scriptrb) * [Nils' Solution](https://github com/matic1909/caesar_cipher/blob/master/caesar_cipher rb) * [mistervoga's Solution](https://github com/mistervoga/caesar-cipher) * [Chirs' Solution](https://githubcom/CSalois114/project_building_blocks/blob/master/caesar_cipher rb) * [Alain Suarez's Solution](https://gitlab com/asuar/ruby-building-blocks/blob/master/caesar-cipherrb) * [Nicolás Nisoria's Solution](https://github com/niconisoria/project_building_blocks/blob/master/caesar_cipher rb) * [John-san's Solution](https://githubcom/john-san/basic_ruby/blob/master/caesar_cipher rb) * [Jose Salvador's Solution](https://github com/Jsalvadorpp/Basic-Ruby-Projects/blob/master/CaesarCipher rb) * [Rafe Draper's Solution](https://githubcom/rafeDraper/ruby_programming/blob/master/cipher_string rb) * [Sarp's Solution](https://github com/sarpisik/ruby_programming/blob/master/Basic_Ruby_Projects/caesar_cipher rb) * [ofperfection's Solution](https://githubcom/ofperfection/TOP_ruby_buildingblocks/blob/master/substrings_method rb) * [Elias White's Solution](https://github com/elias-white/theodinproject/blob/master/Ruby/caesarcipher rb) * [Jacob Thompson's Solution](https://githubcom/jacob-thompson/odin-project-Solutions/blob/master/building-blocks/caesar_cipher rb)\n* [Loumarven's Solution](https://github com/loumarven/top_ruby_building_blocks/blob/master/caesar_cipher rb)\n* [Arilson Souza](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 21,
    "total_chunks": 2218
  },
  {
    "id": "43bb6a9d2c861bfae431ba9ee1a6d0da",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "com/Saranoya/odin/blob/master/ruby/basics/caesar_cipherrb) * [Carlos' Solution](https://github com/bycdiaz/caesar-cipher) * [JB's Solution](https://github com/ugSh7hbY/CaeSar_CiPher/blob/master/scriptrb) * [Nils' Solution](https://github com/matic1909/caesar_cipher/blob/master/caesar_cipher rb) * [mistervoga's Solution](https://github com/mistervoga/caesar-cipher) * [Chirs' Solution](https://githubcom/CSalois114/project_building_blocks/blob/master/caesar_cipher rb) * [Alain Suarez's Solution](https://gitlab com/asuar/ruby-building-blocks/blob/master/caesar-cipherrb) * [Nicolás Nisoria's Solution](https://github com/niconisoria/project_building_blocks/blob/master/caesar_cipher rb) * [John-san's Solution](https://githubcom/john-san/basic_ruby/blob/master/caesar_cipher rb) * [Jose Salvador's Solution](https://github com/Jsalvadorpp/Basic-Ruby-Projects/blob/master/CaesarCipher rb) * [Rafe Draper's Solution](https://githubcom/rafeDraper/ruby_programming/blob/master/cipher_string rb) * [Sarp's Solution](https://github com/sarpisik/ruby_programming/blob/master/Basic_Ruby_Projects/caesar_cipher rb) * [ofperfection's Solution](https://githubcom/ofperfection/TOP_ruby_buildingblocks/blob/master/substrings_method rb) * [Elias White's Solution](https://github com/elias-white/theodinproject/blob/master/Ruby/caesarcipher rb) * [Jacob Thompson's Solution](https://githubcom/jacob-thompson/odin-project-Solutions/blob/master/building-blocks/caesar_cipher rb) * [Loumarven's Solution](https://github com/loumarven/top_ruby_building_blocks/blob/master/caesar_cipher rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb)\n* [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 22,
    "total_chunks": 2218
  },
  {
    "id": "ebac234de08f510b01e61c85f9dd8ab6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [JB's Solution](https://github com/ugSh7hbY/CaeSar_CiPher/blob/master/scriptrb) * [Nils' Solution](https://github com/matic1909/caesar_cipher/blob/master/caesar_cipher rb) * [mistervoga's Solution](https://github com/mistervoga/caesar-cipher) * [Chirs' Solution](https://githubcom/CSalois114/project_building_blocks/blob/master/caesar_cipher rb) * [Alain Suarez's Solution](https://gitlab com/asuar/ruby-building-blocks/blob/master/caesar-cipherrb) * [Nicolás Nisoria's Solution](https://github com/niconisoria/project_building_blocks/blob/master/caesar_cipher rb) * [John-san's Solution](https://githubcom/john-san/basic_ruby/blob/master/caesar_cipher rb) * [Jose Salvador's Solution](https://github com/Jsalvadorpp/Basic-Ruby-Projects/blob/master/CaesarCipher rb) * [Rafe Draper's Solution](https://githubcom/rafeDraper/ruby_programming/blob/master/cipher_string rb) * [Sarp's Solution](https://github com/sarpisik/ruby_programming/blob/master/Basic_Ruby_Projects/caesar_cipher rb) * [ofperfection's Solution](https://githubcom/ofperfection/TOP_ruby_buildingblocks/blob/master/substrings_method rb) * [Elias White's Solution](https://github com/elias-white/theodinproject/blob/master/Ruby/caesarcipher rb) * [Jacob Thompson's Solution](https://githubcom/jacob-thompson/odin-project-Solutions/blob/master/building-blocks/caesar_cipher rb) * [Loumarven's Solution](https://github com/loumarven/top_ruby_building_blocks/blob/master/caesar_cipher rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb)\n* [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 23,
    "total_chunks": 2218
  },
  {
    "id": "ddadcf009b0e514b44181fa4c87bd08d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Nils' Solution](https://github com/matic1909/caesar_cipher/blob/master/caesar_cipher rb) * [mistervoga's Solution](https://github com/mistervoga/caesar-cipher) * [Chirs' Solution](https://githubcom/CSalois114/project_building_blocks/blob/master/caesar_cipher rb) * [Alain Suarez's Solution](https://gitlab com/asuar/ruby-building-blocks/blob/master/caesar-cipherrb) * [Nicolás Nisoria's Solution](https://github com/niconisoria/project_building_blocks/blob/master/caesar_cipher rb) * [John-san's Solution](https://githubcom/john-san/basic_ruby/blob/master/caesar_cipher rb) * [Jose Salvador's Solution](https://github com/Jsalvadorpp/Basic-Ruby-Projects/blob/master/CaesarCipher rb) * [Rafe Draper's Solution](https://githubcom/rafeDraper/ruby_programming/blob/master/cipher_string rb) * [Sarp's Solution](https://github com/sarpisik/ruby_programming/blob/master/Basic_Ruby_Projects/caesar_cipher rb) * [ofperfection's Solution](https://githubcom/ofperfection/TOP_ruby_buildingblocks/blob/master/substrings_method rb) * [Elias White's Solution](https://github com/elias-white/theodinproject/blob/master/Ruby/caesarcipher rb) * [Jacob Thompson's Solution](https://githubcom/jacob-thompson/odin-project-Solutions/blob/master/building-blocks/caesar_cipher rb) * [Loumarven's Solution](https://github com/loumarven/top_ruby_building_blocks/blob/master/caesar_cipher rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb)\n* [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb)\n* [Leonardo Vega's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 24,
    "total_chunks": 2218
  },
  {
    "id": "cca4e0a231174b73425f75473a76db75",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/CSalois114/project_building_blocks/blob/master/caesar_cipher rb) * [Alain Suarez's Solution](https://gitlab com/asuar/ruby-building-blocks/blob/master/caesar-cipherrb) * [Nicolás Nisoria's Solution](https://github com/niconisoria/project_building_blocks/blob/master/caesar_cipher rb) * [John-san's Solution](https://githubcom/john-san/basic_ruby/blob/master/caesar_cipher rb) * [Jose Salvador's Solution](https://github com/Jsalvadorpp/Basic-Ruby-Projects/blob/master/CaesarCipher rb) * [Rafe Draper's Solution](https://githubcom/rafeDraper/ruby_programming/blob/master/cipher_string rb) * [Sarp's Solution](https://github com/sarpisik/ruby_programming/blob/master/Basic_Ruby_Projects/caesar_cipher rb) * [ofperfection's Solution](https://githubcom/ofperfection/TOP_ruby_buildingblocks/blob/master/substrings_method rb) * [Elias White's Solution](https://github com/elias-white/theodinproject/blob/master/Ruby/caesarcipher rb) * [Jacob Thompson's Solution](https://githubcom/jacob-thompson/odin-project-Solutions/blob/master/building-blocks/caesar_cipher rb) * [Loumarven's Solution](https://github com/loumarven/top_ruby_building_blocks/blob/master/caesar_cipher rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb)\n* [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 25,
    "total_chunks": 2218
  },
  {
    "id": "3da02572d8269fa29d7765a7ad71ebcd",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "com/asuar/ruby-building-blocks/blob/master/caesar-cipherrb) * [Nicolás Nisoria's Solution](https://github com/niconisoria/project_building_blocks/blob/master/caesar_cipher rb) * [John-san's Solution](https://githubcom/john-san/basic_ruby/blob/master/caesar_cipher rb) * [Jose Salvador's Solution](https://github com/Jsalvadorpp/Basic-Ruby-Projects/blob/master/CaesarCipher rb) * [Rafe Draper's Solution](https://githubcom/rafeDraper/ruby_programming/blob/master/cipher_string rb) * [Sarp's Solution](https://github com/sarpisik/ruby_programming/blob/master/Basic_Ruby_Projects/caesar_cipher rb) * [ofperfection's Solution](https://githubcom/ofperfection/TOP_ruby_buildingblocks/blob/master/substrings_method rb) * [Elias White's Solution](https://github com/elias-white/theodinproject/blob/master/Ruby/caesarcipher rb) * [Jacob Thompson's Solution](https://githubcom/jacob-thompson/odin-project-Solutions/blob/master/building-blocks/caesar_cipher rb) * [Loumarven's Solution](https://github com/loumarven/top_ruby_building_blocks/blob/master/caesar_cipher rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb)\n* [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-)\n* [Kevin Vuong's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 26,
    "total_chunks": 2218
  },
  {
    "id": "b67c624a8faa5b19e177f46f43833abc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "rb) * [Jose Salvador's Solution](https://github com/Jsalvadorpp/Basic-Ruby-Projects/blob/master/CaesarCipher rb) * [Rafe Draper's Solution](https://githubcom/rafeDraper/ruby_programming/blob/master/cipher_string rb) * [Sarp's Solution](https://github com/sarpisik/ruby_programming/blob/master/Basic_Ruby_Projects/caesar_cipher rb) * [ofperfection's Solution](https://githubcom/ofperfection/TOP_ruby_buildingblocks/blob/master/substrings_method rb) * [Elias White's Solution](https://github com/elias-white/theodinproject/blob/master/Ruby/caesarcipher rb) * [Jacob Thompson's Solution](https://githubcom/jacob-thompson/odin-project-Solutions/blob/master/building-blocks/caesar_cipher rb) * [Loumarven's Solution](https://github com/loumarven/top_ruby_building_blocks/blob/master/caesar_cipher rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher)\n* [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher)\n* [BShowen's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 27,
    "total_chunks": 2218
  },
  {
    "id": "63dbf22d6f2a2b5051558aca1134e299",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Rafe Draper's Solution](https://githubcom/rafeDraper/ruby_programming/blob/master/cipher_string rb) * [Sarp's Solution](https://github com/sarpisik/ruby_programming/blob/master/Basic_Ruby_Projects/caesar_cipher rb) * [ofperfection's Solution](https://githubcom/ofperfection/TOP_ruby_buildingblocks/blob/master/substrings_method rb) * [Elias White's Solution](https://github com/elias-white/theodinproject/blob/master/Ruby/caesarcipher rb) * [Jacob Thompson's Solution](https://githubcom/jacob-thompson/odin-project-Solutions/blob/master/building-blocks/caesar_cipher rb) * [Loumarven's Solution](https://github com/loumarven/top_ruby_building_blocks/blob/master/caesar_cipher rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher)\n* [Rudi Boshoff's Solution with RSpec](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 28,
    "total_chunks": 2218
  },
  {
    "id": "5f3b6860d37147e316e1cf0a2fd2b560",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://github com/sarpisik/ruby_programming/blob/master/Basic_Ruby_Projects/caesar_cipher rb) * [ofperfection's Solution](https://githubcom/ofperfection/TOP_ruby_buildingblocks/blob/master/substrings_method rb) * [Elias White's Solution](https://github com/elias-white/theodinproject/blob/master/Ruby/caesarcipher rb) * [Jacob Thompson's Solution](https://githubcom/jacob-thompson/odin-project-Solutions/blob/master/building-blocks/caesar_cipher rb) * [Loumarven's Solution](https://github com/loumarven/top_ruby_building_blocks/blob/master/caesar_cipher rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher)\n* [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 29,
    "total_chunks": 2218
  },
  {
    "id": "cf00b090d8b85803c7c216f8d7ac855d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/ofperfection/TOP_ruby_buildingblocks/blob/master/substrings_method rb) * [Elias White's Solution](https://github com/elias-white/theodinproject/blob/master/Ruby/caesarcipher rb) * [Jacob Thompson's Solution](https://githubcom/jacob-thompson/odin-project-Solutions/blob/master/building-blocks/caesar_cipher rb) * [Loumarven's Solution](https://github com/loumarven/top_ruby_building_blocks/blob/master/caesar_cipher rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb)\n* [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 30,
    "total_chunks": 2218
  },
  {
    "id": "cfe702cb56d95faf363069ff18f8fe61",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "White's Solution](https://github com/elias-white/theodinproject/blob/master/Ruby/caesarcipher rb) * [Jacob Thompson's Solution](https://githubcom/jacob-thompson/odin-project-Solutions/blob/master/building-blocks/caesar_cipher rb) * [Loumarven's Solution](https://github com/loumarven/top_ruby_building_blocks/blob/master/caesar_cipher rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb)\n* [Tommy's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 31,
    "total_chunks": 2218
  },
  {
    "id": "89964affdbaad9e976acb81ca5567bb4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "rb) * [Jacob Thompson's Solution](https://githubcom/jacob-thompson/odin-project-Solutions/blob/master/building-blocks/caesar_cipher rb) * [Loumarven's Solution](https://github com/loumarven/top_ruby_building_blocks/blob/master/caesar_cipher rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb)\n* [Akbar's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 32,
    "total_chunks": 2218
  },
  {
    "id": "9312879d35e4649702c83cda107f4a53",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/jacob-thompson/odin-project-Solutions/blob/master/building-blocks/caesar_cipher rb) * [Loumarven's Solution](https://github com/loumarven/top_ruby_building_blocks/blob/master/caesar_cipher rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 33,
    "total_chunks": 2218
  },
  {
    "id": "bcde1903280dca3c906a0840bcb6179d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/jacob-thompson/odin-project-Solutions/blob/master/building-blocks/caesar_cipher rb) * [Loumarven's Solution](https://github com/loumarven/top_ruby_building_blocks/blob/master/caesar_cipher rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb)\n* [Origier's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 517,
    "chunk_index": 34,
    "total_chunks": 2218
  },
  {
    "id": "de0f1307e372d5468162764c5a29eed3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Loumarven's Solution](https://github com/loumarven/top_ruby_building_blocks/blob/master/caesar_cipher rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/main",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 35,
    "total_chunks": 2218
  },
  {
    "id": "fc0594144d36ef83f97b6a09cf5a1592",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Loumarven's Solution](https://github com/loumarven/top_ruby_building_blocks/blob/master/caesar_cipher rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb)\n* [RunningCoder123's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 512,
    "chunk_index": 36,
    "total_chunks": 2218
  },
  {
    "id": "c7552320fd0098de8768a199298ee3ce",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 37,
    "total_chunks": 2218
  },
  {
    "id": "5fb1cf608c72f10e8b682a9b6b0147e0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "rb) * [Arilson Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb)\n* [Neeraj's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 38,
    "total_chunks": 2218
  },
  {
    "id": "55731a47b5a885994f3ad17836ccb3c0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 524,
    "chunk_index": 39,
    "total_chunks": 2218
  },
  {
    "id": "c254677d49d648a25422ca1f8b61bcac",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Souza](https://githubcom/arilsonsouza/the_odin_project/blob/ruby/ruby/project_building_blocks/caesar_cipher rb) * [Vollantre's Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb)\n* [José Porcher's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 540,
    "chunk_index": 40,
    "total_chunks": 2218
  },
  {
    "id": "57518be2b93a6ca0afc7db2d4c7699be",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 520,
    "chunk_index": 41,
    "total_chunks": 2218
  },
  {
    "id": "ba06908973453b38d691a15e56ee60bd",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://github com/vollantre/ruby_basic/blob/master/caesar_cipherrb) * [Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb)\n* [WormCrew's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 535,
    "chunk_index": 42,
    "total_chunks": 2218
  },
  {
    "id": "123c503a4715ff8890cafc9aa03c4796",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Kenneth Auwers's Solution](https://github com/R0259640/Project-Building-Blocks/blob/master/ceasar_cipherrb) * [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher)\n* [Paul Manot's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 535,
    "chunk_index": 43,
    "total_chunks": 2218
  },
  {
    "id": "899471adec5e6b8471b4f16cf3c1c936",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Jacques Hovine's Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher)\n* [Servante's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 538,
    "chunk_index": 44,
    "total_chunks": 2218
  },
  {
    "id": "b069de1d171448f48c1d1135348b6c85",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 543,
    "chunk_index": 45,
    "total_chunks": 2218
  },
  {
    "id": "12e680cc426d64438c564075f359c360",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://github com/jacqueshovine/TOP_Ruby/blob/master/caesar_cipher rb) * [Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb)\n* [Stefano Merazzi's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 560,
    "chunk_index": 46,
    "total_chunks": 2218
  },
  {
    "id": "47732e76357c3e78d155042079819740",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 552,
    "chunk_index": 47,
    "total_chunks": 2218
  },
  {
    "id": "931648f6b4472104e2149598a6e281df",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Leonardo Vega's Solution](https://githubcom/leonardovega/ruby_programming/blob/master/basic_ruby/caesar_cipher rb) * [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb)\n* [Colton Shaheen's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 569,
    "chunk_index": 48,
    "total_chunks": 2218
  },
  {
    "id": "3e1d1e0967ee29c20caa2f5afffd1ad1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 555,
    "chunk_index": 49,
    "total_chunks": 2218
  },
  {
    "id": "a2b5f2723f987173302f839e6e0f5b03",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Braxton Lemmon's Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb)\n* [Shammelow's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 570,
    "chunk_index": 50,
    "total_chunks": 2218
  },
  {
    "id": "862762db23d2e486020ff69d822ea4c0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://github com/braxtonlemmon/ruby-building-blocks/blob/master/caesarrb) * [Austin Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher)\n* [Chris Wegscheid's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 582,
    "chunk_index": 51,
    "total_chunks": 2218
  },
  {
    "id": "8a35837e8a56b150087f96b52ab7f968",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 570,
    "chunk_index": 52,
    "total_chunks": 2218
  },
  {
    "id": "c6466eac423ed155611da2f02302e428",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Fisher's Solution](https://github com/Austin2016/cipher rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb)\n* [Hummeldon's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 585,
    "chunk_index": 53,
    "total_chunks": 2218
  },
  {
    "id": "5c6c3ee724562f25039c417f4dd05cd3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 586,
    "chunk_index": 54,
    "total_chunks": 2218
  },
  {
    "id": "50dd25e05cf345906ed50bc1a7341a39",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "rb-) * [Kevin Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb)\n* [Smetanca52's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 602,
    "chunk_index": 55,
    "total_chunks": 2218
  },
  {
    "id": "5efd8af3b80b4a22f47c57020092ceed",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 612,
    "chunk_index": 56,
    "total_chunks": 2218
  },
  {
    "id": "3a0d1e3614ae1d94aae398738ac7a84f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Vuong's Solution](https://githubcom/fffear/caesar_cipher) * [Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb)\n* [Techiecheckie's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 628,
    "chunk_index": 57,
    "total_chunks": 2218
  },
  {
    "id": "a13282a08f8a81e3cd3aeb29ee0aee9b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 58,
    "total_chunks": 2218
  },
  {
    "id": "39423e489166288ab982376fd603e95e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Jay Burbyga's Solution](https://github com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb)\n* [Xadren's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 642,
    "chunk_index": 59,
    "total_chunks": 2218
  },
  {
    "id": "d8d729f8262691468a17e89fdd6621e3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 645,
    "chunk_index": 60,
    "total_chunks": 2218
  },
  {
    "id": "74d0db5cfa4c43844e6a0a90cc1d6f07",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "com/Jaybur1/TOP-ruby_programming/tree/master/01_caesar_cipher) * [BShowen's Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb)\n* [gfioravante's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 661,
    "chunk_index": 61,
    "total_chunks": 2218
  },
  {
    "id": "3cc7b23fe565ac44b45c83f6a47eff4a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 652,
    "chunk_index": 62,
    "total_chunks": 2218
  },
  {
    "id": "a12d52c31aa22b25ab7c9bd041513d27",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/BShowen/Ruby_CaesarCipher) * [Rudi Boshoff's Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb)\n* [Mohamed Elattar's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 669,
    "chunk_index": 63,
    "total_chunks": 2218
  },
  {
    "id": "a6c80c23ec9d69e901f588162474817f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 662,
    "chunk_index": 64,
    "total_chunks": 2218
  },
  {
    "id": "2bb903fa25315307819185ef502f2215",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution with RSpec](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/caesar_cipher) * [Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb)\n* [Leni Tarzwell's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 678,
    "chunk_index": 65,
    "total_chunks": 2218
  },
  {
    "id": "91778d6c5aa5c7219eb41d391334f0ff",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocks",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 669,
    "chunk_index": 66,
    "total_chunks": 2218
  },
  {
    "id": "0a2d1d3f8f8d7b8c70e0ebd1c63ba20c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Tyler Devers's Solution](https://github com/TylerDevers/OdinWebDev/blob/master/rubyProgramming/caesarCipherrb) * [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb)\n* [Ajani Stewart's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 682,
    "chunk_index": 67,
    "total_chunks": 2218
  },
  {
    "id": "6510166338901b8b7c67149c249bced4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 665,
    "chunk_index": 68,
    "total_chunks": 2218
  },
  {
    "id": "52de6ef16bab0ab7a108cd92a58fadf2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Learnsometing's Solution](https://github com/learnsometing/TOP-ruby-projects/blob/master/ruby-basics/basics-projects/caesar-cipherrb) * [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb)\n* [Ece Yenmez's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 681,
    "chunk_index": 69,
    "total_chunks": 2218
  },
  {
    "id": "2a1b398a10c44738c220e83dfca14d16",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Tommy's Solution](https://githubcom/Tommyisr/Odin_Prog_sol/blob/master/caesar_cipher/caesar rb) * [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher)\n* [Tim Dowd's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 659,
    "chunk_index": 70,
    "total_chunks": 2218
  },
  {
    "id": "64141137e4e85ef02da37037879cdb62",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 644,
    "chunk_index": 71,
    "total_chunks": 2218
  },
  {
    "id": "1ddbb296e18757745a3f3e7cbc9bb2b8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Akbar's Solution](https://githubcom/donatelloraphael/The_Odin_Project/blob/master/Ruby/caesar_cipher/caesarrb) * [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb)\n* [sametcilli's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 659,
    "chunk_index": 72,
    "total_chunks": 2218
  },
  {
    "id": "3d31e6bf2258c8e2d7e137804643c95d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 639,
    "chunk_index": 73,
    "total_chunks": 2218
  },
  {
    "id": "c8d362dadd34cb4a4a30346aa37fe972",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Origier's Solution](https://githubcom/Origier/caesar_cipher/blob/master/mainrb) * [RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb)\n* [Max Garber's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 654,
    "chunk_index": 74,
    "total_chunks": 2218
  },
  {
    "id": "38dc264fce555cb0baee67b525327ede",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 658,
    "chunk_index": 75,
    "total_chunks": 2218
  },
  {
    "id": "ee25c6f7104b6c5595c7cdf50fd003c2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[RunningCoder123's Solution](https://githubcom/RunningCoder123/building_blocks/blob/master/caesarrb) * [Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb)\n* [Malaika(Mic) Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 675,
    "chunk_index": 76,
    "total_chunks": 2218
  },
  {
    "id": "f0f7c2e3d064c85f43f3d3686c6baf58",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Neeraj's Solution](https://githubcom/neeraj33negi/OdinProjectSolutions/blob/master/caeser_cipherrb) * [José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher)\n* [jmurinello's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 671,
    "chunk_index": 77,
    "total_chunks": 2218
  },
  {
    "id": "b1ab499afc8a996bd502fe2d53c784c5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 654,
    "chunk_index": 78,
    "total_chunks": 2218
  },
  {
    "id": "6abd01da3d0beaeee05d02926b8263d7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[José Porcher's Solution](https://githubcom/jeporcher/odin-projects/blob/master/caesar-cipherrb) * [WormCrew's Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb)\n* [Ngo Van Huong's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 671,
    "chunk_index": 79,
    "total_chunks": 2218
  },
  {
    "id": "4d5218612a3681838848bf8429e780c9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 652,
    "chunk_index": 80,
    "total_chunks": 2218
  },
  {
    "id": "0e34bbb3a61aea95bc52b71e893f7e7e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/WormCrew/Caesar-cypher) * [Paul Manot's Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb)\n* [Nick Woods' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 665,
    "chunk_index": 81,
    "total_chunks": 2218
  },
  {
    "id": "f4dc7f3d7215b77c2e801bf4dc2d608c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 654,
    "chunk_index": 82,
    "total_chunks": 2218
  },
  {
    "id": "e8c49c31ffdda0e55bce3a51e3ea67ab",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/Maynot2/odin_project/tree/master/ruby_programming/basic_ruby/project_building_blocks/ceasar_cipher) * [Servante's Solution](https://githubcom/Servante/Odin-Projects/blob/master/caesar_cipherrb) * [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb)\n* [Jon Yoo's Solutions](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 668,
    "chunk_index": 83,
    "total_chunks": 2218
  },
  {
    "id": "015e1070ce1304edc820095a62612152",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Stefano Merazzi's Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises)\n* [bradabayor's Solutions](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 632,
    "chunk_index": 84,
    "total_chunks": 2218
  },
  {
    "id": "214e651be5a98a8e384e41193805eb6d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/ste001/ruby-exercises/blob/master/building_blocks/caesar_cipherrb) * [Colton Shaheen's Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems)\n* [Cary Williams's Solutions](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 646,
    "chunk_index": 85,
    "total_chunks": 2218
  },
  {
    "id": "ac1de3cd3a3b02f741f86e4cb4404349",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 633,
    "chunk_index": 86,
    "total_chunks": 2218
  },
  {
    "id": "7bada146544ec919d78d2395a7dd74e8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/coltonshaheen/caesar_cipher/blob/master/casear_cipherrb) * [Shammelow's Solution](https://githubcom/shammelow/caesar_cipher) * [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb)\n* [Henry Kirya's Solutions](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 648,
    "chunk_index": 87,
    "total_chunks": 2218
  },
  {
    "id": "b4fa18246fc10c932bd72193f41f45a1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 618,
    "chunk_index": 88,
    "total_chunks": 2218
  },
  {
    "id": "f2853841893a5908b1f686a3d36d19e0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Chris Wegscheid's Solution](https://githubcom/cwegscheid08/caesar_cipher/blob/master/caesar_cipherrb) * [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb)\n* [Ryan Ford's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 631,
    "chunk_index": 89,
    "total_chunks": 2218
  },
  {
    "id": "e356bb4fcac2d80637bb5c590128f1e9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Hummeldon's Solution](https://githubcom/hummeldon/odin-ruby-assignments/blob/master/caesar_cipherrb) * [Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher)\n* [Javier Machin's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 626,
    "chunk_index": 90,
    "total_chunks": 2218
  },
  {
    "id": "f31a1c8e67844376612c5757f2544c0b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 610,
    "chunk_index": 91,
    "total_chunks": 2218
  },
  {
    "id": "bcb478a5bcfb69901e1a887d88c014bb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Smetanca52's Solution](https://githubcom/Smetanca52/ruby_exercices/blob/master/caesar_cipherrb) * [Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb)\n* [Samuel Masters'Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 624,
    "chunk_index": 92,
    "total_chunks": 2218
  },
  {
    "id": "5184dfe808e1000b6ca0ffe1c3d06c30",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeser",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 611,
    "chunk_index": 93,
    "total_chunks": 2218
  },
  {
    "id": "6ff630b6935f6c0c9fc73dd637dda620",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Techiecheckie's Solution](https://githubcom/techiecheckie/ruby_odin_project/blob/master/caesar_cipherrb) * [Xadren's Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb)\n* [Nathan Sherburne's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 626,
    "chunk_index": 94,
    "total_chunks": 2218
  },
  {
    "id": "978a136b615d571a1f52cf362f4061b0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 607,
    "chunk_index": 95,
    "total_chunks": 2218
  },
  {
    "id": "45ce2d884195f48293858fe2240b94d8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/Xadren/odin_project/blob/master/caeser_cipherrb) * [gfioravante's Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb)\n* [Turbopro's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 621,
    "chunk_index": 96,
    "total_chunks": 2218
  },
  {
    "id": "1c0d104008983e002cffc0c5edd50c4d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 604,
    "chunk_index": 97,
    "total_chunks": 2218
  },
  {
    "id": "d343de4d47390c0603ae7060771222cf",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/gfioravantej/ruby_doodles/blob/master/caesar_cipherrb) * [Mohamed Elattar's Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb)\n* [Letícia Rodrigues' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 620,
    "chunk_index": 98,
    "total_chunks": 2218
  },
  {
    "id": "b8619767b57914c0839e77e8458fb2b6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 603,
    "chunk_index": 99,
    "total_chunks": 2218
  },
  {
    "id": "aa551d18896f3af14c774b205e61a7c8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/mohamed-elattar/building-blocks/blob/master/caesar-cipherrb) * [Leni Tarzwell's Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb)\n* [Sherman Bowling's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 618,
    "chunk_index": 100,
    "total_chunks": 2218
  },
  {
    "id": "c29ad6ce2b11a21171a5df9e4dc93ef4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 598,
    "chunk_index": 101,
    "total_chunks": 2218
  },
  {
    "id": "98843c2ce409e57c601958b4e0e09968",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/HTarzwell/odin-project/blob/master/building_blocksrb) * [Ajani Stewart's Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb)\n* [Maria Tikhonova's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 615,
    "chunk_index": 102,
    "total_chunks": 2218
  },
  {
    "id": "72d28c93f96cbe9eac2ab3cb3475ad18",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 605,
    "chunk_index": 103,
    "total_chunks": 2218
  },
  {
    "id": "329f50086d5cacc665947ad11bf47c0f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/AjaniStewart/ruby-tutorial/blob/master/caesar-cipherrb) * [Ece Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb)\n* [loudmouse's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 618,
    "chunk_index": 104,
    "total_chunks": 2218
  },
  {
    "id": "eadb37835ac50fbe4b478e98ce097756",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 601,
    "chunk_index": 105,
    "total_chunks": 2218
  },
  {
    "id": "ea6850ea0e7b1b0ada5e80c3e75e6851",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Yenmez's Solution](https://githubcom/eceyenmez/caesar_cipher) * [Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb)\n* [funwithcthulhu's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 617,
    "chunk_index": 106,
    "total_chunks": 2218
  },
  {
    "id": "df4f5ba5e8baec936d376ee65d1228c4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 614,
    "chunk_index": 107,
    "total_chunks": 2218
  },
  {
    "id": "b8008d90ca694854f7d79d92553d2bf9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Tim Dowd's Solution](https://githubcom/timothydowd/caesar_cipher/blob/master/caesar_cipherrb) * [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb)\n* [gregthepeg4's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 630,
    "chunk_index": 108,
    "total_chunks": 2218
  },
  {
    "id": "fba304455abca2cdf18f9db34a5880d9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [sametcilli's Solution](https://githubcom/sametcilli/caesar_cipher/blob/master/caesar_cipherrb) * [Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks)\n* [Dor Bar's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 622,
    "chunk_index": 109,
    "total_chunks": 2218
  },
  {
    "id": "1f54ea69afacfc6ac9a100ffa6a3b0ee",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 608,
    "chunk_index": 110,
    "total_chunks": 2218
  },
  {
    "id": "eae3dcde74b8219b415475ceb32cbc16",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Max Garber's Solution](https://githubcom/bubblebooy/miscellaneous-exercises/blob/master/Caesar%20Ciphar/lib/ruby%20caesar_cipherrb) * [Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb)\n* [Isil Donmez's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 624,
    "chunk_index": 111,
    "total_chunks": 2218
  },
  {
    "id": "1241a39b1e1160ade3c62b5431a50886",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 596,
    "chunk_index": 112,
    "total_chunks": 2218
  },
  {
    "id": "c33465d69f4d73a1f9c1ac89e03d844c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Malaika(Mic) Solution](https://githubcom/malaikaMI/Ceaser_cipher) * [jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb)\n* [rublen's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 610,
    "chunk_index": 113,
    "total_chunks": 2218
  },
  {
    "id": "d9c90f924762bdfaf277bd4f5e32c347",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 600,
    "chunk_index": 114,
    "total_chunks": 2218
  },
  {
    "id": "b5c9001b47e3b9e0575e274b6e5df854",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[jmurinello's Solution](https://githubcom/jmurinello/ruby_course/blob/master/building_blocks/caesar_cipherrb) * [Ngo Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb)\n* [Jeremy Robertson's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 613,
    "chunk_index": 115,
    "total_chunks": 2218
  },
  {
    "id": "f234b994bfc945ae973a39627a4d1692",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Van Huong's Solution](https://githubcom/ngovanhuong94/ruby-learn-projects/blob/master/caesar-cipherrb) * [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher)\n* [Qin's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 598,
    "chunk_index": 116,
    "total_chunks": 2218
  },
  {
    "id": "aa6a90890d573a5709eb98120f1643bf",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 581,
    "chunk_index": 117,
    "total_chunks": 2218
  },
  {
    "id": "b0115a7f2c201e96d443da4bbb5b3b07",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Nick Woods' Solution](https://githubcom/nawoods/ruby-projects/blob/master/caesarrb) * [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb)\n* [Omar Moataz's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 598,
    "chunk_index": 118,
    "total_chunks": 2218
  },
  {
    "id": "687bc584092309d348484987af591aec",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Jon Yoo's Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers)\n* [endotnick's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 593,
    "chunk_index": 119,
    "total_chunks": 2218
  },
  {
    "id": "bd0a6fcaa27922291768600f685d7dc7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solutions](https://githubcom/jonyoowa/ruby-exercises) * [bradabayor's Solutions](https://githubcom/bradabayor/ruby-problems) * [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers)\n* [Jonathan Yiv's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 606,
    "chunk_index": 120,
    "total_chunks": 2218
  },
  {
    "id": "05c95ae3e9810bd52657b418d7fa45c1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Cary Williams's Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher)\n* [Akshat's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 588,
    "chunk_index": 121,
    "total_chunks": 2218
  },
  {
    "id": "4d52175feec7f3192882e149aa03698a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 596,
    "chunk_index": 122,
    "total_chunks": 2218
  },
  {
    "id": "f885caa7f5c7da762cf1d5b55dfbef02",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solutions](https://githubcom/twilliams1615/ruby/blob/master/TheOdinProject/Ruby/CaesarCipherrb) * [Henry Kirya's Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb)\n* [Jason McKee's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 610,
    "chunk_index": 123,
    "total_chunks": 2218
  },
  {
    "id": "7e4c16b48b609f1002279004556823dd",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solutions](https://githubcom/harrika/odin/blob/master/caesar_cypherrb) * [Ryan Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher)\n* [jm18457's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 596,
    "chunk_index": 124,
    "total_chunks": 2218
  },
  {
    "id": "3aa4fb0f8c2512fa1f0cc2b177a82c37",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%201",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 591,
    "chunk_index": 125,
    "total_chunks": 2218
  },
  {
    "id": "9c1841ab99f189127a93fe7d721620e3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 595,
    "chunk_index": 126,
    "total_chunks": 2218
  },
  {
    "id": "bdf8f0f66a6c5b07fb3c71c917c746d0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Ford's Solution](https://githubcom/ryanford-frontend/ruby-caesar-cipher) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb)\n* [Btreim's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 610,
    "chunk_index": 127,
    "total_chunks": 2218
  },
  {
    "id": "fda6d5d3d5a9be4c704eb99d292bfab9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 601,
    "chunk_index": 128,
    "total_chunks": 2218
  },
  {
    "id": "19d9127a0c6b8cf143e76d7df6bcb572",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/caesar_cypherrb) * [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb)\n* [Andrew's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 613,
    "chunk_index": 129,
    "total_chunks": 2218
  },
  {
    "id": "be4e9c097d913aa1195946cceb29446c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Samuel Masters'Solution](https://githubcom/redeyetuning/rb_bldg_blks/blob/master/caeserrb) * [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks)\n* [ticklybanana's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 606,
    "chunk_index": 130,
    "total_chunks": 2218
  },
  {
    "id": "c7258381f8d505278417818346dc60f3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 594,
    "chunk_index": 131,
    "total_chunks": 2218
  },
  {
    "id": "9f5addf7c0e292f87b650eb8c460beb0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Nathan Sherburne's Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb)\n* [MGiagante's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 610,
    "chunk_index": 132,
    "total_chunks": 2218
  },
  {
    "id": "21cdfb35ba2341139b996965849ec0a4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/nathansherburne/ruby_practice/blob/master/caesar_cypherrb) * [Turbopro's Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks)\n* [Beachfern's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 623,
    "chunk_index": 133,
    "total_chunks": 2218
  },
  {
    "id": "bcfe2039a2db3189d17cc3bc5ab23a04",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 604,
    "chunk_index": 134,
    "total_chunks": 2218
  },
  {
    "id": "8db69433a027ff3ff430b14e52166fac",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/turbopro/CaesarCipher/blob/master/caesar_cipherrb) * [Letícia Rodrigues' Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb)\n* [Ben Deltenre's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 620,
    "chunk_index": 135,
    "total_chunks": 2218
  },
  {
    "id": "1d8c11d7064cff5f8e341b3518597408",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 605,
    "chunk_index": 136,
    "total_chunks": 2218
  },
  {
    "id": "1b7318432eae781409f44f8b141d6afe",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/letnrodrigues/building_blocks/blob/master/caesar_cipherrb) * [Sherman Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb)\n* [justinckim3's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 622,
    "chunk_index": 137,
    "total_chunks": 2218
  },
  {
    "id": "54c6344e188d83c2e58229c344d37943",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 611,
    "chunk_index": 138,
    "total_chunks": 2218
  },
  {
    "id": "958d4175adfaadd378cc08ac91491623",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Bowling's Solution](https://githubcom/janus0/ruby_building_blocks/blob/master/caesar_cipherrb) * [Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb)\n* [GuyInaLabCoat's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 629,
    "chunk_index": 139,
    "total_chunks": 2218
  },
  {
    "id": "05cc86b9bc3a4b7449a48ad1f64e7dd7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 621,
    "chunk_index": 140,
    "total_chunks": 2218
  },
  {
    "id": "32b5bdbb7cff2e5d5def0e8a9c1f553c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Maria Tikhonova's Solution](https://githubcom/MariaTikhonova/odin_ruby/blob/master/caesar/caesarrb) * [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb)\n* [Kasey Z",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 631,
    "chunk_index": 141,
    "total_chunks": 2218
  },
  {
    "id": "fca48d4bfa7ad5bb80423821ffdc0dfd",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 604,
    "chunk_index": 142,
    "total_chunks": 2218
  },
  {
    "id": "3df10cd64551455a5ae2e5567e6e9866",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 631,
    "chunk_index": 143,
    "total_chunks": 2218
  },
  {
    "id": "1b7e7df5dc871fa8c373474278b1eb7b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[loudmouse's Solution](https://githubcom/loudmouse/caesar_cipher/blob/master/caesarrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb)\n* [junkdeck's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 646,
    "chunk_index": 144,
    "total_chunks": 2218
  },
  {
    "id": "606f4016c939bf598d7e806e982e3621",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 632,
    "chunk_index": 145,
    "total_chunks": 2218
  },
  {
    "id": "d0ae03fece9a88a7a8c7e09f735d102a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/caesar_cipherrb) * [gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb)\n* [tfantina's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 646,
    "chunk_index": 146,
    "total_chunks": 2218
  },
  {
    "id": "acbb2d05eeac335d7e2365028461c863",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 630,
    "chunk_index": 147,
    "total_chunks": 2218
  },
  {
    "id": "1d94cce37790cabb10d05bfc1d5b55cd",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[gregthepeg4's Solution](https://githubcom/gregthepeg4/building_blocks) * [Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb)\n* [Demo318's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 644,
    "chunk_index": 148,
    "total_chunks": 2218
  },
  {
    "id": "44e7084a5ab190eedd28310fe0d31fbb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 636,
    "chunk_index": 149,
    "total_chunks": 2218
  },
  {
    "id": "48bc02b736bf31f0896a897bf1a0838a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Dor Bar's Solution](https://githubcom/dor4231/Ruby_Projects/blob/master/ceaser_cipherrb) * [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb)\n* [Dallaire's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 651,
    "chunk_index": 150,
    "total_chunks": 2218
  },
  {
    "id": "ba5c2f7a457fe5897d7eec35a5168f62",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 637,
    "chunk_index": 151,
    "total_chunks": 2218
  },
  {
    "id": "297565a3924fae2cd1f0395d0df13ef9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Isil Donmez's Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb)\n* [zulixro's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 653,
    "chunk_index": 152,
    "total_chunks": 2218
  },
  {
    "id": "28a937876b72a9edbac6aad756adf9df",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 661,
    "chunk_index": 153,
    "total_chunks": 2218
  },
  {
    "id": "72bf6f1f8dd548b8b6fc0ff4a92b0fab",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/isildonmez/Caesar-Cipher/blob/master/caesar_cipherrb) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb)\n* [SadieD's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 675,
    "chunk_index": 154,
    "total_chunks": 2218
  },
  {
    "id": "26e963d596e441105a7f05b88cc74ad2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeser",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 663,
    "chunk_index": 155,
    "total_chunks": 2218
  },
  {
    "id": "fe8b8116f3e0f293941b93ce77d0bacc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/rublen/The_Odin_Ruby/blob/master/caesarrb) * [Jeremy Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb)\n* [Aadesh's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 675,
    "chunk_index": 156,
    "total_chunks": 2218
  },
  {
    "id": "d6d63050985e5814296fc80ab4a61b77",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encode",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 667,
    "chunk_index": 157,
    "total_chunks": 2218
  },
  {
    "id": "a784c08d4641c4fe9affde8c7be06d68",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Robertson's Solution](https://githubcom/jdrobertso/caesar_cipher) * [Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb)\n* [Grey-Ghost's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 680,
    "chunk_index": 158,
    "total_chunks": 2218
  },
  {
    "id": "e3df733cde807f61a951ad2272eddd70",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 676,
    "chunk_index": 159,
    "total_chunks": 2218
  },
  {
    "id": "299eb5f6163daa8c1db4c6e6921e57ed",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Qin's Solution](https://githubcom/hyathynth/ruby-project/blob/master/caesar_cipherrb) * [Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb)\n* [Aaron's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 689,
    "chunk_index": 160,
    "total_chunks": 2218
  },
  {
    "id": "c8569b19d1380341d799523730b12186",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 673,
    "chunk_index": 161,
    "total_chunks": 2218
  },
  {
    "id": "25604c9f1790d36d05e892ed6594560f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Omar Moataz's Solution](https://githubcom/OmarMoataz/ciphers) * [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb)\n* [xavier Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 685,
    "chunk_index": 162,
    "total_chunks": 2218
  },
  {
    "id": "eb3a8ef1e835049a72e624a275e9d5c9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [endotnick's Solution](https://githubcom/endotnick/ciphers) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher)\n* [Webdev-burd's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 692,
    "chunk_index": 163,
    "total_chunks": 2218
  },
  {
    "id": "1f77fa4cfeb6b6fa3da1bfa8a6b29968",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-code",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 688,
    "chunk_index": 164,
    "total_chunks": 2218
  },
  {
    "id": "3fdf617ef1e8e32559e666dd36de0a82",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb)\n* [Arron's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 701,
    "chunk_index": 165,
    "total_chunks": 2218
  },
  {
    "id": "53f72ac2a53f3d61011b914696864be5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 709,
    "chunk_index": 166,
    "total_chunks": 2218
  },
  {
    "id": "e3b7018216402487a21250bba093c57e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/JonathanYiv/caesar_cipher) * [Akshat's Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb)\n* [BenBrewerBowman's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 726,
    "chunk_index": 167,
    "total_chunks": 2218
  },
  {
    "id": "d3aa8827ab0eaa28ebad40779f0e4d78",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 726,
    "chunk_index": 168,
    "total_chunks": 2218
  },
  {
    "id": "3f9db999a2417e6dc3f362d590a27f52",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/akshatdb/RubyMain/blob/master/cipherrb) * [Jason McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb)\n* [jfonz412's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 741,
    "chunk_index": 169,
    "total_chunks": 2218
  },
  {
    "id": "af91d348b6da46725437b6515d7c73cb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "McKee's Solution](https://githubcom/jttmckee/caesar_cipher) * [jm18457's Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1)\n* [Jason Epstein's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 743,
    "chunk_index": 170,
    "total_chunks": 2218
  },
  {
    "id": "382ed14b39d1aeec8d07d16642ee8bec",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 734,
    "chunk_index": 171,
    "total_chunks": 2218
  },
  {
    "id": "1ab3a3a8ff47378bc0c6060c56a92a1c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/jm18457/the-odin-project/blob/master/ruby_part_3/Project%2011/caesar_cipherrb) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb)\n* [dfan14051's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 749,
    "chunk_index": 172,
    "total_chunks": 2218
  },
  {
    "id": "01a82f3c4bbb97b144a1ebe15b309a11",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 726,
    "chunk_index": 173,
    "total_chunks": 2218
  },
  {
    "id": "53df07217c0aafa3ec201b8b18909ddb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/btreim/ruby/blob/master/ceaser-cipherrb) * [Andrew's Solution](https://githubcom/andrewr224/ruby-building-blocks) * [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb)\n* [Oleh Sliusar's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 743,
    "chunk_index": 174,
    "total_chunks": 2218
  },
  {
    "id": "00147c88bc8d14d98fa527d0d1943395",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [ticklybanana's Solution](https://githubcom/ticklybanana/The-Odin-Project-Exercises/blob/master/caesar_cipherrb) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher)\n* [Orlando's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 721,
    "chunk_index": 175,
    "total_chunks": 2218
  },
  {
    "id": "0c4df8fc2934310bb2b4dc5aa393b68b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 711,
    "chunk_index": 176,
    "total_chunks": 2218
  },
  {
    "id": "adb8e359f525df530b05afa327ed83ed",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb)\n* [RichJDSmith's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 727,
    "chunk_index": 177,
    "total_chunks": 2218
  },
  {
    "id": "1e19348ab57ce82cda4c50dff01254c8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 719,
    "chunk_index": 178,
    "total_chunks": 2218
  },
  {
    "id": "c7cd1076795ff6484341a461709de7e9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Beachfern's Solution](https://githubcom/beachfern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb)\n* [thehgall's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 734,
    "chunk_index": 179,
    "total_chunks": 2218
  },
  {
    "id": "b7fde096514fdcf6324757acc7993f40",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 713,
    "chunk_index": 180,
    "total_chunks": 2218
  },
  {
    "id": "fbe1fca15166b05497fa421b31ce3b3a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_building_blocks/blob/master/caesar_cipherrb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit)\n* [Ovsjah Schweinefresser's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 731,
    "chunk_index": 181,
    "total_chunks": 2218
  },
  {
    "id": "c2df173dbd03465654e93ceb54466ece",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 713,
    "chunk_index": 182,
    "total_chunks": 2218
  },
  {
    "id": "b61484653e655f55fa2067524a0034a7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [justinckim3's Solution](https://githubcom/justinckim3/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb)\n* [John Phelps's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 727,
    "chunk_index": 183,
    "total_chunks": 2218
  },
  {
    "id": "4376de4f90fb4e8d27a25b0b5674abd9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 711,
    "chunk_index": 184,
    "total_chunks": 2218
  },
  {
    "id": "897cea53f035c0ae59aef2a8d06ec002",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[GuyInaLabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/blob/master/caesar_cipherrb) * [Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb)\n* [Sean Friedman's](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 724,
    "chunk_index": 185,
    "total_chunks": 2218
  },
  {
    "id": "ebf7b149f86426cff2b76e0e8e5acafe",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 703,
    "chunk_index": 186,
    "total_chunks": 2218
  },
  {
    "id": "d5594e4752c1e7292cc1524ddc1e155c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Kasey Z's Solution](https://githubcom/kasey-z/TOP-Solutions/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher/caesar_cipherrb) * [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb)\n* [Jib's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 717,
    "chunk_index": 187,
    "total_chunks": 2218
  },
  {
    "id": "ddb28bbe5e23e037f3fb651ecaaf4818",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 689,
    "chunk_index": 188,
    "total_chunks": 2218
  },
  {
    "id": "6076524fe38d8d7385336dcd82ad7442",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [junkdeck's Solution](https://githubcom/junkdeck/opr/blob/master/caesarrb) * [tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb)\n* [Chad Kreutzer's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 704,
    "chunk_index": 189,
    "total_chunks": 2218
  },
  {
    "id": "cd9fc3eb5168e4104b95672bbdfccbe0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 698,
    "chunk_index": 190,
    "total_chunks": 2218
  },
  {
    "id": "b2dd047e4fef7bd3180f3cfdfa1a500f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[tfantina's Solution](https://githubcom/tfantina/Odin-Project-Ruby/blob/master/CeasarsCipherrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb)\n* [Josh Vogel's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 713,
    "chunk_index": 191,
    "total_chunks": 2218
  },
  {
    "id": "8a507734ac3c32e18f8e3d3d55931d4f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 691,
    "chunk_index": 192,
    "total_chunks": 2218
  },
  {
    "id": "bbf1db941d6dc781fa057ff7454fb366",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/Demo318/ruby_building_blocks/blob/master/01_caesar_cipherrb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/ceaser_cipherrb) * [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb)\n* [Austin Norman's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 705,
    "chunk_index": 193,
    "total_chunks": 2218
  },
  {
    "id": "1957781b2755d1519a7142872c4d060d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 669,
    "chunk_index": 194,
    "total_chunks": 2218
  },
  {
    "id": "fde7c5f690ced004f9c34e1b4475fec6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [zulixro's Solution](https://githubcom/zulixro/Caesar-Cipher-project/blob/master/cipherrb) * [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb)\n* [iamtlau's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 195,
    "total_chunks": 2218
  },
  {
    "id": "c14ef47c8e659bc6f7aaa578255637fd",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [SadieD's Solution](https://githubcom/SadieD/Ruby-Building-Blocks/blob/master/caeserrb) * [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01)\n* [ctcyu's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 682,
    "chunk_index": 196,
    "total_chunks": 2218
  },
  {
    "id": "b74024f2d46b9bd3799e43486e49cdad",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 666,
    "chunk_index": 197,
    "total_chunks": 2218
  },
  {
    "id": "34745acbeaefeb43366e8723ea9e4db3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Aadesh's Solution](https://githubcom/aadeshere1/ruby_building_block/blob/master/caesar_cipher_encoderb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb)\n* [ThusStyles's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 680,
    "chunk_index": 198,
    "total_chunks": 2218
  },
  {
    "id": "744ca71612b94d7e419e73354e31dbcc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 663,
    "chunk_index": 199,
    "total_chunks": 2218
  },
  {
    "id": "bcb3d6c74b6e135fcab6541c4568534b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/building-blocks/blob/master/caesar_cipherrb) * [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb)\n* [Sessl's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 677,
    "chunk_index": 200,
    "total_chunks": 2218
  },
  {
    "id": "c2a7febf27d12b7284dff3e1554ca9e2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 659,
    "chunk_index": 201,
    "total_chunks": 2218
  },
  {
    "id": "f6e3adf094a8eb99bdee1195dceb8d7a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Aaron's Solution](https://githubcom/adace123/Odin_Project/blob/master/caesarrb) * [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb)\n* [Eugyev's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 674,
    "chunk_index": 202,
    "total_chunks": 2218
  },
  {
    "id": "a6d16b2a87206607d05680428ea2713b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 665,
    "chunk_index": 203,
    "total_chunks": 2218
  },
  {
    "id": "99f8f79ee6696ca54f79496d5479eb91",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [xavier Solution](https://githubcom/nxdf2015/odin-building-blocks/tree/master/cipher) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb)\n* [Atharva Karandikar's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 683,
    "chunk_index": 204,
    "total_chunks": 2218
  },
  {
    "id": "1fc29982d2771071e787affec0ae527c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_picker",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 669,
    "chunk_index": 205,
    "total_chunks": 2218
  },
  {
    "id": "d7cd45cfce0be36b8d8a6297080a1e67",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/caesar-coderb) * [Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb)\n* [NoRest4AWhearry's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 686,
    "chunk_index": 206,
    "total_chunks": 2218
  },
  {
    "id": "b1bfbd8f1633a6ea285bf16d1d57a7c6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Arron's Solution](https://githubcom/man715/TOP_Caesar_Cipher/blob/master/cipherrb) * [BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher)\n* [Jamie's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 680,
    "chunk_index": 207,
    "total_chunks": 2218
  },
  {
    "id": "30500846b6a579d17d72e4938ba7ac95",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 671,
    "chunk_index": 208,
    "total_chunks": 2218
  },
  {
    "id": "2692125d19ccbf8460e5f512136a0576",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[BenBrewerBowman's Solution](https://githubcom/BenBrewerBowman/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb)\n* [Angel Vargas's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 209,
    "total_chunks": 2218
  },
  {
    "id": "5ab168742764bc87a77288f0ddd7e573",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 664,
    "chunk_index": 210,
    "total_chunks": 2218
  },
  {
    "id": "8aeb5d4b7b30bbc2849f90a8157ebef6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/jfonz412/ruby_building_blocks/tree/master/problem_1) * [Jason Epstein's Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb)\n* [Anh Le's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 679,
    "chunk_index": 211,
    "total_chunks": 2218
  },
  {
    "id": "78f3c7a4e544dd1cec422c90223f08b6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 682,
    "chunk_index": 212,
    "total_chunks": 2218
  },
  {
    "id": "1e57f32f4831f3348ef65859ac969f7b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/JasonSE89/ruby_building_blocks/blob/master/Ceaser_Cipherrb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb)\n* [Afshin M",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 692,
    "chunk_index": 213,
    "total_chunks": 2218
  },
  {
    "id": "0c7accf8ac65b7713fe2c3af705a7fc3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/dfan14051/ruby_projects/blob/master/building_blocks/caesar_cipherrb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 672,
    "chunk_index": 214,
    "total_chunks": 2218
  },
  {
    "id": "efbd5e94718c0030efd4e7f500da1e97",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocks",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 664,
    "chunk_index": 215,
    "total_chunks": 2218
  },
  {
    "id": "5d4221f2e3f64bea307e383780ecb5b6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb)\n* [brianllamar's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 678,
    "chunk_index": 216,
    "total_chunks": 2218
  },
  {
    "id": "a7dec4948513512c10e0cad3ee55669b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 688,
    "chunk_index": 217,
    "total_chunks": 2218
  },
  {
    "id": "5f619a4797e23f238e165dca8b23d733",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/OlehSliusar/caesar_cipher) * [Orlando's Solution](https://githubcom/orlandodan14/The-Odin-Project/blob/master/Caesar_Cipher/lib/CaesarCipherrb) * [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb)\n* [Alan Russell's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 701,
    "chunk_index": 218,
    "total_chunks": 2218
  },
  {
    "id": "b2fd4155aa4837e9334d10825ef64cce",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 664,
    "chunk_index": 219,
    "total_chunks": 2218
  },
  {
    "id": "8d6c6a83bcba52b36c521da30aabef70",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [RichJDSmith's Solution](https://githubcom/richjdsmith/ruby_building_blocks/blob/master/caesar_cipherrb) * [thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb)\n* [Marina Sergeyeva's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 679,
    "chunk_index": 220,
    "total_chunks": 2218
  },
  {
    "id": "027155128fe45c97f63fdd048598215c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 671,
    "chunk_index": 221,
    "total_chunks": 2218
  },
  {
    "id": "934206d88f7c029c4b47a245d91abbd3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[thehgall's Solution](https://githubcom/theghall/caesar_ciphergit) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb)\n* [Donald's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 222,
    "total_chunks": 2218
  },
  {
    "id": "a1e64c49e96c8d5062a4b18a102bd4b5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 681,
    "chunk_index": 223,
    "total_chunks": 2218
  },
  {
    "id": "604e7781c09c26b2b4340b5542478f52",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/building_blocks/blob/master/caesar_cipherrb) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb)\n* [Sahil's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 696,
    "chunk_index": 224,
    "total_chunks": 2218
  },
  {
    "id": "30924e43f55d897424dbfba6e119196b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 688,
    "chunk_index": 225,
    "total_chunks": 2218
  },
  {
    "id": "9a3b53de0eefad093df08a14d20c82f7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/building-blocks/caesar_cipherrb) * [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb)\n* [Mark W's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 701,
    "chunk_index": 226,
    "total_chunks": 2218
  },
  {
    "id": "369fdfab286fabb0b4f541d1d6b5658a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 227,
    "total_chunks": 2218
  },
  {
    "id": "c61da55af48afe9210cc9f08988316a2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Sean Friedman's](https://githubcom/seanfriedman89/building_blocs/blob/master/ceasar_cipherrb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb)\n* [Toxox's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 698,
    "chunk_index": 228,
    "total_chunks": 2218
  },
  {
    "id": "3558c0f6f635f4464fa485fccc122146",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 688,
    "chunk_index": 229,
    "total_chunks": 2218
  },
  {
    "id": "3908af991e7356d2ed37773bf31b5d0e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/caesar_cipher/caesarrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb)\n* [TomTom's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 701,
    "chunk_index": 230,
    "total_chunks": 2218
  },
  {
    "id": "ffd6631178d8e20cd10a0ed251bb28cf",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 691,
    "chunk_index": 231,
    "total_chunks": 2218
  },
  {
    "id": "93380afc27930abbc1dc73a963490875",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb)\n* [Tommy Noe's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 707,
    "chunk_index": 232,
    "total_chunks": 2218
  },
  {
    "id": "2abeda33d4b1273b8bf91dee8112d44a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 688,
    "chunk_index": 233,
    "total_chunks": 2218
  },
  {
    "id": "c29b2cf933f617d9426ff103b0ed5a25",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Josh Vogel's Solution](https://githubcom/j-vogel/ruby_learning_projects/blob/master/caesar_cipherrb) * [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb)\n* [Steve Mitchell's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 701,
    "chunk_index": 234,
    "total_chunks": 2218
  },
  {
    "id": "17b01a8f8b53699e51f7e5081fb6088c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 687,
    "chunk_index": 235,
    "total_chunks": 2218
  },
  {
    "id": "45899a1cda7275154e03dd6fecb81ef0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Austin Norman's Solution](https://githubcom/austinnormancore/ruby_basics_project/blob/master/caesar_cipherrb) * [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb)\n* [Michael Alexander's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 701,
    "chunk_index": 236,
    "total_chunks": 2218
  },
  {
    "id": "4e03a6d7d0247a4b8ad0b554586b3852",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 237,
    "total_chunks": 2218
  },
  {
    "id": "6563b568eba3fcd5eefc4a7d3609bb0e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [iamtlau's Solution](https://githubcom/iamtlau/odinproject/tree/master/ruby/project_01) * [ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb)\n* [Adrian Badarau's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 701,
    "chunk_index": 238,
    "total_chunks": 2218
  },
  {
    "id": "e7f2c5df8642fa2040181f2f55c84474",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 691,
    "chunk_index": 239,
    "total_chunks": 2218
  },
  {
    "id": "345cca411091fc3f5fffd056a7909a12",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[ctcyu's Solution](https://githubcom/ctcyu/ruby_sandbox/blob/master/caesar_cipherrb) * [ThusStyles's Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb)\n* [James MacIvor's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 707,
    "chunk_index": 240,
    "total_chunks": 2218
  },
  {
    "id": "8f5b75d70554cc0fa118023287029fb7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/ThusStyles/cipher/blob/master/cipherrb) * [Sessl's Solution](https://githubcom/Sessl/ruby_work/blob/master/cipherrb) * [Eugyev's Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter)\n* [Gabriel Matos de Souza's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 701,
    "chunk_index": 241,
    "total_chunks": 2218
  },
  {
    "id": "3ef0c3040c0a0bf12830fd1cda741649",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 671,
    "chunk_index": 242,
    "total_chunks": 2218
  },
  {
    "id": "e77938a9c9fa4dbe224ae2093f0ee1b7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/eugyev/odinprojects/blob/master/cypherrb) * [Atharva Karandikar's Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb)\n* [Maggie Baker's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 687,
    "chunk_index": 243,
    "total_chunks": 2218
  },
  {
    "id": "03eefd6966d193bea7ca2acc0b4e5672",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 673,
    "chunk_index": 244,
    "total_chunks": 2218
  },
  {
    "id": "cb36ff0770ec6c23af01ac37bf745fbf",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/AKdevelopers/stock_picker/blob/master/stock_pickerrb) * [NoRest4AWhearry's Solution](https://githubcom/NoRest4AWhearry/Caesars_Cipher) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb)\n* [Hyeunjoon Kim's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 691,
    "chunk_index": 245,
    "total_chunks": 2218
  },
  {
    "id": "0b451d0265e2a3de07cd2ef6eca27862",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 660,
    "chunk_index": 246,
    "total_chunks": 2218
  },
  {
    "id": "3304460836135581e52b78eafee9a835",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_building_blocks/project1rb) * [Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb)\n* [Aleksandar Rodić's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 678,
    "chunk_index": 247,
    "total_chunks": 2218
  },
  {
    "id": "545ec286cb0d6b9653a62835e27a3bfb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 674,
    "chunk_index": 248,
    "total_chunks": 2218
  },
  {
    "id": "80cda5eb0cea6677a748e3d2b38de5e9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Angel Vargas's Solution](https://githubcom/arioth/the-odin-project/blob/master/Ruby%20-%20Building%20Blocks/caesar_cipherrb) * [Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb)\n* [Lara Finnegan's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 689,
    "chunk_index": 249,
    "total_chunks": 2218
  },
  {
    "id": "5af7912d9d530db6a732b6b1190b9604",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 668,
    "chunk_index": 250,
    "total_chunks": 2218
  },
  {
    "id": "961ac8e2a803d2723cdc0cbad41d4dea",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Anh Le's Solution](https://githubcom/LaDilettante/studying-odin-project/blob/master/3_ruby_programming/project_building_blocks/caesar_cipherrb) * [Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb)\n* [John Quarles's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 682,
    "chunk_index": 251,
    "total_chunks": 2218
  },
  {
    "id": "e054b3f3c5563a8e00a1b82fd1956547",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 657,
    "chunk_index": 252,
    "total_chunks": 2218
  },
  {
    "id": "5e99706962cee89bd2b843b0fb8962f2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Afshin M(afshinator)'s Solution](https://githubcom/afshinator/playground/blob/master/Ruby-BuildingBlocks/building_blocksrb) * [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb)\n* [Vidul's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 671,
    "chunk_index": 253,
    "total_chunks": 2218
  },
  {
    "id": "ed67dd674e40ec4f485eaee6d32d344e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/method",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 649,
    "chunk_index": 254,
    "total_chunks": 2218
  },
  {
    "id": "9e23ac33bc0d0fae5cd38a02a971329d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [brianllamar's Solution](https://githubcom/brianllamar/odin_ruby_projects/blob/master/caesar_cypherrb) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb)\n* [Tomislav Mikulin's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 664,
    "chunk_index": 255,
    "total_chunks": 2218
  },
  {
    "id": "6824d248d5182c1a3c7c24dcddc9ce89",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 647,
    "chunk_index": 256,
    "total_chunks": 2218
  },
  {
    "id": "480bc66767ee99a806c085cb1cd7b076",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Alan Russell's Solution](https://githubcom/ajrussellaudio/ruby_odin/blob/master/caesarrb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb)\n* [Artur Janik's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 662,
    "chunk_index": 257,
    "total_chunks": 2218
  },
  {
    "id": "8de8062740a657f490b27d1f7ebd5c18",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 656,
    "chunk_index": 258,
    "total_chunks": 2218
  },
  {
    "id": "f5dc0827b28309fd9305fa10b492f69e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_1_Ruby_Basic/CaesarCipherrb) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb)\n* [Kate McFaul's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 671,
    "chunk_index": 259,
    "total_chunks": 2218
  },
  {
    "id": "fa9c22c7b8cb887ad8dde6b7fe2fa15c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 658,
    "chunk_index": 260,
    "total_chunks": 2218
  },
  {
    "id": "f2062b70e920ebc408bb9f24a98517e6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Donald's Solution](https://githubcom/donaldali/odin-ruby/blob/master/project_building_blocks/caesar_cipherrb) * [Sahil's Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb)\n* [Chris Dziewa's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 674,
    "chunk_index": 261,
    "total_chunks": 2218
  },
  {
    "id": "6c85e522d3544386915869e8bbcc6ce3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 655,
    "chunk_index": 262,
    "total_chunks": 2218
  },
  {
    "id": "a56a84bce8a27db02f290019a5c55cd4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/sahilda/the_odin_project/blob/master/ruby-building-blocks/caesar-cipher/caesar-cipherrb) * [Mark W's Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb)\n* [Dominik Stodolny's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 672,
    "chunk_index": 263,
    "total_chunks": 2218
  },
  {
    "id": "62b08ee3fd4119e19e241f3f556bd498",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 652,
    "chunk_index": 264,
    "total_chunks": 2218
  },
  {
    "id": "0139fd5c47eadc613d3db71243e1a123",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/mwestfall88/Odin-ruby-scripts/blob/master/caesar-cipherrb) * [Toxox's Solution](https://githubcom/toxox/TheOdinProject/blob/master/Project3_1_Ruby/caesarrb) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb)\n* [Andy Linteau's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 668,
    "chunk_index": 265,
    "total_chunks": 2218
  },
  {
    "id": "14094a7018cbd4195f6314a262865433",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 623,
    "chunk_index": 266,
    "total_chunks": 2218
  },
  {
    "id": "8e9b389b849a37ca6f673dfa5b94ac0c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/RubyBuildingBlocks/caesarCipherrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb)\n* [Josh Naughton's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 638,
    "chunk_index": 267,
    "total_chunks": 2218
  },
  {
    "id": "8ad800dec2c8897b87694fd28c9a1fb7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 625,
    "chunk_index": 268,
    "total_chunks": 2218
  },
  {
    "id": "1ae968d2190d77fb44bb455e7adbd074",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-projects-1/blob/master/cipherrb) * [Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb)\n* [Jason Matthews's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 639,
    "chunk_index": 269,
    "total_chunks": 2218
  },
  {
    "id": "c55407ffda1d6f371809c414c75af1ae",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 622,
    "chunk_index": 270,
    "total_chunks": 2218
  },
  {
    "id": "78dccb52c16eebed464280f5c7c1a450",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Steve Mitchell's Solution](https://githubcom/Ixpata/caesars-cipher/blob/master/caesars_cipherrb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb)\n* [Kevin Weir's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 637,
    "chunk_index": 271,
    "total_chunks": 2218
  },
  {
    "id": "b117f4eec10e6784bc9df994acac850c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 632,
    "chunk_index": 272,
    "total_chunks": 2218
  },
  {
    "id": "5e57be60b825eeb2c96437f3f58b976e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Michael Alexander's Solution](https://githubcom/betweenparentheses/ruby_building_blocks/blob/master/caesar_cipherrb) * [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb)\n* [chasmani's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 646,
    "chunk_index": 273,
    "total_chunks": 2218
  },
  {
    "id": "243f3422a0a569eabe2f7684bf9e9122",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 632,
    "chunk_index": 274,
    "total_chunks": 2218
  },
  {
    "id": "29cee054f01501a2b2a1655673cc71b4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Adrian Badarau's Solution](https://githubcom/adrianbadarau/Project-Odin-Work-Files/blob/master/caesar_cipherrb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb)\n* [Kevin Mulhern's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 648,
    "chunk_index": 275,
    "total_chunks": 2218
  },
  {
    "id": "54ab234088d7912c3e2e93b8a4818af3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 276,
    "total_chunks": 2218
  },
  {
    "id": "6499231cf12543de70b1533534ec3cbc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [James MacIvor's Solution](https://githubcom/RobotOptimist/caeser_encrypter) * [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb)\n* [Emil Johansen's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 643,
    "chunk_index": 277,
    "total_chunks": 2218
  },
  {
    "id": "45fe7b7370b838d5d80a089197dc6294",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 640,
    "chunk_index": 278,
    "total_chunks": 2218
  },
  {
    "id": "80bdd5f7c44a56200c736bfb9bf4f992",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Gabriel Matos de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb)\n* [Sasikala's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 656,
    "chunk_index": 279,
    "total_chunks": 2218
  },
  {
    "id": "660c5ebcb36dc019ca364b9725048952",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 669,
    "chunk_index": 280,
    "total_chunks": 2218
  },
  {
    "id": "a53cbab7a233346ea7b098c0ab2bc015",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "de Souza's Solution](https://githubcom/gabrielms/exerciciosRoR/blob/master/ceasar_cipher/ceasar_cipherrb) * [Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb)\n* [Sam Padrul's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 685,
    "chunk_index": 281,
    "total_chunks": 2218
  },
  {
    "id": "be036228de257f26384f5e5bbf73e44f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 668,
    "chunk_index": 282,
    "total_chunks": 2218
  },
  {
    "id": "ab4379cdb47b6d802334b4478dcee181",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Maggie Baker's Solution](https://githubcom/maggiedbaker/Odin_Project/blob/master/ruby_building_blocks/caesar_cipherrb) * [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb)\n* [LongPotato's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 682,
    "chunk_index": 283,
    "total_chunks": 2218
  },
  {
    "id": "eed4c24bf829514bc9553fddc747d8e8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 668,
    "chunk_index": 284,
    "total_chunks": 2218
  },
  {
    "id": "830ca5e6b8f6feec1cce5a682b9cbc7d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Hyeunjoon Kim's Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb)\n* [Eleanor's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 681,
    "chunk_index": 285,
    "total_chunks": 2218
  },
  {
    "id": "ede1c731d9a933c3a3432f4e2530ecd1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 689,
    "chunk_index": 286,
    "total_chunks": 2218
  },
  {
    "id": "d0e171a9e9d4ed22397f1c5eee7c64a8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/hyeunny/Projects_Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Aleksandar Rodić's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb)\n* [Dorian Iacobescu's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 705,
    "chunk_index": 287,
    "total_chunks": 2218
  },
  {
    "id": "c46a33599d6f6ce8305e37294581f7a2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 692,
    "chunk_index": 288,
    "total_chunks": 2218
  },
  {
    "id": "4401d9a3acc84e805785e19cac0e6ad2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Ruby%20Building%20Blocks/lib/caesarrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb)\n* [Nathan Bourke's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 707,
    "chunk_index": 289,
    "total_chunks": 2218
  },
  {
    "id": "708bef94f5fc045cf9ed3e10e3165555",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 681,
    "chunk_index": 290,
    "total_chunks": 2218
  },
  {
    "id": "48528d11caeb37faee4d555836decebc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [John Quarles's Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb)\n* [Lyman Wong's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 695,
    "chunk_index": 291,
    "total_chunks": 2218
  },
  {
    "id": "1f8eb45a70604b8e5e06fb1b99458b8c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 292,
    "total_chunks": 2218
  },
  {
    "id": "5cec95a8f4c832b2e608d1d858a971f5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/johnwquarles/Ruby-Building-Blocks/blob/master/caesarrb) * [Vidul's Solution](https://githubcom/viparthasarathy/Caesar-Cipher/blob/master/methodrb) * [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb)\n* [Antonio Augusto's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 700,
    "chunk_index": 293,
    "total_chunks": 2218
  },
  {
    "id": "c97c5bf41d59da382558452ff8955fc6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 660,
    "chunk_index": 294,
    "total_chunks": 2218
  },
  {
    "id": "317c30ef20607ac47d34caeb03bcf2f6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Tomislav Mikulin's Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb)\n* [omokoro's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 675,
    "chunk_index": 295,
    "total_chunks": 2218
  },
  {
    "id": "47d136b4da5639c6c93c6cc6f5868709",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeser",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 680,
    "chunk_index": 296,
    "total_chunks": 2218
  },
  {
    "id": "5e0aaa4f12c405532193c1d4829a3e91",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/MrKindle85/ruby_building_blocks/blob/master/Caesar_Cipherrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb)\n* [Ryan Jordan's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 692,
    "chunk_index": 297,
    "total_chunks": 2218
  },
  {
    "id": "df4d5996fad048cae2c2649c4216d744",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 680,
    "chunk_index": 298,
    "total_chunks": 2218
  },
  {
    "id": "fe0e27b2fed68e31dab698bb3b988299",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project1/bbproject1/p1-caesarrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb)\n* [Tom McGinn's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 694,
    "chunk_index": 299,
    "total_chunks": 2218
  },
  {
    "id": "96eb867a280a2c78025f0a4f54531cbb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 673,
    "chunk_index": 300,
    "total_chunks": 2218
  },
  {
    "id": "aab07d3b8d057229e729e72a0f5b4a63",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/ruby_building_blocks/ceasarrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb)\n* [Eddie's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 687,
    "chunk_index": 301,
    "total_chunks": 2218
  },
  {
    "id": "77398f983bcb5ef5c3f85e885b6984d0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 671,
    "chunk_index": 302,
    "total_chunks": 2218
  },
  {
    "id": "91f1fc5674e463cca592523ce253c4e4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Dziewa's Solution](https://githubcom/chrisdziewa/building-blocks/blob/master/cipher/cipherrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb)\n* [Gitman's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 683,
    "chunk_index": 303,
    "total_chunks": 2218
  },
  {
    "id": "f8accf5dc0b5581dc1c6557273291e55",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 667,
    "chunk_index": 304,
    "total_chunks": 2218
  },
  {
    "id": "b949ff22f319c6df0da170c486aced01",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/caesar_cipherrb) * [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb)\n* [Suneil's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 682,
    "chunk_index": 305,
    "total_chunks": 2218
  },
  {
    "id": "dbd1d43bffc4740b18d3532005a163c7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 664,
    "chunk_index": 306,
    "total_chunks": 2218
  },
  {
    "id": "855686e2e14793b183427bd19641347f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Andy Linteau's Solution](https://githubcom/linteau/ceasar_cipher/blob/master/cipherrb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb)\n* [Jeremy Mauzy's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 678,
    "chunk_index": 307,
    "total_chunks": 2218
  },
  {
    "id": "9d6771ce9d0c3d59edb08776bb2bca35",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 672,
    "chunk_index": 308,
    "total_chunks": 2218
  },
  {
    "id": "46c7c7be8f4280339a41ae5af8aefe82",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/01_caesar_cipherrb) * [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb)\n* [Richard Stewart's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 686,
    "chunk_index": 309,
    "total_chunks": 2218
  },
  {
    "id": "da4a7c42040ed35bfd4f76eb684a35dd",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 667,
    "chunk_index": 310,
    "total_chunks": 2218
  },
  {
    "id": "bc408655fe5b4dd50e6c11d35b72c60e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Jason Matthews's Solution](https://githubcom/fo0man/ruby_blocks/blob/master/caeser_cipherrb) * [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb)\n* [Josh Klein's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 681,
    "chunk_index": 311,
    "total_chunks": 2218
  },
  {
    "id": "60ddde5361f2a30f590d1129303fb99b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 670,
    "chunk_index": 312,
    "total_chunks": 2218
  },
  {
    "id": "ae4f2a9dfd06381999dc7605e716061b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Kevin Weir's Solution](https://githubcom/IDCrisis2/the_odin_project/blob/master/Ruby%20Building%20Blocks/caesar_cipherrb) * [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb)\n* [Pedro Amaral's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 686,
    "chunk_index": 313,
    "total_chunks": 2218
  },
  {
    "id": "86da9bb3312aa6fe7ec75a371dbeba56",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 662,
    "chunk_index": 314,
    "total_chunks": 2218
  },
  {
    "id": "bb9096ee91150704b80a402a41f2477e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [chasmani's Solution](https://githubcom/chasmani/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb)\n* [Tom Wu's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 676,
    "chunk_index": 315,
    "total_chunks": 2218
  },
  {
    "id": "292d44ee8f36a78504104ef18bc903d5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 662,
    "chunk_index": 316,
    "total_chunks": 2218
  },
  {
    "id": "20a98aaa03ecc441521ee4423602e69b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Kevin Mulhern's Solution](https://githubcom/KevinMulhern/ruby_building_blocks/blob/master/caesar_cipherrb) * [Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb)\n* [Diarmuid Murphy's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 677,
    "chunk_index": 317,
    "total_chunks": 2218
  },
  {
    "id": "f8f6fa200f41148a448f3e835ed64129",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 663,
    "chunk_index": 318,
    "total_chunks": 2218
  },
  {
    "id": "f69bfe515666b241514e2f6c3f3a590e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Emil Johansen's Solution](https://githubcom/EmilOJ/odin_project/blob/master/Ruby_Building_Blocks/caesar_cipherrb) * [Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb)\n* [Dan Hoying's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 678,
    "chunk_index": 319,
    "total_chunks": 2218
  },
  {
    "id": "4a441e3e37f260f8a88388c42a7e041b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 654,
    "chunk_index": 320,
    "total_chunks": 2218
  },
  {
    "id": "8297d388abea7de26742652e1f1034b4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Sasikala's Solution](https://githubcom/Sasikala-Ravichandran/my_ruby_projects/blob/master/caesar_cipherrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb)\n* [ll14m4n's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 671,
    "chunk_index": 321,
    "total_chunks": 2218
  },
  {
    "id": "5d4cc8cf4d9a91e5554a182dcfdd41f1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 662,
    "chunk_index": 322,
    "total_chunks": 2218
  },
  {
    "id": "d34ed64f3d7500ce437052ec93ac040e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/caesar%20cipher/caesarrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb)\n* [AtActionParks's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 678,
    "chunk_index": 323,
    "total_chunks": 2218
  },
  {
    "id": "c01ac7466c3207509b994888e2ed05a0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 669,
    "chunk_index": 324,
    "total_chunks": 2218
  },
  {
    "id": "e1843612183dcbaf4a6b84c812783665",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Caesar_Cipherrb) * [Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb)\n* [Matias Pan's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 325,
    "total_chunks": 2218
  },
  {
    "id": "f01380755f63c9a30dd1dea577c3be67",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 667,
    "chunk_index": 326,
    "total_chunks": 2218
  },
  {
    "id": "c0c28a580c5832dfa3d863739020670a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Eleanor's Solution](https://githubcom/mixophrygian/Caesar-Cipher/blob/master/Caesarrb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb)\n* [Mark Viola's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 681,
    "chunk_index": 327,
    "total_chunks": 2218
  },
  {
    "id": "aa22341e30acbcc7267537d994399420",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 681,
    "chunk_index": 328,
    "total_chunks": 2218
  },
  {
    "id": "df21515853c081feca025c3f70236a0b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Iacobescu's Solution](https://githubcom/iacobson/Odin7-Ruby-Building_Blocks/blob/master/1_caesar_chipherrb) * [Nathan Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb)\n* [Glenn Crosby's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 695,
    "chunk_index": 329,
    "total_chunks": 2218
  },
  {
    "id": "4af5073f8cf289435e2285bd0c184be6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 671,
    "chunk_index": 330,
    "total_chunks": 2218
  },
  {
    "id": "303383beb8a292cdc57cab240ea13ce0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Bourke's Solution](https://githubcom/itiswicked/random-goodies/blob/master/caeser-cipherrb) * [Lyman Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb)\n* [Bhupendra Singh's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 688,
    "chunk_index": 331,
    "total_chunks": 2218
  },
  {
    "id": "9c6a831dd09c11fb029f9cb5f4e603f6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 674,
    "chunk_index": 332,
    "total_chunks": 2218
  },
  {
    "id": "e7af9d23dd043aec57beac2bb826b704",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Wong's Solution](https://githubcom/lymanwong/Ruby-Stuff/blob/master/odin/caesar_cipher/caesar_cipherrb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb)\n* [Joe Balsamo's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 690,
    "chunk_index": 333,
    "total_chunks": 2218
  },
  {
    "id": "8b4b56802c73e9318d8e88139ef51289",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 670,
    "chunk_index": 334,
    "total_chunks": 2218
  },
  {
    "id": "037f5cac3b6b02b6cd93fb928f95a706",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Augusto's Solution](https://githubcom/antoniosb/caesar_cipher/blob/master/caesar_cipherrb) * [omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb)\n* [Gb69010p's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 686,
    "chunk_index": 335,
    "total_chunks": 2218
  },
  {
    "id": "4c0126d6c1e1d644bdf6353095552574",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 675,
    "chunk_index": 336,
    "total_chunks": 2218
  },
  {
    "id": "dccec01288fb5914beb8b70dc7a4ed04",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[omokoro's Solution](https://githubcom/omokoro/caeser/blob/master/caeserrb) * [Ryan Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb)\n* [Cody Gipson's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 692,
    "chunk_index": 337,
    "total_chunks": 2218
  },
  {
    "id": "7d57b4aeda16adb145f38ebe9f94888f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 680,
    "chunk_index": 338,
    "total_chunks": 2218
  },
  {
    "id": "887938543fad87d86638ba6ad2c11a34",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Jordan's Solution](https://githubcom/krjordan/odin-project/tree/master/ruby_building-blocks/caesar-cipherrb) * [Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb)\n* [Racotek's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 695,
    "chunk_index": 339,
    "total_chunks": 2218
  },
  {
    "id": "bdbbe74071e0840fd5f52a66092c9c6a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 677,
    "chunk_index": 340,
    "total_chunks": 2218
  },
  {
    "id": "237a71697686b6281e04d1e2259091f0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Tom McGinn's Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb)\n* [M",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 341,
    "total_chunks": 2218
  },
  {
    "id": "29b9ea4123eddc8f23a2a052b35b6b2d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/tjmcgi/ruby_ceaser_cipher/blob/master/ceaser_cipherrb) * [Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 688,
    "chunk_index": 342,
    "total_chunks": 2218
  },
  {
    "id": "00de65d3e10c0c40d2fb00da578990cf",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 679,
    "chunk_index": 343,
    "total_chunks": 2218
  },
  {
    "id": "68628f1eb8c24524e86ca4de00602953",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Eddie's Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/caeser_cipher_p1rb) * [Gitman's Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb)\n* [Miguel Oliveira's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 695,
    "chunk_index": 344,
    "total_chunks": 2218
  },
  {
    "id": "3d4e74e9e2add92c4371a9025e5887e8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/ttuck303/project-odin/blob/master/caesar_cipherrb) * [Suneil's Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher)\n* [WCope's soultion](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 697,
    "chunk_index": 345,
    "total_chunks": 2218
  },
  {
    "id": "779478a7761390266475ed17393877ce",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 686,
    "chunk_index": 346,
    "total_chunks": 2218
  },
  {
    "id": "bb94860e1cc0302ea3493131718410a3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/suneilbasu/theOdinProject/blob/master/caesar1rb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb)\n* [John Tobillo's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 701,
    "chunk_index": 347,
    "total_chunks": 2218
  },
  {
    "id": "69f1caacadacddc92ac49745a0a9e571",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/caeser_cipherrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher)\n* [Alex Chen's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 697,
    "chunk_index": 348,
    "total_chunks": 2218
  },
  {
    "id": "09198d1088ab167e4f696ff37cf3c010",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 676,
    "chunk_index": 349,
    "total_chunks": 2218
  },
  {
    "id": "d7be7ff673c91a8742134ede98fd4083",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/rickstewart/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Josh Klein's Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb)\n* [Aleksandre Clapin-Pepin's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 697,
    "chunk_index": 350,
    "total_chunks": 2218
  },
  {
    "id": "eb4ead780bc26c6820e17571ca8a75c0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 683,
    "chunk_index": 351,
    "total_chunks": 2218
  },
  {
    "id": "828acfcdf4cacc3aff576560a10b1116",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/kleinjoshuaa/Ruby_Programming/blob/master/caesar_cipherrb) * [Pedro Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb)\n* [AnthonyL's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 697,
    "chunk_index": 352,
    "total_chunks": 2218
  },
  {
    "id": "6fe9024c8ccea925777015bb684c38cf",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shift",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 682,
    "chunk_index": 353,
    "total_chunks": 2218
  },
  {
    "id": "55787b8094eeb0183849f8c7ed319125",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Amaral's Solution](https://githubcom/lockemind/caeser_cipher/blob/master/caeser_cipherrb) * [Tom Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb)\n* [Jason Mattingly's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 698,
    "chunk_index": 354,
    "total_chunks": 2218
  },
  {
    "id": "2e961aaaa23021339d7de1b4dc38b922",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 685,
    "chunk_index": 355,
    "total_chunks": 2218
  },
  {
    "id": "222c39fb15bef97477a855cf7a121b83",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Wu's Solution](https://githubcom/canadatom/LearningRuby/blob/master/caesarcipherrb) * [Diarmuid Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb)\n* [Angus Dobson's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 701,
    "chunk_index": 356,
    "total_chunks": 2218
  },
  {
    "id": "e6b1b7036ac005a41a70ae53cfeddc72",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 686,
    "chunk_index": 357,
    "total_chunks": 2218
  },
  {
    "id": "b774bacbf1d522ad1126158a8f155eaf",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Murphy's Solution](https://githubcom/diarmuid-murphy/caesar-cipher/blob/master/caesar_cipherrb) * [Dan Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb)\n* [Dylan Bailey's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 701,
    "chunk_index": 358,
    "total_chunks": 2218
  },
  {
    "id": "990b4198f99cf2bf026f2f1c316ec664",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shift",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 685,
    "chunk_index": 359,
    "total_chunks": 2218
  },
  {
    "id": "8e81307b27d3bbdcb7ca3f4413af2a7e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Hoying's Solution](https://githubcom/danhoying/ruby_building_blocks/blob/master/caesar_cipherrb) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb)\n* [Julie Anderson's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 699,
    "chunk_index": 360,
    "total_chunks": 2218
  },
  {
    "id": "31340f3b0f0bad5b4268a54ab061cce9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 682,
    "chunk_index": 361,
    "total_chunks": 2218
  },
  {
    "id": "579448a98f6b20f6dcd6ccf4dd01f94a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/caesar_cipherrb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-building-blocks/blob/master/caesar-cipher/lib/caesar_cipherrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb)\n* [Ellen Sun's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 697,
    "chunk_index": 362,
    "total_chunks": 2218
  },
  {
    "id": "4e61b3e561fe80f1f6df7e365f3211e2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 636,
    "chunk_index": 363,
    "total_chunks": 2218
  },
  {
    "id": "7d50c47bca8faba860c1e156afb9e90f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Matias Pan's Solution](https://githubcom/kriox26/odin_project/blob/master/ruby_building_blocks/caesarrb) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb)\n* [Alex Tsiras' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 650,
    "chunk_index": 364,
    "total_chunks": 2218
  },
  {
    "id": "901498d3b47b4e4226c74ab3acdbdddb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 641,
    "chunk_index": 365,
    "total_chunks": 2218
  },
  {
    "id": "4a7cf535790e87f755b9b0c22c5f85ee",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/6-more-ruby-problems/1%20-%20Caesar%20Cipher/cipherrb) * [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb)\n* [Panashe Fundira's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 658,
    "chunk_index": 366,
    "total_chunks": 2218
  },
  {
    "id": "dbec50ba92bcea70a9a18641c584a945",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 628,
    "chunk_index": 367,
    "total_chunks": 2218
  },
  {
    "id": "530ac73fcf74e4419a3f4228410b0d0a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Glenn Crosby's Solution](https://githubcom/glennc15/RubyBuildingBlocks/blob/master/ceasar_cipherrb) * [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb)\n* [Paweł Cichoń Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 645,
    "chunk_index": 368,
    "total_chunks": 2218
  },
  {
    "id": "cde83b15a04909dae8f459c0a1a1d589",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Bhupendra Singh's Solution](https://githubcom/bhupendra11/rubySandbox/blob/master/caesarCipherrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher)\n* [Noah Prescott's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 634,
    "chunk_index": 369,
    "total_chunks": 2218
  },
  {
    "id": "c27ddf365e2a74511dad4d5f7aa2d8a3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 616,
    "chunk_index": 370,
    "total_chunks": 2218
  },
  {
    "id": "a1408a92c0999f6b342e1e65937f1b73",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/Ruby_Building_Blocks/blob/master/caesar_cipherrb) * [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb)\n* [Aviv Levinsky's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 632,
    "chunk_index": 371,
    "total_chunks": 2218
  },
  {
    "id": "b24248ec59d9fe36af270e21398cc2fb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 619,
    "chunk_index": 372,
    "total_chunks": 2218
  },
  {
    "id": "321e471b56c0e2aa0858e1d3c1335e1b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Gb69010p's Solution](https://githubcom/gb69010p/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb)\n* [Florian Mainguy's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 635,
    "chunk_index": 373,
    "total_chunks": 2218
  },
  {
    "id": "de81202c558ec85826888994af61c469",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 623,
    "chunk_index": 374,
    "total_chunks": 2218
  },
  {
    "id": "77f94f8eb995a9d77044c8207d90b51a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Cody Gipson's Solution](https://githubcom/Cgipson06/Ruby-caesar/blob/master/ruby-caesarrb) * [Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb)\n* [Scott Bobbitt's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 639,
    "chunk_index": 375,
    "total_chunks": 2218
  },
  {
    "id": "89525103fd884214200cb868cc93d179",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Racotek's Solution](https://githubcom/Raycotek/Odinprojects/blob/master/caesar_cipherrb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher)\n* [Wayne Ho's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 626,
    "chunk_index": 376,
    "total_chunks": 2218
  },
  {
    "id": "175a539f421f74f0134680028f2b6f6d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 617,
    "chunk_index": 377,
    "total_chunks": 2218
  },
  {
    "id": "ad5fcc445eaa352f0f74cdd0ca0ba243",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Joel's Solution](https://githubcom/edgar-/odin-project-Solutions/blob/master/building_blocks/caesar_cipherrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb)\n* [Chris Swanson's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 632,
    "chunk_index": 378,
    "total_chunks": 2218
  },
  {
    "id": "112edf079a8e9cc9df58bd361a649bd4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 617,
    "chunk_index": 379,
    "total_chunks": 2218
  },
  {
    "id": "6301f62de71c8a5af02bf3477120d6d6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Caesar%20Cipher) * [WCope's soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb)\n* [Maciej Panasiewicz's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 634,
    "chunk_index": 380,
    "total_chunks": 2218
  },
  {
    "id": "c6ef71f7ddb4a4c16e9e867775a9524e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 612,
    "chunk_index": 381,
    "total_chunks": 2218
  },
  {
    "id": "ffb59b4af277b2def1b72eea76690e29",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "soultion](https://githubcom/wcope80/ruby_building_blocks/blob/master/Caesar_Cipher/caesar_cipherrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb)\n* [Simon Kraus' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 382,
    "total_chunks": 2218
  },
  {
    "id": "12c86c19da05dd1ba8878d1037aa001d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 613,
    "chunk_index": 383,
    "total_chunks": 2218
  },
  {
    "id": "5cc9c3dc8032992f41a5a4a0dc786561",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/caesar_cipher) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb)\n* [djhart's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 384,
    "total_chunks": 2218
  },
  {
    "id": "2a74289eb1aab95d76304aeea7f2c9fb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 617,
    "chunk_index": 385,
    "total_chunks": 2218
  },
  {
    "id": "8409a91bfd79291fa0de4d1e3fed866d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/caesar_cipherrb) * [Aleksandre Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb)\n* [Theoderik Trajanson's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 634,
    "chunk_index": 386,
    "total_chunks": 2218
  },
  {
    "id": "54d585768d7958cda2bc85dbe60f1fbe",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 615,
    "chunk_index": 387,
    "total_chunks": 2218
  },
  {
    "id": "212a80573e67051afeb7effd3586ca8f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Clapin-Pepin's Solution](https://githubcom/aclapinpepin/caesar-cipher/blob/master/caesar_cipherrb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb)\n* [simoncal's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 630,
    "chunk_index": 388,
    "total_chunks": 2218
  },
  {
    "id": "a28a3dddac510444e1dd30ff65a45996",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 613,
    "chunk_index": 389,
    "total_chunks": 2218
  },
  {
    "id": "c5c965066297f091ce2398d7001d5549",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[AnthonyL's Solution](https://githubcom/AnthonyLarios/building-blocks/blob/master/caesar_shiftrb) * [Jason Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb)\n* [Giorgos Mitsis's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 630,
    "chunk_index": 390,
    "total_chunks": 2218
  },
  {
    "id": "5f0242661e7c870a999043734b1a8f05",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 616,
    "chunk_index": 391,
    "total_chunks": 2218
  },
  {
    "id": "54b7e6b34baa446d2b52c8675824ac87",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Mattingly's Solution](https://githubcom/jasonmattingly/odin_projects_ruby/blob/master/caesar_cipherrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb)\n* [Sander Schepens's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 633,
    "chunk_index": 392,
    "total_chunks": 2218
  },
  {
    "id": "b83506e5bf7d09bb47cdb706b26d89e1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinproject",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 610,
    "chunk_index": 393,
    "total_chunks": 2218
  },
  {
    "id": "7e6eb431fefc59420c6ab998bf634579",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/caesar_cipherrb) * [Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher)\n* [srashidi's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 635,
    "chunk_index": 394,
    "total_chunks": 2218
  },
  {
    "id": "45c4bf47fecc00209e86bcbf5c9368a0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 625,
    "chunk_index": 395,
    "total_chunks": 2218
  },
  {
    "id": "eaa755f4682604a669456f1c055d7714",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Dylan Bailey's Solution](https://githubcom/dylancbailey/Caesar-Cipher/blob/master/shiftrb) * [Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb)\n* [Dave Meister's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 640,
    "chunk_index": 396,
    "total_chunks": 2218
  },
  {
    "id": "4b3cb7a86077cafefbc747a81546dc9e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 630,
    "chunk_index": 397,
    "total_chunks": 2218
  },
  {
    "id": "cd3c2d76be4aa9e53decd386f8df29b0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Julie Anderson's Solution](https://githubcom/julie-anderson/caesar-cipher-in-ruby/blob/master/caesar_cipherrb) * [Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb)\n* [Andrew Park's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 644,
    "chunk_index": 398,
    "total_chunks": 2218
  },
  {
    "id": "b201eb7a54ded216afeaa84d7d884a38",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 630,
    "chunk_index": 399,
    "total_chunks": 2218
  },
  {
    "id": "cc827d09804d1f0bc926f1725009275c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Ellen Sun's Solution](https://githubcom/sunsplat/odinproject/blob/master/cipherrb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb)\n* [Ricardo Villegas' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 648,
    "chunk_index": 400,
    "total_chunks": 2218
  },
  {
    "id": "c318f8b5ef93c038eb750663338e9e52",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 636,
    "chunk_index": 401,
    "total_chunks": 2218
  },
  {
    "id": "7d506082a4ae108ee086b63b21780e75",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/ruby%20building%20blocks/caesar_cipherrb) * [Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb)\n* [James Brooks's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 650,
    "chunk_index": 402,
    "total_chunks": 2218
  },
  {
    "id": "3abda01d57fcc977e060540d0cc0bd08",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Panashe Fundira's Solution](https://githubcom/munyari/ruby-building-blocks/blob/master/caesar_cipherrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher)\n* [BoDonkey's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 633,
    "chunk_index": 403,
    "total_chunks": 2218
  },
  {
    "id": "c786364efc9d9d256f0ceae2331a693c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Paweł Cichoń Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher)\n* [arocketman's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 624,
    "chunk_index": 404,
    "total_chunks": 2218
  },
  {
    "id": "0016c231856ae2d41799a21060c60fb9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 631,
    "chunk_index": 405,
    "total_chunks": 2218
  },
  {
    "id": "66d5741e5b7ebf3ba96f52e8a31f59e5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/beovulf/caesar_cipher) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb)\n* [Corey Kazaks' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 646,
    "chunk_index": 406,
    "total_chunks": 2218
  },
  {
    "id": "1cdfce9fa6aa2ed5ab20931b384d2b67",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 641,
    "chunk_index": 407,
    "total_chunks": 2218
  },
  {
    "id": "c901ad81b5b9041ab711921dc5110d2e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Solution](https://githubcom/npresco/top/blob/master/ruby_building_blocks/caesar_cipherrb) * [Aviv Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb)\n* [cdouglass's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 656,
    "chunk_index": 408,
    "total_chunks": 2218
  },
  {
    "id": "026c2d7020443f6f537d931f3ba1e07b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/blob/master/ruby/building-blocks/caesar-cipher/caesar",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 655,
    "chunk_index": 409,
    "total_chunks": 2218
  },
  {
    "id": "4dee81c1753e65121b7411700edf1659",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "Levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Caesar%20Cipher/caesarrb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/blob/master/ruby/building-blocks/caesar-cipher/caesarrb)\n* [Peuchen's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 668,
    "chunk_index": 410,
    "total_chunks": 2218
  },
  {
    "id": "72af6fb15a0b6f30ba43954de00ab335",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/blob/master/ruby/building-blocks/caesar-cipher/caesarrb) * [Peuchen's Solution](https://githubcom/Peuchen/caesar_cipher/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 647,
    "chunk_index": 411,
    "total_chunks": 2218
  },
  {
    "id": "8c69fc64f821a0c81144855ff75a9b74",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "[Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/building-blocks/caesar_cipherrb) * [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/blob/master/ruby/building-blocks/caesar-cipher/caesarrb) * [Peuchen's Solution](https://githubcom/Peuchen/caesar_cipher/blob/master/caesar_cipherrb)\n* [BartoszD's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 664,
    "chunk_index": 412,
    "total_chunks": 2218
  },
  {
    "id": "b787f7415cc97a8832fbc9d92930cf0a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/blob/master/ruby/building-blocks/caesar-cipher/caesarrb) * [Peuchen's Solution](https://githubcom/Peuchen/caesar_cipher/blob/master/caesar_cipherrb) * [BartoszD's Solution](https://githubcom/railsbeginner/the_odin_project/blob/master/Caesar_cipher/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 645,
    "chunk_index": 413,
    "total_chunks": 2218
  },
  {
    "id": "5111e427e6b890c484c03742d211bd03",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Scott Bobbitt's Solution](https://githubcom/sco-bo/caesar_cipher) * [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/blob/master/ruby/building-blocks/caesar-cipher/caesarrb) * [Peuchen's Solution](https://githubcom/Peuchen/caesar_cipher/blob/master/caesar_cipherrb) * [BartoszD's Solution](https://githubcom/railsbeginner/the_odin_project/blob/master/Caesar_cipher/caesar_cipherrb)\n* [Maia Petee's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 661,
    "chunk_index": 414,
    "total_chunks": 2218
  },
  {
    "id": "94b976eb6adf760dedd873bafb50ae43",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/blob/master/ruby/building-blocks/caesar-cipher/caesarrb) * [Peuchen's Solution](https://githubcom/Peuchen/caesar_cipher/blob/master/caesar_cipherrb) * [BartoszD's Solution](https://githubcom/railsbeginner/the_odin_project/blob/master/Caesar_cipher/caesar_cipherrb) * [Maia Petee's Solution](https://githubcom/movetomars/Ruby-Building-Blocks/blob/master/Problem1/caesarcipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 663,
    "chunk_index": 415,
    "total_chunks": 2218
  },
  {
    "id": "ad00e742ec3e2379c585396936a999ef",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Wayne Ho's Solution](https://githubcom/wayneho/Learning/blob/master/Ruby%20Building%20Blocks/Caesar%20Cipherrb) * [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/blob/master/ruby/building-blocks/caesar-cipher/caesarrb) * [Peuchen's Solution](https://githubcom/Peuchen/caesar_cipher/blob/master/caesar_cipherrb) * [BartoszD's Solution](https://githubcom/railsbeginner/the_odin_project/blob/master/Caesar_cipher/caesar_cipherrb) * [Maia Petee's Solution](https://githubcom/movetomars/Ruby-Building-Blocks/blob/master/Problem1/caesarcipherrb)\n* [Skye Free's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 677,
    "chunk_index": 416,
    "total_chunks": 2218
  },
  {
    "id": "964ccd82177d21e9c03b6c43bcb56d00",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/blob/master/ruby/building-blocks/caesar-cipher/caesarrb) * [Peuchen's Solution](https://githubcom/Peuchen/caesar_cipher/blob/master/caesar_cipherrb) * [BartoszD's Solution](https://githubcom/railsbeginner/the_odin_project/blob/master/Caesar_cipher/caesar_cipherrb) * [Maia Petee's Solution](https://githubcom/movetomars/Ruby-Building-Blocks/blob/master/Problem1/caesarcipherrb) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/caeser-cipher/caeser-cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 660,
    "chunk_index": 417,
    "total_chunks": 2218
  },
  {
    "id": "8655e1011d56caebc6bd6f839a8cb4d0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Chris Swanson's Solution](https://githubcom/cswans21/Odin/blob/master/Ruby_exercises/caesar_cipher/cipherrb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/blob/master/ruby/building-blocks/caesar-cipher/caesarrb) * [Peuchen's Solution](https://githubcom/Peuchen/caesar_cipher/blob/master/caesar_cipherrb) * [BartoszD's Solution](https://githubcom/railsbeginner/the_odin_project/blob/master/Caesar_cipher/caesar_cipherrb) * [Maia Petee's Solution](https://githubcom/movetomars/Ruby-Building-Blocks/blob/master/Problem1/caesarcipherrb) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/caeser-cipher/caeser-cipherrb)\n* [Matt Leininger's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 675,
    "chunk_index": 418,
    "total_chunks": 2218
  },
  {
    "id": "f413c1e5331b14cbee44feb98b25302b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/blob/master/ruby/building-blocks/caesar-cipher/caesarrb) * [Peuchen's Solution](https://githubcom/Peuchen/caesar_cipher/blob/master/caesar_cipherrb) * [BartoszD's Solution](https://githubcom/railsbeginner/the_odin_project/blob/master/Caesar_cipher/caesar_cipherrb) * [Maia Petee's Solution](https://githubcom/movetomars/Ruby-Building-Blocks/blob/master/Problem1/caesarcipherrb) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/caeser-cipher/caeser-cipherrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/caesar_cipher/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 661,
    "chunk_index": 419,
    "total_chunks": 2218
  },
  {
    "id": "21fa45ae7aa1fd4ad141199b483207ca",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_building_blocks/caesar_cipherrb) * [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/blob/master/ruby/building-blocks/caesar-cipher/caesarrb) * [Peuchen's Solution](https://githubcom/Peuchen/caesar_cipher/blob/master/caesar_cipherrb) * [BartoszD's Solution](https://githubcom/railsbeginner/the_odin_project/blob/master/Caesar_cipher/caesar_cipherrb) * [Maia Petee's Solution](https://githubcom/movetomars/Ruby-Building-Blocks/blob/master/Problem1/caesarcipherrb) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/caeser-cipher/caeser-cipherrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/caesar_cipher/caesar_cipherrb)\n* [Andrea Tozzini's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 678,
    "chunk_index": 420,
    "total_chunks": 2218
  },
  {
    "id": "1988991292a9d8efc517277bd4b0e9ff",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/blob/master/ruby/building-blocks/caesar-cipher/caesarrb) * [Peuchen's Solution](https://githubcom/Peuchen/caesar_cipher/blob/master/caesar_cipherrb) * [BartoszD's Solution](https://githubcom/railsbeginner/the_odin_project/blob/master/Caesar_cipher/caesar_cipherrb) * [Maia Petee's Solution](https://githubcom/movetomars/Ruby-Building-Blocks/blob/master/Problem1/caesarcipherrb) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/caeser-cipher/caeser-cipherrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/caesar_cipher/caesar_cipherrb) * [Andrea Tozzini's Solution](https://githubcom/clunizzi/odin-project/blob/master/caesar_cypher_smart",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 660,
    "chunk_index": 421,
    "total_chunks": 2218
  },
  {
    "id": "1e0aec60412dae3c057a838e66417eab",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [Simon Kraus' Solution](https://githubcom/simonkrausgit/the_odin_project/blob/master/ruby/building_blocks/ceasar_cipherrb) * [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/blob/master/ruby/building-blocks/caesar-cipher/caesarrb) * [Peuchen's Solution](https://githubcom/Peuchen/caesar_cipher/blob/master/caesar_cipherrb) * [BartoszD's Solution](https://githubcom/railsbeginner/the_odin_project/blob/master/Caesar_cipher/caesar_cipherrb) * [Maia Petee's Solution](https://githubcom/movetomars/Ruby-Building-Blocks/blob/master/Problem1/caesarcipherrb) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/caeser-cipher/caeser-cipherrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/caesar_cipher/caesar_cipherrb) * [Andrea Tozzini's Solution](https://githubcom/clunizzi/odin-project/blob/master/caesar_cypher_smartrb)\n* [Luke Walker's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 674,
    "chunk_index": 422,
    "total_chunks": 2218
  },
  {
    "id": "6915844e445189af52446a0a2a9b656a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/blob/master/ruby/building-blocks/caesar-cipher/caesarrb) * [Peuchen's Solution](https://githubcom/Peuchen/caesar_cipher/blob/master/caesar_cipherrb) * [BartoszD's Solution](https://githubcom/railsbeginner/the_odin_project/blob/master/Caesar_cipher/caesar_cipherrb) * [Maia Petee's Solution](https://githubcom/movetomars/Ruby-Building-Blocks/blob/master/Problem1/caesarcipherrb) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/caeser-cipher/caeser-cipherrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/caesar_cipher/caesar_cipherrb) * [Andrea Tozzini's Solution](https://githubcom/clunizzi/odin-project/blob/master/caesar_cypher_smartrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-building-blocks/blob/master/caesar_cipher",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 653,
    "chunk_index": 423,
    "total_chunks": 2218
  },
  {
    "id": "a63f488c0baf8a89166c55b0e83414ca",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_building_blocks",
    "content": "* [djhart's Solution](https://githubcom/djhart/ruby_project1/blob/master/cipherrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/CaesarCipherrb) * [simoncal's Solution](https://githubcom/simoncal-saas/ruby_sandbox/blob/master/caesar_cipherrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/caesar_cipherrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/tree/master/ruby/Project1--Caesar-Cipher) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/caesar_cipher/caesar_cipherrb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/odin_caesar_cipher/blob/master/caesar_cipherrb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/caesar_cipherrb) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/caesar_cipherrb) * [James Brooks's Solution](https://githubcom/jhbrooks/caesar-cipher) * [BoDonkey's Solution](https://githubcom/BoDonkey/ceasar_cipher) * [arocketman's Solution](https://githubcom/arocketman/OdinProjectSolutions/blob/master/caesar-cipherrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_building_blocks/blob/master/caesar_cipherrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/blob/master/ruby/building-blocks/caesar-cipher/caesarrb) * [Peuchen's Solution](https://githubcom/Peuchen/caesar_cipher/blob/master/caesar_cipherrb) * [BartoszD's Solution](https://githubcom/railsbeginner/the_odin_project/blob/master/Caesar_cipher/caesar_cipherrb) * [Maia Petee's Solution](https://githubcom/movetomars/Ruby-Building-Blocks/blob/master/Problem1/caesarcipherrb) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/caeser-cipher/caeser-cipherrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/caesar_cipher/caesar_cipherrb) * [Andrea Tozzini's Solution](https://githubcom/clunizzi/odin-project/blob/master/caesar_cypher_smartrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-building-blocks/blob/master/caesar_cipherrb)\n* [Dominik Chomicki's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 147642,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 671,
    "chunk_index": 424,
    "total_chunks": 2218
  }
]