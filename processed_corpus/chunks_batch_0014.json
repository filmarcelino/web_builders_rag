[
  {
    "id": "1a88fea39069b54762a0e11d06a45deb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Sherman Bowling's Solution](https://githubcom/janus0/top_course_work/blob/master/ruby/ruby_advanced_building_blocks/enumerable_methodsrb) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/my_methodsrb) * [Samuel Masters' Soultion](https://githubcom/redeyetuning/rb_adv_bldg_blks/blob/master/enumerable_methodsrb) * [Marijunjnja's Solution](https://githubcom/Marijunjnja/Odin-Project/blob/master/advanced_ruby_building_blocks/enumerable_methodsrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/enumerable_methodsrb) * [Bruno Parga's Solution](https://githubcom/brunoparga/odinproject/tree/master/Ruby/my_enums) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/enumerablesrb) * [isildonmez's Solution](https://githubcom/isildonmez/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 662,
    "chunk_index": 764,
    "total_chunks": 1224
  },
  {
    "id": "eb1fcc95a4ae1006244625718044c231",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Sherman Bowling's Solution](https://githubcom/janus0/top_course_work/blob/master/ruby/ruby_advanced_building_blocks/enumerable_methodsrb) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/my_methodsrb) * [Samuel Masters' Soultion](https://githubcom/redeyetuning/rb_adv_bldg_blks/blob/master/enumerable_methodsrb) * [Marijunjnja's Solution](https://githubcom/Marijunjnja/Odin-Project/blob/master/advanced_ruby_building_blocks/enumerable_methodsrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/enumerable_methodsrb) * [Bruno Parga's Solution](https://githubcom/brunoparga/odinproject/tree/master/Ruby/my_enums) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/enumerablesrb) * [isildonmez's Solution](https://githubcom/isildonmez/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb)\n* [Grey-Ghost's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 675,
    "chunk_index": 765,
    "total_chunks": 1224
  },
  {
    "id": "4d7c9c906e3869410ce46045ab9d40fb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/janus0/top_course_work/blob/master/ruby/ruby_advanced_building_blocks/enumerable_methodsrb) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/my_methodsrb) * [Samuel Masters' Soultion](https://githubcom/redeyetuning/rb_adv_bldg_blks/blob/master/enumerable_methodsrb) * [Marijunjnja's Solution](https://githubcom/Marijunjnja/Odin-Project/blob/master/advanced_ruby_building_blocks/enumerable_methodsrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/enumerable_methodsrb) * [Bruno Parga's Solution](https://githubcom/brunoparga/odinproject/tree/master/Ruby/my_enums) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/enumerablesrb) * [isildonmez's Solution](https://githubcom/isildonmez/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 766,
    "total_chunks": 1224
  },
  {
    "id": "360156b9d3726166b244cdbdc2b98f10",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/janus0/top_course_work/blob/master/ruby/ruby_advanced_building_blocks/enumerable_methodsrb) * [Javier Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/my_methodsrb) * [Samuel Masters' Soultion](https://githubcom/redeyetuning/rb_adv_bldg_blks/blob/master/enumerable_methodsrb) * [Marijunjnja's Solution](https://githubcom/Marijunjnja/Odin-Project/blob/master/advanced_ruby_building_blocks/enumerable_methodsrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/enumerable_methodsrb) * [Bruno Parga's Solution](https://githubcom/brunoparga/odinproject/tree/master/Ruby/my_enums) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/enumerablesrb) * [isildonmez's Solution](https://githubcom/isildonmez/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb)\n* [Arron's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 696,
    "chunk_index": 767,
    "total_chunks": 1224
  },
  {
    "id": "0b71131a8fb1fc150a9fa19c57ad55df",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/my_methodsrb) * [Samuel Masters' Soultion](https://githubcom/redeyetuning/rb_adv_bldg_blks/blob/master/enumerable_methodsrb) * [Marijunjnja's Solution](https://githubcom/Marijunjnja/Odin-Project/blob/master/advanced_ruby_building_blocks/enumerable_methodsrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/enumerable_methodsrb) * [Bruno Parga's Solution](https://githubcom/brunoparga/odinproject/tree/master/Ruby/my_enums) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/enumerablesrb) * [isildonmez's Solution](https://githubcom/isildonmez/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enum",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 677,
    "chunk_index": 768,
    "total_chunks": 1224
  },
  {
    "id": "a002d939a41b20cbb38e68a544dea888",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Machin's Solution](https://githubcom/Javier-Machin/Ruby_exercises/blob/master/my_methodsrb) * [Samuel Masters' Soultion](https://githubcom/redeyetuning/rb_adv_bldg_blks/blob/master/enumerable_methodsrb) * [Marijunjnja's Solution](https://githubcom/Marijunjnja/Odin-Project/blob/master/advanced_ruby_building_blocks/enumerable_methodsrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/enumerable_methodsrb) * [Bruno Parga's Solution](https://githubcom/brunoparga/odinproject/tree/master/Ruby/my_enums) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/enumerablesrb) * [isildonmez's Solution](https://githubcom/isildonmez/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb)\n* [xavier Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 688,
    "chunk_index": 769,
    "total_chunks": 1224
  },
  {
    "id": "78f632e6f2299da70ce6b9919ad16418",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Samuel Masters' Soultion](https://githubcom/redeyetuning/rb_adv_bldg_blks/blob/master/enumerable_methodsrb) * [Marijunjnja's Solution](https://githubcom/Marijunjnja/Odin-Project/blob/master/advanced_ruby_building_blocks/enumerable_methodsrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/enumerable_methodsrb) * [Bruno Parga's Solution](https://githubcom/brunoparga/odinproject/tree/master/Ruby/my_enums) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/enumerablesrb) * [isildonmez's Solution](https://githubcom/isildonmez/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable)\n* [Webdev-burd's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 693,
    "chunk_index": 770,
    "total_chunks": 1224
  },
  {
    "id": "c1f5cc19829e1b0e780490dcaf6be2f3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Marijunjnja's Solution](https://githubcom/Marijunjnja/Odin-Project/blob/master/advanced_ruby_building_blocks/enumerable_methodsrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/enumerable_methodsrb) * [Bruno Parga's Solution](https://githubcom/brunoparga/odinproject/tree/master/Ruby/my_enums) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/enumerablesrb) * [isildonmez's Solution](https://githubcom/isildonmez/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 676,
    "chunk_index": 771,
    "total_chunks": 1224
  },
  {
    "id": "c5770e9b4cf12534ce1431499beefff7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Marijunjnja's Solution](https://githubcom/Marijunjnja/Odin-Project/blob/master/advanced_ruby_building_blocks/enumerable_methodsrb) * [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/enumerable_methodsrb) * [Bruno Parga's Solution](https://githubcom/brunoparga/odinproject/tree/master/Ruby/my_enums) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/enumerablesrb) * [isildonmez's Solution](https://githubcom/isildonmez/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb)\n* [theghall's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 689,
    "chunk_index": 772,
    "total_chunks": 1224
  },
  {
    "id": "2c526940c9ace2697cfc1d4f45afa038",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [funwithcthulhu's Solution](https://githubcom/funwithcthulhu/sandbox_ruby/blob/master/enumerable_methodsrb) * [Bruno Parga's Solution](https://githubcom/brunoparga/odinproject/tree/master/Ruby/my_enums) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/enumerablesrb) * [isildonmez's Solution](https://githubcom/isildonmez/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum)\n* [jfonz412's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 672,
    "chunk_index": 773,
    "total_chunks": 1224
  },
  {
    "id": "0aabdfe5dc5258d28d253fbb7457b28a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Bruno Parga's Solution](https://githubcom/brunoparga/odinproject/tree/master/Ruby/my_enums) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/enumerablesrb) * [isildonmez's Solution](https://githubcom/isildonmez/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 656,
    "chunk_index": 774,
    "total_chunks": 1224
  },
  {
    "id": "aa85f05b62c1437d1d9f712928050896",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Bruno Parga's Solution](https://githubcom/brunoparga/odinproject/tree/master/Ruby/my_enums) * [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/enumerablesrb) * [isildonmez's Solution](https://githubcom/isildonmez/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb)\n* [João Roberto's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 669,
    "chunk_index": 775,
    "total_chunks": 1224
  },
  {
    "id": "d7c1c16ae7712945b635c6e9bf2aefd4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/enumerablesrb) * [isildonmez's Solution](https://githubcom/isildonmez/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 653,
    "chunk_index": 776,
    "total_chunks": 1224
  },
  {
    "id": "bff144618c404518dd8a70a4b299d97b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Btreim's Solution](https://githubcom/btreim/ruby/blob/master/enumerablesrb) * [isildonmez's Solution](https://githubcom/isildonmez/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb)\n* [dfan14051's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 668,
    "chunk_index": 777,
    "total_chunks": 1224
  },
  {
    "id": "3042eaa25161df501710cde5d4b71a75",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [isildonmez's Solution](https://githubcom/isildonmez/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 662,
    "chunk_index": 778,
    "total_chunks": 1224
  },
  {
    "id": "da040d0c6a394195b5af2b236f4a1a23",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [isildonmez's Solution](https://githubcom/isildonmez/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb)\n* [Oleh Sliusar's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 677,
    "chunk_index": 779,
    "total_chunks": 1224
  },
  {
    "id": "f367224f3624b297fef88abead1dbf80",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[jdrobertso's Solution](https://githubcom/jdrobertso/enumerables) * [rublen's Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods)\n* [Jerliyah Craig's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 665,
    "chunk_index": 780,
    "total_chunks": 1224
  },
  {
    "id": "2d0cb0d71103d5cc876785c94954b936",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/rublen/The_Odin_Ruby/tree/master/Enumerable_Methods) * [endotnick's Solution](https://githubcom/endotnick/ruby_enumerable_methods/blob/master/enumerable_methodsrb) * [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods)\n* [Ovsjah Schweinefresser's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 668,
    "chunk_index": 781,
    "total_chunks": 1224
  },
  {
    "id": "54ac994a53f999c97bf5c54931e13088",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 631,
    "chunk_index": 782,
    "total_chunks": 1224
  },
  {
    "id": "201fcae79c46f1e8dfddf05addf9a188",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Jonathan Yiv's Solution](https://githubcom/JonathanYiv/enumerable_methods) * [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb)\n* [Yash Anand's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 645,
    "chunk_index": 783,
    "total_chunks": 1224
  },
  {
    "id": "8bd1bc6dbbd97e419168599ff339a4eb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Jason McKee's Solution](https://githubcom/jttmckee/odin-project-ruby/tree/master/enumerable) * [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project)\n* [Nicolas Amaya's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 648,
    "chunk_index": 784,
    "total_chunks": 1224
  },
  {
    "id": "b12484b393fc47af068d773989de2b45",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Andrew's Solution](https://githubcom/andrewr224/enumerable_methods) * [MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project)\n* [John Phelps's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 644,
    "chunk_index": 785,
    "total_chunks": 1224
  },
  {
    "id": "169a020f9dec03044376b8c97f306b54",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 643,
    "chunk_index": 786,
    "total_chunks": 1224
  },
  {
    "id": "d4c49b44cbaafd64bdff40f7a4faa9fd",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[MGiagante's Solution](https://githubcom/mgiagante/ruby_building_blocks) * [Bn8's Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb)\n* [Austin Norman's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 655,
    "chunk_index": 787,
    "total_chunks": 1224
  },
  {
    "id": "e9224c0a09df2dd47f7aa424755ff225",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 644,
    "chunk_index": 788,
    "total_chunks": 1224
  },
  {
    "id": "f7a41befc1384186a82fa580e389c3da",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Bn8/ruby_odin/blob/master/AdvancedBuildingBlocks/enumerablerb) * [GuyInALabCoat's Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb)\n* [Jib's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 656,
    "chunk_index": 789,
    "total_chunks": 1224
  },
  {
    "id": "ecb9cf487510913b7b45ddf7c283c83b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 641,
    "chunk_index": 790,
    "total_chunks": 1224
  },
  {
    "id": "ae0ef1efea3898ab10cb876efad99eec",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/GuyInALabCoat/Odin_Project_Ruby/tree/master/Advanced_Building_Blocks) * [Ben Deltenre's Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb)\n* [Chad Kreutzer's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 655,
    "chunk_index": 791,
    "total_chunks": 1224
  },
  {
    "id": "2281722fdfb354af9e0657ef90a2e3de",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 642,
    "chunk_index": 792,
    "total_chunks": 1224
  },
  {
    "id": "b61c608295cb25a06dbd5ec678652ef0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/benjdelt/ruby_advanced_building_blocks/blob/master/enumerablerb) * [justinckim3's Solution](https://githubcom/justinckim3/ruby_advanced_building_blocks/blob/master/lib/enumerable_methodsrb) * [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb)\n* [Stefan P's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 656,
    "chunk_index": 793,
    "total_chunks": 1224
  },
  {
    "id": "226d86670194c10b9be37146a2a22b28",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 617,
    "chunk_index": 794,
    "total_chunks": 1224
  },
  {
    "id": "77829a5c5bad84e3677c60df90864f43",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Kasey's Solution](https://githubcom/kasey-z/TOP-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb)\n* [Raiko's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 629,
    "chunk_index": 795,
    "total_chunks": 1224
  },
  {
    "id": "55b209763fcdd2713430fb74c90d4660",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 612,
    "chunk_index": 796,
    "total_chunks": 1224
  },
  {
    "id": "b3c365c164821135fe3a86c48b930172",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Demo318's Solution](https://githubcom/Demo318/ruby_advanced_building_blocs/blob/master/my_enumerablerb) * [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb)\n* [Jamie's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 623,
    "chunk_index": 797,
    "total_chunks": 1224
  },
  {
    "id": "4ec87bf9e6fcf6d9e93ad8b2e4b990c3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 612,
    "chunk_index": 798,
    "total_chunks": 1224
  },
  {
    "id": "89259df9d0d7bc1baf90c578567eaded",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Dallaire's Solution](https://githubcom/Dallaire/ruby_building_blocks/blob/master/enumerablerb) * [SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb)\n* [Chris Oldakowski's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 626,
    "chunk_index": 799,
    "total_chunks": 1224
  },
  {
    "id": "e38eac80d94f44773f5099ece71a15f3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 620,
    "chunk_index": 800,
    "total_chunks": 1224
  },
  {
    "id": "9f024965b2360850f7b39d9b6422621a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[SadieD's Solution](https://githubcom/SadieD/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Grey-Ghost's Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb)\n* [Marina Sergeyeva's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 634,
    "chunk_index": 801,
    "total_chunks": 1224
  },
  {
    "id": "7dc3d8435082307f1e58467e6bd71af2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 622,
    "chunk_index": 802,
    "total_chunks": 1224
  },
  {
    "id": "03e897f14c782b676faad854056e3248",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Grey-Ghost/advanced-building-blocks/blob/master/enumerablerb) * [Arron's Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb)\n* [Afshin M",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 631,
    "chunk_index": 803,
    "total_chunks": 1224
  },
  {
    "id": "6afbe30b75b4969c2d8e2ba019e47d7d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/man715/TOP_Enumerable/blob/master/enumrb) * [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 613,
    "chunk_index": 804,
    "total_chunks": 1224
  },
  {
    "id": "f2f6136b368ccf3d3ecde813ed240352",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [xavier Solution](https://githubcom/nxdf2015/odin-advanced-building-blocks/tree/master/enumerable) * [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks)\n* [Donald's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 620,
    "chunk_index": 805,
    "total_chunks": 1224
  },
  {
    "id": "9b597fc480c41a03079565ccc3902b6c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Webdev-burd's Solution](https://githubcom/webdev-burd/building-blocks/blob/master/enumerable-helpersrb) * [theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks)\n* [Alan Russell's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 618,
    "chunk_index": 806,
    "total_chunks": 1224
  },
  {
    "id": "6a818e8320e2b14a4b13f7b182c0d6c4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 604,
    "chunk_index": 807,
    "total_chunks": 1224
  },
  {
    "id": "7dc9c0da9883169e9d2994364a2ede90",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[theghall's Solution](https://githubcom/theghall/enum) * [jfonz412's Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb)\n* [Sahil Agarwal's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 620,
    "chunk_index": 808,
    "total_chunks": 1224
  },
  {
    "id": "fa77201826b2ddcfeb1bb84ee3a19c1d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/jfonz412/ruby_building_blocks/blob/master/advanced/enum_methodsrb) * [João Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks)\n* [TomTom's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 624,
    "chunk_index": 809,
    "total_chunks": 1224
  },
  {
    "id": "89af0d7ef431f02c4584f94a7e1c7f03",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 616,
    "chunk_index": 810,
    "total_chunks": 1224
  },
  {
    "id": "364c740fbf9ff02b63067918728f5fbe",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Roberto's Solution](https://githubcom/jrobertolima/learning-ruby/blob/master/Enumerablerb) * [dfan14051's Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb)\n* [Tommy Noe's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 630,
    "chunk_index": 811,
    "total_chunks": 1224
  },
  {
    "id": "a498c5a83db51e957826b8a678f9adea",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 615,
    "chunk_index": 812,
    "total_chunks": 1224
  },
  {
    "id": "a8745b2b1289a6300c2ae9896c4aef0d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/dfan14051/ruby_projects/blob/master/advanced_building_blocks/enumerablerb) * [Oleh Sliusar's Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb)\n* [Michael Alexander's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 813,
    "total_chunks": 1224
  },
  {
    "id": "e62d22e23a7231739adb3b00f8942d2f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 611,
    "chunk_index": 814,
    "total_chunks": 1224
  },
  {
    "id": "a535bd118f89382fe7352d4eda719d38",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/OlehSliusar/enumerable_methods) * [Jerliyah Craig's Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb)\n* [James MacIvor's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 625,
    "chunk_index": 815,
    "total_chunks": 1224
  },
  {
    "id": "c785a30bd21f5da2841c0000f84329e5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Jerliyah/enumerable-methods) * [Ovsjah Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable)\n* [Aleksandar's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 624,
    "chunk_index": 816,
    "total_chunks": 1224
  },
  {
    "id": "dbeda78d44a3c07e0b201c261b43da9f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enum",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 630,
    "chunk_index": 817,
    "total_chunks": 1224
  },
  {
    "id": "421055dd77ab89feaf4ded6102af33b2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Schweinefresser's Solution](https://githubcom/Ovsjah/advanced_building_blocks/blob/master/enumerablerb) * [Yash Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb)\n* [Lara Finnegan's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 644,
    "chunk_index": 818,
    "total_chunks": 1224
  },
  {
    "id": "ef349cb30a09ea7d707674aca84687f8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 630,
    "chunk_index": 819,
    "total_chunks": 1224
  },
  {
    "id": "a95783f0a49573792146b8f0d26eaf35",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Anand's Solution](https://githubcom/yashanand1910/ruby-advanced-project) * [Nicolas Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb)\n* [John Quarles' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 643,
    "chunk_index": 820,
    "total_chunks": 1224
  },
  {
    "id": "9b7e39954815244a6dc654425873f80f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 639,
    "chunk_index": 821,
    "total_chunks": 1224
  },
  {
    "id": "b0192873f24a36e825bcce07d682b7c6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Amaya's Solution](https://githubcom/nicoasp/TOP---Ruby-advanced-building-blocks-project) * [John Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb)\n* [Jack Nguyen's Solution](http://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 651,
    "chunk_index": 822,
    "total_chunks": 1224
  },
  {
    "id": "78a842121b12273e8eae3d3a778e187f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 647,
    "chunk_index": 823,
    "total_chunks": 1224
  },
  {
    "id": "080233a47aceab428d90d64dcd41499b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Phelps's Solution](https://githubcom/jphelps413/odin-ruby/blob/master/advanced-building-blocks/enumerablerb) * [Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb)\n* [Vidul's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 660,
    "chunk_index": 824,
    "total_chunks": 1224
  },
  {
    "id": "7a1b2354f6c98b0af2f58ba34262b65d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 644,
    "chunk_index": 825,
    "total_chunks": 1224
  },
  {
    "id": "69094c3bfa3ea2cb0aaa21fd308e8f64",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Austin Norman's Solution](https://githubcom/austinnormancore/advanced_building_blocks/blob/master/enumerablerb) * [Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb)\n* [Hunter Ducharme's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 657,
    "chunk_index": 826,
    "total_chunks": 1224
  },
  {
    "id": "0f0f3c160f2ca5186f291a430ca52e29",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 655,
    "chunk_index": 827,
    "total_chunks": 1224
  },
  {
    "id": "7086963d1428414366f81e3f6e6818fd",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Jib's Solution](https://githubcom/NuclearMachine/OdinTasks/blob/master/adv-building-blocks/my_enurable_methodsrb) * [Chad Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb)\n* [Artur Janik's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 669,
    "chunk_index": 828,
    "total_chunks": 1224
  },
  {
    "id": "87d1a441f4b022cb989924374ed090da",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enum",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 660,
    "chunk_index": 829,
    "total_chunks": 1224
  },
  {
    "id": "b1032be2f7c690fd844b024d91a2424a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Kreutzer's Solution](https://githubcom/ChadKreutzer/ruby_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Stefan P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb)\n* [Kate McFaul's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 674,
    "chunk_index": 830,
    "total_chunks": 1224
  },
  {
    "id": "e9babefcdb3c9a2ba82246b2bf61b7a1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerables",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 663,
    "chunk_index": 831,
    "total_chunks": 1224
  },
  {
    "id": "d1967f93e6981d9213c877c23e859594",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "P's Solution](https://githubcom/spavikevik/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Raiko's Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb)\n* [Dominik Stodolny's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 679,
    "chunk_index": 832,
    "total_chunks": 1224
  },
  {
    "id": "74e458636263166a1cd7b3197da11b54",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 665,
    "chunk_index": 833,
    "total_chunks": 1224
  },
  {
    "id": "82d71235db3a42db30d24f1c67f357c4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Cypher0/advanced-building-blocks/blob/master/enumerablerb) * [Jamie's Solution](https://githubcom/Jberczel/odin-projects/blob/master/ruby_advanced/project2rb) * [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb)\n* [Chris Dziewa's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 680,
    "chunk_index": 834,
    "total_chunks": 1224
  },
  {
    "id": "d66442a720889b7976676129afbcd464",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 650,
    "chunk_index": 835,
    "total_chunks": 1224
  },
  {
    "id": "80178a3855808f8084be123da8acce1c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Chris Oldakowski's Solution](https://githubcom/krzysieko/theodinproject/blob/master/advanced_ruby_blocks/enumerablerb) * [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb)\n* [Josh Naughton's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 664,
    "chunk_index": 836,
    "total_chunks": 1224
  },
  {
    "id": "ac8d54b27e94b63b1ddc7e19a7bb04bc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 649,
    "chunk_index": 837,
    "total_chunks": 1224
  },
  {
    "id": "286d6d8222826b6408a05fadd51b870b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Marina Sergeyeva's Solution](https://githubcom/imousterian/OdinProject/blob/master/Project2_2_Ruby_AdvancedBlocks/MyEnumerablerb) * [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb)\n* [Jason Matthews' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 661,
    "chunk_index": 838,
    "total_chunks": 1224
  },
  {
    "id": "af0b827e61c71b855c9650aac8f46180",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumerator",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 636,
    "chunk_index": 839,
    "total_chunks": 1224
  },
  {
    "id": "15f107ba3d9101fadb50f8d1cc802660",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Afshin Mafshinator's Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb)\n* [JrodManU's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 650,
    "chunk_index": 840,
    "total_chunks": 1224
  },
  {
    "id": "3975f1e41bc8416d43b1c2a2fe2cf57c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/afshinator/playground/tree/master/Ruby-AdvancedBuildingBlocks) * [Donald's Solution](https://githubcom/donaldali/odin-ruby/tree/master/project_adv_building_blocks) * [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods)\n* [Kevin Mulhern's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 663,
    "chunk_index": 841,
    "total_chunks": 1224
  },
  {
    "id": "49d9f378a9b0234702d79b403f9178ad",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 632,
    "chunk_index": 842,
    "total_chunks": 1224
  },
  {
    "id": "98493681f058a7ed2822b1bba55e1f62",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Alan Russell's Solution](https://githubcom/ajrussellaudio/adv_build_blocks/blob/master/enumerable_methodsrb) * [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb)\n* [Jeremy Mauzy's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 646,
    "chunk_index": 843,
    "total_chunks": 1224
  },
  {
    "id": "5565e245ebe37d032764144d5c792a62",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 638,
    "chunk_index": 844,
    "total_chunks": 1224
  },
  {
    "id": "a8d4d95387feb1d929643fb47d13539e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Sahil Agarwal's Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb)\n* [LongPotato's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 651,
    "chunk_index": 845,
    "total_chunks": 1224
  },
  {
    "id": "8e83d38ffc82379483166fc305fdf4e7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 657,
    "chunk_index": 846,
    "total_chunks": 1224
  },
  {
    "id": "105e276f7823d7bf0fd7850714ac3357",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/sahilda/the_odin_project/tree/master/ruby-advanced-building-blocks) * [TomTom's Solution](https://githubcom/tim5046/projectOdin/blob/master/AdvancedBuildingBlocks/enumerable_methodsrb) * [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb)\n* [Dorian Iacobescu's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 674,
    "chunk_index": 847,
    "total_chunks": 1224
  },
  {
    "id": "d8efa1f4de3f91da4f9b077f44fb50eb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 643,
    "chunk_index": 848,
    "total_chunks": 1224
  },
  {
    "id": "1cf007428b31cc82d21e0534d16d281f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Tommy Noe's Solution](https://githubcom/thomasjnoe/ruby-project-2/blob/master/my_enumerablerb) * [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb)\n* [Sam Padrul's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 657,
    "chunk_index": 849,
    "total_chunks": 1224
  },
  {
    "id": "46f1e412cb0f1e1014623878c44aa6dd",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerables",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 640,
    "chunk_index": 850,
    "total_chunks": 1224
  },
  {
    "id": "6aafc9aec6fcc678c55c37cf477a14f9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Michael Alexander's Solution](https://githubcom/betweenparentheses/project_advanced_bldg_blocks/blob/master/my_enumerablerb) * [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb)\n* [Eleanor Weigert's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 655,
    "chunk_index": 851,
    "total_chunks": 1224
  },
  {
    "id": "6574d9155deb5a125aacb34e3768a8d5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerables",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 646,
    "chunk_index": 852,
    "total_chunks": 1224
  },
  {
    "id": "09fa852e5fdb55fda1ddc223c0bc31e4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [James MacIvor's Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb)\n* [omokoro's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 659,
    "chunk_index": 853,
    "total_chunks": 1224
  },
  {
    "id": "ab5d443ab7f110cc7c6560ca92b663da",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 666,
    "chunk_index": 854,
    "total_chunks": 1224
  },
  {
    "id": "8321957f89d1d74a6d94faf84cf2f9ec",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/RobotOptimist/enumerable) * [Aleksandar's Solution](https://githubcom/rodic/Odin-Ruby-Projects/blob/master/Projects:%20Advanced%20Building%20Blocks/lib/enumrb) * [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb)\n* [Brann James' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 679,
    "chunk_index": 855,
    "total_chunks": 1224
  },
  {
    "id": "2dc8daa3028b141e897343570affe0a4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 645,
    "chunk_index": 856,
    "total_chunks": 1224
  },
  {
    "id": "cca4c348d1277fe451b32703153a3124",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Lara Finnegan's Solution](https://githubcom/lcf0285/Ruby_Building_Blocks/blob/master/enumerable_methodsrb) * [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb)\n* [Eduardo Frias' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 660,
    "chunk_index": 857,
    "total_chunks": 1224
  },
  {
    "id": "45e48b13214f03489ba4e7594622e601",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 647,
    "chunk_index": 858,
    "total_chunks": 1224
  },
  {
    "id": "99b7c967f626cfcfa99b92fb2c106c5b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [John Quarles' Solution](https://githubcom/johnwquarles/Ruby-Advanced-Building-Blocks/blob/master/enumerablerb) * [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb)\n* [Andrej Dragojevic's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 663,
    "chunk_index": 859,
    "total_chunks": 1224
  },
  {
    "id": "5227ccc20efdbf5aae08b66432d9dd2d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumerate",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 657,
    "chunk_index": 860,
    "total_chunks": 1224
  },
  {
    "id": "2ba2c2d3fe33802dc7845d0751cee35c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Jack Nguyen's Solution](http://githubcom/jnguyen85/projects-advanced-building-blocks/blob/master/02_enumerables/enumerablerb) * [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb)\n* [Antonio Augusto's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 671,
    "chunk_index": 861,
    "total_chunks": 1224
  },
  {
    "id": "56786e00937549742b84fc316643976d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Vidul's Solution](https://githubcom/viparthasarathy/enumerable_methods/blob/master/enumerablerb) * [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods)\n* [ll14m4n's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 661,
    "chunk_index": 862,
    "total_chunks": 1224
  },
  {
    "id": "b3c71ba2a99f912130f3ca97ea3c32d3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 659,
    "chunk_index": 863,
    "total_chunks": 1224
  },
  {
    "id": "f51df2eda232219cd95229942537b911",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Hunter Ducharme's Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb)\n* [AtActionParks's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 673,
    "chunk_index": 864,
    "total_chunks": 1224
  },
  {
    "id": "b911994c975d42844cb92f2dc76a14db",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 692,
    "chunk_index": 865,
    "total_chunks": 1224
  },
  {
    "id": "c17ff548e1055d07cb09fbf156a26d6e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/hgducharme/Playground/blob/master/odin_projects/ruby_programming/advanced_building_blocks/enumberable_methodsrb) * [Artur Janik's Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb)\n* [Matias Pan's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 705,
    "chunk_index": 866,
    "total_chunks": 1224
  },
  {
    "id": "a3352d8d347324b080d6e1ad43057b0b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 867,
    "total_chunks": 1224
  },
  {
    "id": "1ee5af11d89047ec549a68cfe89c77ff",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/ArturJanik/TOPRuby/blob/master/Project2/abbproject2/p2-enumrb) * [Kate McFaul's Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb)\n* [Richard Stewart's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 696,
    "chunk_index": 868,
    "total_chunks": 1224
  },
  {
    "id": "468bfddb9e2f77671757917bdfcc1651",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/craftykate/odin-project/blob/master/Chapter_03-Advanced_Ruby/advanced_building_blocks/enumerablesrb) * [Dominik Stodolny's Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks)\n* [Mark Viola's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 685,
    "chunk_index": 869,
    "total_chunks": 1224
  },
  {
    "id": "b90919e53e7fcbcd825f8559a79cf09f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 677,
    "chunk_index": 870,
    "total_chunks": 1224
  },
  {
    "id": "92af725ce78d415041fae1d2e770488a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/dstodolny/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Chris Dziewa's Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb)\n* [Dan Hoying's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 690,
    "chunk_index": 871,
    "total_chunks": 1224
  },
  {
    "id": "2163e8d037b75425599a75e9a8c0c309",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 673,
    "chunk_index": 872,
    "total_chunks": 1224
  },
  {
    "id": "c8b491efbf024a76f43f10281b63b574",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/chrisdziewa/advanced-building-blocks/blob/master/enumerable/my_enumerablerb) * [Josh Naughton's Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb)\n* [Joe Balsamo's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 687,
    "chunk_index": 873,
    "total_chunks": 1224
  },
  {
    "id": "1469c6b0b4acdc0f5950aabae4e8a630",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 670,
    "chunk_index": 874,
    "total_chunks": 1224
  },
  {
    "id": "e34875ad7d780258f4fc88383d36f749",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/ThothLogos/odin-rubyprogramming/blob/master/05_enumerable_methodsrb) * [Jason Matthews' Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb)\n* [Cody Gipson's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 685,
    "chunk_index": 875,
    "total_chunks": 1224
  },
  {
    "id": "db7534397ba8a62e4e001fb9e2648289",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 669,
    "chunk_index": 876,
    "total_chunks": 1224
  },
  {
    "id": "855c09f09bc8f6016f71f90589c1090b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/fo0man/advanced_building_blocks/blob/master/enumeratorrb) * [JrodManU's Solution](https://githubcom/JrodManU/enumerable-methods) * [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb)\n* [Glenn Crosby's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 682,
    "chunk_index": 877,
    "total_chunks": 1224
  },
  {
    "id": "34b76bf734b90f1bc481710c20443c15",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 668,
    "chunk_index": 878,
    "total_chunks": 1224
  },
  {
    "id": "18f90574c8dfacbc44659f1b18f8481d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Kevin Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb)\n* [M",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 674,
    "chunk_index": 879,
    "total_chunks": 1224
  },
  {
    "id": "15c88cea09615d6a9eb142da2fe21e2d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Mulhern's Solution](https://githubcom/KevinMulhern/advanced_building_blocks/blob/master/enumerablerb) * [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 680,
    "chunk_index": 880,
    "total_chunks": 1224
  },
  {
    "id": "15d3e8b24a25f6c219b0c662f14134ed",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 674,
    "chunk_index": 881,
    "total_chunks": 1224
  },
  {
    "id": "438f4c5c22da5d20a6f9113d5913fedd",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Jeremy Mauzy's Solution](https://githubcom/apositivejam/the_odin_project/blob/master/ruby_building_blocks_assignments/enumerable_methodsrb) * [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb)\n* [Miguel Oliveira's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 688,
    "chunk_index": 882,
    "total_chunks": 1224
  },
  {
    "id": "5b485a0734c483c090feae2197a787df",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [LongPotato's Solution](https://githubcom/LongPotato/Ruby_Building_Blocks/blob/master/Enumerablerb) * [Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables)\n* [Xavier Reid's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 687,
    "chunk_index": 883,
    "total_chunks": 1224
  },
  {
    "id": "46f9cc5e6e157f3240c5bf26f23fb94a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumerator",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 669,
    "chunk_index": 884,
    "total_chunks": 1224
  },
  {
    "id": "b009747eeadfb66c1bf030450f0e0681",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Dorian Iacobescu's Solution](https://githubcom/iacobson/Odin8-Ruby-Advanced-Building_Blocks/blob/master/enumerable_methodsrb) * [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb)\n* [Gb69010p's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 683,
    "chunk_index": 885,
    "total_chunks": 1224
  },
  {
    "id": "164eef615cf9d47bb36ab85befe8f66f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 664,
    "chunk_index": 886,
    "total_chunks": 1224
  },
  {
    "id": "f2999704e99dee79f3a9f1a067e8eb00",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Sam Padrul's Solution](https://githubcom/sampadrul/Ruby-Projects/blob/master/enumerablesrb) * [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb)\n* [Alex Chen's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 677,
    "chunk_index": 887,
    "total_chunks": 1224
  },
  {
    "id": "5bb28bce7c072b52a2ed1f305be831e1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerables",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 663,
    "chunk_index": 888,
    "total_chunks": 1224
  },
  {
    "id": "1b9478c865fbee54e7d183ab1f287eb5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Eleanor Weigert's Solution](https://githubcom/mixophrygian/Ruby-Building-Blocks/blob/master/my_enumerablesrb) * [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb)\n* [John Tobillo's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 676,
    "chunk_index": 889,
    "total_chunks": 1224
  },
  {
    "id": "1dd574430563985bd1aeec16d932f901",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [omokoro's Solution](https://githubcom/omokoro/advanced_building_blocks/blob/master/enumberablerb) * [Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable)\n* [Jason Symons' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 667,
    "chunk_index": 890,
    "total_chunks": 1224
  },
  {
    "id": "6256d1c1d39656e464021973f10fa17c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 665,
    "chunk_index": 891,
    "total_chunks": 1224
  },
  {
    "id": "4d8ff397ac76e37d7a40e3656e3596d1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Brann James' Solution](https://githubcom/brannj/The_Odin_Project/blob/master/Advanced_Building_Blocks/enumerable_methodsrb) * [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb)\n* [PiotrAleksander's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 681,
    "chunk_index": 892,
    "total_chunks": 1224
  },
  {
    "id": "2cac154455584505cc547ecb1a28a7f5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 661,
    "chunk_index": 893,
    "total_chunks": 1224
  },
  {
    "id": "ccfa00b2548aed51541d43b376160081",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Eduardo Frias' Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb)\n* [AnthonyL's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 674,
    "chunk_index": 894,
    "total_chunks": 1224
  },
  {
    "id": "6e594d1ddf8c312d36e2769e41f66b3b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 682,
    "chunk_index": 895,
    "total_chunks": 1224
  },
  {
    "id": "78a978d4afe72b58d7254ab7a206fd2d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/feek1g/theodinproject/blob/master/rubyChallenge/enumerablerb) * [Andrej Dragojevic's Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb)\n* [Angus Dobson's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 696,
    "chunk_index": 896,
    "total_chunks": 1224
  },
  {
    "id": "35880e3636bc7562d1f7a00c0794134a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 676,
    "chunk_index": 897,
    "total_chunks": 1224
  },
  {
    "id": "90259e3bee6eac3e20c59fb493d5d419",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/antrix1/The-Odin-Project/blob/master/Ruby%20Programming/Advanced%20Building%20Blocks/enumeraterb) * [Antonio Augusto's Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb)\n* [Panashe Fundira's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 691,
    "chunk_index": 898,
    "total_chunks": 1224
  },
  {
    "id": "47c28fa406510ba467464b26918ee998",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 663,
    "chunk_index": 899,
    "total_chunks": 1224
  },
  {
    "id": "99872d3b4f482e552a0de135b1225559",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/antoniosb/enumerable_methods) * [ll14m4n's Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb)\n* [pwdd's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 675,
    "chunk_index": 900,
    "total_chunks": 1224
  },
  {
    "id": "575a83b66c280e44109e8d80a4b9ae19",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerables",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 668,
    "chunk_index": 901,
    "total_chunks": 1224
  },
  {
    "id": "969ca2de6f5b1cb4dbcd850a137e9870",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/ll14m4n/the-odin-project/blob/master/3_Ruby_building-blocks/lib/my_enumerablerb) * [AtActionParks's Solution](https://githubcom/AtActionPark/odin-ruby-advanced-building-blocks/blob/master/Enumerable_methods/lib/enumerable_methodsrb) * [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb)\n* [Paweł Cichoń Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 683,
    "chunk_index": 902,
    "total_chunks": 1224
  },
  {
    "id": "a68f418aea3aa126af294a10cade7f11",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 629,
    "chunk_index": 903,
    "total_chunks": 1224
  },
  {
    "id": "e40cc64f7c0f733594908fedbee70e76",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Matias Pan's Solution](https://githubcom/kriox26/odin_ruby/blob/master/ruby_building_blocks/enumerable_methodsrb) * [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb)\n* [Noah Prescott's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 642,
    "chunk_index": 904,
    "total_chunks": 1224
  },
  {
    "id": "26613addc95f2cba90117e51e83b343c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 624,
    "chunk_index": 905,
    "total_chunks": 1224
  },
  {
    "id": "c53bc9206384ad4354a2f036483c4ddc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Richard Stewart's Solution](https://githubcom/rickstewart/Ruby_Advanced_Building_Blocks) * [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb)\n* [Florian Mainguy's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 639,
    "chunk_index": 906,
    "total_chunks": 1224
  },
  {
    "id": "290a1b4cf28417046c097f1d1bd7775e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 637,
    "chunk_index": 907,
    "total_chunks": 1224
  },
  {
    "id": "1b871d274b046e593decd121e966e96c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Mark Viola's Solution](https://githubcom/markviola/the-odin-project/blob/master/7-more-ruby-problems-2/2%20-%20Enumerable%20Methods/enumerable_methodsrb) * [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb)\n* [Aviv levinsky's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 651,
    "chunk_index": 908,
    "total_chunks": 1224
  },
  {
    "id": "9bfcfb6efc3b8f542e811225df227f82",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 623,
    "chunk_index": 909,
    "total_chunks": 1224
  },
  {
    "id": "8102f5c084ab81a082b4c88d4311b4ef",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Dan Hoying's Solution](https://githubcom/danhoying/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb)\n* [Alex Tsiras' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 636,
    "chunk_index": 910,
    "total_chunks": 1224
  },
  {
    "id": "d6bcf5bd09dddace418e5f08535137b9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 911,
    "total_chunks": 1224
  },
  {
    "id": "cbd033afd31759415e40f080b0f4dc47",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Joe Balsamo's Solution](https://githubcom/Joe-Balsamo/ruby_advanced_building_blocks/blob/master/enumerable_methodsrb) * [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb)\n* [Maciej Panasiewicz's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 643,
    "chunk_index": 912,
    "total_chunks": 1224
  },
  {
    "id": "d6220fb7f981538260efdce831adbaa4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 631,
    "chunk_index": 913,
    "total_chunks": 1224
  },
  {
    "id": "ec106669503092c3aec890fd670dcf0f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Cody Gipson's Solution](https://githubcom/Cgipson06/ruby-bubble-sort/blob/master/enumerablerb) * [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb)\n* [Giorgos Mitsis's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 646,
    "chunk_index": 914,
    "total_chunks": 1224
  },
  {
    "id": "08e512e79f32b4b64a03e6b540ebab99",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 632,
    "chunk_index": 915,
    "total_chunks": 1224
  },
  {
    "id": "eb8b2fe556d1e6227e7f7b83a14bc121",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Glenn Crosby's Solution](https://githubcom/glennc15/TheOdinProject_Assignments/blob/master/03_RubyProgramming/02_Project_AdvancedBuildingBlocks/MyEnumerablerb) * [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb)\n* [Theoderik Trajanson's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 648,
    "chunk_index": 916,
    "total_chunks": 1224
  },
  {
    "id": "3c484d1cce6ab0b0114df6e9cdffefd9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerables",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 617,
    "chunk_index": 917,
    "total_chunks": 1224
  },
  {
    "id": "4aa0990b5b564132769208484bb533b8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [MEdgar Joel's Solution](https://githubcom/edgar-/odin-project-solutions/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb)\n* [Sander Schepens's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 632,
    "chunk_index": 918,
    "total_chunks": 1224
  },
  {
    "id": "fb6815d87e0731fd34d81f36ecbe30a4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinproject",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 608,
    "chunk_index": 919,
    "total_chunks": 1224
  },
  {
    "id": "c7465252d7ce7e1fc2b8bee9c31e5cb9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 622,
    "chunk_index": 920,
    "total_chunks": 1224
  },
  {
    "id": "0818f1bb8715e5ea15680227ea599e1c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Miguel Oliveira's Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb)\n* [srashidi's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 635,
    "chunk_index": 921,
    "total_chunks": 1224
  },
  {
    "id": "6c0ca2da675fbb30ebab1420756a674e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 649,
    "chunk_index": 922,
    "total_chunks": 1224
  },
  {
    "id": "eb538f0ef4c385e0c528c33a29ae4019",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Powerade/The-Odin-Project/tree/master/Ruby%20Programming%20Projects/Enumerables) * [Xavier Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb)\n* [Eric's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 661,
    "chunk_index": 923,
    "total_chunks": 1224
  },
  {
    "id": "d0772cd8a56bc6d01a664b5ce710f77e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 641,
    "chunk_index": 924,
    "total_chunks": 1224
  },
  {
    "id": "e8e5607246bfd03f4003136089dbc8c1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Reid's Solution](https://githubcom/xreid/ruby_building_blocks/blob/master/src/enumeratorrb) * [Gb69010p's Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb)\n* [Dave Meister's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 654,
    "chunk_index": 925,
    "total_chunks": 1224
  },
  {
    "id": "cac11a1039735aaa34ffb026765f9d39",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 648,
    "chunk_index": 926,
    "total_chunks": 1224
  },
  {
    "id": "4eb61c30d1662646ec6eb723c4af153a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/gb69010p/AdvancedRubyBuildingBlocks/blob/master/My_Enumerablerb) * [Alex Chen's Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb)\n* [Andrew Park's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 660,
    "chunk_index": 927,
    "total_chunks": 1224
  },
  {
    "id": "2544d49f536459d3ec6302d00299f554",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 649,
    "chunk_index": 928,
    "total_chunks": 1224
  },
  {
    "id": "083e4c8acdc44033033c6526127d59bc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Chenzilla/ruby_building_blocks/blob/master/enumerablesrb) * [John Tobillo's Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb)\n* [Austin Mason's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 661,
    "chunk_index": 929,
    "total_chunks": 1224
  },
  {
    "id": "8d468d441e0df74e91726f4dc4ff03ee",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extension",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 652,
    "chunk_index": 930,
    "total_chunks": 1224
  },
  {
    "id": "30ad50e2e9b186393fab1697e20fb66b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/jdtobill/Ruby/tree/master/challenges/enumerable) * [Jason Symons' Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb)\n* [James Brooks's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 664,
    "chunk_index": 931,
    "total_chunks": 1224
  },
  {
    "id": "f070d3e89379e726601bcf29f5d3cb09",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/jsymons/the-odin-project/blob/master/03_ruby_programming/advanced-building-blocks/enumerable_methodsrb) * [PiotrAleksander's Solution](https://githubcom/PiotrAleksander/Ruby/blob/master/Enumerablerb) * [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable)\n* [Ricardo Villegas' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 662,
    "chunk_index": 932,
    "total_chunks": 1224
  },
  {
    "id": "8d826423545814b17760ec35358eb7e7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerables",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 614,
    "chunk_index": 933,
    "total_chunks": 1224
  },
  {
    "id": "0200c9522092341afcc30ac7fea5af2d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [AnthonyL's Solution](https://githubcom/AnthonyLarios/adv-building-blocks/blob/master/enumerable_methodsrb) * [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb)\n* [cdouglass's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 934,
    "total_chunks": 1224
  },
  {
    "id": "441419663cffaf3b353256f11e241301",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Angus Dobson's Solution](https://githubcom/Apneal/ruby_building_blocks/blob/master/enumerablerb) * [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods)\n* [Skye Free's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 635,
    "chunk_index": 935,
    "total_chunks": 1224
  },
  {
    "id": "8166b04a2e59be82534d0c68178ac331",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 626,
    "chunk_index": 936,
    "total_chunks": 1224
  },
  {
    "id": "25bb274916c19c4b01a5fee9f2e215c7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Panashe Fundira's Solution](https://githubcom/munyari/adv_building_blocks/blob/master/enum_methodsrb) * [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb)\n* [Dominik Chomicki's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 642,
    "chunk_index": 937,
    "total_chunks": 1224
  },
  {
    "id": "4e20ae2f2c2cd1fbbbf0dcc9cf0d9c30",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 628,
    "chunk_index": 938,
    "total_chunks": 1224
  },
  {
    "id": "34b9d3b7de0791f2396be4fce4d4c095",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [pwdd's Solution](https://githubcom/pwdd/odinproject/blob/master/ruby_training/enumerablesrb) * [Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb)\n* [Corey Kazaks' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 642,
    "chunk_index": 939,
    "total_chunks": 1224
  },
  {
    "id": "22fecfed828d32d630ebd8c37cea7c86",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 940,
    "total_chunks": 1224
  },
  {
    "id": "bf00fe417d788acf1260e626f90d2d01",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Paweł Cichoń Solution](https://githubcom/beovulf/bubble_sort_and_enumerable_methods/blob/master/enumerable_methodsrb) * [Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb)\n* [Miguel Herrera's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 641,
    "chunk_index": 941,
    "total_chunks": 1224
  },
  {
    "id": "69adcdc9a3a904daf30fefd70197b24c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerables",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 622,
    "chunk_index": 942,
    "total_chunks": 1224
  },
  {
    "id": "4cc536fbc913b1d2f0dd32e82a6d8c0c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Noah Prescott's Solution](https://githubcom/npresco/top/blob/master/ruby_advanced_building_blocks/enumerablerb) * [Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb)\n* [Matt Leininger's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 636,
    "chunk_index": 943,
    "total_chunks": 1224
  },
  {
    "id": "31dfca39bd5a395177a2e738e213bced",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerables",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 626,
    "chunk_index": 944,
    "total_chunks": 1224
  },
  {
    "id": "e62f926facf585ef3b68e7839cf8fe56",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Florian Mainguy's Solution](https://githubcom/florianmainguy/theodinproject/blob/master/ruby/advanced-building-blocks/enumerablerb) * [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb)\n* [Peuchen's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 638,
    "chunk_index": 945,
    "total_chunks": 1224
  },
  {
    "id": "87c7c8c57ec6175f28ef2ef55d982a84",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 616,
    "chunk_index": 946,
    "total_chunks": 1224
  },
  {
    "id": "e50d769e64ff3d8145e41c3d5e058d9b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Aviv levinsky's Solution](https://githubcom/pugsiman/Ruby_challenges_and_projects/blob/master/Enumerable_Methods/enumerablerb) * [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb)\n* [Andrew Johnson's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 628,
    "chunk_index": 947,
    "total_chunks": 1224
  },
  {
    "id": "719e1e47388de0380450652996863795",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumeration",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 609,
    "chunk_index": 948,
    "total_chunks": 1224
  },
  {
    "id": "cc1878b40095fe84674f2e67006658fc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Alex Tsiras' Solution](https://githubcom/arialblack14/ruby-programming/blob/master/enumerable-methods/enumerablerb) * [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb)\n* [Bartlomiej Lazarski's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 949,
    "total_chunks": 1224
  },
  {
    "id": "f3d2a66821ec0b2428faee9b985289ff",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 610,
    "chunk_index": 950,
    "total_chunks": 1224
  },
  {
    "id": "64c550d08d9f6e2e5ebcc66f93f3c854",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Maciej Panasiewicz's Solution](https://githubcom/Grunthor/TheOdinProject/blob/master/project_advenced_building_blocks/EnumerableMethodsrb) * [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb)\n* [Maia Petee's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 624,
    "chunk_index": 951,
    "total_chunks": 1224
  },
  {
    "id": "b3a02437bd47924e4b1184634265a254",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 607,
    "chunk_index": 952,
    "total_chunks": 1224
  },
  {
    "id": "a63d133e556d2de88355c656cef7cc3c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Giorgos Mitsis's Solution](https://githubcom/vinPopulaire/ruby-building-blocks-project/blob/master/enumerable_methodsrb) * [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb)\n* [Francisco Carlos's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 620,
    "chunk_index": 953,
    "total_chunks": 1224
  },
  {
    "id": "9a9585d2f56f52df98df59782ef15bce",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 606,
    "chunk_index": 954,
    "total_chunks": 1224
  },
  {
    "id": "6c4fd788a623873f4f1ec78273b919df",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Theoderik Trajanson's Solution](https://githubcom/Theoderik/education/blob/master/MyEnumerablesrb) * [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb)\n* [Luke Walker's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 618,
    "chunk_index": 955,
    "total_chunks": 1224
  },
  {
    "id": "3ba9718d8b66ee9da2dcfcd565dd5e7a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 605,
    "chunk_index": 956,
    "total_chunks": 1224
  },
  {
    "id": "aa580e9037994d2a13ff7ce52b3fc229",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Sander Schepens's Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb)\n* [Noobling's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 618,
    "chunk_index": 957,
    "total_chunks": 1224
  },
  {
    "id": "792dc5cb83b9e8576d02ecc265ecb9c8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerables",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 958,
    "total_chunks": 1224
  },
  {
    "id": "1e8b8dabee8def2a9ce72e558a140f97",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/schepens83/theodinprojectcom/blob/master/ruby/project5--Enumerable-methods/enumerablerb) * [srashidi's Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb)\n* [TheBetterNewt's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 641,
    "chunk_index": 959,
    "total_chunks": 1224
  },
  {
    "id": "0818dea8fbdd26789cb213881993ccc8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 619,
    "chunk_index": 960,
    "total_chunks": 1224
  },
  {
    "id": "09203fe4ffa919fc46eae15995fa2e0e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/srashidi/Ruby_Building_Blocks/blob/master/My_Enumerable/My_Enumerablerb) * [Eric's Solution](https://githubcom/em77/enumerable/blob/master/enumerablerb) * [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb)\n* [Max Gallant's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 632,
    "chunk_index": 961,
    "total_chunks": 1224
  },
  {
    "id": "ff8ccc1d38b3604913cba7a9ab741794",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enums",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 597,
    "chunk_index": 962,
    "total_chunks": 1224
  },
  {
    "id": "3fa3a1a213f409894e49b07091c984e1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Dave Meister's Solution](https://githubcom/misterdavemeister/theodinproject/blob/master/advanced_building_blocks/enumerable/my_enumerablerb) * [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb)\n* [Jean Merlet's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 610,
    "chunk_index": 963,
    "total_chunks": 1224
  },
  {
    "id": "56c9d6ebde44ffd2208410208f42041c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 590,
    "chunk_index": 964,
    "total_chunks": 1224
  },
  {
    "id": "1d102cc18e3e46555499aa49725325cf",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Andrew Park's Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb)\n* [parhaml's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 603,
    "chunk_index": 965,
    "total_chunks": 1224
  },
  {
    "id": "e71747bfb86c68759a4b04faffdcd72f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerables",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 611,
    "chunk_index": 966,
    "total_chunks": 1224
  },
  {
    "id": "a5e97c77c1222449af6772b4483c6066",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/akpark93/the_odin_project/blob/master/ruby_programming_projects/enumerablerb) * [Austin Mason's Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb)\n* [Zac Conner's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 625,
    "chunk_index": 967,
    "total_chunks": 1224
  },
  {
    "id": "e166bf3d2d01fc3c9a409b08be7353c0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 605,
    "chunk_index": 968,
    "total_chunks": 1224
  },
  {
    "id": "9489bd8cc43c4fc242b1605f8ff3a2da",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/CouchofTomato/ruby_advanced_building_blocks/blob/master/enumerable_extensionrb) * [James Brooks's Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb)\n* [Vivek Kumar's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 620,
    "chunk_index": 969,
    "total_chunks": 1224
  },
  {
    "id": "868b9c988183972024aecf7111dd482d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 606,
    "chunk_index": 970,
    "total_chunks": 1224
  },
  {
    "id": "2e26bd2a5472a3cbc5423ad9fe1b6bf7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/jhbrooks/my-enumerable) * [Ricardo Villegas' Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb)\n* [Johnny Rasnic's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 619,
    "chunk_index": 971,
    "total_chunks": 1224
  },
  {
    "id": "2db46a93f70fdda3c4e980009ad60211",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/claricardo/RubyBuildingBlocks/blob/master/my_enumerablesrb) * [cdouglass's Solution](https://githubcom/cdouglass/odin-project-exercises/tree/master/ruby/advanced-building-blocks/enumerable_methods) * [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced)\n* [Fabricio Carrara's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 639,
    "chunk_index": 972,
    "total_chunks": 1224
  },
  {
    "id": "7d1c2293a40bfc2c5b44d75e2ed8a772",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 596,
    "chunk_index": 973,
    "total_chunks": 1224
  },
  {
    "id": "ea53a98cc65bcf4c232c193dcb191d81",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Skye Free's Solution](https://githubcom/swfree/the-odin-project/blob/master/enumerable-methods/enumerable_methodsrb) * [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb)\n* [Omar Cagua's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 610,
    "chunk_index": 974,
    "total_chunks": 1224
  },
  {
    "id": "4e3925328b3ba5ae762d4edc3bd54e60",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 593,
    "chunk_index": 975,
    "total_chunks": 1224
  },
  {
    "id": "f2502d8ae9aeedfb5041e24eb88c28a4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Dominik Chomicki's Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb)\n* [Deepak's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 605,
    "chunk_index": 976,
    "total_chunks": 1224
  },
  {
    "id": "f226b466750e213a93ea25a010a55baf",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 612,
    "chunk_index": 977,
    "total_chunks": 1224
  },
  {
    "id": "646e42ea56acac6074fa0a63edc8e940",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/hamstersky/ruby_building_blocks/blob/master/enumerable_methodsrb) * [Corey Kazaks' Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb)\n* [Lani Huang's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 625,
    "chunk_index": 978,
    "total_chunks": 1224
  },
  {
    "id": "f901e40683a3025946d1360aeff04a97",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 621,
    "chunk_index": 979,
    "total_chunks": 1224
  },
  {
    "id": "187dbb525c4ab37ff6b6153a62e0dc51",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/ck626/project_ruby_advanced_building_blocks/blob/master/enum_methodsrb) * [Miguel Herrera's Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb)\n* [Anthony Vumbaca's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 635,
    "chunk_index": 980,
    "total_chunks": 1224
  },
  {
    "id": "bccde6cfbff1b5a1c28429ea3f7c8672",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 625,
    "chunk_index": 981,
    "total_chunks": 1224
  },
  {
    "id": "8896747b1bcc8d0b6544b912e5df351c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/migueloherrera/projects/blob/master/enumerablesrb) * [Matt Leininger's Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb)\n* [Shala Qweghen's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 640,
    "chunk_index": 982,
    "total_chunks": 1224
  },
  {
    "id": "e59bbc86d46aa092f4be99317d2b1927",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 629,
    "chunk_index": 983,
    "total_chunks": 1224
  },
  {
    "id": "08790156420a6691fb2d1fe14fbe586b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/pilauPro/the-odin-project/blob/master/enumerables/enumerablesrb) * [Peuchen's Solution](https://githubcom/Peuchen/advanced-building-blocks/blob/master/enumerablerb) * [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb)\n* [John Connor's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 641,
    "chunk_index": 984,
    "total_chunks": 1224
  },
  {
    "id": "8191499bfc26b172e8f8f655a16cba1b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Andrew Johnson's Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods)\n* [Earth35's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 610,
    "chunk_index": 985,
    "total_chunks": 1224
  },
  {
    "id": "263fa3386d23f90d73c04f37cd7bbbf2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuilt",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 622,
    "chunk_index": 986,
    "total_chunks": 1224
  },
  {
    "id": "caa3381e152393ea6ff1686bc3044ac9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/ad-johnson/basic-ruby/blob/master/src/enumerationrb) * [Bartlomiej Lazarski's Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb)\n* [Kelvin Stone's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 636,
    "chunk_index": 987,
    "total_chunks": 1224
  },
  {
    "id": "e667e37a7b67436af353a6fd8b9bd924",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 617,
    "chunk_index": 988,
    "total_chunks": 1224
  },
  {
    "id": "b880121c7f199c71160d5adc4dc53e41",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/YogAzathoth/buildingRubyBlocks/blob/master/enumerablerb) * [Maia Petee's Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb)\n* [Ricardo Ferreira's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 632,
    "chunk_index": 989,
    "total_chunks": 1224
  },
  {
    "id": "338a9f4c63f83c97c744d92b3cdac01f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 616,
    "chunk_index": 990,
    "total_chunks": 1224
  },
  {
    "id": "eab04efec72e0aa2b6480e0172466de5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/movetomars/Advanced-Building-Blocks/blob/master/enumerablerb) * [Francisco Carlos's Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb)\n* [Michael Sotkin's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 630,
    "chunk_index": 991,
    "total_chunks": 1224
  },
  {
    "id": "7b1dd767fa86fc5e3e82e00320ee0153",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 612,
    "chunk_index": 992,
    "total_chunks": 1224
  },
  {
    "id": "f4efc3be57b75e4371bf536a23386acb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/fcarlosdev/the_odin_project/blob/master/advanced_blocks/enumerable_methodsrb) * [Luke Walker's Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb)\n* [Joshua Hipple's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 626,
    "chunk_index": 993,
    "total_chunks": 1224
  },
  {
    "id": "92a6ecbf7e4145073113a45748aeca82",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 607,
    "chunk_index": 994,
    "total_chunks": 1224
  },
  {
    "id": "0146eb9557c4ac055b9a59a3388e63c6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/ubershibs/ruby-programming/blob/master/enumerablerb) * [Noobling's Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb)\n* [Oscar Y",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 614,
    "chunk_index": 995,
    "total_chunks": 1224
  },
  {
    "id": "8991f31a502c16d27cd781a7e7cb0c23",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/noobling/ruby/blob/master/advanced_buidling_blocks/enumerablesrb) * [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 592,
    "chunk_index": 996,
    "total_chunks": 1224
  },
  {
    "id": "0eb62be1444af69b73e19535c9b139e4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 581,
    "chunk_index": 997,
    "total_chunks": 1224
  },
  {
    "id": "9e1d587f25398b95621eaaf2f31db49d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [TheBetterNewt's Solution](https://githubcom/thebetternewt/my-enumerable/blob/master/my-enumerablerb) * [Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb)\n* [Shawn Stovall's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 597,
    "chunk_index": 998,
    "total_chunks": 1224
  },
  {
    "id": "c5a15a2f952409c5d3dcb8675eaba85c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 584,
    "chunk_index": 999,
    "total_chunks": 1224
  },
  {
    "id": "26d9a5a88629c04e012e01f823a3fbea",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Max Gallant's Solution](https://githubcom/mcgalcode/Ruby/blob/master/AdvancedBlocksProject/my_enumsrb) * [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb)\n* [Luchillo's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 597,
    "chunk_index": 1000,
    "total_chunks": 1224
  },
  {
    "id": "e5f0eb8c4ecbaabc305cd104f7f5f3c9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 592,
    "chunk_index": 1001,
    "total_chunks": 1224
  },
  {
    "id": "ef9406f5699960d68f693539edb62010",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Jean Merlet's Solution](https://githubcom/jeanmerlet/ruby_misc/blob/master/building_blocks/enumerablerb) * [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb)\n* [Adam Graham's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 604,
    "chunk_index": 1002,
    "total_chunks": 1224
  },
  {
    "id": "ac3f3a8a5ac19952cefea2385a1fc772",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_module",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 587,
    "chunk_index": 1003,
    "total_chunks": 1224
  },
  {
    "id": "daa7efddb428575134e9f8a196c0a246",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [parhaml's Solution](https://githubcom/parhaml/enumerables/blob/master/enumerablesrb) * [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb)\n* [Rahul's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 601,
    "chunk_index": 1004,
    "total_chunks": 1224
  },
  {
    "id": "f2183ded2ffc2cc52d11208662222ddf",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 594,
    "chunk_index": 1005,
    "total_chunks": 1224
  },
  {
    "id": "5d662a7b491a0cb5420c9eb49145af70",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Zac Conner's Solution](https://githubcom/connerza/BuildingBlocks/blob/master/Enumerablerb) * [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb)\n* [Jiazhi Guo's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 609,
    "chunk_index": 1006,
    "total_chunks": 1224
  },
  {
    "id": "f5d25eb2c5d258411d1e26a962233f51",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 599,
    "chunk_index": 1007,
    "total_chunks": 1224
  },
  {
    "id": "d6366d1c49bed6fe625b04f469fb94dc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Vivek Kumar's Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb)\n* [Clint's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 611,
    "chunk_index": 1008,
    "total_chunks": 1224
  },
  {
    "id": "d3dbb12239b45110f8bf44c4117c371f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 626,
    "chunk_index": 1009,
    "total_chunks": 1224
  },
  {
    "id": "0c2f939db35ec9572731755ba109d165",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/myjoytou/theOdinProject/blob/master/ruby/enumerablerb) * [Johnny Rasnic's Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb)\n* [Manu Phatak's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 640,
    "chunk_index": 1010,
    "total_chunks": 1224
  },
  {
    "id": "3f7075d69d57e41624df1e92b5d09b00",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 628,
    "chunk_index": 1011,
    "total_chunks": 1224
  },
  {
    "id": "a61be7767f21742f54beb74d7adc3d67",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/lonniganseaweed/the-odin-project-solutions/tree/master/3:%20Ruby%20Programming/ruby-exercises-advanced) * [Fabricio Carrara's Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb)\n* [Cody Buffaloe's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 643,
    "chunk_index": 1012,
    "total_chunks": 1224
  },
  {
    "id": "26926dd7c0a832c7d4d7c4ca641aa9a5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 616,
    "chunk_index": 1013,
    "total_chunks": 1224
  },
  {
    "id": "1cd3de04a7e3eb783156053f071e0dda",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/fcarrara/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Omar Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb)\n* [J-kaizen's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 630,
    "chunk_index": 1014,
    "total_chunks": 1224
  },
  {
    "id": "32bb507ac184c3a56d156f109b5398a9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 625,
    "chunk_index": 1015,
    "total_chunks": 1224
  },
  {
    "id": "235b563bc2983a390c8d88507fc87760",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Cagua's Solution](https://githubcom/OmarTGc/enumerable_methods/blob/master/enumerable_methodsrb) * [Deepak's Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb)\n* [Max Platt's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 637,
    "chunk_index": 1016,
    "total_chunks": 1224
  },
  {
    "id": "354b838583557064b8eafc986822b936",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 622,
    "chunk_index": 1017,
    "total_chunks": 1224
  },
  {
    "id": "1c1c1f02a2d12c386b1e0c4453316ecc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Deepak5050/advanced_building_blocks/blob/master/my_enumerablerb) * [Lani Huang's Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb)\n* [Roy Chen's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 634,
    "chunk_index": 1018,
    "total_chunks": 1224
  },
  {
    "id": "af27e38f9d99bcdfde7e2aa0c3565b35",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enum",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 625,
    "chunk_index": 1019,
    "total_chunks": 1224
  },
  {
    "id": "8ff0bdb50a520f8948f0a3a7222a52df",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/laniywh/the-odin-project/blob/master/ruby-programming/advanced-building-blocks/my_enumerablerb) * [Anthony Vumbaca's Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb)\n* [Piotr Ejsmont's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 641,
    "chunk_index": 1020,
    "total_chunks": 1224
  },
  {
    "id": "25e6d284966c4d2fe83fb291357e2d53",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 617,
    "chunk_index": 1021,
    "total_chunks": 1224
  },
  {
    "id": "23abdd6076d22a356eca662d8c357a7e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/tvumbaca/Ruby_Advanced_Building_Blocks/blob/master/my_enumerablerb) * [Shala Qweghen's Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb)\n* [Chris Chambers' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 629,
    "chunk_index": 1022,
    "total_chunks": 1224
  },
  {
    "id": "f279a3ccb08ed669098f8dd9ec0b2285",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/ShalaQweghen/advanced_building_blocks/blob/master/enumerable_methodsrb) * [John Connor's Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable)\n* [Loris Aranda's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 626,
    "chunk_index": 1023,
    "total_chunks": 1224
  },
  {
    "id": "c09cd44ddd21a941f6e9ca29d7568497",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 612,
    "chunk_index": 1024,
    "total_chunks": 1224
  },
  {
    "id": "27aacfb72b948f3afacd13aee8e69c10",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/jacgitcz/enumeration_methods) * [Earth35's Solution](https://githubcom/Earth35/basic_ruby_projects_II/blob/master/enumerables_rebuiltrb) * [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb)\n* [Jack Deegan's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 625,
    "chunk_index": 1025,
    "total_chunks": 1224
  },
  {
    "id": "d24c4122fba67fdfff75c6ae5f49c589",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 604,
    "chunk_index": 1026,
    "total_chunks": 1224
  },
  {
    "id": "f41fb240f02d70e0288b9ac741abbe8b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Kelvin Stone's Solution](https://githubcom/KelvinStone/enumerable/blob/master/enumerablerb) * [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb)\n* [Jakub Peikert's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 619,
    "chunk_index": 1027,
    "total_chunks": 1224
  },
  {
    "id": "8a426c2c71ad6cae853629cef3a22360",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 616,
    "chunk_index": 1028,
    "total_chunks": 1224
  },
  {
    "id": "5de31d543980027ca792e83549e9300a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Ricardo Ferreira's Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb)\n* [HenrytheDJ's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 629,
    "chunk_index": 1029,
    "total_chunks": 1224
  },
  {
    "id": "b220ce726f63cd9d0d170465a485c7ab",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/RMF2PT/ruby_programming/blob/master/my_methodsrb) * [Michael Sotkin's Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble)\n* [Derek Kwong's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 644,
    "chunk_index": 1030,
    "total_chunks": 1224
  },
  {
    "id": "90a9e2bd1a31b97a1fd902c880a5f867",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 631,
    "chunk_index": 1031,
    "total_chunks": 1224
  },
  {
    "id": "795ffa53842449f0760e81b6ede96e6a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/msotkin/advanced_building_blocks/blob/master/enumerablerb) * [Joshua Hipple's Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb)\n* [Sergey Badulin's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 646,
    "chunk_index": 1032,
    "total_chunks": 1224
  },
  {
    "id": "bfbff0dda342150247855b20fdd03be0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 638,
    "chunk_index": 1033,
    "total_chunks": 1224
  },
  {
    "id": "546067e9887781280d696415f96053a3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/JBHipple/enumerator/blob/master/enumerablerb) * [Oscar Y's Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb)\n* [Dom Goj's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 651,
    "chunk_index": 1034,
    "total_chunks": 1224
  },
  {
    "id": "80529d7ada4d6b0d79c35df104aa5660",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 646,
    "chunk_index": 1035,
    "total_chunks": 1224
  },
  {
    "id": "5c409fc5c0c91266970af1098a2bfb63",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/mysteryihs/ruby_projects/blob/master/module_Enumerablerb) * [Shawn Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb)\n* [grzegorzzajac1989's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 665,
    "chunk_index": 1036,
    "total_chunks": 1224
  },
  {
    "id": "ef5f85a67d2462565ce17e7a24463c45",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 667,
    "chunk_index": 1037,
    "total_chunks": 1224
  },
  {
    "id": "a4450edd5756f39a64f2a882ea64c36f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Stovall's Solution](https://githubcom/shawn-stovall/enumerable-methods/blob/master/enumerable_methodsrb) * [Luchillo's Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb)\n* [Jason Keeney's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 681,
    "chunk_index": 1038,
    "total_chunks": 1224
  },
  {
    "id": "3fe1438257eed551417ff86c468eddf4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 665,
    "chunk_index": 1039,
    "total_chunks": 1224
  },
  {
    "id": "4338d987a48ecf746c1776297e4d935e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Luchillo/The-Odin-Project-course/blob/master/Ruby-programming/Basic-ruby/enumerablerb) * [Adam Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb)\n* [Hassan's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 678,
    "chunk_index": 1040,
    "total_chunks": 1224
  },
  {
    "id": "6b99a83697e7f0d781acbde0ab3efc3d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 683,
    "chunk_index": 1041,
    "total_chunks": 1224
  },
  {
    "id": "39794819764c6a360cd23526ada519cc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Graham's Solution](https://githubcom/adamg703/Odin_Project/blob/master/Enumerable_modulerb) * [Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb)\n* [Bishal's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 696,
    "chunk_index": 1042,
    "total_chunks": 1224
  },
  {
    "id": "684141723676c5a5f0b5674fd9e9d032",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Rahul's Solution](https://githubcom/rspsonu/the_odin_project/blob/master/ruby/advanced_building_blocks/project2rb) * [Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods)\n* [Kaaviya's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 696,
    "chunk_index": 1043,
    "total_chunks": 1224
  },
  {
    "id": "8b203ef91e5b1b86a3b99809a69926fb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Jiazhi Guo's Solution](https://githubcom/jerrykuo7727/Enumerable-Methods/blob/master/enumerable_methodsrb) * [Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods))\n* [Jerry Gao's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 722,
    "chunk_index": 1044,
    "total_chunks": 1224
  },
  {
    "id": "80c579d17b070798a9838d0fbca23bd3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Clint's Solution](https://githubcom/tholymap/Odin-Ruby-Advanced-Building-Blocks/blob/master/my_enumerablerb) * [Manu Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable)\n* [Mike Coon's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 717,
    "chunk_index": 1045,
    "total_chunks": 1224
  },
  {
    "id": "7f203aa04e1729bc533b835e2cb29db0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 694,
    "chunk_index": 1046,
    "total_chunks": 1224
  },
  {
    "id": "e07c5095d545c34d361870095559f010",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Phatak's Solution](https://githubcom/bionikspoon/ruby_building_blocks/blob/master/lib/enumerable_methodsrb) * [Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb)\n* [Saroar'S Soulution](https://repl",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 709,
    "chunk_index": 1047,
    "total_chunks": 1224
  },
  {
    "id": "fcf571d5442f452e114061d1fa9cb838",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Cody Buffaloe's Solution](https://githubcom/CodyLBuffaloe/enumerable_methods/blob/master/enumerable_methodsrb) * [J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0)\n* [Tom Westerhout's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 699,
    "chunk_index": 1048,
    "total_chunks": 1224
  },
  {
    "id": "88768978df8a3048366d5d824c45f545",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 685,
    "chunk_index": 1049,
    "total_chunks": 1224
  },
  {
    "id": "baaa23272df860fe17228b24a833c1ba",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[J-kaizen's Solution](https://githubcom/J-kaizen/TheOdinProject/blob/master/Ruby/advanced_building_blocks/enumerable_methodsrb) * [Max Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb)\n* [Sophia Wu's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 698,
    "chunk_index": 1050,
    "total_chunks": 1224
  },
  {
    "id": "44b02b2361d41be687441976fc4c2442",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 1051,
    "total_chunks": 1224
  },
  {
    "id": "22dfffab4d83fcb78ecc42701aaabec2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Platt's Solution](https://githubcom/makxks/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb)\n* [Smiles's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 696,
    "chunk_index": 1052,
    "total_chunks": 1224
  },
  {
    "id": "a8e7811e166b0dfcfe48533c1e5c3b5e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enum",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 686,
    "chunk_index": 1053,
    "total_chunks": 1224
  },
  {
    "id": "255a366f45b6ecf29f38bfd616e74872",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Roy Chen's Solution](https://githubcom/roychen5/ruby-building-blocks/blob/master/enumerable-methods/overwrite_enumrb) * [Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb)\n* [Joe Himes's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 699,
    "chunk_index": 1054,
    "total_chunks": 1224
  },
  {
    "id": "708ce70084fe7893f1fc60c7fff84074",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Piotr Ejsmont's Solution](https://githubcom/PiotrEjsmont/ruby_advanced/blob/master/enumerablerb) * [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project)\n* [Braydon's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 688,
    "chunk_index": 1055,
    "total_chunks": 1224
  },
  {
    "id": "b0f26d8834e175c87f09f844f48b7e09",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 674,
    "chunk_index": 1056,
    "total_chunks": 1224
  },
  {
    "id": "d3c4dd31c679536d97fd7877cb5dea59",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Chris Chambers' Solution](https://githubcom/chrisgchambers/ruby_exercies/tree/master/my_enumerable) * [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb)\n* [Ryan Barnett's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 686,
    "chunk_index": 1057,
    "total_chunks": 1224
  },
  {
    "id": "7cd99ab8dab240be60b509fa4a1e4399",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 680,
    "chunk_index": 1058,
    "total_chunks": 1224
  },
  {
    "id": "b36d6dc012e18934af12f2e80f0f191a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Loris Aranda's Solution](https://githubcom/LorisProg/ruby-enumerable/blob/master/enumerablerb) * [Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb)\n* [Kaique \"Rique\" Borges' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 699,
    "chunk_index": 1059,
    "total_chunks": 1224
  },
  {
    "id": "20daf67c2f8d42a332df0582a6b6d1db",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 688,
    "chunk_index": 1060,
    "total_chunks": 1224
  },
  {
    "id": "ee8ce23d6f366414ded804539b9c2678",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Jack Deegan's Solution](https://githubcom/DidsyTurbo/Odin_Exercises/blob/master/Ruby/Advanced-Building-Blocks/enumerablerb) * [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb)\n* [jeff1st's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 702,
    "chunk_index": 1061,
    "total_chunks": 1224
  },
  {
    "id": "3d20f8518511424487ba81e7806e6375",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 1062,
    "total_chunks": 1224
  },
  {
    "id": "be5c4685a36cfcc64ca512068ccb4d65",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Jakub Peikert's Solution](https://githubcom/JPeikert/odin_project/blob/master/ruby/advanced_building_blocks/enumerable/enumerablerb) * [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb)\n* [Niño Mollaneda's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 700,
    "chunk_index": 1063,
    "total_chunks": 1224
  },
  {
    "id": "56305a3964298c9c59aea8afbd571cff",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [HenrytheDJ's Solution](https://githubcom/henrythedj/enumerababble) * [Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable)\n* [Roan Fourie's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 683,
    "chunk_index": 1064,
    "total_chunks": 1224
  },
  {
    "id": "25cf10d967401343b7124268d4288877",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 675,
    "chunk_index": 1065,
    "total_chunks": 1224
  },
  {
    "id": "34b9282d92948d7ea90da1d943cb4370",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Derek Kwong's Solution](https://githubcom/dckwong/AdvancedBuildingBlocks/blob/master/enumerablerb) * [Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb)\n* [Robert Szabo's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 688,
    "chunk_index": 1066,
    "total_chunks": 1224
  },
  {
    "id": "ed11d29fb01074f96ecf096aad1dfc72",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 686,
    "chunk_index": 1067,
    "total_chunks": 1224
  },
  {
    "id": "e67999a280d2b0cc1193e410c06543e7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Sergey Badulin's Solution](https://githubcom/sbadulin/odin-enumerable-methods/blob/master/enumerable-methodsrb) * [Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb)\n* [Alan Cruse's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 699,
    "chunk_index": 1068,
    "total_chunks": 1224
  },
  {
    "id": "da758a14e99b5a9a5e2680c60d10ef3c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_two",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 1069,
    "total_chunks": 1224
  },
  {
    "id": "a47374ee498a798c458ae457681012b7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Dom Goj's Solution](https://githubcom/booyakuhhsha/rubyAdvancedBuildingBlocks/blob/master/enumerableMethodsrb) * [grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb)\n* [husein ghafari's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 699,
    "chunk_index": 1070,
    "total_chunks": 1224
  },
  {
    "id": "4664d1a61a6cc9542cb310226426b95f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 705,
    "chunk_index": 1071,
    "total_chunks": 1224
  },
  {
    "id": "95a14d05605a728ed43643a0fabfa4a8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[grzegorzzajac1989's Solution](https://githubcom/grzegorzzajac1989/theOdinProject/blob/master/ruby/advenced_building_block/enumerable_methodsrb) * [Jason Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb)\n* [Vaclav Skvaril's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 722,
    "chunk_index": 1072,
    "total_chunks": 1224
  },
  {
    "id": "e1e7c4a597673658b260d45e01330de7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 689,
    "chunk_index": 1073,
    "total_chunks": 1224
  },
  {
    "id": "48877faff55dd6222e8f49fe1920d300",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Keeney's Solution](https://githubcom/jkeeney/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [Hassan's Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb)\n* [Parker Brown's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 702,
    "chunk_index": 1074,
    "total_chunks": 1224
  },
  {
    "id": "54e568254e1253ae8512a09b4a7e41fd",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 1075,
    "total_chunks": 1224
  },
  {
    "id": "32422e94fae59e50893cc4a53881594f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/HassanTC/Ruby_TheOdinProject/blob/master/The%20odin%20project%20Ruby%20projects/Basic%20Ruby/enumerable_methodsrb) * [Bishal's Solution](https://githubcom/biiishal/advanced_building_blocks/tree/master/enum_methods) * [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb)\n* [Øistein Haugland's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 701,
    "chunk_index": 1076,
    "total_chunks": 1224
  },
  {
    "id": "a951ac0e253bcb50b10e790e31fbe65c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 647,
    "chunk_index": 1077,
    "total_chunks": 1224
  },
  {
    "id": "865e21bc25b9852152a32832064b4b9c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Kaaviya's Solution](https://githubcom/Kavi6/curriculum/blob/551ccbcea181dd59b73f741c8e7c95afc1d4477f/Kaaviya's%20Solution%20(Enumerable%20Methods)) * [Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb)\n* [Luján Fernaud's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 662,
    "chunk_index": 1078,
    "total_chunks": 1224
  },
  {
    "id": "b04ed6aa2f252ce0abbf5e4aed60c200",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 621,
    "chunk_index": 1079,
    "total_chunks": 1224
  },
  {
    "id": "e2149b2a7db15b321aecab9980e70177",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Jerry Gao's Solution](https://githubcom/blackwright/odin/tree/master/ruby_enumerable) * [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb)\n* [hs7's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 633,
    "chunk_index": 1080,
    "total_chunks": 1224
  },
  {
    "id": "edd21b5c1d52b4aa1caa0c30291f96d1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 1081,
    "total_chunks": 1224
  },
  {
    "id": "05c9862c01db5dcedc7d2a1b9432155a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Mike Coon's Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb)\n* [EMuchynski's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 641,
    "chunk_index": 1082,
    "total_chunks": 1224
  },
  {
    "id": "0752671d1f8dc54945e660ef877e03c1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 653,
    "chunk_index": 1083,
    "total_chunks": 1224
  },
  {
    "id": "b753b4fd43353ad9ae518743453f59b9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/mac718/advanced_building_blocks/blob/master/Enumberable_methodsrb) * [Saroar'S Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb)\n* [Ian's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 664,
    "chunk_index": 1084,
    "total_chunks": 1224
  },
  {
    "id": "1c45b76b36350938d40e518fed60fa2d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 648,
    "chunk_index": 1085,
    "total_chunks": 1224
  },
  {
    "id": "3340c7c8e5159cb73714c501c698bdb1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Soulution](https://replit/DwZF/0) * [Tom Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit)\n* [Swojeet's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 663,
    "chunk_index": 1086,
    "total_chunks": 1224
  },
  {
    "id": "c39d9fea3b8878a776fcec8015e0de5f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 667,
    "chunk_index": 1087,
    "total_chunks": 1224
  },
  {
    "id": "dcabbb6d36975c6a21308f6f489eed7a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Westerhout's Solution](https://githubcom/Westw00d/Advanced-Building-Blocks/blob/master/Enumerable_methodsrb) * [Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb)\n* [Paritosh's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 680,
    "chunk_index": 1088,
    "total_chunks": 1224
  },
  {
    "id": "e08ebc252873219cffdd5af10639a9f5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 667,
    "chunk_index": 1089,
    "total_chunks": 1224
  },
  {
    "id": "922f91a64d9254bf3191929b5f20814d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Sophia Wu's Solution](https://githubcom/SophiaLWu/project-ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb)\n* [Roland Studer's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 681,
    "chunk_index": 1090,
    "total_chunks": 1224
  },
  {
    "id": "6ebc7aa05b8c9dcdc189ea078a318dea",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Smiles's Solution](https://githubcom/smilesr/op-rb-br-35-enum/blob/master/enumrb) * [Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables)\n* [Anistor86's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 679,
    "chunk_index": 1091,
    "total_chunks": 1224
  },
  {
    "id": "e441450ba6b2666d87bc3102fc75169c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Joe Himes's Solution](https://githubcom/deedle42/advance_ruby_project) * [Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable)\n* [Andy DeNike's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 670,
    "chunk_index": 1092,
    "total_chunks": 1224
  },
  {
    "id": "5ea9b0f17c5b50dfa8a31bd91a73ca99",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 667,
    "chunk_index": 1093,
    "total_chunks": 1224
  },
  {
    "id": "3d3cb63a136199818b80235cdcab6413",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Braydon's Solution](https://githubcom/pacheeko/ruby_enumerable/blob/master/enumerable_methodsrb) * [Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb)\n* [Iceron's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 680,
    "chunk_index": 1094,
    "total_chunks": 1224
  },
  {
    "id": "7dea316c19d28aae43c900c1e5e8f803",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 665,
    "chunk_index": 1095,
    "total_chunks": 1224
  },
  {
    "id": "5790dc51073e6d2b7b549e0e28aebcb1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Ryan Barnett's Solution](https://githubcom/RyanDBarnett/Odin-Ruby/blob/master/advanced_building_blocks/enumerable_methods/enumerablerb) * [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb)\n* [coryparham24's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 680,
    "chunk_index": 1096,
    "total_chunks": 1224
  },
  {
    "id": "07697f3438ae7c6b29bb38b06020034f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 663,
    "chunk_index": 1097,
    "total_chunks": 1224
  },
  {
    "id": "0db9ec78950e2f5f210759fd691087ee",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Kaique \"Rique\" Borges' Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb)\n* [Oliver Curting's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 677,
    "chunk_index": 1098,
    "total_chunks": 1224
  },
  {
    "id": "5ef82a3b6124a1e439e0770d194d0a4c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 679,
    "chunk_index": 1099,
    "total_chunks": 1224
  },
  {
    "id": "8acd52d273cf8061f7700959d4ff48b7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/riquekaique/ruby-advanced-building-blocks/blob/master/enumerablerb) * [jeff1st's Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb)\n* [Alex's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 690,
    "chunk_index": 1100,
    "total_chunks": 1224
  },
  {
    "id": "fe2fbb3dd351973eb9a74268c1a33a0d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/jeff1st/ruby_codes/blob/master/enumerable/my_enumerablerb) * [Niño Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable)\n* [HuyAnh's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 680,
    "chunk_index": 1101,
    "total_chunks": 1224
  },
  {
    "id": "374df8c8db18884b1cab8c970af8a3be",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 665,
    "chunk_index": 1102,
    "total_chunks": 1224
  },
  {
    "id": "05e5fc631471ff02552fe71c217e1f4f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Mollaneda's Solution](https://githubcom/ninoM/my_enumerable) * [Roan Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb)\n* [Santiago Rodríguez Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 679,
    "chunk_index": 1103,
    "total_chunks": 1224
  },
  {
    "id": "ecad6bf675388045dff3ac88ac15a001",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Fourie's Solution](https://githubcom/RoanFourie/top-ruby-prog/blob/master/enumerablerb) * [Robert Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta)\n* [Alexander Luna's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 679,
    "chunk_index": 1104,
    "total_chunks": 1224
  },
  {
    "id": "7ca264a319298d975e22d4d9a4d2603c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Szabo's Solution](https://githubcom/Siker001/the_odin_project_exercises/blob/master/ruby/advanced_building_blocks/enumerable_methods/enumerable_methodsrb) * [Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib)\n* [NJW's Solution](https://obsessivenerds",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 1105,
    "total_chunks": 1224
  },
  {
    "id": "343fddb8b4be07eb02835a16e39af5c0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithub",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 649,
    "chunk_index": 1106,
    "total_chunks": 1224
  },
  {
    "id": "2eeec4d69acedc34f4c4636d84025a22",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Alan Cruse's Solution](https://githubcom/ADECruse/Projects-Advanced-Building-Blocks/blob/master/project_tworb) * [husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/)\n* [Niko Caron's Solution](https://gist",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 667,
    "chunk_index": 1107,
    "total_chunks": 1224
  },
  {
    "id": "ee8cfb8ab29afd216f482183ce9b9988",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithub",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 636,
    "chunk_index": 1108,
    "total_chunks": 1224
  },
  {
    "id": "5121520d311d24eec5956b50c226aa3d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[husein ghafari's Solution](https://githubcom/hosghf/enumarable_method/blob/4310a3d121326ea9961feff59fd2c97e02f60319/My_Enumerablerb) * [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3)\n* [HSaad's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 673,
    "chunk_index": 1109,
    "total_chunks": 1224
  },
  {
    "id": "e0194c4eb42c1e5fdeb70fa44fe3290f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 634,
    "chunk_index": 1110,
    "total_chunks": 1224
  },
  {
    "id": "5a62f5f2f476537d9f600fa7be3d3a0f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Vaclav Skvaril's Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb)\n* [Punnadittr's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 649,
    "chunk_index": 1111,
    "total_chunks": 1224
  },
  {
    "id": "2f7817aec501ab2ccd88c1ccbdc63587",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 661,
    "chunk_index": 1112,
    "total_chunks": 1224
  },
  {
    "id": "d54a057762a2fec8caff21fa661f5380",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Vasha22/Advanced-Ruby-Blocks/blob/master/enumerablerb) * [Parker Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb)\n* [Agon's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 673,
    "chunk_index": 1113,
    "total_chunks": 1224
  },
  {
    "id": "7c6a1c2b3da7d68e45afc704fdce8671",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 673,
    "chunk_index": 1114,
    "total_chunks": 1224
  },
  {
    "id": "060f6083b64d59f429190aec6a556931",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Brown's Solution](https://githubcom/parkerjbrown/ruby-advanced-building-blocks/blob/master/enumerablerb) * [Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb)\n*   [Encolpius's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 688,
    "chunk_index": 1115,
    "total_chunks": 1224
  },
  {
    "id": "13782f8bfa631fa532630064d007c598",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Øistein Haugland's Solution](https://githubcom/oisteinhaugland/enumerable_methods/blob/master/enumerable_methodsrb) * [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables)\n* [Areeba's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 688,
    "chunk_index": 1116,
    "total_chunks": 1224
  },
  {
    "id": "7f7b1c1272655281a7c29fbff9ce7d3b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 673,
    "chunk_index": 1117,
    "total_chunks": 1224
  },
  {
    "id": "4ed7e0edb1c0254e12b44c7b1c757a45",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Luján Fernaud's Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb)\n* [mojotron's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 686,
    "chunk_index": 1118,
    "total_chunks": 1224
  },
  {
    "id": "feee9a9ec52ea6c82479f2d316881a3e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 692,
    "chunk_index": 1119,
    "total_chunks": 1224
  },
  {
    "id": "52f9fdf52d71e18874caf1ba8221c63a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/lujanfernaud/ruby-building-blocks/blob/master/lib/enumerablerb) * [hs7's Solution](https://githubcom/hsun7/Advanced-Building-Blocks/blob/master/enumerable_methodsrb) * [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb)\n* [Josh Hansen's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 704,
    "chunk_index": 1120,
    "total_chunks": 1224
  },
  {
    "id": "e447dc35a587f38e6646718fbd7e9ed1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 665,
    "chunk_index": 1121,
    "total_chunks": 1224
  },
  {
    "id": "f13694961c25ddfae305526730873333",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [EMuchynski's Solution](https://githubcom/EMuchynski/advanced_building_blocks/blob/master/02_enumerable_methodsrb) * [Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb)\n* [Felipe Parreira's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 679,
    "chunk_index": 1122,
    "total_chunks": 1224
  },
  {
    "id": "251b4dc765e6dc556be19a357ae283da",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 669,
    "chunk_index": 1123,
    "total_chunks": 1224
  },
  {
    "id": "fe9e5d4e0f4f8970fc609d58febe14cb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Ian's Solution](https://githubcom/ianbaker615/enumerable_methodsgit) * [Swojeet's Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb)\n* [Amy Smith's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 681,
    "chunk_index": 1124,
    "total_chunks": 1224
  },
  {
    "id": "6b5f032841d78c1e825fc772882bde65",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/swojeet/theOdinProject-ruby/blob/master/advanced_building_blocks/enumerable_methodsrb) * [Paritosh's Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables)\n* [dmarkiewicz's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 684,
    "chunk_index": 1125,
    "total_chunks": 1224
  },
  {
    "id": "aa487517068ec0cabc8580abf2eafe92",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Paritosh97/enumerable_methods_ruby/blob/master/enumerable_methodsrb) * [Roland Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods)\n* [codyMalcolm's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 687,
    "chunk_index": 1126,
    "total_chunks": 1224
  },
  {
    "id": "51dad2149e60d143a48189643d5af574",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 675,
    "chunk_index": 1127,
    "total_chunks": 1224
  },
  {
    "id": "0a6c28ac578fd8846b7e6b6b4328be53",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Studer's Solution](https://githubcom/RolandStuder/odin_project_solutions/tree/master/advanced_building_blocks/enumerables) * [Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb)\n* [Tommy's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 687,
    "chunk_index": 1128,
    "total_chunks": 1224
  },
  {
    "id": "4beb55211c9065e0d38d37c5ac77d91a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 672,
    "chunk_index": 1129,
    "total_chunks": 1224
  },
  {
    "id": "a4e09208957d7288a60ef578b4d3effa",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Anistor86's Solution](https://githubcom/anistor86/enumerable) * [Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb)\n* [bchalman's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 685,
    "chunk_index": 1130,
    "total_chunks": 1224
  },
  {
    "id": "5a7825f8d9c79036e7e97e37e84f2b74",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 681,
    "chunk_index": 1131,
    "total_chunks": 1224
  },
  {
    "id": "b631f12f4a8c183f3d109f21388d4ffc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Andy DeNike's Solution](https://githubcom/AndyDeNike/advanced_building_blocks/blob/master/enumerable_methods/enumerable_methodsrb) * [Iceron's Solution](https://githubcom/iceron/enumerable/blob/master/enumerable_methodsrb) * [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb)\n* [Rudi Boshoff's Solution with testing](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 698,
    "chunk_index": 1132,
    "total_chunks": 1224
  },
  {
    "id": "e5e29cf846af8f033cd651e5ea4b6e4d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [coryparham24's Solution](https://githubcom/coryparham24/ruby-advanced-building-blocks/blob/master/project2rb) * [Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable)\n* [Slaven Karamatic's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 670,
    "chunk_index": 1133,
    "total_chunks": 1224
  },
  {
    "id": "b20217e77ed166ab6dd213f0d437555e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/script",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 651,
    "chunk_index": 1134,
    "total_chunks": 1224
  },
  {
    "id": "08a2faaa3bb862fada5e70f15244b9e2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Oliver Curting's Solution](https://githubcom/Curting/Enumerable_Methods/blob/master/enumerable_methodsrb) * [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb)\n* [mwk913's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 666,
    "chunk_index": 1135,
    "total_chunks": 1224
  },
  {
    "id": "20cf5bb1ff04c616a028a255c8853fbc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Alex's Solution](https://githubcom/alexcorremans/enumerable) * [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks)\n* [EdwardHeath's Soultion](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 666,
    "chunk_index": 1136,
    "total_chunks": 1224
  },
  {
    "id": "cbec8c89dcbac2ba8ab807ab0cf86cc6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 660,
    "chunk_index": 1137,
    "total_chunks": 1224
  },
  {
    "id": "613c5566fc856d36d21f3528e4913e0e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [HuyAnh's Solution](https://githubcom/huyanh10tin/caesar_cipher/blob/master/enumerablerb) * [Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb)\n* [Leila Alderman's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 674,
    "chunk_index": 1138,
    "total_chunks": 1224
  },
  {
    "id": "f794a3fa1c0d63b7532e5672379e2c14",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerables",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 667,
    "chunk_index": 1139,
    "total_chunks": 1224
  },
  {
    "id": "2c747a1dc6a385b524916bef5c5a0108",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Santiago Rodríguez Solution](https://githubcom/santoxxcc/furry-octo-fiesta) * [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb)\n* [Junwen's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 679,
    "chunk_index": 1140,
    "total_chunks": 1224
  },
  {
    "id": "08be35297147b3ac1034b178a6b47d91",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 670,
    "chunk_index": 1141,
    "total_chunks": 1224
  },
  {
    "id": "293e87f9d09c8d6b5c0346658198959c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Alexander Luna's Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb)\n* [vanny96's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 683,
    "chunk_index": 1142,
    "total_chunks": 1224
  },
  {
    "id": "e00f72461882e01ba0ad5bcb636b4370",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 691,
    "chunk_index": 1143,
    "total_chunks": 1224
  },
  {
    "id": "d7ca71e1e8ebacd4880e0f2eadf28a94",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Mycroft1891/my-odin-project/tree/master/ruby_programming/lib) * [NJW's Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb)\n* [Joanna's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 703,
    "chunk_index": 1144,
    "total_chunks": 1224
  },
  {
    "id": "ff1f0c0c0f688cd27db32d2bfed3857d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 690,
    "chunk_index": 1145,
    "total_chunks": 1224
  },
  {
    "id": "98ac9f1227c9911b12fd548fac50143d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://obsessivenerdsgithubio/enumerable_methods/) * [Niko Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb)\n* [JamCry's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 703,
    "chunk_index": 1146,
    "total_chunks": 1224
  },
  {
    "id": "3c296eaf1ebc48dc3ee17cc80bd7564f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 696,
    "chunk_index": 1147,
    "total_chunks": 1224
  },
  {
    "id": "3f5b4382c0c8fac46238caec9459c04c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Caron's Solution](https://gistgithubcom/ncaron/759e132a0f0e3c16e8b18797a13763d3) * [HSaad's Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb)\n* [Wesley Wang's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 711,
    "chunk_index": 1148,
    "total_chunks": 1224
  },
  {
    "id": "671b92931a714714d9a14646dc63ec04",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 688,
    "chunk_index": 1149,
    "total_chunks": 1224
  },
  {
    "id": "b228cde870097b00d5c83658d864f642",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/HSaad/enumerable/blob/master/enumerable_methodsrb) * [Punnadittr's Solution](https://githubcom/punnadittr/enumerable_ruby/blob/master/ruby/enumerable/enumerablerb) * [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb)\n* [Sergej Jurchenko's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 704,
    "chunk_index": 1150,
    "total_chunks": 1224
  },
  {
    "id": "d2585992ea5fa95a8ce286ca76b35ed7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 664,
    "chunk_index": 1151,
    "total_chunks": 1224
  },
  {
    "id": "005c032c524a13bc0be304d0c9a20d63",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Agon's Solution](https://githubcom/AgonIdrizi/RubyBuildingBlocks/blob/master/the_odin_project/Ruby/AdvancedBuildingBlocks/enumerablerb) * [Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb)\n* [Alex Krewson's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 678,
    "chunk_index": 1152,
    "total_chunks": 1224
  },
  {
    "id": "6345fdd1efea998775f7a7cf7f5c3111",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 655,
    "chunk_index": 1153,
    "total_chunks": 1224
  },
  {
    "id": "493508398b55296303229d177ebb185c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Encolpius's Solution](https://githubcom/Encolpius/ruby-building-blocks/tree/master/enumerables) * [Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb)\n* [Bendee48's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 669,
    "chunk_index": 1154,
    "total_chunks": 1224
  },
  {
    "id": "5913ce013fc8be99d35686a3c7d04d24",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 654,
    "chunk_index": 1155,
    "total_chunks": 1224
  },
  {
    "id": "57ec25a283952a9a3a9fbf5df336baa8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Areeba's Solution](https://githubcom/AREEBAISHTIAQ/AdvancedBuildingBlocks/blob/master/Methodsrb) * [mojotron's Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb)\n* [Ben Fowler's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 666,
    "chunk_index": 1156,
    "total_chunks": 1224
  },
  {
    "id": "c597d482c8decbf5eeb8d1f9a843e237",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 648,
    "chunk_index": 1157,
    "total_chunks": 1224
  },
  {
    "id": "849ef74d3b989368d21feeda05c4ec37",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/mojotron/ruby-exercises/blob/master/my_enumerablerb) * [Josh Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb)\n* [Tronerta's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 661,
    "chunk_index": 1158,
    "total_chunks": 1224
  },
  {
    "id": "e159fdfafb8984c015cf00bc0f20fe58",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 652,
    "chunk_index": 1159,
    "total_chunks": 1224
  },
  {
    "id": "f1752463650c5fe0e7f2277909c55ba5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Hansen's Solution](https://githubcom/Jdhansen41/ruby_lessons/blob/master/exercises/enumerablerb) * [Felipe Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb)\n* [Nyaga Roy's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 665,
    "chunk_index": 1160,
    "total_chunks": 1224
  },
  {
    "id": "2df0454c6540910e40f5272a8a6cf703",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Parreira's Solution](https://githubcom/FelipeParreira/TheOdinProject/blob/master/ruby-programming/building-blocks/enumerablerb) * [Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project)\n* [LastCapricorn's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 660,
    "chunk_index": 1161,
    "total_chunks": 1224
  },
  {
    "id": "26c74c7ea82781433b8238b2e6671549",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 641,
    "chunk_index": 1162,
    "total_chunks": 1224
  },
  {
    "id": "a057aba28ca38d2a793ded1a6c4dbc35",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Amy Smith's Solution](https://githubcom/amicloud/the-odin-project/tree/master/ruby-programming/enumerables) * [dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb)\n* [Barbara Lucas' Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 654,
    "chunk_index": 1163,
    "total_chunks": 1224
  },
  {
    "id": "695d8728424caff89cc6c30fc1857ace",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 639,
    "chunk_index": 1164,
    "total_chunks": 1224
  },
  {
    "id": "bf2586b8bb9d2750ed94734a1b07d28a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[dmarkiewicz's Solution](https://githubcom/dmarkiewicz/the-odin-project/tree/master/Ruby/advanced_building_blocks_projects/my_enumerable_methods) * [codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb)\n* [Muminjon's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 652,
    "chunk_index": 1165,
    "total_chunks": 1224
  },
  {
    "id": "42b960b4a7b7757f9cc47ecaaf5c559f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[codyMalcolm's Solution](https://githubcom/codyMalcolm/odin-building-blocks/blob/master/enumerable_methodsrb) * [Tommy's Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks)\n* [Leo Holanda's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 658,
    "chunk_index": 1166,
    "total_chunks": 1224
  },
  {
    "id": "47103ac378f7b8be4e35a06dee648423",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/hoangtommy/rubyExercises/blob/master/enumerablerb) * [bchalman's Solution](https://githubcom/bchalman/ruby_exercises/blob/master/my_enumerable_methodsrb) * [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods)\n* [Tristan Ross's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 655,
    "chunk_index": 1167,
    "total_chunks": 1224
  },
  {
    "id": "dfe1c03b9e650df53002c3ffced312f7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Rudi Boshoff's Solution with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable)\n* [Brett Bonnet's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 626,
    "chunk_index": 1168,
    "total_chunks": 1224
  },
  {
    "id": "3e75bc9d69ada0f58b34f10952972df4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 635,
    "chunk_index": 1169,
    "total_chunks": 1224
  },
  {
    "id": "9eb320b8add42492ba80f543388f36ee",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "with testing](https://githubcom/RudiBoshoff/ruby-exercises/tree/master/enumerable) * [Slaven Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb)\n* [Franklyn Afeso's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 649,
    "chunk_index": 1170,
    "total_chunks": 1224
  },
  {
    "id": "dc957273d1486b4b33ee3b39246b760a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerables",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 635,
    "chunk_index": 1171,
    "total_chunks": 1224
  },
  {
    "id": "d0e9a96204017bfc4cf7febef0032b83",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Karamatic's Solution](https://githubcom/Everdrought/ruby-enumethods/blob/master/scriptrb) * [mwk913's Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb)\n* [Robert Dunbar's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 648,
    "chunk_index": 1172,
    "total_chunks": 1224
  },
  {
    "id": "2cd463533a3b62e03513f112822ebaf5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 630,
    "chunk_index": 1173,
    "total_chunks": 1224
  },
  {
    "id": "6edd1b36af7f86653a7a5e2d01b19df3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/mwk913/Ruby-Advanced-Building-Blocks) * [EdwardHeath's Soultion](https://githubcom/EdwardHeath/enumerable/blob/master/enumerablerb) * [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb)\n* [Gareth Woodman's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 644,
    "chunk_index": 1174,
    "total_chunks": 1224
  },
  {
    "id": "c3474b5bb31f9d12f1a15472b97729f5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 611,
    "chunk_index": 1175,
    "total_chunks": 1224
  },
  {
    "id": "4f1891e95645a2ff3362be986db44667",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Leila Alderman's Solution](https://githubcom/leila-alderman/TOP_ruby_exercises/blob/master/05_enumerables/enumerablesrb) * [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb)\n* [Adriel Bruno's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 624,
    "chunk_index": 1176,
    "total_chunks": 1224
  },
  {
    "id": "1d3fd248191983626bf619659e47e676",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 604,
    "chunk_index": 1177,
    "total_chunks": 1224
  },
  {
    "id": "7b82c301cf94c368157bdc9eb1cdf065",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Junwen's Solution](https://githubcom/JunwenHE/SelfLearningRuby/blob/master/Enumerable_methodsrb) * [vanny96's Solution](https://githubcom/vanny96/building-blocks/blob/master/enumerablerb) * [Joanna's Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb)\n* [Tolulope Olusakin's Solution - Enumerable Module Methods](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 625,
    "chunk_index": 1178,
    "total_chunks": 1224
  },
  {
    "id": "74c2ebe76bbd4fb677027cdb197059c8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/jluczak/odin_project/blob/master/enumerable/enumerablerb) * [JamCry's Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development)\n* [Miguel's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 602,
    "chunk_index": 1179,
    "total_chunks": 1224
  },
  {
    "id": "5c5e31e2c3a95d8b16f5a8fb6dcaf645",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/jamcry/advanced-ruby-exercises/blob/master/Enumerablerb) * [Wesley Wang's Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods)\n* [David Watkin's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 593,
    "chunk_index": 1180,
    "total_chunks": 1224
  },
  {
    "id": "b122517f1e5e710eb62cbeccced48488",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 586,
    "chunk_index": 1181,
    "total_chunks": 1224
  },
  {
    "id": "d8138863c2974083cb3796da707f44a5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/wesleymellon/ruby-building-blocks/blob/master/enumerable_methodsrb) * [Sergej Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb)\n* [Cameron St",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 593,
    "chunk_index": 1182,
    "total_chunks": 1224
  },
  {
    "id": "c4561aff35daca836ca022584180d048",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Jurchenko's Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 571,
    "chunk_index": 1183,
    "total_chunks": 1224
  },
  {
    "id": "0633960d8f4509488fef465b45b838fd",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 592,
    "chunk_index": 1184,
    "total_chunks": 1224
  },
  {
    "id": "6b70f36fc9660803c7b871b094931696",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/Sergyurch/enumerable-methods/blob/master/enumerable-methodsrb) * [Alex Krewson's Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb)\n* [Robert Suazo's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 605,
    "chunk_index": 1185,
    "total_chunks": 1224
  },
  {
    "id": "9eb03198f6a25c2f2c12034989020fee",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 591,
    "chunk_index": 1186,
    "total_chunks": 1224
  },
  {
    "id": "5bdb284554b7082d933c032974c42335",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/alexkrewson/ruby_advanced_building_blocks/blob/master/enumerablerb) * [Bendee48's Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb)\n* [DalandanJuice's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 606,
    "chunk_index": 1187,
    "total_chunks": 1224
  },
  {
    "id": "ed3c07cff118364d6be9f868d1341fd8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 594,
    "chunk_index": 1188,
    "total_chunks": 1224
  },
  {
    "id": "17e4790b7c3936dfbc6df998667ee78f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/bendee48/advanced_building_blocks/blob/master/enumerable_methodsrb) * [Ben Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb)\n* [hyperturing's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 607,
    "chunk_index": 1189,
    "total_chunks": 1224
  },
  {
    "id": "6b47ccbf537cae91a3c72b8d2196171d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Fowler's Solution](https://githubcom/benfowler04/ruby-building-blocks/blob/master/enumerablerb) * [Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable)\n* [guacamobley's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 611,
    "chunk_index": 1190,
    "total_chunks": 1224
  },
  {
    "id": "e8a8011f785ffea3fef402d9070a8560",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 603,
    "chunk_index": 1191,
    "total_chunks": 1224
  },
  {
    "id": "47c2a572b444454c41784059382dde81",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Tronerta's Solution](https://githubcom/Tronerta/ruby_problems/blob/master/enumerablerb) * [Nyaga Roy's Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb)\n* [Rafael Rodriguez Garcia's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 618,
    "chunk_index": 1192,
    "total_chunks": 1224
  },
  {
    "id": "a1bf297c1ca68d01bd0fb6e56318df79",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 601,
    "chunk_index": 1193,
    "total_chunks": 1224
  },
  {
    "id": "1cf2000f29591c327fd6e919ae950134",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/RoyNyaga/advanced_building_block_odin_project) * [LastCapricorn's Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb)\n* [Caleb's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 613,
    "chunk_index": 1194,
    "total_chunks": 1224
  },
  {
    "id": "7b6aa84878fe723a2ba633d352832c28",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 606,
    "chunk_index": 1195,
    "total_chunks": 1224
  },
  {
    "id": "6942e44dca56105ae72a8b2eef92beda",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/LastCapricorn/enumerable_methods/blob/master/enumerablerb) * [Barbara Lucas' Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb)\n* [Ranon Martin's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 619,
    "chunk_index": 1196,
    "total_chunks": 1224
  },
  {
    "id": "dec8528ee26bb02622fd48e07c99138d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 613,
    "chunk_index": 1197,
    "total_chunks": 1224
  },
  {
    "id": "47f51b4c6379c4526051043707fefeb3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/LucasBarbara/enumerable_methods/blob/master/enumerable_methodsrb) * [Muminjon's Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb)\n* [olsi2984's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 627,
    "chunk_index": 1198,
    "total_chunks": 1224
  },
  {
    "id": "26bed59ad07288d0bc507ff7efa87812",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sort",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 616,
    "chunk_index": 1199,
    "total_chunks": 1224
  },
  {
    "id": "90510d65b919c719f312e94728691327",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/MuminjonGuru/Mastering-Ruby-Object-Oriented-Design/tree/master/Challenges/Advanced%20Building%20Blocks) * [Leo Holanda's Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb)\n* [Busy Bee's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 628,
    "chunk_index": 1200,
    "total_chunks": 1224
  },
  {
    "id": "ea55b9775a5b6f771dcc1e4d387592f2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/leo-holanda/building_blocks/tree/master/advanced_building_blocks/enumerable_methods) * [Tristan Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects)\n* [unheavenlycreature's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 612,
    "chunk_index": 1201,
    "total_chunks": 1224
  },
  {
    "id": "249657c973ba7b08c40e65971fc6ccb2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 602,
    "chunk_index": 1202,
    "total_chunks": 1224
  },
  {
    "id": "29ddbd35e4b7215286955ee07fd60f85",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Ross's Solution](https://githubcom/TristanRoss/enumerable) * [Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb)\n* [Wilmir's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 615,
    "chunk_index": 1203,
    "total_chunks": 1224
  },
  {
    "id": "a17fc5359f977de901ff39e24d1095fb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "[Brett Bonnet's Solution](https://githubcom/Brett-Bonnet/advanced_ruby_building_blocks/blob/master/enumerable_methodsrb) * [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects)\n* [Sahmie's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 623,
    "chunk_index": 1204,
    "total_chunks": 1224
  },
  {
    "id": "e362ff53968a87bf5b05264528cac09c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 615,
    "chunk_index": 1205,
    "total_chunks": 1224
  },
  {
    "id": "4fe18b5ba2a54f38d4093be9a5b03e80",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Franklyn Afeso's Solution](https://githubcom/afeso/building_blocks/blob/master/enumerablesrb) * [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb)\n* [Nathan Choi's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 628,
    "chunk_index": 1206,
    "total_chunks": 1224
  },
  {
    "id": "1831f8df1b28cc664e569e1f245f828b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/custom",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 613,
    "chunk_index": 1207,
    "total_chunks": 1224
  },
  {
    "id": "7ff8f48cb91eba15780a7b7caa573a87",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Robert Dunbar's Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/customrb)\n* [Cinthia's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 626,
    "chunk_index": 1208,
    "total_chunks": 1224
  },
  {
    "id": "c15d0c332cda5427db6c64f94ca2d8eb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/customrb) * [Cinthia's Solution](https://githubcom/cinthiagodoi/advanced_buinding_blocks/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 638,
    "chunk_index": 1209,
    "total_chunks": 1224
  },
  {
    "id": "d03036b68697d2ceaec2233406924715",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Solution](https://githubcom/RobertDunbar/ruby-problems/blob/master/enumerablerb) * [Gareth Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/customrb) * [Cinthia's Solution](https://githubcom/cinthiagodoi/advanced_buinding_blocks/blob/master/enumerablerb)\n* [Timework's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 650,
    "chunk_index": 1210,
    "total_chunks": 1224
  },
  {
    "id": "4730e4af6947c23bb656352583bf9dd1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/customrb) * [Cinthia's Solution](https://githubcom/cinthiagodoi/advanced_buinding_blocks/blob/master/enumerablerb) * [Timework's Solution](https://githubcom/Timework/enumerable/blob/master/enum",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 635,
    "chunk_index": 1211,
    "total_chunks": 1224
  },
  {
    "id": "0d5c0a8cd1b2957a2d119b3e079c4e17",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Woodman's Solution](https://githubcom/GarethWoodman/RubyBuildingBlocks/blob/master/enumerablerb) * [Adriel Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/customrb) * [Cinthia's Solution](https://githubcom/cinthiagodoi/advanced_buinding_blocks/blob/master/enumerablerb) * [Timework's Solution](https://githubcom/Timework/enumerable/blob/master/enumrb)\n* [Kendra Moyars's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 649,
    "chunk_index": 1212,
    "total_chunks": 1224
  },
  {
    "id": "9722b1a0441bc9966bec29ab3c6996ee",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/customrb) * [Cinthia's Solution](https://githubcom/cinthiagodoi/advanced_buinding_blocks/blob/master/enumerablerb) * [Timework's Solution](https://githubcom/Timework/enumerable/blob/master/enumrb) * [Kendra Moyars's Solution](https://githubcom/kendramoyars/enumerable/blob/master/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 636,
    "chunk_index": 1213,
    "total_chunks": 1224
  },
  {
    "id": "c318bc0df2ea5cdfcb88241b0a682814",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Bruno's Solution](https://githubcom/AdrielTrigger/Adv_Ruby_Building_Blocks/blob/master/my_methodsrb) * [Tolulope Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/customrb) * [Cinthia's Solution](https://githubcom/cinthiagodoi/advanced_buinding_blocks/blob/master/enumerablerb) * [Timework's Solution](https://githubcom/Timework/enumerable/blob/master/enumrb) * [Kendra Moyars's Solution](https://githubcom/kendramoyars/enumerable/blob/master/enumerablerb)\n* [Michael K's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 648,
    "chunk_index": 1214,
    "total_chunks": 1224
  },
  {
    "id": "863ff75584fece22e6d0230fa4cc3523",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/customrb) * [Cinthia's Solution](https://githubcom/cinthiagodoi/advanced_buinding_blocks/blob/master/enumerablerb) * [Timework's Solution](https://githubcom/Timework/enumerable/blob/master/enumrb) * [Kendra Moyars's Solution](https://githubcom/kendramoyars/enumerable/blob/master/enumerablerb) * [Michael K's Solution](https://githubcom/a0x77ry/odin/blob/master/ruby-exercises/my-enumerables/my_enumerables",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 638,
    "chunk_index": 1215,
    "total_chunks": 1224
  },
  {
    "id": "7ba53de42ac44d0f6e1cd26955939735",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Olusakin's Solution - Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/customrb) * [Cinthia's Solution](https://githubcom/cinthiagodoi/advanced_buinding_blocks/blob/master/enumerablerb) * [Timework's Solution](https://githubcom/Timework/enumerable/blob/master/enumrb) * [Kendra Moyars's Solution](https://githubcom/kendramoyars/enumerable/blob/master/enumerablerb) * [Michael K's Solution](https://githubcom/a0x77ry/odin/blob/master/ruby-exercises/my-enumerables/my_enumerablesrb)\n* [Eduardo06sp's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 653,
    "chunk_index": 1216,
    "total_chunks": 1224
  },
  {
    "id": "424ee82d2a066f91a5018e645a3a49cd",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/customrb) * [Cinthia's Solution](https://githubcom/cinthiagodoi/advanced_buinding_blocks/blob/master/enumerablerb) * [Timework's Solution](https://githubcom/Timework/enumerable/blob/master/enumrb) * [Kendra Moyars's Solution](https://githubcom/kendramoyars/enumerable/blob/master/enumerablerb) * [Michael K's Solution](https://githubcom/a0x77ry/odin/blob/master/ruby-exercises/my-enumerables/my_enumerablesrb) * [Eduardo06sp's Solution](https://githubcom/Eduardo06sp/enumerable-methods/blob/master/methods",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 662,
    "chunk_index": 1217,
    "total_chunks": 1224
  },
  {
    "id": "98a1888deb15a899b7d0d143869b0657",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Enumerable Module Methods](https://githubcom/Oluwadamilareolusakin/ruby-enumerable-module-replica/tree/development) * [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/customrb) * [Cinthia's Solution](https://githubcom/cinthiagodoi/advanced_buinding_blocks/blob/master/enumerablerb) * [Timework's Solution](https://githubcom/Timework/enumerable/blob/master/enumrb) * [Kendra Moyars's Solution](https://githubcom/kendramoyars/enumerable/blob/master/enumerablerb) * [Michael K's Solution](https://githubcom/a0x77ry/odin/blob/master/ruby-exercises/my-enumerables/my_enumerablesrb) * [Eduardo06sp's Solution](https://githubcom/Eduardo06sp/enumerable-methods/blob/master/methodsrb)\n* [tomstrat's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 675,
    "chunk_index": 1218,
    "total_chunks": 1224
  },
  {
    "id": "898e03f5cddc8091ab5bd82de0f1f1d9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/customrb) * [Cinthia's Solution](https://githubcom/cinthiagodoi/advanced_buinding_blocks/blob/master/enumerablerb) * [Timework's Solution](https://githubcom/Timework/enumerable/blob/master/enumrb) * [Kendra Moyars's Solution](https://githubcom/kendramoyars/enumerable/blob/master/enumerablerb) * [Michael K's Solution](https://githubcom/a0x77ry/odin/blob/master/ruby-exercises/my-enumerables/my_enumerablesrb) * [Eduardo06sp's Solution](https://githubcom/Eduardo06sp/enumerable-methods/blob/master/methodsrb) * [tomstrat's Solution](https://githubcom/tomstrat/bubble_sort/blob/master/bubble",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 657,
    "chunk_index": 1219,
    "total_chunks": 1224
  },
  {
    "id": "0646b4508ed428ff1e37be25380441c7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [Miguel's Solution](https://githubcom/mapra99/EnnumerableMethods) * [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/customrb) * [Cinthia's Solution](https://githubcom/cinthiagodoi/advanced_buinding_blocks/blob/master/enumerablerb) * [Timework's Solution](https://githubcom/Timework/enumerable/blob/master/enumrb) * [Kendra Moyars's Solution](https://githubcom/kendramoyars/enumerable/blob/master/enumerablerb) * [Michael K's Solution](https://githubcom/a0x77ry/odin/blob/master/ruby-exercises/my-enumerables/my_enumerablesrb) * [Eduardo06sp's Solution](https://githubcom/Eduardo06sp/enumerable-methods/blob/master/methodsrb) * [tomstrat's Solution](https://githubcom/tomstrat/bubble_sort/blob/master/bubblerb)\n* [headnodic's Solution](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 671,
    "chunk_index": 1220,
    "total_chunks": 1224
  },
  {
    "id": "4235e191718e27d79c7d18be4efc6893",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/customrb) * [Cinthia's Solution](https://githubcom/cinthiagodoi/advanced_buinding_blocks/blob/master/enumerablerb) * [Timework's Solution](https://githubcom/Timework/enumerable/blob/master/enumrb) * [Kendra Moyars's Solution](https://githubcom/kendramoyars/enumerable/blob/master/enumerablerb) * [Michael K's Solution](https://githubcom/a0x77ry/odin/blob/master/ruby-exercises/my-enumerables/my_enumerablesrb) * [Eduardo06sp's Solution](https://githubcom/Eduardo06sp/enumerable-methods/blob/master/methodsrb) * [tomstrat's Solution](https://githubcom/tomstrat/bubble_sort/blob/master/bubblerb) * [headnodic's Solution](https://githubcom/headnodic/top-coursework/blob/master/ruby-programming/enumerable/enumerable",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 669,
    "chunk_index": 1221,
    "total_chunks": 1224
  },
  {
    "id": "ad7e467efb06e836ebe2f02e9f8d1800",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "* [David Watkin's Solution](https://githubcom/DavidWatkinCode/the_odin_project/blob/master/ruby/ruby_programming/enumerable_methodsrb) * [Cameron StAmant's Solution](https://githubcom/CameronStAmant/The_Odin_Project/blob/master/Ruby_projects/Advanced_Building_Blocks/enumerable_methodsrb) * [Robert Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/customrb) * [Cinthia's Solution](https://githubcom/cinthiagodoi/advanced_buinding_blocks/blob/master/enumerablerb) * [Timework's Solution](https://githubcom/Timework/enumerable/blob/master/enumrb) * [Kendra Moyars's Solution](https://githubcom/kendramoyars/enumerable/blob/master/enumerablerb) * [Michael K's Solution](https://githubcom/a0x77ry/odin/blob/master/ruby-exercises/my-enumerables/my_enumerablesrb) * [Eduardo06sp's Solution](https://githubcom/Eduardo06sp/enumerable-methods/blob/master/methodsrb) * [tomstrat's Solution](https://githubcom/tomstrat/bubble_sort/blob/master/bubblerb) * [headnodic's Solution](https://githubcom/headnodic/top-coursework/blob/master/ruby-programming/enumerable/enumerablerb)\nAdditional Resources\nThis section contains helpful links to other content",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 682,
    "chunk_index": 1222,
    "total_chunks": 1224
  },
  {
    "id": "199f8573d5a0e3cc25d3e357d5edc0b2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
    "source_type": "git_repo",
    "title": "project_advanced_building_blocks",
    "content": "Suazo's Solution](https://githubcom/rsuazo/ruby_exercises/blob/master/enumerable/enumerablerb) * [DalandanJuice's Solution](https://githubcom/DalandanJuice/ruby-building-blocks/blob/master/enumerable-methodsrb) * [hyperturing's Solution](https://githubcom/hyperturing/advanced-building-blocks/tree/master/enumerable) * [guacamobley's Solution](https://githubcom/guacamobley/ruby-advanced-building-blocks/blob/master/enumerable_methodsrb) * [Rafael Rodriguez Garcia's Solution](https://githubcom/rrg1459/my_enumerable/blob/master/enumerablerb) * [Caleb's Solution](https://githubcom/calebrauscher/The-Odin-Project/blob/master/Ruby/enumerablerb) * [Ranon Martin's Solution](https://githubcom/ranonm/TheOdinProjectExercises/blob/master/enumerable_methods/lib/enumerable_methodsrb) * [olsi2984's Solution](https://githubcom/olsi2984/Ruby_projects/blob/master/Bubble_sort/bubble_sortrb) * [Busy Bee's Solution](https://githubcom/swissbusybee/Advanced_ruby_building_blocks_Projects) * [unheavenlycreature's Solution](https://githubcom/unheavenlycreature/ruby-advanced-building-blocks/blob/master/my_enumerablerb) * [Wilmir's Solution](https://githubcom/Wilmir/Advanced_Ruby_Building_Blocks_Projects) * [Sahmie's Solution](https://githubcom/Sahmie/TOP_Projects/blob/master/Ruby_programming/Project_advanced_building_blocks/Enumerable_methodsrb) * [Nathan Choi's Solution](https://githubcom/sihoonathan/custom_methods/blob/master/customrb) * [Cinthia's Solution](https://githubcom/cinthiagodoi/advanced_buinding_blocks/blob/master/enumerablerb) * [Timework's Solution](https://githubcom/Timework/enumerable/blob/master/enumrb) * [Kendra Moyars's Solution](https://githubcom/kendramoyars/enumerable/blob/master/enumerablerb) * [Michael K's Solution](https://githubcom/a0x77ry/odin/blob/master/ruby-exercises/my-enumerables/my_enumerablesrb) * [Eduardo06sp's Solution](https://githubcom/Eduardo06sp/enumerable-methods/blob/master/methodsrb) * [tomstrat's Solution](https://githubcom/tomstrat/bubble_sort/blob/master/bubblerb) * [headnodic's Solution](https://githubcom/headnodic/top-coursework/blob/master/ruby-programming/enumerable/enumerablerb) Additional Resources This section contains helpful links to other contentIt isn't required, so consider it supplemental for if you need to dive deeper into something",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 87711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\ruby\\basic_ruby\\project_advanced_building_blocks.md",
      "source_type": "git_repo"
    },
    "token_count": 621,
    "chunk_index": 1223,
    "total_chunks": 1224
  },
  {
    "id": "239bbc88c67ac1712d926192379351d5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\authentication\\security_configuration.md",
    "source_type": "git_repo",
    "title": "security_configuration",
    "content": "Introduction\nThis lesson is a small one, but it is incredibly important Now that we are dealing with Authentication, sessions, cookies and user passwords, it is crucial that we do everything we can so that our authentication system or databases are not compromised Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson Access environment variables using Node's process object Use dotenv to store and make environment variables available to your application globally Describe how environment variables are handled in version control Have familiarity with nconf's hierarchical configuration Keep it secret, keep it safe\nEssentially, in addition to using encryption to secure user passwords we need to make sure that important sensitive information such as our Express sessions secret, our MongoDB url (especially if it includes your username and password ) and any API keys that you might be using stay hidden Details such as these should never get committed to a git repo or otherwise published Hiding secrets is easily accomplished and there are a handful of ways to do it One of the most common is using an npm package called dotenv Create a file called env in your project directory and fill it with variables that represent things you need to keep secret using the syntax [key]=[value], for example, SECRET_KEY=\"something hard to guess\" Important note: you need to add this file to your gitignore so that it does not get committed to git A more robust option is the package nconf It can be used in place of or alongside of dotenv Basically, it allows you to define configuration files in multiple ways for ultimate flexibility For example, you could have a config js file that kept all of your secrets, but also add the ability to override one of those secrets with a command-line argument Digging into this package can be useful when creating bigger projects where app configuration needs to be a little more involved This package makes it easy to configure things such as separate production and development databases, logging and debugging options, or anything else Secrets and PaaS\nIf you add secrets to a deployed project or a project that you plan on deploying, you'll have to research how to import environment variables to the PaaS you choose to use or else your deployment will fail For instance, when using Fly io, you need to run fly secrets import < env from the command line Assignment\n1 The main important takeaway here is to KEEP YOUR SECRETS SECRET by never accidentally publishing them 1 Read through the documentation for [dotenv](https://github",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4145,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\authentication\\security_configuration.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "390fd055de9dde0e56f103703e7d2eb6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\authentication\\security_configuration.md",
    "source_type": "git_repo",
    "title": "security_configuration",
    "content": "deployed project or a project that you plan on deploying, you'll have to research how to import environment variables to the PaaS you choose to use or else your deployment will fail For instance, when using Fly io, you need to run fly secrets import < env from the command line Assignment 1 The main important takeaway here is to KEEP YOUR SECRETS SECRET by never accidentally publishing them 1 Read through the documentation for [dotenv](https://githubcom/motdotla/dotenv#readme) and [nconf](https://github com/indexzero/nconf) There are other ways to go about hiding your secrets, but these two packages are popular and widely used 1 Go back to your earlier projects and SECURE THEM Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What special kind of variable can be used on a server to store secrets What are two widely used packages that can be used to store and import these variables What is the name of the file dotenv looks for when injecting these variables into our app Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental If you still want to know more, this article digs deeper into variations of environment variables you might encounter moving forward",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4145,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\authentication\\security_configuration.md",
      "source_type": "git_repo"
    },
    "token_count": 286,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "5ecbf5ed3351b75239c832338c630999",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\foundations\\JS101\\oldFundamentalsLessons\\fundamentals-3.md",
    "source_type": "git_repo",
    "title": "fundamentals-3",
    "content": "For the last leg of our tour of the basics of JavaScript we're going to learn about Objects and a more in-depth look at some useful things you can do with arrays Points to Ponder\nUse this section to quiz yourself If you know all these answers then you can comfortably skip, or at least skim through this lesson After the lesson, come back here and read these again to make sure you haven't missed anything crucial How are objects created using \"object literal\" syntax * Object literal:\n```\nlet user = {};\n/* you can also use let user = new Object();, but it is frowned upon in up-to-date style guides */\n```\nHow are properties added/accessed/removed from objects with dot notation * Properties are added to objects using \"key:value\" pairs:\n```\nlet user = {\nname: \"John\", // key \"name\" stores value \"John\"\nage: 30,\n\"likes birds\": true\n};\n```\n* The value of these keys can be accessed/removed/created with dot notation like so:\n```\nalert(user name); // John\ndelete(user age); // removes the \"age\" key:value pair\nuser hobby = \"coding\"; // creates \"hobby\" key:value pair\n```\nHow are properties accessed with square brackets When is this useful * `user[\"name\"] // John`\n* This is useful when we have a multi-word key such as \"likes birds\" -- `user likes birds // syntax error`\n* `user[\"likes birds\"] // true`\n* Square brackets can also be used to access a property from the result of an expression - such as a variable - like so:\n```\nlet key = prompt(\"What property would you like \", \"age\");\nuser[key] // 30\nuser key // undefined\n```\n* They also come in handy when accessing a property in a sub-namespace:\n```\nlet person = {\nname: {\nfirst: \"Bob\",\nlast: \"Smith\"\n}\n}\nperson['name']['first']  // Bob\n```\nHow can you create an object using existing variables as its properties * By using the function constructor method of creating objects:\n```\nfunction User(name, age) {\nreturn {\nname,\nage\n};\n}\nlet newUser = User(\"John\", 30);\nalert(newUser name); // John\n```\nHow do you call a function that is an object property",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\foundations\\JS101\\oldFundamentalsLessons\\fundamentals-3.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "280d971f4ba292f3f81fb091b2926b2a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\old_lessons\\foundations\\JS101\\oldFundamentalsLessons\\fundamentals-3.md",
    "source_type": "git_repo",
    "title": "fundamentals-3",
    "content": "a property in a sub-namespace: ``` let person = { name: { first: \"Bob\", last: \"Smith\" } } person['name']['first'] // Bob ``` How can you create an object using existing variables as its properties * By using the function constructor method of creating objects: ``` function User(name, age) { return { name, age }; } let newUser = User(\"John\", 30); alert(newUser name); // John ``` How do you call a function that is an object property* It is important to remember, and easy to forget, to include the \"()\" at the end of the property name when calling an object's function:\n```\nlet person = {\nname: 'Bob',\nage: 32,\nbio: function() {\nalert('Hi, my name is ' + this name + ' ');\n}\n}\nperson bio() // Hi, my name is Bob ```\nWhat is 'this' referring to within an object is it used * `this` refers to the current object that the code  being written within * In the previous example: `this` referred to `person`,  `this name` was `Bob` Objects101\nObjects are a very important part of the JavaScript language, and while for the most part you can accomplish simple and even intermediate tasks without worrying about them, any real project that you're going to attempt is going to feature Objects The uses of Objects in JavaScript can get deep relatively quickly, so for the moment we're only going to cover the basics There'll be an in-depth dive later This JavaScript io article is the best place to get started with Objects The MDN tutorial isn't bad either, so check it out if you need another take on the subject Intermediate/Advanced Array Magic\nBesides being a quick and handy way to store data, arrays also have a set of functions for manipulating that data in very powerful ways Once you begin to master these functions you will start to see ways to use them all over the place There are really only a handful of these functions but as you'll soon see the possibilities of what you can do with them are near endless Start out by watching this video from Wes Bos If you sign up for his course (it's free ) you can download the code and follow along Watch and code with Part 2 of Wes Bos's array series",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4711,
      "relative_path": "git_repos\\odin-project\\archive\\old_lessons\\foundations\\JS101\\oldFundamentalsLessons\\fundamentals-3.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "ff3005e16d5395660f8186bf947d5670",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_101.md",
    "source_type": "git_repo",
    "title": "express_101",
    "content": "Introduction\nIn the last lesson, we set the stage by explaining quite a bit of the background information you'll need to really understand what's going on as we start to dive into Express This lesson will actually start you on the project that you'll be completing as you follow the tutorial Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson Use express-generator to generate a basic express site Understand the basic parts of an express project Understand what a Templating Language is and be able to list a couple of popular ones Understand what Middleware is Understand req, res and next in the context of middleware Templating engines\nA templating engine is a tool that allows you to insert variables and logic into your views For instance, you could have a header that updates with the actual user's name once they've logged in, something that is not possible with plain HTML As the lesson mentions, there are several templating languages available for JavaScript The tutorial uses Pug (formerly known as Jade) which has a bit of a learning curve because it looks and feels dramatically different from regular HTML If you've ever worked with Ruby on Rails you might be more comfortable with EJS, which is very similar to erb It's up to you which you choose If you choose not to use Pug you will still be able to follow the tutorial just fine Most of the Odin staff prefer ejs over Pug, because we like working with HTML, but in the end, there is nothing wrong with Pug if you like the look of it or want to learn something new Middleware\nThis step of the MDN tutorial mentions middleware, but does not clearly define it Middleware is a complicated word for a basic concept A middleware is just a plain JavaScript function that Express will call for you between the time it receives a network request and the time it fires off a response (i e it's a function that sits in the middle) You will eventually be using several of these functions that will run in a specific sequence for every request For example, you might have a logger (that prints details of the request to the console), an authenticator (that checks to see if the user is logged in, or otherwise has permission to access whatever they're requesting) and a static-file server (if the user is requesting a static file then it will send it to them) All of these functions will be called in the order you specify every time there's a request on the way to your app",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7766,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_101.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "7fbe7c1c2435f5d241c347fc89a747cb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_101.md",
    "source_type": "git_repo",
    "title": "express_101",
    "content": "might have a logger (that prints details of the request to the console), an authenticator (that checks to see if the user is logged in, or otherwise has permission to access whatever they're requesting) and a static-file server (if the user is requesting a static file then it will send it to them) All of these functions will be called in the order you specify every time there's a request on the way to your appget(\"/\") function It is possible and common to write your own middleware functions (you'll be doing that later) so let's take a minute to demystify what they're actually doing Middleware functions are just plain JavaScript functions with a specific function signature (that is, it takes a specific set of arguments in a specific order) You've actually already seen it The three middleware function arguments are: req, res, and next Technically, these are just variables, so you could call them anything, but convention (and the express documentation) almost always give them these names A middleware function\njavascript\nfunction(req, res, next) {\n// do stuff }\nWhen someone visits your site, their web-browser sends a request to your server Express takes that request and passes it through all of the middleware functions that you have defined and used in your project Each function is defined with these parameters which might seem familiar to you from the plain Node tutorial that you went through in the 'Getting Started' lesson Technically, req and res are almost the same here as they are in vanilla Node, but Express enhances them by adding a few useful properties and methods to them req or request is an object that has data about the incoming request such as the exact URL that was visited, any parameters in the URL, the body of the request (useful if the user is submitting a form with some data in it) and many other things You can see everything it includes in the documentation for Express's request object res or response is an object that represents the response that Express is going to send back to the user Typically, you use the information in the req to determine what you're going to do with the res by calling res send() or another method on the object Check out the documentation for Express's response object next is a function that you see a little less often, but is very important to the functioning of your app If you are writing or using some middleware that does not send a response back to the user's client then you must call the next function at the end of your middleware function",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7766,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_101.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "e0a25f8a09d7566dd8770aae5361f7eb",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_101.md",
    "source_type": "git_repo",
    "title": "express_101",
    "content": "do with the res by calling res send() or another method on the object Check out the documentation for Express's response object next is a function that you see a little less often, but is very important to the functioning of your app If you are writing or using some middleware that does not send a response back to the user's client then you must call the next function at the end of your middleware functionThe next function tells express to move to the next middleware in the stack, but if you forget to call it then your app will pause and nothing will happen An example middleware\nAs a quick example, if you wanted to create a basic logging middleware you could write a function like this:\n```javascript\nconst myLogger = function(req, res, next) {\nconsole log(\"Request IP: \" + req ip);\nconsole log(\"Request Method: \" + req method);\nconsole log(\"Request date: \" + new Date());\nnext(); // THIS IS IMPORTANT }\napp use(myLogger)\n```\napp use is how you load your middleware function into Express so that it knows to use it If you stick this bit of code in any express application near the beginning of your app js (after the part where you define app = express()) then it will write all of those details to your console every time you get a network request When the logging is complete we call the next() function so that our app can continue As a final detail, the order that middleware gets executed in your app matters Middleware functions will always run in the order that they are instantiated using app use() Using Git\nAs you work through this tutorial, make sure to put the node_modules folder in a gitignore file Assignment\n1 Read the [intro article of the MDN Express tutorial](https://developer mozilla org/en-US/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website) on MDN 1 Begin the project by following [\"Part 2: Creating a skeleton website\"](https://developer mozilla org/en-US/docs/Learn/Server-side/Express_Nodejs/skeleton_website) Be sure to read everything carefully There's quite a bit of important information in this article You only have to do part 2 for now We will continue where we leave off later 1 Read more about [using middleware in Express](http://expressjs com/en/guide/using-middleware html) Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7766,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_101.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "a08ce8bcf7d66a3c00f13543aa29bf9e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_101.md",
    "source_type": "git_repo",
    "title": "express_101",
    "content": "org/en-US/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website) on MDN 1 Begin the project by following [\"Part 2: Creating a skeleton website\"](https://developer mozilla org/en-US/docs/Learn/Server-side/Express_Nodejs/skeleton_website) Be sure to read everything carefully There's quite a bit of important information in this article You only have to do part 2 for now We will continue where we leave off later 1 Read more about [using middleware in Express](http://expressjs com/en/guide/using-middleware html) Knowledge check The following questions are an opportunity to reflect on key topics in this lessonIf you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What is middleware What is the req object What is the res object Why is next important What does app use do Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental It looks like this lesson doesn't have any additional resources yet Help us expand this section by contributing to our curriculum",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7766,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_101.md",
      "source_type": "git_repo"
    },
    "token_count": 231,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "50cc3a5933172c1b9c89576b4fc7636f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
    "source_type": "git_repo",
    "title": "deployment",
    "content": "Introduction\nBefore continuing our web development journey, we must address one important task - showcasing our hard work to the world Whether it's to share our creations with friends, create a portfolio for future employers, or launch an online business, we need to host our applications somewhere others can publicly access on the internet In this lesson, we will learn how to deploy our apps to a hosting provider, allowing us to run, build, and operate our web applications in the cloud Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson Understand what a hosting provider is Understand the difference between static and dynamic sites Understand what a PaaS is and how they work Know how to deploy to a PaaS provider Know how to troubleshoot common deployment issues What are hosting providers Hosting providers are like server landlords They own servers and rent space on them to customers, who can then use the space to store their websites and make them accessible to anyone on the web You've already had some experience using a hosting provider when you deployed projects to Github pages earlier in the curriculum GitHub pages is great for hosting static web pages for free, but we won't be able to use it for hosting our dynamic NodeJS apps We're going to need something more powerful Static vs dynamic sites\nStatic websites consist of pre-written HTML pages They are \"static\" because everyone who visits them will see the same content To build static sites, you only need HTML, CSS and JavaScript Dynamic websites, on the other hand, are websites that can change content based on the user who is visiting them X (formerly known as Twitter) is a good example; every user sees different content on their homepage feed based on who they follow To build dynamic sites, you still need HTML, CSS and JS But additionally, you need a server-side application and a database This additional tech prohibits us from using GitHub Pages for hosting our NodeJS apps GitHub pages cannot run NodeJS applications and doesn't have database services we can use Luckily, many hosting providers do offer everything we need They range from the big and complex cloud providers like AWS, Google Cloud and Microsoft Azure to the more beginner-friendly platform as a service (PaaS) providers like Heroku, Railway, Render, and Fly io We will be focusing on and utilizing these latter providers in this lesson What is a PaaS Platform as a Service is a specific kind of hosting provider",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19880,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 9
  },
  {
    "id": "c9fb4b5c10730e66a0fe24e1034b3b1d",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
    "source_type": "git_repo",
    "title": "deployment",
    "content": "have database services we can use Luckily, many hosting providers do offer everything we need They range from the big and complex cloud providers like AWS, Google Cloud and Microsoft Azure to the more beginner-friendly platform as a service (PaaS) providers like Heroku, Railway, Render, and Fly io We will be focusing on and utilizing these latter providers in this lesson What is a PaaS Platform as a Service is a specific kind of hosting providerThe most important thing to know about them is they are much easier to use and more approachable for beginners than other hosting providers They manage many of the low-level nitty-gritty details with the underlying server infrastructure, which allows us as developers to focus more of our time on building our applications instead of configuring and managing the servers they run on Taking the landlord metaphor we used earlier a little further, a PaaS platform is like having a landlord who takes care of all the utilities, building maintenance and security Meanwhile, you, the developer, focus on furnishing, decorating and living in the space It's an incredibly powerful model and perfect for us right now Using a PaaS provider for deployment, we can focus on learning and mastering NodeJS without taking a significant diversion to learn the specialized knowledge needed to manage and maintain servers ourselves We will provide a list of our recommended PaaS providers later in the lesson First, let us explore from a high level how PaaS providers work How do PaaS services work PaaS providers work by giving you easy access to a few resources that any NodeJS app can't live without to function on the web Instances\nThe first and most crucial thing PaaS providers give you are virtual \"computers\" called instances which run your app Basically, one instance means a single instance of your application running at one time That's like having a single computer run your app like you do on Localhost Multiple instances are like having several copies of your app running simultaneously, which allows you to handle more traffic For most of your apps, one instance is plenty enough You can support a lot of traffic using just a single instance Many of the PaaS providers we will recommend later in this lesson give you your first one for free Databases\nThe second most important thing PaaS providers give you is databases They make it easy to spin up a new database for each app by doing all the setup and configuration for you",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19880,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 1,
    "total_chunks": 9
  },
  {
    "id": "141d1c5c0585ff07b3f1c91ede3b73b8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
    "source_type": "git_repo",
    "title": "deployment",
    "content": "traffic For most of your apps, one instance is plenty enough You can support a lot of traffic using just a single instance Many of the PaaS providers we will recommend later in this lesson give you your first one for free Databases The second most important thing PaaS providers give you is databases They make it easy to spin up a new database for each app by doing all the setup and configuration for youMany providers even manage the database for you by setting up automatic backups, ensuring the database is constantly updated with the latest critical security patches and ongoing maintenance that keeps your databases up and running smoothly The peace of mind this affords you can't be overstated You never want to be in a position where you're waking at 4 am to multiple alerts Your database is on the fritz because of some security patch you forgot to apply, and there are no backups to fall back on With NodeJS, we will be using MongoDB, a popular open-source database Many PaaS services come with SQL databases included, but since we are going to be using MongoDB (a no-SQL database), we have a few choices on how to spin it up We could:\nUse Railway, a PaaS with integrated MongoDB database services, or\nUse any of the recommended PaaS services, and connect it to a MongoDB Atlas instance The instructions in their MongoDB Atlas getting started guide make it easy Either choice isn't too difficult to setup, but it's always nice to have a fallback option Later in this course, we will be following the MDN tutorial's instructions on deploying both our app and database connection to Railway For now, we encourage you to try and figure out how to deploy your mini-message board project with just what you learn in this lesson However, If you're having too much trouble, don't fret Just come back to it later once you've finished the MDN tutorial and have that bit of deployment experience under your belt Domain names\nPaaS providers will give you a random domain name when you first deploy In Heroku's case, it's usually something zen-like \"afternoon-falls-4209\" If you want to visit the app, you can go directly to http://afternoon-falls-4209 herokuapp com to see your app live on the web in all its glory The domain name will always be yours on a PaaS provider They give each app a unique domain name that's yours as long as your app lives on their platform",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19880,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 2,
    "total_chunks": 9
  },
  {
    "id": "eaf78d6b8c99dd65fcf568b11d070376",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
    "source_type": "git_repo",
    "title": "deployment",
    "content": "will give you a random domain name when you first deploy In Heroku's case, it's usually something zen-like \"afternoon-falls-4209\" If you want to visit the app, you can go directly to http://afternoon-falls-4209 herokuapp com to see your app live on the web in all its glory The domain name will always be yours on a PaaS provider They give each app a unique domain name that's yours as long as your app lives on their platformIn the real world, you'll want to link it to your own custom domain, for example, http://mycooldomain com It's worth mentioning that you don't need custom domain names for the portfolio projects you'll be building in this course The random domains your PaaS provider gives you will be good enough However, if you have an itch for tricking out your app with a custom domain name, you'll first need to purchase a domain from a registrar like Porkbun or NameSilo To find a new domain, try using Domainr Once you have your domain, you need to point it to your project The provider you are using will have exhaustive documentation on using custom domain names on their platform Our recommended PaaS services\nChoosing a PaaS provider was once a simple decision Heroku had a free tier that gave you everything needed to host as many small apps as you wanted, but they unfortunately discontinued it in 2022 Luckily, there are still plenty of other great options out there The downside is that they all have very limited free tiers For this reason, and to accommodate as many of our learners as possible, we're going to recommend a range of options instead of just one You can host most of your projects for free using a combination of the different providers we recommend, but you'll have a bit more leg work to do You'll have to create an account and get familiar with a few different providers If you can pay for hosting, things are more straightforward It will afford you the luxury of choosing one provider you can learn deeply, and you'll be able to manage all your apps from one place Whatever your circumstances, we've got you covered Here are the PaaS providers we recommend Fly io\nFly io uses a CLI tool for deployment Paid plans include free allowances, additional resources are billed based on usage with very reasonable rates Fly io charges $0 15/GB of RootFS for machines stopped for 30 days Fly",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19880,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 3,
    "total_chunks": 9
  },
  {
    "id": "7d571c2ab7ecafde8d892650927145e6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
    "source_type": "git_repo",
    "title": "deployment",
    "content": "the luxury of choosing one provider you can learn deeply, and you'll be able to manage all your apps from one place Whatever your circumstances, we've got you covered Here are the PaaS providers we recommend Fly io Fly io uses a CLI tool for deployment Paid plans include free allowances, additional resources are billed based on usage with very reasonable rates Fly io charges $0 15/GB of RootFS for machines stopped for 30 days Flyio: Hobby Plan\nNew customers get a one-time $5 free trial credit to test Fly io at no cost The free allowances are not applicable during the free trial After the credit has been used, you will be be automatically placed on the $5/month Hobby plan subscription The longevity of your free trial credit depends on how many resources you consume More complex apps with more traffic may consume the whole free trial credit within a month, whereas simpler apps may last longer Requires a credit card Fly io: Links\nFly io's homepage\nFly io's documentation\nGuide: Official getting started with NodeJS on Fly io guide\nRailway app\nRailway has a convenient deployment process You link to your project's GitHub repo Pay for what you use model $5 a month should be enough to host four applications Railway app: Free Plan\nYou get a free one-time grant of $5 on their free trial, and the applications are never put to sleep when inactive The longevity of your free allowance depends on how many resources you consume More complex apps with more traffic may consume all free resources within a month, whereas simpler apps may last longer Railway app: Links\nRailway homepage\nRailway documentation\nAdaptable io\nLike Railway, has a convenient deployment process You link to your project's GitHub repo Free plan does not limit the number of applications you can deploy Also has fixed and usage-based payment plans Adaptable io: Free Plan\nNo limits on the number of applications you can deploy on the free plan Monthly performance allowance is more than sufficient for course/personal projects (approximately 25,000 API requests per month) Applications are put to sleep when inactive but wake up speed is quicker than Render Requires a credit card Adaptable io: Links\nAdaptable io homepage\nAdaptable io documentation\nGuide: Official getting started with deploying an Express app on Adaptable guide\nRender\nRender allows you to deploy using \"Blueprints\", which link to your project's GitHub repo",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19880,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 4,
    "total_chunks": 9
  },
  {
    "id": "7c4bc05e6809f524ce7b7fc76aef11f8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
    "source_type": "git_repo",
    "title": "deployment",
    "content": "deploy on the free plan Monthly performance allowance is more than sufficient for course/personal projects (approximately 25,000 API requests per month) Applications are put to sleep when inactive but wake up speed is quicker than Render Requires a credit card Adaptable io: Links Adaptable io homepage Adaptable io documentation Guide: Official getting started with deploying an Express app on Adaptable guide Render Render allows you to deploy using \"Blueprints\", which link to your project's GitHub repoThe free 750-hour allowance is enough to host a few apps without paying anything However, databases are separate on Render, and the lowest spec databases cost $7 each This is a good option to use in tandem with MongoDB Atlas $21 a month is enough to host three applications as each app's database will cost $7 Render: Free Plan\n750 hours of free usage per month Applications are put to sleep automatically after 15 minutes of inactivity, so the 750 free hours should be enough to host a few apps for the entire month Requires a credit card Render: Links\nRender homepage\nRender documentation\nGuide: Official getting started with Node/Express on Render guide\nGuide: CodeBrah video guide for deploying NodeJS applications to Render\nHeroku\nHeroku has a straightforward deployment process using a combination of a well-documented CLI tool and Git Heroku is a very mature platform which has been around for over a decade Any problems you encounter are almost guaranteed to have a solution documented on Stack Overflow or elsewhere on the internet The $5 per month eco plan will give you 1000 free hours each month for all your applications Applications are automatically put to sleep after 30 minutes of inactivity, so the 1000-hour allowance should last the entire month for several of your portfolio projects Heroku's lowest-tier Postgresql databases cost $5 per month, effectively costing each application $5 to host $20 a month will be enough to host three applications $5 eco plan for 1000 server hours + an additional $5 for each app Heroku: Free Plan\nN/A\nHeroku: Links\nHeroku homepage\nHeroku documentation\nGuide: Official NodeJS guide for Heroku\nDebugging and troubleshooting deployments\nErrors are an inevitable part of the software development process They especially have a habit of popping up when deploying to a new environment like a hosting provider When this happens, the key is not to panic and to follow a calm, step-by-step debugging process",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19880,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 5,
    "total_chunks": 9
  },
  {
    "id": "81b62149d45ec286036cac84ee782501",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
    "source_type": "git_repo",
    "title": "deployment",
    "content": "for 1000 server hours + an additional $5 for each app Heroku: Free Plan N/A Heroku: Links Heroku homepage Heroku documentation Guide: Official NodeJS guide for Heroku Debugging and troubleshooting deployments Errors are an inevitable part of the software development process They especially have a habit of popping up when deploying to a new environment like a hosting provider When this happens, the key is not to panic and to follow a calm, step-by-step debugging processIn most cases, you'll be running into errors that thousands of developers have encountered before These errors are well documented and often have solutions you can find with a little bit of Google-fu There are two stages of the deployment process where you are most likely to encounter problems These are during deployment and right after On deployment\nIf you run into an error while deploying, the first thing to do is to check the build logs Finding the build logs should be easy; it's the stream of output you'll see after kicking off a new deployment Scroll through these logs and find the point where the deployment encountered the error It should stand out from the rest of the output and will often look like the stack traces you've already seen with JavaScript/NodeJS The error output will tell you exactly what went wrong If you don't recognize the error or what might cause it, your next step will be to copy and paste it into your favorite online search engine You'll likely find a Stack Overflow post with a solution You can get support in our Discord server if searching doesn't lead to anything conclusive Most of the errors you'll face during this stage will be related to properly setting up your app with what your hosting provider needs Double-checking the deployment guide for your hosting provider is always a good place to start It's very easy to miss a step or mistype something After deployment\nYou've just deployed your app successfully; everything is going your way, and this will be a great day However, when you visit your app you are greeted with the dreaded 500 page Nothing induces panic in a developer quite like a 500 page It could mean just about anything Error pages in production are deliberately vague to let users know something went wrong without all the overwhelming technical jargon Another important reason is to prevent attackers from using errors in your system to their advantage You have a few tools at your disposal to help you diagnose the problem The first is the application logs The application logs are the output of your application as it's running",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19880,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 6,
    "total_chunks": 9
  },
  {
    "id": "ed6f1fd1b8262c1fa55b45193f8c59e9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
    "source_type": "git_repo",
    "title": "deployment",
    "content": "500 page It could mean just about anything Error pages in production are deliberately vague to let users know something went wrong without all the overwhelming technical jargon Another important reason is to prevent attackers from using errors in your system to their advantage You have a few tools at your disposal to help you diagnose the problem The first is the application logs The application logs are the output of your application as it's runningIt tells you what's happening with your app as it's happening All the incoming requests and database queries are recorded, and you can see them being recorded in real-time So if you're getting a 500 error, you can open up the logs and watch them closely as you refresh the page on your app in the browser to reproduce the error This will either tell you exactly what the problem is or generate some leads you can use to dig further Going further with troubleshooting tools\nAs your application grows, you'll want to get more sophisticated with your error-tracking tools For example, you can use services like Sentry to track and monitor errors using a slick, easy-to-use interface and get notified when they happen These services will give you more information about the error and the request that caused it, saving you a ton of time However, setting up and using these services are out of the scope of this lesson You can get by just fine with the logs for your first few apps One final tip\nIf something has broken in your latest deployment after successful deployments in the past, backtrack to the last working version to determine what changes you made and slowly reintroduce those changes again if you need to This will be where the Git skills you've been learning will start to really pay off and save you an immense amount of time You'll be able to use git log to see the history of your latest changes and git checkout to revert to a previous working version quickly Assignment\n1 Deploy your [Mini Message Board project](https://www theodinproject com/lessons/nodejs-mini-message-board) to one of the hosting providers we've mentioned Any of the free options will work for curriculum purposes, so it doesn't matter which you pick for your projects The important thing to take away from this first deployment is getting experience deploying Don't worry if you don't understand everything that's happening That will come with time - Use one of the linked deploy guides for your PaaS provider to help you through the process",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19880,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 7,
    "total_chunks": 9
  },
  {
    "id": "09d585e40b97b53b5f0a52e435fa7220",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
    "source_type": "git_repo",
    "title": "deployment",
    "content": "theodinproject com/lessons/nodejs-mini-message-board) to one of the hosting providers we've mentioned Any of the free options will work for curriculum purposes, so it doesn't matter which you pick for your projects The important thing to take away from this first deployment is getting experience deploying Don't worry if you don't understand everything that's happening That will come with time - Use one of the linked deploy guides for your PaaS provider to help you through the process- If you're having trouble deploying, check out the [Debugging and Troubleshooting Deployments](#debugging-and-troubleshooting-deployments) section for some tips - If for some reason the deployment is still too difficult, and you just can't seem to get it to work, move onto the next project and come back once you've deployed your MDN project The steps in their tutorial hold your hand a bit more through the process and will give you the confidence you need to deploy this project Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What's the difference between static and dynamic websites What does 'PaaS' stand for What are the advantages of using a PaaS hosting provider What is an instance What steps can you take to diagnose an issue that arises during deployment What steps can you take to diagnose an issue that only appears after deployment Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental It looks like this lesson doesn't have any additional resources yet Help us expand this section by contributing to our curriculum",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 19880,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\deployment.md",
      "source_type": "git_repo"
    },
    "token_count": 345,
    "chunk_index": 8,
    "total_chunks": 9
  },
  {
    "id": "cf930cd25ee9f37a3f651594cc05ba96",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_103_routes_and_controllers.md",
    "source_type": "git_repo",
    "title": "express_103_routes_and_controllers",
    "content": "Introduction\nThe next step in the MDN express tutorial sets up all the routes and controllers you're going to need when creating the Library project. This project is designed using the MVC (Model, View, Controller) architecture. In a previous step you set up all the Models (or Database Objects) and in the next step you'll be setting up several different views.\nIf you remember from our earlier lessons, the controller is the code that sits between the models and the views. It determines which view is going to be shown, as well as which information is going to populate that view. In this lesson, you will copy and paste quite a bit of repetitive code to get the controllers and routes set up, but be sure to read everything in between them! There is a lot of useful information therein.\nLesson overview\nThis section contains a general overview of topics that you will learn in this lesson.\nCreate routes.\nCreate route-handler callback functions.\nCreate a catalog route module.\nDescribe approaches for structuring routes and controllers.\nSet up URL endpoints.\nAssignment\n1. Complete [\"Part 4: Routes and controllers\"](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/routes) of the Local Library tutorial.\nKnowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson. If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge.\nHow do you define a route function in Express?\nName four HTTP verbs a route might need to handle.\nWhat is a route parameter, and what syntax is used to define one in a route handler?\nWhat is a route-handler callback function commonly called?\nAdditional resources\nThis section contains helpful links to related content. It isn't required, so consider it supplemental.\nIt looks like this lesson doesn't have any additional resources yet. Help us expand this section by contributing to our curriculum.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2580,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_103_routes_and_controllers.md",
      "source_type": "git_repo"
    },
    "token_count": 394,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a50f427f255e728dd8794008f103463f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_104_view_templates.md",
    "source_type": "git_repo",
    "title": "express_104_view_templates",
    "content": "Introduction\nThis lesson is fun! You'll be setting up several views, and you'll start to see your Application come together. We'll finally get to see our data showing up in the browser! This is a long lesson that is broken up into several sub-lessons, so make sure you click through to see them all.\nLesson overview\nThis section contains a general overview of topics that you will learn in this lesson.\nDescribe asynchronous functions.\nManage asynchronous operations in controller functions.\nManage flow control when using asynchronous operations.\nCreate and extend templates.\nWrite templates using Pug.\nPass information to a template from your view.\nImplement read-only pages.\nDescribe how routes work.\nDescribe how views and models work in practice.\nQuery database using models.\nDescribe date handling using luxon.\nAssignment\n1. Complete [\"Part 5: Displaying library data\"](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data) of the Local Library tutorial.\nAdditional resources\nThis section contains helpful links to related content. It isn't required, so consider it supplemental.\nIt looks like this lesson doesn't have any additional resources yet. Help us expand this section by contributing to our curriculum.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1395,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_104_view_templates.md",
      "source_type": "git_repo"
    },
    "token_count": 244,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "98ef39dcb3fe2c3494f343c9dd78ca89",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\introduction_to_express.md",
    "source_type": "git_repo",
    "title": "introduction_to_express",
    "content": "Introduction\nIn the previous lessons, you got up and running with Node You learned how to serve up a multi-page website and read/write data from files on the server You probably found that while it wasn't too difficult, the code was verbose and a little complicated However, you can easily see how complicated and hard to maintain things would get if you decided to start adding more features Express is a tiny framework that makes the things you did in the previous lessons even quicker and simpler, and does so in a way that makes projects even more easily extensible In this section, we are going to be following MDN's Express Local Library tutorial We'll go one lesson at a time, occasionally supplementing with a little deeper explanation or side projects to help you deepen your understanding of the material There is a ton of information there, so be sure to take your time and READ EVERYTHING The blue \"notes\" that are scattered throughout the tutorial often link to articles or other tutorials that will definitely improve your understanding of the content Don't be lazy Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson Describe Express and Node's main benefits Describe the relationship between Node and Express Explain what a module is and how Express fits in Import and create modules Describe asynchronous APIs Describe and create route handlers Describe and use middleware Describe error handling in Express Describe what the main parts of an Express app might look like Describe Express development environment Import Express into an application using NPM Create and run applications using the Express application generator tool Set up a development environment for Express on your computer Assignment\n1 Read [MDN's introduction to Express/Node](https://developer mozilla org/en-US/docs/Learn/Server-side/Express_Nodejs/Introduction) It is long but its main purpose is to show you the various bits and pieces that you'll be learning in the rest of the tutorial If you want you can code along a bit, but most of the examples aren't really intended for you to follow 100% *DO* read the entire thing Some of it will be a review, but that's OK Follow the links that they give and at least look at them They are a vital part of this lesson and will often direct you to the relevant portion of the official express docs (which are quite good) You'll want to be somewhat familiar with them when it comes time to do your own projects 1 The second lesson, [\"Setting up a Node development environment\"](https://developer mozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5109,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\introduction_to_express.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "b9bc4e6eaa553ca2f3bf8f4e883fbaa1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\introduction_to_express.md",
    "source_type": "git_repo",
    "title": "introduction_to_express",
    "content": "Some of it will be a review, but that's OK Follow the links that they give and at least look at them They are a vital part of this lesson and will often direct you to the relevant portion of the official express docs (which are quite good) You'll want to be somewhat familiar with them when it comes time to do your own projects 1 The second lesson, [\"Setting up a Node development environment\"](https://developer mozillaorg/en-US/docs/Learn/Server-side/Express_Nodejs/development_environment#using_npm), walks you through setting up Node and NPM If you've come this far, you should already have both set up Still go through the Using NPM and Installing the Express Application Generator sections of this lesson as you'll learn more about installing and getting started with Express 1 Once you're all set up, take a look at the Node site you created in our first project Rewrite it using express You should be able to do this with just one app js file and a few `app get()`s Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What is Express What is a module Which are the four most used methods to define route handlers How do we handle errors How do you use the Express library with NPM in a project Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental The book Express in Action by Evan M Hahn is an incredible resource for Express beginners This video crash course on Express by Brad Traversy provides you with all the basic concepts Web Dev Simplified’s Express JS crash course also packs a ton of great information into a 35 minute video",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5109,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\introduction_to_express.md",
      "source_type": "git_repo"
    },
    "token_count": 369,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "99c269b12bc7d9239b2821e8ffefe3f5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_102_crud_and_mvc.md",
    "source_type": "git_repo",
    "title": "express_102_crud_and_mvc",
    "content": "Introduction\nAfter setting up the skeleton for your project it's time to set up the database As usual, there's quite a bit of background information that you will find useful as you progress Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson Explain CRUD and how it correlates to HTTP methods in Express Describe MVC and how it correlates to Express Describe databases and ORMs as well as how to use them with Node/Express apps Design and create your own models using Mongoose Declare object schema and models Describe the main field types and basic validation List a few ways to access model data Test models by creating a number of instances (using a standalone script) CRUD\nCRUD is a concept that comes up a lot in web development, and it's the type of thing that might show up in interview questions so it's worth taking a little time to make sure you understand what it refers to CRUD stands for: Create, Read, Update and Delete These are the four basic functions that you will be building into your database driven apps If you are designing a CRUD interface that means that users can expect to be able to do these 4 things to items in the database (providing they have the appropriate permissions of course) In your library example, this means that we are going to be building the ability for users to create entries (add books, authors or genres to the database), read entries (or, retrieve lists of books and other things from the database), update entries (edit details of an entry), and delete entries (remove them from the database) Of course, this is a concept and not some sort of rule that must be followed You may not want to allow users to do all of these actions, or you may want to limit which users can do what at any given time For example, if you are creating a social networking site, you might only allow users to read the profile information of their friends or connections, and you might not want to allow people to delete things at all The CRUD operations roughly correlate to the HTTP methods that you can employ in an express app This definition can be somewhat flexible, but in general create correlates to POST (or app post() in an express app), read correlates to GET (app get()), update to PUT (app put()) and delete to DELETE (app delete())\nMVC\nMVC is another common concept in web development and also something that is likely to come up in an interview question",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6287,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_102_crud_and_mvc.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "26ae3f2ccaf1fd709fa4515b2b0be9c3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_102_crud_and_mvc.md",
    "source_type": "git_repo",
    "title": "express_102_crud_and_mvc",
    "content": "The CRUD operations roughly correlate to the HTTP methods that you can employ in an express app This definition can be somewhat flexible, but in general create correlates to POST (or app post() in an express app), read correlates to GET (app get()), update to PUT (app put()) and delete to DELETE (app delete()) MVC MVC is another common concept in web development and also something that is likely to come up in an interview questionMVC stands for Model, View, Controller and refers to the architecture of your code Basically, it is a way to organize your application by separating all of the actions into 3 main components: Models, Views and Controllers Models are the basic building blocks of your database So for every type of entry in your DB (book, author, etc in our Library Project), you'll create a model that will hold the details of that type of entry Models define the types of information that get used by your views and controllers Views are, of course, the component that generates the UI for your application In our case, we've selected a templating engine that uses data supplied by a controller to display the desired information Controllers are the components that decide what view to display and what information is going to be put into it MVC example\nWithout digging into the code prematurely, consider a very basic photo-uploading site Users can upload and then view photos that are all listed on an index somewhere In this case, we'll have a model for our photos that would define how our photos are stored in the database (DB) The model might specify that photos should be objects that have a filename, a URL and a date-created field We'll need two views, 1) the index, and 2) the display-photo view which will just display a single photo Our controller then would be called by Express whenever we get an app get() request It would then use the details of the request to determine which view is shown, and which image is displayed depending on whether the user is requesting the index or a specific photo's page If this is a little confusing at this point, don't worry about it too much You will be creating models, views, and controllers in the tutorial and it will all become much clearer once you see them in use Which database should you choose One final note before diving back into the tutorial Express does not care about which database you use The lesson lists a few options but ultimately uses MongoDB In this case, the actual DB you use matters little",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6287,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_102_crud_and_mvc.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "b8e903174462941ab007372a25195014",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_102_crud_and_mvc.md",
    "source_type": "git_repo",
    "title": "express_102_crud_and_mvc",
    "content": "at this point, don't worry about it too much You will be creating models, views, and controllers in the tutorial and it will all become much clearer once you see them in use Which database should you choose One final note before diving back into the tutorial Express does not care about which database you use The lesson lists a few options but ultimately uses MongoDB In this case, the actual DB you use matters littleIf you later decide that you would rather use SQL or something else, you should be able to pick it up fairly easily by reading the documentation At this point, Mongo is probably the most popular choice to use with Express so we recommend just sticking with that for now Assignment\n1 Complete [\"Part 3: Using a Database (with Mongoose)\"](https://developer mozilla org/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose) of the Local Library tutorial Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What does CRUD stand for What does the Model in \"MVC\" refer to What does the View in \"MVC\" refer to What does the Controller in \"MVC\" refer to Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental FreeCodeCamp has a deeper explanation of MVC Web Dev Simplified's Mongoose crash course gives a run-down of how you should expect to use Mongoose for MongoDB in NodeJS, as well as some advanced things you can do with object schemas",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6287,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\express_102_crud_and_mvc.md",
      "source_type": "git_repo"
    },
    "token_count": 331,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "6e6443218797ca974e2e7d44b9a009da",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\project_express_105_forms_and_deployment.md",
    "source_type": "git_repo",
    "title": "project_express_105_forms_and_deployment",
    "content": "Introduction\nThis lesson picks up where the last one left off and has you creating the rest of your views. You'll be focusing on the forms needed to create and update new entries in your database. With the knowledge you pick up here, you'll really be ready to go create your own data-driven web applications. There is, of course, more to learn, but finishing this one is a big step towards actually being able to do your own projects.\nIt's another long multi-part tutorial, with plenty of useful information scattered throughout. Be sure to take your time and read everything!\nThis is the last lesson on the MDN tutorial. The last step, listed below takes you through what you need to do to actually deploy your project so you can share it and show it off, so be sure to link it up in the student solutions below!\nLesson overview\nThis section contains a general overview of topics that you will learn in this lesson.\nDescribe form handling process.\nDescribe validation and sanitization.\nDescribe routes.\nWork with HTML forms in Express using Pug.\nUse forms to get data from users and update the database with this data.\nValidate and sanitize input using express-validator.\nWrite forms to create, update, and delete records from the database.\nAdd basic forms and form-handling code to Node websites.\nAssignment\n1. Complete [\"Part 6: Working with forms\"](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/forms) of the Local Library tutorial.\n1. Deploy your local library app as per [\"Part 7: Deploying to production\"](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/deployment) of the Local Library tutorial.\nReminder: Make sure to hide your MongoDB connection URL behind an environment variable! Once you've hosted your app on Glitch or Railway, you can use the instructions in the MDN tutorial to manage values for environment variables through the Glitch/Railway dashboard.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2054,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\project_express_105_forms_and_deployment.md",
      "source_type": "git_repo"
    },
    "token_count": 398,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "05dd958449d9024a3e316d44098bd706",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\project_inventory_application.md",
    "source_type": "git_repo",
    "title": "project_inventory_application",
    "content": "Introduction\nAlright Let's flex our skills a little That tutorial was humongous, and you learned a lot of things The only way to make it stick is to practice For this project you are going to create an Inventory management app for an imaginary store It's up to you what kind of business this is -- you could be selling groceries, car parts, baby-toys, musical-instruments, ponies or anything Your Inventory app should have categories and items, so when the user goes to the home-page they can choose a category to view, and then get a list of every item in that category You should include all of the CRUD methods for both items and categories, so anybody that's visiting the site can Create, Read, Update or Delete any Item or Category Assignment\n1 Before you begin, take a moment to write down all of the models you'll need and the fields that should go in them It might help to grab a pencil and some paper and literally draw a diagram like you saw in the [MDN tutorial on databases](https://developer mozilla org/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose#Designing_the_LocalLibrary_models) - Items should at least have: a name, description, category, price, number-in-stock and URL, though you should feel free to add more fields if it seems relevant to the type of business you've chosen - Categories should at least have a name, a description and a URL 1 We're going to follow the basic path that was demonstrated by the MDN tutorial to set up and flesh out your app, so first choose a templating language and generate the boilerplate skeleton with express-generator 1 Create a new MongoDB database using the web-interface as demonstrated in the tutorial and then set up your database schemas and models 1 In the Library tutorial you populated your database with some sample data that was provided in a `populatedb js` file Actually understanding how that worked was over your head at the time, but now that you've finished that tutorial you'll be able to understand how it works [Download the `populatedb js` file](https://raw githubusercontent com/hamishwillee/express-locallibrary-tutorial/master/populatedb js) and edit it, or re-write it using the specifics of your models and then run it to populate your database 1 Set up the routes and controllers you're going to need 1 Create all of the 'READ' views (i e",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3593,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\project_inventory_application.md",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "73a092ea8e81047315ea98a5b0186c88",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\project_inventory_application.md",
    "source_type": "git_repo",
    "title": "project_inventory_application",
    "content": "file Actually understanding how that worked was over your head at the time, but now that you've finished that tutorial you'll be able to understand how it works [Download the `populatedb js` file](https://raw githubusercontent com/hamishwillee/express-locallibrary-tutorial/master/populatedb js) and edit it, or re-write it using the specifics of your models and then run it to populate your database 1 Set up the routes and controllers you're going to need 1 Create all of the 'READ' views (i eview category, and view item)\n1 Create all the forms and build out the controllers you need for the rest of the CRUD actions 1 Deploy it and show off what you've done #### Extra credit\n1 Try to figure out how to add and upload images for each item Use the [`multer` middleware](https://github com/expressjs/multer) which was created by the Express team The documentation in the README there should be enough to get you going - While you can store the image buffer data as binary directly in MongoDB, this can be quite a performance hit the more images you have to handle and the larger they are You may wish to look into using a service such as [Cloudinary](https://cloudinary com/documentation/node_integration) where you can upload images to, then store the images' URLs in MongoDB instead 1 We will learn about creating users with secure passwords in a later lesson, but for now we don't want just *anyone* to be able to delete and edit items in our inventory Figure out how to protect destructive actions (like deleting and updating) by making users enter a secret admin password to confirm the action",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3593,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\project_inventory_application.md",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e85264ebd3a1d1a39f66bcda1aa4e953",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\project_mini_message_board.md",
    "source_type": "git_repo",
    "title": "project_mini_message_board",
    "content": "Introduction\nLet's take a quick break from the main Express tutorial to practice what we've already learned At this point you should know enough to use Express to make some fun interactive web apps We're going to create a message board Assignment\n1 Use `express-generator` to set up a basic project using whichever templating language you prefer If you want, you can set it all up manually -- it doesn't really take that much longer - Hint: here are links to some of the more popular templating language docs: [PUG](https://pugjs org/api/getting-started html), [EJS](https://ejs co/#docs), [Handlebars](https://handlebarsjs com/guide/)\n1 Initialize a Git repo in your project directory with\n```bash\ngit init\n```\n1 Create a ` gitignore` file in your project directory that includes `node_modules` 1 We are going to have 2 routes, the index (`\"/\"`) and a new-message form (`\"/new\"`) The generator already created a router for our index, so find that file and open it up It can be found at `routes/index js` There is already a `router get()` method for `\"/\"` that should be rendering your index view, so lets add some messages to it 1 Create an array at the top of your index router called `messages` and put a couple of sample messages inside of it like this:\n```javascript\nconst messages = [\n{\ntext: \"Hi there \",\nuser: \"Amando\",\nadded: new Date()\n},\n{\ntext: \"Hello World \",\nuser: \"Charles\",\nadded: new Date()\n}\n];\n```\n1 Next, in your index template (in the `\"views\"` folder) loop through the messages array using whichever templating language you selected and for each one, display the user, text and the date the message was added Don't forget to make your messages available to your template by including it in the res render 'locals' object (e g `res render('index', { title: \"Mini Messageboard\", messages: messages })`) 1 Next let's set up the new message form In the router add a `router get()` for the `\"/new\"` route and point it to a template named `\"form\"` In the views directory create your `form` template Add a heading, 2 inputs (one for the author's name and one for the message text) and a submit button",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3926,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\project_mini_message_board.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "368054f00a9882688ed3c6738b06183b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\project_mini_message_board.md",
    "source_type": "git_repo",
    "title": "project_mini_message_board",
    "content": "by including it in the res render 'locals' object (e g `res render('index', { title: \"Mini Messageboard\", messages: messages })`) 1 Next let's set up the new message form In the router add a `router get()` for the `\"/new\"` route and point it to a template named `\"form\"` In the views directory create your `form` template Add a heading, 2 inputs (one for the author's name and one for the message text) and a submit buttonTo have the form make a network request you will need to define it with both a method and an action like so:\n```html\nput your inputs and buttons in here ```\n1 With your form set up like this, when you click on the submit button it should send a POST request to the url specified by the action attribute, so go back to your index router and add a `router post()` for `\"/new\"` 1 In order to get and use the data from your form, you will need to access the contents of your form inside `router post()` as an object called `req body` The individual fields inside the body object are named according to the `name` attribute on your inputs (the value of `` will show up as `req body messageText` inside the `router post` function) 1 In your `router post()` take the contents of the form submission and push them into the messages array as an object that looks something like this:\n```javascript\nmessages push({text: messageText, user: messageUser, added: new Date()});\n```\n1 At the end of the `router post()` function use `res redirect('/')` to send users back to the index page after submitting a new message 1 At this point, you should be able to visit `/new` (it might be a good idea to add a link to that route on your index page), fill out the form, submit it and then see it show up on the index page 1 You'll learn how to deploy your app to the web in the next lesson, don't forget to come back and submit it to the submissions below once you're done",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3926,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\express_and_mongoose\\project_mini_message_board.md",
      "source_type": "git_repo"
    },
    "token_count": 439,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2f9610bb01bc69fd2abe4881c63da174",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\nodeJS\\mongoDB\\intro_to_mongoDB.md",
    "source_type": "git_repo",
    "title": "intro_to_mongoDB",
    "content": "Introduction\nData persistence is integral to the vast majority of web applications. Local storage has limitations and poses security risks, and while Backend-as-a-Service (BaaS) options such as Firebase work well, ultimately being able to understand how to structure, build, and query your own database are important skills for any full-stack developer to have.\nFor example, consider X (formerly known as Twitter). Where are your username and password stored? Or perhaps where all of your posts might be fetched from? How does the application determine what posts are shown to you every time you log on? These operations are handled by a database.\nDatabases are split into two types - \"relational\" and \"non-relational\", and each type handles data and scaling in different manners. In this lesson, you will complete a course that teaches you about MongoDB, a popular non-relational database.\nLesson overview\nThis section contains a general overview of topics that you will learn in this lesson.\nSet up a database on MongoDB Atlas.\nUse the mongo shell.\nCreate, edit, and delete documents in a MongoDB database using the mongo shell.\nAssignment\n- Learn more about the [differences between relational and non-relational databases](https://circleci.com/blog/SQL-vs-NoSQL-databases/).\n- Take the entire [MongoDB University \"Introduction to MongoDB\" course](https://learn.mongodb.com/learning-paths/introduction-to-mongodb). This course will teach you the basics of MongoDB and the mongo shell. You will need to make an account.\nWhen you get to the lesson that asks you to install MongoDB Compass you can skip the installation.\nKnowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson. If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge.\nWhat is the difference between a relational database and a non-relational database?\nAdditional resources\nThis section contains helpful links to related content. It isn't required, so consider it supplemental.\nIt looks like this lesson doesn't have any additional resources yet. Help us expand this section by contributing to our curriculum.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2486,
      "relative_path": "git_repos\\odin-project\\archive\\nodeJS\\mongoDB\\intro_to_mongoDB.md",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fdd3db7a2cb6c754fe68d9447f00edc0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\javascript_and_the_backend\\project_wheres_waldo_a_photo_tagging_app.md",
    "source_type": "git_repo",
    "title": "project_wheres_waldo_a_photo_tagging_app",
    "content": "Introduction\nThis project will finally give you a chance to tie together everything you've learned so far It's a project with a lot of complexity so take it one step at a time Working with Rails or Firebase as a backend is pretty straightforward, but you'll be juggling some of the front end functionality too This is entirely within the realm of the kind of thing you might be asked to build on the job (though of course not exactly) Are you ready Hopefully you got a chance to play \"Where's Waldo\" (see here if unfamiliar) as a kid You're given a photograph with tons of stuff going on and you're meant to locate several familiar characters Your Task\nHere, you'll build an app that feels a whole lot like a photo tagging app You'll start with a large photograph which contains several elements the user is meant to find, e g Waldo, The Wizard, Wilma etc name your own if you'd like to use your own photos The user will make selections for each character and they will get feedback on whether they are correct or not To start with, you'll need to choose a photo and identify where exactly each person is to start with and save that to your database When the user clicks the photo, it should place a targeting box around the portion of the photo where the user has clicked That box should contain a list of possible characters When the user selects one of these characters, you should check with your Backend to see if that character is actually within the targeting box Provide the user with appropriate feedback (e g if wrong, an error message) If correct, place a marker on the photo in the character's location In either case, remove the targeting box until the user clicks again Keep track of how long it takes between when the photo is first loaded and when the user finally identifies all characters (do this on the server side otherwise the user could hack their score) Note: do this if you're using rails as your backend Firebase users don't need to add a timer on the backend, instead add one on the front end Once a round is complete, ask the user for his/her name and record that time This will get a bit tricky since you'll have anonymous users you need to keep track of Assignment\n1 Set up a GitHub Repo for this project Follow the instructions atop the [Recipes project](https://www theodinproject com/lessons/foundations-recipes) if you need help 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4229,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\javascript_and_the_backend\\project_wheres_waldo_a_photo_tagging_app.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2b9fd44670788d0ccbce8b8618322531",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\javascript_and_the_backend\\project_wheres_waldo_a_photo_tagging_app.md",
    "source_type": "git_repo",
    "title": "project_wheres_waldo_a_photo_tagging_app",
    "content": "your backend Firebase users don't need to add a timer on the backend, instead add one on the front end Once a round is complete, ask the user for his/her name and record that time This will get a bit tricky since you'll have anonymous users you need to keep track of Assignment 1 Set up a GitHub Repo for this project Follow the instructions atop the [Recipes project](https://www theodinproject com/lessons/foundations-recipes) if you need help 2Think about what you'll need to do to get this all working together This is where it's really helpful to think it completely through on paper or whiteboard ahead of time A few minutes of thought can save you from wasting an hour of coding 3 If you're using Rails as your backend: create a new Rails application with just the bare bones required to load your HTML page for now If you'll be using Firebase, this is a good time to create a new Firebase project for this app, and link to the necessary scripts at the bottom of your HTML page 4 Build the front end functionality without actually using any calls to the back end yet Specifically, that means creating the JavaScript functionality which pops the targeting box and dropdown menu on the screen when the user clicks on the photo and removes it when the user clicks away 5 Now hook up the functionality for validating with your back end whether the user has clicked in the right place for that character 6 Tie it into your front end so you can seamlessly select characters, validate them, and place the appropriate markers on the map if the selection was correct 7 Add in the ability to time the user from when they first load the page and then display their \"score\" (time) when they successfully identify all characters Create a popup that asks them to enter their name for the high scores table if they have earned it 8 Play with it 9 Push your solution to GitHub, Heroku, and/or Firebase Hosting and submit it below This is a serious project, congratulations Optional Extensions:\nLoad many images into your database and allow the user to select from them before starting the game",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4229,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\javascript_and_the_backend\\project_wheres_waldo_a_photo_tagging_app.md",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "4317becba8806713fcece638f1e75d2c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\javascript_and_the_backend\\using_rails_for_your_backend.md",
    "source_type": "git_repo",
    "title": "using_rails_for_your_backend",
    "content": "Introduction\nSo, you've now learned a lot of juicy JavaScript, enabling you to make various components of your HTML/CSS page react to user actions and/or input That's great As you've seen, you can get your apps to do a lot of pretty cool things already, just using client-side JavaScript You may have noticed, though, that there is still an important piece of the puzzle missing: unless you use Local Storage, your app 'forgets' the user's preferences, as well as any other changes made, as soon as the page gets reloaded While Local Storage is great, it's not ideal: it only stores data on the computer from which the user is accessing the page This approach does not allow for the app to 'remember' anything when the same user tries to access it again from a different device For that, you're going to need a real backend Learning Outcomes\nBy the end of this lesson, you should be able to:\nExplain how \"unobtrusive JavaScript\" works\nExplain how to pass data from your Rails application to your JavaScript\nExplain why you should use AJAX to load large batches of data\nBuilding your own backend with Ruby on Rails\nSince you've already learned Ruby on Rails in our full-stack Ruby on Rails path, the next step is obvious: you get to build your own backend with Rails In preparation, reread the Rails lesson on building an API to refresh how to set up a Rails backend that can handle JSON requests Are you done Good Next, it's time to practice allowing your front end JavaScript to talk to your Rails backend using AJAX We'll cover some best practices for how to pass data from one to another, but otherwise it's up to you: you've got everything you need to put together those final pieces of the web development puzzle Assignment\n1 [Check out \"Using JavaScript in your Rails App\" from Daniel Kehoe](http://railsapps github io/rails-javascript-include-external html) It is long and covers a lot of ground, but it's got great content Some of the stuff on dependencies can be skimmed, but pay attention to the `content_for` stuff at the bottom 2 [Refresh yourself on Rails AJAX from RailsGuides](https://guides rubyonrails org/v6 1/working_with_javascript_in_rails html) (just skim the top few sections) 3 Read [Bootstrapping JSON data into a Rails View](http://jfire",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4108,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\javascript_and_the_backend\\using_rails_for_your_backend.md",
      "source_type": "git_repo"
    },
    "token_count": 503,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1bd0078e9564008c3c3030ff48e53112",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\javascript_and_the_backend\\using_rails_for_your_backend.md",
    "source_type": "git_repo",
    "title": "using_rails_for_your_backend",
    "content": "Assignment 1 [Check out \"Using JavaScript in your Rails App\" from Daniel Kehoe](http://railsapps github io/rails-javascript-include-external html) It is long and covers a lot of ground, but it's got great content Some of the stuff on dependencies can be skimmed, but pay attention to the `content_for` stuff at the bottom 2 [Refresh yourself on Rails AJAX from RailsGuides](https://guides rubyonrails org/v6 1/working_with_javascript_in_rails html) (just skim the top few sections) 3 Read [Bootstrapping JSON data into a Rails View](http://jfireio/blog/2012/04/30/how-to-securely-bootstrap-json-in-a-rails-view) to learn about passing data to your front end Knowledge Check\nHow do you load custom JavaScript in a given Rails view page How does \"unobtrusive JavaScript\" work How can you pass data from your Rails app to your JavaScript Why would you want to use AJAX to load large batches of data Additional Resources\nThis section contains helpful links to other content It isn't required, so consider it supplemental How to Build a fullstack Rails 7 backend with React Frontend\nGrabbing your Rails form CSRF token with JavaScript so Rails doesn't yell at you with \"Warning, can't verify CSRF token authenticity\", via SO and another SO post on the CSRF token",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4108,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\javascript_and_the_backend\\using_rails_for_your_backend.md",
      "source_type": "git_repo"
    },
    "token_count": 290,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "609c5f1b953693757a5082f2f662c48b",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\javascript_and_the_backend\\using_baas_for_your_backend.md",
    "source_type": "git_repo",
    "title": "using_baas_for_your_backend",
    "content": "Introduction\nSo, you've now learned a lot of juicy JavaScript, enabling you to make various components of your HTML/CSS page react to user actions and/or input That's great As you've seen, you can get your apps to do a lot of pretty cool things already, just using client-side JavaScript You may have noticed, though, that there is still an important piece of the puzzle missing: unless you use Local Storage, your app 'forgets' the user's preferences, as well as any other changes made, as soon as the page gets reloaded While Local Storage is great, it's not ideal: it only stores data on the computer from which the user is accessing the page This approach does not allow for the app to 'remember' anything when the same user tries to access it again from a different device For that, you're going to need a real backend Learning Outcomes\nBy the end of this lesson, you should be able to:\nExplain which services are offered by Firebase\nExplain how to set up your app to use those services from Firebase Hosting\nExplain how to set up your app to communicate with and/or pass data to and from the various Firebase services\nOK, so now what You can learn how to build a back-end later using Node js For now, you can outsource your backend functionality to a Backend-as-a-Service (BaaS) company like Firebase or Apigee For this lesson, we'll be learning Firebase Assignment\n1 [Explore the different services offered by Firebase](https://firebase google com/products) Pay particular attention to [Cloud Firestore](https://firebase google com/products/firestore) for now You may or may not also want to use [Firebase Hosting](https://firebase google com/products/hosting) and/or any of the other services offered by Firebase, particularly [Cloud Storage](https://firebase google com/products/storage) and [Authentication](https://firebase google com/products/auth), but you probably won't need any of those for your first Firebase project 2 Complete [this Google Codelab](https://codelabs developers google com/codelabs/firebase-web/#0), which will walk you through setting up a sample app on Firebase step by step Some people have reported running into issues when doing the Firebase codelab, specifically at the emulator step If this affects you you can skip it for now 3 Go back to one of the previous projects (e g",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4085,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\javascript_and_the_backend\\using_baas_for_your_backend.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "3e7d2b1f489c135028cbd6e6776e4a34",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\javascript_and_the_backend\\using_baas_for_your_backend.md",
    "source_type": "git_repo",
    "title": "using_baas_for_your_backend",
    "content": "google com/products/auth), but you probably won't need any of those for your first Firebase project 2 Complete [this Google Codelab](https://codelabs developers google com/codelabs/firebase-web/#0), which will walk you through setting up a sample app on Firebase step by step Some people have reported running into issues when doing the Firebase codelab, specifically at the emulator step If this affects you you can skip it for now 3 Go back to one of the previous projects (e gthe library project or the to-do app), and [follow the Firebase setup guide](https://firebase google com/docs/web/setup hl=en) to prepare it for interaction with a Firebase backend - **Caution:** If you're _not_ going to be hosting your app on Firebase Hosting, but prefer to leave it where it is (e g on GitHub Pages), take a closer look at the [stackoverflow answer](https://stackoverflow com/a/50799016) to add your github page into Firebase authentication domains Then, use what you learned in the codelab to make your own app actually interact with Firebase Knowledge Check\nWhich services does Firebase offer How do you set up your app to use those services from Firebase Hosting and/or from an external host (like GitHub Pages) How do you get your app to communicate with and/or pass data to and from the various Firebase services Additional Resources\nThis section contains helpful links to other content It isn't required, so consider it supplemental This youtube video to reinforce the learnings from Google Codelab",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4085,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\javascript_and_the_backend\\using_baas_for_your_backend.md",
      "source_type": "git_repo"
    },
    "token_count": 311,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "58fefc01dff9c4426d817b8057ac72b9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\advanced_concepts.md",
    "source_type": "git_repo",
    "title": "advanced_concepts",
    "content": "Introduction\nWith all the concepts we have learned in this section, you are more than ready to create your own React applications However, there are a lot of other, more advanced concepts out there that we haven't discussed, but need to inform you of This lesson will be used to introduce you to a few advanced concepts and give you some tips on your path as a React developer This section isn't meant to teach these concepts, but to give you a high-level overview to enable you to research in the event you need them or wish to learn more This lesson is meant as a checklist Once you are secure with the basics, come back to this lesson and work through the advanced concepts This doesn't have to be now If you first want to move ahead in the curriculum and apply your knowledge or feel like you do not need a particular concept right now, just skip it and come back another time when you are ready As a friendly reminder, Google and StackOverflow are your friends We should be familiar with these tools at our disposal at this point Good Luck Learning Outcomes\nBy the end of this lesson, you should be able to do the following:\nExplain PropTypes Explain Styled Components Explain Redux and state management systems Explain how Context API works Explain how to make your own React Hooks Guide to Advanced React\n1 PropTypes\nOne common discussion about JavaScript is whether it would be better if you could declare types for variables and properties Many programmers agree that the pattern of declaring types, which you have in many other programming languages is preferable because it allows you to catch errors, such as passing a string to a variable that should be a number Therefore, React recommends using the prop-types for runtime type checking for React props and similar objects If that's not enough for you, you could also use TypeScript with React 2 Styled Components\nIf you start writing larger applications you will, with certainty, encounter the problem that you might want to style buttons or anything else across your application similarly One way you could solve this problem is through code duplication (writing even the most basic CSS for each button) However, this wouldn't be a very good (or clean) code The styled-components package provides a cleaner way to do this It allows you to give some default stylings to HTML elements, meaning you define a button with some basic styling and reuse this button throughout your application This way there is no code duplication and it allows your application to be more scalable 3 Redux\nYou might have already heard about Redux",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5746,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\advanced_concepts.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "e22830f976a6291c7d14081b4c567bf1",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\advanced_concepts.md",
    "source_type": "git_repo",
    "title": "advanced_concepts",
    "content": "CSS for each button) However, this wouldn't be a very good (or clean) code The styled-components package provides a cleaner way to do this It allows you to give some default stylings to HTML elements, meaning you define a button with some basic styling and reuse this button throughout your application This way there is no code duplication and it allows your application to be more scalable 3 Redux You might have already heard about ReduxRedux is the most popular state management system out there It is not a part of React, but the two can be very easily combined Together, they make up an extremely powerful duo The purpose is to store your application's state in a single place, commonly called a \"store\" You then dispatch actions to the store, where a reducer will handle the state changes The primary benefit of using a state management library is to prevent having to pass props through multiple levels of the component tree A state management library is often only recommended for larger applications 4 Context API\nAs your application becomes larger and you have multiple components to ensure reusability, you might find yourself passing props through a lot of components in the middle or you might have a lot of components that require the same props This pattern is known as prop drilling To help avoid this, React provides the Context API that lets a parent component provide data to all the components in its tree without having to pass props Imagine that you have implemented an optional dark theme in your website and quite a few of your components require this theme data to correctly style itself - having a context of your theme will allow all children components to have access to this data The Passing Data Deeply with Context webpage on React Docs does an excellent job of explaining on how to use the Context API Furthermore, if you wish to learn more advanced concepts in React, React Docs is a great resource to dig into 5 More Hooks\nThere are a lot of hooks out there, with the number only increasing by the day (since you can write your own ) As you have seen in previous lessons, it seems like the React team wants us to use more functional components with hooks in the future, so it is definitely worth getting to know both the hooks that are built-in to React, as well as how to create your own Knowledge Check\nThis section contains questions for you to check your understanding of this lesson If you’re having trouble answering the questions below on your own, review the material above to find the answer What are PropTypes and why can it be beneficial to use them",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5746,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\advanced_concepts.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "af818a2f2194cb81f0096f7efcbc46c8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\advanced_concepts.md",
    "source_type": "git_repo",
    "title": "advanced_concepts",
    "content": "components with hooks in the future, so it is definitely worth getting to know both the hooks that are built-in to React, as well as how to create your own Knowledge Check This section contains questions for you to check your understanding of this lesson If you’re having trouble answering the questions below on your own, review the material above to find the answer What are PropTypes and why can it be beneficial to use themWhat are Styled Components and how do they make your code cleaner What is Redux and why are state management systems used in many large applications What is prop drilling and how can you use Context API to avoid it How can you create your own Hooks",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5746,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\advanced_concepts.md",
      "source_type": "git_repo"
    },
    "token_count": 128,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "27a6cf61bdad11ba27fa79a0104ae985",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\hooks.md",
    "source_type": "git_repo",
    "title": "hooks",
    "content": "Introduction\nAs mentioned in the previous lesson, the lifecycle methods such as componentDidMount, componentDidUpdate and also the render method can only be called in class components This was a reason why functional components were for long referred to as \"dumb\" or \"stateless\" components They were usually just used to return some JSX because of their inability to have a state or lifecycle methods Since the introduction of Hooks, this has changed completely Hooks allow functional components to also have a lifecycle as well as a state Other than the basic hooks you will encounter in this section, there are many other hooks, such as useRef or useContext, just to name two React also provides the ability to write your own custom hooks This changes the game between functional vs class components Functional components are no longer considered “dumb” components Many programmers have increasingly begun to prefer functional components over class components For more information have a look here Now we will discuss the most basic hooks Create a create-react-app and use the App js file for the following examples This won't actually create a lot of functionality, but when coding along, you will remember everything better thanks to muscle memory Learning Outcomes\nBy the end of this lesson, you should be able to:\nExplain how state is managed in a functional component\nExplain how lifecycle methods work in a functional component\nuseState\nSo finally, as already mentioned in an earlier section, we will be coming back here to discuss how to use state in functional components The useState hook makes it possible to declare a state in functional components Here is an example on how to use it:\n~~~javascript\nimport React, { useState } from \"react\";\nconst App = () => {\nconst [count, setCount] = useState(0);\nconst incrementCount = () => {\nsetCount(count + 1);\n};\nreturn (\n{count}\nIncrement\n);\n};\nexport default App;\n~~~\nGo try this out in the browser First, we have to import the useState hook from react Then we can declare a state like this: const [count, setCount] = useState(0) This is the syntax to declare a state The name \"count\" and \"setCount\" is totally up to us, we could also call it \"something\" and \"somethingElse\" but this wouldn't be very good because then \"somethingElse\" would be called to set \"something\" in the state It doesn't read as easily The convention is to always call the second value like the first, just with a \"set\" in front",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9727,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\hooks.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "be074280fe4e72935073284096e81752",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\hooks.md",
    "source_type": "git_repo",
    "title": "hooks",
    "content": "a state like this: const [count, setCount] = useState(0) This is the syntax to declare a state The name \"count\" and \"setCount\" is totally up to us, we could also call it \"something\" and \"somethingElse\" but this wouldn't be very good because then \"somethingElse\" would be called to set \"something\" in the state It doesn't read as easily The convention is to always call the second value like the first, just with a \"set\" in frontThe useState(0) call initializes our state with the value we set in parentheses (0) Afterwards, we are declaring a function, which right now just sets a new count In this case, we are incrementing the current count by one This function will be called anytime we click the button In the div above the button, we are just displaying the current state One thing to mention and keep in mind here is that setting the state is an asynchronous task Additionally, setting the state is called a re-render That’s the reason we see the new count when clicking the button If it wouldn’t trigger a re-render, then we would still see the old count Our component will update after setting the state As mentioned in our last lecture, we might want to use this opportunity for updating to do some tasks Unfortunately, we don’t have any lifecycle methods for functional components, right useEffect\nWell, we don't have any lifecycle methods such as componentDidMount, componentDidUpdate or componentWillUnmount, but we do have something better We have useEffect, which can actually do everything the above-mentioned lifecycle methods can do Let's have a closer look ~~~javascript\nimport React, { useState, useEffect } from \"react\";\nconst App = () => {\nconst [color, setColor] = useState(\"black\");\nuseEffect(() => {\nconst changeColorOnClick = () => {\nif (color === \"black\") {\nsetColor(\"red\");\n} else {\nsetColor(\"black\");\n}\n};\ndocument addEventListener(\"click\", changeColorOnClick);\nreturn () => {\ndocument removeEventListener(\"click\", changeColorOnClick);\n};\n}, [color]);\nreturn (\nThis div can change color Click on me );\n};\nexport default App;\n~~~\nTry it out to get an idea of what is happening Once you've done that, let's go through it all in detail You should already be familiar with the useState logic implemented Basically, we are just saving a color in state, and on click, we are changing the color saved in state",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9727,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\hooks.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "42cce65ce2c0ebb7e40d4e3ce162b5b0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\hooks.md",
    "source_type": "git_repo",
    "title": "hooks",
    "content": "=> { document removeEventListener(\"click\", changeColorOnClick); }; }, [color]); return ( This div can change color Click on me ); }; export default App; ~~~ Try it out to get an idea of what is happening Once you've done that, let's go through it all in detail You should already be familiar with the useState logic implemented Basically, we are just saving a color in state, and on click, we are changing the color saved in stateThis color is applied to our div element Don't worry about all the inline styles of the div, the only important thing within this styles object is where we set the background to the color that is currently saved in state Now the only thing we haven't looked at is the useEffect hook As mentioned, this hook can do a lot The syntax is as follows:\nuseEffect(() => {}, [])\nIn the curly brackets, you can write the code that will be executed The dependency array at the end is optional, however, you will include it more often than not A dependency is any state, prop or context that is used within the useEffect callback, but you can also include states or props that are not useEffect will trigger based on changes in the dependencies listed ESLint will warn you if it expects a dependency, however, this is a warning, and they are not required You have three different options for the dependency array:\nLeave it empty If you leave it empty the useEffect hook would look something like this:\n~~~javascript\nuseEffect(() => {\n// Do something\n}, []);\n~~~\nThis option is equal to a componentDidMount lifecycle method, meaning the hook runs one time when the component mounts (is inserted in the DOM tree)\nAdd a dependency to the array Like we did it in our example code ~~~javascript\nuseEffect(() => {\n// Do something\n}, [color]);\n~~~\nThis way, the useEffect hook will re-run anytime the dependency (color) changes This is similar to a componentDidUpdate method, with the only difference that it only runs when a certain condition has changed Leave out the dependency array ~~~javascript\nuseEffect(() => {\n// Do something\n});\n~~~\nYou can also completely leave out the dependency array This way, the useEffect hook runs anytime the component is updated, AND right after the initial render This is the difference compared to the componentDidUpdate lifecycle method, because it also runs after the initial render This way it would be equal to a componentDidMount and componentDidUpdate method combined",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9727,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\hooks.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "03f39c36bb8dbc3041e47d24d5c8a898",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\hooks.md",
    "source_type": "git_repo",
    "title": "hooks",
    "content": "a certain condition has changed Leave out the dependency array ~~~javascript useEffect(() => { // Do something }); ~~~ You can also completely leave out the dependency array This way, the useEffect hook runs anytime the component is updated, AND right after the initial render This is the difference compared to the componentDidUpdate lifecycle method, because it also runs after the initial render This way it would be equal to a componentDidMount and componentDidUpdate method combinedThe return statement we are adding to our useEffect is actually equal to a componentWillUnmount method ~~~javascript\nreturn () => {\ndocument removeEventListener(\"click\", changeColorOnClick);\n};\n~~~\nIf you write a return statement like the above in a useEffect, it will do the same as a componentWillUnmount method As you can see, there is a lot to the useEffect hook You can also create your own custom hooks if desired However, with the above mentioned hooks useState and useEffect you will be fine in most of your smaller projects Assignment\n1 The React documentation provides a whole section on hooks Read through all steps [here](https://react dev/reference/react) You can also always refer back to this page if you get stuck The main idea is to understand the concepts, the details come with time 2 Now go back to your CV Project and rewrite it using functional components and hooks Additional Resources\nThis section contains helpful links to other content It isn't required, so consider it supplemental Here is another article about hooks, which provides a simpler version of the official React hooks documentation Watch this video for a look into useState(), useEffect() and custom hooks in great detail There is currently a small bug in this program as it is currently written, which can be fixed by changing the url on CharPicker js line 10 from https://swapi co to https://swapi dev Knowledge Checks\nThis section contains questions for you to check your understanding of this lesson If you’re having trouble answering the questions below on your own, review the material above to find the answer How do you declare state in a functional component What is the correct naming convention for state values How do you mimic componentDidMount, componentDidUpdate and componentWillUnmount in a functional component Explain how the dependency array in the useEffect hook impacts the effect of the hook",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9727,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\hooks.md",
      "source_type": "git_repo"
    },
    "token_count": 435,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "76150fca1fa7bdcbba50c38d592d6966",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\lifecycle_methods.md",
    "source_type": "git_repo",
    "title": "lifecycle_methods",
    "content": "Introduction\nNow that you're done with your first project, you are on your way to becoming advanced with React So let's talk about some more advanced topics The first will be lifecycle methods This is an incredibly important topic, so pay close attention and make sure you understand everything Lifecycle methods are special methods built into React, used to operate on components throughout their duration in the DOM For example, when the component mounts, renders, updates, or unmounts You already know the most important lifecycle method, the render method Soon you will know a few more, with a good understanding of when to use them and what tasks should be done within them One important thing to notice is that lifecycle methods can only be used in class components In functional components we have other options But more on that in the next lesson Let's begin Learning Outcomes\nBy the end of this lesson, you should be able to:\nExplain the lifecycle of a component\nExplain the most important lifecycle methods\nExplain which tasks should be triggered at the various lifecycle stages of a component\nLifecycle\nAs stated in the introduction, a component's lifecycle is the sequence of stages an instance of a component goes through in the DOM (or virtual DOM in React's case) Here's a quick example:\nCreation of the component (componentDidMount)\nRender of the component (render)\n(Optional) Update of the component (componentDidUpdate)\nDeath of the component (componentWillUnmount)\nA component can be in different states of its \"life\", and in React we can use those states to handle certain tasks ComponentDidMount\nAs the name already suggests, this method is run when the component is mounted, meaning when it is inserted in the DOM tree Common tasks that are done in this method are:\nConnect to web APIs or JavaScript frameworks\nSet Timers using setTimeout or setInterval\nAdd event listeners\nRender\nWe are already familiar with the render method in React, each class component needs to contain a render method, and it is fairly simple to understand The render method contains all the logic your component should display on the screen It might also contain a null value, if you don't want to show anything (Conditional Rendering)\nComponentDidUpdate\nThis method is not called for the initial render, but it is called any other time that the component updates This means that this method is prone to infinite loops if used to update state in a way that would cause a re-render, and so it should include a conditional statement to prevent that",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5562,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\lifecycle_methods.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "f8f08f145d3f2321d632319e3416f601",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\lifecycle_methods.md",
    "source_type": "git_repo",
    "title": "lifecycle_methods",
    "content": "should display on the screen It might also contain a null value, if you don't want to show anything (Conditional Rendering) ComponentDidUpdate This method is not called for the initial render, but it is called any other time that the component updates This means that this method is prone to infinite loops if used to update state in a way that would cause a re-render, and so it should include a conditional statement to prevent thatFor example, it could compare the new props with the previous props to make sure some value changed This method is a great place to work and operate on the DOM when the component has updated It is also useful to send network requests when specific conditions are met For example, if a user changed accounts, we could now fetch the data for that new account during this lifecycle method ComponentWillUnmount\nThis is the last lifecycle method, which will be called when the component is removed from the DOM tree Usually you would do cleanup tasks in this method This often includes cleaning up what you added in the componentDidMount method A few examples are:\nRemove event listeners\nCancelling network requests\nOther cleanup routines\nAssignment\n1 Read [this article](https://programmingwithmosh com/javascript/react-lifecycle-methods/) for a great overview of lifecycle methods in React 2 The React documentation is always a good source as it's well structured In [this article](https://react dev/reference/react/Component) you can read more about lifecycle methods from the people who made it 3 Code along with [this video](https://www youtube com/watch v=m_mtV4YaI8c), it gives you a practical example about how those methods work and when React calls them *\n*If you coded along with the last video, and you used `create-react-app` to setup your environment, you may have noticed that the last lifecycle method talked about, `componentDidCatch`, does not function the same way for you as in the video You can read about it [here](https://stackoverflow com/a/48354840) Also, while coding along, you may have noticed that whenever the counter component mounts for the first time, it automatically gets unmounted and remounted This is happening because of a feature introduced in React 18 You can read about it [here](https://reactjs org/docs/strict-mode html#ensuring-reusable-state) Additional Resources\nThis section contains helpful links to other content It isn't required, so consider it supplemental",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5562,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\lifecycle_methods.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "6c7ebc44051edea49d19257e84a4dc1a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\lifecycle_methods.md",
    "source_type": "git_repo",
    "title": "lifecycle_methods",
    "content": "the same way for you as in the video You can read about it [here](https://stackoverflow com/a/48354840) Also, while coding along, you may have noticed that whenever the counter component mounts for the first time, it automatically gets unmounted and remounted This is happening because of a feature introduced in React 18 You can read about it [here](https://reactjs org/docs/strict-mode html#ensuring-reusable-state) Additional Resources This section contains helpful links to other content It isn't required, so consider it supplementalHere is another great resource for understanding React Lifecycle methods\nKnowledge Checks\nThis section contains questions for you to check your understanding of this lesson If you’re having trouble answering the questions below on your own, review the material above to find the answer What is a component's lifecycle Explain the most important lifecycle methods\nWhich tasks should be triggered at the various lifecycle stages of a component",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5562,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\lifecycle_methods.md",
      "source_type": "git_repo"
    },
    "token_count": 187,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9f26acda8850bc6b301e118a39796cbc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\project_cv_application.md",
    "source_type": "git_repo",
    "title": "project_cv_application",
    "content": "Introduction\nCongratulations, you made it to the first project In this project, you will be creating a small CV application It's a great project to get you started, because it includes many of the basic concepts you've learned so far Just a quick reminder\nLearning a new technology is never easy Along the way you might think: \"Well, I could easily implement this in plain Javascript\" BUT don't let that demotivate you If you keep pushing, you will end up far more productive than you were before with the ability to add a new skill to your skillset So let's get started Assignment\n1 Create a new project using `npx create-react-app cv-project` If you need a reminder on how it works, check out the previous lessons Don't forget to setup a GitHub repository for your project, to push your progress 2 Remove the boilerplate code created by `create-react-app` 3 You should use class components for this project You're going to find a lot of code written using class components and this practical experience will help you understand it when encountered You'll also revisit this project in a later lesson to replace the class components with functional ones 4 Think about how to structure your application into components Your application should include:\n1 A section to add general information like name, email, phone number 2 A section to add your educational experience (school name, title of study, date of study)\n3 A section to add practical experience (company name, position title, main tasks of your jobs, date from and until when you worked for that company)\n5 Be sure to include an edit and submit button for each section or for the whole CV, your preference The submit button should submit your form and display the value of your input fields in HTML elements The edit button should add back (display) the input fields, with the previously displayed information as values In those input fields, you should be able to edit and resubmit the content You're going to make heavy use of state and props, so make sure you understood those concepts 6 Create a `components` folder in your `src` directory and add your components 7 Include a `styles` folder in your `src` directory for your CSS files You'll need to import these in the component files to use them 8 Don't forget to push your solution to GitHub You should be proud of your work and show it off to the world",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2702,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\project_cv_application.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a8a4c3af8957ba759c2bb03ff6c43f18",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\project_cv_application.md",
    "source_type": "git_repo",
    "title": "project_cv_application",
    "content": "to make heavy use of state and props, so make sure you understood those concepts 6 Create a `components` folder in your `src` directory and add your components 7 Include a `styles` folder in your `src` directory for your CSS files You'll need to import these in the component files to use them 8 Don't forget to push your solution to GitHub You should be proud of your work and show it off to the worldTip: If you're confused on how to deploy using GitHub Pages, take a look at [this article](https://blog usejournal com/how-to-deploy-your-react-app-into-github-pages-b2c96292b18e)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2702,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\project_cv_application.md",
      "source_type": "git_repo"
    },
    "token_count": 139,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "fc479ee405fe9bc997826077eb4e6d17",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\handle_inputs_and_render_lists.md",
    "source_type": "git_repo",
    "title": "handle_inputs_and_render_lists",
    "content": "Introduction\nBefore we go any further, we'll dive into an assignment that will test our knowledge thus far You should attempt to do the assignment on your own first You can then proceed further along in this lesson to see the walkthrough of how we approached it Don't be discouraged if you find yourself stuck The previous material should equip you to solve or search for the right things However, once you've given it an honest effort (you'd only be cheating yourself if you didn't ), continue with the lesson to achieve enlightenment on how things can be done If you feel uneasy about what we've learned so far, go back and review the concepts of state and props from the previous lessons Learning Outcomes\nUnderstanding how to render lists in React\nUnderstanding how to handle input fields and forms in React Assignment\nDo-It-Yourself Guide\nOur application will be made of two components, App and Overview Your application should render an input field and a submit button With the submit button, you can add the content from your input to a \"tasks array\" that is managed in state (We will use class components for this example because we haven't introduced hooks in this section yet) Finally, for each task in the tasks array, an HTML list element should be rendered Run npx create-react-app task-app, cd into your project and open it You can delete everything in the return statement of the App component and just return an empty div You can also delete all of the boilerplate create-react-app provides and just leave index js and App js in the src directory Just make sure to clean up the import statements and the reportWebVitals in the two remaining files If you aren't familiar with what code or files we are referring to, go back to the first lesson of this section Create a components folder in your src directory and create a file for your component called Overview js Overview js should just render  our tasks, while App js is going to handle the input field with the logic With the intended functionality explained, it's your turn to implement this React app You can do it You are not required to style this assignment unless you wish to, the focus is on using event handlers and dealing with forms with state Quick tip: Use the JavaScript function map to map over your tasks array You will need to provide a unique key to each item (read the warning, you'll know it when you see it in the console ) And there is a difference between handling input fields in plain JavaScript and in React",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16042,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\handle_inputs_and_render_lists.md",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "58b9ffe0389dd47b2fca2f6de07d54f7",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\handle_inputs_and_render_lists.md",
    "source_type": "git_repo",
    "title": "handle_inputs_and_render_lists",
    "content": "not required to style this assignment unless you wish to, the focus is on using event handlers and dealing with forms with state Quick tip: Use the JavaScript function map to map over your tasks array You will need to provide a unique key to each item (read the warning, you'll know it when you see it in the console ) And there is a difference between handling input fields in plain JavaScript and in ReactIf you face a problem with it, attempt to figure it out on your own using tools like the documentation, StackOverflow, Google, or experimenting But fear not, we will again provide an overview of our solution below Detailed Guide\nLet's get started First, run npx create-react-app task-app in your terminal, and open the project in your text editor Delete all files in the src directory and just leave index js and App js Open your App js file in your src directory and make sure it looks like this ~~~javascript\n// App js\nimport React, { Component } from \"react\";\nclass App extends Component {\nrender() {\nreturn Hello World;\n}\n}\nexport default App;\n~~~\nMake sure to clean the index js as well It should look something similar to this:\n~~~javascript\n// index js\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \" /App\";\nconst root = ReactDOM createRoot(document getElementById('root'));\nroot render(\n);\n~~~\nWe may style the application using \"vanilla\" CSS to make it look a little bit nicer At this point, you should be familiar with the basics of CSS from the previous material If you intend on styling the application, we highly recommend that you use your own styling instead of using CSS frameworks that are beyond the current scope of the curriculum Please refer to both MDN and React documentation if you wish to know more about how to style React applications with CSS If you are following along with this tutorial and do not wish to style the application, you can skip this step Go back to your src directory and create a new folder called components with a file named Overview js This and our App js file will be the main parts of the project In Overview js, we will display all our tasks, while the App component in App js will contain all the logic and manage state Don't forget to capitalize the names of your components It doesn't change their functionality, but it is a widely accepted \"best practice\" Finally, let's write some code To begin, in our App",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16042,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\handle_inputs_and_render_lists.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "9a330f99f66fed4db7f448a8cb8c1c68",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\handle_inputs_and_render_lists.md",
    "source_type": "git_repo",
    "title": "handle_inputs_and_render_lists",
    "content": "with a file named Overview js This and our App js file will be the main parts of the project In Overview js, we will display all our tasks, while the App component in App js will contain all the logic and manage state Don't forget to capitalize the names of your components It doesn't change their functionality, but it is a widely accepted \"best practice\" Finally, let's write some code To begin, in our Appjs file, our class component should look like this ~~~javascript\n// App js\nimport React, { Component } from \"react\";\nclass App extends Component {\nconstructor() {\nsuper();\nthis state = {\ntask: { text: ''},\ntasks: [],\n};\n}\nrender() {\nconst { task, tasks } = this state;\nreturn (\n<div>\n<form>\n<label htmlFor=\"taskInput\">Enter task</label>\n<input type=\"text\" id=\"taskInput\"/>\n<button type=\"submit\">\nAdd Task\n</button>\n</form>\n</div>\n);\n}\n}\nexport default App;\n~~~\nWe created the skeleton of our component First, we imported React and Component from \"react\", then we initialized the constructor In the constructor, we defined state with:\n~~~javascript\nthis state = {\ntask: { text: '' },\ntasks: [],\n};\n~~~\nWe assigned task to an object and task text to an empty string, this will be the state handling what we type in our input field And tasks will initially be set to an empty array Later, we will include all of our tasks here Also, inside the render function, we destructured our state in order to make our code look cleaner when using it After that, we render a form element with an input and a button element Now, let's have a look at what our application looks like Run npm start in your terminal to open up the application in the browser You should now see an input field with a label and a submit button When you click the button, nothing happens and the page only refreshes Let's add some functionality to it Go back to your App js component and add the following two functions Make sure to add those functions between your constructor and the render method ~~~javascript\nhandleChange = (e) => {\nthis setState({\ntask : {\ntext: e target value,\n}\n});\n};\nonSubmitTask = (e) => {\ne preventDefault();\nthis setState({\ntasks: this state tasks concat(this state",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16042,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\handle_inputs_and_render_lists.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "48b5fff22cee1e85ea51f67e689c83cd",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\handle_inputs_and_render_lists.md",
    "source_type": "git_repo",
    "title": "handle_inputs_and_render_lists",
    "content": "you click the button, nothing happens and the page only refreshes Let's add some functionality to it Go back to your App js component and add the following two functions Make sure to add those functions between your constructor and the render method ~~~javascript handleChange = (e) => { this setState({ task : { text: e target value, } }); }; onSubmitTask = (e) => { e preventDefault(); this setState({ tasks: this state tasks concat(this statetask),\ntask: { text: '' },\n});\n};\n~~~\nNaturally, if we do not invoke those functions nothing will change in our application So let's call them The handleChange function will be our onChange handler for our input field It sets the current task in state to whatever we type in our input field The onSubmitTask function will be our onSubmit handler for our form element The onSubmit handler of the form should be invoked by clicking the button In the onSubmitTask function, we first call e preventDefault() because we don't want the default behavior of refreshing the form anytime we submit it After that, we modify state The following line does the magic ~~~javascript\ntasks: this state tasks concat(this state task),\n~~~\nIt adds the task (whatever is in our input field when we submit the form) to our tasks array Later we can map over this array to display all the tasks we submitted Make sure that you DON'T directly assign state That is also the reason we don't use the push method here It would give us an error After that, we set task in state to the initial object with task text as an empty string, because we want our input field to be empty, in order to add another task We still haven't invoked those functions yet, so let's do that In your App js component in your render method, add an onChange handler to your input element like so:\n~~~javascript\n~~~\nNotice that we also have to specify the value attribute for React input elements In this case we want the value of the input field to be what we saved in our task object in state under the text property And also add the onSubmitTask function to our form element like so:\n~~~javascript\n{/* Leave all your code Just add the onSubmit handler to the form element, or\nas an onClick handler to the submit button, as you prefer */}\n~~~\nIf you add an onSubmit handler to the form, your button must be of type=\"submit\", otherwise it won't work",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16042,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\handle_inputs_and_render_lists.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "c5580362ba37fb0e2a4d66e079693d60",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\handle_inputs_and_render_lists.md",
    "source_type": "git_repo",
    "title": "handle_inputs_and_render_lists",
    "content": "field to be what we saved in our task object in state under the text property And also add the onSubmitTask function to our form element like so: ~~~javascript {/* Leave all your code Just add the onSubmit handler to the form element, or as an onClick handler to the submit button, as you prefer */} ~~~ If you add an onSubmit handler to the form, your button must be of type=\"submit\", otherwise it won't workAlternatively, you can add an onClick event to the button which calls the onSubmitTask function Great, if you run your application now with npm start (or refresh the browser if it's still running), you will still see no changes, except that the page doesn't refresh when you submit something That's because we haven't displayed anything yet Let's do that now Go to your Overview js file in the components folder and add the following code:\n~~~javascript\n// Overview js\nimport React from \"react\";\nconst Overview = (props) => {\nconst { tasks } = props;\nreturn (\n{tasks map((task) => {\nreturn {task text};\n})}\n);\n};\nexport default Overview;\n~~~\nIt takes the tasks from the props and maps over it For each task it will then display a li element with the content of tasks When checking out the application in the browser we can see we received an error message which says that a unique key is required React always requires you to add a unique key to each element when you map over a list In real world projects you often use database ids as unique keys, however in this project we are not using a database, so let's install a package that provides us with unique ids Run npm install uniqid in your project folder Uniqid is a package which creates unique ids based on the current time, the process and the machine name Once this is done, we just have to include it like this:\n~~~javascript\n// App js\nimport React, { Component } from \"react\";\nimport uniqid from \"uniqid\";\nclass App extends Component {\nconstructor() {\nsuper();\nthis state = {\ntask: {\ntext: '',\nid: uniqid()\n},\ntasks: [],\n};\n}\nhandleChange = (e) => {\nthis setState({\ntask: {\ntext: e target value,\nid: this state task id,\n},\n});\n};\nonSubmitTask = (e) => {\ne preventDefault();\nthis setState({\ntasks: this state tasks concat(this state",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16042,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\handle_inputs_and_render_lists.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "d138840613f9fcf0dcad09b67fbf932e",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\handle_inputs_and_render_lists.md",
    "source_type": "git_repo",
    "title": "handle_inputs_and_render_lists",
    "content": "like this: ~~~javascript // App js import React, { Component } from \"react\"; import uniqid from \"uniqid\"; class App extends Component { constructor() { super(); this state = { task: { text: '', id: uniqid() }, tasks: [], }; } handleChange = (e) => { this setState({ task: { text: e target value, id: this state task id, }, }); }; onSubmitTask = (e) => { e preventDefault(); this setState({ tasks: this state tasks concat(this statetask),\ntask: {\ntext: '',\nid: uniqid()\n},\n});\n};\n~~~\n~~~javascript\n// Overview js\nimport React from \"react\";\nconst Overview = (props) => {\nconst { tasks } = props;\nreturn (\n{tasks map((task) => {\nreturn {task text};\n})}\n);\n};\nexport default Overview;\n~~~\nAlmost done, the only thing we need to do is import our Overview component to our App js file and add it in our render method, while passing down the tasks array as props Add this line to the top of your App js file, right below where we import React ~~~javascript\nimport Overview from \" /components/Overview\";\n~~~\nAnd then add the Overview component to your render method in App js Add this line of code right before the last closing div, and right after the closing form tag in App js ~~~javascript\n~~~\nHere we go, run npm start (or refresh) one last time If you've done everything right, you should now be able to type a task into the input field and click submit to display it right below the input field Feel free to play around a little bit and maybe change or style it as you like Your finished files should look like this:\n~~~javascript\n// App js\nimport React, { Component } from \"react\";\nimport Overview from \" /components/Overview\";\nimport uniqid from \"uniqid\";\nclass App extends Component {\nconstructor() {\nsuper();\nthis state = {\ntask: {\ntext: '',\nid: uniqid()\n},\ntasks: [],\n};\n}\nhandleChange = (e) => {\nthis setState({\ntask: {\ntext: e target value,\nid: this state task id,\n},\n});\n};\nonSubmitTask = (e) => {\ne preventDefault();\nthis setState({\ntasks: this state tasks concat(this state",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16042,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\handle_inputs_and_render_lists.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "60f30eb7ccf1d2b894f9d3e459ab09e4",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\handle_inputs_and_render_lists.md",
    "source_type": "git_repo",
    "title": "handle_inputs_and_render_lists",
    "content": "js import React, { Component } from \"react\"; import Overview from \" /components/Overview\"; import uniqid from \"uniqid\"; class App extends Component { constructor() { super(); this state = { task: { text: '', id: uniqid() }, tasks: [], }; } handleChange = (e) => { this setState({ task: { text: e target value, id: this state task id, }, }); }; onSubmitTask = (e) => { e preventDefault(); this setState({ tasks: this state tasks concat(this statetask),\ntask: {\ntext: '',\nid: uniqid()\n},\n});\n};\nrender() {\nconst { task, tasks } = this state;\nreturn (\n<div>\n<form onSubmit={this onSubmitTask}>\n<label htmlFor=\"taskInput\">Enter task</label>\n<input\nonChange={this handleChange}\nvalue={task text}\ntype=\"text\"\nid=\"taskInput\"\n/>\n<button type=\"submit\">Add Task</button>\n</form>\n<Overview tasks={tasks} />\n</div>\n);\n}\n}\nexport default App;\n~~~\n~~~javascript\n// Overview js\nimport React from \"react\";\nconst Overview = (props) => {\nconst { tasks } = props;\nreturn (\n{tasks map((task) => {\nreturn {task text};\n})}\n);\n};\nexport default Overview;\n~~~\nOptional Tasks / Ideas to play around\nHere are a few optional tasks for you to practice Try them out, if you can't solve them, continue with the curriculum and make sure to come back later to give them another try and see how you advanced Easy\nInstead of displaying unordered list items, manage the amount of tasks in state and let each task display its number Yes, you could also do that with a simple ordered list, but where's the fun in that Try using state Implement a delete button for each task The delete button should remove the specific task from the state array Don't forget to never directly assign state If you want you can use Font Awesome for the icon Tip: You can remove each task by its id, but for that you have to save the task id together with the task title Hard\nImplement an edit button for each task When you press the edit button, this specific task should become changeable, and the edit button should change to a resubmit button Additional Resources\nThis section contains helpful links to other content It isn't required, so consider it supplemental",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16042,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\handle_inputs_and_render_lists.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "831b6b3052dc6b7d1cd14c29c4ad2efc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\handle_inputs_and_render_lists.md",
    "source_type": "git_repo",
    "title": "handle_inputs_and_render_lists",
    "content": "Font Awesome for the icon Tip: You can remove each task by its id, but for that you have to save the task id together with the task title Hard Implement an edit button for each task When you press the edit button, this specific task should become changeable, and the edit button should change to a resubmit button Additional Resources This section contains helpful links to other content It isn't required, so consider it supplementalThe sections on Handling Events and Conditional Rendering from the React documentation are helpful if you are stuck Knowledge Check\nThis section contains questions for you to check your understanding of this lesson If you’re having trouble answering the questions below on your own, review the material above to find the answer How do you render lists in React How do you handle input field changes in React How do you handle form submission in React",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 16042,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\handle_inputs_and_render_lists.md",
      "source_type": "git_repo"
    },
    "token_count": 164,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "5544fcc16eef57383c6ee5893fd58b1a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\project_memory_card.md",
    "source_type": "git_repo",
    "title": "project_memory_card",
    "content": "Introduction\nHere we go again with a new project! Let's make sure you understand the concepts so far. The main goal of this project is to use hooks or lifecycle methods as well as a lot of state.\nHow The Game Works\nGo play around with this student's solution to find out for yourself how the Memory game works. Although this example uses cartoon characters, you can use anything you like for your game.\nAssignment\n1. Create a new project using `create-react-app`.\n2. Take a little bit of time to think about how you want to implement your application, the features you want to implement, which components you need, and how to structure your application. Your application should include a scoreboard, which counts the current score, and a \"Best Score\", which shows the best score you achieved thus far. You also need a couple of cards that display images and possibly informational text. There should be a function that displays the cards in a random order anytime a user clicks one. Be sure to invoke that function when the component mounts.\n3. Now that you've thought about the structure of your application, set up the folder structure and start creating the components. We suggest you use functional components and therefore hooks in this project.\n4. Style your application so you can show it off!\n5. As always, push the project to GitHub.",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1484,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\project_memory_card.md",
      "source_type": "git_repo"
    },
    "token_count": 271,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "01ea377280abffc7eb8669cb52b09c94",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\project_shopping_cart.md",
    "source_type": "git_repo",
    "title": "project_shopping_cart",
    "content": "Introduction\nNow we are getting to our final React application It's going to be a shopping cart This application should also have at least two routes to give you a chance to make some use of your newly acquired react-router-dom skills Assignment\n1 Create a new project with `create-react-app` and get rid of the boilerplate as in the previous projects 2 Think about the component and the folder structure How could you set up your application Which components or functionalities do you need 3 You should have at least two pages (a homepage and a shop page, which includes your shopping cart) Let a user navigate between the pages with a navigation bar, which will be shown on both routes 4 To your homepage, you can add whatever you'd like A few images or information will be totally fine; it doesn't have to be something fancy The main goal of the project is to focus on setting up the shopping cart The homepage is there to practice routing using `react-router-dom` 5 On your shopping cart route, a user should see a sticky bar (it can be just a top section as well), which displays the number of items currently in the cart You should also have a button next to it where you can go to the cart to checkout and pay (however we are not going to implement this logic here) 6 Build individual card items for each of your products Display an input field on it, which lets a user manually type in how many items they want to buy Also, add an increment and decrement button next to it for fine-tuning You can also display a title for each product as well as an \"Add To Cart\" button 7 Once a user has submitted their order, the amount on the cart itself should adjust 8 Make sure to test your app thoroughly using the React Testing Library Take care that you don't directly test `react-router-dom`, since it is an external library and the developers working on it must have tested the library already 9 As usual, style your application so you can show it off 10 Lastly, push the project to GitHub Follow [this link](https://create-react-app dev/docs/deployment/#github-pages) for instructions on how to deploy React applications with client-side routing to Github Pages Be aware that the page will stay blank, unless you add `import { HashRouter } from 'react-router-dom'` and utilize a `` component in place of `` as GitHub Pages doesn't support `` Alternatively, you can set up a redirect to `index html`",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2841,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\project_shopping_cart.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2fce10976b6a7eb4cd696fe0e92aa01c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\project_shopping_cart.md",
    "source_type": "git_repo",
    "title": "project_shopping_cart",
    "content": "style your application so you can show it off 10 Lastly, push the project to GitHub Follow [this link](https://create-react-app dev/docs/deployment/#github-pages) for instructions on how to deploy React applications with client-side routing to Github Pages Be aware that the page will stay blank, unless you add `import { HashRouter } from 'react-router-dom'` and utilize a `` component in place of `` as GitHub Pages doesn't support `` Alternatively, you can set up a redirect to `index html`For a more detailed description, read these parts of the React Router Docs on [client-side routing](https://create-react-app dev/docs/deployment/#notes-on-client-side-routing) and [deploying using gh-pages](https://create-react-app dev/docs/deployment/#github-pages)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2841,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\project_shopping_cart.md",
      "source_type": "git_repo"
    },
    "token_count": 162,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7ee48a698b72bb9b5342f4697f3d46c8",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_introduction.md",
    "source_type": "git_repo",
    "title": "Hello world",
    "content": "Introduction\nThis section aims to provide you with all you need to know to get started with React, to feel the power of a frontend framework, and to help you create highly scalable React applications Before we jump into it, one question must be answered Learning Outcomes\nBy the end of this lesson, you should be able to:\nUnderstand the benefits of learning React\nExplain what JSX is\nExplain what a React component is\nExplain the difference between a functional and class component\nExplain how you would structure your application into components\nExplain what create-react-app does\nWhy React React is one of the most powerful, widely used frontend frameworks The landscape for frontend frameworks has been changing a lot over the last few years, so it is understandable to be worried about choosing the \"wrong\" one This article shows the recent development of frontend frameworks well Once you start diving deeper into a framework, you will begin to love it It makes your code easily scalable, more readable, and possibly a thousand times more efficient (just our modest estimation) Just to name a few reasons on why to learn React js:\nReusability of components\nWell supported due to its popularity\nReact is not opinionated, which means that it won't force you to follow any specific design patterns, project organizational structure, or logic It's all up to you Smaller learning curve, especially when you already have a good grasp of JavaScript and HTML from our previous lessons If you need more convincing, the recent 2023 StackOverflow Developer Survey should be reason enough to get excited about learning React Still unsure Check out this article Convinced and excited Great, because it's going to change your life Let's dive right into it Components\nApplications built with React are made with (reusable) components Components are your \"building blocks \" To gain confidence using React, you should learn to divide your application or project into these separate components The following picture gives you an idea of how to do that with a very basic app For example, this simple website could be divided into the following components:\nApp, which represents your main application and will be the parent of all other components This would be the larger box surrounding the smaller ones Navbar, which will be the navigation bar MainArticle, which will be the component that renders your main content NewsletterForm, which is a simple form that lets a user input their email to receive the weekly newsletter In React, each component is defined in an ES6 (ECMAScript 2015) module",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17055,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_introduction.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "969b06b28c9be38cbc33c814caa15c97",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_introduction.md",
    "source_type": "git_repo",
    "title": "Hello world",
    "content": "the following components: App, which represents your main application and will be the parent of all other components This would be the larger box surrounding the smaller ones Navbar, which will be the navigation bar MainArticle, which will be the component that renders your main content NewsletterForm, which is a simple form that lets a user input their email to receive the weekly newsletter In React, each component is defined in an ES6 (ECMAScript 2015) moduleES6 introduced the import statement which allows you to import code from one module into another module This allows us to write each component in a separate file and import all components into the parent component like so:\nimport ExampleComponent from \" /components/ExampleComponent\"\nIn our case, that parent would be App js In the beginning, it might be a little bit difficult to figure out the best component structure, especially when state and props come into play This topic will be discussed in the following sections For now, don't worry too much about the component structure Understanding of best practices comes with experience React components, in general, usually have parent and/or child components This system of structuring your applications helps to keep your code organized and makes it easy to keep track of your components' relationships with each other To give you an example of a basic component, see the following code:\n~~~javascript\nimport React, { Component } from 'react'\nclass App extends Component {\nconstructor() {\nsuper()\n}\n{/* Javascript functions can be written here */}\nrender() {\nreturn (\n<div className=\"App\">\nHello World </div>\n)\n}\n}\nexport default App\n~~~\nDoes the code look foreign Don't worry, it isn't as complicated as it looks Let's walk through it step by step ~~~javascript\nimport React, { Component } from 'react';\n~~~\nWith the above import statement, we are importing React and Component from the React library, which allows us to create a class component If you are wondering why we have to wrap Component into curly brackets and not React, this is due to the way they are exported from the react module Default exports are imported without curly brackets; everything else must be wrapped in curly brackets Don't worry about this too much as we will get plenty of exposure to import and export statements soon ~~~javascript\nclass App extends Component {\n{/ Some logic we haven't yet talked about /}\n}\n~~~\nSecondly, we are declaring the class component, App",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17055,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_introduction.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "a0b804a8e8c518b54041ac500332a367",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_introduction.md",
    "source_type": "git_repo",
    "title": "Hello world",
    "content": "brackets and not React, this is due to the way they are exported from the react module Default exports are imported without curly brackets; everything else must be wrapped in curly brackets Don't worry about this too much as we will get plenty of exposure to import and export statements soon ~~~javascript class App extends Component { {/ Some logic we haven't yet talked about /} } ~~~ Secondly, we are declaring the class component, AppWe do this by extending the React class Component, which we imported at the top of the file In doing this, we are essentially \"Reactifying\" our App component by giving it all of the fun methods and properties every React component should have One thing to notice is that React components, like all classes and object constructors, should always be declared with a capital letter at the beginning (PascalCase) This is a naming convention used by most developers and recommended by the React core team at Facebook ~~~javascript\nconstructor() {\nsuper()\n}\n~~~\nNext is the constructor A constructor is not obligatory in a class component, but you will most likely encounter one because it becomes important when concepts like inheritance and state are involved It is included here so you can get used to seeing it You will usually see developers passing props as an argument to the constructor and also to the super() call, which must be called in any React constructor Props will be discussed further in the next lesson The idea here is to simply expose you to some terminology that we will be using in the future ~~~javascript\n{\n/ Some logic we haven't yet talked about /\n}\n~~~\nThis syntax may look weird at first, but it is nothing more than a simple comment In React, you write comments within curly brackets and /* */ There are sections of React components where the comments we are used to (denoted by //) are permissible For now, we'll leave that as an exercise for you ~~~javascript\nrender() {\nreturn (\nHello World )\n}\n~~~\nThe most unfamiliar code is likely the render() function, which returns something that looks like HTML, but is actually JSX JSX is an HTML-like syntax that is \"transpiled\" (or converted) into JavaScript so a browser is able to process it One of the primary characteristics and features of React is the ability to combine JavaScript and JSX One thing you should know about JSX is that you can't use some JavaScript protected words as html attributes anymore, such as class, onchange, or for",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17055,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_introduction.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "f4f930bb410928ba6378993344c5eea9",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_introduction.md",
    "source_type": "git_repo",
    "title": "Hello world",
    "content": "render() function, which returns something that looks like HTML, but is actually JSX JSX is an HTML-like syntax that is \"transpiled\" (or converted) into JavaScript so a browser is able to process it One of the primary characteristics and features of React is the ability to combine JavaScript and JSX One thing you should know about JSX is that you can't use some JavaScript protected words as html attributes anymore, such as class, onchange, or forInstead of class you will need to use className, instead of onchange you write onChange, and instead of for, you must use wait for it htmlFor All attributes in JSX are written in camelCase and some have their names changed completely to avoid the transpiler getting too confused about whether you're assigning a label for an input, or instantiating a for loop You should be fairly familiar with the camelCase naming convention from the naming of variables in JavaScript The render() function you see is the most used React \"lifecycle\" function (more on that in an upcoming section) The only thing you should know for now is that every React class component needs a render function, which returns one top-level JSX element When you want to return elements nested within one another, they need to be wrapped in a single parent element For example:\n~~~javascript\n// BAD - will throw an error render() {\nreturn (\nHello world\nWelcome to my React page )\n}\n// GOOD\nrender() {\nreturn (\nHello world\nWelcome to my React page )\n}\n~~~\nFinally, to be able to reuse this App component we created in other files of our project, we have to export the component In our example, we export the component as the file's default export:\n~~~javascript\nexport default App;\n~~~\nIf you have multiple components in one file, you could export each component separately by adding the export keyword before the declaration of the component, or you could export them all at once using this syntax:\n~~~javascript\nexport { ComponentA, ComponentB, ComponentC };\n~~~\nHowever, when you import them, they will each need to be wrapped in curly braces If you export a component as a default, you can import it without the curly braces If you export multiple components, you have to import them inside of curly brackets If you're confused about this, take a minute to read up a little bit on ES6 imports and exports So far, so good We have already learned a lot about components in React",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17055,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_introduction.md",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "0b236b7cefc85a4eb1ad8b1189c8db45",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_introduction.md",
    "source_type": "git_repo",
    "title": "Hello world",
    "content": "you import them, they will each need to be wrapped in curly braces If you export a component as a default, you can import it without the curly braces If you export multiple components, you have to import them inside of curly brackets If you're confused about this, take a minute to read up a little bit on ES6 imports and exports So far, so good We have already learned a lot about components in ReactUsing class components is one of two ways of defining components in React The other, more modern, approach is to define the component as a function (like a factory function) A basic functional component looks something like this:\n~~~javascript\nimport React from 'react';\nfunction App() {\nreturn Hello World ;\n}\n// OR (arrow-function syntax)\nconst App = () => {\nreturn Hello World ;\n};\n// OR (implicit return)\nconst App = () => Hello World ;\nexport default App;\n~~~\nAs you can see, there are a few differences between functional and class components With functional components:\nWe don't have to import and extend \"Component\" from React We don't need a constructor We don't need the render function, instead we put the return statement right at the end of the function body There are more differences which we will encounter when discussing props, state, and lifecycle methods, but it's enough for you to understand this much for now For further understanding of React components, this short article provides a great overview For further understanding of the difference between functional and class based components, read this article They discuss concepts like state and lifecycle methods, which we haven't talked about yet, so don't spend too much time getting hung up or trying to memorize the differences However, it may be helpful to bookmark this page because it will prove useful later on in the course when we do learn about them Rest assured, we will expand on the question of \"which type of component should I use \" later Create-react-app\nDevelopers at Facebook came up with a great tool called create-react-app, which sets up a complete React application for you By running one command, it does all the necessary setup and configuration for you to immediately start working on your project If you want to see all the things we have discussed in action, go ahead and run npx create-react-app my-first-react-app in your terminal, cd into the project by typing cd my-first-react-app, and then open it in your text editor of choice",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17055,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_introduction.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "df1c1b79862d641fa57994d4b2f67dff",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_introduction.md",
    "source_type": "git_repo",
    "title": "Hello world",
    "content": "a great tool called create-react-app, which sets up a complete React application for you By running one command, it does all the necessary setup and configuration for you to immediately start working on your project If you want to see all the things we have discussed in action, go ahead and run npx create-react-app my-first-react-app in your terminal, cd into the project by typing cd my-first-react-app, and then open it in your text editor of choiceIf you want, you can view the project in the browser via the command npm start Index js and App js\nTwo of the most important files create-react-app includes for you are index js and App js index js is the \"entry point\" of your application by default Open up your index js file and check out this:\n~~~javascript\nconst root = ReactDOM createRoot(document getElementById('root'));\nroot render(\n);\n~~~\nIn short, this line of code tells React to render the App component into the DOM, and more specifically, into the element with the id \"root\" Every create-react-app project has a root div, which is visible in the index html file in your public directory If you decide to name your main application component something other than App js, make sure to change its name in index js as well If you want to get a better understanding of how create-react-app works and which files it creates for you, make sure to check out this article and watch this video to really understand the file system create-react-app sets up for you You can also look at more aspects of your application's performance by learning about ReportWebVitals here React Developer Tools\nReact Developer Tools is an extension to the browser developer tools which allows you to inspect React components that build the page It helps you to check and edit the React component tree as well as props, state, and hooks for each component This article will show you how to install React Developer Tools and some basic debugging you can do with it And here is the link to React Developer Tools Chrome Extension Assignment\n1 Go through the open-source Learn section of React which begins with the Quick Start page It is a short introductory tour of React It introduces the syntax for concepts like components, props, and state, but doesn’t go into much detail on how to use them Their documentation is a great resource for coming back at a later point if you have to get more familiar with certain concepts or have to fresh up something So let's get started Read [this](https://react",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17055,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_introduction.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "0d783d0562d46d339886a2c2e63feba6",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_introduction.md",
    "source_type": "git_repo",
    "title": "Hello world",
    "content": "Learn section of React which begins with the Quick Start page It is a short introductory tour of React It introduces the syntax for concepts like components, props, and state, but doesn’t go into much detail on how to use them Their documentation is a great resource for coming back at a later point if you have to get more familiar with certain concepts or have to fresh up something So let's get started Read [this](https://reactdev/learn), [this](https://react dev/learn/writing-markup-with-jsx) and [this](https://react dev/learn/your-first-component) lesson 2 Watch [this video](https://www youtube com/watch v=JPT3bFIwJYA&list=PL55RiY5tL51oyA8euSROLjMFZbXaV7skS) to get another quick explanation of React, and then watch these: ([one](https://www youtube com/watch v=G40iHC-h0c0&list=PL55RiY5tL51oyA8euSROLjMFZbXaV7skS&index=4), [two](https://www youtube com/watch v=9wK4gHoOh1g&list=PL55RiY5tL51oyA8euSROLjMFZbXaV7skS&index=5)) videos from the same series, which focus on components Feel free to code along with the whole course if you enjoy it Additional Resources\nThis section contains helpful links to other content It isn't required, so consider it supplemental This video series really provides it all Watch it for a greater understanding of the most important React concepts This video shows you how to set up a React application without using create-react-app This video by Kent C Dodds explains how React works under the hood Knowledge Check\nThis section contains questions for you to check your understanding of this lesson If you’re having trouble answering the questions below on your own, review the material above to find the answer Why should you learn React What is JSX What is a React Component What is the difference between a functional and a class component How should you structure your application into components What does create-react-app do Instead of the DOM tree, what is displayed when you inspect an element using the Components tab provided by React Developer Tools",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17055,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_introduction.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "5fb6b3bdcdfb5947b8ab9b04c43ed6c5",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_one.md",
    "source_type": "git_repo",
    "title": "Our First Test",
    "content": "Introduction\nWe've learned how to test our vanilla JavaScript applications in a previous section Testing is indeed a powerful tool that allows us to write maintainable and flexible code If you've followed along with our lessons so far, we've been using the Jest framework For React, we'll keep using Jest and add more capabilities to our tests using the React Testing library Lesson Overview\nThis section contains a general overview of topics that you will learn in this lesson Discern what packages will be needed to test a React app Be able to test UI elements Understand snapshot tests Setting Up\nWe'll need to import some packages inside of our testing file:\n~~~javascript\nimport React from \"react\";\nimport { } from \"@testing-library/react\";\nimport \"@testing-library/jest-dom\";  // optional\nimport userEvent from \"@testing-library/user-event\";\nimport TestComponent from \"path-to-test-component\";\n~~~\n@testing-library/react will give us access to useful functions like render which we'll demonstrate later on @testing-library/jest-dom includes some handy custom matchers (assertive functions) like toBeInTheDocument and more (complete list on jest-dom's github) Jest already has a lot of matchers so this package is not compulsory to use @testing-library/user-event provides the userEvent API that simulates user interactions with the webpage Alternatively, we could import the fireEvent API from @testing-library/react Note: fireEvent is an inferior counterpart to userEvent and userEvent should always be preferred in practice No need to import jest since it will automatically detect test files (* test js or * test jsx) That's a lot of setup But good news If you're initializing your React repositories with create-react-app, then all the above packages come preinstalled and the scripts preconfigured in package json Our First Query\nFirst, we'll render the component using render The API will return an object and we'll use destructuring syntax to obtain a subset of the methods required You can read all about what render can do in the React Testing Library API docs about render ~~~javascript\n// App js\nimport React from \"react\";\nconst App = () => Our First Test;\nexport default App;\n~~~\n~~~javascript\n// App test js\nimport React from \"react\";\nimport { render, screen } from \"@testing-library/react\";\nimport App from \" /App\";\ndescribe(\"App component\", () => {\nit(\"renders correct heading\", () => {\nrender();\nexpect(screen getByRole(\"heading\") textContent)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11770,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_one.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "1c0632f5cd0225b2d9b0f61df68f6c18",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_one.md",
    "source_type": "git_repo",
    "title": "Our First Test",
    "content": "methods required You can read all about what render can do in the React Testing Library API docs about render ~~~javascript // App js import React from \"react\"; const App = () => Our First Test; export default App; ~~~ ~~~javascript // App test js import React from \"react\"; import { render, screen } from \"@testing-library/react\"; import App from \" /App\"; describe(\"App component\", () => { it(\"renders correct heading\", () => { render(); expect(screen getByRole(\"heading\") textContent)toMatch(/our first test/i);\n});\n});\n~~~\nExecute npm test App test js on the terminal and you'll see that test pass getByRole is just one of the dozen query methods that we could've used Essentially, queries are classified into three types: getBy, queryBy and findBy Go through the React Testing Library docs page about queries Pay extra attention to the \"Types of Queries\" and \"Priority\" section As stated by the React Testing Library docs, ByRole methods are the favored methods for querying, especially when paired with the name option For example, we could improve the specificity of the above query like so: getByRole(\"heading\", { name: \"Our First Test\" }) Queries that are done through ByRole ensure that our UI is accessible to everyone no matter what mode they use to navigate the webpage (i e mouse or assistive technologies) Simulating User Events\nThere are numerous ways a user can interact with a webpage Even though live user feedback and interaction is irreplaceable, we can still build some confidence in our components through tests Here's a button which changes the heading of the App:\n~~~javascript\n// App js\nimport React, { useState } from \"react\";\nconst App = () => {\nconst [heading, setHeading] = useState(\"Magnificent Monkeys\");\nconst clickHandler = () => {\nsetHeading(\"Radical Rhinos\");\n};\nreturn (\n<>\nClick Me\n{heading}\n</>\n);\n};\nexport default App;\n~~~\nLet's test if the button works as intended In this test suite, we'll use a separate utility to query our UI elements React Testing Library provides the screen object which has all the methods for querying With screen, we don't have to worry about keeping render's destructuring up-to-date Hence, it's better to use screen to access queries rather than to destructure render ~~~javascript\n// App test",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11770,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_one.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "02cec1f52e52e435b292a1d85ffbbd6c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_one.md",
    "source_type": "git_repo",
    "title": "Our First Test",
    "content": "Click Me {heading} </> ); }; export default App; ~~~ Let's test if the button works as intended In this test suite, we'll use a separate utility to query our UI elements React Testing Library provides the screen object which has all the methods for querying With screen, we don't have to worry about keeping render's destructuring up-to-date Hence, it's better to use screen to access queries rather than to destructure render ~~~javascript // App testjs\nimport React from \"react\";\nimport { render, screen } from \"@testing-library/react\";\nimport userEvent from \"@testing-library/user-event\";\nimport App from \" /App\";\ndescribe(\"App component\", () => {\nit(\"renders magnificent monkeys\", () => {\n// since screen does not have the container property, we'll destructure render to obtain container for this test\nconst { container } = render();\nexpect(container) toMatchSnapshot();\n});\nit(\"renders radical rhinos after button click\", async () => {\nconst user = userEvent setup();\nrender(<App />);\nconst button = screen getByRole(\"button\", { name: \"Click Me\" });\nawait user click(button);\nexpect(screen getByRole(\"heading\") textContent) toMatch(/radical rhinos/i);\n});\n});\n~~~\nThe tests speak for themselves In the first test, we utilize snapshots to check whether all the nodes render as we expect them to In the second test, we simulate a click event Then we check if the heading changed toMatch is one of the various assertions we could have made It's also important to note that after every test, React Testing Library unmounts the rendered components That's why we render for each test For a lot of tests for a component, the beforeEach jest function could prove handy Notice that the callback function for the second test is asynchronous This is because user click() simulates the asynchronous nature of user interaction, which is now supported by the latest version of the testing library's user-event APIs As of version 14 0 0, the user-event APIs have been updated to be asynchronous It's worth noting that some examples from other resources or tutorials might still use the synchronous userEvent click() method\n~~~javascript\n// This is the old approach of using userEvent it(\"renders radical rhinos after button click\", () => {\nrender();\nconst button = screen getByRole(\"button\", { name: \"Click Me\" });\nuserEvent click(button);\nexpect(screen getByRole(\"heading\") textContent)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11770,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_one.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "15f94a6cb12461698f50032c67dce265",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_one.md",
    "source_type": "git_repo",
    "title": "Our First Test",
    "content": "version of the testing library's user-event APIs As of version 14 0 0, the user-event APIs have been updated to be asynchronous It's worth noting that some examples from other resources or tutorials might still use the synchronous userEvent click() method ~~~javascript // This is the old approach of using userEvent it(\"renders radical rhinos after button click\", () => { render(); const button = screen getByRole(\"button\", { name: \"Click Me\" }); userEvent click(button); expect(screen getByRole(\"heading\") textContent)toMatch(/radical rhinos/i);\n});\n~~~\nThe setup() is internally triggered here This is still supported by React Testing Library to ease the transition from v13 to v14 What are Snapshots Snapshot testing is just comparing our rendered component with an associated snapshot file For example, the snapshot file which was automatically generated after we ran the \"magnificent monkeys renders\" test was:\n~~~javascript\n// App test js snap\n// Jest Snapshot v1, https://goo gl/fbAQLP\nexports[magnificent monkeys render 1] = `\nClick Me\nMagnificent Monkeys\n`;\n~~~\nIt's an HTML representation of the App component And it will be compared against the App in future snapshot assertions If the App changes even slightly, the test fails Snapshot tests are fast and easy to write One assertion saves us from writing multiple lines of code For example, with a toMatchSnapshot, we're spared of asserting the existence of the button and the heading They also don't let unexpected changes creep into our code Read all about what can be achieved with snapshots in the Jest snapshot docs Snapshots might seem the best thing that has happened to us while testing thus far But we are forced to wonder, what exactly are we testing What's being validated If a snapshot passes, what does it convey about the correctness of the component Snapshot tests may cause false positives Since we cannot ascertain the validity of the component from a snapshot test, a bug might go undetected Over-reliance on snapshots can make developers more confident about their code than they should be The other issue with snapshots is false negatives Even the most insignificant of changes compel the test to fail Fixing punctuation Snapshot will fail Replacing an HTML tag to a more semantic one Snapshot will fail This might cause us to lose our confidence in the test suite altogether Snapshots aren't inherently bad; they do serve a purpose",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11770,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_one.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "780faf4f0fb287a14bcd8393256237ec",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_one.md",
    "source_type": "git_repo",
    "title": "Our First Test",
    "content": "might go undetected Over-reliance on snapshots can make developers more confident about their code than they should be The other issue with snapshots is false negatives Even the most insignificant of changes compel the test to fail Fixing punctuation Snapshot will fail Replacing an HTML tag to a more semantic one Snapshot will fail This might cause us to lose our confidence in the test suite altogether Snapshots aren't inherently bad; they do serve a purposeBut it's beneficial to understand when to snapshot, and when not to snapshot Assignment\n1 Take a glance at all of the available query methods on [the React Testing Library's cheatsheet page](https://testing-library com/docs/dom-testing-library/cheatsheet/) There's no need to use them all, but it's optimal to employ a specific method for a specific query If none of the query methods suffice, there's an option to use test ids Learn about test ids on [the React Testing Library's test id docs](https://testing-library com/docs/queries/bytestid/) 2 Read [the userEvent API docs](https://testing-library com/docs/user-event/intro) to get a feel of how to achieve user simulation 3 This article on the [Pros and Cons of Jest Snapshot Tests](https://tsh io/blog/pros-and-cons-of-jest-snapshot-tests/) goes in depth regarding the advantages and disadvantages of snapshot testing And this one, [Snapshot Testing: Benefits and Drawbacks](https://www sitepen com/blog/snapshot-testing-benefits-and-drawbacks), does an excellent job of explaining what is snapshot testing in programming in general Knowledge Check\nThis section contains questions for you to check your understanding of this lesson on your own If you’re having trouble answering a question, click it and review the material it links to What packages are required for React testing What is the significance of the user-event package What does the render method do What is the most preferred method for querying How would you test for a click event with userEvent What is the advantage of snapshot tests What are the disadvantages of snapshot tests Additional Resources\nThis section contains helpful links to other content It isn't required, so consider it supplemental This tutorial on Testing React Apps by Academind is a great overview of what you've learned It goes into testing async code and callbacks which we haven't covered yet Though you should be able to follow along using your previous knowledge This Intro to React Testing Library video for a hands-on tutorial",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 11770,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_one.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "f04cfb1b7f04b4ea9c16e8c1712f18cf",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_two.md",
    "source_type": "git_repo",
    "title": "react_testing_part_two",
    "content": "Introduction\nWe've already covered some basics of React testing Now's the time to dive deeper In this lesson, we'll learn about mocking Furthermore, we'll discuss a React component from this (theodinproject com) website and understand how React tests are written in a real world application Lesson Overview\nThis section contains a general overview of topics that you will learn in this lesson Carry out mocks in the context of React testing What is Mocking If you've been following along with our lessons so far, the concept of mocking has already been introduced in an earlier section and you might have even incorporated mocks in your Battleship project in the Testing JavaScript section of this course Let's look at how mocks will help in testing React components Testing Callback Handlers\nCallbacks are ubiquitous Every avenue of user interaction involves callbacks Sometimes they're passed in as props to alter state of the parent component Consider this simple input component:\n~~~javascript\n// FavoriteInput js\nimport React from \"react\";\nconst FavoriteInput = ({ onChange: onInputChange, id }) => {\nconst inputHandler = (event) => onInputChange(event target value);\nreturn (\nWhat is your favorite wild animal );\n};\nexport default FavoriteInput;\n~~~\nNothing fancy FavoriteInput is a simple component with a couple props passed in We're interested in the onChange prop We have no idea what the function does We have no idea how the function will affect the application All we know is it must be called when user types in the input box Let's test it Notice how we mock and test the onChange function:\n~~~javascript\n// FavoriteInput test js\nimport React from \"react\";\nimport { render, screen } from \"@testing-library/react\";\nimport \"@testing-library/jest-dom\";\nimport userEvent from \"@testing-library/user-event\";\nimport FavoriteInput from \" /FavoriteInput\";\ndescribe(\"Favorite Input\", () => {\nit(\"calls onChange correct number of times\", async () => {\nconst onChangeMock = jest fn();\nconst user = userEvent setup();\nrender(<FavoriteInput onChange={onChangeMock} />);\nconst input = screen getByRole(\"textbox\");\nawait user type(input, \"Lion\");\nexpect(onChangeMock) toHaveBeenCalledTimes(4);\n});\nit(\"calls onChange with correct argument(s) on each input\", async () => {\nconst onChangeMock = jest fn();\nconst user = userEvent setup();\nrender(<FavoriteInput onChange={onChangeMock} />);\nconst input = screen getByRole(\"textbox\");\nawait user",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10568,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_two.md",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "64ba43fe3390050acdcd714594fd7d57",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_two.md",
    "source_type": "git_repo",
    "title": "react_testing_part_two",
    "content": "FavoriteInput from \" /FavoriteInput\"; describe(\"Favorite Input\", () => { it(\"calls onChange correct number of times\", async () => { const onChangeMock = jest fn(); const user = userEvent setup(); render(<FavoriteInput onChange={onChangeMock} />); const input = screen getByRole(\"textbox\"); await user type(input, \"Lion\"); expect(onChangeMock) toHaveBeenCalledTimes(4); }); it(\"calls onChange with correct argument(s) on each input\", async () => { const onChangeMock = jest fn(); const user = userEvent setup(); render(<FavoriteInput onChange={onChangeMock} />); const input = screen getByRole(\"textbox\"); await usertype(input, \"Ox\");\nexpect(onChangeMock) toHaveBeenNthCalledWith(1, \"O\");\nexpect(onChangeMock) toHaveBeenNthCalledWith(2, \"Ox\");\n});\nit(\"input has correct values\", async () => {\nconst onChangeMock = jest fn();\nconst user = userEvent setup();\nrender(<FavoriteInput onChange={onChangeMock} />);\nconst input = screen getByRole(\"textbox\");\nawait user type(input, \"Whale\");\nexpect(input) toHaveValue(\"Whale\");\n});\n});\n~~~\nThree tests and we are done with this component Take some time to figure out what functions come from which package We mock the onChange handler using one of Jest's functions, jest fn() For the first test, we assert that the mock function is invoked correct number of times While the second test ensures that the mock function is called with the correct arguments The third test seems redundant, and it is; it's just here to show another way we could've tested the component But what if you want to set up your mocks in a beforeEach block rather than in every test That's fine in some cases Though, having all of the setup for a test in the same block as the test itself makes it easier to understand any particular test as it eliminates the need to check the whole file for context This makes the reviewing of subsequent changes in a project down the road substantially easier Additionally, it decreases the chance of having leakage create problems throughout the test suite Unless your test file is getting really long and the test prep itself is dozens of lines in length, default to setting up in each test case; otherwise, you may use beforeEach It is recommended to invoke userEvent",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10568,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_two.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "bff3cd313561e401800cfe244336d0d3",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_two.md",
    "source_type": "git_repo",
    "title": "react_testing_part_two",
    "content": "the need to check the whole file for context This makes the reviewing of subsequent changes in a project down the road substantially easier Additionally, it decreases the chance of having leakage create problems throughout the test suite Unless your test file is getting really long and the test prep itself is dozens of lines in length, default to setting up in each test case; otherwise, you may use beforeEach It is recommended to invoke userEventsetup() before rendering the component, and it is discouraged to call renders and userEvent functions outside of the test itself, (for example, in a beforeEach block) If you find yourself repeating the same code in multiple tests, the recommended approach to shorten each test is to write a setup function, as outlined in the documentation Mocking Child Components\nYou might have come across the concept of mocking modules In React, when the component tree gets large, tests can become convoluted Especially for components higher up the tree That's why we mock child components This is not something you'll come across often, nevertheless, it's beneficial to realize the concept in case you might need it in your own testing pursuits React Testing in the Real World\nIf you're logged in on this (theodinproject com) website, you've probably come across the project submissions list under every project Those components are written in React and tested with the React Testing Library This'll be fun Your task is simple:\nRead and try to comprehend the submissions-list jsx component It's okay if you don't understand everything And the good news is that we don't have to understand it all to follow along with this lesson submissions-list jsx\nWe start by importing a bunch of stuff like any other decent React component There might be a couple of unfamiliar things on there; we don't have to worry too much about them If we take a glance at the props, there are some functions in there, presumably event handlers Let's look at what the component renders If there's a userSubmission, it renders the Submission component\nIf hasSubmissions is true, sort the submissions and render them with Submission Otherwise, a heading that says \"No Submissions yet, be the first \"\nIf  allSubmissionsPath is true, it renders a <p> tag By just going through the code, it should give us some idea of what to test It will be rewarding if you take a couple of seconds to map out what tests we could need for SubmissionsList Go through its test file, submissions-list test jsx",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10568,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_two.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "e103bfe194e6aee62def5b39590927c0",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_two.md",
    "source_type": "git_repo",
    "title": "react_testing_part_two",
    "content": "is true, sort the submissions and render them with Submission Otherwise, a heading that says \"No Submissions yet, be the first \" If allSubmissionsPath is true, it renders a <p> tag By just going through the code, it should give us some idea of what to test It will be rewarding if you take a couple of seconds to map out what tests we could need for SubmissionsList Go through its test file, submissions-list test jsxAgain, don't worry if all of it doesn't make sense, we'll chew over it shortly #### Note\nWhile the test suite above uses `data-test-id` to identify mocked child components, it must be remembered that the React Testing Library instead uses `data-testid` by default submissions-list test jsx\nWe notice there are two child components of SubmissionsList One of them is from a package called react-flip-move External Code We'll mock it Notice how we mock the Submission component:\n~~~javascript\njest mock(' /submission', () => ({ submission, isDashboardView }) => (\n<>\n{submission id}\n{isDashboardView toString()}\n</>\n));\n~~~\nWe only render the bare minimum to realize the validity of the component we're testing Next, we set up our props with fake data and mocked functions Let's move towards our first assertion Don't worry too much about the ProjectSubmissionContext Provider In the context of this test, its purpose is to act as a route to pass in the allSubmissionsPath prop We've already identified the three points of interest that we want to test We divide them into three test suites for readability purposes using describe In the first suite, we make some assertions if the user has a submission and then some assertions if the user does not The other suites follow a similar pattern Exploring Further\nFeel free to flick through the other components and their tests You'll see mocked functions You'll see some unseen functions like act You'll see custom render functions It's fine if you don't understand it all, the goal is to gain familiarity The other important thing to note is almost all the tests follow a certain pattern in terms of the way they're written They follow the Arrange-Act-Assert pattern It's a good idea to adopt this pattern sooner or later to make your tests more readable and ultimately better Assignment\n1 Read about the [secrets of act( ) api](https://github com/mrdulin/react-act-examples/blob/master/sync md)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10568,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_two.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "bb97d39b3856680cd8d25a6286eaaadf",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_two.md",
    "source_type": "git_repo",
    "title": "react_testing_part_two",
    "content": "custom render functions It's fine if you don't understand it all, the goal is to gain familiarity The other important thing to note is almost all the tests follow a certain pattern in terms of the way they're written They follow the Arrange-Act-Assert pattern It's a good idea to adopt this pattern sooner or later to make your tests more readable and ultimately better Assignment 1 Read about the [secrets of act( ) api](https://github com/mrdulin/react-act-examples/blob/master/sync md)Especially pay attention to the last bit about testing asynchronous code You won't be using it everyday, but it's nice to be familiar Please note that in the article, the React components are written within the tests 2 Read this article about [mocking child components](https://medium com/@taylormclean15/jest-testing-mocking-child-components-to-make-your-unit-tests-more-concise-18691ef6a0c2) It extensively covers the \"how\" of mocking child components (You might need to sign up to read)\nKnowledge Check\nThis section contains questions for you to check your understanding of this lesson on your own If you’re having trouble answering a question, click it and review the material it links to How can you mock a callback handler How can you mock a child component Additional Resources\nThis section contains helpful links to other content It isn't required, so consider it supplemental It looks like this lesson doesn't have any additional resources yet Help us expand this section by contributing to our curriculum",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10568,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\react_testing_part_two.md",
      "source_type": "git_repo"
    },
    "token_count": 311,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "4253efcbf5abbd90fb02bce6983ac88a",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\router.md",
    "source_type": "git_repo",
    "title": "Hello from Profile",
    "content": "Introduction\nIn this lecture we are going to learn a little bit about routing in React Up until now we have only written one-page applications Once your application has multiple pages, you need to set up a reliable routing system This is to handle the component or page that should be rendered when navigating to a certain route For this we are going to use a package called react-router-dom Learning Outcomes\nBy the end of this lesson, you should be able to:\nUnderstand what client-side routing is\nExplain how react-router-dom works\nClient-Side Routing\nClient-side routing is internal handling of routes inside the JS file that is rendered to the client (front-end) Client-side routing helps in building single-page applications (SPAs) without refreshing as the user navigates For example when a user clicks a navbar element, the URL changes and the view of the page is modified accordingly, within the client React Router is the standard routing library for React applications By using React routers, we can specify which component can be rendered based on the route From version 4, react router uses dynamic routes (routing that takes place as your app is rendering) How To Use React Router\nLet's go through it step by step First of all, create a new project using create-react-app and get rid of the boilerplate code as you already learned in previous lessons (Just leave the index js and the App js files)\nOnce you've done that, let's create a new file called Profile js inside the src directory, and add a basic functional component to it, which just contains an h1 element ~~~javascript\nconst Profile = () => {\nreturn (\nHello from Profile\n);\n};\nexport default Profile;\n~~~\nAnd also make sure your App js file looks like this:\n~~~javascript\nconst App = () => {\nreturn (\nHello from App\n);\n};\nexport default App;\n~~~\nOnce you have this, install the package Open a terminal and run npm i react-router-dom This is going to install all the dependencies for us While this is happening, we can create a new file called RouteSwitch js, which is going to be the file that handles our routes Once the package is finished installing, you can add this code to your RouteSwitch js file:\n~~~javascript\nimport React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport App from \" /App\";\nimport Profile from \"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6887,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\router.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "3e139bdb83bfc8f2b0f2e27fdee0ae66",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\router.md",
    "source_type": "git_repo",
    "title": "Hello from Profile",
    "content": "run npm i react-router-dom This is going to install all the dependencies for us While this is happening, we can create a new file called RouteSwitch js, which is going to be the file that handles our routes Once the package is finished installing, you can add this code to your RouteSwitch js file: ~~~javascript import React from \"react\"; import { BrowserRouter, Routes, Route } from \"react-router-dom\"; import App from \" /App\"; import Profile from \"/Profile\";\nconst RouteSwitch = () => {\nreturn (\n} />\n} />\n);\n};\nexport default RouteSwitch;\n~~~\nSo what is happening here First we are importing React, our two components (Profile and App), and a few things from the package we just installed:\nRoute: Those are our routes with a path, which equals the url path, and a component that should be rendered when we navigate to this url BrowserRouter: Is a router, which uses the history API (pushState, replaceState and the popstate event) to keep your UI in sync with the URL For completion we have to mention that there are other options than BrowserRouter, but for your current projects you can assume that BrowserRouter is at the root of all your projects Routes: Renders the first child Route that matches the location In other words, the Routes component is going to look through all your Routes and checks their path The first Route, whose path matches the url exactly will be rendered; all others will be ignored Important to note is that in previous versions of react-router-dom the exact keyword was needed to achieve this behavior Let's check this behavior in the browser for better understanding But before we do that we have to do one more thing: change our index js file This is because we don't want our App js file to be the first file to be called when our application runs Instead, we want our RouteSwitch js to be the first Your index js should look something like this:\n~~~javascript\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport RouteSwitch from \" /RouteSwitch\";\nconst root = ReactDOM createRoot(document getElementById('root'));\nroot render(\n);\n~~~\nOnce this is done, go ahead and run npm start and check out both routes: the home route \"/\" and the profile route \"/profile\" Do this by changing the url in the browser accordingly You should now have enough basics to get started with React routing",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6887,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\router.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "11c69208bdb7e2ef0cc2fbca6c62178f",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\router.md",
    "source_type": "git_repo",
    "title": "Hello from Profile",
    "content": "js should look something like this: ~~~javascript import React from \"react\"; import ReactDOM from \"react-dom/client\"; import RouteSwitch from \" /RouteSwitch\"; const root = ReactDOM createRoot(document getElementById('root')); root render( ); ~~~ Once this is done, go ahead and run npm start and check out both routes: the home route \"/\" and the profile route \"/profile\" Do this by changing the url in the browser accordingly You should now have enough basics to get started with React routingThere are a lot more features to react-router-dom which are extremely useful, but out of the scope of this lesson If you are interested in learning some more, we recommend you look into the history of match object Definitely go and check out more advanced concepts once you are familiar with the basics Assignment\n1 Go and add a few new routes to the application we created above; playing around with it is the best practice Consider deleting it completely and rewriting it for practice 2 Browse a little bit through the React Router [documentation](https://reactrouter com/en/main/start/overview) You don't need to read through all of it, nor understand all of it Just browse through the concepts we discussed here and re-read them This is a great resource to refer back to 3 Watch this [video on React Router by Web Dev Simplified](https://www youtube com/watch v=Ul3y1LXxzdU) for reviewing You should already be familiar with those concepts Additional Resources\nThis section contains helpful links to other content It isn't required, so consider it supplemental This video by The Net Ninja is an excellent review of what we learned here For some extra practice/review, check out this article Knowledge Checks\nThis section contains questions for you to check your understanding of this lesson If you're having trouble answering the questions below on your own, review the material above to find the answer What is Client-side routing How do you add page routing to a React project What are the three core components of React Router How do you ensure that Router links are routed accurately",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6887,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\router.md",
      "source_type": "git_repo"
    },
    "token_count": 413,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "6e4743401b5a060242130e913aca76e6",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\accessibility_auditing.md",
    "source_type": "git_repo",
    "title": "accessibility_auditing",
    "content": "Introduction\nNow that you are equipped with the necessary knowledge to make your websites more accessible to many users, the question arises: How can we verify the correct implementation of a11y features Are there any mistakes to be corrected, or potential improvements to be made In this lesson, we will answer those questions to help push your a11y skills over the top Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson Open the accessibility section within your browser's DevTools Audit a web page with a third-party auditing tool Accessibility DevTools\nUsing your browser's DevTools is beyond useful for several things, from checking the styles applied to a page to debugging code, but you already know that Here's something you may not know: you can even use the DevTools to look at various accessibility features as well, which can be great as a sort of \"quick audit\" You can check contrast ratios (as we mentioned in a previous lesson), view various accessibility properties, and view the accessibility tree, to name a few features Accessibility auditing\nThere are plenty of third-party tools to audit the accessibility of a web page, each with its own pros and cons Here, we're only going to mention three of those tools By getting into the habit of auditing your web pages, you'll be able to track down any outstanding a11y issues that you may have missed Whether you decide to utilize one of these tools or any other auditing tool you prefer, you should only focus on fixing issues related to the concepts introduced in this portion of the curriculum for now axe DevTools for Chrome is an extension-based tool that returns a list of issues ranked by severity level, and will note any issues for you to manually check Lighthouse for Chrome is available in the Chrome DevTools by default (it might also be listed as the Auditing tab) or it can be run from the command line Lighthouse provides more than just a11y auditing, including performance, best practices, search engine optimization (SEO), and progressive web app (PWA) if applicable Issues are separated by category, and like the axe DevTools, there may be a list of issues for you to manually check WebAIM's WAVE is a website-based tool where you enter the URL of the page you want to audit There are also browser extensions and API options WAVE will return a preview of the page with an overlay of icons on it, and issues are separated into categories of alerts, warnings, and contrast errors",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6548,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\accessibility_auditing.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "0eb966b11ec50ea7c3ddc9196d5bb8ea",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\accessibility_auditing.md",
    "source_type": "git_repo",
    "title": "accessibility_auditing",
    "content": "applicable Issues are separated by category, and like the axe DevTools, there may be a list of issues for you to manually check WebAIM's WAVE is a website-based tool where you enter the URL of the page you want to audit There are also browser extensions and API options WAVE will return a preview of the page with an overlay of icons on it, and issues are separated into categories of alerts, warnings, and contrast errorsUnfortunately, the icons that are placed on the page may cause the layout to break, but that could be a minor issue if you're more focused on the a11y issues that are found Of course, one of the best ways to check the accessibility of your websites is to get feedback from users who rely on these accessibility features This isn't always an easy option, but it's worth hearing from those who may be affected by your site's accessibility (or lack of it) Assignment\n1 Read the following resources:\n- [Accessibility features reference](https://developer chrome com/docs/devtools/accessibility/reference/#pane), starting from the Accessibility pane section, provides a brief overview of Chrome's accessibility features in the DevTools - [Emulate vision deficiencies](https://developer chrome com/blog/new-in-devtools-83/#vision-deficiencies) from the Chrome 83 update page - The [Open the Issues tab](https://developer chrome com/docs/devtools/issues/#open) section You can ignore any mentions of anything that isn't accessibility-related on this page, as we just want you to know how to open this tab in your DevTools Once you do, you'll be able to see a11y issues in addition to any other issues found - Although there will be differences between different browsers, such as the value of the role property or how a11y properties are presented, check out [the \"Features of the Accessibility panel\" section in MDN's documentation](https://firefox-source-docs mozilla org/devtools-user/accessibility_inspector/index html#features-of-the-accessibility-panel) There is useful information that, while more tailored to Firefox, may still be useful for Chrome users Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What are some of the various accessibility features available in your browser's DevTools",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6548,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\accessibility_auditing.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "39e3a81459c900132f4aaaf0f5b550a5",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\accessibility_auditing.md",
    "source_type": "git_repo",
    "title": "accessibility_auditing",
    "content": "mozilla org/devtools-user/accessibility_inspector/index html#features-of-the-accessibility-panel) There is useful information that, while more tailored to Firefox, may still be useful for Chrome users Knowledge check The following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What are some of the various accessibility features available in your browser's DevToolsWhich third-party accessibility auditing tool is available in the Chrome DevTools by default Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental Involving Users in Evaluating Web Accessibility goes over some helpful steps to take when you can get feedback from users The WCAG Quick Reference provides a list of success criteria along with techniques for how to satisfy them and links to understanding them in more detail This tool is a great go-to when you're really ready to push your website to the next accessible level If you often use animations, success criterion 2 2 2 (\"Play, Stop, Hide\") and all of the 2 3 success criteria are definitely worth reading A11ycasts Playlist We've included several videos from this playlist in these lessons, but there are other videos worth checking out for various accessibility topics screenreader-outputs is a GitHub repo that contains many examples of screen reader outputs Sometimes nested elements or certain combinations of attributes and native labeling may result in accessible names or descriptions that are difficult to make sense of, so checking out this repo may help clear things up",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6548,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\accessibility_auditing.md",
      "source_type": "git_repo"
    },
    "token_count": 322,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "22162796a76724b3ab0a98abb9b03778",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\state_and_props.md",
    "source_type": "git_repo",
    "title": "{this.props.title}",
    "content": "Introduction\nThe last lesson was a lot of theory, but there is just a little bit more you have to learn in order to write your first React application If you've done all the steps in the previous lesson, you should now have a great foundation for the concepts you will learn next Make sure to pay close attention to this lesson because it covers two of the most important features of React Let's dive right into it Feel free to code along with this lesson Typing the code out will help you remember it significantly better Learning Outcomes\nBy the end of this lesson, you should be able to:\nDemonstrate how to pass functions, state, or other values between components as props\nDescribe the purpose of state in a React component\nExplain the importance of using setState() instead of mutating state directly\nDifferentiate between class and functional components and the syntax with which they use props\nDemonstrate how to attach event listeners to elements in React components\nProps\nIn the previous lesson, you learned a lot about components and how to structure your application in a \"React way\" But how do we share values or even functionality between those components Yes, you guessed it right, the answer is props Props are one of the two major pillars of React, the very heart of what the framework was built on Let's take the following example:\n~~~javascript\n// MyComponent js\nimport React, { Component } from 'react';\nclass MyComponent extends Component {\nconstructor(props) {\nsuper(props);\n}\nrender() {\nreturn (\n{this props title}\n);\n}\n}\nexport default MyComponent;\n~~~\n~~~javascript\n// App js\nimport React, { Component } from 'react';\nimport MyComponent from ' /MyComponent';\nclass App extends Component {\nconstructor(props) {\nsuper(props);\n}\nrender() {\nreturn (\n);\n}\n}\nexport default App;\n~~~\nLet's take a look at what is happening here Above, there are two components, MyComponent and App As you can see, MyComponent is imported into App, and then rendered as a child component of App In the JSX where we implement MyComponent, we also pass down a property called title This syntax should look familiar to you: it's the same way we assign attributes to HTML elements In this specific example, we assign a \"prop\" (short for property, as in an object property) called title which we set to the value \"React\"",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17671,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\state_and_props.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "32c74a8cfe2cd3f761262c7f3e3c8e31",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\state_and_props.md",
    "source_type": "git_repo",
    "title": "{this.props.title}",
    "content": "App As you can see, MyComponent is imported into App, and then rendered as a child component of App In the JSX where we implement MyComponent, we also pass down a property called title This syntax should look familiar to you: it's the same way we assign attributes to HTML elements In this specific example, we assign a \"prop\" (short for property, as in an object property) called title which we set to the value \"React\"In MyComponent, we can access this \"prop\" from within MyComponent with the syntax this props title This technique is called \"passing props \"\nIMPORTANT: Make sure you pass props to the constructor of the child component (MyComponent) as well as the super() method, otherwise you will not be able to access this props title in MyComponent You might be confused by this keyword since you may not yet have encountered it, but don't worry For right now it's enough to just know that you must use it for your React component to function correctly If you're really curious about what super actually does, check out the docs Now, you might be wondering how props work with functions Believe it or not, they work the same way ~~~javascript\n// MyComponent js\nimport React, { Component } from 'react';\nclass MyComponent extends Component {\nconstructor(props) {\nsuper(props);\n}\nrender() {\nreturn (\n{this props title}\nClick Me );\n}\n}\nexport default MyComponent;\n~~~\n~~~javascript\n// App js\nimport React, { Component } from 'react';\nimport MyComponent from ' /MyComponent';\nclass App extends Component {\nconstructor(props) {\nsuper(props);\nthis onClickBtn = this onClickBtn bind(this);\n}\nonClickBtn() {\nconsole log('Button has been clicked ');\n}\nrender() {\nreturn (\n);\n}\n}\nexport default App;\n~~~\nOk, there is a little bit more going on here, but in the end, it works exactly as in the example before First, there is MyComponent, which is essentially the same except one key difference: {this props onButtonClicked} is assigned to the onClick event of the component Essentially, what this means is:\nOur MyComponent component is expecting a prop to be passed into it named onButtonClicked\nThe value of that prop should be some kind of function\nWe want this function to be attached to the click event of our button",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17671,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\state_and_props.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "af036c18918f2bf7156b9c258b80ba12",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\state_and_props.md",
    "source_type": "git_repo",
    "title": "{this.props.title}",
    "content": "works exactly as in the example before First, there is MyComponent, which is essentially the same except one key difference: {this props onButtonClicked} is assigned to the onClick event of the component Essentially, what this means is: Our MyComponent component is expecting a prop to be passed into it named onButtonClicked The value of that prop should be some kind of function We want this function to be attached to the click event of our buttonSpecial note 1: In React, instead of using addEventListener to add event listeners, we assign them right in the JSX Unlike adding them in HTML, these attributes must be camelCased You can view a list of all supported events here Special note 2: Did you notice how the function this props onButtonClicked was wrapped in curly braces This is because JSX needs a way of knowing when you are using JavaScript, otherwise it will try to transpile your code into HTML elements, text nodes, or strings (or throw an error in some cases) In this case, we are referring to a JavaScript object property, which technically qualifies as \"using JavaScript,\" so we must wrap it in curly braces Now onto the App component First, we defined the method onClickBtn above the render method After that, we passed this function down to our MyComponent as a prop, which we named onButtonClicked (of course, you could also name it onClickBtn and then use that function in MyComponent js with the name of onClickBtn, but we wanted to emphasize that you can rename the functions when passing them around as props) We do that in the same way that we passed the title value previously, except instead of passing a string, we're just passing a function (and using curly braces to do so because it's a JavaScript variable) Now the only thing we have to do is bind the method to this; we do that in the constructor method at the top of our component but below the super() call Let's understand the reason behind this In the JavaScript section, we learned that the this keyword refers to the object that it belongs to However, the value of this can change depending on how a function is called When you pass a function from one component to another, the context of this changes, and it no longer refers to the original component This can cause errors and unexpected behavior To solve this problem, we use the bind() method",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17671,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\state_and_props.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "7c525825663bc73115ca9b2335679336",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\state_and_props.md",
    "source_type": "git_repo",
    "title": "{this.props.title}",
    "content": "the reason behind this In the JavaScript section, we learned that the this keyword refers to the object that it belongs to However, the value of this can change depending on how a function is called When you pass a function from one component to another, the context of this changes, and it no longer refers to the original component This can cause errors and unexpected behavior To solve this problem, we use the bind() methodBy calling bind() on a method and passing it the component's this keyword, we create a new function with this bound to the original component This ensures that the method is always executed in the correct context, regardless of where it is called from So, always remember: you must bind this for all methods in class components when passing them to other components As you can see when you are passing many properties or functions to a component, it can get quite exhausting to always refer to them with this props someProperty Destructuring to the rescue We can alternatively write the above as follows:\n~~~javascript\n// MyComponent js\nimport React, { Component } from 'react';\nclass MyComponent extends Component {\nconstructor(props) {\nsuper(props);\n}\nrender() {\nconst { title, onButtonClicked } = this props;\nreturn (\n<div>\n<h1>{title}</h1>\n<button onClick={onButtonClicked}>Click Me </button>\n</div>\n);\n}\n}\nexport default MyComponent;\n~~~\nHere, we are destructuring title and onButtonClicked from this props, which lets us refer to them with just their names Make sure to destructure within the render method when using class components In functional components, you would destructure outside of the return statement or inside the parameter parentheses of the functional component (more on those later) Great Hopefully, you have a better understanding of the purpose and usage of props in React Not too shabby At this point, if you're feeling overwhelmed, don't fret Once you start using props in your projects, you'll understand them much better Soon enough, you'll be a props master State\nThe other main pillar of React is state State is simply what we use to handle values that can change over time For example, consider a very simple application that has a button and a counter When the user clicks the button, the counter is incremented by 1 Since count will need to change on every click, we want to hold that value in state",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17671,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\state_and_props.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "826a67f64a6624de41ba12ed74473746",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\state_and_props.md",
    "source_type": "git_repo",
    "title": "{this.props.title}",
    "content": "them much better Soon enough, you'll be a props master State The other main pillar of React is state State is simply what we use to handle values that can change over time For example, consider a very simple application that has a button and a counter When the user clicks the button, the counter is incremented by 1 Since count will need to change on every click, we want to hold that value in stateThe following example of our simple counter app shows how to define state in React:\n~~~javascript\nimport React, { Component } from 'react';\nclass App extends Component {\nconstructor() {\nsuper();\nthis state = {\ncount: 0,\n};\nthis countUp = this countUp bind(this);\n}\ncountUp() {\nthis setState({\ncount: this state count + 1,\n});\n}\nrender() {\nreturn (\nClick Me {this state count}\n);\n}\n}\n~~~\nIn the above component, we declared our state as an object with a property count set to an initial value of 0 You always declare state in the constructor of a class component Once again, this will work differently when we cover functional components later The setState method we call inside the countUp method sets the state to a new value IMPORTANT: In React, state should be treated as immutable This means you should never change state directly (i e without using setState) because it can lead to unexpected behavior or bugs In other words, you should never do something like: this state count = 3, or, this state count++ Instead, always use the setState method React provides to class components to modify the state Keep this in mind - it can save you a lot of debugging when you are getting started with React This article does a great job analyzing many popular JavaScript methods concerning mutability Take some time to read it so you can understand how easy it can be to accidentally mutate state Please note there is one mistake in this article: In the last code example, mapping n * 2 onto origArr would not result in the modified strings suggested; rather, the mutated array would contain NaN values As we mentioned before, our countUp() method needs to be bound in our constructor (using bind), so it knows what context to operate in This is a result of how this works in JavaScript, see this article for a great explanation on why this is the case In the render method, we access the current state through this state count This syntax should look familiar to you by now because it is the same way we accessed props",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17671,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\state_and_props.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "4c81d0e810d7b568e6077d42602df49c",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\state_and_props.md",
    "source_type": "git_repo",
    "title": "{this.props.title}",
    "content": "mentioned before, our countUp() method needs to be bound in our constructor (using bind), so it knows what context to operate in This is a result of how this works in JavaScript, see this article for a great explanation on why this is the case In the render method, we access the current state through this state count This syntax should look familiar to you by now because it is the same way we accessed propsAnd yes, you can also destructure state What about passing state as a prop Is that even legal Yes One of the greatest and most powerful features of React is the ability to pass one component's state down to multiple children When that piece of state is changed, each child component that uses it is automatically re-rendered with the new value Consider a webpage such as a forum where the \"main\" component of the site (we'll call that component Forum) needed to know the user's username so that when they are viewing a post or reply they wrote, the author is shown as \"me\" instead of \"user123\" You'd probably want to keep that username as a piece of data in state so each user that visited the site and logged in could have this functionality Now let's say on that same site, you want the login button on the navigation bar to change into the user's username to visually indicate to them that they are logged in Instead of keeping this piece of state in both the NavBar and Forum component, we can keep it in their parent, App, and pass it down as a prop to both like so:\n~~~javascript\n// in the render method of App js\nreturn (\n);\n~~~\nNow, when the user logs in, both the NavBar and Forum components will update, but the Footer component (which doesn't need to know about that data) will not re-render Pretty cool, right State and props in functional components\nAs we learned in the previous lesson, and repeatedly made reference to in this lesson, React provides the ability to create components as functions instead of classes We call these functional components They use somewhat different syntax than the class components we've discussed thus far, but they essentially do that same thing In functional components, we don't pass props as an argument to the constructor, but instead just pass it as an argument to the component itself Another major difference between functional and class components concerning props is the way you reference the props",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17671,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\state_and_props.md",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "50607343528aa0335e69103c91321abc",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\state_and_props.md",
    "source_type": "git_repo",
    "title": "{this.props.title}",
    "content": "ability to create components as functions instead of classes We call these functional components They use somewhat different syntax than the class components we've discussed thus far, but they essentially do that same thing In functional components, we don't pass props as an argument to the constructor, but instead just pass it as an argument to the component itself Another major difference between functional and class components concerning props is the way you reference the propsYou learned that in a class component, the props that have been passed down from the parent component can be used with this syntax: this props someFunction, however in functional components, we don't need to reference this, so we access props simply with: props someFunction That's the main difference with props between class and functional components Let's consider a quick example to solidify this:\n~~~javascript\n// MyComponent js\nimport React from 'react';\nfunction MyComponent(props) {\nreturn {props title};\n}\nexport default MyComponent;\n~~~\n~~~javascript\n// App js\nimport React from 'react';\nimport MyComponent from ' /MyComponent';\nfunction App() {\nreturn (\n);\n}\nexport default App;\n~~~\nOf course, we can also destructure from props here By adding the line const {title} = props above the return statement in MyComponent js we can just refer to the title using {title} Or, we can skip that line of code altogether if we destructure the prop inside the parameter parentheses like so:\n~~~javascript\nfunction MyComponent({ title }) {\n// rest of code\n}\n~~~\nUsing state in functional components is a bit different Before the end of 2018, developers were not able to access state in functional components at all Functional components were therefore just used for returning JSX logic with props However, with the introduction of React Hooks, this changed Now we can set and access state in functional components, and in the modern React landscape, they are often preferred over class components React developers will be exposed to both kinds of components on the job, so it's imperative for us to be very familiar with both The way React hooks work is the topic of one of the following lessons, so don't worry about it right now We are setting you up to say \"Hey I remember that\" when it's introduced Assignment\n1 Go through [this](https://react dev/learn/passing-props-to-a-component) lesson It dives into how to pass and read props to and from a component 2",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17671,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\state_and_props.md",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "f12da1ae4e0bf0df020dae9fbdc7f4d2",
    "source_file": "corpus\\git_repos\\odin-project\\archive\\javascript\\react_js\\state_and_props.md",
    "source_type": "git_repo",
    "title": "{this.props.title}",
    "content": "to both kinds of components on the job, so it's imperative for us to be very familiar with both The way React hooks work is the topic of one of the following lessons, so don't worry about it right now We are setting you up to say \"Hey I remember that\" when it's introduced Assignment 1 Go through [this](https://react dev/learn/passing-props-to-a-component) lesson It dives into how to pass and read props to and from a component 2Starting with [this lesson on props,](https://www geeksforgeeks org/reactjs-props-set-1/) continue through each of the lessons relating to state and props to build a good foundation for the upcoming lessons Once again, you're welcome to explore more on your own if you wish Additional Resources\nThis section contains helpful links to other content It isn't required, so consider it supplemental This course is a great way to get more familiar with all basic concepts of React in a very short time An article by the React team on the thought process that should go into the developer's minds while building a React based application Knowledge Check\nThis section contains questions for you to check your understanding of this lesson If you're having trouble answering the questions below on your own, review the material above to find the answer How do you pass functions, state, or other values between components What is the purpose of state in a React component Explain the importance of using setState() instead of mutating state directly What is the difference between functional and class components and how does their syntax for handling props differ How do you attach event listeners to elements in React components",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 17671,
      "relative_path": "git_repos\\odin-project\\archive\\javascript\\react_js\\state_and_props.md",
      "source_type": "git_repo"
    },
    "token_count": 326,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "4b8656d3cc8a5e05ee5b3546bf6c5aac",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\accessible_colors.md",
    "source_type": "git_repo",
    "title": "accessible_colors",
    "content": "Introduction\nAlthough adding color to a page can make it more visually appealing, using the wrong color combination or relying solely on color to convey information can end up making things more difficult to perceive and understand for some users This doesn't mean you have to limit yourself when choosing color schemes for a website, but it does mean you have to take extra care when actually using those colors Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson Understand what a contrast ratio is Know how to check contrast ratios Understand why color alone should not be used to convey information Color contrast\nCan you easily read the text in all three (yes, three) examples from the image above If you can't, then that's because the contrast ratio is too low If you can, then consider me jealous of your eye sight, but you still need to provide an easily perceivable website for visually impaired users A contrast ratio is the difference in brightness between two colors expressed as a ratio White text on a white background would have lowest ratio (1:1), while black text on a white background would have the highest (21:1) Contrast ratios refer to both normal text as well as images of text There are two different conformance levels for contrast ratios, both of which have rules for normal text and large text Normal text is defined as text with a font size that's less than 18 points/24px (or less than 14 points/18 66px for bold text), and large text is defined as text with a font size that is at least 18 points/24px (or at least 14 points/18 66px for bold text) Level AA (minimum) requires a contrast ratio of at least 4 5:1 for normal text and 3:1 for large text Level AAA (enhanced) requires a contrast ratio of at least 7:1 for normal text and 4 5:1 for large text Both conformance levels have exceptions that don't need to follow the contrast ratio rules:\nIncidental text, such as text that just happens to be within an image that has other significant visual content, or text that is purely decorative Text that is part of an inactive or disabled user interface component, such as a button that is disabled and has a lowered opacity Text that is part of a logo or brand name At this point you might be thinking, \"18 66 pixels 4 5:1 How the heck am I supposed to remember these numbers",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6153,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\accessible_colors.md",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "7893d9893150609a19beefa0bf27ce3e",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\accessible_colors.md",
    "source_type": "git_repo",
    "title": "accessible_colors",
    "content": "that just happens to be within an image that has other significant visual content, or text that is purely decorative Text that is part of an inactive or disabled user interface component, such as a button that is disabled and has a lowered opacity Text that is part of a logo or brand name At this point you might be thinking, \"18 66 pixels 4 5:1 How the heck am I supposed to remember these numbersWait, how am I supposed to calculate the ratios in the first place \" Luckily for you, you don't have to WebAIM Contrast Checker is a fantastic tool for checking contrast ratios Just enter the HEX code of the foreground and background colors and it calculates what conformance levels, if any, the contrast ratio passes The page also has a link for a link contrast checker, which goes over what the contrast ratio should be if a text link isn't underlined You can also check the contrast ratio of the text within an element using your browser's dev tools In Chrome, click the \"element picker\" tool in the Elements tab, then hover over an element on the web page This displays a tooltip showing the contrast ratio under the Accessibility section You can also view the contrast ratio by selecting an element with text in the Elements tab and clicking on the color picker tool for the \"color\" property in the Styles pane Conveying information\nNow that you know to take the contrast ratio into account when adding color for text and backgrounds, let's see if you can tell which of the buttons in the image below is red:\nThe answer, by the way, is button 4 The image above is simulating achromatopsia, which is also known as total color blindness This illustrates a key point when using color: you shouldn't use color alone to convey information There may be exceptions where it's necessary to only use color, but generally you want to follow this rule Let's look at another example Let's say you want to create a form that has an instruction stating that required fields are indicated by red text If a user is color blind or otherwise has difficulty telling some colors apart, having to rely solely on the color of this text can make it difficult or even impossible to perceive or operate the form Instead of only using color, your form could indicate all required fields with red text and an asterisk:\nKnowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6153,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\accessible_colors.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "3b528f57fc386cdb56f8d6af66e44d69",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\accessible_colors.md",
    "source_type": "git_repo",
    "title": "accessible_colors",
    "content": "are indicated by red text If a user is color blind or otherwise has difficulty telling some colors apart, having to rely solely on the color of this text can make it difficult or even impossible to perceive or operate the form Instead of only using color, your form could indicate all required fields with red text and an asterisk: Knowledge check The following questions are an opportunity to reflect on key topics in this lessonIf you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What is a contrast ratio What are two ways you can check a contrast ratio using your dev tools What should you avoid when conveying information to users Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental A Complete Guide to Dark Mode on the Web from CSS-Tricks can be a great starting point for implementing a dark theme for your website It covers different ways you can toggle a theme, how to take into account a user's preferred theme on their OS, and even saving a user's preference Although providing a light and dark theme can be a great accessibility feature for users (not just an aesthetic preference), it can take a lot of work to implement, hence why it is considered an additional resource",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6153,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\accessible_colors.md",
      "source_type": "git_repo"
    },
    "token_count": 257,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "858fab182d264dc7e6e8842da8c29dee",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\introduction_to_web_accessibility.md",
    "source_type": "git_repo",
    "title": "introduction_to_web_accessibility",
    "content": "Introduction\nAt this point in the curriculum you've learned incredibly valuable concepts in whichever full stack path you chose, you've created some awesome, resume worthy projects, and you should have a better understanding of some HTML and CSS concepts One could even argue that you may now love working with CSS What you may not have too much an understanding of, though, is the topic of accessibility, often referred to as \"a11y\" (due to there being 11 letters between the first and last letters) Unfortunately, this is a topic that many people either don't know much about, or just don't take into account when developing websites If you fit into either of those two categories, you may have adopted some habits that aren't exactly a11y friendly Before we get into how you can break away from such habits and begin implementing a11y friendly concepts, it's important to first understand some basic information about web accessibility Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson Explain what web accessibility is What is web accessibility Web accessibility means that websites, tools, and technologies are designed and developed so that people with disabilities and other circumstantial limitations can use them with as few barriers as possible There are different types of disabilities, including (but not limited to) auditory, physical/motor, cognitive, or visual A disability can be permanent, such as a user who is completely blind or deaf, or it can be temporary, such as a user with a broken arm Users can have multiple disabilities at any given time Older users with changing abilities may even have similar conditions as those who have a disability Situational limitations are a little different Using a phone outside on a bright day, browsing a site with one hand while you're busy doing something else with the other, or living in an area where the internet is slow or the bandwidth is expensive are all examples of situational limitations These limitations, unlike a disability, occur to users only in specific situations, but are still important to keep in mind when developing a website Why web accessibility matters\nLet's first look at a non-web example to gain a little perspective Imagine being in a multi-storied building that has no elevator For some people, this might only be an annoyance \"Huh, no elevator I guess I'll walk up a few flights of stairs, then \" A person that requires a wheelchair, however, would find it impossible, or at the very least much more difficult, to go anywhere beyond the first floor",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5627,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\introduction_to_web_accessibility.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "70ac78f83809ddb6094d450044fb20e9",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\introduction_to_web_accessibility.md",
    "source_type": "git_repo",
    "title": "introduction_to_web_accessibility",
    "content": "Why web accessibility matters Let's first look at a non-web example to gain a little perspective Imagine being in a multi-storied building that has no elevator For some people, this might only be an annoyance \"Huh, no elevator I guess I'll walk up a few flights of stairs, then \" A person that requires a wheelchair, however, would find it impossible, or at the very least much more difficult, to go anywhere beyond the first floorEven if a person in a wheelchair had someone to lift the wheelchair up each step, it would be a much more difficult process The point here is that an elevator would have made this building more accessible The building is your website, and the elevator is a collection of various accessibility features and tools ( it's a pretty big elevator) When you develop a website, you're developing it for users, and you need that website to actually be usable by them People with disabilities, older people with changing abilities, people who aren't as tech savvy, and people with some sort of situational limitation are still users, and websites should be as equally usable by them as possible One other pretty big reason that accessibility matters is that, depending on the country, there could actually be laws requiring accessibility to be implemented Assignment\n1 Go through the [Diverse Abilities and Barriers article from W3C](https://www w3 org/WAI/people-use-web/abilities-barriers/) to get a better understanding of how some users with disabilities are affected by inaccessible sites 1 Watch the [videos on Web Accessibility Perspectives by W3C](https://www w3 org/WAI/perspective-videos/) to see how (and which) users can benefit from accessibility features Each video is pretty short and has audio descriptions and transcripts If you prefer, the page also has a link to a compiled version of all of the videos on YouTube Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What is web accessibility Who truly benefits from accessibility features Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental The Business Case for Digital Accessibility goes over reasons for implementing accessibility beyond just being more inclusive to more users",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5627,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\introduction_to_web_accessibility.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "ac1718be6f8a3a2f8e87f56eb2363ded",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\introduction_to_web_accessibility.md",
    "source_type": "git_repo",
    "title": "introduction_to_web_accessibility",
    "content": "this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What is web accessibility Who truly benefits from accessibility features Additional resources This section contains helpful links to related content It isn't required, so consider it supplemental The Business Case for Digital Accessibility goes over reasons for implementing accessibility beyond just being more inclusive to more usersHow People with Disabilities Access Digital Content is a rather long video (a whopping 45 minutes), but it goes over a lot of various assistive technologies and will offer you some more perspective on how users with disabilities may browse the websites you create When we design for disability, we all benefit is a video featuring Elise Roy that furthers the point mentioned in this lesson, that accessibility benefits everyone While this video is a more general overview that doesn't revolve around web development specifically, it can still be an eye-opening experience",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 5627,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\introduction_to_web_accessibility.md",
      "source_type": "git_repo"
    },
    "token_count": 186,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7fe520b421e40c096ebc9b2611118aae",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\meaningful_text.md",
    "source_type": "git_repo",
    "title": "meaningful_text",
    "content": "Introduction\nMeaningful text is pretty straight forward: when a user reads text or has it announced to them, they should be able to immediately understand what it means even without any surrounding context A lack of meaningful text can affect all users, but especially those who rely on assistive technologies In this lesson we'll be going over a few instances where you should start making sure you provide meaningful text to users Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson Know how to provide meaningful links Know how to provide meaningful text in forms Know how to provide meaningful alt attributes for images Links\nLet's take a look at two different examples of a link:\n```html\nClick here to start your career in web development Visit The Odin Project to start your career in web development ```\nTo a sighted user, the link in Example 1 makes perfect sense However, in addition to being able to navigate a page via landmarks and headings (as mentioned in the Semantic HTML lesson), a screen reader may be able to navigate between each element of a specific type, such as links If a user were to navigate between all of the links on a page, the only thing that would get announced in Example 1 is, \"Click here, link \" Where's \"here\" exactly Without any surrounding context, the link is meaningless Not only that, but if you have multiple links on a page with that same text content, then users will be told to \"click here\" many times The link in Example 2, however, not only makes sense in context for all users, but it also makes sense out of context for screen reader users when it gets announced: \"The Odin Project, link \"\nWhen you add links to a page, there are a few rules you should be following:\nMake sure that the text content of the <a> element somehow indicates where the link redirects to and that it's brief (around 100 characters) So avoid using phrases like \"click here\" or \"this page\" If a link would open or download a file, include text that tells the user what kind of file it is as well as the file size If a link would automatically open in a new tab or window with the target=\"_blank\" attribute, you should indicate this to the user in some way",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8652,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\meaningful_text.md",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "663e059cd8d5c0502bb4b2ac0c97f465",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\meaningful_text.md",
    "source_type": "git_repo",
    "title": "meaningful_text",
    "content": "indicates where the link redirects to and that it's brief (around 100 characters) So avoid using phrases like \"click here\" or \"this page\" If a link would open or download a file, include text that tells the user what kind of file it is as well as the file size If a link would automatically open in a new tab or window with the target=\"_blank\" attribute, you should indicate this to the user in some way```html\n2021 Sign Up Statistics (PDF, 1MB)\nGitHub (opens in new tab)\n```\nThe next time you need to use links, try saying the contents of the element out loud to yourself Does it reasonably indicate where that link would take you, such as the title of the page, article, or video Are you aware whether it'll open in a new tab automatically or not, or that it'll open a download dialog If you've been testing out using a screen reader up to this point, then an even better way to test whether a link has meaningful text is with the screen reader itself Forms\nProviding meaningful errors to users when they are filling out or submitting a form can turn the experience from frustrating to well, maybe not fun, but at the very least just a bit less frustrating Let's take a look at a few error examples, ranging from not helpful at all to very helpful:\n```html\nError: Invalid input Error: Email is invalid Error: 'JohnSmith@@test com' is not valid Example of a valid email: example@yourdomain com ```\nEven if you could tell what input caused the error in Example 1, which may not always be the case, the error doesn't provide any meaningful text What input is invalid Why is it invalid How can you fix it None of these questions are answered Now imagine how meaningless this error must be to users of assistive technologies, who may not be able to see where an error is rendered on the page and may only have \"invalid input\" announced to them The error in Example 2 clearly tells you what input is invalid, so you now know exactly where to go While this might be all a user needs to know, it's worth keeping in mind that it is still a rather vague error We don't know why our email is invalid The error in Example 3 is even more meaningful It not only tells you what input is invalid, but also how to fix the error",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8652,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\meaningful_text.md",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "b0ea0d63aa034009cb20ae7be193ab86",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\meaningful_text.md",
    "source_type": "git_repo",
    "title": "meaningful_text",
    "content": "The error in Example 2 clearly tells you what input is invalid, so you now know exactly where to go While this might be all a user needs to know, it's worth keeping in mind that it is still a rather vague error We don't know why our email is invalid The error in Example 3 is even more meaningful It not only tells you what input is invalid, but also how to fix the errorGenerally when you inform a user of a form error, you should be informing them what input caused the error and, when possible, how to fix the error or why the error occurred in some way Another way to provide meaningful text in forms is with instructions, such as when a password input lists any characters that the password must contain (\"Must include at least one uppercase letter and one number \") For instructions that are unique to an input, they should be placed alongside the input itself Instructions that are more global across the form, such as indicating which inputs are required, should either be placed at the top of the form (\"* indicates a required field\"), or placed alongside the input or its label (\"Name (required)\") Alternative text\nAt this point you should be pretty familiar with the alt attribute on img elements Whether you are or not, let's see if you can tell which of the following examples is valid:\n```html\n```\nBelieve it or not, both examples above are valid While Example 1 doesn't actually have any meaningful text (perhaps a meaningful lack of text), you should still understand its importance When you're using an image purely for decoration, or the image just isn't really important for the user to be aware of, you generally don't want users of assistive technologies to be made aware of it In those cases, you should always use an empty string for the value of the alt attribute as seen in Example 1 (this is also known as a null value, not to be confused with the JavaScript data type) If you omitted the alt attribute, the presence of the image could still be announced, which may confuse the user (especially if the file name was a random string of letters and numbers) For Example 2, the screen reader would announce, \"Odin, graphic\", making the user aware that there's an image and what it's an image of What the alternative text should be for an image will ultimately depend on various factors, though Assignment\n1 Read [Alternative Text - WebAIM](https://webaim",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8652,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\meaningful_text.md",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "9d2430b22111b241b8bf18205cc91782",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\meaningful_text.md",
    "source_type": "git_repo",
    "title": "meaningful_text",
    "content": "alt attribute, the presence of the image could still be announced, which may confuse the user (especially if the file name was a random string of letters and numbers) For Example 2, the screen reader would announce, \"Odin, graphic\", making the user aware that there's an image and what it's an image of What the alternative text should be for an image will ultimately depend on various factors, though Assignment 1 Read [Alternative Text - WebAIM](https://webaimorg/techniques/alttext) to learn about when and how you should be adding alternative text for images based on the function of the image and the context surrounding it Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What are three rules you should follow in order to provide meaningful links What information should you inform users of in order to provide meaningful error messages in forms When should you use the empty string/null value for the alt attribute Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental Making Accessible Links: 15 Golden Rules For Developers is a little old, but is still a great list of 15 rules for creating, well, accessible links Some of the rules the article goes over were mentioned in this lesson, but there are some other rules that can help make sure you're creating a11y friendly links Usable and Accessible Form Validation and Error Recovery goes over a few different ways you can provide errors to users (using the alert in JavaScript, providing all errors at the top of the page, and using inline errors), as well as the pros and cons of each",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8652,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\meaningful_text.md",
      "source_type": "git_repo"
    },
    "token_count": 361,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "dbadbc3b02f81f1313d7020a01f45794",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\keyboard_navigation.md",
    "source_type": "git_repo",
    "title": "keyboard_navigation",
    "content": "Introduction\nSome users aren't able to use a mouse to navigate or operate their computer, and by extension the websites they visit These users may instead rely on using a keyboard or another assistive technology that can simulate keyboard inputs, such as voice recognition software Other users may even just prefer using a keyboard over a mouse, or may use a mix of both These users require proper keyboard navigation, something that can easily be overlooked when developing a website Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson Know the two things that interactive elements must have for keyboard users Understand what focus styles are and why you shouldn't completely remove them Understand what the tab order is Know how to properly hide hidden content from assistive technologies Focus\nRemember our Rock, Paper, Scissors example that didn't use semantic HTML from the well, Semantic HTML lesson Another issue with using <div> and <span> elements is that, by default, they aren't focusable and they don't have any event handling by default In order to fix our non-semantic Rock, Paper, Scissors example for keyboard users, we would need to take some extra steps, similar to the below code snippets:\n```html\nRock\nPaper\nScissors\n```\n```javascript\n// We also need to manually add in event handling for both mouse and keyboard events const buttons = document querySelectorAll(' button');\nfunction nameAlerter(e) {\nif (e type === 'click' || e key === ' ' || e key === 'Enter') {\nalert(e target textContent);\n}\n}\nbuttons forEach(button => {\nbutton addEventListener('click', nameAlerter)\nbutton addEventListener('keydown', nameAlerter)\n})\n```\nOf course, this example then makes it less understandable for screen reader users (remember, these \"buttons\" won't provide any context) Not only does using the <button> element provide the context screen reader users need, but they're focusable and have event handling for keyboards by default: pressing the Space or Enter keys on a keyboard when a <button> has focus will trigger the \"click\" event The point is that you need to make sure that any interactive elements are focusable by and have event handling for keyboards",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8665,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\keyboard_navigation.md",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "bf4675d5fdcc5e97987d84aac604b8ed",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\keyboard_navigation.md",
    "source_type": "git_repo",
    "title": "keyboard_navigation",
    "content": "screen reader users (remember, these \"buttons\" won't provide any context) Not only does using the <button> element provide the context screen reader users need, but they're focusable and have event handling for keyboards by default: pressing the Space or Enter keys on a keyboard when a <button> has focus will trigger the \"click\" event The point is that you need to make sure that any interactive elements are focusable by and have event handling for keyboardsUsing the correct semantic HTML can make this a lot easier of a goal to accomplish, but if you ever need to use an element that isn't focusable or doesn't have any event handling by default, then you need to add both of those functionalities in manually Focus styles\nAnother aspect of focusable elements is their focus styles, which are usually an outline or border surrounding the element when it receives focus One of the things you may have done, or may still do, is completely remove these focus styles by using CSS rules similar to the example below:\ncss\n/* These are so ugh-ly Let's get rid of them */\n*:focus {\noutline: none;\nborder: none;\n}\nYou probably assume that you're about to be told not to do this Well You should never completely remove focus styles You should either leave these default focus styles alone, or you should replace them with your own focus styles Whether it's adding a transform: scale() CSS property to a button, adding an outline to a link, or increasing the border width and opacity on an input, adding your own focus styles is the only alternative you should consider to the default focus styles Why Completely removing focus styles can make a page impossible for keyboard users to navigate and operate, as they have no visual indication what element actually has focus It would force them to have to manually keep track of how many times they've pressed the Tab key while also trying to guess what elements are actually focusable Imagine trying to browse a website with an invisible cursor and without any visual indication of when the cursor was hovering over interactive elements like links or buttons Doesn't sound too fun, does it Tab order\nThe tab order is the order in which elements on the page will receive focus when pressing the Tab key, and is by default in the same order as the order of elements listed in the HTML file:\n```html\nThis is the first element listed in the HTML This is the second element listed in the HTML",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8665,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\keyboard_navigation.md",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "dbec9095b772bc4351409fc52d00ec52",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\keyboard_navigation.md",
    "source_type": "git_repo",
    "title": "keyboard_navigation",
    "content": "the cursor was hovering over interactive elements like links or buttons Doesn't sound too fun, does it Tab order The tab order is the order in which elements on the page will receive focus when pressing the Tab key, and is by default in the same order as the order of elements listed in the HTML file: ```html This is the first element listed in the HTML This is the second element listed in the HTML```\nSometimes you may find it necessary to either change the visual order of elements on a page using CSS (the float or order properties, for example), or the tab order of elements themselves using the tabindex attribute Regardless of which method you may use, you should make sure the tab order matches the visual order of elements If the tab order is different from the visual order, users could be left confused or frustrated trying to navigate the page with a keyboard, expecting one element to receive focus based on the visual layout and instead another element receives focus The best way to avoid this issue is to just place elements in your HTML file in the order that you want them to actually receive focus Hidden content\nSometimes you may want to hide some content until a specific event occurs, such as a user clicking on a button to open a menu or a modal box When you want to hide content for this sort of purpose, you need to make sure the content is not only visually hidden, but also hidden from assistive technologies until that content is meant to be visible If you don't properly hide such content, then keyboard users would be able to tab into that content before they're meant to, but in doing so they would lose track of any visual focus on the page These users would be left confused or even frustrated when they're trying to tab through a page, only for their focus indicator to disappear into that hidden content One way to prevent this frustrating behavior is to give each individual item in that hidden content a tabindex value of -1, since that prevents an element from receiving focus via the keyboard (though you can still give it focus with JavaScript's focus() method) While this fixes the issue for keyboard users, other assistive technologies would still have access to and could still announce this hidden content A better solution is giving the container for the hidden content itself either the display: none or visibility: hidden CSS property when it's hidden, and removing or overriding that property when it's meant to be visible This not only removes the menu items from the tab order, but it also prevents assistive technologies from announcing them Assignment\n1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8665,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\keyboard_navigation.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "98977c0e2c3a47d2238cfc26d5a1c2f0",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\keyboard_navigation.md",
    "source_type": "git_repo",
    "title": "keyboard_navigation",
    "content": "for keyboard users, other assistive technologies would still have access to and could still announce this hidden content A better solution is giving the container for the hidden content itself either the display: none or visibility: hidden CSS property when it's hidden, and removing or overriding that property when it's meant to be visible This not only removes the menu items from the tab order, but it also prevents assistive technologies from announcing them Assignment 1Watch [What is Focus ](https://www youtube com/watch v=EFv9ubbZLKw&list=PLNYkxOF6rcICWx0C9LVWWVqvHlYJyqw7g&index=3) to see some issues that occur when trying to change the tab order, then watch [Controlling focus with tabindex](https://www youtube com/watch v=Pe0Ce1WtnUM&list=PLNYkxOF6rcICWx0C9LVWWVqvHlYJyqw7g&index=4) to see how using the `tabindex` attribute can affect the tab order Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What are two things that interactive elements must have for keyboard users What are focus styles Why should you never completely remove focus styles from an element What is the tab order What is the best way to hide hidden content from assistive technologies Additional resources\nThis section contains helpful links to related content It isn’t required, so consider it supplemental Skip Links are another form of accessibility for keyboard users and can be especially helpful for those who require more effort to tab through the contents of a page",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8665,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\keyboard_navigation.md",
      "source_type": "git_repo"
    },
    "token_count": 369,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "92863eaf6e856bd0308e5ea7bf879965",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\semantic_html.md",
    "source_type": "git_repo",
    "title": "semantic_html",
    "content": "Introduction\nAs useful as <div> and <span> elements can be as generic containers, they're not always the most a11y friendly elements to use While it may be tempting or easier to just use them for everything, from containers to interactive areas, you should not only check whether there is a more appropriate element to use in certain situations, but also whether you're using an element correctly Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson Explain why semantic HTML is important for accessibility Name the seven HTML elements that define landmarks on a page The importance of semantics\nIn terms of web accessibility, using semantic HTML is important because it provides meaning and context Some elements have a semantic meaning, but don't really provide any context when announced by assistive technologies, such as the <p> element Then there are elements that have a semantic meaning and are announced with some sort of context to help users perceive or operate them, like a <button> The <div> and <span> elements, most likely two of the more common elements you use, are semantically neutral That is, they themselves have no semantic meaning and provide no context on their own to assistive technologies, which can make it more difficult for users of such technologies to perceive, operate, and understand them Don't let this lack of semantics and context make you feel like you can never use a <div> or <span> ever again, though They still have their uses as generic containers, such as for layouts or for generic text Okay, let's look at an actual example to help better understand this whole semantics and context thing Think of any project you may have completed so far that required a user to click on something: Rock, Paper, Scissors; Calculator; Tic-Tac-Toe If you used <div> or <span> elements for any clickable areas, things most likely worked as intended for you For example, perhaps you had something similar to the HTML below for your Rock, Paper, Scissors UI back in Foundations:\n```html\nRock\nPaper\nScissors\n```\nA sighted user would most likely have no trouble playing the game if the elements looked like something to interact with A screen reader user, however, would have no idea what any of these elements mean The screen reader would announce the text contents of the element (\"Rock\", \"Paper\", or \"Scissors\"), and the user might think it's just plain text on the page and move on",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10112,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\semantic_html.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "d1fc763b7df56282baa57530ba939592",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\semantic_html.md",
    "source_type": "git_repo",
    "title": "semantic_html",
    "content": "Scissors UI back in Foundations: ```html Rock Paper Scissors ``` A sighted user would most likely have no trouble playing the game if the elements looked like something to interact with A screen reader user, however, would have no idea what any of these elements mean The screen reader would announce the text contents of the element (\"Rock\", \"Paper\", or \"Scissors\"), and the user might think it's just plain text on the page and move onThere's no context to tell the user that they're supposed to, or that they even can, interact with these elements This issue can be easily fixed by using semantic HTML:\n```html\nRock\nPaper\nScissors\n```\nBecause the <button> element has a semantic meaning and provides context, a screen reader would announce the text content as well as the role of the element: \"Rock, button\" Using semantic HTML correctly\nWhen it comes to using semantic HTML correctly, you want to think about what your intent for users is and what context you want (or need) to provide to them This can vary depending on the situation, but there are some things you should absolutely be checking for moving forward:\nIf a user is meant to click something, whether it's an actual button or not, you will usually want to use a <button> element This will let the user know that they can interact with the element by clicking on it If you want to provide some sort of tabular data to a user, use a <table> element along with the elements related to it This will allow a user to more easily navigate and understand the data being presented When you use an input element, you should always create a relationship between it and a <label> element A <label> provides context for what an input actually means to assistive technologies, announcing the label contents each time the input is announced Not only that, but a proper <label> increases the clickable area of the input itself, which is useful for users who have trouble clicking on smaller items There are two ways you can create this relationship:\n```html\nName\nName\n```\nContinuing with inputs, you should always use the type that makes the most sense for its intended use type=\"text\" makes more sense for a name or address field, while type=\"email\" or type=\"tel\" would of course make more sense for an e-mail or telephone field, respectively For certain devices, using the correct type may show only the required or additional characters on the keyboard",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10112,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\semantic_html.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "baf97d9e414fec5583426bb8f607f9b6",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\semantic_html.md",
    "source_type": "git_repo",
    "title": "semantic_html",
    "content": "There are two ways you can create this relationship: ```html Name Name ``` Continuing with inputs, you should always use the type that makes the most sense for its intended use type=\"text\" makes more sense for a name or address field, while type=\"email\" or type=\"tel\" would of course make more sense for an e-mail or telephone field, respectively For certain devices, using the correct type may show only the required or additional characters on the keyboardA type=\"tel\" input, for example, might make it much easier for users to fill out their phone number by providing larger, numerical-only keys on mobile or tablet devices When you want to present a list of some sort to a user, you should use the appropriate list element (<ol>, <ul>, or <dl>) and their related list item elements This will not only let the user know when they are entering or exiting a list, but also how many items are in the list Headings and landmarks\nHeadings are the <h1> through <h6> elements, and like the name implies, these elements act as headings to sections of a page Landmarks, on the other hand, are HTML elements that act as regions of a page There are seven native HTML elements that define these landmark regions:\n<aside>\n<footer>\n<form>\n<header>\n<main>\n<nav>\n<section>\nAs an example, consider the following image which shows how this lesson in particular uses semantic HTML for the different areas in the page If you want to examine the page in more detail, feel free to use the developer tools to do so By properly using landmarks and headings, you provide users of assistive technologies a more operable and understandable page: not only can screen reader users navigate a page via landmarks and headings by using navigation keyboard commands (or opening a menu in their screen reader), but these elements also have their roles announced to provide additional context If you were to use only <div> elements to act as these landmarks and headings, maybe adding in some CSS to visually style them, then a screen reader user would have to go through the entire page just to get to a specific section, and they may not be able to actually tell what is a heading or a landmark on the page Assignment\n1 Read [How screen readers navigate data tables](https://tink uk/how-screen-readers-navigate-data-tables/) to see a great example of just how much context a proper `` element provides",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10112,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\semantic_html.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "61776a09fcdb3cc73d6f82df1057c670",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\semantic_html.md",
    "source_type": "git_repo",
    "title": "semantic_html",
    "content": "landmarks and headings, maybe adding in some CSS to visually style them, then a screen reader user would have to go through the entire page just to get to a specific section, and they may not be able to actually tell what is a heading or a landmark on the page Assignment 1 Read [How screen readers navigate data tables](https://tink uk/how-screen-readers-navigate-data-tables/) to see a great example of just how much context a proper `` element providesThere is also a video at the end of the blog post if you want to *hear* how a table is announced 2 Watch [Why headings and landmarks are so important](https://www youtube com/watch v=vAAzdi1xuUY&list=PLNYkxOF6rcICWx0C9LVWWVqvHlYJyqw7g&index=19) to see how a screen reader interacts with the heading and landmark elements Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge Why is semantic HTML important for accessibility What are the seven HTML elements that define landmarks on a page Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental NVAccess provides a download of the NVDA screen reader, one of the more popular (and free ) screen readers available, though it's only available for the Windows OS If you're using a macOS device, you should have the VoiceOver screen reader available to you by default While the lessons in this section will provide you with what a screen reader will generally announce, it can be invaluable to start using a screen reader yourself to test out your projects and see how they might be perceived Screen Reader Basics: VoiceOver and Screen Reader Basics: NVDA go over some basics for getting started with both brands of screen readers Both videos are worth watching regardless of which screen reader you choose/is available to you, as they contain some universal information as well Screen reader basics: Orca is a good video to get you started using Orca, the Linux GUI screen reader Screen reader basics: ChromeVox is a starting place for learning to use ChromeVox, the screen reader on ChromeBooks ARIA Landmarks Example lists the native HTML elements that define landmark regions as well as what their role is",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10112,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\semantic_html.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "3a0c47a5a2714ddacf0dbf4142431cad",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\semantic_html.md",
    "source_type": "git_repo",
    "title": "semantic_html",
    "content": "worth watching regardless of which screen reader you choose/is available to you, as they contain some universal information as well Screen reader basics: Orca is a good video to get you started using Orca, the Linux GUI screen reader Screen reader basics: ChromeVox is a starting place for learning to use ChromeVox, the screen reader on ChromeBooks ARIA Landmarks Example lists the native HTML elements that define landmark regions as well as what their role isIf you check this resource out, be sure to enable the button toggles at the top of the page to see how the page is sectioned by landmarks and how it uses headings",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 10112,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\semantic_html.md",
      "source_type": "git_repo"
    },
    "token_count": 127,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "51c00641eaf38546401ea8670063866a",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\the_web_content_accessibility_guidelines_wcag.md",
    "source_type": "git_repo",
    "title": "the_web_content_accessibility_guidelines_wcag",
    "content": "Introduction\nAfter the previous lesson, you should now have a better understanding of how important web accessibility can be for certain users, and how beneficial it can be for all users But how do we know not only what should be a11y friendly, but how to make those things a11y friendly Well, there are many sources available to tell us the what and how, those who actually rely on accessibility being one of the best sources we can consult Another source, one that goes over many different ways to help make websites more accessible, is the Web Content Accessibility Guidelines (WCAG) In this lesson we're going to skim the surface of the WCAG, just to familiarize you with them at a more basic level Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson Explain the purpose of the Web Content Accessibility Guidelines Name the 4 principles of the WCAG Web Content Accessibility Guidelines\nThe WCAG exist in order to help create a shared standard when it comes to web accessibility Think of web accessibility as the destination, and the WCAG as one of the tools that can help get us closer to it It's important to understand that while the WCAG can be incredibly helpful for building an a11y foundation, they are not the finish line when it comes to accessibility Like the name says, they are guidelines, and they will only help us make websites more accessible The four principles\nThe WCAG are organized around four, core principles (POUR) that should be kept in mind when implementing any sort of accessibility feature:\nPerceivable: Users must be able to perceive the information or user interfaces being presented For example, light text on a light background could be difficult for some users with a visual impairment to perceive Operable: Users must be able to operate any user interfaces or navigation, and interfaces cannot require an interaction which the user cannot perform A navigation bar with drop-down menus that only expand when a mouse cursor hovers over them, for example, would not be operable by keyboard users giving those menu items focus Understandable: Users must be able to understand any information or user interface that is presented to them For example, if a user tried submitting a form and received an error such as \"Error 113: Bad data\", they wouldn't be able to understand what the error actually means or how to fix whatever caused the error Robust: Content must be accessible by current assistive technologies and other user agents, and must remain accessible as those technologies advance",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6737,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\the_web_content_accessibility_guidelines_wcag.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "ce8795a834ebb7614f92e857eb06c8c5",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\the_web_content_accessibility_guidelines_wcag.md",
    "source_type": "git_repo",
    "title": "the_web_content_accessibility_guidelines_wcag",
    "content": "Understandable: Users must be able to understand any information or user interface that is presented to them For example, if a user tried submitting a form and received an error such as \"Error 113: Bad data\", they wouldn't be able to understand what the error actually means or how to fix whatever caused the error Robust: Content must be accessible by current assistive technologies and other user agents, and must remain accessible as those technologies advanceConformance levels\nConformance levels get mentioned at a couple of other points in these lessons, and we're only mentioning them here to briefly explain what they are ahead of time The WCAG has three different conformance levels, each of which is made up of various success criteria, or rules, that must be followed in order to successfully meet that level of conformance You don't need to worry about meeting any of these conformance levels completely for the purposes of these lessons, you only need to know that they exist (luckily their naming is pretty easy to remember) Level A, or essential support, is the minimum level of conformance for the WCAG Level AA, or ideal support, is the level many organizations strive for Meeting this level also requires meeting Level A Level AAA, or specialized support, isn't recommended for entire sites to meet in full, as some content may make it impossible to meet this conformance level Meeting this level would require also meeting both Level A and Level AA (Before) implementing accessibility\nThe lessons that follow dive into several concepts that can help you improve the accessibility of your websites, but they don't cover every facet of accessibility The goal of these lessons is just to introduce you to some of the more common concepts that you should get into the habit of checking for moving forward Even though we're only introducing you to some of these a11y concepts, you may still worry that your site isn't accessible enough The first thing to keep in mind is that no site will ever be 100% accessible, so don't try to aim for such an impossible goal Sometimes the purpose or concept of a site even requires some things to not be accessible in certain ways The second thing to keep in mind is that just taking those first few steps towards creating accessible websites matters just as much as the many more steps you'll take in the future Even if you only add one a11y feature to your websites for now, what you may think is a minor addition could actually be a huge improvement for more users than you realize",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6737,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\the_web_content_accessibility_guidelines_wcag.md",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "9102d5aaeb284e105e0f063a58e9a505",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\the_web_content_accessibility_guidelines_wcag.md",
    "source_type": "git_repo",
    "title": "the_web_content_accessibility_guidelines_wcag",
    "content": "requires some things to not be accessible in certain ways The second thing to keep in mind is that just taking those first few steps towards creating accessible websites matters just as much as the many more steps you'll take in the future Even if you only add one a11y feature to your websites for now, what you may think is a minor addition could actually be a huge improvement for more users than you realizeSo don't feel like you have to make everything perfect or that you need to add everything at once when implementing accessibility, especially when you're just starting out Assignment\n1 Read through the [WCAG Overview](https://www w3 org/WAI/standards-guidelines/wcag/) page Don't worry about all of the other links for now The goal of reading this page is to understand more of the included overview and to get familiar with the site itself for when you *do* need to visit other pages on it 1 Skim through [WebAIM's WCAG 2 Checklist](https://webaim org/standards/wcag/checklist), keeping in mind to read the important disclaimer For now the goal is just to get an idea of common accessibility issues, some of which you'll be ready to fix by the time you finish this set of lessons, rather than read through every issue listed on the page Keep this resource bookmarked, though, as using it as your checklist when you start actively implementing accessibility will be really handy Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What is the purpose of the Web Content Accessibility Guidelines What are the 4 principles of the WCAG Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental The A11Y Project: An open-source resource that provides information on how to make your web content more accessible The A11Y Project includes checklists, guidelines, and tools that can help you implement WCAG standards effectively",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 6737,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\the_web_content_accessibility_guidelines_wcag.md",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9137b9d02f34249c9d213e04203781a9",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\wai_aria.md",
    "source_type": "git_repo",
    "title": "wai_aria",
    "content": "Introduction\nIn the previous lessons, you learned several ways to make websites more accessible Those lessons, however, were just the tip of the accessible iceberg WAI-ARIA introduces attributes that can help make websites even more accessible by modifying the semantics and context of elements, which can give you greater control over how those elements are perceived by assistive technologies Because this subject can get so complicated, we're only going to cover two attributes that you can get a lot of use from Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson Know the purpose of WAI-ARIA Know what ARIA can't do Understand the five rules of ARIA use Understand what the accessibility tree is Understand the three ARIA attributes that can add labels to elements Understand what the aria-hidden attribute does What is WAI-ARIA WAI-ARIA stands for - deep breath - the Web Accessibility Initiative's Accessible Rich Internet Applications specification The purpose of WAI-ARIA (often referred to as just ARIA) is to define a way to make web content more accessible when native HTML is unable to do so Think of ARIA as something that fills in the accessible gaps left by native HTML It's important to note that ARIA can only modify the semantics or context of an element ARIA can't:\nmodify an element's appearance,\nmodify an element's behavior,\nadd focusability, or\nadd keyboard event handling When you use ARIA, you will usually have to take additional steps to add in any missing semantics or functionality Remember the Keyboard Navigation lesson and how we had to add in functionality to <div> \"buttons\" The five rules of ARIA\nARIA can be extremely powerful when used correctly, but it can be equally as dangerous when used incorrectly Because of this, you should keep in mind that no ARIA is better than bad ARIA, even when you have the best intentions The WCAG has something called \"The five rules of ARIA,\" which as you may have guessed are rules you should follow when using ARIA Although we don't cover all of the terms mentioned below, it's still important to understand the rules themselves, especially if you decide to dive deeper into ARIA on your own Always use native HTML elements and attributes over ARIA when possible Never change native semantics, unless you have no other choice All interactive ARIA controls must be usable with a keyboard",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13873,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\wai_aria.md",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "8f204340743db9a1deeea2807d438640",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\wai_aria.md",
    "source_type": "git_repo",
    "title": "wai_aria",
    "content": "ARIA,\" which as you may have guessed are rules you should follow when using ARIA Although we don't cover all of the terms mentioned below, it's still important to understand the rules themselves, especially if you decide to dive deeper into ARIA on your own Always use native HTML elements and attributes over ARIA when possible Never change native semantics, unless you have no other choice All interactive ARIA controls must be usable with a keyboardNever use role='presentation' or aria-hidden='true' on focusable elements All interactive elements must have an accessible name The accessibility tree\nBefore we get into a couple of the ARIA attributes available to us, it's important to know some basics of what the accessibility tree is, as it will help you understand just what those attributes are actually doing The accessibility tree is based on the DOM, something you should be very familiar with by now While the DOM represents nodes and objects that make up a web page, the accessibility tree contains only the accessibility related information that will be used by assistive technologies The way ARIA works is by modifying properties of the objects that make up this accessibility tree For this lesson, we're only going to focus on two of these properties:\nName: Also known as the \"accessible name\", this is what assistive technologies announce to a user and what separates elements of the same type from one another The name may be set by one or more native labels, including the text contents of an element, the <label> element, or the alt attribute, to name a few Description: This is what assistive technologies announce in addition to its accessible name ARIA labels\nARIA labels help users of assistive technologies better understand the content on a web page by overriding native labels or providing additional descriptive text Unlike the <label> element, ARIA labels aren't limited to being used on only a select few elements, though they still have their own limitations You may remember being warned against using the id attribute earlier in the curriculum To briefly recap, normally you want to avoid overusing id attributes or even using it when it isn't necessary (which more often than not, it isn't, and you should stick with using classes) There are several ARIA attributes, however, that actually require another element to have an id When using such ARIA attributes, you would provide an id to one element, and you would then pass in that id value as another element's ARIA attribute value",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13873,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\wai_aria.md",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "a270dfc5b1f941b06e4cbd89e125550d",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\wai_aria.md",
    "source_type": "git_repo",
    "title": "wai_aria",
    "content": "To briefly recap, normally you want to avoid overusing id attributes or even using it when it isn't necessary (which more often than not, it isn't, and you should stick with using classes) There are several ARIA attributes, however, that actually require another element to have an id When using such ARIA attributes, you would provide an id to one element, and you would then pass in that id value as another element's ARIA attribute valueThis creates a link between the elements, similar to how a <label> element's for attribute creates a link to an input's id Of the three types of ARIA labels mentioned below, aria-labelledby and aria-describedby are ARIA attributes that require another element to have an id aria-label\nThe aria-label attribute overrides any native label of an element and modifies its name property in the accessibility tree It is best used when an element doesn't already have a native label When added, the string value of the aria-label attribute  becomes the element's accessible name However, aria-label does not have any effect on some HTML elements, such as <div> or a <span> A common use for aria-label can be found in the \"close\" buttons of menus or modals:\nhtml\n<button type='button' aria-label='Close menu'>X</button>\nInstead of a screen reader announcing, \"X, button\", which makes little sense to the user, it would announce, \"Close menu, button\" Another way you could use aria-label is on landmark elements (our Semantic HTML lesson gets another shoutout again ):\n```html ```\nOnce a screen reader reaches the above HTML, it would announce \"Main navigation, navigation landmark\" If you had multiple navigation elements on a page, you could give each a different aria-label value in order to separate them from one another, making them more understandable for screen reader users Pretty neat, huh Do not use aria-label to change how a word is phonetically announced Certain words may not get announced correctly by a screen reader, and you may have a temptation to try and fix this You may end up fixing how a word is announced by a screen reader, but that \"fix\" could end up making no sense when announced by other assistive technologies like a braille reader aria-labelledby\nThe aria-labelledby attribute overrides both the native label and the aria-label attribute",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13873,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\wai_aria.md",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "0e1d8e58d754cb6098a5a40c4cbe0996",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\wai_aria.md",
    "source_type": "git_repo",
    "title": "wai_aria",
    "content": "to change how a word is phonetically announced Certain words may not get announced correctly by a screen reader, and you may have a temptation to try and fix this You may end up fixing how a word is announced by a screen reader, but that \"fix\" could end up making no sense when announced by other assistive technologies like a braille reader aria-labelledby The aria-labelledby attribute overrides both the native label and the aria-label attributeWhen you use aria-labelledby, the accessible name of the target element is created by concatenating the text contents or alt attributes of the elements whose id are referenced The great thing about aria-labelledby is that not only can you pass in any number of id references, but you can also have an element reference itself Keep in mind that you can't pass in the same reference multiple times, because any subsequent references after the first will be ignored ```html\nShirts\nShop Now\n```\nThe HTML above would be announced by a screen reader as, \"Shirts, shop now, button\" This can make multiple \"shop now\" buttons on a page unique from one another and thus provide additional context, making the page more understandable Another great thing about aria-labelledby is that even if a labeling element is visually hidden, either by the hidden HTML attribute or with CSS, it will still modify the accessible name of the labeled element This can be useful if you want to label an element for users of assistive technologies, but you don't want that element's label (or labels) to be visible to sighted users Although it may work somewhat similarly to the native <label> element, aria-labelledby does not have the same event handling by default This is functionality you would have to add in yourself via JavaScript ```html\nName:\nName:\n```\naria-describedby\nThe aria-describedby attribute modifies the description property in the accessibility tree Similar to the aria-labelledby attribute, when you use this attribute, you pass in the id values of other elements as the aria-describedby value, and the elements whose id values are passed in can also be visually hidden ```html\nPassword:\nPassword must be at least 10 characters long ```\nWhen the <input> element receives focus, a screen reader would announce, \"Password, edit protected, password must be at least ten characters long \" This immediately notifies a screen reader user of any requirements for the password they want to choose any time the input receives focus",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13873,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\wai_aria.md",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "672a8334314bf6c23b66dece2102b4eb",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\wai_aria.md",
    "source_type": "git_repo",
    "title": "wai_aria",
    "content": "elements as the aria-describedby value, and the elements whose id values are passed in can also be visually hidden ```html Password: Password must be at least 10 characters long ``` When the <input> element receives focus, a screen reader would announce, \"Password, edit protected, password must be at least ten characters long \" This immediately notifies a screen reader user of any requirements for the password they want to choose any time the input receives focusHiding content from the accessibility tree\nSimilar to how you can visually hide elements with the hidden HTML attribute or the display and visibility CSS properties, you can use the aria-hidden attribute to hide certain elements, such as decorative images and icons, from the accessibility tree The difference with aria-hidden, however, is that the element will remain visible to sighted users This can be especially useful when you want to add an icon inside of another element For example, if we were to use Material Icons inside of a button:\n```html\nadd\nAdd Book\nadd\nAdd Book\n```\nWhile both of the above examples would look visually identical, the button in Example 1 would be announced by a screen reader as, \"Add add book, button\" The text content of the <span> and the text content of the button itself are concatenated as the accessible name of the button The button in Example 2, however, hides the <span> from the accessibility tree so its text content isn't added to the button's accessible name, meaning a screen reader would correctly announce \"Add book, button\" Be careful when using this attribute, though When you give an element aria-hidden='true', all children of that element will also become hidden to the accessibility tree Adding aria-hidden='false' to a child element won't have any effect if one of its parents still has aria-hidden='true', either You should also be careful not to give an element aria-hidden='true' if it is focusable Doing so would cause nothing to be announced when the element receives focus, which would confuse users that use a screen reader and navigate the page via a keyboard Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What purpose does WAI-ARIA serve What are the four things ARIA can't do What are the five rules of ARIA What is the accessibility tree",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13873,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\wai_aria.md",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "d586b5a5d282ef88f00621d87bd222e6",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\accessibility\\wai_aria.md",
    "source_type": "git_repo",
    "title": "wai_aria",
    "content": "reader and navigate the page via a keyboard Knowledge check The following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What purpose does WAI-ARIA serve What are the four things ARIA can't do What are the five rules of ARIA What is the accessibility treeWhat are the differences between the three ARIA labels What does the aria-hidden attribute do Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental An in-depth guide to ARIA roles goes over an ARIA attribute that alters the semantics of elements, which can allow you to create custom inputs, buttons, and more Just keep in mind rule number one of the ARIA rules ARIA live regions are another type of ARIA attribute that are incredibly useful for having dynamic updates made to a page announced by assistive technologies A word of warning if you decide to dive into this topic: the assertive live region may not work in the JAWS and NVDA screen readers, but the role=\"alert\" attribute, which has an implicit live region of assertive, should ARIA, Accessibility APIs and coding like you give a damn is a 30-minute video that covers some concepts introduced in the previous lesson, the importance of ARIA attributes, and an example of how to add functionality to a custom ARIA button Accessibility Fundamentals with Rob Dodson is another 30-minute video that covers some things mentioned in the previous lessons, but it also covers the accessibility tree, ARIA, and if you still need to be convinced, why using semantic HTML is important",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 13873,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\accessibility\\wai_aria.md",
      "source_type": "git_repo"
    },
    "token_count": 346,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "a79d0128bba8aef014fac2c0cc2b7202",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\animation\\keyframes.md",
    "source_type": "git_repo",
    "title": "ball {",
    "content": "Introduction\nNow let's explore CSS animations using keyframes This will expand upon your encounter with CSS transitions and delve into the differences between them Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson The differences between CSS transitions and CSS animations How to configure animation sub-properties How to sequence an animation using keyframes Animations vs transitions\nAnimations let you animate elements from one style configuration to another Does this sound familiar You wouldn't be wrong for thinking, \"Well, what's the point in learning animations if they are basically the same as transitions \", but animations greatly expand on some capabilities that transitions do not have A few of the differences include:\nTransitions were designed to animate an element from one state to another They can loop, but they weren't designed for that Animations, on the other hand, were designed with the purpose of explicitly enabling loops Transitions need a trigger, such as the use of pseudo-classes like :hover or :focus, or by adding/removing a class via JavaScript Animations, on the other hand, do not need such a trigger Once you have your elements in place and CSS defined, an animation will start running immediately if that's what you told it to do Transitions are not as flexible as using animations When you define a transition, imagine you are sending that element on a journey in a straight line from point A to point B Yes, the transition-timing-function can add some variation to the timing of this change, but it doesn't compare to the amount of flexibility added by using animations All in all, both animations and transitions have their use, so in addition to considering the above differences you should also use your best judgment For example, if you need to change the opacity of an element when it is active then an animation would be overkill, but if you need to carry out something more complicated, animations will provide you with the tools you need Animation properties\nLet's see an animation in action to see what we've been talking about See the Pen\nkeyframes 1 longhand by TheOdinProject (@TheOdinProjectExamples)\non CodePen Note how the animation is already running and how it keeps repeating itself We'll cover that @keyframes rule at the bottom of our example in a bit, so for now focus on the actual animation properties used in the example above:\n```css\nball {\n/ other CSS properties",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9594,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\animation\\keyframes.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "e15e7f10b98043f797fd162f68545615",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\animation\\keyframes.md",
    "source_type": "git_repo",
    "title": "ball {",
    "content": "you need Animation properties Let's see an animation in action to see what we've been talking about See the Pen keyframes 1 longhand by TheOdinProject (@TheOdinProjectExamples) on CodePen Note how the animation is already running and how it keeps repeating itself We'll cover that @keyframes rule at the bottom of our example in a bit, so for now focus on the actual animation properties used in the example above: ```css ball { / other CSS properties/\nanimation-duration: 2s;\nanimation-name: change-color;\nanimation-iteration-count: infinite;\nanimation-direction: alternate;\n}\n```\nThis is known as the configuration stage where we define our animation properties on the #ball element, and it is only the first half of defining an animation In our example, we have:\nAn animation-duration of two seconds This means that it will take two seconds for the #ball element to complete one animation cycle Defined the animation-name to be \"change-color\" which is essential for the @keyframes section coming up next This is just a custom name that is not a particular CSS value We could have called it \"pineapples\" if we so wished, but for our purposes \"change-color\" suits us well Set the animation-iteration-count to infinite, which means this animation will run forever You could set this to 1, 2, or as many iterations as you wish Set the animation-direction  to alternate This property decides if our animation should alternate direction on the completion of one cycle, or reset to the start point and repeat itself Here it means that the #ball will smoothly change back to its original color instead of \"jumping\" straight back to red Keyframes\nNow it's time to tackle the second half of our animation definition by exploring the @keyframes at-rule ```css\n@keyframes change-color {\nfrom {\nbackground-color: red;\n}\nto {\nbackground-color: green;\n}\n}\n```\nThe @keyframes at-rule references the 'change-color' name we defined earlier Then, we use the from and to properties to change the background-color of #ball from red to green It's important to know that keyframes use a percentage to indicate the times for an animation to take place and that the from and to statements are actually aliases for 0% and 100%, respectively",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9594,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\animation\\keyframes.md",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "9b4089a9decf30f98b966841165b243f",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\animation\\keyframes.md",
    "source_type": "git_repo",
    "title": "ball {",
    "content": "change-color { from { background-color: red; } to { background-color: green; } } ``` The @keyframes at-rule references the 'change-color' name we defined earlier Then, we use the from and to properties to change the background-color of #ball from red to green It's important to know that keyframes use a percentage to indicate the times for an animation to take place and that the from and to statements are actually aliases for 0% and 100%, respectivelyYou can read from/0% as meaning 'at zero seconds' and to/100% as 'at 2 seconds' according to our animation-duration in our example from above There is no hard and fast rule on whether or not you should use from/to or 0%/100% Just pick a style and be consistent with it The @keyframes at-rule also defines one animation cycle So if we were to change our animation-iteration-count from earlier to 2 then the ball would change its background-color from red to green, then from green to red, and then the animation would stop Be careful not to think of one iteration as a complete loop, but rather a single cycle from beginning to end (or end to beginning when alternating the direction) Now it's time to introduce the shorthand notation for our animation properties and glimpse a little into the added flexibility of the keyframe notation Check out the live example below then have a look at the notation See the Pen\nkeyframes 2 shorthand by TheOdinProject (@TheOdinProjectExamples)\non CodePen ```css\nball {\n/ other CSS properties /\nbackground-color: red;\nanimation: 2s change-color infinite alternate;\n}\n@keyframes change-color {\nfrom {\nbackground-color: red;\n}\n50% {\ntransform: scale(2);\nbackground-color: blue;\n}\nto {\nbackground-color: green;\n}\n}\n```\nHere we added another keyframe for when the animation-duration is at 50%, or 1 second This means as well as the background-color changing to an additional value, we have also specified that the ball doubles in size Just be aware that additional keyframes are always defined in percentages Only the 0%/100% values may use the from/to alias Hopefully, this gives you a glimpse into the power the @keyframes syntax provides to you when it comes to controlling the animation of an element's properties",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9594,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\animation\\keyframes.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "025968ec7becbd6a508ce21016dbcf3d",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\animation\\keyframes.md",
    "source_type": "git_repo",
    "title": "ball {",
    "content": "the animation-duration is at 50%, or 1 second This means as well as the background-color changing to an additional value, we have also specified that the ball doubles in size Just be aware that additional keyframes are always defined in percentages Only the 0%/100% values may use the from/to alias Hopefully, this gives you a glimpse into the power the @keyframes syntax provides to you when it comes to controlling the animation of an element's propertiesYou can add keyframes whenever you want, control whatever CSS-animatable properties you want, and have the control to add some real creative flair to your website elements Assignment\n1 Code along with this [MDN article for using CSS animations](https://developer mozilla org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations) 1 Read the [@keyframes reference](https://developer mozilla org/en-US/docs/Web/CSS/@keyframes) to gain a deeper understanding of how keyframes are implemented 1 Read this [interactive guide to keyframes](https://www joshwcomeau com/animation/keyframe-animations/) 1 Now let's make some cool animations Complete the exercises in our [CSS exercises repository's `advanced-html-css/animation` directory](https://github com/TheOdinProject/css-exercises/tree/main/advanced-html-css/animation) (remember that the instructions are in the README) in the order:\n- `01-button-hover`\n- `02-pop-up`\n- `03-dropdown-menu`\nKnowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What are the long and short-hand notations for CSS animations How do you add keyframes to an animation When would you use an animation over a transition (and vice versa) Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental Video from DevTips on CSS Animations and Keyframes",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 9594,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\animation\\keyframes.md",
      "source_type": "git_repo"
    },
    "token_count": 418,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "ed7c903298e81565fb90e88a7914dcff",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\animation\\transforms.md",
    "source_type": "git_repo",
    "title": "transforms",
    "content": "Introduction\nThe transform property is a powerful tool to change the appearance of elements without affecting the natural document flow You have likely seen it in action on many of your favorite websites Transforms are very commonly used for animated effects While we are sure you'll like to create sleek animations of your own, we first need to understand how transforms work Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson How to use 2D transforms How to use 3D transforms How to chain multiple transforms The benefits of using the transform property Basics of transforms\nThe transform property takes in one or more CSS transform functions as its values, with those functions taking in their own value, usually an angle or a number Almost all elements can have the transform property applied to them, with the exceptions being <col>, <colgroup>, and non-replaced inline elements \"Non-replaced\" refers to elements whose content is contained within the HTML document (<span>, <b>, and <em>, for example), as opposed to a \"replaced\" element's content being contained outside of the document, the element itself being \"replaced\" by the external content (<a>, <iframe>, and <img>, for example) You do not need to memorize every element that is non-replaced, but rather keep this knowledge in mind should you try to apply the transform property to an element and aren't sure why it isn't working Two-dimensional transforms\nIn this section, we'll go through 2D transforms with the following transform functions: rotate, scale, skew, and translate Rotate\nThis is the transform function value to rotate an element on a 2D plane:\ncss element {\ntransform: rotate();\n}\nBelow is a CodePen that shows how the value affects the target element See the Pen\n2D Rotate | CSS Transform by TheOdinProject (@TheOdinProjectExamples)\non CodePen Scale\nThese are the transform function values to scale an element on a 2D plane:\ncss element {\ntransform: scaleX();\ntransform: scaleY();\ntransform: scale();\n}\nBelow is a CodePen that shows how each value affects the target element See the Pen\n2D Scale | CSS Transform by TheOdinProject (@TheOdinProjectExamples)\non CodePen Skew\nThese are the transform function values to skew an element on a 2D plane:\ncss",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15100,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\animation\\transforms.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "f66166be57f8604bfad6773bbe82685d",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\animation\\transforms.md",
    "source_type": "git_repo",
    "title": "transforms",
    "content": "Rotate | CSS Transform by TheOdinProject (@TheOdinProjectExamples) on CodePen Scale These are the transform function values to scale an element on a 2D plane: css element { transform: scaleX(); transform: scaleY(); transform: scale(); } Below is a CodePen that shows how each value affects the target element See the Pen 2D Scale | CSS Transform by TheOdinProject (@TheOdinProjectExamples) on CodePen Skew These are the transform function values to skew an element on a 2D plane: csselement {\ntransform: skewX();\ntransform: skewY();\ntransform: skew();\n}\nBelow is a CodePen that shows how each value affects the target element See the Pen\n2D Skew | CSS Transform by TheOdinProject (@TheOdinProjectExamples)\non CodePen Translate\nThese are the transform function values to translate an element on a 2D plane:\ncss element {\ntransform: translateX();\ntransform: translateY();\ntransform: translate();\n}\nBelow is a CodePen that shows how each value affects the target element See the Pen\n2D Translate | CSS Transform by TheOdinProject (@TheOdinProjectExamples)\non CodePen Chaining multiple transforms\nNow that you have a grasp of 2D transforms, we will learn how to chain them Chaining multiple transforms is done by adding more transform functions with a space between each one Take a look at the code below:\n```html\n```\n```css red-box, blue-box {\nposition: absolute;\nwidth: 100px;\nheight: 100px;\n} red-box {\nbackground: red;\ntransform: rotate(45deg) translate(200%);\n} blue-box {\nbackground: blue;\ntransform: translate(200%) rotate(45deg);\n}\n```\nThere are two boxes located at the same position We chained rotate and translate function values to both boxes, but in different orders Make a guess on what happens to each box, then click the \"Result\" link in the Codepen below to see if you were right See the Pen\nChaining | CSS Transform by TheOdinProject (@TheOdinProjectExamples)\non CodePen If you guessed correctly, congratulations But this is a tricky concept MDN's transform docs state that \"composite transforms are effectively applied in order from right to left\" The blue box rotates 45 degrees on the spot, then translates on the X axis by 200%, moving it directly to the right",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15100,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\animation\\transforms.md",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "751918084d99ef89b555a14bfafc0e5a",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\animation\\transforms.md",
    "source_type": "git_repo",
    "title": "transforms",
    "content": "click the \"Result\" link in the Codepen below to see if you were right See the Pen Chaining | CSS Transform by TheOdinProject (@TheOdinProjectExamples) on CodePen If you guessed correctly, congratulations But this is a tricky concept MDN's transform docs state that \"composite transforms are effectively applied in order from right to left\" The blue box rotates 45 degrees on the spot, then translates on the X axis by 200%, moving it directly to the rightThe red box translates by 200% first, so moves to the right, but the transform origin is still where it used to be Therefore, it rotates 45 degrees around that original point, making the red box \"swing down\" to end up diagonally from where it started While you can generally chain multiple transforms in any order for various results, there is one exception: perspective This brings us nicely to the next section where perspective is involved Three-dimensional transforms\nThe rotate, scale, and translate transform functions aren't limited to just 2D planes They also work for 3D planes as well However, to perceive a 3D effect on some of these function values, perspective is required From here on, the examples get more complicated Feel free to play around with these properties, but be careful not to get too sidetracked with them Perspective\nThis is the transform function value to set the distance from the user to the z = 0 plane:\ncss element {\ntransform: perspective();\n}\nEssentially, by setting a perspective value, we are telling the object to render as if we were viewing it from a specific distance on the z-axis Unlike other transform function values, perspective must be declared first (leftmost) when there are multiple transform function values In the upcoming examples for rotate, scale, and translate, we will be able to see how it affects the target element Rotate specific axis\nThese are the additional transform function values to rotate an element in a 3D space:\ncss element {\ntransform: rotateX();\ntransform: rotateY();\ntransform: rotateZ();\ntransform: rotate3d();\n}\nBelow is a CodePen that shows how the first three values affects the target element See the Pen\n3D Rotate | CSS Transform by TheOdinProject (@TheOdinProjectExamples)\non CodePen Scale specific axis\nThese are the additional transform function values to scale an element in a 3D space:\ncss",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15100,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\animation\\transforms.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "c76bc1990b7433bc7320cd14c1444d50",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\animation\\transforms.md",
    "source_type": "git_repo",
    "title": "transforms",
    "content": "specific axis These are the additional transform function values to rotate an element in a 3D space: css element { transform: rotateX(); transform: rotateY(); transform: rotateZ(); transform: rotate3d(); } Below is a CodePen that shows how the first three values affects the target element See the Pen 3D Rotate | CSS Transform by TheOdinProject (@TheOdinProjectExamples) on CodePen Scale specific axis These are the additional transform function values to scale an element in a 3D space: csselement {\ntransform: scaleZ();\ntransform: scale3d();\n}\nSee MDN's 3D cube in action with scaleZ and scale3d Translate specific axis\nThese are the additional transform function values to translate an element in a 3D space:\ncss element {\ntransform: translateZ();\ntransform: translate3d();\n}\ntranslateZ doesn't do much without perspective Instead, perspective and translateZ work together to create the illusion of 3-dimensional distance from the rendered object, as shown in the example below See the Pen\nTranslateZ | CSS Transform by TheOdinProject (@TheOdinProjectExamples)\non CodePen Matrix\nWhile not strictly a 3D transform function, matrix is mentioned last in this lesson due to how uncommonly used it is These are the transform function values for it css element {\ntransform: matrix();\ntransform: matrix3d();\n}\nMatrix is a way of combining all transform functions into one It is seldom used due to its poor readability, and almost never written by hand Unless you have a very complex transformation to apply, you should use other transform function values instead It is enough for you to know that these functions exist and generally how they work However, it is not important for you to feel comfortable building with them Benefits of transforms\nIn order to understand why the transform property is great, you have to be aware of CSS triggers You can learn about it in The Pixel Pipeline section from Google's Web Fundamentals The key benefit of using transform is that it occurs during composition This makes it cheaper to use compared to many other CSS properties You can see what triggers are executed with each CSS property in this table of CSS triggers Another benefit of transform is that it can be hardware-accelerated via a device's GPU (you don't have to understand how a GPU works but it is good to be aware of the term and what it means)",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15100,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\animation\\transforms.md",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "c6040f21a62e6272d7a262ea0b94e0e1",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\animation\\transforms.md",
    "source_type": "git_repo",
    "title": "transforms",
    "content": "benefit of using transform is that it occurs during composition This makes it cheaper to use compared to many other CSS properties You can see what triggers are executed with each CSS property in this table of CSS triggers Another benefit of transform is that it can be hardware-accelerated via a device's GPU (you don't have to understand how a GPU works but it is good to be aware of the term and what it means)This benefit is more prominent when it comes to transitions and animations which you will learn about in the following lessons Assignment\n1 Take a look at this [MDN demonstration of `rotate3d`](https://developer mozilla org/en-US/docs/Web/CSS/transform-function/rotate3d()) then read more about the property in this [QHMIT article on `rotate3d`](https://www qhmit com/css/functions/css_rotate3d_function cfm) 1 Learn more about [perspective in CSS](https://3dtransforms desandro com/perspective) 1 MDN has another great [demonstration using `translate3d`](https://developer mozilla org/en-US/docs/Web/CSS/transform-function/translate3d()) 1 Go through [The World of CSS Transforms](https://www joshwcomeau com/css/transforms/) by Josh Comeau Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What are the four main functions of the transform property Which function can be used to move an object through space on the X, Y, or Z axis Which function can be used to make an object larger or smaller on the X, Y, or Z axis What additional function is required for 3D transforms Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental Learn more about matrix by checking Quackit's article on the matrix function For a full reference, there’s always MDN's documentation on CSS transform functions For more on the 3D transform functions, W3Schools' page on CSS transforms is a good article demonstrating how they work",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 15100,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\animation\\transforms.md",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "86967a0c2fd59053d6aeefaad7fc786f",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\responsive_design\\introduction_to_responsive_design.md",
    "source_type": "git_repo",
    "title": "introduction_to_responsive_design",
    "content": "Introduction\n\"Responsive Design\" is an incredibly important concept when it comes to developing for the web In many ways, you are already equipped to create beautiful responsive websites In this section we're going to fill in the gaps Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson You'll learn what \"Responsive Design\" is and why it's important Terminology\n\"Responsive Design\" is the term used to describe creating websites that respond to changes in browser size in order to create something that works on any device Unfortunately, that phrase is a little bit misleading, due to the word 'design' These lessons are not going to focus much on the actual design of responsive websites, but the techniques you can use to implement responsiveness on websites The word 'design' refers to making decisions about what kinds of things look nice, crafting a user experience, and deciding exactly what a project should look like There might be some tidbits about that sprinkled throughout these lessons, but it is not the primary focus However, since this phrase has been pretty much universally adopted, it's the phrase we'll use here So what is it Since the release of the first iPhone in 2007, it has become a requirement that your web projects function correctly on everything from normal desktop monitors to tiny phone screens As you have likely discovered, this kind of responsiveness doesn't often happen automatically, especially once your projects get more complex than simple text on a page (your first HTML-only recipe project probably worked just fine on a phone, aside from the images getting cut off) So, when it comes down to it, \"Responsive Web Design\" is a set of techniques you can use to make your sites work on any size screen There are ways to make your designs flexible enough that they work well on most screens, and there are ways to dramatically change the layout of your page at certain sizes You'll probably end up relying on both in most of your projects What screens sizes should you support The smallest phones in common circulation rarely get smaller than 320px, so that should serve as a reliable lower end target If your website works as low as 320px width, then it should work on any small device The upper limit is a little harder to clarify These days super-duper-ultra-wide monitors aren't uncommon, so you should plan for the possibility that your site could be viewed on some ridiculously wide monitor",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3478,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\responsive_design\\introduction_to_responsive_design.md",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ac59499421236d8d6828f6d69b136f70",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\responsive_design\\introduction_to_responsive_design.md",
    "source_type": "git_repo",
    "title": "introduction_to_responsive_design",
    "content": "screens sizes should you support The smallest phones in common circulation rarely get smaller than 320px, so that should serve as a reliable lower end target If your website works as low as 320px width, then it should work on any small device The upper limit is a little harder to clarify These days super-duper-ultra-wide monitors aren't uncommon, so you should plan for the possibility that your site could be viewed on some ridiculously wide monitorOften, this is accomplished by setting up a max-width for all of your content and then centering that on the page With a setup like that your content will look fine even on super-wide resolutions Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What is Responsive Design Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental As usual, MDN has a great article on Responsive Design, but it goes quite a bit deeper than we need right now",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 3478,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\responsive_design\\introduction_to_responsive_design.md",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "031614f7adfa69b8adba6465f5943171",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\animation\\transitions.md",
    "source_type": "git_repo",
    "title": "transitions",
    "content": "Introduction\nIt's time to dive into the exciting world of CSS transitions and give your HTML elements some slick transformations Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson What a CSS transition is and when to use it Know what CSS properties are animatable and which ones are not How to make sure your transitions are smooth and performant Transitions\nCSS transitions let you animate a change from an element's initial state to an end state Think of an ordinary button element with a white background When your mouse is away from the button, it's just sitting there Boring Then when you hover your mouse cursor over the button the background color smoothly transitions from white to grey to black over a period of time This is a CSS transition Have a look at the Codepen below to see one in action See the Pen\nCSS Transition (longhand) by TheOdinProject (@TheOdinProjectExamples)\non CodePen When your mouse cursor is away from the button, the button is in the initial state When you hover over it, you introduce the end state - the hover state - causing the background color to transition smoothly from white to black This was achieved using the transition property, which is actually a shorthand property for transition-property, transition-duration, transition-timing-function and transition-delay css\nbutton {\n/* other CSS properties */\ntransition-property: background-color;\ntransition-duration: 1s;\ntransition-timing-function: ease-out;\ntransition-delay: 0 25s;\n}\ntransition-property - This determines what CSS property will be transitioned In this case it is the background-color transition-duration - This determines the duration that the transition will occur over In this case the color change will gradually happen over 1 second transition-timing-function - This lets us change the speed of the transition over the course of its duration Here it will ease-out, meaning the color change will be faster at the start than at the end of the transition transition-delay - This determines the delay at which the transition will start In this case, the color change starts a quarter of a second after the cursor rests on the button The shorthand property looks like this:\n```css\nbutton {\n/ other CSS properties /\nbackground-color: white;\ntransition: background-color 1s ease-out 0 25s;\n}\nbutton:hover {\nbackground-color: black;\n}\n```\nThe above transition will occur when the user hovers their mouse over the button as indicated by the :hover pseudo-class",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8282,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\animation\\transitions.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "5810cfe5151e23b3c0abc71f030575b6",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\animation\\transitions.md",
    "source_type": "git_repo",
    "title": "transitions",
    "content": "the delay at which the transition will start In this case, the color change starts a quarter of a second after the cursor rests on the button The shorthand property looks like this: ```css button { / other CSS properties / background-color: white; transition: background-color 1s ease-out 0 25s; } button:hover { background-color: black; } ``` The above transition will occur when the user hovers their mouse over the button as indicated by the :hover pseudo-classIn addition to :hover, or any of the other pseudo-classes, you can also trigger transitions by adding or removing classes with JavaScript For example, clicking a button could append the \"open\" class to a dropdown menu, which would trigger the opening transition Performance\nGenerally, keeping your CSS transitions performant will not be an issue However there are a couple of things you need to keep in mind The first is the \"stacking context\" Basically, a stacking context is formed when certain element scenarios are in place A relevant scenario for us would be to transition a transform property like below:\n```css\ndiv {\nwidth: 100px;\nheight: 100px;\ntransition: transform 2s 1s;\n}\ndiv:hover {\ntransform: rotate(180deg);\n}\n```\nThis has created a stacking context If we were to make a bunch more stacking contexts through various other means then, when it comes to rendering our initial transform, we would repaint not only our div element but also every element that is stacked on top of it in the stack context If left unchecked, this can cause your once buttery-smooth transition to become slow and rough The second thing to keep in mind is that you should keep your animations to only affecting opacity and transform if you want absolute best performance for animations on your web page Yes, our first example above only carried out a background-color change, but even that was an expensive operation in itself What's important is that you have a solid understanding of these concepts and can apply them when necessary because hey, if you need to turn a button into a rainbow when it's hovered over, you better be able to transition that rainbow Assignment\n1 Read the MDN article for [using CSS transitions](https://developer mozilla org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions), including the links in the [Defining transitions](https://developer mozilla",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8282,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\animation\\transitions.md",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "d9728dece5eea40aba08b20c4bd3ceae",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\animation\\transitions.md",
    "source_type": "git_repo",
    "title": "transitions",
    "content": "carried out a background-color change, but even that was an expensive operation in itself What's important is that you have a solid understanding of these concepts and can apply them when necessary because hey, if you need to turn a button into a rainbow when it's hovered over, you better be able to transition that rainbow Assignment 1 Read the MDN article for [using CSS transitions](https://developer mozilla org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions), including the links in the [Defining transitions](https://developer mozillaorg/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions#defining_transitions) section of the article Make sure you code along with any examples to become familiar with the syntax 1 Read this article about [stacking context](https://www joshwcomeau com/css/stacking-contexts/) 1 Learn some handy hints on [how to create performant CSS animations](https://web dev/animations-guide/) and check out the link it provides to [CSS Triggers](https://web archive org/web/20220727225220/https://csstriggers com/) to see how an animatable CSS property may affect others Look at the difference between the `background-color` and `transform` properties, for example 1 Read this [interactive guide to transitions](https://www joshwcomeau com/animation/css-transitions/) 1 Learn how to [catch and debug repaint issues](https://dzhavat github io/2021/02/18/debugging-layout-repaint-issues-triggered-by-css-transition html) Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge Are all CSS properties animatable What are the long and short-hand notations for transitions What is the stacking context Why do you need to keep an eye on repaints Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental For a deeper dive, check out this MDN article on the stacking context Up until now, you have only controlled the speed of your transitions with the help of keyword values like ease and ease-in However, CSS allows you to define your own timing functions with the help of timing functions like steps and cubic-bezier In specific, the cubic-bezier function is widely used",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8282,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\animation\\transitions.md",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "f33eb88af171a328ede53457fb01588b",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\animation\\transitions.md",
    "source_type": "git_repo",
    "title": "transitions",
    "content": "contains helpful links to related content It isn't required, so consider it supplemental For a deeper dive, check out this MDN article on the stacking context Up until now, you have only controlled the speed of your transitions with the help of keyword values like ease and ease-in However, CSS allows you to define your own timing functions with the help of timing functions like steps and cubic-bezier In specific, the cubic-bezier function is widely usedWhile the cubic-bezier function has a ton of mathematics, you do not need to delve deep into it apart from a creating a basic idea about its purpose You can play around with the CSS Cubic Bezier Generator to not only view how the cubic-bezier value works in an editable demo, but also to compare the different transition-timing-function values side by side",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8282,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\animation\\transitions.md",
      "source_type": "git_repo"
    },
    "token_count": 161,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "e786e6168fd2a454f692de1c8d198128",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\responsive_design\\media_queries.md",
    "source_type": "git_repo",
    "title": "media_queries",
    "content": "Introduction\nWith media queries, it is possible to completely restyle your web projects based on the size of a user's screen All of the lessons we've had so far have focused on making sure that the individual elements of your layout are as flexible as possible, but sometimes you will need to actually change some of your CSS values to accommodate a specific screen size These changes could be subtle shifts, such as adjusting margin, padding, or font-size to squeeze more content onto the screen, or they could be big obvious shifts in layout The nature of the exact changes will depend on your design, but the underlying technique is the same Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson You'll learn how to implement media queries to create fully responsive websites that look great on any device Media query syntax\nThe basic syntax for media queries is as follows:\n```css\nbody {\nmargin: 24px;\n}\n@media (max-width: 600px) {\nbody {\nmargin: 8px;\n}\n}\n```\nIn the above example, the margin is changed based on screen size Specifically, on all screens below or equal to 600px, the margin will be 8px, and on all screens above 600px, it will be 24px Really, that's all there is to it You can create some complex shifting layouts with just this knowledge alone You can create an unlimited number of media queries in a single document (Click the 'Edit on CodePen' button so you can resize your screen and see the changes):\nSee the Pen\nMedia Queries 1 | CSS Responsiveness by TheOdinProject (@TheOdinProjectExamples)\non CodePen You can also put any number of style definitions inside a media query:\nSee the Pen\nMedia Queries 2 | CSS Responsiveness by TheOdinProject (@TheOdinProjectExamples)\non CodePen Tips\nOther queries\nIn all of the above examples, our queries specify a max-width which will apply styles to any screen resolution below or equal to the specified value Said another way: a max-width query will apply on any screen up to the defined max-width It is also possible to define a min-width, which applies to any screen resolution above or equal to the given value max-height and min-height are also valid Limit media queries\nAs mentioned earlier, it is possible to create an unlimited number of media queries for every possible screen size",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7960,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\responsive_design\\media_queries.md",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "aba0ac2837c02d22206fdd5dc94596f4",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\responsive_design\\media_queries.md",
    "source_type": "git_repo",
    "title": "media_queries",
    "content": "to any screen resolution below or equal to the specified value Said another way: a max-width query will apply on any screen up to the defined max-width It is also possible to define a min-width, which applies to any screen resolution above or equal to the given value max-height and min-height are also valid Limit media queries As mentioned earlier, it is possible to create an unlimited number of media queries for every possible screen sizeHowever, it is best to minimize your media-query usage and rely more on the natural flexibility of your layouts Consider the second embedded example above (\"my cool site\") It only needs one media query to accommodate all desktop and mobile sizes, and there's no real need to create more Common breakpoints\n'Breakpoint' is the term for the screen size that triggers your media query You will find quite a lot of differing opinions on what exactly your breakpoints should be In general, it's helpful to think about the kinds of devices and screens that your users will be using Mobile phones are usually under 500px Tablets are often between 500px and 1000px Anything larger than 1000px is likely to be a normal browser screen Super wide screens are also becoming more common, which means that your site could end up being viewed on a screen wider than 2000px This does not mean that you should just start your project with media queries for each device Each project is going to have different requirements based on the design you're trying to achieve As mentioned above, try to limit your breakpoints to just what you need With many relatively basic layouts, you can get by with only one mobile-centric breakpoint somewhere around 500-600px More complex layouts might benefit from doing a full-sized layout above 1200px, an altered \"tablet\" layout between 600px and 1200px and mobile below 600px The real takeaway here is that it doesn't really matter exactly where you set your breakpoints, just do what makes sense for your project Zooming In most browsers, zooming in on a webpage will change the effective resolution of that page If your browser window is exactly 1000px wide, zooming in will cause the page to behave as if the screen is smaller, and will trigger media queries based on the simulated/zoomed screen resolution Zooming out can be handy for debugging issues that arise on screens that are larger than your own computer screen",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7960,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\responsive_design\\media_queries.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "dfecb8952955b43f090d96c2e05483fa",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\responsive_design\\media_queries.md",
    "source_type": "git_repo",
    "title": "media_queries",
    "content": "what makes sense for your project Zooming In most browsers, zooming in on a webpage will change the effective resolution of that page If your browser window is exactly 1000px wide, zooming in will cause the page to behave as if the screen is smaller, and will trigger media queries based on the simulated/zoomed screen resolution Zooming out can be handy for debugging issues that arise on screens that are larger than your own computer screenForgetting that you've zoomed in or out on a webpage can cause some real confusion when breakpoints refuse to trigger at the correct points Print styles\nYou'll often see media queries defined with the screen keyword like so:\ncss\n@media screen and (max-width: 480px) {\n}\nThis is not necessary, but it does point toward another very useful capability of media queries: changing styles based on the media type Everything we've covered so far has been specifically intended for viewing on some kind of screen so specifying screen is redundant However, it is possible to create a different set of styles for your website when it is sent to your printer or viewed in print-preview mode by using the print keyword css\n@media print {\n/* print styles go here */\n}\nThis is not something we're going to focus on in our curriculum, but it may be something you want to consider taking advantage of in some cases It's fairly common to change some colors (i e make things black/white), and add display: none to hide elements that are useless in a printed environment (buttons, nav links, etc) Assignment\n1 Look through [Using media queries](https://developer mozilla org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries) on MDN There are a few additional things you can do with media queries that might be worth knowing about, though their usage is much less common Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge How do you define a media query to create a mobile layout for your site What is the difference between max-width and min-width in a media query definition Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental This Media Query Tutorial on FreeCodeCamp covers the same items we've touched on here",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7960,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\responsive_design\\media_queries.md",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "9a172140aa9f79830bab5f905bdf8f76",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\responsive_design\\natural_responsiveness.md",
    "source_type": "git_repo",
    "title": "natural_responsiveness",
    "content": "Introduction\nThe first step to making responsive websites is using techniques that are naturally flexible In a later lesson you'll learn how to completely rearrange items on a page based on screen size, but in most cases, it's preferable to rely on tools like flexbox and grid to make your pages work on a wide range of screens first Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson You'll learn a few tips for keeping your sites naturally responsive Not everything needs CSS\nPlain HTML, with no CSS is responsive Visit this HTML-only page with no CSS and shrink your browser down to the size of a phone It works perfectly You could read that site on an apple watch It's not realistic for every website you create to be as basic as plain text on a page, but it is important to keep in mind that most of the elements you're using to build your project are responsive until you change that with CSS If you approach your project with this mindset and do your best to maintain that natural responsiveness, you might find that there isn't that much extra you need to do to make your sites properly responsive The rest of this lesson is a list of tips you can use to maintain natural responsiveness The viewport meta tag\nWhen mobile phones first started getting web browsers, most websites were not optimized for such small screen resolutions To get around this, most phone browsers simulated a larger screen and displayed a zoomed-out version of the page These days, however, we almost never want that behavior so we have to specify that we want our websites to be viewed at the actual non-zoomed screen resolution For this reason, you should add this snippet into the <head> of your HTML file in just about every project you work on html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\nIt sets the initial width of the webpage to the size of the actual screen you're viewing it on, and telling it not to zoom in or out Easy You have most likely already been using this tag if you've been using Emmet to generate HTML boilerplate for you ( + ENTER)\nAvoid fixed width and height\nThe number one enemy of flexibility is a fixed width on an element If you put width: 600px on anything, then it will never be able to shrink below that width, which ruins your chances of getting that thing to fit on most phone screens",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8329,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\responsive_design\\natural_responsiveness.md",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "36bae737bb29ed114490ddc0401728f7",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\responsive_design\\natural_responsiveness.md",
    "source_type": "git_repo",
    "title": "natural_responsiveness",
    "content": "or out Easy You have most likely already been using this tag if you've been using Emmet to generate HTML boilerplate for you ( + ENTER) Avoid fixed width and height The number one enemy of flexibility is a fixed width on an element If you put width: 600px on anything, then it will never be able to shrink below that width, which ruins your chances of getting that thing to fit on most phone screensLikewise, sticking a fixed height on an element can cause issues if the contents of that element run out of room Obviously the context will determine what works in a given situation, but an easy fix in many cases is replacing width or height with max-width or min-height (min-width and max-height are also valid and may be useful depending on the context) In the following example, notice how the fixed width causes our div to overflow the screen Change it to max-width and watch it shrink down to fit the preview screen Click 'Fork on CodePen', then 'Save', and navigate to the 'Open Live View in a New Window' icon at the bottom to see it in full window size Try changing the size of the window to see how max-width works When a max-width is defined, the element will not exceed that width but will shrink if the screen is too small to accommodate it See the Pen\nmax-width | CSS Responsiveness by TheOdinProject (@TheOdinProjectExamples)\non CodePen This example shown below demonstrates the problem with static heights On a full-sized screen the text would fit inside the pink box just fine, but here on this cramped embed, it overflows What we want here is for the div to be 300px in most cases, but to grow instead of causing an overflow when the text gets cramped In this case changing height: 300px to min-height: 300px will fix the issue See the Pen\nheight | CSS Responsiveness by TheOdinProject (@TheOdinProjectExamples)\non CodePen Avoid heights altogether\nIn most cases, you should avoid setting a height altogether There are some exceptions to this rule (headers and footers perhaps) but you should prefer using margin and padding to increase space around your content Using margin and padding will keep your elements flexible no matter what the content inside does When fixed widths are appropriate\nThere are cases when a fixed width is appropriate It's hard to make a universal rule, but, in general, the smaller your widths, the more acceptable it is to make them fixed",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8329,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\responsive_design\\natural_responsiveness.md",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "4177d29e501bf975e5935b1c8479a573",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\responsive_design\\natural_responsiveness.md",
    "source_type": "git_repo",
    "title": "natural_responsiveness",
    "content": "some exceptions to this rule (headers and footers perhaps) but you should prefer using margin and padding to increase space around your content Using margin and padding will keep your elements flexible no matter what the content inside does When fixed widths are appropriate There are cases when a fixed width is appropriate It's hard to make a universal rule, but, in general, the smaller your widths, the more acceptable it is to make them fixedFor example, a 32px icon on your page isn't going to benefit from using max-width because you probably don't want it to shrink Likewise, a 250px sidebar probably needs to always be 250px As with anything, you need to consider your options and pick what seems to be the most appropriate Use flex and grid\nHere's a statement so obvious that it sounds like a joke: flexbox was created to enable the creation of flexible layouts Using flex and grid doesn't necessarily guarantee perfect responsiveness, but they are really helpful tools You've already learned about the relevant properties here, but things like flex-wrap and grid's minmax, auto-fill and similar properties can make some impressively responsive layouts without much extra work Assignment\n1 Read [\"Using the viewport meta tag\"](https://developer mozilla org/en-US/docs/Web/HTML/Viewport_meta_tag) on MDN to get a little more background and detail about the viewport meta tag and the nature of screen resolutions 1 [Using Percentages in CSS](https://codyloyd com/2021/percentages/) is an article that tackles another common pitfall Don't focus too much on the `@media` parts, as we will cover media queries very soon 1 [minmax() in auto-fill repeating tracks](https://gridbyexample com/examples/example28/) demonstrates a really nice responsive grid feature Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What is natural responsiveness Why should you avoid fixed width Why should you avoid fixed height In what situations might it be appropriate to use a fixed height or width Why should you avoid percentages Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental This 21-day free course on Conquering Responsive Layouts by Kevin Powell provides great practice to work on your responsive layout chops",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 8329,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\responsive_design\\natural_responsiveness.md",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "afef66092e9a674ffff9b6c666197c18",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\responsive_design\\project_homepage.md",
    "source_type": "git_repo",
    "title": "project_homepage",
    "content": "Introduction\nFor your final HTML/CSS project, you're going to create a responsive homepage, something you might find on a portfolio site of sorts When you get to the point that you want to start sharing your work, or applying for jobs, it's useful to have a well-designed portfolio to share While we won't be making one yet, you'll want practice with these more advanced HTML and CSS concepts first, so take this as an opportunity to practice them Similarly to landing page and admin dashboard from previous projects, you are tasked to build a given design brief We're providing a full design in 3 different sizes, full desktop, tablet and mobile, and this is the first real project where you should take your time and make sure that it looks acceptable at any screen size Feel free to pick your own fonts and colors and use something other than a stock-photo for your header The main focus is on achieving the specified layouts and responsive behaviour rather than a complete portfolio Assignment\n#### Step 1: Set up and planning\n1 Set up your HTML and CSS files with some dummy content, just to make sure you have everything linked correctly 1 Download a full-resolution copy of the design files ([desktop design file](https://cdn statically io/gh/TheOdinProject/curriculum/fd6d4d2e2abbac4a3bd183bba6b6eaf1548a1458/advanced_html_css/responsive_design/project_personal_portfolio/imgs/portfolio png), [tablet design file](https://cdn statically io/gh/TheOdinProject/curriculum/1c8b5c739efd263e8cc48703988b18d6e3afe034/advanced_html_css/responsive-design/project_personal_portfolio/imgs/portfolio%20tablet png), [mobile design file](https://cdn statically io/gh/TheOdinProject/curriculum/1c8b5c739efd263e8cc48703988b18d6e3afe034/advanced_html_css/responsive-design/project_personal_portfolio/imgs/portfolio%20mobile png)), and get a general idea for how you're going to need to lay things out in your HTML document #### Step 2: Gather assets\n1 The portraits we've used in the design files are stock photos downloaded from [pexels com](https://www pexels com/) If you don't have a picture of yourself handy, feel free to go grab a placeholder for now 1",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4390,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\responsive_design\\project_homepage.md",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "234f43b87c1bf2b19bbb196b0f5bb872",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\responsive_design\\project_homepage.md",
    "source_type": "git_repo",
    "title": "project_homepage",
    "content": "statically io/gh/TheOdinProject/curriculum/fd6d4d2e2abbac4a3bd183bba6b6eaf1548a1458/advanced_html_css/responsive_design/project_personal_portfolio/imgs/portfolio png), [tablet design file](https://cdn statically io/gh/TheOdinProject/curriculum/1c8b5c739efd263e8cc48703988b18d6e3afe034/advanced_html_css/responsive-design/project_personal_portfolio/imgs/portfolio%20tablet png), [mobile design file](https://cdn statically io/gh/TheOdinProject/curriculum/1c8b5c739efd263e8cc48703988b18d6e3afe034/advanced_html_css/responsive-design/project_personal_portfolio/imgs/portfolio%20mobile png)), and get a general idea for how you're going to need to lay things out in your HTML document #### Step 2: Gather assets 1 The portraits we've used in the design files are stock photos downloaded from [pexels com](https://www pexels com/) If you don't have a picture of yourself handy, feel free to go grab a placeholder for now 1Select your fonts We're using `Playfair Display` and `Roboto` in the design, both available with Google fonts 1 In the design we have icon-links for GitHub, LinkedIn and X (formerly known as Twitter) Obviously feel free to add whatever links you want to your own site We got those icons from [https://devicon dev/](https://devicon dev/) 1 Other icons (phone, email and external link) were downloaded as SVGs from [https://materialdesignicons com/](https://materialdesignicons com/) #### Step 3: Some tips 1 As you might expect, you can organize your work on this project however you please We've given you many tips over the past several lessons, and you are likely already comfortable starting from a blank page 1 If you like being told what to do: The author of this lesson feels most comfortable starting out with the larger sections of the layout, and then working from the top of the page to the bottom In other words, get the various sections in more or less the right place (header, projects, contact etc",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4390,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\responsive_design\\project_homepage.md",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "7798402fa34b094737c414ee246ac7c4",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\responsive_design\\project_homepage.md",
    "source_type": "git_repo",
    "title": "project_homepage",
    "content": "given you many tips over the past several lessons, and you are likely already comfortable starting from a blank page 1 If you like being told what to do: The author of this lesson feels most comfortable starting out with the larger sections of the layout, and then working from the top of the page to the bottom In other words, get the various sections in more or less the right place (header, projects, contact etc) while ignoring a lot of specific style and content details, then go back through from the top-to-bottom filling-in, styling and cleaning up everything 1 It doesn't matter when or how you accomplish the responsiveness of this project There are people who will tell you that you should always start with the mobile experience and then use media-queries to tell your layout how to expand The 'mobile-first' crew *does* have some good points (Google it ) but in the end, how you accomplish it doesn't matter as long as it works Good luck 1 When you're done, don't forget to push it to GitHub, and use GitHub Pages to publish it to the world You should be proud of what you've accomplished here #### Step 4: Give your feedback\n1 Before you move on, we would love it if you could [send us your feedback on the Advanced HTML and CSS course](https://docs google com/forms/d/e/1FAIpQLSdVvT-2TiczhXP9qGfr28Aq6w6wzct0ypDqcpztaocA9bypXw/viewform usp=sf_link) Getting user (you) feedback is important so we can continue to improve the curriculum and get an idea of your experience",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 4390,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\responsive_design\\project_homepage.md",
      "source_type": "git_repo"
    },
    "token_count": 347,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "fd5c6b5954bfe2bd176316080085ff57",
    "source_file": "corpus\\git_repos\\odin-project\\.github\\ISSUE_TEMPLATE\\broken_link.yaml",
    "source_type": "git_repo",
    "title": "broken_link",
    "content": "name: ⛓️‍💥 Broken Link\ndescription: Point out a broken or dead link in our curriculum\ntitle: '<Course>: <Short description of the broken link>'\nlabels: [\"Status: Needs Triage\"]\nassignees:\n  - nil\nbody:\n  - type: markdown\n    attributes:\n      value: |\n        Before opening a suggestion for a broken link, please check the link again in 3-24 hours. More often than not, the website is down temporarily.\n\nIf the website is still down, ask other people in our Discord community to confirm that the link is also broken for them.",
    "metadata": {
      "file_extension": ".yaml",
      "file_type": "yaml",
      "file_size": 2856,
      "relative_path": "git_repos\\odin-project\\.github\\ISSUE_TEMPLATE\\broken_link.yaml",
      "source_type": "git_repo"
    },
    "token_count": 128,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "96714c00f9e89d36ff3e9127cd2ab3ca",
    "source_file": "corpus\\git_repos\\odin-project\\.github\\ISSUE_TEMPLATE\\broken_link.yaml",
    "source_type": "git_repo",
    "title": "broken_link",
    "content": "or dead link in our curriculum title: '<Course>: <Short description of the broken link>' labels: [\"Status: Needs Triage\"] assignees: - nil body: - type: markdown attributes: value: | Before opening a suggestion for a broken link, please check the link again in 3-24 hours. More often than not, the website is down temporarily. If the website is still down, ask other people in our Discord community to confirm that the link is also broken for them.\n\n- type: checkboxes\n    id: contributing\n    attributes:\n      label: Checks\n      description: Please fill out the following checkboxes\n      options:\n        - label: I have confirmed that the link is still broken after 3-24 hours of my initial discovery.\n          required: true\n        - label: I have confirmed in the Discord community that others are having the same issue with this link.\n          required: false\n        - label: This is not a duplicate of an existing issue (please have a look through our [open issues list](https://github.com/TheOdinProject/curriculum/issues) to make sure)\n          required: true\n        - label: I have thoroughly read and understand [The Odin Project Contributing Guide](https://github.com/TheOdinProject/.github/blob/main/CONTRIBUTING.md)\n          required: true\n        - label: Would you like to work on this issue?\n          required: false\n  - type: textarea\n    id: suggested-changes\n    attributes:\n      label: Description of the broken link\n      description: Please describe where the link is in the lesson\n      placeholder: ex 'The link to the blog in the first assignment is broken.'\n    validations:\n      required: true\n  - type: dropdown\n    id: path\n    attributes:\n      label: Path\n      description: Which path does your suggestion affect?\n      multiple: true\n      options:\n        - Foundations\n        - Ruby / Rails\n        - Node / JS\n        - Other / NA\n    validations:\n      required: true\n  - type: input\n    id: lesson-link\n    attributes:\n      label: Lesson Url\n      description: A link to the relevant lesson or page\n      placeholder: ex. https://www.theodinproject.com/lessons/ruby-how-this-course-will-work\n    validations:\n      required: true",
    "metadata": {
      "file_extension": ".yaml",
      "file_type": "yaml",
      "file_size": 2856,
      "relative_path": "git_repos\\odin-project\\.github\\ISSUE_TEMPLATE\\broken_link.yaml",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "06ebbb38414ccb24807bb0f740469ecb",
    "source_file": "corpus\\git_repos\\odin-project\\.github\\ISSUE_TEMPLATE\\broken_link.yaml",
    "source_type": "git_repo",
    "title": "broken_link",
    "content": "lesson placeholder: ex 'The link to the blog in the first assignment is broken.' validations: required: true - type: dropdown id: path attributes: label: Path description: Which path does your suggestion affect? multiple: true options: - Foundations - Ruby / Rails - Node / JS - Other / NA validations: required: true - type: input id: lesson-link attributes: label: Lesson Url description: A link to the relevant lesson or page placeholder: ex. https://www.theodinproject.com/lessons/ruby-how-this-course-will-work validations: required: true\n\n- type: input\n    id: contact\n    attributes:\n      label: (Optional) Discord Name\n      description: Optionally provide your discord name to help coordinate changes there if necessary\n      placeholder: ex. odinite\n    validations:\n      required: false\n  - type: textarea\n    id: additional-comments\n    attributes:\n      label: (Optional) Additional Comments\n      description: \"Anything else you'd like to cover\"\n      placeholder: We ❤️ open source\n    validations:\n      required: false",
    "metadata": {
      "file_extension": ".yaml",
      "file_type": "yaml",
      "file_size": 2856,
      "relative_path": "git_repos\\odin-project\\.github\\ISSUE_TEMPLATE\\broken_link.yaml",
      "source_type": "git_repo"
    },
    "token_count": 225,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "971f9d517912ed5c50ddc60640f47a10",
    "source_file": "corpus\\git_repos\\odin-project\\.github\\ISSUE_TEMPLATE\\config.yml",
    "source_type": "git_repo",
    "title": "config",
    "content": "blank_issues_enabled: true\ncontact_links:\n  - name: 🖥️ Website Bugs or Feature Requests\n    url: https://github.com/TheOdinProject/theodinproject\n    about: \"This repository is for curriculum content. For changes to the site itself, check out Odin's web app repository\"\n  - name: 💡 Ideas, Content Requests and Questions\n    url: https://github.com/TheOdinProject/curriculum/discussions\n    about: \"Have an idea? Want to see content on a particular topic? Open a discussion here\"\n  - name: 💬 Join the Discord Community\n    url: https://discord.gg/fbFCkYabZB\n    about: \"Outside of GitHub, the Odin community lives on Discord. Join our server here\"",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 669,
      "relative_path": "git_repos\\odin-project\\.github\\ISSUE_TEMPLATE\\config.yml",
      "source_type": "git_repo"
    },
    "token_count": 164,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8ff40c1a5cefa93210746baf833ec194",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\responsive_design\\responsive_images.md",
    "source_type": "git_repo",
    "title": "responsive_images",
    "content": "Introduction\nImages require special care on responsive websites This lesson presents a few issues that arise when working with responsive images and the options you have when dealing with them Lesson overview\nThis section contains a general overview of topics that you will learn in this lesson You'll learn how to make your images behave properly when resizing them with CSS You'll learn how to serve up different images based on screen size The basics\nThe most basic problem you are going to face when working with responsive images is the aspect ratio or the relationship between width and height If you shrink the width of an image on smaller screens and do not manipulate the height, the image will appear distorted The solution to this issue is incredibly easy, and we've already mentioned it in an earlier lesson: don't define both a width and a height If an image is given a flexible width, and the height is set to auto, then it should retain its aspect ratio correctly background-size, background-position and object-fit\nWhat if you don't want your image to shrink (in both height and width) background-size and object-fit are two properties that can provide a little more flexibility (pun intended) with how aspect ratios are handled background-position and background-size are properties that work on elements with a background image, and do not work on normal img tags You'll see some examples and specifics in the reading assignment later, but you can get quite a lot of control over the display and placement of background images by working with these properties For example, background-position: center will make sure the image is always centered in its container, even if the container is too small to fit the whole image background-size: cover will resize the image so that it is always completely filling its container while cropping as little as possible Here's a little demo you can play with:\nSee the Pen\nbackground | CSS Responsiveness by TheOdinProject (@TheOdinProjectExamples)\non CodePen object-fit works similarly, but is meant for img tags With the object-fit property you can specify a width and height for your images and then tell an image how it is supposed to fit itself to those dimensions The default value for object-fit is fill, which stretches the image to fit the dimensions, but much like background-size you can also tell it to cover or contain the image Here's a demo of object-fit on an image Open this one up on CodePen and resize the browser to see how the image reacts",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7390,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\responsive_design\\responsive_images.md",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "d4506abb74c1b181ca034d556ed0d91f",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\responsive_design\\responsive_images.md",
    "source_type": "git_repo",
    "title": "responsive_images",
    "content": "a width and height for your images and then tell an image how it is supposed to fit itself to those dimensions The default value for object-fit is fill, which stretches the image to fit the dimensions, but much like background-size you can also tell it to cover or contain the image Here's a demo of object-fit on an image Open this one up on CodePen and resize the browser to see how the image reactsSee the Pen\nobject-fit by TheOdinProject (@TheOdinProjectExamples)\non CodePen Even more control It is also possible to literally use different images for different screen sizes This gives you the most control over exactly how your images are displayed at various resolutions For example, instead of just trusting object-fit to keep the subject of a photograph in a frame, you could present a cropped version of it on smaller screens There are two ways of achieving this, but the most flexible is using the <picture> tag, which you'll learn more about in the assignment Assignment\n1 First check out the docs for [background-size](https://developer mozilla org/en-US/docs/Web/CSS/background-size), [background-position](https://developer mozilla org/en-US/docs/Web/CSS/background-position), and [object-fit](https://developer mozilla org/en-US/docs/Web/CSS/object-fit) The demos on those pages should make their usage clear 1 MDN's [Responsive Images](https://developer mozilla org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images) is an introduction to serving up responsive images in HTML 1 CSS Tricks's [Guide to the Responsive Images Syntax in HTML](https://css-tricks com/a-guide-to-the-responsive-images-syntax-in-html/) is a great article that goes into more depth on how to actually implement responsive images Knowledge check\nThe following questions are an opportunity to reflect on key topics in this lesson If you can't answer a question, click on it to review the material, but keep in mind you are not expected to memorize or master this knowledge What is the main difference between object-fit and background-size How can you define a width and a height on an img without distorting it Why would you want to provide different images at different screen resolutions When would you want to use an img with a srcset vs a picture Additional resources\nThis section contains helpful links to related content It isn't required, so consider it supplemental Responsive Images 101 is a good series of articles if you need another source",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7390,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\responsive_design\\responsive_images.md",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "e7ba83c6fcc35736848e7778dda1c02d",
    "source_file": "corpus\\git_repos\\odin-project\\advanced_html_css\\responsive_design\\responsive_images.md",
    "source_type": "git_repo",
    "title": "responsive_images",
    "content": "between object-fit and background-size How can you define a width and a height on an img without distorting it Why would you want to provide different images at different screen resolutions When would you want to use an img with a srcset vs a picture Additional resources This section contains helpful links to related content It isn't required, so consider it supplemental Responsive Images 101 is a good series of articles if you need another sourceResponsive Images Done Right gives some more insight into the inner workings of the picture element and responsive images The anatomy of responsive images by Jake Archibald has some great visuals that can help to grasp the srcset and sizes properties of responsive images The Responsive Image Breakpoints Generator is a nice way to automate responsive images so you don't have to hand write them This article about Automating Art Direction With The Responsive Image Breakpoints Generator explains how the responsive image breakpoints generator works",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 7390,
      "relative_path": "git_repos\\odin-project\\advanced_html_css\\responsive_design\\responsive_images.md",
      "source_type": "git_repo"
    },
    "token_count": 175,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "7730feff6ce85c79c4977f0cb8728e65",
    "source_file": "corpus\\git_repos\\odin-project\\.github\\ISSUE_TEMPLATE\\suggestion.yaml",
    "source_type": "git_repo",
    "title": "suggestion",
    "content": "name: 📝 Suggest an Improvement to Curriculum Content\ndescription: Suggest a resource or make a specific suggestion\ntitle: '<Course>: <Short description of your suggestion>'\nlabels: [\"Status: Needs Triage\"]\nassignees:\n  - nil\nbody:\n  - type: markdown\n    attributes:\n      value: |\n        Thanks for taking the time to make a suggestion! Please fill out these fields so your issue can be reviewed - giving the right amount of detail makes it much easier for maintainers to process. If you have any questions or are unsure about anything, don't be afraid to ask The maintainers are here to help - type: checkboxes\n    id: contributing\n    attributes:\n      label: Checks\n      description: Please fill out the following checkboxes\n      options:\n        - label: This is not a duplicate of an existing issue (please have a look through our [open issues list](https://github com/TheOdinProject/curriculum/issues) to make sure)\n          required: true\n        - label: I have thoroughly read and understand [The Odin Project Contributing Guide](https://github com/TheOdinProject/ github/blob/main/CONTRIBUTING md)\n          required: true\n        - label: Would you like to work on this issue required: false\n  - type: textarea\n    id: suggested-changes\n    attributes:\n      label: Describe your suggestion\n      description: A description of your suggestion You can provide screenshots or additional context if relevant\n      placeholder: ex 'I found a great resource that shows different ways that dev tools can be useful I think it would be a great addition to the Developer Tools lesson validations:\n      required: true\n  - type: dropdown\n    id: path\n    attributes:\n      label: Path\n      description: Which path does your suggestion affect multiple: true\n      options:\n        - Foundations\n        - Ruby / Rails\n        - Node / JS\n        - Other / NA\n    validations:\n      required: true\n  - type: input\n    id: lesson-link\n    attributes:\n      label: Lesson Url\n      description: A link to the relevant lesson, or the content that needs to be fixed If not applicable, describe where to look for your suggestion\n      placeholder: ex https://www theodinproject",
    "metadata": {
      "file_extension": ".yaml",
      "file_type": "yaml",
      "file_size": 2873,
      "relative_path": "git_repos\\odin-project\\.github\\ISSUE_TEMPLATE\\suggestion.yaml",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "cf7112279d3b48eff3b0554d60d1a241",
    "source_file": "corpus\\git_repos\\odin-project\\.github\\ISSUE_TEMPLATE\\suggestion.yaml",
    "source_type": "git_repo",
    "title": "suggestion",
    "content": "validations: required: true - type: dropdown id: path attributes: label: Path description: Which path does your suggestion affect multiple: true options: - Foundations - Ruby / Rails - Node / JS - Other / NA validations: required: true - type: input id: lesson-link attributes: label: Lesson Url description: A link to the relevant lesson, or the content that needs to be fixed If not applicable, describe where to look for your suggestion placeholder: ex https://www theodinprojectcom/lessons/ruby-how-this-course-will-work\n    validations:\n      required: true\n \n  - type: input\n    id: contact\n    attributes:\n      label: (Optional) Discord Name\n      description: Optionally provide your discord name to help coordinate changes there if necessary\n      placeholder: ex odinite\n    validations:\n      required: false\n  - type: textarea\n    id: additional-comments\n    attributes:\n      label: (Optional) Additional Comments\n      description: \"Anything else you'd like to cover\"\n      placeholder: We ❤️ open source\n    validations:\n      required: false",
    "metadata": {
      "file_extension": ".yaml",
      "file_type": "yaml",
      "file_size": 2873,
      "relative_path": "git_repos\\odin-project\\.github\\ISSUE_TEMPLATE\\suggestion.yaml",
      "source_type": "git_repo"
    },
    "token_count": 228,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "14d2493a0f7367bad24c39a316b027dd",
    "source_file": "corpus\\git_repos\\odin-project\\.github\\workflows\\codespell.yml",
    "source_type": "git_repo",
    "title": "codespell",
    "content": "name: codespell\non: pull_request\npermissions:\n  contents: read\n\njobs:\n    codespell:\n        name: Check for spelling errors\n        runs-on: ubuntu-latest\n        steps:\n        - uses: actions/checkout@v4\n        - uses: codespell-project/actions-codespell@master\n          with:\n            check_filenames: true\n            check_hidden: true\n            skip: ./.git,*.png,*.csv,./archive,./legacy_submissions\n            ignore_words_file: './.codespellignore'",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 484,
      "relative_path": "git_repos\\odin-project\\.github\\workflows\\codespell.yml",
      "source_type": "git_repo"
    },
    "token_count": 114,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "76b2a7b3ba331894c292c007610391e6",
    "source_file": "corpus\\git_repos\\odin-project\\.github\\workflows\\labeler.yml",
    "source_type": "git_repo",
    "title": "labeler",
    "content": "name: \"Pull Request Labeler\"\non:\n  pull_request_target:\n    types: [opened]\n\njobs:\n  triage:\n    permissions:\n      contents: read\n      pull-requests: write\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/labeler@v4\n        with:\n          repo-token: \"${{ secrets.GITHUB_TOKEN }}\"",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 310,
      "relative_path": "git_repos\\odin-project\\.github\\workflows\\labeler.yml",
      "source_type": "git_repo"
    },
    "token_count": 79,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "82205728148e88373422a790cff9d964",
    "source_file": "corpus\\git_repos\\odin-project\\.github\\workflows\\stale.yml",
    "source_type": "git_repo",
    "title": "stale",
    "content": "# This workflow warns and then closes issues and PRs that have had no activity for a specified amount of time.\n#\n# You can adjust the behavior by modifying this file.\n# For more information, see:\n# https://github.com/actions/stale\n\nname: Label inactive issues\non:\n  schedule:\n    - cron: \"30 1 * * *\"\n\njobs:\n  stale:\n    runs-on: ubuntu-latest\n    permissions:\n      issues: write\n      pull-requests: write\n    steps:\n      - uses: actions/stale@v9\n        with:\n          stale-issue-label: \"Status: Stale\"\n          days-before-issue-stale: 30\n          days-before-issue-close: -1\n          stale-issue-message: \"This issue is stale because it has had no activity for the last 30 days.\"\n          close-issue-message: \"This issue was closed because it has been inactive for 14 days since being marked as stale.\"\n          days-before-pr-stale: -1\n          days-before-pr-close: -1\n          operations-per-run: 100\n          repo-token: ${{ secrets.GITHUB_TOKEN }}",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 999,
      "relative_path": "git_repos\\odin-project\\.github\\workflows\\stale.yml",
      "source_type": "git_repo"
    },
    "token_count": 235,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6e4bd96269891c0ca0abb01504d93089",
    "source_file": "corpus\\git_repos\\odin-project\\.github\\workflows\\markdownlint.yml",
    "source_type": "git_repo",
    "title": "markdownlint",
    "content": "name: MarkdownLint\non:\n  pull_request:\n    paths:\n      - '**.md'\n      - '!*'\n      - '!archive/**'\n      - '!templates/**'\n      - '!markdownlint/docs/**'\n      - '!.github/**'\n\njobs:\n  lesson_lint:\n    name: Lint lesson/project files\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - uses: tj-actions/changed-files@v41\n        id: changed-files\n        with:\n          files: |\n            **.md\n            !*\n            !archive/**\n            !templates/**\n            !markdownlint/docs/**\n            !.github/**\n          separator: ','\n      - uses: DavidAnson/markdownlint-cli2-action@v14\n        if: steps.changed-files.outputs.all_changed_files\n        with:\n          globs: ${{ steps.changed-files.outputs.all_changed_files }}\n          separator: ','",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 831,
      "relative_path": "git_repos\\odin-project\\.github\\workflows\\markdownlint.yml",
      "source_type": "git_repo"
    },
    "token_count": 197,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0bbfe12455fb05449db1f320ef40bbb7",
    "source_file": "corpus\\git_repos\\odin-project\\.github\\ISSUE_TEMPLATE\\archive\\bug_report.md",
    "source_type": "git_repo",
    "title": "bug_report",
    "content": "name: Bug Report\nabout: Create a report to help us improve something that is not working correctly\ntitle: \"Bug - :\"\nlabels: \"Status: Needs Review, Type: Bug\"\nassignees: \"\"\nComplete the following REQUIRED checkboxes:\n-   [ ] I have thoroughly read and understand The Odin Project Contributing Guide\n-   [ ] The title of this issue follows the Bug - location of bug: brief description of bug format, e.g. Bug - React section: Knowledge Checks don't link to resource\nThe following checkbox is OPTIONAL:\n[ ] I would like to be assigned this issue to work on it\n1. Description of the Bug:\n2. How To Reproduce:\n3. Expected Behavior:\n4. Desktop/Device:\nDevice:\nOS:\nBrowser:\nVersion:\n5. Additional Information:",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 2055,
      "relative_path": "git_repos\\odin-project\\.github\\ISSUE_TEMPLATE\\archive\\bug_report.md",
      "source_type": "git_repo"
    },
    "token_count": 165,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f652884c101965c37295551246b2b722",
    "source_file": "corpus\\git_repos\\odin-project\\.github\\ISSUE_TEMPLATE\\archive\\feature_request.md",
    "source_type": "git_repo",
    "title": "feature_request",
    "content": "name: Feature Request\nabout: Suggest a new feature or enhancement for this project\ntitle: \"\"\nlabels: \"Status: Needs Review\"\nassignees: \"\"\nComplete the following REQUIRED checkboxes:\n-   [ ] I have thoroughly read and understand The Odin Project Contributing Guide\n-   [ ] The title of this issue follows the location for request: brief description of request format, e.g. NodeJS course: Add lessons on XYZ\nThe following checkbox is OPTIONAL:\n[ ] I would like to be assigned this issue to work on it\n1. Description of the Feature Request:\n2. Acceptance Criteria:\n3. Additional Information:",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1809,
      "relative_path": "git_repos\\odin-project\\.github\\ISSUE_TEMPLATE\\archive\\feature_request.md",
      "source_type": "git_repo"
    },
    "token_count": 129,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "83f40449dcca26ee2b6d50a77832ecfc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\.devcontainer\\devcontainer.json",
    "source_type": "git_repo",
    "title": "devcontainer",
    "content": "{\n  \"name\": \"freeCodeCampDC\",\n  \"dockerComposeFile\": \"docker-compose.yml\",\n  \"service\": \"devcontainer\",\n  \"workspaceFolder\": \"/workspaces/${localWorkspaceFolderBasename}\",\n  // \"features\": {},\n  \"forwardPorts\": [3000, 8000]\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 226,
      "relative_path": "git_repos\\freeCodeCamp\\.devcontainer\\devcontainer.json",
      "source_type": "git_repo"
    },
    "token_count": 65,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "bbd10429679b8868d7782bb0249c45fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\.github\\FUNDING.yml",
    "source_type": "git_repo",
    "title": "FUNDING",
    "content": "github: freecodecamp\npatreon: freecodecamp\ncustom: [www.freecodecamp.org/donate]",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 81,
      "relative_path": "git_repos\\freeCodeCamp\\.github\\FUNDING.yml",
      "source_type": "git_repo"
    },
    "token_count": 28,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "63a101feceb7cb574054dfe8ab6ea046",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\.devcontainer\\docker-compose.yml",
    "source_type": "git_repo",
    "title": "docker-compose",
    "content": "services:\n  devcontainer:\n    depends_on:\n      - mongo-db\n      - mongo-setup\n    image: mcr.microsoft.com/devcontainers/typescript-node:22\n    volumes:\n      - ../..:/workspaces:cached\n    network_mode: service:mongo-db\n    command: sleep infinity\n\nmongo-db:\n    image: mongo\n    command: mongod --replSet rs0\n    restart: unless-stopped\n    volumes:\n      - mongodb-data:/data/db\n  mongo-setup:\n    image: mongo\n    depends_on:\n      - mongo-db\n    restart: on-failure\n    entrypoint: [\n        'bash',\n        '-c',\n        # This will try to initiate the replica set, until it succeeds twice (i.e. until the replica set is already initialized)\n        'mongosh --host mongo-db:27017 --eval ''try {rs.initiate();} catch (err) { if(err.codeName !== \"AlreadyInitialized\") throw err };'''\n      ]\n\nvolumes:\n  mongodb-data:",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 826,
      "relative_path": "git_repos\\freeCodeCamp\\.devcontainer\\docker-compose.yml",
      "source_type": "git_repo"
    },
    "token_count": 214,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a4e40ed054e390b974768e9a2e708397",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\.github\\PULL_REQUEST_TEMPLATE.md",
    "source_type": "git_repo",
    "title": "PULL_REQUEST_TEMPLATE",
    "content": "Checklist:\n[ ] I have read and followed the contribution guidelines.\n[ ] I have read and followed the how to open a pull request guide.\n[ ] My pull request targets the main branch of freeCodeCamp.\n[ ] I have tested these changes either locally on my machine, or Gitpod.\nCloses #XXXXX",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 736,
      "relative_path": "git_repos\\freeCodeCamp\\.github\\PULL_REQUEST_TEMPLATE.md",
      "source_type": "git_repo"
    },
    "token_count": 66,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "078110deded9037a2345fa0c75202d4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\.github\\labeler.yml",
    "source_type": "git_repo",
    "title": "labeler",
    "content": "'scope: curriculum':\n  - curriculum/challenges/**/*\n\n'platform: learn':\n  - client/**/*\n\n'platform: api':\n  - api/**/*\n\n'scope: tools/scripts':\n  - tools/**/*\n  - .github/**/*\n  - utils/**/*\n  - e2e/**/*\n\n'scope: i18n':\n  - client/i18n/**/*\n  - config/crowdin/**/*\n  - shared/config/i18n/**/*",
    "metadata": {
      "file_extension": ".yml",
      "file_type": "yaml",
      "file_size": 293,
      "relative_path": "git_repos\\freeCodeCamp\\.github\\labeler.yml",
      "source_type": "git_repo"
    },
    "token_count": 93,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a60397eb3705b37e702bb0b7d87c80a7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\jest.config.ts",
    "source_type": "git_repo",
    "title": "jest.config",
    "content": "import type { Config } from 'jest';\n\nconst config: Config = {\n  verbose: true,\n  testRegex: '\\\\.test\\\\.ts$',\n  transform: {\n    '^.+\\\\.ts$': ['ts-jest', { isolatedModules: true }]\n  }\n};\n\nexport default config;",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 211,
      "relative_path": "git_repos\\freeCodeCamp\\api\\jest.config.ts",
      "source_type": "git_repo"
    },
    "token_count": 61,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4e630de4ddccc7db7c2e8a6d3dc9b74a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\jest.utils.test.ts",
    "source_type": "git_repo",
    "title": "jest.utils.test",
    "content": "import { getCsrfToken, getCookies } from './jest.utils';\n\nconst fakeCookies = [\n  '_csrf=123; Path=/; HttpOnly; SameSite=Strict',\n  'csrf_token=abc-123; Path=/',\n  'sessionId=CV-abc.123; Path=/; Expires=Wed, 03 May 2023 16:29:53 GMT; HttpOnly'\n];\n\ndescribe('getCsrfToken', () => {\n  test('returns csrf token if there is one', () => {\n    expect(getCsrfToken(fakeCookies)).toEqual('abc-123');\n  });\n\ntest('returns undefined if there is no csrf token', () => {\n    expect(\n      getCsrfToken(['_csrf=123; Path=/; HttpOnly; SameSite=Strict'])\n    ).toBeUndefined();\n  });\n});\n\ndescribe('setCookiesToCookies', () => {\n  test('returns a string of cookies', () => {\n    expect(getCookies(fakeCookies)).toEqual(\n      '_csrf=123; csrf_token=abc-123; sessionId=CV-abc.123'\n    );\n  });\n  test('handles bare cookies', () => {\n    expect(getCookies(['_csrf=123'])).toEqual('_csrf=123');\n  });\n\ntest('throws an error if the cookies are malformed', () => {\n    expect(() => getCookies(['_csrf'])).toThrow();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1010,
      "relative_path": "git_repos\\freeCodeCamp\\api\\jest.utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 287,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "644c3e35cf7554acbfb50d54ebe5f375",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"author\": \"freeCodeCamp <team@freecodecamp org>\",\n  \"bugs\": {\n    \"url\": \"https://github com/freeCodeCamp/freeCodeCamp/issues\"\n  },\n  \"dependencies\": {\n    \"@aws-sdk/client-ses\": \"3 521 0\",\n    \"@fastify/accepts\": \"5 0 2\",\n    \"@fastify/cookie\": \"11 0 1\",\n    \"@fastify/csrf-protection\": \"7 1 0\",\n    \"@fastify/oauth2\": \"8 1 2\",\n    \"@fastify/swagger\": \"9 4 0\",\n    \"@fastify/swagger-ui\": \"5 2 0\",\n    \"@fastify/type-provider-typebox\": \"5 1 0\",\n    \"@growthbook/growthbook\": \"1 3 1\",\n    \"@prisma/client\": \"5 5 2\",\n    \"@sentry/node\": \"9 1 0\",\n    \"@sinclair/typebox\": \"^0 34 33\",\n    \"@types/pino\": \"^7 0 5\",\n    \"ajv\": \"8 12 0\",\n    \"ajv-formats\": \"2 1 1\",\n    \"date-fns\": \"4 1 0\",\n    \"date-fns-tz\": \"3 2 0\",\n    \"dotenv\": \"16 4 5\",\n    \"fast-uri\": \"2 3 0\",\n    \"fastify\": \"5 2 0\",\n    \"fastify-plugin\": \"5 0 1\",\n    \"joi\": \"17 12 2\",\n    \"jsonwebtoken\": \"9 0 2\",\n    \"lodash\": \"4 17 21\",\n    \"mongodb\": \"6 10 0\",\n    \"nanoid\": \"3\",\n    \"no-profanity\": \"1 5 1\",\n    \"nodemailer\": \"6 9 10\",\n    \"pino\": \"^9 6 0\",\n    \"pino-pretty\": \"10 2 3\",\n    \"query-string\": \"7 1 3\",\n    \"stripe\": \"16 0 0\",\n    \"validator\": \"13 11 0\"\n  },\n  \"description\": \"The freeCodeCamp org open-source codebase and curriculum\",\n  \"devDependencies\": {\n    \"@total-typescript/ts-reset\": \"0 5 1\",\n    \"@types/jsonwebtoken\": \"9 0 5\",\n    \"@types/nodemailer\": \"6 4 14\",\n    \"@types/supertest\": \"2 0 16\",\n    \"@types/validator\": \"13 11 2\",\n    \"dotenv-cli\": \"7",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 2716,
      "relative_path": "git_repos\\freeCodeCamp\\api\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 574,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "6c696c4ffc8b99d0f2c76e27ca97b5a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "2\", \"jsonwebtoken\": \"9 0 2\", \"lodash\": \"4 17 21\", \"mongodb\": \"6 10 0\", \"nanoid\": \"3\", \"no-profanity\": \"1 5 1\", \"nodemailer\": \"6 9 10\", \"pino\": \"^9 6 0\", \"pino-pretty\": \"10 2 3\", \"query-string\": \"7 1 3\", \"stripe\": \"16 0 0\", \"validator\": \"13 11 0\" }, \"description\": \"The freeCodeCamp org open-source codebase and curriculum\", \"devDependencies\": { \"@total-typescript/ts-reset\": \"0 5 1\", \"@types/jsonwebtoken\": \"9 0 5\", \"@types/nodemailer\": \"6 4 14\", \"@types/supertest\": \"2 0 16\", \"@types/validator\": \"13 11 2\", \"dotenv-cli\": \"73 0\",\n    \"jest\": \"29 7 0\",\n    \"msw\": \"^2 7 0\",\n    \"prisma\": \"5 5 2\",\n    \"supertest\": \"6 3 3\",\n    \"ts-jest\": \"29 1 2\",\n    \"tsx\": \"4 19 1\"\n  },\n  \"engines\": {\n    \"node\": \">=18\",\n    \"npm\": \">=8\"\n  },\n  \"homepage\": \"https://github com/freeCodeCamp/freeCodeCamp#readme\",\n  \"license\": \"BSD-3-Clause\",\n  \"main\": \"none\",\n  \"name\": \"@freecodecamp/api\",\n  \"private\": true,\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github com/freeCodeCamp/freeCodeCamp git\"\n  },\n  \"scripts\": {\n    \"build\": \"tsc -p tsconfig build json\",\n    \"clean\": \"rm -rf dist\",\n    \"develop\": \"tsx watch --clear-screen=false src/server ts\",\n    \"start\": \"FREECODECAMP_NODE_ENV=production node dist/server js\",\n    \"test\": \"jest --force-exit\",\n    \"test-with-logging\": \"FCC_ENABLE_TEST_LOGGING=true pnpm run test\",\n    \"prisma\": \"dotenv -e /",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 2716,
      "relative_path": "git_repos\\freeCodeCamp\\api\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "35b92c8732bb80f4eacf371bd9f9c3a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "2\", \"supertest\": \"6 3 3\", \"ts-jest\": \"29 1 2\", \"tsx\": \"4 19 1\" }, \"engines\": { \"node\": \">=18\", \"npm\": \">=8\" }, \"homepage\": \"https://github com/freeCodeCamp/freeCodeCamp#readme\", \"license\": \"BSD-3-Clause\", \"main\": \"none\", \"name\": \"@freecodecamp/api\", \"private\": true, \"repository\": { \"type\": \"git\", \"url\": \"git+https://github com/freeCodeCamp/freeCodeCamp git\" }, \"scripts\": { \"build\": \"tsc -p tsconfig build json\", \"clean\": \"rm -rf dist\", \"develop\": \"tsx watch --clear-screen=false src/server ts\", \"start\": \"FREECODECAMP_NODE_ENV=production node dist/server js\", \"test\": \"jest --force-exit\", \"test-with-logging\": \"FCC_ENABLE_TEST_LOGGING=true pnpm run test\", \"prisma\": \"dotenv -e /env prisma\",\n    \"postinstall\": \"prisma generate\",\n    \"exam-env:generate\": \"tsx tools/exam-environment/generate/index ts\",\n    \"exam-env:generate:deprecate\": \"tsx tools/exam-environment/generate/deprecate ts\",\n    \"exam-env:generate:insert\": \"tsx tools/exam-environment/generate/insert ts\",\n    \"exam-env:seed\": \"tsx tools/exam-environment/seed/index ts\",\n    \"exam-env:test\": \"tsx tools/exam-environment/test/index ts\"\n  },\n  \"version\": \"0 0 1\"\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 2716,
      "relative_path": "git_repos\\freeCodeCamp\\api\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 358,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "dde7a5a7eb8c2b341ef827cb5eec971c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\README.md",
    "source_type": "git_repo",
    "title": "Working on the new api",
    "content": "Working on the new api\nConnecting to local database\nThe api uses the ORM Prisma and it needs the MongoDB instance to be a replica set.\nAtlas\nIf you use MongoDB Atlas, the set is managed for you.\nLocal\nThe simplest way to run a replica set locally is to use the docker-compose file\nin /tools.\nbash\ncd tools\ndocker compose up -d\nThe new db will be empty, so you can run the seed script to populate it.\nbash\ncd ../.. # back to the root of the repo\npnpm seed\nTroubleshooting\nIf you have any issues connecting to the database (e.g. MongoServerError: not primary), try removing the volume and recreating the containers.\nbash\ncd tools\ndocker compose down -v\ndocker compose up -d\nLogin in development/testing\nDuring development and testing, the api exposes the endpoint GET auth/dev-callback. Calling this will log you in as the user with the email foo@bar.com by setting the session cookie for that user.\nGenerating Exams\nbash\npnpm run exam-env:generate <ENV_EXAM_ID> <NUMBER_OF_EXAMS_TO_GENERATE>",
    "metadata": {
      "file_extension": ".md",
      "file_type": "markdown",
      "file_size": 1060,
      "relative_path": "git_repos\\freeCodeCamp\\api\\README.md",
      "source_type": "git_repo"
    },
    "token_count": 239,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b42658024062cf574f9a74819a95392f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\tsconfig.build.json",
    "source_type": "git_repo",
    "title": "tsconfig.build",
    "content": "{\n  \"extends\": \"./tsconfig\",\n  \"compilerOptions\": {\n    \"outDir\": \"dist\",\n    \"rootDir\": \"../\",\n    \"noEmit\": false\n  },\n  \"include\": [\"src\"],\n  \"exclude\": [\"**/*.test.*\"]\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 174,
      "relative_path": "git_repos\\freeCodeCamp\\api\\tsconfig.build.json",
      "source_type": "git_repo"
    },
    "token_count": 58,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f7603c584eef38c8c5e8ef18d0bc6bf5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\tsconfig.json",
    "source_type": "git_repo",
    "title": "tsconfig",
    "content": "{\n  \"compilerOptions\": {\n    \"target\": \"es2022\",\n    \"module\": \"CommonJS\",\n    \"allowJs\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"esModuleInterop\": true,\n    \"resolveJsonModule\": true,\n    \"noEmit\": true,\n    \"noUncheckedIndexedAccess\": true\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 285,
      "relative_path": "git_repos\\freeCodeCamp\\api\\tsconfig.json",
      "source_type": "git_repo"
    },
    "token_count": 85,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "74a48a268b2cc365f1be51a481a3d601",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\.babelrc.js",
    "source_type": "git_repo",
    "title": ".babelrc",
    "content": "require('dotenv').config({ path: '../.env' });\nconst config = {\n  presets: [\n    [\n      '@babel/preset-env',\n      {\n        loose: true,\n        modules: false,\n        useBuiltIns: 'usage',\n        corejs: 2,\n        shippedProposals: true,\n        targets: {\n          browsers: ['>0.25%', 'not dead']\n        }\n      }\n    ],\n    [\n      '@babel/preset-react',\n      {\n        useBuiltIns: true,\n        pragma: 'React.createElement'\n      }\n    ],\n    '@babel/preset-typescript'\n  ],\n  plugins: [\n    'preval',\n    '@babel/plugin-syntax-dynamic-import',\n    'babel-plugin-macros',\n    [\n      '@babel/plugin-transform-runtime',\n      {\n        helpers: true,\n        regenerator: true\n      }\n    ],\n    [\n      'prismjs',\n      {\n        languages: [\n          'bash',\n          'clike',\n          'css',\n          'html',\n          'javascript',\n          'json',\n          'jsx',\n          'markup',\n          'mathml',\n          'pug',\n          'python',\n          'scss',\n          'sass',\n          'sql',\n          'svg',\n          'typescript',\n          'xml'\n        ],\n        theme: 'default',\n        css: true,\n        plugins: ['line-numbers']\n      }\n    ]\n  ]\n};\nmodule.exports = config;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1212,
      "relative_path": "git_repos\\freeCodeCamp\\client\\.babelrc.js",
      "source_type": "git_repo"
    },
    "token_count": 296,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e20b0839bd32d03fae4dac6621155bdd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\gatsby-browser.js",
    "source_type": "git_repo",
    "title": "gatsby-browser",
    "content": "import cookies from 'browser-cookies';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport { Provider } from 'react-redux';\nimport { Elements } from '@stripe/react-stripe-js';\n\nimport i18n from './i18n/config';\nimport { stripe } from './src/utils/stripe';\nimport AppMountNotifier from './src/components/app-mount-notifier';\nimport { createStore } from './src/redux/create-store';\nimport layoutSelector from './utils/gatsby/layout-selector';\nimport GrowthBookProvider from './src/components/growth-book/growth-book-wrapper';\n\nconst store = createStore();\n\nexport const wrapRootElement = ({ element }) => {\n  return (\n    <Provider store={store}>\n      <I18nextProvider i18n={i18n}>\n        <GrowthBookProvider>\n          <AppMountNotifier>\n            <Elements stripe={stripe}>{element}</Elements>\n          </AppMountNotifier>\n        </GrowthBookProvider>\n      </I18nextProvider>\n    </Provider>\n  );\n};\n\nwrapRootElement.propTypes = {\n  element: PropTypes.any\n};\n\nexport const wrapPageElement = layoutSelector;\n\nexport const disableCorePrefetching = () => true;\n\nexport const onClientEntry = () => {\n  // Letting the users' browsers expire the cookie seems to have caused issues\n  // for some users. Until we have time to investigate further, we should remove\n  // the cookie on every page load.\n  cookies.erase('csrf_token');\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1400,
      "relative_path": "git_repos\\freeCodeCamp\\client\\gatsby-browser.js",
      "source_type": "git_repo"
    },
    "token_count": 314,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "cb95db12edca9da698138ababfeeb620",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\jest.utils.ts",
    "source_type": "git_repo",
    "title": "jest.utils",
    "content": "import request from 'supertest';\n\nimport { build, buildOptions } from './src/app';\nimport { createUserInput } from './src/utils/create-user';\nimport { examJson } from './__mocks__/exam';\nimport { CSRF_COOKIE, CSRF_HEADER } from './src/plugins/csrf';\n\ntype FastifyTestInstance = Awaited<ReturnType<typeof build>>;\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var fastifyTestInstance: FastifyTestInstance;\n}\n\ntype Options = {\n  sendCSRFToken?: boolean;\n};\n\nconst requests = {\n  GET: (resource: string) => request(fastifyTestInstance?.server).get(resource),\n  POST: (resource: string) =>\n    request(fastifyTestInstance?.server).post(resource),\n  PUT: (resource: string) => request(fastifyTestInstance?.server).put(resource),\n  DELETE: (resource: string) =>\n    request(fastifyTestInstance?.server).delete(resource)\n};\n\nexport const getCsrfToken = (setCookies: string[]): string | undefined => {\n  const csrfSetCookie = setCookies.find(str => str.includes(CSRF_COOKIE));\n  const [csrfCookie] = csrfSetCookie?.split(';') ?? [];\n  const [_key, csrfToken] = csrfCookie?.split('=') ?? [];\n\nreturn csrfToken;\n};\n\nconst ORIGIN = 'https://www.freecodecamp.org';\n\nexport const getCookies = (setCookies: string[]): string => {\n  for (const cookie of setCookies) {\n    expect(cookie).toMatch(/.*=.*/);\n  }\n  return setCookies.map(cookie => cookie.split(';')[0]).join('; ');\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7787,
      "relative_path": "git_repos\\freeCodeCamp\\api\\jest.utils.ts",
      "source_type": "git_repo"
    },
    "token_count": 343,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "1aca9e3a6466aff9791e9d513baa5aa0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\jest.utils.ts",
    "source_type": "git_repo",
    "title": "jest.utils",
    "content": "POST: (resource: string) => request(fastifyTestInstance?.server).post(resource), PUT: (resource: string) => request(fastifyTestInstance?.server).put(resource), DELETE: (resource: string) => request(fastifyTestInstance?.server).delete(resource) }; export const getCsrfToken = (setCookies: string[]): string | undefined => { const csrfSetCookie = setCookies.find(str => str.includes(CSRF_COOKIE)); const [csrfCookie] = csrfSetCookie?.split(';') ?? []; const [_key, csrfToken] = csrfCookie?.split('=') ?? []; return csrfToken; }; const ORIGIN = 'https://www.freecodecamp.org'; export const getCookies = (setCookies: string[]): string => { for (const cookie of setCookies) { expect(cookie).toMatch(/.*=.*/); } return setCookies.map(cookie => cookie.split(';')[0]).join('; '); };\n\n/**\n * A wrapper around supertest that handles common setup for requests. Namely\n * setting the Origin header, cookies and CSRF token.\n *\n * @param resource - The URL of the resource to be requested\n * @param config - The configuration for the request\n * @param config.method - The HTTP method to be used\n * @param config.setCookies - The cookies to be set in the request\n * @param options - Additional options for the request\n * @param options.sendCSRFToken - Whether to send the CSRF token in the request (default: true)\n * @returns The request object\n */\nexport function superRequest(\n  resource: string,\n  config: {\n    method: 'GET' | 'POST' | 'PUT' | 'DELETE';\n    setCookies?: string[];\n  },\n  options?: Options\n): request.Test {\n  const { method, setCookies } = config;\n  const { sendCSRFToken = true } = options ?? {};\n\nconst req = requests[method](resource).set('Origin', ORIGIN);\n\nif (setCookies) {\n    void req.set('Cookie', getCookies(setCookies));\n  }\n\nconst csrfToken = (setCookies && getCsrfToken(setCookies)) ?? '';\n  if (sendCSRFToken) {\n    void req.set(CSRF_HEADER, csrfToken);\n  }\n  return req;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7787,
      "relative_path": "git_repos\\freeCodeCamp\\api\\jest.utils.ts",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "ff6ea6d5366c7647cd2a179a0bf2e620",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\jest.utils.ts",
    "source_type": "git_repo",
    "title": "jest.utils",
    "content": "* @returns The request object */ export function superRequest( resource: string, config: { method: 'GET' | 'POST' | 'PUT' | 'DELETE'; setCookies?: string[]; }, options?: Options ): request.Test { const { method, setCookies } = config; const { sendCSRFToken = true } = options ?? {}; const req = requests[method](resource).set('Origin', ORIGIN); if (setCookies) { void req.set('Cookie', getCookies(setCookies)); } const csrfToken = (setCookies && getCsrfToken(setCookies)) ?? ''; if (sendCSRFToken) { void req.set(CSRF_HEADER, csrfToken); } return req; }\n\n/**\n * Factory function for 'superRequest' allows for the creation of a concise\n * request function with the desired method and setCookies baked in.\n *\n * @param config\n * @param config.method - HTTP method\n * @param config.setCookies - Cookies to be set in the request\n * @returns A superRequest function with the desired method and setCookies\n */\nexport function createSuperRequest(config: {\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE';\n  setCookies?: string[];\n}): (resource: string, options?: Options) => request.Test {\n  return (resource, options) => superRequest(resource, config, options);\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7787,
      "relative_path": "git_repos\\freeCodeCamp\\api\\jest.utils.ts",
      "source_type": "git_repo"
    },
    "token_count": 286,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "bad30b371c909836388328a11965b133",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\jest.utils.ts",
    "source_type": "git_repo",
    "title": "jest.utils",
    "content": "a concise * request function with the desired method and setCookies baked in. * * @param config * @param config.method - HTTP method * @param config.setCookies - Cookies to be set in the request * @returns A superRequest function with the desired method and setCookies */ export function createSuperRequest(config: { method: 'GET' | 'POST' | 'PUT' | 'DELETE'; setCookies?: string[]; }): (resource: string, options?: Options) => request.Test { return (resource, options) => superRequest(resource, config, options); }\n\ntype IndexData = {\n  collection: string;\n  indexes: {\n    key: Record<string, 1>;\n    name: string;\n    expireAfterSeconds?: number;\n  }[];\n};\nconst indexData: IndexData[] = [\n  {\n    collection: 'AccessToken',\n    indexes: [\n      {\n        key: { userId: 1 },\n        name: 'userId_1'\n      }\n    ]\n  },\n  {\n    collection: 'Donation',\n    indexes: [\n      { key: { email: 1 }, name: 'email_1' },\n      { key: { userId: 1 }, name: 'userId_1' }\n    ]\n  },\n  {\n    collection: 'MsUsername',\n    indexes: [{ key: { userId: 1, id: 1 }, name: 'userId_1__id_1' }]\n  },\n  {\n    collection: 'Survey',\n    indexes: [{ key: { userId: 1 }, name: 'userId_1' }]\n  },\n  {\n    collection: 'UserToken',\n    indexes: [{ key: { userId: 1 }, name: 'userId_1' }]\n  },\n  {\n    collection: 'sessions',\n    indexes: [\n      {\n        key: { expires: 1 },\n        name: 'expires_1',\n        expireAfterSeconds: 0\n      }\n    ]\n  },\n  {\n    collection: 'user',\n    indexes: [\n      {\n        key: { email: 1, sendQuincyEmail: 1 },\n        name: 'mailing-list-pull'\n      },\n      { key: { email: 1 }, name: 'email_1' },\n      { key: { isDonating: 1 }, name: 'isDonating_1' },\n      { key: { username: 1, id: 1 }, name: 'username_1__id_1' }\n    ]\n  }\n];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7787,
      "relative_path": "git_repos\\freeCodeCamp\\api\\jest.utils.ts",
      "source_type": "git_repo"
    },
    "token_count": 517,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "cf319462fcdb7d8165a3898c4193d598",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\jest.utils.ts",
    "source_type": "git_repo",
    "title": "jest.utils",
    "content": "[{ key: { userId: 1 }, name: 'userId_1' }] }, { collection: 'sessions', indexes: [ { key: { expires: 1 }, name: 'expires_1', expireAfterSeconds: 0 } ] }, { collection: 'user', indexes: [ { key: { email: 1, sendQuincyEmail: 1 }, name: 'mailing-list-pull' }, { key: { email: 1 }, name: 'email_1' }, { key: { isDonating: 1 }, name: 'isDonating_1' }, { key: { username: 1, id: 1 }, name: 'username_1__id_1' } ] } ];\n\nexport async function checkCanConnectToDb(\n  prisma: FastifyTestInstance['prisma']\n): Promise<void> {\n  const countP = prisma.user.count();\n  const delayedRejection = new Promise((_resolve, reject) =>\n    setTimeout(\n      () => reject(Error('unable to connect to Mongodb (timeout)')),\n      1000\n    )\n  );\n  await Promise.race([countP, delayedRejection]);\n}\n\nexport function setupServer(): void {\n  let fastify: FastifyTestInstance;\n  beforeAll(async () => {\n    if (process.env.FCC_ENABLE_TEST_LOGGING !== 'true') {\n      // @ts-expect-error Disable logging by unsetting logger\n      buildOptions.logger = undefined;\n    }\n    fastify = await build(buildOptions);\n    await fastify.ready();\n\nawait checkCanConnectToDb(fastify.prisma);\n\n// Prisma does not support TTL indexes in the schema yet, so, to avoid\n    // conflicts with the TTL index in the sessions collection, we need to\n    // create it manually (before interacting with the db in any way). Also,\n    // to save time, we create all other indexes so we don't need to invoke\n    // `prisma db push` (which is relatively slow).\n\nawait Promise.all(\n      indexData.map(async ({ collection, indexes }) => {\n        await fastify.prisma.$runCommandRaw({\n          createIndexes: collection,\n          indexes\n        });\n      })\n    );\n\nglobal.fastifyTestInstance = fastify;\n    // allow a little time to setup the db\n  }, 10000);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7787,
      "relative_path": "git_repos\\freeCodeCamp\\api\\jest.utils.ts",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "2e103f1c010b27f67b8578eae400e034",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\jest.utils.ts",
    "source_type": "git_repo",
    "title": "jest.utils",
    "content": "TTL index in the sessions collection, we need to // create it manually (before interacting with the db in any way). Also, // to save time, we create all other indexes so we don't need to invoke // `prisma db push` (which is relatively slow). await Promise.all( indexData.map(async ({ collection, indexes }) => { await fastify.prisma.$runCommandRaw({ createIndexes: collection, indexes }); }) ); global.fastifyTestInstance = fastify; // allow a little time to setup the db }, 10000);\n\nafterAll(async () => {\n    if (!global.fastifyTestInstance)\n      throw Error(`fastifyTestInstance was not created. Typically this means that something went wrong when building the fastify instance.\nIf you are seeing this error, the root cause is likely an error thrown in the beforeAll hook.`);\n    await fastifyTestInstance.prisma.$runCommandRaw({ dropDatabase: 1 });\n\n// Due to a prisma bug, this is not enough, we need to --force-exit jest:\n    // https://github.com/prisma/prisma/issues/18146\n    await fastifyTestInstance.close();\n  });\n}\n\nexport const defaultUserId = '64c7810107dd4782d32baee7';\nexport const defaultUserEmail = 'foo@bar.com';\nexport const defaultUsername = 'fcc-test-user';\n\nexport const resetDefaultUser = async (): Promise<void> => {\n  await fastifyTestInstance.prisma.examEnvironmentAuthorizationToken.deleteMany(\n    {\n      where: { userId: defaultUserId }\n    }\n  );\n  await fastifyTestInstance.prisma.user.deleteMany({\n    where: { id: defaultUserId }\n  });\n\nawait fastifyTestInstance.prisma.user.deleteMany({\n    where: { email: defaultUserEmail }\n  });\n\nawait fastifyTestInstance.prisma.user.create({\n    data: {\n      ...createUserInput(defaultUserEmail),\n      id: defaultUserId,\n      username: defaultUsername\n    }\n  });\n};\n\nexport async function devLogin(): Promise<string[]> {\n  await resetDefaultUser();\n  const res = await superRequest('/signin', { method: 'GET' });\n  expect(res.status).toBe(302);\n  return res.get('Set-Cookie');\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7787,
      "relative_path": "git_repos\\freeCodeCamp\\api\\jest.utils.ts",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "d9e5b19419e26af55deda443c65118d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\api\\jest.utils.ts",
    "source_type": "git_repo",
    "title": "jest.utils",
    "content": "defaultUserEmail = 'foo@bar.com'; export const defaultUsername = 'fcc-test-user'; export const resetDefaultUser = async (): Promise<void> => { await fastifyTestInstance.prisma.examEnvironmentAuthorizationToken.deleteMany( { where: { userId: defaultUserId } } ); await fastifyTestInstance.prisma.user.deleteMany({ where: { id: defaultUserId } }); await fastifyTestInstance.prisma.user.deleteMany({ where: { email: defaultUserEmail } }); await fastifyTestInstance.prisma.user.create({ data: { ...createUserInput(defaultUserEmail), id: defaultUserId, username: defaultUsername } }); }; export async function devLogin(): Promise<string[]> { await resetDefaultUser(); const res = await superRequest('/signin', { method: 'GET' }); expect(res.status).toBe(302); return res.get('Set-Cookie'); }\n\nexport async function seedExam(): Promise<void> {\n  const query = { where: { id: examJson.id } };\n  const testExamExists =\n    await fastifyTestInstance.prisma.exam.findUnique(query);\n\nif (testExamExists) {\n    await fastifyTestInstance.prisma.exam.deleteMany(query);\n  }\n\nawait fastifyTestInstance.prisma.exam.create({\n    data: {\n      ...examJson\n    }\n  });\n}\n\nexport function createFetchMock({ ok = true, body = {} } = {}) {\n  return jest.fn().mockResolvedValue(\n    Promise.resolve({\n      ok,\n      json: () => Promise.resolve(body)\n    })\n  );\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7787,
      "relative_path": "git_repos\\freeCodeCamp\\api\\jest.utils.ts",
      "source_type": "git_repo"
    },
    "token_count": 324,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "c3b5f90f81793da358035bbfc0a89f29",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\gatsby-config.js",
    "source_type": "git_repo",
    "title": "gatsby-config",
    "content": "const path = require('path');\nconst envData = require('./config/env.json');\nconst {\n  buildChallenges,\n  replaceChallengeNode,\n  localeChallengesRootDir\n} = require('./utils/build-challenges');\n\nconst { clientLocale, curriculumLocale, homeLocation } = envData;\n\nconst curriculumIntroRoot = path.resolve(__dirname, './src/pages');\nconst pathPrefix = clientLocale === 'english' ? '' : '/' + clientLocale; module exports = {\n  flags: {\n    DEV_SSR: false\n  },\n  siteMetadata: {\n    title: 'freeCodeCamp',\n    siteUrl: homeLocation\n  },\n  pathPrefix: pathPrefix,\n  plugins: [\n    'gatsby-plugin-pnpm',\n    {\n      resolve: 'gatsby-plugin-webpack-bundle-analyser-v2',\n      options: {\n        analyzerMode: 'disabled',\n        generateStatsFile: process env CI\n      }\n    },\n    'gatsby-plugin-react-helmet',\n    {\n      resolve: 'gatsby-plugin-postcss',\n      options: {\n        postcssOptions: {\n          config: path resolve(__dirname, 'postcss config js')\n        }\n      }\n    },\n    {\n      resolve: 'gatsby-plugin-create-client-paths',\n      options: {\n        prefixes: [\n          '/certification/*',\n          '/unsubscribed/*',\n          '/user/*',\n          '/settings/*',\n          '/n/*'\n        ]\n      }\n    },\n    {\n      resolve: require resolve(\n        ' /tools/client-plugins/gatsby-source-challenges'\n      ),\n      options: {\n        name: 'challenges',\n        source: buildChallenges,\n        onSourceChange: replaceChallengeNode(curriculumLocale),\n        curriculumPath: localeChallengesRootDir\n      }\n    },\n    {\n      resolve: 'gatsby-source-filesystem',\n      options: {\n        name: 'introductions',\n        path: curriculumIntroRoot\n      }\n    },\n    {\n      resolve: 'gatsby-transformer-remark'\n    },\n    {\n      resolve: require resolve(\n        ' /tools/client-plugins/gatsby-remark-node-identity'\n      ),\n      options: {\n        identity: 'blockIntroMarkdown',\n        predicate: ({ frontmatter }) => {\n          if ( frontmatter) {\n            return false;\n          }\n          const { title, block, superBlock } = frontmatter;\n          return title && block && superBlock;\n        }\n      }\n    },\n    {\n      resolve: require",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2915,
      "relative_path": "git_repos\\freeCodeCamp\\client\\gatsby-config.js",
      "source_type": "git_repo"
    },
    "token_count": 501,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "629042359cbdba363d877b9ae60cf17b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\gatsby-config.js",
    "source_type": "git_repo",
    "title": "gatsby-config",
    "content": "require resolve( ' /tools/client-plugins/gatsby-source-challenges' ), options: { name: 'challenges', source: buildChallenges, onSourceChange: replaceChallengeNode(curriculumLocale), curriculumPath: localeChallengesRootDir } }, { resolve: 'gatsby-source-filesystem', options: { name: 'introductions', path: curriculumIntroRoot } }, { resolve: 'gatsby-transformer-remark' }, { resolve: require resolve( ' /tools/client-plugins/gatsby-remark-node-identity' ), options: { identity: 'blockIntroMarkdown', predicate: ({ frontmatter }) => { if ( frontmatter) { return false; } const { title, block, superBlock } = frontmatter; return title && block && superBlock; } } }, { resolve: requireresolve(\n        ' /tools/client-plugins/gatsby-remark-node-identity'\n      ),\n      options: {\n        identity: 'superBlockIntroMarkdown',\n        predicate: ({ frontmatter }) => {\n          if ( frontmatter) {\n            return false;\n          }\n          const { title, block, superBlock } = frontmatter;\n          return title && block && superBlock;\n        }\n      }\n    },\n    {\n      resolve: 'gatsby-plugin-manifest',\n      options: {\n        name: 'freeCodeCamp',\n        short_name: 'fCC',\n        start_url: '/',\n        theme_color: '#0a0a23',\n        background_color: '#fff',\n        display: 'minimal-ui',\n        icon: 'src/assets/images/square_puck png'\n      }\n    },\n    'gatsby-plugin-remove-serviceworker'\n  ]\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 2915,
      "relative_path": "git_repos\\freeCodeCamp\\client\\gatsby-config.js",
      "source_type": "git_repo"
    },
    "token_count": 340,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "66d9110fb9b0e8625087887c1c267a35",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\gatsby-ssr.js",
    "source_type": "git_repo",
    "title": "gatsby-ssr",
    "content": "import PropTypes from 'prop-types';\nimport React from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport { Provider } from 'react-redux';\nimport { Elements } from '@stripe/react-stripe-js';\n\nimport i18n from './i18n/config';\nimport { stripe } from './src/utils/stripe';\nimport { createStore } from './src/redux/create-store';\nimport layoutSelector from './utils/gatsby/layout-selector';\nimport { getheadTagComponents, getPostBodyComponents } from './utils/tags';\nimport GrowthBookProvider from './src/components/growth-book/growth-book-wrapper';\n\nconst store = createStore();\n\nexport const wrapRootElement = ({ element }) => {\n  return (\n    <Provider store={store}>\n      <I18nextProvider i18n={i18n}>\n        <GrowthBookProvider>\n          <Elements stripe={stripe}>{element}</Elements>\n        </GrowthBookProvider>\n      </I18nextProvider>\n    </Provider>\n  );\n};\n\nwrapRootElement.propTypes = {\n  element: PropTypes.any\n};\n\nexport const wrapPageElement = layoutSelector;\n\nexport const onRenderBody = ({\n  pathname,\n  setHeadComponents,\n  setPostBodyComponents\n}) => {\n  setHeadComponents(getheadTagComponents());\n  setPostBodyComponents(getPostBodyComponents(pathname));\n};\n\nexport const onPreRenderHTML = ({\n  getHeadComponents,\n  replaceHeadComponents\n}) => {\n  const headComponents = getHeadComponents();\n  headComponents.sort((x, y) => {\n    if (x.key === 'bootstrap-min-preload' || x.key === 'bootstrap-min') {\n      return -1;\n    } else if (y.key === 'bootstrap-min-preload' || y.key === 'bootstrap-min') {\n      return 1;\n    }\n    return 0;\n  });\n  replaceHeadComponents(headComponents);\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 1618,
      "relative_path": "git_repos\\freeCodeCamp\\client\\gatsby-ssr.js",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "edc16720f248ce622bf3cc99b9476d87",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\gatsby-node.js",
    "source_type": "git_repo",
    "title": "gatsby-node",
    "content": "const { createFilePath } = require('gatsby-source-filesystem');\n// TODO: ideally we'd remove lodash and just use lodash-es, but we can't require\n// es modules here.\nconst uniq = require('lodash/uniq');\nconst MonacoWebpackPlugin = require('monaco-editor-webpack-plugin');\nconst webpack = require('webpack');\n\nconst env = require('./config/env.json');\nconst {\n  createChallengePages,\n  createBlockIntroPages,\n  createSuperBlockIntroPages\n} = require('./utils/gatsby');\n\nconst createByIdentityMap = {\n  blockIntroMarkdown: createBlockIntroPages,\n  superBlockIntroMarkdown: createSuperBlockIntroPages\n};\n\nexports.onCreateNode = function onCreateNode({ node, actions, getNode }) {\n  const { createNodeField } = actions;\n\nif (node.internal.type === 'MarkdownRemark') {\n    const slug = createFilePath({ node, getNode });\n    if (!slug.includes('LICENSE')) {\n      createNodeField({ node, name: 'slug', value: slug });\n    }\n  }\n};\n\nexports.createPages = async function createPages({\n  graphql,\n  actions,\n  reporter\n}) {\n  if (!env.algoliaAPIKey || !env.algoliaAppId) {\n    if (process.env.FREECODECAMP_NODE_ENV === 'production') {\n      throw new Error(\n        'Algolia App id and API key are required to start the client!'\n      );\n    } else {\n      reporter.info(\n        'Algolia keys missing or invalid. Required for search to yield results.'\n      );\n    }\n  }\n\nif (!env.stripePublicKey) {\n    if (process.env.FREECODECAMP_NODE_ENV === 'production') {\n      throw new Error('Stripe public key is required to start the client!');\n    } else {\n      reporter.info(\n        'Stripe public key is missing or invalid. Required for Stripe integration.'\n      );\n    }\n  }\n\nconst { createPage } = actions;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 9630,
      "relative_path": "git_repos\\freeCodeCamp\\client\\gatsby-node.js",
      "source_type": "git_repo"
    },
    "token_count": 396,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "7b71973d8b4587072ee129d7eeca059f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\gatsby-node.js",
    "source_type": "git_repo",
    "title": "gatsby-node",
    "content": "new Error( 'Algolia App id and API key are required to start the client!' ); } else { reporter.info( 'Algolia keys missing or invalid. Required for search to yield results.' ); } } if (!env.stripePublicKey) { if (process.env.FREECODECAMP_NODE_ENV === 'production') { throw new Error('Stripe public key is required to start the client!'); } else { reporter.info( 'Stripe public key is missing or invalid. Required for Stripe integration.' ); } } const { createPage } = actions;\n\nconst result = await graphql(`\n    {\n      allChallengeNode(\n        sort: {\n          fields: [\n            challenge___superOrder\n            challenge___order\n            challenge___challengeOrder\n          ]\n        }\n      ) {\n        edges {\n          node {\n            id\n            challenge {\n              block\n              blockType\n              blockLayout\n              certification\n              challengeType\n              dashedName\n              demoType\n              disableLoopProtectTests\n              disableLoopProtectPreview\n              fields {\n                slug\n                blockHashSlug\n              }\n              id\n              isLastChallengeInBlock\n              order\n              required {\n                link\n                src\n              }\n              challengeOrder\n              challengeFiles {\n                name\n                ext\n                contents\n                head\n                tail\n                history\n                fileKey\n              }\n              solutions {\n                contents\n                ext\n                history\n                fileKey\n              }\n              superBlock\n              superOrder\n              template\n              usesMultifileEditor\n              chapter\n              module\n            }\n          }\n        }\n      }\n      allMarkdownRemark {\n        edges {\n          node {\n            fields {\n              slug\n              nodeIdentity\n            }\n            frontmatter {\n              certification\n              block\n              superBlock\n              title\n            }\n            id\n          }\n        }\n      }\n    }\n  `);\n\nconst allChallengeNodes = result.data.allChallengeNode.edges.map(\n    ({ node }) => node\n  );\n\nconst createIdToNextPathMap = nodes =>\n    nodes.reduce((map, node, index) => {\n      const nextNode = nodes[index + 1];\n      const nextPath = nextNode ? nextNode.challenge.fields.slug : null;\n      if (nextPath) map[node.id] = nextPath;\n      return map;\n    }, {});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 9630,
      "relative_path": "git_repos\\freeCodeCamp\\client\\gatsby-node.js",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "c2da8ae97f57b18feee4e2d54332fbea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\gatsby-node.js",
    "source_type": "git_repo",
    "title": "gatsby-node",
    "content": "superOrder template usesMultifileEditor chapter module } } } } allMarkdownRemark { edges { node { fields { slug nodeIdentity } frontmatter { certification block superBlock title } id } } } } `); const allChallengeNodes = result.data.allChallengeNode.edges.map( ({ node }) => node ); const createIdToNextPathMap = nodes => nodes.reduce((map, node, index) => { const nextNode = nodes[index + 1]; const nextPath = nextNode ? nextNode.challenge.fields.slug : null; if (nextPath) map[node.id] = nextPath; return map; }, {});\n\nconst createIdToPrevPathMap = nodes =>\n    nodes.reduce((map, node, index) => {\n      const prevNode = nodes[index - 1];\n      const prevPath = prevNode ? prevNode.challenge.fields.slug : null;\n      if (prevPath) map[node.id] = prevPath;\n      return map;\n    }, {});\n\nconst idToNextPathCurrentCurriculum =\n    createIdToNextPathMap(allChallengeNodes);\n\nconst idToPrevPathCurrentCurriculum =\n    createIdToPrevPathMap(allChallengeNodes);\n\n// Create challenge pages.\n  result.data.allChallengeNode.edges.forEach(\n    createChallengePages(createPage, {\n      idToNextPathCurrentCurriculum,\n      idToPrevPathCurrentCurriculum\n    })\n  );\n\nconst blocks = uniq(\n    result.data.allChallengeNode.edges.map(\n      ({\n        node: {\n          challenge: { block }\n        }\n      }) => block\n    )\n  );\n\nconst superBlocks = uniq(\n    result.data.allChallengeNode.edges.map(\n      ({\n        node: {\n          challenge: { superBlock }\n        }\n      }) => superBlock\n    )\n  );\n\n// Create intro pages\n  // TODO: Remove allMarkdownRemark (populate from elsewhere)\n  result.data.allMarkdownRemark.edges.forEach(edge => {\n    const {\n      node: { frontmatter, fields }\n    } = edge;\n\nif (!fields) {\n      return;\n    }\n    const { slug, nodeIdentity } = fields;\n    if (slug.includes('LICENCE')) {\n      return;\n    }\n    if (nodeIdentity === 'blockIntroMarkdown') {\n      if (!blocks.includes(frontmatter.block)) {\n        return;\n      }\n    } else if (!superBlocks.includes(frontmatter.superBlock)) {\n      return;\n    }",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 9630,
      "relative_path": "git_repos\\freeCodeCamp\\client\\gatsby-node.js",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "32677aac5232338331bf6e683fec2af7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\gatsby-node.js",
    "source_type": "git_repo",
    "title": "gatsby-node",
    "content": "const superBlocks = uniq( result.data.allChallengeNode.edges.map( ({ node: { challenge: { superBlock } } }) => superBlock ) ); // Create intro pages // TODO: Remove allMarkdownRemark (populate from elsewhere) result.data.allMarkdownRemark.edges.forEach(edge => { const { node: { frontmatter, fields } } = edge; if (!fields) { return; } const { slug, nodeIdentity } = fields; if (slug.includes('LICENCE')) { return; } if (nodeIdentity === 'blockIntroMarkdown') { if (!blocks.includes(frontmatter.block)) { return; } } else if (!superBlocks.includes(frontmatter.superBlock)) { return; }\n\ntry {\n      const pageBuilder = createByIdentityMap[nodeIdentity](createPage);\n      pageBuilder(edge);\n    } catch (e) {\n      console.log(e);\n      console.log(`\n            ident: ${nodeIdentity} does not belong to a function\n\n${frontmatter ? JSON.stringify(edge.node) : 'no frontmatter'}\n\n`);\n    }\n  });\n};\n\nexports.onCreateWebpackConfig = ({ stage, actions }) => {\n  const newPlugins = [\n    // We add the shims of the node globals to the global scope\n    new webpack.ProvidePlugin({\n      Buffer: ['buffer', 'Buffer']\n    }),\n    new webpack.ProvidePlugin({\n      process: 'process/browser'\n    })\n  ];\n  // The monaco editor relies on some browser only globals so should not be\n  // involved in SSR. Also, if the plugin is used during the 'build-html' stage\n  // it overwrites the minfied files with ordinary ones.\n  if (stage !== 'build-html') {\n    newPlugins.push(\n      new MonacoWebpackPlugin({ filename: '[name].worker-[contenthash].js' })\n    );\n  }\n  actions.setWebpackConfig({\n    resolve: {\n      fallback: {\n        fs: false,\n        path: require.resolve('path-browserify'),\n        assert: require.resolve('assert'),\n        crypto: require.resolve('crypto-browserify'),\n        util: require.resolve('util/util'),\n        buffer: require.resolve('buffer'),\n        stream: require.resolve('stream-browserify'),\n        process: require.resolve('process/browser')\n      }\n    },\n    plugins: newPlugins\n  });\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 9630,
      "relative_path": "git_repos\\freeCodeCamp\\client\\gatsby-node.js",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "5cff613b931bfa0d84fec0803773ab1f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\gatsby-node.js",
    "source_type": "git_repo",
    "title": "gatsby-node",
    "content": "The monaco editor relies on some browser only globals so should not be // involved in SSR. Also, if the plugin is used during the 'build-html' stage // it overwrites the minfied files with ordinary ones. if (stage !== 'build-html') { newPlugins.push( new MonacoWebpackPlugin({ filename: '[name].worker-[contenthash].js' }) ); } actions.setWebpackConfig({ resolve: { fallback: { fs: false, path: require.resolve('path-browserify'), assert: require.resolve('assert'), crypto: require.resolve('crypto-browserify'), util: require.resolve('util/util'), buffer: require.resolve('buffer'), stream: require.resolve('stream-browserify'), process: require.resolve('process/browser') } }, plugins: newPlugins }); };\n\nexports.onCreateBabelConfig = ({ actions }) => {\n  actions.setBabelPlugin({\n    name: '@babel/plugin-proposal-function-bind'\n  });\n  actions.setBabelPlugin({\n    name: '@babel/plugin-proposal-export-default-from'\n  });\n};\n\nexports.onCreatePage = async ({ page, actions }) => {\n  const { createPage } = actions;\n  // Only update the `/challenges` page.\n  if (page.path.match(/^\\/challenges/)) {\n    // page.matchPath is a special key that's used for matching pages\n    // with corresponding routes only on the client.\n    page.matchPath = '/challenges/*';\n    // Update the page.\n    createPage(page);\n  }\n}; // Take care to QA the challenges when modifying this It has broken certain\n// types of challenge in the past exports",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 9630,
      "relative_path": "git_repos\\freeCodeCamp\\client\\gatsby-node.js",
      "source_type": "git_repo"
    },
    "token_count": 329,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "fd6e608ad2c4ef924e891d259f90946c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\gatsby-node.js",
    "source_type": "git_repo",
    "title": "gatsby-node",
    "content": "}; exports.onCreatePage = async ({ page, actions }) => { const { createPage } = actions; // Only update the `/challenges` page. if (page.path.match(/^\\/challenges/)) { // page.matchPath is a special key that's used for matching pages // with corresponding routes only on the client. page.matchPath = '/challenges/*'; // Update the page. createPage(page); } }; // Take care to QA the challenges when modifying this It has broken certain // types of challenge in the past exportscreateSchemaCustomization = ({ actions }) => {\n  const { createTypes } = actions;\n  const typeDefs = `\n    type ChallengeNode implements Node {\n      challenge: Challenge\n    }\n    type Challenge {\n      blockType: String\n      blockLayout: String\n      challengeFiles: [FileContents]\n      chapter: String\n      explanation: String\n      hooks: Hooks\n      notes: String\n      url: String\n      assignments: [String]\n      prerequisites: [PrerequisiteChallenge]\n      module: String\n      msTrophyId: String\n      fillInTheBlank: FillInTheBlank\n      scene: Scene\n      transcript: String\n      quizzes: [Quiz]\n    }\n    type FileContents {\n      fileKey: String\n      ext: String\n      name: String\n      contents: String\n      head: String\n      tail: String\n      editableRegionBoundaries: [Int]\n    }\n    type PrerequisiteChallenge {\n      id: String\n      title: String\n    }\n    type FillInTheBlank {\n      sentence: String\n      blanks: [Blank]\n    }\n    type Blank {\n      answer: String\n      feedback: String\n    }\n    type Scene {\n      setup: SceneSetup\n      commands: [SceneCommands]\n    }\n    type SceneSetup {\n      background: String\n      characters: [SetupCharacter]\n      audio: SetupAudio\n      alwaysShowDialogue: Boolean\n    }\n    type SetupCharacter {\n      character: String\n      position: CharacterPosition\n      opacity: Float\n    }\n    type SetupAudio {\n      filename: String\n      startTime: Float\n      startTimestamp: Float\n      finishTimestamp: Float\n    }\n    type SceneCommands {\n      background: String\n      character: String\n      position: CharacterPosition\n      opacity: Float\n      startTime: Float\n      finishTime: Float\n      dialogue: Dialogue\n    }\n    type Dialogue {\n      text: String\n      align: String\n    }\n    type CharacterPosition {\n      x: Float\n      y: Float\n      z: Float\n    }\n    type Quiz {\n      questions: [QuizQuestion]\n    }\n    type QuizQuestion {\n      text: String\n      distractors: [String]\n      answer: String\n    }\n    type Hooks {\n      beforeEach: String\n      afterEach: String\n      beforeAll: String\n    }\n  `;\n  createTypes(typeDefs);\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 9630,
      "relative_path": "git_repos\\freeCodeCamp\\client\\gatsby-node.js",
      "source_type": "git_repo"
    },
    "token_count": 603,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "3e467fce901f99124b1a50d6c200b272",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\postcss.config.js",
    "source_type": "git_repo",
    "title": "postcss.config",
    "content": "module.exports = {\n  plugins: {\n    autoprefixer: {\n      overrideBrowserslist: ['last 2 versions']\n    }\n  }\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 113,
      "relative_path": "git_repos\\freeCodeCamp\\client\\postcss.config.js",
      "source_type": "git_repo"
    },
    "token_count": 30,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ff7c668d85aab4d96a174bba0776d6d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tailwind.config.js",
    "source_type": "git_repo",
    "title": "tailwind.config",
    "content": "/* Don't delete! The empty config is needed when building the client */",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 72,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tailwind.config.js",
      "source_type": "git_repo"
    },
    "token_count": 15,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f6b018b9a1d28e9f36f7a1ff0ce136ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\tsconfig.json",
    "source_type": "git_repo",
    "title": "tsconfig",
    "content": "{\n  \"compilerOptions\": {\n    \"lib\": [\"WebWorker\", \"DOM\", \"DOM.Iterable\", \"es2023\"],\n    \"target\": \"ES2023\",\n    \"module\": \"es2020\",\n    \"moduleResolution\": \"bundler\",\n    \"allowJs\": true,\n    \"jsx\": \"react\",\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"esModuleInterop\": true,\n    \"experimentalDecorators\": true,\n    \"emitDecoratorMetadata\": true,\n    \"noEmit\": true,\n    \"resolveJsonModule\": true,\n    \"skipLibCheck\": true\n  },\n  \"include\": [\n    \"i18n/**/*\",\n    \"plugins/**/*\",\n    \"src/**/*\",\n    \"utils/**/*\",\n    \"tools/**/*\",\n    \"config/**/*\"\n  ]\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 583,
      "relative_path": "git_repos\\freeCodeCamp\\client\\tsconfig.json",
      "source_type": "git_repo"
    },
    "token_count": 183,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2a98f3973294c0ebe9abbc8af9a62261",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"@freecodecamp/client\",\n  \"version\": \"0 0 1\",\n  \"description\": \"The freeCodeCamp org open-source codebase and curriculum\",\n  \"license\": \"BSD-3-Clause\",\n  \"private\": true,\n  \"engines\": {\n    \"node\": \">=16\",\n    \"pnpm\": \">=10\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github com/freeCodeCamp/freeCodeCamp git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github com/freeCodeCamp/freeCodeCamp/issues\"\n  },\n  \"homepage\": \"https://github com/freeCodeCamp/freeCodeCamp#readme\",\n  \"author\": \"freeCodeCamp <team@freecodecamp org>\",\n  \"main\": \"none\",\n  \"scripts\": {\n    \"prebuild\": \"pnpm run common-setup && pnpm run build:scripts --env production\",\n    \"build\": \"NODE_OPTIONS=\\\"--max-old-space-size=7168\\\" gatsby build --prefix-paths\",\n    \"build:scripts\": \"pnpm run -F=browser-scripts build\",\n    \"clean\": \"gatsby clean\",\n    \"common-setup\": \"pnpm -w run create:shared && pnpm run create:env && pnpm run create:trending && pnpm run create:search-placeholder\",\n    \"create:env\": \"DEBUG=fcc:* tsx /tools/create-env ts\",\n    \"create:trending\": \"tsx /tools/download-trending ts\",\n    \"create:search-placeholder\": \"tsx /tools/generate-search-placeholder\",\n    \"predevelop\": \"pnpm run common-setup && pnpm run build:scripts --env development\",\n    \"develop\": \"NODE_OPTIONS=\\\"--max-old-space-size=7168\\\" gatsby develop --inspect=9230\",\n    \"lint\": \"tsx /i18n/schema-validation ts\",\n    \"serve\": \"gatsby serve -p 8000\",\n    \"serve-ci\": \"serve -l 8000 -c serve json public\",\n    \"prestand-alone\": \"pnpm run prebuild\",\n    \"stand-alone\": \"gatsby develop\",\n    \"validate-keys\": \"tsx --tsconfig /tsconfig json /tools/scripts/lint/validate-keys\"\n  },\n  \"dependencies\": {\n    \"@babel/plugin-proposal-export-default-from\": \"7 23",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 6269,
      "relative_path": "git_repos\\freeCodeCamp\\client\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 504,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "40bb46fab83a0bed80c71f8ff3d2daca",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "create:shared && pnpm run create:env && pnpm run create:trending && pnpm run create:search-placeholder\", \"create:env\": \"DEBUG=fcc:* tsx /tools/create-env ts\", \"create:trending\": \"tsx /tools/download-trending ts\", \"create:search-placeholder\": \"tsx /tools/generate-search-placeholder\", \"predevelop\": \"pnpm run common-setup && pnpm run build:scripts --env development\", \"develop\": \"NODE_OPTIONS=\\\"--max-old-space-size=7168\\\" gatsby develop --inspect=9230\", \"lint\": \"tsx /i18n/schema-validation ts\", \"serve\": \"gatsby serve -p 8000\", \"serve-ci\": \"serve -l 8000 -c serve json public\", \"prestand-alone\": \"pnpm run prebuild\", \"stand-alone\": \"gatsby develop\", \"validate-keys\": \"tsx --tsconfig /tsconfig json /tools/scripts/lint/validate-keys\" }, \"dependencies\": { \"@babel/plugin-proposal-export-default-from\": \"7 233\",\n    \"@babel/plugin-proposal-function-bind\": \"7 23 3\",\n    \"@babel/plugin-transform-runtime\": \"^7 19 6\",\n    \"@babel/preset-env\": \"7 23 7\",\n    \"@babel/preset-react\": \"7 23 3\",\n    \"@babel/preset-typescript\": \"7 23 3\",\n    \"@babel/standalone\": \"7 23 7\",\n    \"@fortawesome/fontawesome-svg-core\": \"6 7 1\",\n    \"@fortawesome/free-brands-svg-icons\": \"6 7 1\",\n    \"@fortawesome/free-solid-svg-icons\": \"6 7 1\",\n    \"@fortawesome/react-fontawesome\": \"0 2 2\",\n    \"@freecodecamp/loop-protect\": \"3 0 0\",\n    \"@freecodecamp/ui\": \"4 2 0\",\n    \"@gatsbyjs/reach-router\": \"1 3 9\",\n    \"@growthbook/growthbook-react\": \"0 20 0\",\n    \"@headlessui/react\": \"1 7 19\",\n    \"@loadable/component\": \"5 16 3\",\n    \"@redux-devtools/extension\": \"3 3 0\",\n    \"@redux-saga/core\": \"^1 2 2\",\n    \"@stripe/react-stripe-js\": \"1 16 5\",\n    \"@stripe/stripe-js\": \"1 54 2\",\n    \"algoliasearch\": \"4 22 1\",\n    \"assert\": \"2 0",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 6269,
      "relative_path": "git_repos\\freeCodeCamp\\client\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 538,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "145210bb39adb8fc2ccf3499d2c43b64",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "7\", \"@babel/preset-react\": \"7 23 3\", \"@babel/preset-typescript\": \"7 23 3\", \"@babel/standalone\": \"7 23 7\", \"@fortawesome/fontawesome-svg-core\": \"6 7 1\", \"@fortawesome/free-brands-svg-icons\": \"6 7 1\", \"@fortawesome/free-solid-svg-icons\": \"6 7 1\", \"@fortawesome/react-fontawesome\": \"0 2 2\", \"@freecodecamp/loop-protect\": \"3 0 0\", \"@freecodecamp/ui\": \"4 2 0\", \"@gatsbyjs/reach-router\": \"1 3 9\", \"@growthbook/growthbook-react\": \"0 20 0\", \"@headlessui/react\": \"1 7 19\", \"@loadable/component\": \"5 16 3\", \"@redux-devtools/extension\": \"3 3 0\", \"@redux-saga/core\": \"^1 2 2\", \"@stripe/react-stripe-js\": \"1 16 5\", \"@stripe/stripe-js\": \"1 54 2\", \"algoliasearch\": \"4 22 1\", \"assert\": \"2 00\",\n    \"babel-plugin-preval\": \"5 1 0\",\n    \"babel-plugin-prismjs\": \"2 1 0\",\n    \"bezier-easing\": \"2 1 0\",\n    \"browser-cookies\": \"1 2 0\",\n    \"canvas-confetti\": \"^1 6 0\",\n    \"crypto-browserify\": \"3 12 0\",\n    \"date-fns\": \"4 1 0\",\n    \"date-fns-tz\": \"3 2 0\",\n    \"final-form\": \"4 20 10\",\n    \"gatsby\": \"3 15 0\",\n    \"gatsby-cli\": \"3 15 0\",\n    \"gatsby-plugin-create-client-paths\": \"3 15 0\",\n    \"gatsby-plugin-manifest\": \"3 15 0\",\n    \"gatsby-plugin-pnpm\": \"^1 2 10\",\n    \"gatsby-plugin-postcss\": \"4 15 0\",\n    \"gatsby-plugin-react-helmet\": \"4 15 0\",\n    \"gatsby-plugin-remove-serviceworker\": \"1 0 0\",\n    \"gatsby-source-filesystem\": \"3 15 0\",\n    \"gatsby-transformer-remark\": \"5 25 1\",\n    \"i18next\": \"25 2 1\",\n    \"instantsearch",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 6269,
      "relative_path": "git_repos\\freeCodeCamp\\client\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 538,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "b0a1a2d830b7096aa9f72a4103445e8f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "\"2 1 0\", \"bezier-easing\": \"2 1 0\", \"browser-cookies\": \"1 2 0\", \"canvas-confetti\": \"^1 6 0\", \"crypto-browserify\": \"3 12 0\", \"date-fns\": \"4 1 0\", \"date-fns-tz\": \"3 2 0\", \"final-form\": \"4 20 10\", \"gatsby\": \"3 15 0\", \"gatsby-cli\": \"3 15 0\", \"gatsby-plugin-create-client-paths\": \"3 15 0\", \"gatsby-plugin-manifest\": \"3 15 0\", \"gatsby-plugin-pnpm\": \"^1 2 10\", \"gatsby-plugin-postcss\": \"4 15 0\", \"gatsby-plugin-react-helmet\": \"4 15 0\", \"gatsby-plugin-remove-serviceworker\": \"1 0 0\", \"gatsby-source-filesystem\": \"3 15 0\", \"gatsby-transformer-remark\": \"5 25 1\", \"i18next\": \"25 2 1\", \"instantsearchjs\": \"4 75 3\",\n    \"lodash\": \"4 17 21\",\n    \"lodash-es\": \"4 17 21\",\n    \"micromark\": \"4 0 0\",\n    \"monaco-editor\": \"0 33 0\",\n    \"nanoid\": \"3 3 7\",\n    \"normalize-url\": \"6 1 0\",\n    \"path-browserify\": \"1 0 1\",\n    \"postcss\": \"8 4 35\",\n    \"prismjs\": \"1 29 0\",\n    \"process\": \"0 11 10\",\n    \"prop-types\": \"15 8 1\",\n    \"qrcode react\": \"^3 1 0\",\n    \"query-string\": \"7 1 3\",\n    \"react\": \"17 0 2\",\n    \"react-calendar-heatmap\": \"1 9 0\",\n    \"react-dom\": \"17 0 2\",\n    \"react-final-form\": \"6 5 9\",\n    \"react-gtm-module\": \"2 0 11\",\n    \"react-helmet\": \"6 1 0\",\n    \"react-hotkeys\": \"2 0 0\",\n    \"react-i18next\": \"15 5 2\",\n    \"react-instantsearch\": \"7 13 6\",\n    \"react-instantsearch-core\": \"7 13",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 6269,
      "relative_path": "git_repos\\freeCodeCamp\\client\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 539,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "41617a894cff8079f4b28074dfcbf305",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "\"nanoid\": \"3 3 7\", \"normalize-url\": \"6 1 0\", \"path-browserify\": \"1 0 1\", \"postcss\": \"8 4 35\", \"prismjs\": \"1 29 0\", \"process\": \"0 11 10\", \"prop-types\": \"15 8 1\", \"qrcode react\": \"^3 1 0\", \"query-string\": \"7 1 3\", \"react\": \"17 0 2\", \"react-calendar-heatmap\": \"1 9 0\", \"react-dom\": \"17 0 2\", \"react-final-form\": \"6 5 9\", \"react-gtm-module\": \"2 0 11\", \"react-helmet\": \"6 1 0\", \"react-hotkeys\": \"2 0 0\", \"react-i18next\": \"15 5 2\", \"react-instantsearch\": \"7 13 6\", \"react-instantsearch-core\": \"7 136\",\n    \"react-monaco-editor\": \"0 48 0\",\n    \"react-redux\": \"7 2 9\",\n    \"react-reflex\": \"4 1 0\",\n    \"react-responsive\": \"9 0 2\",\n    \"react-scrollable-anchor\": \"0 6 1\",\n    \"react-spinkit\": \"3 0 0\",\n    \"react-tooltip\": \"4 5 1\",\n    \"react-transition-group\": \"4 4 5\",\n    \"react-youtube\": \"10 1 0\",\n    \"redux\": \"4 2 1\",\n    \"redux-actions\": \"2 6 5\",\n    \"redux-observable\": \"1 2 0\",\n    \"redux-saga\": \"1 2 3\",\n    \"reselect\": \"4 1 8\",\n    \"rxjs\": \"6 6 7\",\n    \"sanitize-html\": \"2 11 0\",\n    \"store\": \"2 0 12\",\n    \"stream-browserify\": \"3 0 0\",\n    \"tone\": \"14 7 77\",\n    \"typescript\": \"5 2 2\",\n    \"util\": \"0 12 5\",\n    \"uuid\": \"8 3 2\",\n    \"validator\": \"13 11 0\",\n    \"xterm\": \"^5 2 1\",\n    \"xterm-addon-fit\": \"^0 8 0\"\n  },\n  \"devDependencies\": {\n    \"@babel/plugin-syntax-dynamic-import\": \"7 8",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 6269,
      "relative_path": "git_repos\\freeCodeCamp\\client\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 549,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "34d2def17a809285db892386513aff15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "4 5\", \"react-youtube\": \"10 1 0\", \"redux\": \"4 2 1\", \"redux-actions\": \"2 6 5\", \"redux-observable\": \"1 2 0\", \"redux-saga\": \"1 2 3\", \"reselect\": \"4 1 8\", \"rxjs\": \"6 6 7\", \"sanitize-html\": \"2 11 0\", \"store\": \"2 0 12\", \"stream-browserify\": \"3 0 0\", \"tone\": \"14 7 77\", \"typescript\": \"5 2 2\", \"util\": \"0 12 5\", \"uuid\": \"8 3 2\", \"validator\": \"13 11 0\", \"xterm\": \"^5 2 1\", \"xterm-addon-fit\": \"^0 8 0\" }, \"devDependencies\": { \"@babel/plugin-syntax-dynamic-import\": \"7 83\",\n    \"@testing-library/react\": \"12 1 5\",\n    \"@total-typescript/ts-reset\": \"^0 5 0\",\n    \"@types/canvas-confetti\": \"^1 6 0\",\n    \"@types/gatsbyjs__reach-router\": \"1 3 0\",\n    \"@types/jest\": \"29 5 12\",\n    \"@types/js-yaml\": \"4 0 5\",\n    \"@types/loadable__component\": \"5 13 8\",\n    \"@types/lodash-es\": \"^4 17 6\",\n    \"@types/node-fetch\": \"2\",\n    \"@types/prismjs\": \"^1 26 0\",\n    \"@types/react\": \"17 0 83\",\n    \"@types/react-dom\": \"17 0 19\",\n    \"@types/react-gtm-module\": \"2 0 3\",\n    \"@types/react-helmet\": \"6 1 11\",\n    \"@types/react-redux\": \"7 1 33\",\n    \"@types/react-responsive\": \"8 0 8\",\n    \"@types/react-scrollable-anchor\": \"0 6 4\",\n    \"@types/react-spinkit\": \"3 0 10\",\n    \"@types/react-test-renderer\": \"16 9 12\",\n    \"@types/react-transition-group\": \"4 4 10\",\n    \"@types/redux-actions\": \"2 6 5\",\n    \"@types/sanitize-html\": \"^2 8 0\",\n    \"@types/store\": \"^2 0 2\",\n    \"@types/validator\": \"^13 7 12\",\n    \"autoprefixer\": \"10",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 6269,
      "relative_path": "git_repos\\freeCodeCamp\\client\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 546,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "25e305df7eeb9c3d06df32dfd7a58db1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\client\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "\"@types/js-yaml\": \"4 0 5\", \"@types/loadable__component\": \"5 13 8\", \"@types/lodash-es\": \"^4 17 6\", \"@types/node-fetch\": \"2\", \"@types/prismjs\": \"^1 26 0\", \"@types/react\": \"17 0 83\", \"@types/react-dom\": \"17 0 19\", \"@types/react-gtm-module\": \"2 0 3\", \"@types/react-helmet\": \"6 1 11\", \"@types/react-redux\": \"7 1 33\", \"@types/react-responsive\": \"8 0 8\", \"@types/react-scrollable-anchor\": \"0 6 4\", \"@types/react-spinkit\": \"3 0 10\", \"@types/react-test-renderer\": \"16 9 12\", \"@types/react-transition-group\": \"4 4 10\", \"@types/redux-actions\": \"2 6 5\", \"@types/sanitize-html\": \"^2 8 0\", \"@types/store\": \"^2 0 2\", \"@types/validator\": \"^13 7 12\", \"autoprefixer\": \"104 17\",\n    \"babel-plugin-macros\": \"3 1 0\",\n    \"core-js\": \"2 6 12\",\n    \"dotenv\": \"16 4 5\",\n    \"gatsby-plugin-webpack-bundle-analyser-v2\": \"1 1 32\",\n    \"i18next-fs-backend\": \"2 6 0\",\n    \"jest-json-schema-extended\": \"1 0 1\",\n    \"joi\": \"17 12 2\",\n    \"js-yaml\": \"4 1 0\",\n    \"monaco-editor-webpack-plugin\": \"7 0 1\",\n    \"node-fetch\": \"2 7 0\",\n    \"react-test-renderer\": \"17 0 2\",\n    \"redux-saga-test-plan\": \"4 0 6\",\n    \"serve\": \"13 0 4\",\n    \"webpack\": \"5 90 3\"\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 6269,
      "relative_path": "git_repos\\freeCodeCamp\\client\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "b42d78416647709cc6bec1433f177665",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.test.js",
    "source_type": "git_repo",
    "title": "get-challenges.test",
    "content": "const path = require('path');\n\nconst {\n  hasEnglishSource,\n  createCommentMap,\n  getChallengesForLang\n} = require('./get-challenges');\n\nconst EXISTING_CHALLENGE_PATH = 'challenge.md';\nconst MISSING_CHALLENGE_PATH = 'no/challenge.md';\n\nconst basePath = '__fixtures__';\n\ndescribe('create non-English challenge', () => {\n  describe('getChallengesForLang', () => {\n    it('throws if lang is an invalid language', async () => {\n      await expect(() => getChallengesForLang('notlang')).rejects.toThrow(\n        'notlang is not a accepted language'\n      );\n    });\n  });\n  describe('hasEnglishSource', () => {\n    it('returns a boolean', async () => {\n      const sourceExists = await hasEnglishSource(\n        basePath,\n        EXISTING_CHALLENGE_PATH\n      );\n      expect(typeof sourceExists).toBe('boolean');\n    });\n    it('returns true if the English challenge exists', async () => {\n      const sourceExists = await hasEnglishSource(\n        basePath,\n        EXISTING_CHALLENGE_PATH\n      );\n      expect(sourceExists).toBe(true);\n    });\n    it('returns false if the English challenge is missing', async () => {\n      const sourceExists = await hasEnglishSource(\n        basePath,\n        MISSING_CHALLENGE_PATH\n      );\n      expect(sourceExists).toBe(false);\n    });\n  });\n\ndescribe('createCommentMap', () => {\n    const dictionaryDir = path.resolve(\n      __dirname,\n      '__fixtures__',\n      'dictionaries'\n    );\n    const incompleteDictDir = path.resolve(\n      __dirname,\n      '__fixtures__',\n      'incomplete-dicts'\n    );\n\nit('returns an object', () => {\n      expect(typeof createCommentMap(dictionaryDir, dictionaryDir)).toBe(\n        'object'\n      );\n    });\n\nit('fallback to the untranslated string', () => {\n      expect.assertions(2);\n      const commentMap = createCommentMap(incompleteDictDir, incompleteDictDir);\n      expect(commentMap['To be translated one'].spanish).toEqual(\n        'Spanish translation one'\n      );\n      expect(commentMap['To be translated two'].spanish).toEqual(\n        'To be translated two'\n      );\n    });",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3925,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.test.js",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "dad5109f4663128ac1581b7cf03ca6fc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.test.js",
    "source_type": "git_repo",
    "title": "get-challenges.test",
    "content": "{ const sourceExists = await hasEnglishSource( basePath, MISSING_CHALLENGE_PATH ); expect(sourceExists).toBe(false); }); }); describe('createCommentMap', () => { const dictionaryDir = path.resolve( __dirname, '__fixtures__', 'dictionaries' ); const incompleteDictDir = path.resolve( __dirname, '__fixtures__', 'incomplete-dicts' ); it('returns an object', () => { expect(typeof createCommentMap(dictionaryDir, dictionaryDir)).toBe( 'object' ); }); it('fallback to the untranslated string', () => { expect.assertions(2); const commentMap = createCommentMap(incompleteDictDir, incompleteDictDir); expect(commentMap['To be translated one'].spanish).toEqual( 'Spanish translation one' ); expect(commentMap['To be translated two'].spanish).toEqual( 'To be translated two' ); });\n\nit('returns an object with an expected form', () => {\n      expect.assertions(4);\n      const expectedIds = [\n        'To be translated one',\n        'To be translated two',\n        'Not translated one',\n        'Not translated two'\n      ];\n      const map = createCommentMap(dictionaryDir, dictionaryDir);\n      expect(Object.keys(map)).toEqual(expect.arrayContaining(expectedIds));\n\nconst mapValue = map['To be translated one'];\n\nexpect(Object.keys(mapValue)).toEqual(\n        expect.arrayContaining(['chinese', 'spanish'])\n      );\n      expect(typeof mapValue.chinese).toBe('string');\n      expect(typeof mapValue.spanish).toBe('string');\n    });\n\nit('returns an object with expected values', () => {\n      expect.assertions(9);\n      const expectedIds = [\n        'To be translated one',\n        'To be translated two',\n        'Not translated one',\n        'Not translated two'\n      ];\n      const map = createCommentMap(dictionaryDir, dictionaryDir);\n      expect(Object.keys(map)).toEqual(expect.arrayContaining(expectedIds));\n\nconst translatedOne = map['To be translated one'];\n\nexpect(translatedOne.chinese).toBe('Chinese translation one');\n      expect(translatedOne.spanish).toBe('Spanish translation one');\n\nconst translatedTwo = map['To be translated two'];\n\nexpect(translatedTwo.chinese).toBe('Chinese translation two');\n      expect(translatedTwo.spanish).toBe('Spanish translation two');\n\nconst untranslatedOne = map['Not translated one'];",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3925,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.test.js",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5839dfc446f653049dfa124f98d6750a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.test.js",
    "source_type": "git_repo",
    "title": "get-challenges.test",
    "content": "expect(Object.keys(mapValue)).toEqual( expect.arrayContaining(['chinese', 'spanish']) ); expect(typeof mapValue.chinese).toBe('string'); expect(typeof mapValue.spanish).toBe('string'); }); it('returns an object with expected values', () => { expect.assertions(9); const expectedIds = [ 'To be translated one', 'To be translated two', 'Not translated one', 'Not translated two' ]; const map = createCommentMap(dictionaryDir, dictionaryDir); expect(Object.keys(map)).toEqual(expect.arrayContaining(expectedIds)); const translatedOne = map['To be translated one']; expect(translatedOne.chinese).toBe('Chinese translation one'); expect(translatedOne.spanish).toBe('Spanish translation one'); const translatedTwo = map['To be translated two']; expect(translatedTwo.chinese).toBe('Chinese translation two'); expect(translatedTwo.spanish).toBe('Spanish translation two'); const untranslatedOne = map['Not translated one'];\n\nexpect(untranslatedOne.chinese).toBe('Not translated one');\n      expect(untranslatedOne.spanish).toBe('Not translated one');\n\nconst untranslatedTwo = map['Not translated two'];\n\nexpect(untranslatedTwo.chinese).toBe('Not translated two');\n      expect(untranslatedTwo.spanish).toBe('Not translated two');\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3925,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.test.js",
      "source_type": "git_repo"
    },
    "token_count": 266,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "37d4f89243ebb71a2fceb620cfd028d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\lint-localized.js",
    "source_type": "git_repo",
    "title": "lint-localized",
    "content": "var glob = require('glob');\nconst lint = require('../tools/scripts/lint');\nconst { testedLang } = require('./utils');\n\nglob(`challenges/${testedLang()}/**/*.md`, (err, files) => {\n  if (!files.length) throw Error('No files found');\n  files.forEach(file => lint({ path: file }));\n});",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 283,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\lint-localized.js",
      "source_type": "git_repo"
    },
    "token_count": 70,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "20a43fac8f265cb747e4247f36d3aca7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"@freecodecamp/curriculum\",\n  \"version\": \"0 0 0-next 4\",\n  \"description\": \"freeCodeCamp's curriculum seed files\",\n  \"license\": \"BSD-3-Clause\",\n  \"private\": true,\n  \"engines\": {\n    \"node\": \">=16\",\n    \"pnpm\": \">=10\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github com/freeCodeCamp/freeCodeCamp git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github com/freeCodeCamp/freeCodeCamp/issues\"\n  },\n  \"homepage\": \"https://github com/freeCodeCamp/freeCodeCamp#readme\",\n  \"author\": \"freeCodeCamp <team@freecodecamp org>\",\n  \"scripts\": {\n    \"build\": \"tsx --tsconfig /tsconfig json /tools/scripts/build/build-curriculum\",\n    \"create-empty-steps\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/create-empty-steps\",\n    \"create-next-challenge\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/create-next-challenge\",\n    \"create-this-challenge\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/create-this-challenge\",\n    \"create-next-step\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/create-next-step\",\n    \"create-next-task\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/create-next-task\",\n    \"insert-challenge\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/insert-challenge\",\n    \"insert-step\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/insert-step\",\n    \"insert-task\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/insert-task\",\n    \"install-puppeteer\": \"puppeteer browsers install chrome\",\n    \"delete-step\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 3501,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 505,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "573ca587894a255f91f5476a5b28a121",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "org>\", \"scripts\": { \"build\": \"tsx --tsconfig /tsconfig json /tools/scripts/build/build-curriculum\", \"create-empty-steps\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/create-empty-steps\", \"create-next-challenge\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/create-next-challenge\", \"create-this-challenge\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/create-this-challenge\", \"create-next-step\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/create-next-step\", \"create-next-task\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/create-next-task\", \"insert-challenge\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/insert-challenge\", \"insert-step\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/insert-step\", \"insert-task\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/insert-task\", \"install-puppeteer\": \"puppeteer browsers install chrome\", \"delete-step\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json/tools/challenge-helper-scripts/delete-step\",\n    \"delete-challenge\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/delete-challenge\",\n    \"delete-task\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/delete-task\",\n    \"lint\": \"tsx --tsconfig /tsconfig json lint-localized\",\n    \"repair-meta\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/repair-meta\",\n    \"reorder-tasks\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/reorder-tasks\",\n    \"update-challenge-order\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 3501,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 502,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "f63027142089fc4b98f12dc241e24f6a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "--tsconfig /tsconfig json /tools/challenge-helper-scripts/create-next-task\", \"insert-challenge\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/insert-challenge\", \"insert-step\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/insert-step\", \"insert-task\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/insert-task\", \"install-puppeteer\": \"puppeteer browsers install chrome\", \"delete-step\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json/tools/challenge-helper-scripts/delete-step\", \"delete-challenge\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/delete-challenge\", \"delete-task\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/delete-task\", \"lint\": \"tsx --tsconfig /tsconfig json lint-localized\", \"repair-meta\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/repair-meta\", \"reorder-tasks\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/reorder-tasks\", \"update-challenge-order\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json/tools/challenge-helper-scripts/update-challenge-order\",\n    \"update-step-titles\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/update-step-titles\",\n    \"test\": \"NODE_OPTIONS='--max-old-space-size=7168' tsx /node_modules/mocha/bin/mocha js --delay --exit --reporter progress --bail\",\n    \"test:full-output\": \"NODE_OPTIONS='--max-old-space-size=7168' FULL_OUTPUT=true tsx /node_modules/mocha/bin/mocha js --delay --reporter progress\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"7 23 7\",\n    \"@babel/register\": \"7 23 7\",\n    \"@compodoc/live-server\": \"^1 2 3\",\n    \"chai\": \"4 4 1\",\n    \"glob\": \"8 1",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 3501,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 513,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "ce441a60a2440b2dd913cb4d39205baf",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "json /tools/challenge-helper-scripts/delete-task\", \"lint\": \"tsx --tsconfig /tsconfig json lint-localized\", \"repair-meta\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/repair-meta\", \"reorder-tasks\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/reorder-tasks\", \"update-challenge-order\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json/tools/challenge-helper-scripts/update-challenge-order\", \"update-step-titles\": \"CALLING_DIR=$INIT_CWD tsx --tsconfig /tsconfig json /tools/challenge-helper-scripts/update-step-titles\", \"test\": \"NODE_OPTIONS='--max-old-space-size=7168' tsx /node_modules/mocha/bin/mocha js --delay --exit --reporter progress --bail\", \"test:full-output\": \"NODE_OPTIONS='--max-old-space-size=7168' FULL_OUTPUT=true tsx /node_modules/mocha/bin/mocha js --delay --reporter progress\" }, \"devDependencies\": { \"@babel/core\": \"7 23 7\", \"@babel/register\": \"7 23 7\", \"@compodoc/live-server\": \"^1 2 3\", \"chai\": \"4 4 1\", \"glob\": \"8 10\",\n    \"invariant\": \"2 2 4\",\n    \"joi\": \"17 12 2\",\n    \"joi-objectid\": \"3 0 1\",\n    \"js-yaml\": \"4 0 0\",\n    \"jsdom\": \"16 7 0\",\n    \"lodash\": \"4 17 21\",\n    \"mocha\": \"10 3 0\",\n    \"mock-require\": \"3 0 3\",\n    \"ora\": \"5 4 1\",\n    \"puppeteer\": \"22 12 1\",\n    \"readdirp\": \"3 6 0\",\n    \"string-similarity\": \"4 0 4\"\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 3501,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "428399e1128b6b3d4b3c497da7a40262",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\utils.js",
    "source_type": "git_repo",
    "title": "utils",
    "content": "const path = require('path');\nconst {\n  generateSuperBlockList,\n  SuperBlocks,\n  folderToSuperBlockMap\n} = require('../shared/config/curriculum');\n\nrequire('dotenv').config({ path: path.resolve(__dirname, '../.env') });\n\nconst { availableLangs } = require('../shared/config/i18n');\nconst curriculumLangs = availableLangs.curriculum;\n\n// checks that the CURRICULUM_LOCALE exists and is an available language\nexports.testedLang = function testedLang() {\n  if (process.env.CURRICULUM_LOCALE) {\n    if (curriculumLangs.includes(process.env.CURRICULUM_LOCALE)) {\n      return process.env.CURRICULUM_LOCALE;\n    } else {\n      throw Error(`${process.env.CURRICULUM_LOCALE} is not a supported language.\n      Before the site can be built, this language needs to be manually approved`);\n    }\n  } else {\n    throw Error('LOCALE must be set for testing');\n  }\n};\n\nfunction createSuperOrder(superBlocks) {\n  if (!Array.isArray(superBlocks)) {\n    throw Error(`superBlocks must be an Array`);\n  }\n  superBlocks.forEach(superBlock => {\n    if (!Object.values(SuperBlocks).includes(superBlock)) {\n      throw Error(`Invalid superBlock: ${superBlock}`);\n    }\n  });\n\nconst superOrder = {};\n\nsuperBlocks.forEach((superBlock, i) => {\n    superOrder[superBlock] = i;\n  });\n\nreturn superOrder;\n}\n\nconst flatSuperBlockMap = generateSuperBlockList({\n  showUpcomingChanges: process.env.SHOW_UPCOMING_CHANGES === 'true'\n});\nconst superOrder = createSuperOrder(flatSuperBlockMap);\n\n// gets the superOrder of a superBlock from the object created above\nfunction getSuperOrder(superblock) {\n  if (typeof superblock !== 'string')\n    throw Error('superblock must be a string');\n  const order = superOrder[superblock];\n  if (typeof order === 'undefined')\n    throw Error(`${superblock} is not a valid superblock`);\n  return order;\n}\n\nconst directoryToSuperblock = {\n  '00-certifications': 'certifications', // treating certifications as a superblock for simplicity\n  ...folderToSuperBlockMap\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3992,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\utils.js",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "fc27d26f72470f6bc8f513bbfd0c5df3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\utils.js",
    "source_type": "git_repo",
    "title": "utils",
    "content": "superOrder; } const flatSuperBlockMap = generateSuperBlockList({ showUpcomingChanges: process.env.SHOW_UPCOMING_CHANGES === 'true' }); const superOrder = createSuperOrder(flatSuperBlockMap); // gets the superOrder of a superBlock from the object created above function getSuperOrder(superblock) { if (typeof superblock !== 'string') throw Error('superblock must be a string'); const order = superOrder[superblock]; if (typeof order === 'undefined') throw Error(`${superblock} is not a valid superblock`); return order; } const directoryToSuperblock = { '00-certifications': 'certifications', // treating certifications as a superblock for simplicity ...folderToSuperBlockMap };\n\nfunction getSuperBlockFromDir(dir) {\n  const superBlock = directoryToSuperblock[dir];\n  if (!superBlock) throw Error(`${dir} does not map to a superblock`);\n  return directoryToSuperblock[dir];\n}\n\nfunction getChapterFromBlock(blockName, superBlockStructure) {\n  const chapters = superBlockStructure.chapters;\n  const chaptersWithBlocks = chapters.map(chapter => ({\n    ...chapter,\n    blocks: chapter.modules.flatMap(module => module.blocks)\n  }));\n\nconst chapter = chaptersWithBlocks.find(chapter =>\n    chapter.blocks.some(b => b.dashedName === blockName)\n  );\n\nif (!chapter) {\n    throw Error(\n      `There is no chapter corresponding to block \"${blockName}\". It's possible that the block is missing in the superblock structure.`\n    );\n  }\n  return { dashedName: chapter.dashedName, comingSoon: chapter.comingSoon };\n}\n\nfunction getModuleFromBlock(blockName, superBlockStructure) {\n  const modules = superBlockStructure.chapters.flatMap(\n    chapter => chapter.modules\n  );\n  const module = modules.find(module =>\n    module.blocks.some(b => b.dashedName === blockName)\n  );\n  if (!module) {\n    throw Error(\n      `There is no module corresponding to block \"${blockName}\". It's possible that the block is missing in the superblock structure.`\n    );\n  }\n  return { dashedName: module.dashedName, comingSoon: module.comingSoon };\n}\n\nfunction getBlockOrder(blockName, superBlockStructure) {\n  const blocks = superBlockStructure.chapters\n    .flatMap(chapter => chapter.modules)\n    .flatMap(module => module.blocks);",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3992,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\utils.js",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "987fd6b34ebd5cd4025879a4ac698e56",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\utils.js",
    "source_type": "git_repo",
    "title": "utils",
    "content": "chapter.dashedName, comingSoon: chapter.comingSoon }; } function getModuleFromBlock(blockName, superBlockStructure) { const modules = superBlockStructure.chapters.flatMap( chapter => chapter.modules ); const module = modules.find(module => module.blocks.some(b => b.dashedName === blockName) ); if (!module) { throw Error( `There is no module corresponding to block \"${blockName}\". It's possible that the block is missing in the superblock structure.` ); } return { dashedName: module.dashedName, comingSoon: module.comingSoon }; } function getBlockOrder(blockName, superBlockStructure) { const blocks = superBlockStructure.chapters .flatMap(chapter => chapter.modules) .flatMap(module => module.blocks);\n\nconst index = blocks.findIndex(block => block.dashedName === blockName);\n\nif (index === -1)\n    throw Error(\n      `The block \"${blockName}\" does not appear in the superblock structure.`\n    );\n\nreturn index;\n}\nexports.createSuperOrder = createSuperOrder;\nexports.getSuperOrder = getSuperOrder;\nexports.getSuperBlockFromDir = getSuperBlockFromDir;\nexports.getChapterFromBlock = getChapterFromBlock;\nexports.getModuleFromBlock = getModuleFromBlock;\nexports.getBlockOrder = getBlockOrder;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 3992,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\utils.js",
      "source_type": "git_repo"
    },
    "token_count": 264,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "4d616b824a1c526d708004b024d15ae2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
    "source_type": "git_repo",
    "title": "get-challenges",
    "content": "const fs = require('fs');\nconst path = require('path');\nconst util = require('util');\nconst yaml = require('js-yaml');\nconst { findIndex } = require('lodash');\nconst readDirP = require('readdirp');\nconst stringSimilarity = require('string-similarity');\n\nconst { curriculum: curriculumLangs } =\n  require('../shared/config/i18n').availableLangs;\nconst { parseMD } = require('../tools/challenge-parser/parser');\n\nconst {\n  translateCommentsInChallenge\n} = require('../tools/challenge-parser/translation-parser');\n\nconst { isAuditedSuperBlock } = require('../shared/utils/is-audited');\nconst { createPoly } = require('../shared/utils/polyvinyl');\nconst { chapterBasedSuperBlocks } = require('../shared/config/curriculum');\nconst {\n  getSuperOrder,\n  getSuperBlockFromDir,\n  getChapterFromBlock,\n  getModuleFromBlock,\n  getBlockOrder\n} = require('./utils');\nconst { metaSchemaValidator } = require('./schema/meta-schema');\nconst {\n  assertSuperBlockStructure\n} = require('./schema/superblock-structure-schema');\n\nconst fullStackSuperBlockStructure = require('./superblock-structure/full-stack.json');\n\nassertSuperBlockStructure(fullStackSuperBlockStructure);\n\nconst access = util.promisify(fs.access);\n\nconst ENGLISH_CHALLENGES_DIR = path.resolve(__dirname, 'challenges');\nconst ENGLISH_DICTIONARIES_DIR = path.resolve(__dirname, 'dictionaries');\nconst META_DIR = path.resolve(ENGLISH_CHALLENGES_DIR, '_meta');\n\n// This is to allow English to build without having to download the i18n files.\n// It fails when trying to resolve the i18n-curriculum path if they don't exist.\nconst curriculumLocale = process.env.CURRICULUM_LOCALE ?? 'english';\nconst I18N_CURRICULUM_DIR = path.resolve(\n  __dirname,\n  curriculumLocale === 'english' ? '.' : 'i18n-curriculum/curriculum'\n);\n\nconst I18N_CHALLENGES_DIR = path.resolve(I18N_CURRICULUM_DIR, 'challenges');\nconst I18N_DICTIONARIES_DIR = path.resolve(I18N_CURRICULUM_DIR, 'dictionaries');",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 17770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 0,
    "total_chunks": 14
  },
  {
    "id": "63c2c9a8f075b248f266e25234f7a396",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
    "source_type": "git_repo",
    "title": "get-challenges",
    "content": "access = util.promisify(fs.access); const ENGLISH_CHALLENGES_DIR = path.resolve(__dirname, 'challenges'); const ENGLISH_DICTIONARIES_DIR = path.resolve(__dirname, 'dictionaries'); const META_DIR = path.resolve(ENGLISH_CHALLENGES_DIR, '_meta'); // This is to allow English to build without having to download the i18n files. // It fails when trying to resolve the i18n-curriculum path if they don't exist. const curriculumLocale = process.env.CURRICULUM_LOCALE ?? 'english'; const I18N_CURRICULUM_DIR = path.resolve( __dirname, curriculumLocale === 'english' ? '.' : 'i18n-curriculum/curriculum' ); const I18N_CHALLENGES_DIR = path.resolve(I18N_CURRICULUM_DIR, 'challenges'); const I18N_DICTIONARIES_DIR = path.resolve(I18N_CURRICULUM_DIR, 'dictionaries');\n\nexports.ENGLISH_CHALLENGES_DIR = ENGLISH_CHALLENGES_DIR;\nexports.META_DIR = META_DIR;\nexports.I18N_CHALLENGES_DIR = I18N_CHALLENGES_DIR;\n\nconst COMMENT_TRANSLATIONS = createCommentMap(\n  I18N_DICTIONARIES_DIR,\n  ENGLISH_DICTIONARIES_DIR\n);\n\nfunction createCommentMap(dictionariesDir, englishDictionariesDir) {\n  const languages = fs.readdirSync(dictionariesDir);\n\n// get all their dictionaries\n  const dictionaries = languages.reduce(\n    (acc, lang) => ({\n      ...acc,\n      [lang]: require(path.resolve(dictionariesDir, lang, 'comments.json'))\n    }),\n    {}\n  );\n\n// get the english dicts\n  const COMMENTS_TO_TRANSLATE = require(\n    path.resolve(englishDictionariesDir, 'english', 'comments.json')\n  );\n\nconst COMMENTS_TO_NOT_TRANSLATE = require(\n    path.resolve(\n      englishDictionariesDir,\n      'english',\n      'comments-to-not-translate.json'\n    )\n  );\n\n// map from english comment text to translations\n  const translatedCommentMap = Object.entries(COMMENTS_TO_TRANSLATE).reduce(\n    (acc, [id, text]) => {\n      return {\n        ...acc,\n        [text]: getTranslationEntry(dictionaries, { engId: id, text })\n      };\n    },\n    {}\n  );",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 17770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 1,
    "total_chunks": 14
  },
  {
    "id": "f03114b90ce875a990fab7c648b14442",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
    "source_type": "git_repo",
    "title": "get-challenges",
    "content": "fs.readdirSync(dictionariesDir); // get all their dictionaries const dictionaries = languages.reduce( (acc, lang) => ({ ...acc, [lang]: require(path.resolve(dictionariesDir, lang, 'comments.json')) }), {} ); // get the english dicts const COMMENTS_TO_TRANSLATE = require( path.resolve(englishDictionariesDir, 'english', 'comments.json') ); const COMMENTS_TO_NOT_TRANSLATE = require( path.resolve( englishDictionariesDir, 'english', 'comments-to-not-translate.json' ) ); // map from english comment text to translations const translatedCommentMap = Object.entries(COMMENTS_TO_TRANSLATE).reduce( (acc, [id, text]) => { return { ...acc, [text]: getTranslationEntry(dictionaries, { engId: id, text }) }; }, {} );\n\n// map from english comment text to itself\n  const untranslatableCommentMap = Object.values(\n    COMMENTS_TO_NOT_TRANSLATE\n  ).reduce((acc, text) => {\n    const englishEntry = languages.reduce(\n      (acc, lang) => ({\n        ...acc,\n        [lang]: text\n      }),\n      {}\n    );\n    return {\n      ...acc,\n      [text]: englishEntry\n    };\n  }, {});\n\nconst allComments = { ...translatedCommentMap, ...untranslatableCommentMap };\n\n// the english entries need to be added here, because english is not in\n  // languages\n  Object.keys(allComments).forEach(comment => {\n    allComments[comment].english = comment;\n  });\n\nreturn allComments;\n}\n\nexports.createCommentMap = createCommentMap;\n\nfunction getTranslationEntry(dicts, { engId, text }) {\n  return Object.keys(dicts).reduce((acc, lang) => {\n    const entry = dicts[lang][engId];\n    if (entry) {\n      return { ...acc, [lang]: entry };\n    } else {\n      // default to english\n      return { ...acc, [lang]: text };\n    }\n  }, {});\n}\n\nfunction getChallengesDirForLang(lang) {\n  if (lang === 'english') {\n    return path.resolve(ENGLISH_CHALLENGES_DIR, `${lang}`);\n  } else {\n    return path.resolve(I18N_CHALLENGES_DIR, `${lang}`);\n  }\n}",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 17770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 2,
    "total_chunks": 14
  },
  {
    "id": "86b301a0cb78cd46688707f50a5d253a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
    "source_type": "git_repo",
    "title": "get-challenges",
    "content": "// languages Object.keys(allComments).forEach(comment => { allComments[comment].english = comment; }); return allComments; } exports.createCommentMap = createCommentMap; function getTranslationEntry(dicts, { engId, text }) { return Object.keys(dicts).reduce((acc, lang) => { const entry = dicts[lang][engId]; if (entry) { return { ...acc, [lang]: entry }; } else { // default to english return { ...acc, [lang]: text }; } }, {}); } function getChallengesDirForLang(lang) { if (lang === 'english') { return path.resolve(ENGLISH_CHALLENGES_DIR, `${lang}`); } else { return path.resolve(I18N_CHALLENGES_DIR, `${lang}`); } }\n\nfunction getMetaForBlock(block) {\n  return JSON.parse(\n    fs.readFileSync(path.resolve(META_DIR, `${block}/meta.json`), 'utf8')\n  );\n}\n\nfunction parseCert(filePath) {\n  return yaml.load(fs.readFileSync(filePath, 'utf8'));\n}\n\nexports.getChallengesDirForLang = getChallengesDirForLang;\nexports.getMetaForBlock = getMetaForBlock;\n\n// This recursively walks the directories starting at root, and calls cb for\n// each file/directory and only resolves once all the callbacks do.\nconst walk = (root, target, options, cb) => {\n  return new Promise(resolve => {\n    let running = 1;\n    function done() {\n      if (--running === 0) {\n        resolve(target);\n      }\n    }\n    readDirP(root, options)\n      .on('data', file => {\n        running++;\n        cb(file, target).then(done);\n      })\n      .on('end', done);\n  });\n};",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 17770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
      "source_type": "git_repo"
    },
    "token_count": 365,
    "chunk_index": 3,
    "total_chunks": 14
  },
  {
    "id": "cc9b1e7e203a50a6a4cb9ac78335ad29",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
    "source_type": "git_repo",
    "title": "get-challenges",
    "content": "yaml.load(fs.readFileSync(filePath, 'utf8')); } exports.getChallengesDirForLang = getChallengesDirForLang; exports.getMetaForBlock = getMetaForBlock; // This recursively walks the directories starting at root, and calls cb for // each file/directory and only resolves once all the callbacks do. const walk = (root, target, options, cb) => { return new Promise(resolve => { let running = 1; function done() { if (--running === 0) { resolve(target); } } readDirP(root, options) .on('data', file => { running++; cb(file, target).then(done); }) .on('end', done); }); };\n\nexports.getChallengesForLang = async function getChallengesForLang(\n  lang,\n  filters\n) {\n  const invalidLang = !curriculumLangs.includes(lang);\n  if (invalidLang)\n    throw Error(`${lang} is not a accepted language.\nAccepted languages are ${curriculumLangs.join(', ')}`);\n  // english determines the shape of the curriculum, all other languages mirror\n  // it.\n  const root = getChallengesDirForLang('english');\n  // scaffold the curriculum, first set up the superblocks, then recurse into\n  // the blocks\n  const curriculum = await walk(\n    root,\n    {},\n    { type: 'directories', depth: 0 },\n    buildSuperBlocks\n  );\n\nconst superBlocks = Object.keys(curriculum);\n  const blocksWithParent = Object.entries(curriculum).flatMap(\n    ([key, superBlock]) => {\n      const blocks = Object.entries(superBlock.blocks);\n      return blocks.map(([block, blockData]) => ({\n        block,\n        blockData,\n        superBlock: key\n      }));\n    }\n  );\n\nconst blocks = blocksWithParent.map(({ block }) => block);\n\nlet filteredCurriculum = curriculum;\n  const updatedFilters = { ...filters };\n  if (filters?.superBlock) {\n    const target = stringSimilarity.findBestMatch(\n      filters.superBlock,\n      superBlocks\n    ).bestMatch.target;\n\nconsole.log('superBlock being tested:', target);\n\nfilteredCurriculum = {\n      [target]: curriculum[target]\n    };\n    updatedFilters.superBlock = target;\n  } else if (filters?.block) {\n    const target = stringSimilarity.findBestMatch(filters.block, blocks)\n      .bestMatch.target;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 17770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 14
  },
  {
    "id": "f4a469d81ffe1a871264f69773dab26d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
    "source_type": "git_repo",
    "title": "get-challenges",
    "content": "const blocksWithParent = Object.entries(curriculum).flatMap( ([key, superBlock]) => { const blocks = Object.entries(superBlock.blocks); return blocks.map(([block, blockData]) => ({ block, blockData, superBlock: key })); } ); const blocks = blocksWithParent.map(({ block }) => block); let filteredCurriculum = curriculum; const updatedFilters = { ...filters }; if (filters?.superBlock) { const target = stringSimilarity.findBestMatch( filters.superBlock, superBlocks ).bestMatch.target; console.log('superBlock being tested:', target); filteredCurriculum = { [target]: curriculum[target] }; updatedFilters.superBlock = target; } else if (filters?.block) { const target = stringSimilarity.findBestMatch(filters.block, blocks) .bestMatch.target;\n\nconsole.log('block being tested:', target);\n    const targetBlock = blocksWithParent.find(({ block }) => block === target);\n\nfilteredCurriculum = {\n      [targetBlock.superBlock]: {\n        blocks: {\n          [targetBlock.block]: targetBlock.blockData\n        }\n      }\n    };\n    updatedFilters.block = targetBlock.block;\n  } else if (filters?.challengeId) {\n    const blocksWithMeta = blocksWithParent.filter(\n      ({ blockData }) => blockData.meta\n    );\n    const container = blocksWithMeta.filter(({ blockData }) => {\n      return blockData.meta.challengeOrder.some(\n        ({ id }) => id === filters.challengeId\n      );\n    });\n\nif (container.length === 0) {\n      throw new Error(`No block found with challengeId ${filters.challengeId}`);\n    }\n    if (container.length > 1) {\n      throw new Error(\n        `Multiple blocks found with challengeId ${filters.challengeId}`\n      );\n    }\n    const targetBlock = container[0];\n    filteredCurriculum = {\n      [targetBlock.superBlock]: {\n        blocks: {\n          [targetBlock.block]: targetBlock.blockData\n        }\n      }\n    };\n    updatedFilters.block = targetBlock.block;\n    updatedFilters.superBlock = targetBlock.superBlock;\n  }",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 17770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 5,
    "total_chunks": 14
  },
  {
    "id": "a307b455f52b170024373ab3cd416791",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
    "source_type": "git_repo",
    "title": "get-challenges",
    "content": "}) => blockData.meta ); const container = blocksWithMeta.filter(({ blockData }) => { return blockData.meta.challengeOrder.some( ({ id }) => id === filters.challengeId ); }); if (container.length === 0) { throw new Error(`No block found with challengeId ${filters.challengeId}`); } if (container.length > 1) { throw new Error( `Multiple blocks found with challengeId ${filters.challengeId}` ); } const targetBlock = container[0]; filteredCurriculum = { [targetBlock.superBlock]: { blocks: { [targetBlock.block]: targetBlock.blockData } } }; updatedFilters.block = targetBlock.block; updatedFilters.superBlock = targetBlock.superBlock; }\n\nconst cb = (file, curriculum) =>\n    buildChallenges(file, curriculum, lang, updatedFilters);\n  // fill the scaffold with the challenges\n  return walk(\n    root,\n    filteredCurriculum,\n    { type: 'files', fileFilter: ['*.md', '*.yml'] },\n    cb\n  );\n};\n\nasync function buildBlocks(file, curriculum, superBlock) {\n  const { basename: blockName } = file;\n  const metaPath = path.resolve(META_DIR, `${blockName}/meta.json`);\n  const isCertification = !fs.existsSync(metaPath);\n  const isEmptyDir = fs.readdirSync(file.fullPath).length === 0;\n  if (isEmptyDir) {\n    throw Error(\n      `Block directory, ${file.fullPath}, is empty.\nIf this block should exist, please add challenge files to it.\nIf this block should not exist, please remove the directory.`\n    );\n  }\n  if (isCertification && superBlock !== 'certifications') {\n    throw Error(\n      `superblock ${superBlock} is missing meta.json for ${blockName}`\n    );\n  }\n\nif (isCertification) {\n    curriculum['certifications'].blocks[blockName] = { challenges: [] };\n  } else {\n    const blockMeta = JSON.parse(fs.readFileSync(metaPath));\n\nconst validateMeta = metaSchemaValidator(blockMeta);\n    if (validateMeta.error) {\n      throw Error(\n        `${validateMeta.error} in meta.json for block '${blockName}'`\n      );\n    }\n\nconst { isUpcomingChange } = blockMeta;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 17770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 6,
    "total_chunks": 14
  },
  {
    "id": "f66f9741334df7f47f947d85a3771e4a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
    "source_type": "git_repo",
    "title": "get-challenges",
    "content": "exist, please add challenge files to it. If this block should not exist, please remove the directory.` ); } if (isCertification && superBlock !== 'certifications') { throw Error( `superblock ${superBlock} is missing meta.json for ${blockName}` ); } if (isCertification) { curriculum['certifications'].blocks[blockName] = { challenges: [] }; } else { const blockMeta = JSON.parse(fs.readFileSync(metaPath)); const validateMeta = metaSchemaValidator(blockMeta); if (validateMeta.error) { throw Error( `${validateMeta.error} in meta.json for block '${blockName}'` ); } const { isUpcomingChange } = blockMeta;\n\nif (!isUpcomingChange || process.env.SHOW_UPCOMING_CHANGES === 'true') {\n      // add the block to the superBlock\n      const blockInfo = { meta: blockMeta, challenges: [] };\n      curriculum[superBlock].blocks[blockName] = blockInfo;\n    }\n  }\n}\n\nasync function buildSuperBlocks({ path, fullPath }, curriculum) {\n  const superBlock = getSuperBlockFromDir(getBaseDir(path));\n  curriculum[superBlock] = { blocks: {} };\n\nconst cb = (file, curriculum) => buildBlocks(file, curriculum, superBlock);\n  return walk(fullPath, curriculum, { depth: 1, type: 'directories' }, cb);\n}\n\nasync function buildChallenges({ path: filePath }, curriculum, lang, filters) {\n  // path is relative to getChallengesDirForLang(lang)\n  const block = getBlockNameFromPath(filePath);\n  if (filters?.block && block !== filters.block) {\n    return;\n  }\n  const superBlockDir = getBaseDir(filePath);\n  const superBlock = getSuperBlockFromDir(superBlockDir);\n  if (filters?.superBlock && superBlock !== filters.superBlock) {\n    return;\n  }\n  let challengeBlock;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 17770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
      "source_type": "git_repo"
    },
    "token_count": 399,
    "chunk_index": 7,
    "total_chunks": 14
  },
  {
    "id": "e9a281b822abcb8bf97a932616cbd86d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
    "source_type": "git_repo",
    "title": "get-challenges",
    "content": "= getSuperBlockFromDir(getBaseDir(path)); curriculum[superBlock] = { blocks: {} }; const cb = (file, curriculum) => buildBlocks(file, curriculum, superBlock); return walk(fullPath, curriculum, { depth: 1, type: 'directories' }, cb); } async function buildChallenges({ path: filePath }, curriculum, lang, filters) { // path is relative to getChallengesDirForLang(lang) const block = getBlockNameFromPath(filePath); if (filters?.block && block !== filters.block) { return; } const superBlockDir = getBaseDir(filePath); const superBlock = getSuperBlockFromDir(superBlockDir); if (filters?.superBlock && superBlock !== filters.superBlock) { return; } let challengeBlock;\n\n// TODO: this try block and process exit can all go once errors terminate the\n  // tests correctly.\n  try {\n    challengeBlock = curriculum[superBlock].blocks[block];\n    if (!challengeBlock) {\n      // this should only happen when a isUpcomingChange block is skipped\n      return;\n    }\n  } catch (e) {\n    console.error(e);\n    console.log(`failed to create superBlock from ${superBlockDir}`);\n    process.exit(1);\n  }\n  const { meta } = challengeBlock;\n  const isCert = path.extname(filePath) === '.yml';\n  const englishPath = path.resolve(\n    __dirname,\n    ENGLISH_CHALLENGES_DIR,\n    'english',\n    filePath\n  );\n  const i18nPath = path.resolve(__dirname, I18N_CHALLENGES_DIR, lang, filePath);\n  const createChallenge = generateChallengeCreator(lang, englishPath, i18nPath);\n\nawait assertHasEnglishSource(filePath, lang, englishPath);\n  const challenge = isCert\n    ? await parseCert(englishPath)\n    : await createChallenge(filePath, meta);\n\n// this builds the entire block, even if we only want one challenge, which is\n  // inefficient, but finding the next challenge without building the whole\n  // block is fiddly.\n  challengeBlock.challenges = [...challengeBlock.challenges, challenge];\n}",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 17770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 8,
    "total_chunks": 14
  },
  {
    "id": "f7acd97f220d2d44fd3687a5c4e9a547",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
    "source_type": "git_repo",
    "title": "get-challenges",
    "content": "= path.extname(filePath) === '.yml'; const englishPath = path.resolve( __dirname, ENGLISH_CHALLENGES_DIR, 'english', filePath ); const i18nPath = path.resolve(__dirname, I18N_CHALLENGES_DIR, lang, filePath); const createChallenge = generateChallengeCreator(lang, englishPath, i18nPath); await assertHasEnglishSource(filePath, lang, englishPath); const challenge = isCert ? await parseCert(englishPath) : await createChallenge(filePath, meta); // this builds the entire block, even if we only want one challenge, which is // inefficient, but finding the next challenge without building the whole // block is fiddly. challengeBlock.challenges = [...challengeBlock.challenges, challenge]; }\n\n// This is a slightly weird abstraction, but it lets us define helper functions\n// without passing around a ton of arguments.\nfunction generateChallengeCreator(lang, englishPath, i18nPath) {\n  function addMetaToChallenge(challenge, meta) {\n    function addChapterAndModuleToChallenge(challenge) {\n      if (chapterBasedSuperBlocks.includes(challenge.superBlock)) {\n        const chapter = getChapterFromBlock(\n          challenge.block,\n          fullStackSuperBlockStructure\n        );\n\nif (!meta.isUpcomingChange && chapter.comingSoon) {\n          throw Error(\n            `The '${chapter.dashedName}' chapter is 'comingSoon', but its '${meta.dashedName}' block is not hidden. Set 'isUpcomingChange' to 'true' in the 'meta.json' for the block to hide it.`\n          );\n        }\n\nchallenge.chapter = chapter.dashedName;\n\nconst module = getModuleFromBlock(\n          challenge.block,\n          fullStackSuperBlockStructure\n        );\n\nif (!meta.isUpcomingChange && module.comingSoon) {\n          throw Error(\n            `The '${chapter.dashedName}' module is 'comingSoon', but its '${meta.dashedName}' block is not hidden. Set 'isUpcomingChange' to 'true' in the 'meta.json' for the block to hide it.`\n          );\n        }\n\nchallenge.module = module.dashedName;\n      }\n    }\n    const challengeOrder = findIndex(\n      meta.challengeOrder,\n      ({ id }) => id === challenge.id\n    );\n\nconst isLastChallengeInBlock =\n      meta.challengeOrder.length - 1 === challengeOrder;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 17770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 9,
    "total_chunks": 14
  },
  {
    "id": "6bb487bf6f7b221c449cad43792bfee5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
    "source_type": "git_repo",
    "title": "get-challenges",
    "content": "block to hide it.` ); } challenge.chapter = chapter.dashedName; const module = getModuleFromBlock( challenge.block, fullStackSuperBlockStructure ); if (!meta.isUpcomingChange && module.comingSoon) { throw Error( `The '${chapter.dashedName}' module is 'comingSoon', but its '${meta.dashedName}' block is not hidden. Set 'isUpcomingChange' to 'true' in the 'meta.json' for the block to hide it.` ); } challenge.module = module.dashedName; } } const challengeOrder = findIndex( meta.challengeOrder, ({ id }) => id === challenge.id ); const isLastChallengeInBlock = meta.challengeOrder.length - 1 === challengeOrder;\n\nconst isObjectIdFilename = /\\/[a-z0-9]{24}\\.md$/.test(englishPath);\n    if (isObjectIdFilename) {\n      const filename = englishPath.split('/').pop();\n      if (filename !== `${challenge.id}.md`) {\n        throw Error(\n          `Filename matches MongoDB ObjectID pattern, but ${filename} does not match challenge id ${challenge.id}`\n        );\n      }\n    }\n\nchallenge.block = meta.dashedName;\n    challenge.blockType = meta.blockType;\n    challenge.blockLayout = meta.blockLayout;\n    challenge.hasEditableBoundaries = !!meta.hasEditableBoundaries;\n    challenge.order = chapterBasedSuperBlocks.includes(meta.superBlock)\n      ? getBlockOrder(meta.dashedName, fullStackSuperBlockStructure)\n      : meta.order;\n\nif (!challenge.description) challenge.description = '';\n    if (!challenge.instructions) challenge.instructions = '';\n    if (!challenge.questions) challenge.questions = [];",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 17770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
      "source_type": "git_repo"
    },
    "token_count": 343,
    "chunk_index": 10,
    "total_chunks": 14
  },
  {
    "id": "3da2e967e1b6422dced1a45ef5a59717",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
    "source_type": "git_repo",
    "title": "get-challenges",
    "content": "isLastChallengeInBlock = meta.challengeOrder.length - 1 === challengeOrder; const isObjectIdFilename = /\\/[a-z0-9]{24}\\.md$/.test(englishPath); if (isObjectIdFilename) { const filename = englishPath.split('/').pop(); if (filename !== `${challenge.id}.md`) { throw Error( `Filename matches MongoDB ObjectID pattern, but ${filename} does not match challenge id ${challenge.id}` ); } } challenge.block = meta.dashedName; challenge.blockType = meta.blockType; challenge.blockLayout = meta.blockLayout; challenge.hasEditableBoundaries = !!meta.hasEditableBoundaries; challenge.order = chapterBasedSuperBlocks.includes(meta.superBlock) ? getBlockOrder(meta.dashedName, fullStackSuperBlockStructure) : meta.order; if (!challenge.description) challenge.description = ''; if (!challenge.instructions) challenge.instructions = ''; if (!challenge.questions) challenge.questions = [];\n\n// const superOrder = getSuperOrder(meta.superBlock);\n    // NOTE: Use this version when a super block is in beta.\n    const superOrder = getSuperOrder(meta.superBlock);\n    if (superOrder !== null) challenge.superOrder = superOrder;\n    /* Since there can be more than one way to complete a certification (using the\n   legacy curriculum or the new one, for instance), we need a certification\n   field to track which certification this belongs to. */\n    const dupeCertifications = [\n      {\n        certification: 'responsive-web-design',\n        dupe: '2022/responsive-web-design'\n      }\n    ];\n    const hasDupe = dupeCertifications.find(\n      cert => cert.dupe === meta.superBlock\n    );\n    challenge.certification = hasDupe ? hasDupe.certification : meta.superBlock;\n    challenge.superBlock = meta.superBlock;\n    challenge.challengeOrder = challengeOrder;\n    challenge.isLastChallengeInBlock = isLastChallengeInBlock;\n    challenge.isPrivate = challenge.isPrivate || meta.isPrivate;\n    challenge.required = (meta.required || []).concat(challenge.required || []);\n    challenge.template = meta.template;\n    challenge.helpCategory = challenge.helpCategory || meta.helpCategory;\n    challenge.usesMultifileEditor = !!meta.usesMultifileEditor;\n    challenge.disableLoopProtectTests = !!meta.disableLoopProtectTests;\n    challenge.disableLoopProtectPreview = !!meta.disableLoopProtectPreview;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 17770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 11,
    "total_chunks": 14
  },
  {
    "id": "ed4f42c8e08778d2154fb906abf14856",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
    "source_type": "git_repo",
    "title": "get-challenges",
    "content": "certification field to track which certification this belongs to. */ const dupeCertifications = [ { certification: 'responsive-web-design', dupe: '2022/responsive-web-design' } ]; const hasDupe = dupeCertifications.find( cert => cert.dupe === meta.superBlock ); challenge.certification = hasDupe ? hasDupe.certification : meta.superBlock; challenge.superBlock = meta.superBlock; challenge.challengeOrder = challengeOrder; challenge.isLastChallengeInBlock = isLastChallengeInBlock; challenge.isPrivate = challenge.isPrivate || meta.isPrivate; challenge.required = (meta.required || []).concat(challenge.required || []); challenge.template = meta.template; challenge.helpCategory = challenge.helpCategory || meta.helpCategory; challenge.usesMultifileEditor = !!meta.usesMultifileEditor; challenge.disableLoopProtectTests = !!meta.disableLoopProtectTests; challenge.disableLoopProtectPreview = !!meta.disableLoopProtectPreview;\n\naddChapterAndModuleToChallenge(challenge);\n  }\n\nfunction fixChallengeProperties(challenge) {\n    if (challenge.challengeFiles) {\n      // The client expects the challengeFiles to be an array of polyvinyls\n      challenge.challengeFiles = challengeFilesToPolys(\n        challenge.challengeFiles\n      );\n    }\n    if (challenge.solutions?.length) {\n      // The test runner needs the solutions to be arrays of polyvinyls so it\n      // can sort them correctly.\n      challenge.solutions = challenge.solutions.map(challengeFilesToPolys);\n    }\n  }\n\nasync function createChallenge(filePath, maybeMeta) {\n    const meta = maybeMeta\n      ? maybeMeta\n      : require(\n          path.resolve(META_DIR, `${getBlockNameFromPath(filePath)}/meta.json`)\n        );\n\nconst isAudited = isAuditedSuperBlock(lang, meta.superBlock);\n\n// If we can use the language, do so. Otherwise, default to english.\n    const langUsed = isAudited && fs.existsSync(i18nPath) ? lang : 'english';\n\nconst challenge = translateCommentsInChallenge(\n      await parseMD(langUsed === 'english' ? englishPath : i18nPath),\n      langUsed,\n      COMMENT_TRANSLATIONS\n    );\n    challenge.translationPending = lang !== 'english' && !isAudited;\n    addMetaToChallenge(challenge, meta);\n    fixChallengeProperties(challenge);",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 17770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 12,
    "total_chunks": 14
  },
  {
    "id": "dcc0f78f602e74016554e5eb9c5dadf4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
    "source_type": "git_repo",
    "title": "get-challenges",
    "content": "them correctly. challenge.solutions = challenge.solutions.map(challengeFilesToPolys); } } async function createChallenge(filePath, maybeMeta) { const meta = maybeMeta ? maybeMeta : require( path.resolve(META_DIR, `${getBlockNameFromPath(filePath)}/meta.json`) ); const isAudited = isAuditedSuperBlock(lang, meta.superBlock); // If we can use the language, do so. Otherwise, default to english. const langUsed = isAudited && fs.existsSync(i18nPath) ? lang : 'english'; const challenge = translateCommentsInChallenge( await parseMD(langUsed === 'english' ? englishPath : i18nPath), langUsed, COMMENT_TRANSLATIONS ); challenge.translationPending = lang !== 'english' && !isAudited; addMetaToChallenge(challenge, meta); fixChallengeProperties(challenge);\n\nreturn challenge;\n  }\n  return createChallenge;\n}\n\nfunction challengeFilesToPolys(files) {\n  return files.reduce((challengeFiles, challengeFile) => {\n    return [\n      ...challengeFiles,\n      {\n        ...createPoly(challengeFile),\n        seed: challengeFile.contents.slice(0)\n      }\n    ];\n  }, []);\n}\n\nasync function assertHasEnglishSource(filePath, lang, englishPath) {\n  const missingEnglish =\n    lang !== 'english' &&\n    !(await hasEnglishSource(ENGLISH_CHALLENGES_DIR, filePath));\n  if (missingEnglish)\n    throw Error(`Missing English challenge for\n${filePath}\nIt should be in\n${englishPath}\n`);\n}\n\nasync function hasEnglishSource(basePath, translationPath) {\n  const englishRoot = path.resolve(__dirname, basePath, 'english');\n  return await access(\n    path.join(englishRoot, translationPath),\n    fs.constants.F_OK\n  )\n    .then(() => true)\n    .catch(() => false);\n}\n\nfunction getBaseDir(filePath) {\n  const [baseDir] = filePath.split(path.sep);\n  return baseDir;\n}\n\nfunction getBlockNameFromPath(filePath) {\n  const [, block] = filePath.split(path.sep);\n  return block;\n}\n\nexports.hasEnglishSource = hasEnglishSource;\nexports.generateChallengeCreator = generateChallengeCreator;",
    "metadata": {
      "file_extension": ".js",
      "file_type": "javascript",
      "file_size": 17770,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\get-challenges.js",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 13,
    "total_chunks": 14
  },
  {
    "id": "30e756e449817ff12de9907c26434a0f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\academic-honesty.spec.ts",
    "source_type": "git_repo",
    "title": "academic-honesty.spec",
    "content": "import { execSync } from 'child_process';\nimport { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { alertToBeVisible } from './utils/alerts';\n\ntest.describe('When the user has not accepted the Academic Honesty Policy', () => {\n  test.use({ storageState: 'playwright/.auth/development-user.json' });\n\ntest.beforeEach(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user');\n  });\n\ntest.afterAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n  });\n\ntest('they should be able to accept it', async ({ page }) => {\n    await page.goto('/settings');\n    await expect(\n      page.getByRole('heading', {\n        name: translations.settings.headings.honesty\n      })\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.settings.honesty.p1)\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.settings.honesty.p2)\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.settings.honesty.p3)\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.settings.honesty.p4)\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.settings.honesty.p5)\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.settings.honesty.p6)\n    ).toBeVisible();\n    const agreeButton = page.getByRole('button', {\n      name: translations.buttons['agree-honesty']\n    });\n    await agreeButton.click();\n\nawait expect(\n      page.getByRole('button', {\n        name: translations.buttons['accepted-honesty']\n      })\n    ).toBeVisible();\n  });\n\ntest('Should show an error message', async ({ page }) => {\n    await page.goto('/settings#cert-responsive-web-design');\n\nconst claimCertButton = page.getByRole('button', {\n      name: 'Claim Certification Responsive Web Design'\n    });\n    await claimCertButton.click();\n\nawait alertToBeVisible(page, translations.flash['honest-first']);\n\nconst agreeButton = page.getByRole('button', {\n      name: translations.buttons['agree-honesty']\n    });\n    await agreeButton.click();\n    await alertToBeVisible(page, translations.buttons['accepted-honesty']);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2495,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\academic-honesty.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0f84c937770aa46ba4c42866522f7466",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\academic-honesty.spec.ts",
    "source_type": "git_repo",
    "title": "academic-honesty.spec",
    "content": "page.getByText(translations.settings.honesty.p3) ).toBeVisible(); await expect( page.getByText(translations.settings.honesty.p4) ).toBeVisible(); await expect( page.getByText(translations.settings.honesty.p5) ).toBeVisible(); await expect( page.getByText(translations.settings.honesty.p6) ).toBeVisible(); const agreeButton = page.getByRole('button', { name: translations.buttons['agree-honesty'] }); await agreeButton.click(); await expect( page.getByRole('button', { name: translations.buttons['accepted-honesty'] }) ).toBeVisible(); }); test('Should show an error message', async ({ page }) => { await page.goto('/settings#cert-responsive-web-design'); const claimCertButton = page.getByRole('button', { name: 'Claim Certification Responsive Web Design' }); await claimCertButton.click(); await alertToBeVisible(page, translations.flash['honest-first']); const agreeButton = page.getByRole('button', { name: translations.buttons['agree-honesty'] }); await agreeButton.click(); await alertToBeVisible(page, translations.buttons['accepted-honesty']);\n\nawait page.reload();\n\nawait claimCertButton.click();\n\nawait alertToBeVisible(\n      page,\n      'It looks like you have not completed the necessary steps. Please complete the required projects to claim the Responsive Web Design Certification.'\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2495,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\academic-honesty.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 285,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "333ce50e2a14c68e0186f95f05326227",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "import fs from 'fs';\nimport path from 'path';\nimport { config } from 'dotenv';\nimport { SuperBlocks } from '../shared/config/curriculum';\nimport {\n  createSuperOrder,\n  getSuperOrder,\n  getSuperBlockFromDir,\n  getChapterFromBlock,\n  getModuleFromBlock,\n  getBlockOrder\n} from './utils';\n\nconfig({ path: path.resolve(__dirname, '../.env') });\n\nconst mockSuperBlocks = [\n  SuperBlocks.RespWebDesignNew,\n  SuperBlocks.JsAlgoDataStructNew,\n  SuperBlocks.FrontEndDevLibs,\n  SuperBlocks.DataVis,\n  SuperBlocks.RelationalDb,\n  SuperBlocks.BackEndDevApis,\n  SuperBlocks.QualityAssurance,\n  SuperBlocks.SciCompPy,\n  SuperBlocks.DataAnalysisPy,\n  SuperBlocks.InfoSec,\n  SuperBlocks.MachineLearningPy,\n  SuperBlocks.CollegeAlgebraPy,\n  SuperBlocks.FoundationalCSharp,\n  SuperBlocks.CodingInterviewPrep,\n  SuperBlocks.ProjectEuler,\n  SuperBlocks.RespWebDesign,\n  SuperBlocks.JsAlgoDataStruct,\n  SuperBlocks.TheOdinProject,\n  SuperBlocks.FullStackDeveloper\n];\n\nconst fullSuperOrder = {\n  [SuperBlocks.RespWebDesignNew]: 0,\n  [SuperBlocks.JsAlgoDataStructNew]: 1,\n  [SuperBlocks.FrontEndDevLibs]: 2,\n  [SuperBlocks.DataVis]: 3,\n  [SuperBlocks.RelationalDb]: 4,\n  [SuperBlocks.BackEndDevApis]: 5,\n  [SuperBlocks.QualityAssurance]: 6,\n  [SuperBlocks.SciCompPy]: 7,\n  [SuperBlocks.DataAnalysisPy]: 8,\n  [SuperBlocks.InfoSec]: 9,\n  [SuperBlocks.MachineLearningPy]: 10,\n  [SuperBlocks.CollegeAlgebraPy]: 11,\n  [SuperBlocks.FoundationalCSharp]: 12,\n  [SuperBlocks.CodingInterviewPrep]: 13,\n  [SuperBlocks.ProjectEuler]: 14,\n  [SuperBlocks.RespWebDesign]: 15,\n  [SuperBlocks.JsAlgoDataStruct]: 16,\n  [SuperBlocks.TheOdinProject]: 17,\n  [SuperBlocks.FullStackDeveloper]: 18\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 0,
    "total_chunks": 13
  },
  {
    "id": "7485d9f4fe8c2cb90dc76ba2e9828cf4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "getBlockOrder } from './utils'; config({ path: path.resolve(__dirname, '../.env') }); const mockSuperBlocks = [ SuperBlocks.RespWebDesignNew, SuperBlocks.JsAlgoDataStructNew, SuperBlocks.FrontEndDevLibs, SuperBlocks.DataVis, SuperBlocks.RelationalDb, SuperBlocks.BackEndDevApis, SuperBlocks.QualityAssurance, SuperBlocks.SciCompPy, SuperBlocks.DataAnalysisPy, SuperBlocks.InfoSec, SuperBlocks.MachineLearningPy, SuperBlocks.CollegeAlgebraPy, SuperBlocks.FoundationalCSharp, SuperBlocks.CodingInterviewPrep, SuperBlocks.ProjectEuler, SuperBlocks.RespWebDesign, SuperBlocks.JsAlgoDataStruct, SuperBlocks.TheOdinProject, SuperBlocks.FullStackDeveloper ]; const fullSuperOrder = { [SuperBlocks.RespWebDesignNew]: 0, [SuperBlocks.JsAlgoDataStructNew]: 1, [SuperBlocks.FrontEndDevLibs]: 2, [SuperBlocks.DataVis]: 3, [SuperBlocks.RelationalDb]: 4, [SuperBlocks.BackEndDevApis]: 5, [SuperBlocks.QualityAssurance]: 6, [SuperBlocks.SciCompPy]: 7, [SuperBlocks.DataAnalysisPy]: 8, [SuperBlocks.InfoSec]: 9, [SuperBlocks.MachineLearningPy]: 10, [SuperBlocks.CollegeAlgebraPy]: 11, [SuperBlocks.FoundationalCSharp]: 12, [SuperBlocks.CodingInterviewPrep]: 13, [SuperBlocks.ProjectEuler]: 14, [SuperBlocks.RespWebDesign]: 15, [SuperBlocks.JsAlgoDataStruct]: 16, [SuperBlocks.TheOdinProject]: 17, [SuperBlocks.FullStackDeveloper]: 18 };\n\nconst mockSuperBlockStructure = {\n  chapters: [\n    {\n      dashedName: 'html',\n      modules: [\n        {\n          dashedName: 'getting-started-with-freecodecamp',\n          blocks: [\n            {\n              dashedName: 'welcome-to-freecodecamp'\n            }\n          ]\n        }\n      ]\n    },\n    {\n      dashedName: 'css',\n      comingSoon: true,\n      modules: [\n        {\n          dashedName: 'module-one',\n          blocks: [\n            {\n              dashedName: 'block-one-m1'\n            },\n            {\n              dashedName: 'block-two-m1'\n            }\n          ]\n        },\n        {\n          dashedName: 'module-two',\n          comingSoon: true,\n          blocks: [\n            {\n              dashedName: 'block-one-m2'\n            },\n            {\n              dashedName: 'block-two-m2'\n            }\n          ]\n        }\n      ]\n    }\n  ]\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 575,
    "chunk_index": 1,
    "total_chunks": 13
  },
  {
    "id": "e51a267211d04326944c581db3a50869",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "[SuperBlocks.RespWebDesign]: 15, [SuperBlocks.JsAlgoDataStruct]: 16, [SuperBlocks.TheOdinProject]: 17, [SuperBlocks.FullStackDeveloper]: 18 }; const mockSuperBlockStructure = { chapters: [ { dashedName: 'html', modules: [ { dashedName: 'getting-started-with-freecodecamp', blocks: [ { dashedName: 'welcome-to-freecodecamp' } ] } ] }, { dashedName: 'css', comingSoon: true, modules: [ { dashedName: 'module-one', blocks: [ { dashedName: 'block-one-m1' }, { dashedName: 'block-two-m1' } ] }, { dashedName: 'module-two', comingSoon: true, blocks: [ { dashedName: 'block-one-m2' }, { dashedName: 'block-two-m2' } ] } ] } ] };\n\ndescribe('createSuperOrder', () => {\n  const superOrder = createSuperOrder(mockSuperBlocks);\n\nit('should create the correct object given an array of SuperBlocks', () => {\n    expect(superOrder).toStrictEqual(fullSuperOrder);\n  });\n\nit('throws when not given an array of SuperBlocks', () => {\n    expect.assertions(4);\n    expect(() => getSuperOrder()).toThrow();\n    expect(() => getSuperOrder(null)).toThrow();\n    expect(() => getSuperOrder('')).toThrow();\n    expect(() => getSuperOrder(['respansive-wib-desoin'])).toThrow();\n  });\n});\n\ndescribe('getSuperOrder', () => {\n  it('returns a number for valid curriculum', () => {\n    expect.assertions(1);\n    expect(typeof getSuperOrder('responsive-web-design')).toBe('number');\n  });\n\nit('throws for unknown curriculum', () => {\n    expect.assertions(4);\n    expect(() => getSuperOrder()).toThrow();\n    expect(() => getSuperOrder(null)).toThrow();\n    expect(() => getSuperOrder('')).toThrow();\n    expect(() => getSuperOrder('respansive-wib-desoin')).toThrow();\n  });\n\nit('throws for \"certifications\"', () => {\n    expect.assertions(1);\n    expect(() => getSuperOrder('certifications')).toThrow();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 2,
    "total_chunks": 13
  },
  {
    "id": "4fa41bf3194d38fac726e543317ceb0d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "}); it('throws when not given an array of SuperBlocks', () => { expect.assertions(4); expect(() => getSuperOrder()).toThrow(); expect(() => getSuperOrder(null)).toThrow(); expect(() => getSuperOrder('')).toThrow(); expect(() => getSuperOrder(['respansive-wib-desoin'])).toThrow(); }); }); describe('getSuperOrder', () => { it('returns a number for valid curriculum', () => { expect.assertions(1); expect(typeof getSuperOrder('responsive-web-design')).toBe('number'); }); it('throws for unknown curriculum', () => { expect.assertions(4); expect(() => getSuperOrder()).toThrow(); expect(() => getSuperOrder(null)).toThrow(); expect(() => getSuperOrder('')).toThrow(); expect(() => getSuperOrder('respansive-wib-desoin')).toThrow(); }); it('throws for \"certifications\"', () => { expect.assertions(1); expect(() => getSuperOrder('certifications')).toThrow(); });\n\nit.skip('returns unique numbers for all current curriculum', () => {\n    if (process.env.SHOW_UPCOMING_CHANGES !== 'true') {\n      expect.assertions(17);\n    } else {\n      expect.assertions(19);\n    }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 257,
    "chunk_index": 3,
    "total_chunks": 13
  },
  {
    "id": "c460a7d10857390c1c3624984672452c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "getSuperOrder('')).toThrow(); expect(() => getSuperOrder(['respansive-wib-desoin'])).toThrow(); }); }); describe('getSuperOrder', () => { it('returns a number for valid curriculum', () => { expect.assertions(1); expect(typeof getSuperOrder('responsive-web-design')).toBe('number'); }); it('throws for unknown curriculum', () => { expect.assertions(4); expect(() => getSuperOrder()).toThrow(); expect(() => getSuperOrder(null)).toThrow(); expect(() => getSuperOrder('')).toThrow(); expect(() => getSuperOrder('respansive-wib-desoin')).toThrow(); }); it('throws for \"certifications\"', () => { expect.assertions(1); expect(() => getSuperOrder('certifications')).toThrow(); }); it.skip('returns unique numbers for all current curriculum', () => { if (process.env.SHOW_UPCOMING_CHANGES !== 'true') { expect.assertions(17); } else { expect.assertions(19); }\n\nexpect(getSuperOrder(SuperBlocks.RespWebDesignNew)).toBe(0);\n    expect(getSuperOrder(SuperBlocks.JsAlgoDataStructNew)).toBe(1);\n    expect(getSuperOrder(SuperBlocks.FrontEndDevLibs)).toBe(2);\n    expect(getSuperOrder(SuperBlocks.DataVis)).toBe(3);\n    expect(getSuperOrder(SuperBlocks.RelationalDb)).toBe(4);\n    expect(getSuperOrder(SuperBlocks.BackEndDevApis)).toBe(5);\n    expect(getSuperOrder(SuperBlocks.QualityAssurance)).toBe(6);\n    expect(getSuperOrder(SuperBlocks.SciCompPy)).toBe(7);\n    expect(getSuperOrder(SuperBlocks.DataAnalysisPy)).toBe(8);\n    expect(getSuperOrder(SuperBlocks.InfoSec)).toBe(9);\n    expect(getSuperOrder(SuperBlocks.MachineLearningPy)).toBe(10);\n    expect(getSuperOrder(SuperBlocks.CollegeAlgebraPy)).toBe(11);\n    expect(getSuperOrder(SuperBlocks.FoundationalCSharp)).toBe(12);\n    expect(getSuperOrder(SuperBlocks.CodingInterviewPrep)).toBe(13);\n    expect(getSuperOrder(SuperBlocks.ProjectEuler)).toBe(14);\n    expect(getSuperOrder(SuperBlocks.RespWebDesign)).toBe(15);\n    expect(getSuperOrder(SuperBlocks.JsAlgoDataStruct)).toBe(16);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 4,
    "total_chunks": 13
  },
  {
    "id": "df55a3e011753013a72e5ceb0ee13c6a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "=> { expect.assertions(1); expect(typeof getSuperOrder('responsive-web-design')).toBe('number'); }); it('throws for unknown curriculum', () => { expect.assertions(4); expect(() => getSuperOrder()).toThrow(); expect(() => getSuperOrder(null)).toThrow(); expect(() => getSuperOrder('')).toThrow(); expect(() => getSuperOrder('respansive-wib-desoin')).toThrow(); }); it('throws for \"certifications\"', () => { expect.assertions(1); expect(() => getSuperOrder('certifications')).toThrow(); }); it.skip('returns unique numbers for all current curriculum', () => { if (process.env.SHOW_UPCOMING_CHANGES !== 'true') { expect.assertions(17); } else { expect.assertions(19); } expect(getSuperOrder(SuperBlocks.RespWebDesignNew)).toBe(0); expect(getSuperOrder(SuperBlocks.JsAlgoDataStructNew)).toBe(1); expect(getSuperOrder(SuperBlocks.FrontEndDevLibs)).toBe(2); expect(getSuperOrder(SuperBlocks.DataVis)).toBe(3); expect(getSuperOrder(SuperBlocks.RelationalDb)).toBe(4); expect(getSuperOrder(SuperBlocks.BackEndDevApis)).toBe(5); expect(getSuperOrder(SuperBlocks.QualityAssurance)).toBe(6); expect(getSuperOrder(SuperBlocks.SciCompPy)).toBe(7); expect(getSuperOrder(SuperBlocks.DataAnalysisPy)).toBe(8); expect(getSuperOrder(SuperBlocks.InfoSec)).toBe(9); expect(getSuperOrder(SuperBlocks.MachineLearningPy)).toBe(10); expect(getSuperOrder(SuperBlocks.CollegeAlgebraPy)).toBe(11); expect(getSuperOrder(SuperBlocks.FoundationalCSharp)).toBe(12); expect(getSuperOrder(SuperBlocks.CodingInterviewPrep)).toBe(13); expect(getSuperOrder(SuperBlocks.ProjectEuler)).toBe(14); expect(getSuperOrder(SuperBlocks.RespWebDesign)).toBe(15); expect(getSuperOrder(SuperBlocks.JsAlgoDataStruct)).toBe(16);\n\nif (process.env.SHOW_UPCOMING_CHANGES === 'true') {\n      expect(getSuperOrder(SuperBlocks.TheOdinProject)).toBe(17);\n      expect(getSuperOrder(SuperBlocks.FullStackDeveloper)).toBe(18);\n    }\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 5,
    "total_chunks": 13
  },
  {
    "id": "2dc0817820e9e089e25850f687c957ad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "() => { expect.assertions(4); expect(() => getSuperOrder()).toThrow(); expect(() => getSuperOrder(null)).toThrow(); expect(() => getSuperOrder('')).toThrow(); expect(() => getSuperOrder('respansive-wib-desoin')).toThrow(); }); it('throws for \"certifications\"', () => { expect.assertions(1); expect(() => getSuperOrder('certifications')).toThrow(); }); it.skip('returns unique numbers for all current curriculum', () => { if (process.env.SHOW_UPCOMING_CHANGES !== 'true') { expect.assertions(17); } else { expect.assertions(19); } expect(getSuperOrder(SuperBlocks.RespWebDesignNew)).toBe(0); expect(getSuperOrder(SuperBlocks.JsAlgoDataStructNew)).toBe(1); expect(getSuperOrder(SuperBlocks.FrontEndDevLibs)).toBe(2); expect(getSuperOrder(SuperBlocks.DataVis)).toBe(3); expect(getSuperOrder(SuperBlocks.RelationalDb)).toBe(4); expect(getSuperOrder(SuperBlocks.BackEndDevApis)).toBe(5); expect(getSuperOrder(SuperBlocks.QualityAssurance)).toBe(6); expect(getSuperOrder(SuperBlocks.SciCompPy)).toBe(7); expect(getSuperOrder(SuperBlocks.DataAnalysisPy)).toBe(8); expect(getSuperOrder(SuperBlocks.InfoSec)).toBe(9); expect(getSuperOrder(SuperBlocks.MachineLearningPy)).toBe(10); expect(getSuperOrder(SuperBlocks.CollegeAlgebraPy)).toBe(11); expect(getSuperOrder(SuperBlocks.FoundationalCSharp)).toBe(12); expect(getSuperOrder(SuperBlocks.CodingInterviewPrep)).toBe(13); expect(getSuperOrder(SuperBlocks.ProjectEuler)).toBe(14); expect(getSuperOrder(SuperBlocks.RespWebDesign)).toBe(15); expect(getSuperOrder(SuperBlocks.JsAlgoDataStruct)).toBe(16); if (process.env.SHOW_UPCOMING_CHANGES === 'true') { expect(getSuperOrder(SuperBlocks.TheOdinProject)).toBe(17); expect(getSuperOrder(SuperBlocks.FullStackDeveloper)).toBe(18); } }); });\n\ndescribe('getSuperBlockFromPath', () => {\n  const englishFolder = path.join(__dirname, './challenges/english');\n  const directories = fs\n    .readdirSync(englishFolder)\n    .filter(item => fs.lstatSync(path.join(englishFolder, item)).isDirectory());",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 519,
    "chunk_index": 6,
    "total_chunks": 13
  },
  {
    "id": "4a086342f538ff224d2c57ea378c3a0a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "for \"certifications\"', () => { expect.assertions(1); expect(() => getSuperOrder('certifications')).toThrow(); }); it.skip('returns unique numbers for all current curriculum', () => { if (process.env.SHOW_UPCOMING_CHANGES !== 'true') { expect.assertions(17); } else { expect.assertions(19); } expect(getSuperOrder(SuperBlocks.RespWebDesignNew)).toBe(0); expect(getSuperOrder(SuperBlocks.JsAlgoDataStructNew)).toBe(1); expect(getSuperOrder(SuperBlocks.FrontEndDevLibs)).toBe(2); expect(getSuperOrder(SuperBlocks.DataVis)).toBe(3); expect(getSuperOrder(SuperBlocks.RelationalDb)).toBe(4); expect(getSuperOrder(SuperBlocks.BackEndDevApis)).toBe(5); expect(getSuperOrder(SuperBlocks.QualityAssurance)).toBe(6); expect(getSuperOrder(SuperBlocks.SciCompPy)).toBe(7); expect(getSuperOrder(SuperBlocks.DataAnalysisPy)).toBe(8); expect(getSuperOrder(SuperBlocks.InfoSec)).toBe(9); expect(getSuperOrder(SuperBlocks.MachineLearningPy)).toBe(10); expect(getSuperOrder(SuperBlocks.CollegeAlgebraPy)).toBe(11); expect(getSuperOrder(SuperBlocks.FoundationalCSharp)).toBe(12); expect(getSuperOrder(SuperBlocks.CodingInterviewPrep)).toBe(13); expect(getSuperOrder(SuperBlocks.ProjectEuler)).toBe(14); expect(getSuperOrder(SuperBlocks.RespWebDesign)).toBe(15); expect(getSuperOrder(SuperBlocks.JsAlgoDataStruct)).toBe(16); if (process.env.SHOW_UPCOMING_CHANGES === 'true') { expect(getSuperOrder(SuperBlocks.TheOdinProject)).toBe(17); expect(getSuperOrder(SuperBlocks.FullStackDeveloper)).toBe(18); } }); }); describe('getSuperBlockFromPath', () => { const englishFolder = path.join(__dirname, './challenges/english'); const directories = fs .readdirSync(englishFolder) .filter(item => fs.lstatSync(path.join(englishFolder, item)).isDirectory());\n\nit('handles all the directories in ./challenges/english', () => {\n    expect.assertions(30);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 477,
    "chunk_index": 7,
    "total_chunks": 13
  },
  {
    "id": "fa48dbdc024bb600a1782e3fb52a5d3c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "it.skip('returns unique numbers for all current curriculum', () => { if (process.env.SHOW_UPCOMING_CHANGES !== 'true') { expect.assertions(17); } else { expect.assertions(19); } expect(getSuperOrder(SuperBlocks.RespWebDesignNew)).toBe(0); expect(getSuperOrder(SuperBlocks.JsAlgoDataStructNew)).toBe(1); expect(getSuperOrder(SuperBlocks.FrontEndDevLibs)).toBe(2); expect(getSuperOrder(SuperBlocks.DataVis)).toBe(3); expect(getSuperOrder(SuperBlocks.RelationalDb)).toBe(4); expect(getSuperOrder(SuperBlocks.BackEndDevApis)).toBe(5); expect(getSuperOrder(SuperBlocks.QualityAssurance)).toBe(6); expect(getSuperOrder(SuperBlocks.SciCompPy)).toBe(7); expect(getSuperOrder(SuperBlocks.DataAnalysisPy)).toBe(8); expect(getSuperOrder(SuperBlocks.InfoSec)).toBe(9); expect(getSuperOrder(SuperBlocks.MachineLearningPy)).toBe(10); expect(getSuperOrder(SuperBlocks.CollegeAlgebraPy)).toBe(11); expect(getSuperOrder(SuperBlocks.FoundationalCSharp)).toBe(12); expect(getSuperOrder(SuperBlocks.CodingInterviewPrep)).toBe(13); expect(getSuperOrder(SuperBlocks.ProjectEuler)).toBe(14); expect(getSuperOrder(SuperBlocks.RespWebDesign)).toBe(15); expect(getSuperOrder(SuperBlocks.JsAlgoDataStruct)).toBe(16); if (process.env.SHOW_UPCOMING_CHANGES === 'true') { expect(getSuperOrder(SuperBlocks.TheOdinProject)).toBe(17); expect(getSuperOrder(SuperBlocks.FullStackDeveloper)).toBe(18); } }); }); describe('getSuperBlockFromPath', () => { const englishFolder = path.join(__dirname, './challenges/english'); const directories = fs .readdirSync(englishFolder) .filter(item => fs.lstatSync(path.join(englishFolder, item)).isDirectory()); it('handles all the directories in ./challenges/english', () => { expect.assertions(30);\n\nfor (const directory of directories) {\n      expect(() => getSuperBlockFromDir(directory)).not.toThrow();\n    }\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 8,
    "total_chunks": 13
  },
  {
    "id": "690cb50567e67ddda4c2dad3e7e550a4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "(process.env.SHOW_UPCOMING_CHANGES !== 'true') { expect.assertions(17); } else { expect.assertions(19); } expect(getSuperOrder(SuperBlocks.RespWebDesignNew)).toBe(0); expect(getSuperOrder(SuperBlocks.JsAlgoDataStructNew)).toBe(1); expect(getSuperOrder(SuperBlocks.FrontEndDevLibs)).toBe(2); expect(getSuperOrder(SuperBlocks.DataVis)).toBe(3); expect(getSuperOrder(SuperBlocks.RelationalDb)).toBe(4); expect(getSuperOrder(SuperBlocks.BackEndDevApis)).toBe(5); expect(getSuperOrder(SuperBlocks.QualityAssurance)).toBe(6); expect(getSuperOrder(SuperBlocks.SciCompPy)).toBe(7); expect(getSuperOrder(SuperBlocks.DataAnalysisPy)).toBe(8); expect(getSuperOrder(SuperBlocks.InfoSec)).toBe(9); expect(getSuperOrder(SuperBlocks.MachineLearningPy)).toBe(10); expect(getSuperOrder(SuperBlocks.CollegeAlgebraPy)).toBe(11); expect(getSuperOrder(SuperBlocks.FoundationalCSharp)).toBe(12); expect(getSuperOrder(SuperBlocks.CodingInterviewPrep)).toBe(13); expect(getSuperOrder(SuperBlocks.ProjectEuler)).toBe(14); expect(getSuperOrder(SuperBlocks.RespWebDesign)).toBe(15); expect(getSuperOrder(SuperBlocks.JsAlgoDataStruct)).toBe(16); if (process.env.SHOW_UPCOMING_CHANGES === 'true') { expect(getSuperOrder(SuperBlocks.TheOdinProject)).toBe(17); expect(getSuperOrder(SuperBlocks.FullStackDeveloper)).toBe(18); } }); }); describe('getSuperBlockFromPath', () => { const englishFolder = path.join(__dirname, './challenges/english'); const directories = fs .readdirSync(englishFolder) .filter(item => fs.lstatSync(path.join(englishFolder, item)).isDirectory()); it('handles all the directories in ./challenges/english', () => { expect.assertions(30); for (const directory of directories) { expect(() => getSuperBlockFromDir(directory)).not.toThrow(); } });\n\nit(\"returns valid superblocks (or 'certifications') for all valid arguments\", () => {\n    expect.assertions(30);\n\nconst superBlockPaths = directories.filter(x => x !== '00-certifications');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 9,
    "total_chunks": 13
  },
  {
    "id": "56613d2a7c8b2159cdfda302a62a822c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "expect(getSuperOrder(SuperBlocks.CollegeAlgebraPy)).toBe(11); expect(getSuperOrder(SuperBlocks.FoundationalCSharp)).toBe(12); expect(getSuperOrder(SuperBlocks.CodingInterviewPrep)).toBe(13); expect(getSuperOrder(SuperBlocks.ProjectEuler)).toBe(14); expect(getSuperOrder(SuperBlocks.RespWebDesign)).toBe(15); expect(getSuperOrder(SuperBlocks.JsAlgoDataStruct)).toBe(16); if (process.env.SHOW_UPCOMING_CHANGES === 'true') { expect(getSuperOrder(SuperBlocks.TheOdinProject)).toBe(17); expect(getSuperOrder(SuperBlocks.FullStackDeveloper)).toBe(18); } }); }); describe('getSuperBlockFromPath', () => { const englishFolder = path.join(__dirname, './challenges/english'); const directories = fs .readdirSync(englishFolder) .filter(item => fs.lstatSync(path.join(englishFolder, item)).isDirectory()); it('handles all the directories in ./challenges/english', () => { expect.assertions(30); for (const directory of directories) { expect(() => getSuperBlockFromDir(directory)).not.toThrow(); } }); it(\"returns valid superblocks (or 'certifications') for all valid arguments\", () => { expect.assertions(30); const superBlockPaths = directories.filter(x => x !== '00-certifications');\n\nfor (const directory of superBlockPaths) {\n      expect(Object.values(SuperBlocks)).toContain(\n        getSuperBlockFromDir(directory)\n      );\n    }\n    expect(getSuperBlockFromDir('00-certifications')).toBe('certifications');\n  });\n\nit(\"returns all valid superblocks (and 'certifications')\", () => {\n    expect.assertions(1);\n\nconst superBlocks = new Set();\n    for (const directory of directories) {\n      superBlocks.add(getSuperBlockFromDir(directory));\n    }\n\n// + 1 for 'certifications'\n    expect(superBlocks.size).toBe(Object.values(SuperBlocks).length + 1);\n  });\n\nit('throws if a directory is unknown', () => {\n    expect.assertions(1);\n\nexpect(() => getSuperBlockFromDir('unknown')).toThrow();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 10,
    "total_chunks": 13
  },
  {
    "id": "9443234fbb8574377841608ab7f8a3a3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "'certifications') for all valid arguments\", () => { expect.assertions(30); const superBlockPaths = directories.filter(x => x !== '00-certifications'); for (const directory of superBlockPaths) { expect(Object.values(SuperBlocks)).toContain( getSuperBlockFromDir(directory) ); } expect(getSuperBlockFromDir('00-certifications')).toBe('certifications'); }); it(\"returns all valid superblocks (and 'certifications')\", () => { expect.assertions(1); const superBlocks = new Set(); for (const directory of directories) { superBlocks.add(getSuperBlockFromDir(directory)); } // + 1 for 'certifications' expect(superBlocks.size).toBe(Object.values(SuperBlocks).length + 1); }); it('throws if a directory is unknown', () => { expect.assertions(1); expect(() => getSuperBlockFromDir('unknown')).toThrow(); }); });\n\ndescribe('getChapterFromBlock', () => {\n  it('returns a chapter if it exists', () => {\n    expect(\n      getChapterFromBlock('block-one-m1', mockSuperBlockStructure)\n    ).toStrictEqual({ dashedName: 'css', comingSoon: true });\n  });\n\nit('throws if a chapter does not exist', () => {\n    expect(() =>\n      getChapterFromBlock('welcome-to-freecodecamper', mockSuperBlockStructure)\n    ).toThrow(\n      'There is no chapter corresponding to block \"welcome-to-freecodecamper\". It\\'s possible that the block is missing in the superblock structure.'\n    );\n  });\n});\n\ndescribe('getModuleFromBlock', () => {\n  it('returns a module if it exists', () => {\n    expect(\n      getModuleFromBlock('welcome-to-freecodecamp', mockSuperBlockStructure)\n    ).toStrictEqual({\n      dashedName: 'getting-started-with-freecodecamp',\n      comingSoon: undefined\n    });\n  });\n\nit('throws if a module does not exist', () => {\n    expect(() =>\n      getModuleFromBlock('welcome-to-freecodecamper', mockSuperBlockStructure)\n    ).toThrow(\n      'There is no module corresponding to block \"welcome-to-freecodecamper\". It\\'s possible that the block is missing in the superblock structure.'\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 11,
    "total_chunks": 13
  },
  {
    "id": "db5461292edd23ebc892f521e08f3fb2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
    "source_type": "git_repo",
    "title": "utils.test",
    "content": "block \"welcome-to-freecodecamper\". It\\'s possible that the block is missing in the superblock structure.' ); }); }); describe('getModuleFromBlock', () => { it('returns a module if it exists', () => { expect( getModuleFromBlock('welcome-to-freecodecamp', mockSuperBlockStructure) ).toStrictEqual({ dashedName: 'getting-started-with-freecodecamp', comingSoon: undefined }); }); it('throws if a module does not exist', () => { expect(() => getModuleFromBlock('welcome-to-freecodecamper', mockSuperBlockStructure) ).toThrow( 'There is no module corresponding to block \"welcome-to-freecodecamper\". It\\'s possible that the block is missing in the superblock structure.' ); }); });\n\ndescribe('getBlockOrder', () => {\n  it('returns the correct order when the chapter only contains one module', () => {\n    expect(\n      getBlockOrder('welcome-to-freecodecamp', mockSuperBlockStructure)\n    ).toBe(0);\n  });\n\nit('returns the correct order when the chapter contains multiple modules', () => {\n    expect(getBlockOrder('block-one-m2', mockSuperBlockStructure)).toBe(3);\n  });\n\nit('throws if a block does not exist', () => {\n    expect(() =>\n      getBlockOrder('welcome-to-freecodecamper', mockSuperBlockStructure)\n    ).toThrow(\n      'The block \"welcome-to-freecodecamper\" does not appear in the superblock structure.'\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8443,
      "relative_path": "git_repos\\freeCodeCamp\\curriculum\\utils.test.ts",
      "source_type": "git_repo"
    },
    "token_count": 330,
    "chunk_index": 12,
    "total_chunks": 13
  },
  {
    "id": "a8ba05620d1680d8db08f33410659239",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\backend.spec.ts",
    "source_type": "git_repo",
    "title": "backend.spec",
    "content": "import { test, expect } from '@playwright/test';\n\nconst locations = {\n  index:\n    'learn/back-end-development-and-apis/managing-packages-with-npm/' +\n    'how-to-use-package-json-the-core-of-any-node-js-project-or-npm-package',\n  project:\n    '/learn/back-end-development-and-apis/back-end-development-and-apis-projects/timestamp-microservice'\n};\n\nconst unhandledErrorMessage = 'Something is not quite right';\nconst runningOutput = '// running tests';\nconst finishedOutput = '// tests completed';\n\ntest.describe('Backend challenge', () => {\n  test('renders', async ({ page }) => {\n    await page.goto(locations.index);\n    await expect(page).toHaveTitle(\n      'Managing Packages with NPM - How to Use package.json, the Core of Any Node.js Project or npm Package | Learn | freeCodeCamp.org'\n    );\n  });\n\ntest('does not generate unhandled errors on submission', async ({ page }) => {\n    await page.goto(locations.index);\n    await page.fill('input[name=\"solution\"]', 'https://example.com');\n    await page.keyboard.press('Enter');\n\nawait expect(page.getByText(runningOutput)).toContainText(finishedOutput);\n\nawait expect(page.getByText(unhandledErrorMessage)).not.toBeVisible();\n  });\n});\n\ntest.describe('Backend project', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto(locations.project);\n  });\n\ntest('warns against private source code links', async ({ page }) => {\n    await page.fill('input[name=\"solution\"]', 'https://example.com');\n    await page.fill('input[name=\"githubLink\"]', 'https://localhost:3000');\n\nawait expect(\n      page.getByText('Source code link must be publicly visible.')\n    ).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1664,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\backend.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 366,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a1b59619f15abad60626981cbf31a79c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\action-row.spec.ts",
    "source_type": "git_repo",
    "title": "action-row.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\nconst buttonNames = ['Instructions', 'index.html', 'styles.css', 'Console'];\n\ntest.describe('Desktop view', () => {\n  test.skip(({ isMobile }) => isMobile, 'Only test on desktop');\n\ntest.describe('Pages with previews', () => {\n    test.beforeEach(async ({ page }) => {\n      await page.goto(\n        '/learn/2022/responsive-web-design/build-a-survey-form-project/build-a-survey-form'\n      );\n    });\n\ntest('Action row buttons are visible', async ({ page }) => {\n      const previewPaneButton = page.getByTestId('preview-pane-button');\n      const previewPortalButton = page.getByRole('button', {\n        name: translations.aria['move-preview-to-new-window']\n      });\n      const actionRow = page.getByTestId('action-row');\n\nfor (const name of buttonNames) {\n        await expect(actionRow.getByRole('button', { name })).toBeVisible();\n      }\n\nawait expect(previewPaneButton).toBeVisible();\n      await expect(previewPortalButton).toBeVisible();\n    });\n\ntest('Clicking instructions button hides instructions panel, but not any buttons', async ({\n      page\n    }) => {\n      const instructionsButton = page.getByTestId('instructions-button');\n      const actionRow = page.getByTestId('action-row');\n\n// Click instructions button to hide instructions panel\n      await instructionsButton.click();\n\nfor (const name of buttonNames) {\n        await expect(actionRow.getByRole('button', { name })).toBeVisible();\n      }\n\nconst instructionsPanelTitle = page.getByRole('heading', {\n        name: 'Build a Survey Form'\n      });\n      await expect(instructionsPanelTitle).toBeHidden();\n    });\n\ntest('Clicking Console button shows console panel', async ({ page }) => {\n      const actionRow = page.getByTestId('action-row');\n      const consoleBtn = actionRow.getByRole('button', { name: 'Console' });\n\n// Click the console button to show the console panel\n      await consoleBtn.click();\n      const consolePanel = page.getByLabel('Console');\n      await expect(consolePanel).toBeVisible();\n    });\n\ntest('Clicking Preview Pane button hides preview', async ({ page }) => {\n      const previewButton = page.getByTestId('preview-pane-button');\n      const previewFrame = page.getByTitle('challenge preview');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3872,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\action-row.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "825470bbab89995ebe20b2c3461e330a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\action-row.spec.ts",
    "source_type": "git_repo",
    "title": "action-row.spec",
    "content": "= page.getByRole('heading', { name: 'Build a Survey Form' }); await expect(instructionsPanelTitle).toBeHidden(); }); test('Clicking Console button shows console panel', async ({ page }) => { const actionRow = page.getByTestId('action-row'); const consoleBtn = actionRow.getByRole('button', { name: 'Console' }); // Click the console button to show the console panel await consoleBtn.click(); const consolePanel = page.getByLabel('Console'); await expect(consolePanel).toBeVisible(); }); test('Clicking Preview Pane button hides preview', async ({ page }) => { const previewButton = page.getByTestId('preview-pane-button'); const previewFrame = page.getByTitle('challenge preview');\n\nawait previewButton.click();\n      await expect(previewFrame).toBeHidden();\n    });\n\ntest('Clicking Preview Portal button opens the preview in a new tab', async ({\n      page\n    }) => {\n      const previewPortalButton = page.getByRole('button', {\n        name: translations.aria['move-preview-to-new-window']\n      });\n      const browserContext = page.context();\n\nconst [newPage] = await Promise.all([\n        browserContext.waitForEvent('page'),\n        previewPortalButton.click()\n      ]);\n\nawait newPage.waitForLoadState();\n\nawait expect(newPage).toHaveURL('about:blank');\n\nawait newPage.close();\n    });\n  });\n\ntest.describe('Pages without previews', () => {\n    test('Preview Buttons should not appear when preview is disabled', async ({\n      page\n    }) => {\n      await page.goto(\n        '/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-1'\n      );\n      const previewButton = page.getByTestId('preview-pane-button');\n      await expect(previewButton).toHaveCount(0);\n    });\n  });\n});\n\ntest.describe('Mobile view', () => {\n  test.skip(({ isMobile }) => !isMobile, 'Only test on mobile');\n\ntest('Action row is hidden', async ({ page }) => {\n    await page.goto(\n      '/learn/2022/responsive-web-design/build-a-survey-form-project/build-a-survey-form'\n    );\n    const actionRow = page.getByTestId('action-row');\n    await expect(actionRow).toBeHidden();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3872,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\action-row.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "0afd722a1aad32851c940ea8489a30c8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\blocked.spec.ts",
    "source_type": "git_repo",
    "title": "blocked.spec",
    "content": "import { test, expect } from '@playwright/test';\n\ntest.describe('Blocked Page', () => {\n  test('should render correctly', async ({ page }) => {\n    await page.goto('/blocked');\n    await expect(page).toHaveTitle('Access Denied | freeCodeCamp.org');\n\nconst mainHeading = page.getByTestId('main-heading');\n    await expect(mainHeading).toHaveText(\"We can't log you in.\");\n\nconst blockedBodyText = page.getByTestId('blocked-body-text');\n    await expect(blockedBodyText).toHaveText(\n      \"United States export control and economic sanctions rules don't allow us to log in visitors from your region. \" +\n        'Sorry about this. The situation may change in the future.If you want, you can learn more about these restrictions.'\n    );\n\nconst learnMoreLink = page.getByTestId('learn-more-link');\n    await expect(learnMoreLink).toHaveAttribute(\n      'href',\n      'https://www.okta.com/blocked'\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 922,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\blocked.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 203,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "96fed96bcf218e3c9ac56d663dac543c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\basic-css.spec.ts",
    "source_type": "git_repo",
    "title": "basic-css.spec",
    "content": "import { test, expect } from '@playwright/test';\n\nconst locations = {\n  index: '/learn/responsive-web-design/#basic-css'\n};\n\nconst lessonNames = [\n  'Change the Color of Text',\n  'Use CSS Selectors to Style Elements',\n  'Use a CSS Class to Style an Element',\n  'Style Multiple Elements with a CSS Class',\n  'Change the Font Size of an Element',\n  'Set the Font Family of an Element',\n  'Import a Google Font',\n  'Specify How Fonts Should Degrade',\n  'Size Your Images',\n  'Add Borders Around Your Elements',\n  'Add Rounded Corners with border-radius',\n  'Make Circular Images with a border-radius',\n  'Give a Background Color to a div Element',\n  'Set the id of an Element',\n  'Use an id Attribute to Style an Element',\n  'Adjust the Padding of an Element',\n  'Adjust the Margin of an Element',\n  'Add a Negative Margin to an Element',\n  'Add Different Padding to Each Side of an Element',\n  'Add Different Margins to Each Side of an Element',\n  'Use Clockwise Notation to Specify the Padding of an Element',\n  'Use Clockwise Notation to Specify the Margin of an Element',\n  'Use Attribute Selectors to Style Elements',\n  'Understand Absolute versus Relative Units',\n  'Style the HTML Body Element',\n  'Inherit Styles from the Body Element',\n  'Prioritize One Style Over Another',\n  'Override Styles in Subsequent CSS',\n  'Override Class Declarations by Styling ID Attributes',\n  'Override Class Declarations with Inline Styles',\n  'Override All Other Styles by using Important',\n  'Use Hex Code for Specific Colors',\n  'Use Hex Code to Mix Colors',\n  'Use Abbreviated Hex Code',\n  'Use RGB values to Color Elements',\n  'Use RGB to Mix Colors',\n  'Use CSS Variables to change several elements at once',\n  'Create a custom CSS Variable',\n  'Use a custom CSS Variable',\n  'Attach a Fallback value to a CSS Variable',\n  'Improve Compatibility with Browser Fallbacks',\n  'Inherit CSS Variables',\n  'Change a variable for a specific area',\n  'Use a media query to change a variable'\n];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2622,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\basic-css.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "05e1029b6d973dc381e142f888cd329e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\basic-css.spec.ts",
    "source_type": "git_repo",
    "title": "basic-css.spec",
    "content": "Code for Specific Colors', 'Use Hex Code to Mix Colors', 'Use Abbreviated Hex Code', 'Use RGB values to Color Elements', 'Use RGB to Mix Colors', 'Use CSS Variables to change several elements at once', 'Create a custom CSS Variable', 'Use a custom CSS Variable', 'Attach a Fallback value to a CSS Variable', 'Improve Compatibility with Browser Fallbacks', 'Inherit CSS Variables', 'Change a variable for a specific area', 'Use a media query to change a variable' ];\n\nconst warningMessage =\n  'Note: Some browser extensions, such as ad-blockers and dark mode extensions can interfere with the tests. If you face issues, we recommend disabling extensions that modify the content or layout of pages, while taking the course.';\n\ntest.describe('Responsive Web Design Projects - Basic CSS', () => {\n  test('renders', async ({ page }) => {\n    await page.goto(locations.index);\n\nawait expect(page.getByText(warningMessage)).toBeVisible();\n\nfor (const lessonName of lessonNames) {\n      await expect(\n        page.getByRole('link', { name: lessonName, exact: false })\n      ).toBeVisible();\n    }\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2622,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\basic-css.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 244,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8a3e28eed3af841714237746b23bd23e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\c-sharp.spec.ts",
    "source_type": "git_repo",
    "title": "c-sharp.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\nconst checkAnswerButtonText = translations.buttons['check-answer'];\nconst askForHelpButtonText = translations.buttons['ask-for-help'];\nconst trophyButtonText = translations.buttons['verify-trophy'];\nconst unlinkAccountButtonText = translations.buttons['unlink-account'];\n\nconst challenge =\n  '/learn/foundational-c-sharp-with-microsoft/write-your-first-code-using-c-sharp/write-your-first-c-sharp-code';\n\nconst trophy =\n  '/learn/foundational-c-sharp-with-microsoft/write-your-first-code-using-c-sharp/trophy-write-your-first-code-using-c-sharp';\n\ntest('renders buttons on challenge page', async ({ page }) => {\n  await page.goto(challenge);\n  await expect(\n    page.getByRole('button', { name: checkAnswerButtonText })\n  ).toBeVisible();\n\nawait expect(\n    page.getByRole('button', {\n      name: askForHelpButtonText\n    })\n  ).toBeVisible();\n});\n\ntest('renders buttons on trophy page', async ({ page }) => {\n  await page.goto(trophy);\n\nawait expect(\n    page.getByRole('button', { name: unlinkAccountButtonText })\n  ).toBeVisible();\n\nawait expect(\n    page.getByRole('button', {\n      name: trophyButtonText\n    })\n  ).toBeVisible();\n\nawait expect(\n    page.getByRole('button', {\n      name: askForHelpButtonText\n    })\n  ).toBeVisible();\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1379,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\c-sharp.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 303,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "eac3fb43f2f33325fe534b48372a4cc0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\bread-crumb.spec.ts",
    "source_type": "git_repo",
    "title": "bread-crumb.spec",
    "content": "import { test, expect } from '@playwright/test';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(\n    '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-2'\n  );\n});\n\ntest.describe('Challenge Breadcrumb Tests', () => {\n  test('should display correctly', async ({ page, isMobile }) => {\n    const breadcrumbTest = async (testId: string) => {\n      const superBlock = page.getByTestId(testId).getByRole('listitem').first();\n      await expect(superBlock).toBeVisible();\n\nconst superBlockLink = superBlock.getByRole('link', {\n        name: 'Responsive Web Design'\n      });\n      await expect(superBlockLink).toBeVisible();\n      await expect(superBlockLink).toHaveAttribute(\n        'href',\n        '/learn/2022/responsive-web-design'\n      );\n\nconst block = page.getByTestId(testId).getByRole('listitem').last();\n      await expect(superBlock).toBeVisible();\n\nconst blockLink = block.getByRole('link', {\n        name: 'Learn HTML by Building a Cat Photo App'\n      });\n      await expect(blockLink).toBeVisible();\n      await expect(blockLink).toHaveAttribute(\n        'href',\n        '/learn/2022/responsive-web-design/#learn-html-by-building-a-cat-photo-app'\n      );\n    };\n\nif (!isMobile) {\n      await expect(page.getByTestId('breadcrumb-mobile')).toBeHidden();\n      await breadcrumbTest('breadcrumb-desktop');\n\nawait page.setViewportSize({\n        width: 766,\n        height: 1080\n      });\n    }\n\nawait expect(page.getByTestId('breadcrumb-desktop')).toBeHidden();\n    await breadcrumbTest('breadcrumb-mobile');\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1596,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\bread-crumb.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 354,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b0080a9b1edf1129b9082fc932e2b971",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\cert-username-case-navigation.spec.ts",
    "source_type": "git_repo",
    "title": "cert-username-case-navigation.spec",
    "content": "import { execSync } from 'child_process';\nimport { expect, test } from '@playwright/test';\n\ntest.describe('Public profile certifications', () => {\n  test('Should show claimed certifications if the username has all lowercase characters', async ({\n    page\n  }) => {\n    await page.goto('/certifieduser');\n\n// If you build the client locally, delete the button click below.\n    if (!process.env.CI) {\n      await page\n        .getByRole('button', { name: 'Preview custom 404 page' })\n        .click();\n    }\n\nawait expect(\n      page.getByRole('link', { name: /View.+Certification/ })\n    ).toHaveCount(19);\n  });\n\ntest('Should show claimed certifications if the username includes uppercase characters', async ({\n    page\n  }) => {\n    await page.goto('/certifieduser');\n\nif (!process.env.CI) {\n      await page\n        .getByRole('button', { name: 'Preview custom 404 page' })\n        .click();\n    }\n    await page.getByRole('button', { name: 'Edit my profile' }).click();\n\nawait page.getByLabel('Username').fill('CertifiedBoozer');\n    await page.getByRole('button', { name: 'Save' }).nth(0).click();\n    await expect(page.getByTestId('flash-message')).toContainText(\n      /We have updated your username to/\n    );\n    await page.goto('/certifiedboozer');\n\n// If you build the client locally, delete the button click below.\n    if (!process.env.CI) {\n      await page\n        .getByRole('button', { name: 'Preview custom 404 page' })\n        .click();\n    }\n\nawait page.waitForURL('/certifiedboozer');\n    await expect(\n      page.getByRole('link', { name: /View.+Certification/ })\n    ).toHaveCount(19);\n  });\n\ntest.afterAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1749,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\cert-username-case-navigation.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7f701c3d8eb9d3c29438ba3235857567",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\challenge-description.spec.ts",
    "source_type": "git_repo",
    "title": "challenge-description.spec",
    "content": "import { test, expect } from '@playwright/test';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(\n    '/learn/foundational-c-sharp-with-microsoft/write-your-first-code-using-c-sharp/trophy-write-your-first-code-using-c-sharp'\n  );\n});\n\ntest.describe('Challenge Description Component Tests', () => {\n  test('should display the content correctly', async ({ page }) => {\n    const challengeDescription = page.getByTestId('challenge-description');\n    await expect(challengeDescription).toBeVisible();\n    await expect(challengeDescription).toHaveText(/ */);\n\nconst link = page.getByRole('link', { name: 'your achievements page' });\n    await expect(link).toHaveAttribute(\n      'href',\n      'https://learn.microsoft.com/users/me/achievements#trophies-section'\n    );\n    await expect(link).toHaveAttribute('target', '_blank');\n    await expect(link).toHaveAttribute('rel', 'noreferrer');\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 909,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\challenge-description.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 200,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4a75b120f3edaddf110de59dbfcc248b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\challenge-reset-modal.spec.ts",
    "source_type": "git_repo",
    "title": "challenge-reset-modal.spec",
    "content": "import { execSync } from 'child_process';\n\nimport { test, expect, Page } from '@playwright/test';\n\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { clearEditor, focusEditor, getEditors } from './utils/editor';\nimport { alertToBeVisible } from './utils/alerts';\n\nconst expectToRenderResetModal = async (page: Page) => {\n  await expect(\n    page.getByRole('dialog', { name: translations.learn.reset })\n  ).toBeVisible();\n\nawait expect(\n    page.getByRole('button', {\n      name: translations.buttons.close\n    })\n  ).toBeVisible();\n  await expect(\n    page.getByRole('heading', {\n      name: translations.learn.reset\n    })\n  ).toBeVisible();\n\nawait expect(\n    page.getByText(translations.learn['reset-warn-2'])\n  ).toBeVisible();\n};\n\ntest('should render the modal content correctly', async ({ page }) => {\n  await page.goto(\n    '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3'\n  );\n\nawait page.getByRole('button', { name: translations.buttons.reset }).click();\n\nawait expectToRenderResetModal(page);\n\nawait expect(\n    page.getByRole('button', {\n      name: translations.buttons['reset-lesson']\n    })\n  ).toBeVisible();\n\nawait expect(\n    page.getByText(\n      'Are you sure you wish to reset this lesson (Step 3)? The code editors and tests will be reset.'\n    )\n  ).toBeVisible();\n});\n\ntest('User can reset challenge', async ({ page, isMobile, browserName }) => {\n  const initialText = '    <h2>Cat Photos</h2>';\n  const initialEditorText = page\n    .getByTestId('editor-container-indexhtml')\n    .getByText(initialText);\n\nconst updatedText = 'Only Dogs';\n  const updatedEditorText = page\n    .getByTestId('editor-container-indexhtml')\n    .getByText(updatedText);\n\nawait page.goto(\n    '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3'\n  );\n\n// Building the preview can take a while\n  await expect(initialEditorText).toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9351,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\challenge-reset-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "7a8a66c543a1d90352736db96e046d63",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\challenge-reset-modal.spec.ts",
    "source_type": "git_repo",
    "title": "challenge-reset-modal.spec",
    "content": "}) ).toBeVisible(); await expect( page.getByText( 'Are you sure you wish to reset this lesson (Step 3)? The code editors and tests will be reset.' ) ).toBeVisible(); }); test('User can reset challenge', async ({ page, isMobile, browserName }) => { const initialText = ' <h2>Cat Photos</h2>'; const initialEditorText = page .getByTestId('editor-container-indexhtml') .getByText(initialText); const updatedText = 'Only Dogs'; const updatedEditorText = page .getByTestId('editor-container-indexhtml') .getByText(updatedText); await page.goto( '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3' ); // Building the preview can take a while await expect(initialEditorText).toBeVisible();\n\n// Modify the text in the editor pane, clearing first, otherwise the existing\n  // text will be selected before typing\n  await focusEditor({ page, isMobile });\n  await clearEditor({ page, browserName });\n  await getEditors(page).fill(updatedText);\n  await expect(updatedEditorText).toBeVisible();\n\n// Run the tests so the lower jaw updates (later we confirm that the update\n  // are reset)\n  await page\n    .getByRole('button', {\n      // check-code works on all browsers because it does not include Command\n      // or Ctrl\n      name: translations.buttons['check-code']\n    })\n    .click();\n\nawait expect(\n    page.getByText(translations.learn['sorry-keep-trying'])\n  ).toBeVisible();\n\n// Reset the challenge\n  await page.getByTestId('lowerJaw-reset-button').click();\n  await page\n    .getByRole('button', { name: translations.buttons['reset-lesson'] })\n    .click();\n\n// Check it's back to the initial state\n  await expect(initialEditorText).toBeVisible();\n  await expect(\n    page.getByText(translations.learn['sorry-keep-trying'])\n  ).not.toBeVisible();\n});\n\ntest.describe('When the user is not logged in', () => {\n  test.use({ storageState: { cookies: [], origins: [] } });\n  test('User can reset classic challenge', async ({ page, isMobile }) => {\n    await page.goto(\n      '/learn/javascript-algorithms-and-data-structures/basic-javascript/comment-your-javascript-code'\n    );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9351,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\challenge-reset-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "2933808618cf439dc4b3e87a33dda889",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\challenge-reset-modal.spec.ts",
    "source_type": "git_repo",
    "title": "challenge-reset-modal.spec",
    "content": "Command // or Ctrl name: translations.buttons['check-code'] }) .click(); await expect( page.getByText(translations.learn['sorry-keep-trying']) ).toBeVisible(); // Reset the challenge await page.getByTestId('lowerJaw-reset-button').click(); await page .getByRole('button', { name: translations.buttons['reset-lesson'] }) .click(); // Check it's back to the initial state await expect(initialEditorText).toBeVisible(); await expect( page.getByText(translations.learn['sorry-keep-trying']) ).not.toBeVisible(); }); test.describe('When the user is not logged in', () => { test.use({ storageState: { cookies: [], origins: [] } }); test('User can reset classic challenge', async ({ page, isMobile }) => { await page.goto( '/learn/javascript-algorithms-and-data-structures/basic-javascript/comment-your-javascript-code' );\n\nconst challengeSolution = '// This is in-line comment';\n    await focusEditor({ page, isMobile });\n    await getEditors(page).fill(challengeSolution);\n\nconst submitButton = page.getByRole('button', {\n      name: isMobile\n        ? translations.buttons.run\n        : translations.buttons['run-test']\n    });\n    await submitButton.click();\n\nawait expect(\n      page.locator('.view-lines').getByText(challengeSolution)\n    ).toBeVisible();\n\nif (isMobile) {\n      await page\n        .getByText(translations.learn['editor-tabs'].instructions)\n        .click();\n    }\n\nawait expect(\n      page.getByLabel(translations.icons.passed).locator('circle')\n    ).toBeVisible();\n\nawait page\n      .getByRole('button', {\n        name: !isMobile\n          ? translations.buttons['reset-lesson']\n          : translations.buttons.reset\n      })\n      .click();\n\nawait page\n      .getByRole('button', { name: translations.buttons['reset-lesson'] })\n      .click();\n\nawait expect(\n      page.locator('.view-lines').getByText(challengeSolution)\n    ).not.toBeVisible();\n    await expect(\n      page.getByLabel(translations.icons.passed).locator('circle')\n    ).not.toBeVisible();\n    await expect(\n      page.getByText(translations.learn['tests-completed'])\n    ).not.toBeVisible();\n\nif (isMobile) {\n      await page.getByText(translations.learn['editor-tabs'].console).click();\n    }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9351,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\challenge-reset-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "279ff80c670cf6ef5eab8000bd020caa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\challenge-reset-modal.spec.ts",
    "source_type": "git_repo",
    "title": "challenge-reset-modal.spec",
    "content": "comment'; await focusEditor({ page, isMobile }); await getEditors(page).fill(challengeSolution); const submitButton = page.getByRole('button', { name: isMobile ? translations.buttons.run : translations.buttons['run-test'] }); await submitButton.click(); await expect( page.locator('.view-lines').getByText(challengeSolution) ).toBeVisible(); if (isMobile) { await page .getByText(translations.learn['editor-tabs'].instructions) .click(); } await expect( page.getByLabel(translations.icons.passed).locator('circle') ).toBeVisible(); await page .getByRole('button', { name: !isMobile ? translations.buttons['reset-lesson'] : translations.buttons.reset }) .click(); await page .getByRole('button', { name: translations.buttons['reset-lesson'] }) .click(); await expect( page.locator('.view-lines').getByText(challengeSolution) ).not.toBeVisible(); await expect( page.getByLabel(translations.icons.passed).locator('circle') ).not.toBeVisible(); await expect( page.getByText(translations.learn['tests-completed']) ).not.toBeVisible(); if (isMobile) { await page.getByText(translations.learn['editor-tabs'].console).click(); }\n\nawait expect(\n      page.getByText(translations.learn['test-output'])\n    ).toBeVisible();\n  });\n});\n\ntest('should close when the user clicks the close button', async ({ page }) => {\n  await page.goto(\n    '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3'\n  );\n\nawait page.getByRole('button', { name: translations.buttons.reset }).click();\n\nawait expect(\n    page.getByRole('dialog', { name: translations.learn.reset })\n  ).toBeVisible();\n\nawait page\n    .getByRole('button', {\n      name: translations.buttons.close\n    })\n    .click();\n\nawait expect(\n    page.getByRole('dialog', { name: translations.learn.reset })\n  ).toBeHidden();\n});\n\ntest('User can reset on a multi-file project', async ({\n  page,\n  isMobile,\n  browserName\n}) => {\n  const sampleText = 'function palindrome() { return true; }';\n\nawait page.goto(\n    '/learn/javascript-algorithms-and-data-structures-v8/build-a-palindrome-checker-project/build-a-palindrome-checker'\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9351,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\challenge-reset-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "a5c7e04b093447f737ed5d8fe01a9c8a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\challenge-reset-modal.spec.ts",
    "source_type": "git_repo",
    "title": "challenge-reset-modal.spec",
    "content": "when the user clicks the close button', async ({ page }) => { await page.goto( '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3' ); await page.getByRole('button', { name: translations.buttons.reset }).click(); await expect( page.getByRole('dialog', { name: translations.learn.reset }) ).toBeVisible(); await page .getByRole('button', { name: translations.buttons.close }) .click(); await expect( page.getByRole('dialog', { name: translations.learn.reset }) ).toBeHidden(); }); test('User can reset on a multi-file project', async ({ page, isMobile, browserName }) => { const sampleText = 'function palindrome() { return true; }'; await page.goto( '/learn/javascript-algorithms-and-data-structures-v8/build-a-palindrome-checker-project/build-a-palindrome-checker' );\n\nawait focusEditor({ page, isMobile });\n  await clearEditor({ page, browserName });\n  await getEditors(page).fill(sampleText);\n  await expect(page.getByText(sampleText)).toBeVisible();\n\nawait page.getByRole('button', { name: translations.buttons.revert }).click();\n\nawait expectToRenderResetModal(page);\n\nawait expect(\n    page.getByRole('button', {\n      name: translations.buttons['revert-to-saved-code']\n    })\n  ).toBeVisible();\n\nawait page\n    .getByRole('button', {\n      name: translations.buttons['revert-to-saved-code']\n    })\n    .click();\n\nawait expect(page.getByText(translations.learn['revert-warn'])).toBeVisible();\n\nawait expect(page.getByText(sampleText)).not.toBeVisible();\n});\n\ntest.describe('Signed in user', () => {\n  test.use({ storageState: 'playwright/.auth/development-user.json' });\n\ntest.beforeEach(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user');\n  });\n\ntest.afterEach(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n  });\n\ntest('User can reset on a multi-file project after reloading and saving', async ({\n    page,\n    isMobile,\n    browserName\n  }) => {\n    test.setTimeout(60000);\n    const savedText = 'function palindrome() { return true; }';\n    const updatedText = 'function palindrome() { return false; }';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9351,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\challenge-reset-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "8851f61a8eb31b7d66564e02c90d222d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\challenge-reset-modal.spec.ts",
    "source_type": "git_repo",
    "title": "challenge-reset-modal.spec",
    "content": "}) ).toBeVisible(); await page .getByRole('button', { name: translations.buttons['revert-to-saved-code'] }) .click(); await expect(page.getByText(translations.learn['revert-warn'])).toBeVisible(); await expect(page.getByText(sampleText)).not.toBeVisible(); }); test.describe('Signed in user', () => { test.use({ storageState: 'playwright/.auth/development-user.json' }); test.beforeEach(() => { execSync('node ./tools/scripts/seed/seed-demo-user'); }); test.afterEach(() => { execSync('node ./tools/scripts/seed/seed-demo-user --certified-user'); }); test('User can reset on a multi-file project after reloading and saving', async ({ page, isMobile, browserName }) => { test.setTimeout(60000); const savedText = 'function palindrome() { return true; }'; const updatedText = 'function palindrome() { return false; }';\n\nawait page.goto(\n      '/learn/javascript-algorithms-and-data-structures-v8/build-a-palindrome-checker-project/build-a-palindrome-checker'\n    );\n\n// This first edit should reappear after the reset\n    await focusEditor({ page, isMobile });\n    await clearEditor({ page, browserName });\n    await getEditors(page).fill(savedText);\n    await page.keyboard.press('Control+S');\n    await alertToBeVisible(page, translations.flash['code-saved']);\n\nawait page.reload();\n\n// This second edit should be reset\n    await focusEditor({ page, isMobile });\n    await clearEditor({ page, browserName });\n    await getEditors(page).fill(updatedText);\n\nawait page\n      .getByRole('button', { name: translations.buttons.revert })\n      .click();\n\nawait page\n      .getByRole('button', {\n        name: translations.buttons['revert-to-saved-code']\n      })\n      .click();\n\nawait expect(page.getByText(updatedText)).not.toBeVisible();\n    await expect(page.getByText(savedText)).toBeVisible();\n  });\n\ntest('User can reset on a multi-file project without reloading', async ({\n    page,\n    isMobile,\n    browserName\n  }) => {\n    test.setTimeout(60000);\n    const savedText = 'function palindrome() { return true; }';\n    const updatedText = 'function palindrome() { return false; }';",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9351,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\challenge-reset-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "b202207a100503c7c2fade3bfbaf92b1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\challenge-reset-modal.spec.ts",
    "source_type": "git_repo",
    "title": "challenge-reset-modal.spec",
    "content": "// This second edit should be reset await focusEditor({ page, isMobile }); await clearEditor({ page, browserName }); await getEditors(page).fill(updatedText); await page .getByRole('button', { name: translations.buttons.revert }) .click(); await page .getByRole('button', { name: translations.buttons['revert-to-saved-code'] }) .click(); await expect(page.getByText(updatedText)).not.toBeVisible(); await expect(page.getByText(savedText)).toBeVisible(); }); test('User can reset on a multi-file project without reloading', async ({ page, isMobile, browserName }) => { test.setTimeout(60000); const savedText = 'function palindrome() { return true; }'; const updatedText = 'function palindrome() { return false; }';\n\nawait page.goto(\n      '/learn/javascript-algorithms-and-data-structures-v8/build-a-palindrome-checker-project/build-a-palindrome-checker'\n    );\n\n// This first edit should reappear after the reset\n    await focusEditor({ page, isMobile });\n    await clearEditor({ page, browserName });\n    await getEditors(page).fill(savedText);\n    await page.keyboard.press('Control+S');\n    await alertToBeVisible(page, translations.flash['code-saved']);\n\n// This second edit should be reset\n    await focusEditor({ page, isMobile });\n    await clearEditor({ page, browserName });\n    await getEditors(page).fill(updatedText);\n\nawait page\n      .getByRole('button', { name: translations.buttons.revert })\n      .click();\n\nawait page\n      .getByRole('button', {\n        name: translations.buttons['revert-to-saved-code']\n      })\n      .click();\n\nawait expect(page.getByText(updatedText)).not.toBeVisible();\n    await expect(page.getByText(savedText)).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9351,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\challenge-reset-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 381,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "ef3b0b856b35964f9bee595194a8727b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\challenge-title.spec.ts",
    "source_type": "git_repo",
    "title": "challenge-title.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(\n    '/learn/information-security/python-for-penetration-testing/developing-a-port-scanner'\n  );\n});\n\ntest.describe('Challenge Title Component (signed out)', () => {\n  test.use({ storageState: { cookies: [], origins: [] } });\n\ntest('should render correctly', async ({ page }) => {\n    await expect(page.getByLabel('Passed')).not.toBeVisible();\n\nawait expect(\n      page.getByRole('heading', { name: 'Developing a Port Scanner' })\n    ).toBeVisible();\n  });\n\ntest('should not display GreenPass after challenge completion', async ({\n    page\n  }) => {\n    // Set `force: true` to bypass Playwright's check\n    // as the radio is visually hidden and the click event is intercepted by the `span` element.\n    await page\n      .getByRole('radio', {\n        name: 'If there is an error or if no host is found, .connect() raises an exception while .connect_ex() returns an error code.'\n      })\n      .click({ force: true });\n\nawait page\n      .getByRole('button', { name: translations.buttons['check-answer'] })\n      .click();\n\nawait page\n      .getByRole('button', { name: translations.buttons['go-to-next'] })\n      .click();\n\n// After clicking 'go-to-next' button, page redirects to courses list.\n    // We need to wait for this navigation to be completed before navigating to the next\n    // or Firefox will throw a NS_BINDING_ABORTED error.\n    await page.waitForURL(\n      '/learn/information-security/#python-for-penetration-testing'\n    );\n\n// Returning back to the challenge, to verify that GreenPass is rendered on the challenge itself.\n    await page.goto(\n      '/learn/information-security/python-for-penetration-testing/developing-a-port-scanner'\n    );\n\nawait page.waitForLoadState();\n\nawait expect(page.getByLabel('Passed')).not.toBeVisible();\n  });\n\ntest(\"should appropriately render 'Please Help Us Translate' link\", async ({\n    page\n  }) => {\n    const visibleEnglishTitle = await page\n      .getByRole('heading', { name: 'Developing a Port Scanner' })\n      .isVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4188,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\challenge-title.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "6ab17c48833864b73950089d906d26ee",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\challenge-title.spec.ts",
    "source_type": "git_repo",
    "title": "challenge-title.spec",
    "content": "for this navigation to be completed before navigating to the next // or Firefox will throw a NS_BINDING_ABORTED error. await page.waitForURL( '/learn/information-security/#python-for-penetration-testing' ); // Returning back to the challenge, to verify that GreenPass is rendered on the challenge itself. await page.goto( '/learn/information-security/python-for-penetration-testing/developing-a-port-scanner' ); await page.waitForLoadState(); await expect(page.getByLabel('Passed')).not.toBeVisible(); }); test(\"should appropriately render 'Please Help Us Translate' link\", async ({ page }) => { const visibleEnglishTitle = await page .getByRole('heading', { name: 'Developing a Port Scanner' }) .isVisible();\n\nif (process.env.CURRICULUM_LOCALE != 'english' && visibleEnglishTitle) {\n      // Challenge title has not been translated, expect a\n      // 'Help us translate' button\n      await expect(page.getByText('Help us translate')).toBeVisible();\n    } else {\n      // CURRICULUM_LOCALE is set to english or curriculum is already\n      // translated. Do not expect a 'Help us translate' button.\n      await expect(page.getByText('Help us translate')).not.toBeVisible();\n    }\n  });\n});\n\ntest.describe('Challenge Title Component (signed in)', () => {\n  test('should display GreenPass after challenge completion', async ({\n    page\n  }) => {\n    await expect(\n      page.getByRole('heading', { name: 'Developing a Port Scanner' })\n    ).toBeVisible();\n\n// Set `force: true` to bypass Playwright's check\n    // as the radio is visually hidden and the click event is intercepted by the `span` element.\n    await page\n      .getByRole('radio', {\n        name: 'If there is an error or if no host is found, .connect() raises an exception while .connect_ex() returns an error code.'\n      })\n      .click({ force: true });\n\nawait page\n      .getByRole('button', { name: translations.buttons['check-answer'] })\n      .click();\n\nawait page\n      .getByRole('button', { name: translations.buttons['go-to-next'] })\n      .click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4188,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\challenge-title.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 464,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "dbbe064365846d2ae60662824c618d02",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\challenge-title.spec.ts",
    "source_type": "git_repo",
    "title": "challenge-title.spec",
    "content": "Port Scanner' }) ).toBeVisible(); // Set `force: true` to bypass Playwright's check // as the radio is visually hidden and the click event is intercepted by the `span` element. await page .getByRole('radio', { name: 'If there is an error or if no host is found, .connect() raises an exception while .connect_ex() returns an error code.' }) .click({ force: true }); await page .getByRole('button', { name: translations.buttons['check-answer'] }) .click(); await page .getByRole('button', { name: translations.buttons['go-to-next'] }) .click();\n\n// After clicking 'go-to-next' button, page redirects to courses list.\n    // We need to wait for this navigation to be completed before navigating to the next\n    // or Firefox will throw a NS_BINDING_ABORTED error.\n    await page.waitForURL(\n      '/learn/information-security/#python-for-penetration-testing'\n    );\n\n// Returning back to the challenge, to verify that GreenPass is rendered on the challenge itself.\n    await page.goto(\n      '/learn/information-security/python-for-penetration-testing/developing-a-port-scanner'\n    );\n\nawait page.waitForLoadState();\n\nawait expect(page.getByLabel('Passed')).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4188,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\challenge-title.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 270,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "481dfed9c12189248f55941a9d6c0539",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\challenge.spec.ts",
    "source_type": "git_repo",
    "title": "challenge.spec",
    "content": "import { test, expect } from '@playwright/test';\n\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { clearEditor, focusEditor, getEditors } from './utils/editor';\n\ntest.describe('when reloading the page', () => {\n  test.beforeEach(async ({ page }) => {\n    const pageUsingEditableRegionInTests =\n      '/learn/2022/responsive-web-design/learn-basic-css-by-building-a-cafe-menu/step-14';\n    await page.goto(pageUsingEditableRegionInTests);\n  });\n  // This is quite brittle. If it breaks, try to come up with a unit test instead.\n\ntest('should keep the editable content for testing', async ({\n    page,\n    isMobile,\n    browserName\n  }) => {\n    await focusEditor({ page, isMobile });\n    await clearEditor({ page, browserName });\n    // For some reason, fill doesn't work properly on firefox if there are new lines\n    // in the text, hence one line:\n    const solution = `h1, h2, p { text-align: center; }`;\n\nawait getEditors(page).fill(solution);\n    const editorTextLocator = page\n      .getByTestId('editor-container-stylescss')\n      .getByText(solution);\n    await expect(editorTextLocator).toBeVisible();\n\n// save the code\n    await page.keyboard.down('Control');\n    await page.keyboard.press('S');\n\nawait page.reload();\n\nawait expect(editorTextLocator).toBeVisible();\n\n// check the tests pass\n    await page.keyboard.down('Control');\n    await page.keyboard.press('Enter');\n\nawait expect(\n      page.getByText(translations.learn.congratulations)\n    ).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1548,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\challenge.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 351,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8ba3e7c022032ab5f01539213a7b3fe5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\code-storage.spec.ts",
    "source_type": "git_repo",
    "title": "code-storage.spec",
    "content": "import { test, expect } from '@playwright/test';\n\nimport { getEditors } from './utils/editor';\n\ntest.describe('Challenge with editor', function () {\n  test.skip(({ isMobile }) => isMobile);\n  test('the shortcut \"Ctrl + S\" saves the code', async ({ page }) => {\n    await page.goto(\n      '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-2'\n    );\n\nconst editor = getEditors(page);\n\nawait editor.fill('Something funny');\n    await page.keyboard.down('Control');\n    await page.keyboard.press('S');\n\nawait expect(\n      page.getByText(\n        \"Saved! Your code was saved to your browser's local storage.\"\n      )\n    ).toBeVisible();\n\nawait page.reload();\n\n// check editor content\n    await expect(editor).toHaveValue(/Something funny/);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 797,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\code-storage.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 178,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "119cd8e0da23e51b22b319477d608cdc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
    "source_type": "git_repo",
    "title": "certification.spec",
    "content": "import { execSync } from 'child_process';\nimport { test, expect, Page } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { alertToBeVisible } from './utils/alerts';\nimport {\n  deleteAllEmails,\n  getAllEmails,\n  getFirstEmail,\n  getSubject\n} from './utils/mailhog';\n\ntest.describe('Claim a certification - almost certified user', () => {\n  test.beforeEach(async () => {\n    await deleteAllEmails();\n    execSync('node ./tools/scripts/seed/seed-demo-user --unclaimed-user');\n  });\n\ntest.afterAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n  });\n  test.use({ storageState: 'playwright/.auth/certified-user.json' });\n\ntest('User receives a congratulations email on completing all certs', async ({\n    page\n  }) => {\n    await page.goto('/settings#cert-front-end-development-libraries');\n    await page\n      .getByRole('button', { name: 'Claim Certification Front End' })\n      .click();\n    // verify that an email is sent\n    await expect(async () => {\n      const emails = await getAllEmails();\n      expect(emails.items).toHaveLength(1);\n      expect(getSubject(getFirstEmail(emails))).toBe(\n        'Congratulations on completing all of the freeCodeCamp certifications!'\n      );\n    }).toPass();\n  });\n});\n\ntest.describe('Certification page - Non Microsoft', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto('/certification/certifieduser/responsive-web-design');\n  });\n\ntest('The certificate page has a donation section', async ({ page }) => {\n    const donationSection = page.getByTestId('donation-section');\n    await expect(donationSection).toBeVisible();\n\nconst donationText = donationSection.getByTestId('donation-text');\n    await expect(donationText).toHaveText(translations.donate['only-you']);\n\nconst donationForm = donationSection.getByTestId('donation-tier-selector');\n    await expect(donationForm).toBeVisible();\n  });\n\ntest('Verify the certificate itself', async ({ page }) => {\n    const certWrapper = page.getByTestId('cert-wrapper');\n    await expect(certWrapper).toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 11258,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 11
  },
  {
    "id": "3beb603e17de52a27f33b0fb66cfe24b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
    "source_type": "git_repo",
    "title": "certification.spec",
    "content": "on completing all of the freeCodeCamp certifications!' ); }).toPass(); }); }); test.describe('Certification page - Non Microsoft', () => { test.beforeEach(async ({ page }) => { await page.goto('/certification/certifieduser/responsive-web-design'); }); test('The certificate page has a donation section', async ({ page }) => { const donationSection = page.getByTestId('donation-section'); await expect(donationSection).toBeVisible(); const donationText = donationSection.getByTestId('donation-text'); await expect(donationText).toHaveText(translations.donate['only-you']); const donationForm = donationSection.getByTestId('donation-tier-selector'); await expect(donationForm).toBeVisible(); }); test('Verify the certificate itself', async ({ page }) => { const certWrapper = page.getByTestId('cert-wrapper'); await expect(certWrapper).toBeVisible();\n\nconst header = certWrapper.getByTestId('cert-header');\n    await expect(header).toBeVisible();\n    const fccLogo = header.getByTestId('cert-fcc-logo');\n    await expect(fccLogo).toBeVisible();\n    // Non Microsoft certs should not have this one\n    const microsoftLogo = header.getByTestId('cert-microsoft-logo');\n    await expect(microsoftLogo).not.toBeVisible();\n\nconst certInfoContainer = certWrapper.getByTestId('cert-info-container');\n    await expect(certInfoContainer).toBeVisible();\n    const certTitle = certInfoContainer.getByTestId('certification-title');\n    await expect(certTitle).toHaveText(\n      translations.certification.title['responsive-web-design']\n    );\n\nconst footer = certWrapper.getByTestId('cert-footer');\n    await expect(footer).toBeVisible();\n    const QunicySignature = footer.getByTestId('quincy-signature');\n    await expect(QunicySignature).toBeVisible();\n    // Non Microsoft certs should not have this one\n    const microsoftSignature = footer.getByTestId('microsoft-signature');\n    await expect(microsoftSignature).not.toBeVisible();\n  });\n\ntest('Validate certificate/social/project links', async ({ page }) => {\n    const certLink = page.getByTestId('cert-links');\n    await expect(certLink).toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 11258,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 438,
    "chunk_index": 1,
    "total_chunks": 11
  },
  {
    "id": "5d11f87acca6169446b10868f50fa41a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
    "source_type": "git_repo",
    "title": "certification.spec",
    "content": "= header.getByTestId('cert-fcc-logo'); await expect(fccLogo).toBeVisible(); // Non Microsoft certs should not have this one const microsoftLogo = header.getByTestId('cert-microsoft-logo'); await expect(microsoftLogo).not.toBeVisible(); const certInfoContainer = certWrapper.getByTestId('cert-info-container'); await expect(certInfoContainer).toBeVisible(); const certTitle = certInfoContainer.getByTestId('certification-title'); await expect(certTitle).toHaveText( translations.certification.title['responsive-web-design'] ); const footer = certWrapper.getByTestId('cert-footer'); await expect(footer).toBeVisible(); const QunicySignature = footer.getByTestId('quincy-signature'); await expect(QunicySignature).toBeVisible(); // Non Microsoft certs should not have this one const microsoftSignature = footer.getByTestId('microsoft-signature'); await expect(microsoftSignature).not.toBeVisible(); }); test('Validate certificate/social/project links', async ({ page }) => { const certLink = page.getByTestId('cert-links'); await expect(certLink).toBeVisible();\n\nconst linkedinLink = certLink.getByTestId('linkedin-share-btn');\n    await expect(linkedinLink).toBeVisible();\n    await expect(linkedinLink).toHaveAttribute(\n      'href',\n      `https://www.linkedin.com/profile/add?startTask=CERTIFICATION_NAME&name=Responsive%20Web%20Design&organizationId=4831032&issueYear=2018&issueMonth=8&certUrl=https://freecodecamp.org/certification/certifieduser/responsive-web-design&certId=certifieduser-rwd`\n    );\n\nconst twitterLink = certLink.getByTestId('twitter-share-btn');\n    await expect(twitterLink).toBeVisible();\n    await expect(twitterLink).toHaveAttribute(\n      'href',\n      `https://twitter.com/intent/tweet?text=I just earned the Responsive%20Web%20Design certification @freeCodeCamp! Check it out here: https://freecodecamp.org/certification/certifieduser/responsive-web-design`\n    );\n\nconst projectLinks = certLink.getByTestId('project-links');\n    await expect(projectLinks).toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 11258,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 2,
    "total_chunks": 11
  },
  {
    "id": "0e91883611c58230f1025968c26a1d27",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
    "source_type": "git_repo",
    "title": "certification.spec",
    "content": "const QunicySignature = footer.getByTestId('quincy-signature'); await expect(QunicySignature).toBeVisible(); // Non Microsoft certs should not have this one const microsoftSignature = footer.getByTestId('microsoft-signature'); await expect(microsoftSignature).not.toBeVisible(); }); test('Validate certificate/social/project links', async ({ page }) => { const certLink = page.getByTestId('cert-links'); await expect(certLink).toBeVisible(); const linkedinLink = certLink.getByTestId('linkedin-share-btn'); await expect(linkedinLink).toBeVisible(); await expect(linkedinLink).toHaveAttribute( 'href', `https://www.linkedin.com/profile/add?startTask=CERTIFICATION_NAME&name=Responsive%20Web%20Design&organizationId=4831032&issueYear=2018&issueMonth=8&certUrl=https://freecodecamp.org/certification/certifieduser/responsive-web-design&certId=certifieduser-rwd` ); const twitterLink = certLink.getByTestId('twitter-share-btn'); await expect(twitterLink).toBeVisible(); await expect(twitterLink).toHaveAttribute( 'href', `https://twitter.com/intent/tweet?text=I just earned the Responsive%20Web%20Design certification @freeCodeCamp! Check it out here: https://freecodecamp.org/certification/certifieduser/responsive-web-design` ); const projectLinks = certLink.getByTestId('project-links'); await expect(projectLinks).toBeVisible();\n\nconst surveyFormLink = projectLinks.getByRole('link', {\n      name: 'Build a Survey Form'\n    });\n    await expect(surveyFormLink).toBeVisible();\n    await expect(surveyFormLink).toHaveAttribute(\n      'href',\n      '/learn/2022/responsive-web-design/build-a-survey-form-project/build-a-survey-form'\n    );\n\nconst tributePageLink = projectLinks.getByRole('link', {\n      name: 'Build a Tribute Page'\n    });\n    await expect(tributePageLink).toBeVisible();\n    await expect(tributePageLink).toHaveAttribute(\n      'href',\n      '/learn/2022/responsive-web-design/build-a-tribute-page-project/build-a-tribute-page'\n    );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 11258,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 457,
    "chunk_index": 3,
    "total_chunks": 11
  },
  {
    "id": "537ae8826473aa313f72565f24a54183",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
    "source_type": "git_repo",
    "title": "certification.spec",
    "content": "expect(certLink).toBeVisible(); const linkedinLink = certLink.getByTestId('linkedin-share-btn'); await expect(linkedinLink).toBeVisible(); await expect(linkedinLink).toHaveAttribute( 'href', `https://www.linkedin.com/profile/add?startTask=CERTIFICATION_NAME&name=Responsive%20Web%20Design&organizationId=4831032&issueYear=2018&issueMonth=8&certUrl=https://freecodecamp.org/certification/certifieduser/responsive-web-design&certId=certifieduser-rwd` ); const twitterLink = certLink.getByTestId('twitter-share-btn'); await expect(twitterLink).toBeVisible(); await expect(twitterLink).toHaveAttribute( 'href', `https://twitter.com/intent/tweet?text=I just earned the Responsive%20Web%20Design certification @freeCodeCamp! Check it out here: https://freecodecamp.org/certification/certifieduser/responsive-web-design` ); const projectLinks = certLink.getByTestId('project-links'); await expect(projectLinks).toBeVisible(); const surveyFormLink = projectLinks.getByRole('link', { name: 'Build a Survey Form' }); await expect(surveyFormLink).toBeVisible(); await expect(surveyFormLink).toHaveAttribute( 'href', '/learn/2022/responsive-web-design/build-a-survey-form-project/build-a-survey-form' ); const tributePageLink = projectLinks.getByRole('link', { name: 'Build a Tribute Page' }); await expect(tributePageLink).toBeVisible(); await expect(tributePageLink).toHaveAttribute( 'href', '/learn/2022/responsive-web-design/build-a-tribute-page-project/build-a-tribute-page' );\n\nconst technicalDocumentationPageLink = projectLinks.getByRole('link', {\n      name: 'Build a Technical Documentation Page'\n    });\n    await expect(technicalDocumentationPageLink).toBeVisible();\n    await expect(technicalDocumentationPageLink).toHaveAttribute(\n      'href',\n      '/learn/2022/responsive-web-design/build-a-technical-documentation-page-project/build-a-technical-documentation-page'\n    );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 11258,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 4,
    "total_chunks": 11
  },
  {
    "id": "2758af9c37e5c783dcbc0febc6f14f15",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
    "source_type": "git_repo",
    "title": "certification.spec",
    "content": "expect(twitterLink).toHaveAttribute( 'href', `https://twitter.com/intent/tweet?text=I just earned the Responsive%20Web%20Design certification @freeCodeCamp! Check it out here: https://freecodecamp.org/certification/certifieduser/responsive-web-design` ); const projectLinks = certLink.getByTestId('project-links'); await expect(projectLinks).toBeVisible(); const surveyFormLink = projectLinks.getByRole('link', { name: 'Build a Survey Form' }); await expect(surveyFormLink).toBeVisible(); await expect(surveyFormLink).toHaveAttribute( 'href', '/learn/2022/responsive-web-design/build-a-survey-form-project/build-a-survey-form' ); const tributePageLink = projectLinks.getByRole('link', { name: 'Build a Tribute Page' }); await expect(tributePageLink).toBeVisible(); await expect(tributePageLink).toHaveAttribute( 'href', '/learn/2022/responsive-web-design/build-a-tribute-page-project/build-a-tribute-page' ); const technicalDocumentationPageLink = projectLinks.getByRole('link', { name: 'Build a Technical Documentation Page' }); await expect(technicalDocumentationPageLink).toBeVisible(); await expect(technicalDocumentationPageLink).toHaveAttribute( 'href', '/learn/2022/responsive-web-design/build-a-technical-documentation-page-project/build-a-technical-documentation-page' );\n\nconst productLandingPageLink = projectLinks.getByRole('link', {\n      name: 'Build a Product Landing Page'\n    });\n    await expect(productLandingPageLink).toBeVisible();\n    await expect(productLandingPageLink).toHaveAttribute(\n      'href',\n      '/learn/2022/responsive-web-design/build-a-product-landing-page-project/build-a-product-landing-page'\n    );\n\nconst personalPortfolioWebpageLink = projectLinks.getByRole('link', {\n      name: 'Build a Personal Portfolio Webpage'\n    });\n    await expect(personalPortfolioWebpageLink).toBeVisible();\n    await expect(personalPortfolioWebpageLink).toHaveAttribute(\n      'href',\n      '/learn/2022/responsive-web-design/build-a-personal-portfolio-webpage-project/build-a-personal-portfolio-webpage'\n    );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 11258,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 5,
    "total_chunks": 11
  },
  {
    "id": "800d2a8d2394aa3fda8bfc43a5b8675e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
    "source_type": "git_repo",
    "title": "certification.spec",
    "content": "); const tributePageLink = projectLinks.getByRole('link', { name: 'Build a Tribute Page' }); await expect(tributePageLink).toBeVisible(); await expect(tributePageLink).toHaveAttribute( 'href', '/learn/2022/responsive-web-design/build-a-tribute-page-project/build-a-tribute-page' ); const technicalDocumentationPageLink = projectLinks.getByRole('link', { name: 'Build a Technical Documentation Page' }); await expect(technicalDocumentationPageLink).toBeVisible(); await expect(technicalDocumentationPageLink).toHaveAttribute( 'href', '/learn/2022/responsive-web-design/build-a-technical-documentation-page-project/build-a-technical-documentation-page' ); const productLandingPageLink = projectLinks.getByRole('link', { name: 'Build a Product Landing Page' }); await expect(productLandingPageLink).toBeVisible(); await expect(productLandingPageLink).toHaveAttribute( 'href', '/learn/2022/responsive-web-design/build-a-product-landing-page-project/build-a-product-landing-page' ); const personalPortfolioWebpageLink = projectLinks.getByRole('link', { name: 'Build a Personal Portfolio Webpage' }); await expect(personalPortfolioWebpageLink).toBeVisible(); await expect(personalPortfolioWebpageLink).toHaveAttribute( 'href', '/learn/2022/responsive-web-design/build-a-personal-portfolio-webpage-project/build-a-personal-portfolio-webpage' );\n\nawait expect(\n      page.getByText(\n        'If you suspect that any of these projects violate the academic honesty policy, please report this to our team.'\n      )\n    ).toBeVisible();\n\nconst policyLink = projectLinks.getByRole('link', {\n      name: 'academic honesty policy'\n    });\n    await expect(policyLink).toHaveAttribute(\n      'href',\n      'https://www.freecodecamp.org/news/academic-honesty-policy/'\n    );\n\nconst reportLink = projectLinks.getByRole('link', {\n      name: 'report this to our team'\n    });\n    await expect(reportLink).toHaveAttribute(\n      'href',\n      '/user/certifieduser/report-user'\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 11258,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 6,
    "total_chunks": 11
  },
  {
    "id": "938ffe7916df1a1ab335222a1f1c794d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
    "source_type": "git_repo",
    "title": "certification.spec",
    "content": "personalPortfolioWebpageLink = projectLinks.getByRole('link', { name: 'Build a Personal Portfolio Webpage' }); await expect(personalPortfolioWebpageLink).toBeVisible(); await expect(personalPortfolioWebpageLink).toHaveAttribute( 'href', '/learn/2022/responsive-web-design/build-a-personal-portfolio-webpage-project/build-a-personal-portfolio-webpage' ); await expect( page.getByText( 'If you suspect that any of these projects violate the academic honesty policy, please report this to our team.' ) ).toBeVisible(); const policyLink = projectLinks.getByRole('link', { name: 'academic honesty policy' }); await expect(policyLink).toHaveAttribute( 'href', 'https://www.freecodecamp.org/news/academic-honesty-policy/' ); const reportLink = projectLinks.getByRole('link', { name: 'report this to our team' }); await expect(reportLink).toHaveAttribute( 'href', '/user/certifieduser/report-user' ); }); });\n\ntest.describe('Invalid certification page', () => {\n  const testInvalidCertification = async ({ page }: { page: Page }) => {\n    {\n      await page.goto('/certification/certifieduser/invalid-certification');\n      await expect(page).toHaveURL('/');\n      await alertToBeVisible(page, translations.flash['certificate-missing']);\n    }\n  };\n  test.describe('for authenticated user', () => {\n    test(\n      'it should redirect to / and display an error message',\n      testInvalidCertification\n    );\n  });\n\ntest.describe('for unauthenticated user', () => {\n    test.use({ storageState: { cookies: [], origins: [] } });\n    test(\n      'it should redirect to / and display an error message',\n      testInvalidCertification\n    );\n  });\n});\n\ntest.describe('Certification page - Microsoft', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto(\n      'certification/certifieduser/foundational-c-sharp-with-microsoft'\n    );\n  });\n\ntest('The certificate page has a donation section', async ({ page }) => {\n    const donationSection = page.getByTestId('donation-section');\n    await expect(donationSection).toBeVisible();\n\nconst donationText = donationSection.getByTestId('donation-text');\n    await expect(donationText).toHaveText(translations.donate['only-you']);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 11258,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 7,
    "total_chunks": 11
  },
  {
    "id": "cbc6ce2c5d8bc37a233c6d3d20976767",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
    "source_type": "git_repo",
    "title": "certification.spec",
    "content": "testInvalidCertification ); }); test.describe('for unauthenticated user', () => { test.use({ storageState: { cookies: [], origins: [] } }); test( 'it should redirect to / and display an error message', testInvalidCertification ); }); }); test.describe('Certification page - Microsoft', () => { test.beforeEach(async ({ page }) => { await page.goto( 'certification/certifieduser/foundational-c-sharp-with-microsoft' ); }); test('The certificate page has a donation section', async ({ page }) => { const donationSection = page.getByTestId('donation-section'); await expect(donationSection).toBeVisible(); const donationText = donationSection.getByTestId('donation-text'); await expect(donationText).toHaveText(translations.donate['only-you']);\n\nconst donationForm = donationSection.getByTestId('donation-tier-selector');\n    await expect(donationForm).toBeVisible();\n  });\n\ntest('Verify the certificate itself', async ({ page }) => {\n    const certWrapper = page.getByTestId('cert-wrapper');\n    await expect(certWrapper).toBeVisible();\n\nconst header = certWrapper.getByTestId('cert-header');\n    await expect(header).toBeVisible();\n    const fccLogo = header.getByTestId('cert-fcc-logo');\n    await expect(fccLogo).toBeVisible();\n    // This is specific to Microsoft certs\n    const microsoftLogo = header.getByTestId('cert-microsoft-logo');\n    await expect(microsoftLogo).toBeVisible();\n\nconst certInfoContainer = certWrapper.getByTestId('cert-info-container');\n    await expect(certInfoContainer).toBeVisible();\n    const certTitle = certInfoContainer.getByTestId('certification-title');\n    await expect(certTitle).toHaveText(\n      translations.certification.title['foundational-c-sharp-with-microsoft']\n    );\n\nconst footer = certWrapper.getByTestId('cert-footer');\n    await expect(footer).toBeVisible();\n    const QunicySignature = footer.getByTestId('quincy-signature');\n    await expect(QunicySignature).toBeVisible();\n    // This is specific to Microsoft certs\n    const microsoftSignature = footer.getByTestId('microsoft-signature');\n    await expect(microsoftSignature).toBeVisible();\n  });\n\ntest('Validate certificate/social/project links', async ({ page }) => {\n    const certLink = page.getByTestId('cert-links');\n    await expect(certLink).toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 11258,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 8,
    "total_chunks": 11
  },
  {
    "id": "5b48eee4fa23d54fde2b7df517788ce0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
    "source_type": "git_repo",
    "title": "certification.spec",
    "content": "await expect(header).toBeVisible(); const fccLogo = header.getByTestId('cert-fcc-logo'); await expect(fccLogo).toBeVisible(); // This is specific to Microsoft certs const microsoftLogo = header.getByTestId('cert-microsoft-logo'); await expect(microsoftLogo).toBeVisible(); const certInfoContainer = certWrapper.getByTestId('cert-info-container'); await expect(certInfoContainer).toBeVisible(); const certTitle = certInfoContainer.getByTestId('certification-title'); await expect(certTitle).toHaveText( translations.certification.title['foundational-c-sharp-with-microsoft'] ); const footer = certWrapper.getByTestId('cert-footer'); await expect(footer).toBeVisible(); const QunicySignature = footer.getByTestId('quincy-signature'); await expect(QunicySignature).toBeVisible(); // This is specific to Microsoft certs const microsoftSignature = footer.getByTestId('microsoft-signature'); await expect(microsoftSignature).toBeVisible(); }); test('Validate certificate/social/project links', async ({ page }) => { const certLink = page.getByTestId('cert-links'); await expect(certLink).toBeVisible();\n\nconst linkedinLink = certLink.getByTestId('linkedin-share-btn');\n    await expect(linkedinLink).toBeVisible();\n    await expect(linkedinLink).toHaveAttribute(\n      'href',\n      'https://www.linkedin.com/profile/add?startTask=CERTIFICATION_NAME&name=Foundational%20C%23%20with%20Microsoft&organizationId=4831032&issueYear=2023&issueMonth=9&certUrl=https://freecodecamp.org/certification/certifieduser/foundational-c-sharp-with-microsoft&certId=certifieduser-fcswm'\n    );\n\nconst twitterLink = certLink.getByTestId('twitter-share-btn');\n    await expect(twitterLink).toBeVisible();\n    await expect(twitterLink).toHaveAttribute(\n      'href',\n      'https://twitter.com/intent/tweet?text=I just earned the Foundational%20C%23%20with%20Microsoft certification @freeCodeCamp! Check it out here: https://freecodecamp.org/certification/certifieduser/foundational-c-sharp-with-microsoft'\n    );\n\nconst projectLinks = certLink.getByTestId('project-links');\n    await expect(projectLinks).toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 11258,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 9,
    "total_chunks": 11
  },
  {
    "id": "a6a944f3625479661b451b76a18b3bd4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
    "source_type": "git_repo",
    "title": "certification.spec",
    "content": "await expect(footer).toBeVisible(); const QunicySignature = footer.getByTestId('quincy-signature'); await expect(QunicySignature).toBeVisible(); // This is specific to Microsoft certs const microsoftSignature = footer.getByTestId('microsoft-signature'); await expect(microsoftSignature).toBeVisible(); }); test('Validate certificate/social/project links', async ({ page }) => { const certLink = page.getByTestId('cert-links'); await expect(certLink).toBeVisible(); const linkedinLink = certLink.getByTestId('linkedin-share-btn'); await expect(linkedinLink).toBeVisible(); await expect(linkedinLink).toHaveAttribute( 'href', 'https://www.linkedin.com/profile/add?startTask=CERTIFICATION_NAME&name=Foundational%20C%23%20with%20Microsoft&organizationId=4831032&issueYear=2023&issueMonth=9&certUrl=https://freecodecamp.org/certification/certifieduser/foundational-c-sharp-with-microsoft&certId=certifieduser-fcswm' ); const twitterLink = certLink.getByTestId('twitter-share-btn'); await expect(twitterLink).toBeVisible(); await expect(twitterLink).toHaveAttribute( 'href', 'https://twitter.com/intent/tweet?text=I just earned the Foundational%20C%23%20with%20Microsoft certification @freeCodeCamp! Check it out here: https://freecodecamp.org/certification/certifieduser/foundational-c-sharp-with-microsoft' ); const projectLinks = certLink.getByTestId('project-links'); await expect(projectLinks).toBeVisible();\n\nconst surveyFormLink = projectLinks.getByRole('link', {\n      name: 'Foundational C# with Microsoft Certification Exam'\n    });\n    await expect(surveyFormLink).toBeVisible();\n    await expect(surveyFormLink).toHaveAttribute(\n      'href',\n      '/learn/foundational-c-sharp-with-microsoft/foundational-c-sharp-with-microsoft-certification-exam/foundational-c-sharp-with-microsoft-certification-exam'\n    );\n\nawait expect(\n      page.getByText(\n        'If you suspect that any of these projects violate the academic honesty policy, please report this to our team.'\n      )\n    ).toHaveCount(0);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 11258,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\certification.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 10,
    "total_chunks": 11
  },
  {
    "id": "2ebbcf39da48191c8d6ae28cc434a21e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\codeally.spec.ts",
    "source_type": "git_repo",
    "title": "codeally.spec",
    "content": "import { execSync } from 'child_process';\nimport { test, expect } from '@playwright/test';\n\ntest.describe('Before completing the project', () => {\n  test.use({ storageState: 'playwright/.auth/development-user.json' });\n\ntest.beforeEach(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --set-true isDonating');\n  });\n\ntest('should not allow you to submit a URL', async ({ page }) => {\n    await page.goto(\n      '/learn/relational-database/build-a-celestial-bodies-database-project/build-a-celestial-bodies-database'\n    );\n    await page\n      .getByRole('textbox', { name: 'solution' })\n      .fill('https://example.com');\n    await page.getByRole('textbox', { name: 'solution' }).press('Enter');\n    await expect(page.getByTestId('flash-message')).toContainText(\n      /You must complete the project first./\n    );\n  });\n});\n\ntest.describe('After completing the project', () => {\n  test.beforeAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n  });\n\ntest('should allow you to submit a URL', async ({ page }) => {\n    await page.goto(\n      '/learn/relational-database/build-a-celestial-bodies-database-project/build-a-celestial-bodies-database'\n    );\n    await page\n      .getByRole('textbox', { name: 'solution' })\n      .fill('https://example.com');\n    await page.getByRole('textbox', { name: 'solution' }).press('Enter');\n\nawait expect(page.getByRole('dialog')).toBeVisible();\n    await expect(page.getByRole('dialog')).toContainText(\n      'Submit and go to next challenge'\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1560,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\codeally.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 382,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b53dd83acfda5d8100e7e94bc754960a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\coding-interview-prep-intro-page.spec.ts",
    "source_type": "git_repo",
    "title": "coding-interview-prep-intro-page.spec",
    "content": "import { test, expect, type Page } from '@playwright/test';\n\ntest.describe('Certification intro page', () => {\n  let page: Page;\n\ntest.beforeAll(async ({ browser }) => {\n    page = await browser.newPage();\n    await page.goto('/learn/coding-interview-prep/');\n  });\n\ntest('Should have a relevant page title', async () => {\n    await expect(page).toHaveTitle('Coding Interview Prep | freeCodeCamp.org');\n  });\n\ntest('Should render', async () => {\n    await expect(\n      page.locator(\n        \"text=If you're looking for free coding exercises to prepare for your next job interview, we've got you covered.\"\n      )\n    ).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 651,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\coding-interview-prep-intro-page.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 150,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "627285e91ad9ce1b3f68c382ecf846bb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\completed-project-preview.spec.ts",
    "source_type": "git_repo",
    "title": "completed-project-preview.spec",
    "content": "import { execSync } from 'node:child_process';\n\nimport { test, expect, Page } from '@playwright/test';\n\nimport tributePage from './fixtures/tribute-page.json';\n\nimport { authedRequest } from './utils/request';\n\nconst unlockedProfile = {\n  isLocked: false,\n  showAbout: true,\n  showCerts: true,\n  showDonation: true,\n  showHeatMap: true,\n  showLocation: true,\n  showName: true,\n  showPoints: true,\n  showPortfolio: true,\n  showTimeLine: true\n};\n\nasync function expectPreviewToBeShown(page: Page) {\n  await page\n    .getByRole('button', { name: 'View Solution for Build a Tribute Page' })\n    .first()\n    .click();\n  await page.getByRole('menuitem', { name: 'View Project' }).click();\n  const modalHeading = page.getByRole('heading', {\n    name: 'Build a Tribute Page',\n    exact: true\n  });\n  await expect(modalHeading).toBeVisible();\n\nconst projectPreview = page.frameLocator('#fcc-project-preview-frame');\n  await expect(projectPreview.getByText('Tribute page text')).toBeVisible();\n}\n\ntest.describe('Completed project preview', () => {\n  test.use({ storageState: 'playwright/.auth/development-user.json' });\n\ntest.beforeEach(async ({ request }) => {\n    execSync('node ./tools/scripts/seed/seed-demo-user');\n\nawait authedRequest({\n      request,\n      method: 'post',\n      endpoint: '/modern-challenge-completed',\n      data: {\n        id: tributePage.id,\n        challengeType: 14,\n        files: [tributePage.htmlFile, tributePage.cssFile]\n      }\n    });\n\nawait authedRequest({\n      request,\n      endpoint: '/update-my-profileui',\n      method: 'put',\n      data: {\n        profileUI: unlockedProfile\n      }\n    });\n  });\n\ntest('it should be viewable on the timeline', async ({ page }) => {\n    await page.goto('/developmentuser');\n\nif (!process.env.CI) {\n      await page\n        .getByRole('button', { name: 'Preview custom 404 page' })\n        .click();\n    }\n\nawait expect(\n      page.getByRole('heading', { name: '@developmentuser' })\n    ).toBeVisible();\n\nawait expectPreviewToBeShown(page);\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2201,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\completed-project-preview.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "0c6bbf64883bd69e4c069f0f25692fda",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\completed-project-preview.spec.ts",
    "source_type": "git_repo",
    "title": "completed-project-preview.spec",
    "content": "{ execSync('node ./tools/scripts/seed/seed-demo-user'); await authedRequest({ request, method: 'post', endpoint: '/modern-challenge-completed', data: { id: tributePage.id, challengeType: 14, files: [tributePage.htmlFile, tributePage.cssFile] } }); await authedRequest({ request, endpoint: '/update-my-profileui', method: 'put', data: { profileUI: unlockedProfile } }); }); test('it should be viewable on the timeline', async ({ page }) => { await page.goto('/developmentuser'); if (!process.env.CI) { await page .getByRole('button', { name: 'Preview custom 404 page' }) .click(); } await expect( page.getByRole('heading', { name: '@developmentuser' }) ).toBeVisible(); await expectPreviewToBeShown(page); });\n\ntest('it should be viewable on the settings page', async ({ page }) => {\n    await page.goto('/settings');\n\nawait expectPreviewToBeShown(page);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2201,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\completed-project-preview.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 219,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "2f073ba35ff177c1a2e3ed4ac4eb742a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\completion-modal.spec.ts",
    "source_type": "git_repo",
    "title": "completion-modal.spec",
    "content": "import { execSync } from 'node:child_process';\n\nimport { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { authedRequest } from './utils/request';\nimport { allowTrailingSlash } from './utils/url';\n\nconst nextChallengeURL =\n  '/learn/data-analysis-with-python/data-analysis-with-python-projects/demographic-data-analyzer';\n\ntest.beforeAll(() => {\n  execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n});\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(\n    '/learn/data-analysis-with-python/data-analysis-with-python-projects/mean-variance-standard-deviation-calculator'\n  );\n  await page.getByLabel('Solution Link').fill('https://example.com');\n  await page\n    .getByRole('button', { name: \"I've completed this challenge\" })\n    .click();\n});\n\ntest.describe('Challenge Completion Modal Tests (Signed Out)', () => {\n  test.use({ storageState: { cookies: [], origins: [] } });\n  test('should render the modal correctly', async ({ page }) => {\n    await expect(page.getByRole('heading')).toBeVisible();\n    await expect(page.getByRole('button', { name: 'close' })).toBeVisible();\n    await expect(page.getByTestId('completion-success-icon')).toBeVisible();\n    await expect(page.getByTestId('progress-bar-container')).toBeVisible();\n    await expect(\n      page.getByRole('link', { name: translations.learn['sign-in-save'] })\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: translations.buttons['go-to-next'] })\n    ).toBeVisible();\n  });\n\ntest('should close the modal after user click on close', async ({ page }) => {\n    await page.getByRole('button', { name: 'close' }).click();\n    await expect(page.getByTestId('completion-success-icon')).not.toBeVisible();\n  });\n\ntest('should close the modal after user presses escape', async ({ page }) => {\n    await expect(page.getByRole('dialog')).toBeVisible();\n    await page.keyboard.press('Escape');\n    await expect(page.getByRole('dialog')).not.toBeVisible();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6531,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\completion-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "2d733f5ac07aa7d4fca3c1f67fbbef11",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\completion-modal.spec.ts",
    "source_type": "git_repo",
    "title": "completion-modal.spec",
    "content": "=> { await expect(page.getByRole('heading')).toBeVisible(); await expect(page.getByRole('button', { name: 'close' })).toBeVisible(); await expect(page.getByTestId('completion-success-icon')).toBeVisible(); await expect(page.getByTestId('progress-bar-container')).toBeVisible(); await expect( page.getByRole('link', { name: translations.learn['sign-in-save'] }) ).toBeVisible(); await expect( page.getByRole('button', { name: translations.buttons['go-to-next'] }) ).toBeVisible(); }); test('should close the modal after user click on close', async ({ page }) => { await page.getByRole('button', { name: 'close' }).click(); await expect(page.getByTestId('completion-success-icon')).not.toBeVisible(); }); test('should close the modal after user presses escape', async ({ page }) => { await expect(page.getByRole('dialog')).toBeVisible(); await page.keyboard.press('Escape'); await expect(page.getByRole('dialog')).not.toBeVisible(); });\n\ntest('should display the text of go to next challenge button accordingly based on device type', async ({\n    page,\n    isMobile,\n    browserName\n  }) => {\n    if (isMobile) {\n      await expect(\n        page.getByRole('button', {\n          name: 'Go to next challenge',\n          exact: true\n        })\n      ).toBeVisible();\n    } else if (browserName === 'webkit') {\n      await expect(\n        page.getByRole('button', {\n          name: 'Go to next challenge (Command + Enter)'\n        })\n      ).toBeVisible();\n    } else {\n      await expect(\n        page.getByRole('button', {\n          name: 'Go to next challenge (Ctrl + Enter)'\n        })\n      ).toBeVisible();\n    }\n  });\n\ntest('should redirect to /learn after sign in', async ({ page }) => {\n    await page\n      .getByRole('link', { name: translations.learn['sign-in-save'] })\n      .click();\n    await expect(page).toHaveURL(allowTrailingSlash('/learn'));\n  });\n\ntest('should redirect to next challenge', async ({ page }) => {\n    await page\n      .getByRole('button', { name: translations.buttons['go-to-next'] })\n      .click();\n    await expect(page).toHaveURL(nextChallengeURL);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6531,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\completion-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "a103727b46cc8dd13719fd70c790fb04",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\completion-modal.spec.ts",
    "source_type": "git_repo",
    "title": "completion-modal.spec",
    "content": "name: 'Go to next challenge (Command + Enter)' }) ).toBeVisible(); } else { await expect( page.getByRole('button', { name: 'Go to next challenge (Ctrl + Enter)' }) ).toBeVisible(); } }); test('should redirect to /learn after sign in', async ({ page }) => { await page .getByRole('link', { name: translations.learn['sign-in-save'] }) .click(); await expect(page).toHaveURL(allowTrailingSlash('/learn')); }); test('should redirect to next challenge', async ({ page }) => { await page .getByRole('button', { name: translations.buttons['go-to-next'] }) .click(); await expect(page).toHaveURL(nextChallengeURL); }); });\n\ntest.describe('Challenge Completion Modal Tests (Signed In)', () => {\n  test('should render the modal correctly', async ({ page }) => {\n    await expect(page.getByRole('heading')).toBeVisible();\n    await expect(page.getByRole('button', { name: 'close' })).toBeVisible();\n    await expect(page.getByTestId('completion-success-icon')).toBeVisible();\n    await expect(page.getByTestId('progress-bar-container')).toBeVisible();\n    await expect(\n      page.getByRole('link', { name: translations.learn['sign-in-save'] })\n    ).not.toBeVisible();\n    await expect(\n      page.getByRole('button', { name: translations.buttons['submit-and-go'] })\n    ).toBeVisible();\n  });\n\ntest('should close the modal after user click on close', async ({ page }) => {\n    await page.getByRole('button', { name: 'close' }).click();\n    await expect(page.getByTestId('completion-success-icon')).not.toBeVisible();\n  });\n\ntest('should close the modal after user presses escape while having keyboard shortcuts disabled', async ({\n    page,\n    request\n  }) => {\n    await authedRequest({\n      request,\n      endpoint: 'update-my-keyboard-shortcuts',\n      method: 'put',\n      data: {\n        keyboardShortcuts: false\n      }\n    });\n    await expect(page.getByRole('dialog')).toBeVisible();\n    await page.keyboard.press('Escape');\n    await expect(page.getByRole('dialog')).not.toBeVisible();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6531,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\completion-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "2046ca3fca407b985f9de6fee232f6bb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\completion-modal.spec.ts",
    "source_type": "git_repo",
    "title": "completion-modal.spec",
    "content": "translations.learn['sign-in-save'] }) ).not.toBeVisible(); await expect( page.getByRole('button', { name: translations.buttons['submit-and-go'] }) ).toBeVisible(); }); test('should close the modal after user click on close', async ({ page }) => { await page.getByRole('button', { name: 'close' }).click(); await expect(page.getByTestId('completion-success-icon')).not.toBeVisible(); }); test('should close the modal after user presses escape while having keyboard shortcuts disabled', async ({ page, request }) => { await authedRequest({ request, endpoint: 'update-my-keyboard-shortcuts', method: 'put', data: { keyboardShortcuts: false } }); await expect(page.getByRole('dialog')).toBeVisible(); await page.keyboard.press('Escape'); await expect(page.getByRole('dialog')).not.toBeVisible(); });\n\ntest('should close the modal after user presses escape while having keyboard shortcuts enabled', async ({\n    page,\n    request\n  }) => {\n    await authedRequest({\n      request,\n      endpoint: 'update-my-keyboard-shortcuts',\n      method: 'put',\n      data: {\n        keyboardShortcuts: true\n      }\n    });\n    await expect(page.getByRole('dialog')).toBeVisible();\n    await page.keyboard.press('Escape');\n    await expect(page.getByRole('dialog')).toBeVisible();\n  });\n\ntest('should display the text of go to next challenge button accordingly based on device type', async ({\n    page,\n    isMobile,\n    browserName\n  }) => {\n    if (isMobile) {\n      await expect(\n        page.getByRole('button', {\n          name: 'Submit and go to next challenge',\n          exact: true\n        })\n      ).toBeVisible();\n    } else if (browserName === 'webkit') {\n      await expect(\n        page.getByRole('button', {\n          name: 'Submit and go to next challenge (Command + Enter)'\n        })\n      ).toBeVisible();\n    } else {\n      await expect(\n        page.getByRole('button', {\n          name: 'Submit and go to next challenge (Ctrl + Enter)'\n        })\n      ).toBeVisible();\n    }\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6531,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\completion-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "3abdc62cc7f25b36f797576b2daaea5f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\completion-modal.spec.ts",
    "source_type": "git_repo",
    "title": "completion-modal.spec",
    "content": "button accordingly based on device type', async ({ page, isMobile, browserName }) => { if (isMobile) { await expect( page.getByRole('button', { name: 'Submit and go to next challenge', exact: true }) ).toBeVisible(); } else if (browserName === 'webkit') { await expect( page.getByRole('button', { name: 'Submit and go to next challenge (Command + Enter)' }) ).toBeVisible(); } else { await expect( page.getByRole('button', { name: 'Submit and go to next challenge (Ctrl + Enter)' }) ).toBeVisible(); } });\n\ntest('should submit and go to the next challenge when the user clicks the submit button', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', { name: translations.buttons['submit-and-go'] })\n      .click();\n    await expect(page).toHaveURL(nextChallengeURL);\n  });\n\ntest('should submit and go to the next challenge when the user presses Ctrl + Enter', async ({\n    page\n  }) => {\n    await page.keyboard.press('Control+Enter');\n    await expect(page).toHaveURL(nextChallengeURL);\n  });\n\ntest('should submit and go to the next challenge when the user presses Command + Enter', async ({\n    page\n  }) => {\n    await page.keyboard.press('Meta+Enter');\n    await expect(page).toHaveURL(nextChallengeURL);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6531,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\completion-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 295,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "fb86371c5f082e6c94d3212253233a60",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\daily-coding-challenge.spec.ts",
    "source_type": "git_repo",
    "title": "daily-coding-challenge.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport {\n  getTodayUsCentral,\n  formatDate\n} from '../client/src/components/daily-coding-challenge/helpers';\n\nconst dateRouteRe = /.*\\/daily-coding-challenge\\/date\\/.*/;\nconst allRouteRe = /.*\\/daily-coding-challenge\\/all/;\n\nconst todayUsCentral = getTodayUsCentral();\nconst [year, month, day] = todayUsCentral.split('-').map(Number);\n\nconst todayMidnight = `${todayUsCentral}T00:00:00.000Z`;\n\nconst mockApiChallenge = {\n  id: 'test-challenge-id',\n  challengeNumber: 1,\n  title: 'Test title',\n  date: todayMidnight,\n  description: 'Test description',\n  javascript: {\n    tests: [\n      {\n        text: 'Test text',\n        testString: 'assert.strictEqual(true, true);'\n      }\n    ],\n    challengeFiles: [\n      {\n        fileKey: 'scriptjs',\n        contents: '// JavaScript seed code'\n      }\n    ]\n  },\n  python: {\n    tests: [\n      {\n        text: 'Test text',\n        testString: '({test: () => { runPython(`assert True == True`)}})'\n      }\n    ],\n    challengeFiles: [\n      {\n        fileKey: 'mainpy',\n        contents: '# Python seed code'\n      }\n    ]\n  }\n};\n\nconst mockApiAllChallenges = [\n  // today\n  {\n    // real ID from certified user so it shows completed in calendar\n    id: '6814d8e1516e86b171929de4',\n    date: todayMidnight\n  },\n  // yesterday, or tomorrow if today is the first\n  {\n    id: 'other-id',\n    date: `${formatDate({ year, month, day: day === 1 ? day + 1 : day - 1 })}T00:00:00.000Z`\n  }\n];\n\nconst mockDaysInMonth = new Date(year, month, 0).getDate();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7111,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\daily-coding-challenge.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "83de7b8d6efc54c1e54ebc8d4159d198",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\daily-coding-challenge.spec.ts",
    "source_type": "git_repo",
    "title": "daily-coding-challenge.spec",
    "content": "challengeFiles: [ { fileKey: 'mainpy', contents: '# Python seed code' } ] } }; const mockApiAllChallenges = [ // today { // real ID from certified user so it shows completed in calendar id: '6814d8e1516e86b171929de4', date: todayMidnight }, // yesterday, or tomorrow if today is the first { id: 'other-id', date: `${formatDate({ year, month, day: day === 1 ? day + 1 : day - 1 })}T00:00:00.000Z` } ]; const mockDaysInMonth = new Date(year, month, 0).getDate();\n\ntest.describe('Daily Coding Challenges', () => {\n  test('should show not found page for invalid date', async ({ page }) => {\n    await page.goto('/learn/daily-coding-challenge/invalid-date');\n    await expect(\n      page.getByText(/daily coding challenge not found\\./i)\n    ).toBeVisible();\n  });\n\ntest('should show not found page for date without challenge', async ({\n    page\n  }) => {\n    await page.route(dateRouteRe, async route => {\n      await route.fulfill({\n        status: 404,\n        headers: { 'Content-Type': 'application/json' },\n        json: { type: 'error', message: 'Challenge not found.' }\n      });\n    });\n\nawait page.goto('/learn/daily-coding-challenge/2025-01-01');\n    await expect(\n      page.getByText(/daily coding challenge not found\\./i)\n    ).toBeVisible();\n  });\n\ntest('should show not found page for API error', async ({ page }) => {\n    await page.route(dateRouteRe, async route => {\n      await route.fulfill({\n        status: 500,\n        headers: { 'Content-Type': 'application/json' },\n        json: { type: 'error', message: 'Internal server error.' }\n      });\n    });\n\nawait page.goto('/learn/daily-coding-challenge/2025-01-01');\n    await expect(\n      page.getByText(/daily coding challenge not found\\./i)\n    ).toBeVisible();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7111,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\daily-coding-challenge.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "be203c87d7a08ce6884dcb825ff48d88",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\daily-coding-challenge.spec.ts",
    "source_type": "git_repo",
    "title": "daily-coding-challenge.spec",
    "content": "'Content-Type': 'application/json' }, json: { type: 'error', message: 'Challenge not found.' } }); }); await page.goto('/learn/daily-coding-challenge/2025-01-01'); await expect( page.getByText(/daily coding challenge not found\\./i) ).toBeVisible(); }); test('should show not found page for API error', async ({ page }) => { await page.route(dateRouteRe, async route => { await route.fulfill({ status: 500, headers: { 'Content-Type': 'application/json' }, json: { type: 'error', message: 'Internal server error.' } }); }); await page.goto('/learn/daily-coding-challenge/2025-01-01'); await expect( page.getByText(/daily coding challenge not found\\./i) ).toBeVisible(); });\n\ntest('should show not found page for invalid challenge data', async ({\n    page\n  }) => {\n    await page.route(dateRouteRe, async route => {\n      await route.fulfill({\n        status: 200,\n        headers: { 'Content-Type': 'application/json' },\n        json: { invalid: 'data structure' }\n      });\n    });\n\nawait page.goto('/learn/daily-coding-challenge/2025-06-27');\n    await expect(\n      page.getByText(/daily coding challenge not found\\./i)\n    ).toBeVisible();\n  });\n\ntest('should load and display a daily coding challenge with a valid date, and should be able to switch between JavaScript and Python', async ({\n    page\n  }) => {\n    await page.route(dateRouteRe, async route => {\n      await route.fulfill({\n        status: 200,\n        headers: { 'Content-Type': 'application/json' },\n        json: mockApiChallenge\n      });\n    });\n\nawait page.goto(`/learn/daily-coding-challenge/${todayUsCentral}`);\n\nawait expect(page.getByText('Test title')).toBeVisible();\n\nawait expect(page.getByText('Test description')).toBeVisible();\n\n// Language buttons\n    await expect(\n      page.getByRole('button', { name: /javascript/i })\n    ).toBeVisible();\n    await expect(page.getByRole('button', { name: /python/i })).toBeVisible();\n\n// Should show JS UI by default",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7111,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\daily-coding-challenge.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "eb2d3a751be8eead976508ca463f0889",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\daily-coding-challenge.spec.ts",
    "source_type": "git_repo",
    "title": "daily-coding-challenge.spec",
    "content": "display a daily coding challenge with a valid date, and should be able to switch between JavaScript and Python', async ({ page }) => { await page.route(dateRouteRe, async route => { await route.fulfill({ status: 200, headers: { 'Content-Type': 'application/json' }, json: mockApiChallenge }); }); await page.goto(`/learn/daily-coding-challenge/${todayUsCentral}`); await expect(page.getByText('Test title')).toBeVisible(); await expect(page.getByText('Test description')).toBeVisible(); // Language buttons await expect( page.getByRole('button', { name: /javascript/i }) ).toBeVisible(); await expect(page.getByRole('button', { name: /python/i })).toBeVisible(); // Should show JS UI by default\n\nawait expect(\n      page.getByRole('button', { name: /script.js/i })\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: /main.py/i })\n    ).not.toBeVisible();\n    await expect(page.getByRole('button', { name: /console/i })).toBeVisible();\n    await expect(page.getByTestId('preview-pane-button')).not.toBeVisible();\n    await expect(page.locator(\"div[role='code'].monaco-editor\")).toContainText(\n      '// JavaScript seed code'\n    );\n\n// Show show Python UI after changing language\n    await page.getByRole('button', { name: /python/i }).click();\n\nawait expect(page.getByRole('button', { name: /main.py/i })).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: /script.js/i })\n    ).not.toBeVisible();\n    await expect(page.getByRole('button', { name: /console/i })).toBeVisible();\n    await expect(page.getByTestId('preview-pane-button')).toBeVisible();\n    await expect(page.locator(\"div[role='code'].monaco-editor\")).toContainText(\n      '# Python seed code'\n    );\n\nawait page.goto(`/learn/daily-coding-challenge/${todayUsCentral}`);\n\nawait expect(page.getByRole('button', { name: /main.py/i })).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7111,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\daily-coding-challenge.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "ffbb9af103f7168156777e239f85fc66",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\daily-coding-challenge.spec.ts",
    "source_type": "git_repo",
    "title": "daily-coding-challenge.spec",
    "content": "await expect( page.getByRole('button', { name: /main.py/i }) ).not.toBeVisible(); await expect(page.getByRole('button', { name: /console/i })).toBeVisible(); await expect(page.getByTestId('preview-pane-button')).not.toBeVisible(); await expect(page.locator(\"div[role='code'].monaco-editor\")).toContainText( '// JavaScript seed code' ); // Show show Python UI after changing language await page.getByRole('button', { name: /python/i }).click(); await expect(page.getByRole('button', { name: /main.py/i })).toBeVisible(); await expect( page.getByRole('button', { name: /script.js/i }) ).not.toBeVisible(); await expect(page.getByRole('button', { name: /console/i })).toBeVisible(); await expect(page.getByTestId('preview-pane-button')).toBeVisible(); await expect(page.locator(\"div[role='code'].monaco-editor\")).toContainText( '# Python seed code' ); await page.goto(`/learn/daily-coding-challenge/${todayUsCentral}`); await expect(page.getByRole('button', { name: /main.py/i })).toBeVisible(); }); });\n\ntest.describe('Daily Coding Challenge Archive', () => {\n  test('/learn/daily-coding-challenge should redirect to archive', async ({\n    page\n  }) => {\n    await page.goto('/learn/daily-coding-challenge');\n    await expect(page).toHaveURL('/learn/daily-coding-challenge/archive');\n  });\n\ntest('/learn/daily-coding-challenge/ should redirect to archive', async ({\n    page\n  }) => {\n    await page.goto('/learn/daily-coding-challenge/');\n    await expect(page).toHaveURL('/learn/daily-coding-challenge/archive');\n  });\n\ntest('/learn/daily-coding-challenge/path-1/path2 should redirect to archive', async ({\n    page\n  }) => {\n    await page.goto('/learn/daily-coding-challenge/path-1/path2');\n    await expect(page).toHaveURL('/learn/daily-coding-challenge/archive');\n  });\n\ntest('archive should load and display the calendar', async ({ page }) => {\n    await page.route(allRouteRe, async route => {\n      await route.fulfill({\n        status: 200,\n        headers: { 'Content-Type': 'application/json' },\n        json: mockApiAllChallenges\n      });\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7111,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\daily-coding-challenge.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "6fa2e3ce3bbf38c1f153692b071e412b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\daily-coding-challenge.spec.ts",
    "source_type": "git_repo",
    "title": "daily-coding-challenge.spec",
    "content": "archive', async ({ page }) => { await page.goto('/learn/daily-coding-challenge'); await expect(page).toHaveURL('/learn/daily-coding-challenge/archive'); }); test('/learn/daily-coding-challenge/ should redirect to archive', async ({ page }) => { await page.goto('/learn/daily-coding-challenge/'); await expect(page).toHaveURL('/learn/daily-coding-challenge/archive'); }); test('/learn/daily-coding-challenge/path-1/path2 should redirect to archive', async ({ page }) => { await page.goto('/learn/daily-coding-challenge/path-1/path2'); await expect(page).toHaveURL('/learn/daily-coding-challenge/archive'); }); test('archive should load and display the calendar', async ({ page }) => { await page.route(allRouteRe, async route => { await route.fulfill({ status: 200, headers: { 'Content-Type': 'application/json' }, json: mockApiAllChallenges }); });\n\nawait page.goto('/learn/daily-coding-challenge/archive');\n\nawait expect(page.getByText('Daily Coding Challenges')).toBeVisible();\n\nawait expect(\n      page.getByRole('button', { name: /previous month/i })\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: /next month/i })\n    ).toBeVisible();\n\nawait expect(\n      page.getByRole('link', { name: /go to today/i })\n    ).toBeVisible();\n\nconst totalCalendarDays = await page.getByTestId('calendar-day').count();\n    expect(totalCalendarDays).toBe(mockDaysInMonth);\n\nawait expect(page.getByTestId('calendar-day-completed')).toHaveCount(1);\n\nawait expect(page.getByTestId('calendar-day-not-completed')).toHaveCount(1);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7111,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\daily-coding-challenge.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 365,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "79aaf099568d642dc426e561fe45137c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\desktop-layout.spec.ts",
    "source_type": "git_repo",
    "title": "desktop-layout.spec",
    "content": "import { test, expect } from '@playwright/test';\n\ntest.describe('Classic challenge - 3 pane desktop layout component', () => {\n  test.skip(\n    ({ isMobile }) => isMobile === true,\n    'Skip testing on mobile as this component is only used for desktop'\n  );\n\ntest('The page has desktop layout with instructions/editor/preview pane', async ({\n    page\n  }) => {\n    await page.goto(\n      'learn/2022/responsive-web-design/build-a-survey-form-project/build-a-survey-form'\n    );\n\nconst desktopLayout = page.getByTestId('desktop-layout');\n    const actionRow = desktopLayout.getByTestId('action-row');\n    const tabsRow = desktopLayout.getByTestId('tabs-row');\n    const reflexContainer = desktopLayout.getByTestId('main-container');\n    const instructionPane = desktopLayout.getByTestId('instruction-pane');\n    const editorPane = desktopLayout.getByTestId('editor-pane');\n    const previewPane = desktopLayout.getByTestId('preview-pane');\n\nawait expect(desktopLayout).toBeVisible();\n    await expect(actionRow).toBeVisible();\n    await expect(tabsRow).toBeVisible();\n    await expect(reflexContainer).toBeVisible();\n    await expect(instructionPane).toBeVisible();\n    await expect(editorPane).toBeVisible();\n    await expect(previewPane).toBeVisible();\n  });\n});\n\ntest.describe('Classic challenge - 2 pane desktop layout component', () => {\n  test.skip(\n    ({ isMobile }) => isMobile === true,\n    'Skip testing on mobile as this component is only used for desktop'\n  );\n\ntest('The page has desktop layout with instructions/editor pane', async ({\n    page\n  }) => {\n    await page.goto(\n      'learn/javascript-algorithms-and-data-structures/basic-javascript/use-recursion-to-create-a-range-of-numbers'\n    );\n\nconst desktopLayout = page.getByTestId('desktop-layout');\n    const actionRow = desktopLayout.getByTestId('action-row');\n    const tabsRow = desktopLayout.getByTestId('tabs-row');\n    const reflexContainer = desktopLayout.getByTestId('main-container');\n    const instructionPane = desktopLayout.getByTestId('instruction-pane');\n    const editorPane = desktopLayout.getByTestId('editor-pane');\n    const previewPane = desktopLayout.getByTestId('preview-pane');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2515,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\desktop-layout.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "2bdfd6b2494c6fd20a44007bad23f5f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\desktop-layout.spec.ts",
    "source_type": "git_repo",
    "title": "desktop-layout.spec",
    "content": "- 2 pane desktop layout component', () => { test.skip( ({ isMobile }) => isMobile === true, 'Skip testing on mobile as this component is only used for desktop' ); test('The page has desktop layout with instructions/editor pane', async ({ page }) => { await page.goto( 'learn/javascript-algorithms-and-data-structures/basic-javascript/use-recursion-to-create-a-range-of-numbers' ); const desktopLayout = page.getByTestId('desktop-layout'); const actionRow = desktopLayout.getByTestId('action-row'); const tabsRow = desktopLayout.getByTestId('tabs-row'); const reflexContainer = desktopLayout.getByTestId('main-container'); const instructionPane = desktopLayout.getByTestId('instruction-pane'); const editorPane = desktopLayout.getByTestId('editor-pane'); const previewPane = desktopLayout.getByTestId('preview-pane');\n\nawait expect(desktopLayout).toBeVisible();\n    await expect(actionRow).toBeHidden();\n    await expect(tabsRow).toBeHidden();\n    await expect(reflexContainer).toBeVisible();\n    await expect(instructionPane).toBeVisible();\n    await expect(editorPane).toBeVisible();\n    await expect(previewPane).toBeHidden();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2515,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\desktop-layout.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 237,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "bfcdc7e032159386ae99462bfd685bb9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\delete-modal.spec.ts",
    "source_type": "git_repo",
    "title": "delete-modal.spec",
    "content": "import { exec } from 'child_process';\nimport { promisify } from 'util';\n\nimport { test, expect } from '@playwright/test';\n\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { alertToBeVisible } from './utils/alerts';\nimport { allowTrailingSlash } from './utils/url';\n\nconst execP = promisify(exec);\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto('/settings');\n});\n\ntest.afterAll(\n  async () =>\n    await Promise.all([\n      await execP('node ./tools/scripts/seed/seed-demo-user --certified-user'),\n      await execP('node ./tools/scripts/seed/seed-surveys'),\n      await execP('node ./tools/scripts/seed/seed-ms-username')\n    ])\n);\n\ntest.describe('Delete Modal component', () => {\n  test('should render the modal correctly', async ({ page }) => {\n    await page\n      .getByRole('button', { name: translations.settings.danger.delete })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', {\n        name: translations.settings.danger['delete-title']\n      })\n    ).toBeVisible();\n\nawait expect(\n      page.getByText(translations.settings.danger['delete-p1'])\n    ).toBeVisible();\n\nawait expect(\n      page.getByText(translations.settings.danger['delete-p2'])\n    ).toBeVisible();\n\nconst supportLink = page.getByRole('link', {\n      name: 'support@freeCodeCamp.org'\n    });\n    await expect(supportLink).toBeVisible();\n    await expect(supportLink).toHaveAttribute(\n      'href',\n      'mailto:support@freecodecamp.org'\n    );\n\nawait expect(\n      page.getByRole('button', { name: translations.settings.danger.nevermind })\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: translations.settings.danger.certain })\n    ).toBeVisible();\n\nawait expect(\n      page.getByRole('button', { name: translations.settings.danger.certain })\n    ).toBeDisabled();\n\nawait expect(\n      page.getByRole('button', { name: translations.buttons.close })\n    ).toBeVisible();\n  });\n\ntest('should close the modal after the user cancels account deleting', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', { name: translations.settings.danger.delete })\n      .click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4367,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\delete-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "395d8ef3aa09704eefce3d74ce0777b9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\delete-modal.spec.ts",
    "source_type": "git_repo",
    "title": "delete-modal.spec",
    "content": "await expect( page.getByText(translations.settings.danger['delete-p2']) ).toBeVisible(); const supportLink = page.getByRole('link', { name: 'support@freeCodeCamp.org' }); await expect(supportLink).toBeVisible(); await expect(supportLink).toHaveAttribute( 'href', 'mailto:support@freecodecamp.org' ); await expect( page.getByRole('button', { name: translations.settings.danger.nevermind }) ).toBeVisible(); await expect( page.getByRole('button', { name: translations.settings.danger.certain }) ).toBeVisible(); await expect( page.getByRole('button', { name: translations.settings.danger.certain }) ).toBeDisabled(); await expect( page.getByRole('button', { name: translations.buttons.close }) ).toBeVisible(); }); test('should close the modal after the user cancels account deleting', async ({ page }) => { await page .getByRole('button', { name: translations.settings.danger.delete }) .click();\n\nawait expect(\n      page.getByRole('dialog', {\n        name: translations.settings.danger['delete-title']\n      })\n    ).toBeVisible();\n\nawait page\n      .getByRole('button', { name: translations.settings.danger.nevermind })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', {\n        name: translations.settings.danger['delete-title']\n      })\n    ).not.toBeVisible();\n  });\n\ntest('Delele button should be disabled if user incorrectly fills verify input text', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', { name: translations.settings.danger.delete })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', {\n        name: translations.settings.danger['delete-title']\n      })\n    ).toBeVisible();\n\nconst verifyDeleteInput = page.getByRole('textbox', {\n      exact: true\n    });\n    await verifyDeleteInput.fill('incorrect text');\n\nawait expect(\n      page.getByRole('button', {\n        name: translations.settings.danger.certain\n      })\n    ).toBeDisabled();\n  });\n\ntest('should close the modal and redirect to /learn after the user fills the verify input text and clicks delete', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', { name: translations.settings.danger.delete })\n      .click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4367,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\delete-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "817e7340dde1bea8c38997a6733af708",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\delete-modal.spec.ts",
    "source_type": "git_repo",
    "title": "delete-modal.spec",
    "content": "text', async ({ page }) => { await page .getByRole('button', { name: translations.settings.danger.delete }) .click(); await expect( page.getByRole('dialog', { name: translations.settings.danger['delete-title'] }) ).toBeVisible(); const verifyDeleteInput = page.getByRole('textbox', { exact: true }); await verifyDeleteInput.fill('incorrect text'); await expect( page.getByRole('button', { name: translations.settings.danger.certain }) ).toBeDisabled(); }); test('should close the modal and redirect to /learn after the user fills the verify input text and clicks delete', async ({ page }) => { await page .getByRole('button', { name: translations.settings.danger.delete }) .click();\n\nawait expect(\n      page.getByRole('dialog', {\n        name: translations.settings.danger['delete-title']\n      })\n    ).toBeVisible();\n\nconst verifyDeleteText = translations.settings.danger['verify-delete-text'];\n\nconst verifyDeleteInput = page.getByRole('textbox', {\n      exact: true\n    });\n    await verifyDeleteInput.fill(verifyDeleteText);\n\nawait page\n      .getByRole('button', { name: translations.settings.danger.certain })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', {\n        name: translations.settings.danger['delete-title']\n      })\n    ).not.toBeVisible();\n\nawait expect(page).toHaveURL(allowTrailingSlash('/learn'));\n    await alertToBeVisible(page, translations.flash['account-deleted']);\n    // The user is signed out after their account is deleted\n    await expect(page.getByRole('link', { name: 'Sign in' })).toHaveCount(2);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4367,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\delete-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "92c7a97606f4f2b2cfb80ea4d36c60ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donate-page-donor.spec.ts",
    "source_type": "git_repo",
    "title": "donate-page-donor.spec",
    "content": "import { execSync } from 'child_process';\nimport { test, expect } from '@playwright/test';\n\ntest.describe('Donate page', () => {\n  test.use({ storageState: 'playwright/.auth/development-user.json' });\n\ntest.beforeEach(async ({ page }) => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --set-true isDonating');\n    await page.goto('/donate');\n  });\n\ntest.afterAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n  });\n\ntest('should render the donate page correctly', async ({ page }) => {\n    await expect(\n      page.getByText('Thank you for your continued support')\n    ).toBeVisible();\n\nawait expect(\n      page.getByText(\n        'Your contributions are crucial in creating resources that empower millions of people to learn new skills and support their families.'\n      )\n    ).toBeVisible();\n\nawait expect(\n      page.getByText(\n        'If you want to support our charity further, please consider making a one-time donation, sending us a check, or learning about other ways you could support our charity.'\n      )\n    ).toBeVisible();\n\nawait expect(\n      page.getByRole('link', { name: 'making a one-time donation' })\n    ).toHaveAttribute(\n      'href',\n      'https://www.freecodecamp.org/news/how-to-donate-to-free-code-camp/#how-can-i-make-a-one-time-donation'\n    );\n  });\n\ntest('The menu should have a supporters link', async ({ page }) => {\n    const menuButton = page.getByTestId('header-menu-button');\n    const menu = page.getByTestId('header-menu');\n\nawait expect(menuButton).toBeVisible();\n    await menuButton.click();\n\nawait expect(menu).toBeVisible();\n\nawait expect(page.getByRole('link', { name: 'Supporters' })).toBeVisible();\n  });\n\ntest('The Avatar should have a special border for donors', async ({\n    page\n  }) => {\n    const container = page.locator('.avatar-container');\n    await expect(container).toHaveClass('avatar-container gold-border');\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1964,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donate-page-donor.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4431ba9d79bc8fbdbe697d65a236253f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
    "source_type": "git_repo",
    "title": "donate-page-default.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\nconst pageElements = {\n  mainHeading: 'main-head',\n  donateText1: 'donate-text-1',\n  donateText2: 'donate-text-2',\n  donateText3: 'donate-text-3',\n  faqHeading: 'faq-head',\n  campersImage: 'landing-page-figure'\n};\n\nconst donationStringReplacements = {\n  usdPlaceHolder: '{{usd}}',\n  hoursPlaceHolder: '{{hours}}'\n};\n\nconst donationFormStrings = {\n  conformTwentyDollar: translations.donate['confirm-monthly'].replace(\n    donationStringReplacements.usdPlaceHolder,\n    '20'\n  ),\n  confirmFiveDollars: translations.donate['confirm-monthly'].replace(\n    donationStringReplacements.usdPlaceHolder,\n    '5'\n  ),\n  twentyDollarsLearningContribution: translations.donate['your-donation-2']\n    .replace(donationStringReplacements.usdPlaceHolder, '20')\n    .replace(donationStringReplacements.hoursPlaceHolder, '1,000'),\n  fiveDollarsLearningContribution: translations.donate['your-donation-2']\n    .replace(donationStringReplacements.usdPlaceHolder, '5')\n    .replace(donationStringReplacements.hoursPlaceHolder, '250'),\n  editAmount: translations.donate['edit-amount'],\n  donate: translations.buttons.donate\n};\n\nfunction donatePageTests() {\n  test('should render correctly', async ({ page }) => {\n    await expect(page).toHaveTitle(\n      `${translations.donate.title} | freeCodeCamp.org`\n    );\n\nconst mainHeading = page.getByTestId(pageElements.mainHeading);\n    await expect(mainHeading).toHaveText(translations.donate['help-more']);\n\nconst donateText1 = page.getByTestId(pageElements.donateText1);\n    await expect(donateText1).toHaveText(translations.donate.efficiency);\n\nconst donateText2 = page.getByTestId(pageElements.donateText2);\n    await expect(donateText2).toHaveText(translations.donate['why-donate-1']);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9567,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 12
  },
  {
    "id": "8be6e6a26f2a3d83b1260a18ec9f3400",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
    "source_type": "git_repo",
    "title": "donate-page-default.spec",
    "content": "const donationStringReplacements = { usdPlaceHolder: '{{usd}}', hoursPlaceHolder: '{{hours}}' }; const donationFormStrings = { conformTwentyDollar: translations.donate['confirm-monthly'].replace( donationStringReplacements.usdPlaceHolder, '20' ), confirmFiveDollars: translations.donate['confirm-monthly'].replace( donationStringReplacements.usdPlaceHolder, '5' ), twentyDollarsLearningContribution: translations.donate['your-donation-2'] .replace(donationStringReplacements.usdPlaceHolder, '20') .replace(donationStringReplacements.hoursPlaceHolder, '1,000'), fiveDollarsLearningContribution: translations.donate['your-donation-2'] .replace(donationStringReplacements.usdPlaceHolder, '5') .replace(donationStringReplacements.hoursPlaceHolder, '250'), editAmount: translations.donate['edit-amount'], donate: translations.buttons.donate }; function donatePageTests() { test('should render correctly', async ({ page }) => { await expect(page).toHaveTitle( `${translations.donate.title} | freeCodeCamp.org` ); const mainHeading = page.getByTestId(pageElements.mainHeading); await expect(mainHeading).toHaveText(translations.donate['help-more']); const donateText1 = page.getByTestId(pageElements.donateText1); await expect(donateText1).toHaveText(translations.donate.efficiency); const donateText2 = page.getByTestId(pageElements.donateText2); await expect(donateText2).toHaveText(translations.donate['why-donate-1']);\n\nconst donateText3 = page.getByTestId(pageElements.donateText3);\n    await expect(donateText3).toHaveText(translations.donate['why-donate-2']);\n\nconst faqHead = page.getByTestId(pageElements.faqHeading);\n    await expect(faqHead).toHaveText(translations.donate.faq);\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9567,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 1,
    "total_chunks": 12
  },
  {
    "id": "51ed2f12fe630ecc6c82a8498fb407b0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
    "source_type": "git_repo",
    "title": "donate-page-default.spec",
    "content": "conformTwentyDollar: translations.donate['confirm-monthly'].replace( donationStringReplacements.usdPlaceHolder, '20' ), confirmFiveDollars: translations.donate['confirm-monthly'].replace( donationStringReplacements.usdPlaceHolder, '5' ), twentyDollarsLearningContribution: translations.donate['your-donation-2'] .replace(donationStringReplacements.usdPlaceHolder, '20') .replace(donationStringReplacements.hoursPlaceHolder, '1,000'), fiveDollarsLearningContribution: translations.donate['your-donation-2'] .replace(donationStringReplacements.usdPlaceHolder, '5') .replace(donationStringReplacements.hoursPlaceHolder, '250'), editAmount: translations.donate['edit-amount'], donate: translations.buttons.donate }; function donatePageTests() { test('should render correctly', async ({ page }) => { await expect(page).toHaveTitle( `${translations.donate.title} | freeCodeCamp.org` ); const mainHeading = page.getByTestId(pageElements.mainHeading); await expect(mainHeading).toHaveText(translations.donate['help-more']); const donateText1 = page.getByTestId(pageElements.donateText1); await expect(donateText1).toHaveText(translations.donate.efficiency); const donateText2 = page.getByTestId(pageElements.donateText2); await expect(donateText2).toHaveText(translations.donate['why-donate-1']); const donateText3 = page.getByTestId(pageElements.donateText3); await expect(donateText3).toHaveText(translations.donate['why-donate-2']); const faqHead = page.getByTestId(pageElements.faqHeading); await expect(faqHead).toHaveText(translations.donate.faq); });\n\ntest('should display the faq list with buttons', async ({ page }) => {\n    const faq1 = page.getByRole('button', {\n      name: translations.donate['get-help']\n    });\n    await expect(faq1).toBeVisible();\n    await faq1.click();\n    await expect(\n      page.getByText(translations.donate['forward-receipt'])\n    ).toBeVisible();\n    await faq1.click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9567,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 2,
    "total_chunks": 12
  },
  {
    "id": "1c721173843f50eb4e9ebc910ed7033b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
    "source_type": "git_repo",
    "title": "donate-page-default.spec",
    "content": "render correctly', async ({ page }) => { await expect(page).toHaveTitle( `${translations.donate.title} | freeCodeCamp.org` ); const mainHeading = page.getByTestId(pageElements.mainHeading); await expect(mainHeading).toHaveText(translations.donate['help-more']); const donateText1 = page.getByTestId(pageElements.donateText1); await expect(donateText1).toHaveText(translations.donate.efficiency); const donateText2 = page.getByTestId(pageElements.donateText2); await expect(donateText2).toHaveText(translations.donate['why-donate-1']); const donateText3 = page.getByTestId(pageElements.donateText3); await expect(donateText3).toHaveText(translations.donate['why-donate-2']); const faqHead = page.getByTestId(pageElements.faqHeading); await expect(faqHead).toHaveText(translations.donate.faq); }); test('should display the faq list with buttons', async ({ page }) => { const faq1 = page.getByRole('button', { name: translations.donate['get-help'] }); await expect(faq1).toBeVisible(); await faq1.click(); await expect( page.getByText(translations.donate['forward-receipt']) ).toBeVisible(); await faq1.click();\n\nconst faq2 = page.getByRole('button', {\n      name: translations.donate['how-transparent']\n    });\n    await expect(faq2).toBeVisible();\n    await faq2.click();\n    await expect(\n      page.getByText(translations.donate['very-transparent'])\n    ).toBeVisible();\n    await expect(\n      page.getByText('You can download our IRS Determination Letter here.')\n    ).toBeVisible();\n    await expect(\n      page.getByText(\n        'You can download our most recent 990 (annual tax report) here.'\n      )\n    ).toBeVisible();\n    await faq2.click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9567,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 3,
    "total_chunks": 12
  },
  {
    "id": "ca6c4b9a22492c2e8cdf02bf2cf9ac2d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
    "source_type": "git_repo",
    "title": "donate-page-default.spec",
    "content": "test('should display the faq list with buttons', async ({ page }) => { const faq1 = page.getByRole('button', { name: translations.donate['get-help'] }); await expect(faq1).toBeVisible(); await faq1.click(); await expect( page.getByText(translations.donate['forward-receipt']) ).toBeVisible(); await faq1.click(); const faq2 = page.getByRole('button', { name: translations.donate['how-transparent'] }); await expect(faq2).toBeVisible(); await faq2.click(); await expect( page.getByText(translations.donate['very-transparent']) ).toBeVisible(); await expect( page.getByText('You can download our IRS Determination Letter here.') ).toBeVisible(); await expect( page.getByText( 'You can download our most recent 990 (annual tax report) here.' ) ).toBeVisible(); await faq2.click();\n\nconst faq3 = page.getByRole('button', {\n      name: translations.donate['how-efficient']\n    });\n    await expect(faq3).toBeVisible();\n    await faq3.click();\n    await expect(\n      page.getByText(translations.donate['fcc-budget'])\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.donate['help-millions'])\n    ).toBeVisible();\n    await faq3.click();\n\nconst faq4 = page.getByRole('button', {\n      name: translations.donate['how-one-time']\n    });\n    await expect(faq4).toBeVisible();\n    await faq4.click();\n    await expect(\n      page.getByText(\n        \"If you'd prefer to make one-time donations, you can support freeCodeCamp's mission whenever you have cash to spare. You can use this link to donate whatever amount feels right through PayPal.\"\n      )\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.donate['wire-transfer'])\n    ).toBeVisible();\n    await faq4.click();\n\nconst faq5 = page.getByRole('button', {\n      name: translations.donate['does-crypto']\n    });\n    await expect(faq5).toBeVisible();\n    await faq5.click();\n    await expect(\n      page.getByText(translations.donate['yes-cryptocurrency'])\n    ).toBeVisible();\n    await faq5.click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9567,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 4,
    "total_chunks": 12
  },
  {
    "id": "d08a9302f14d77a53d850199e11c6b63",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
    "source_type": "git_repo",
    "title": "donate-page-default.spec",
    "content": "page.getByText(translations.donate['help-millions']) ).toBeVisible(); await faq3.click(); const faq4 = page.getByRole('button', { name: translations.donate['how-one-time'] }); await expect(faq4).toBeVisible(); await faq4.click(); await expect( page.getByText( \"If you'd prefer to make one-time donations, you can support freeCodeCamp's mission whenever you have cash to spare. You can use this link to donate whatever amount feels right through PayPal.\" ) ).toBeVisible(); await expect( page.getByText(translations.donate['wire-transfer']) ).toBeVisible(); await faq4.click(); const faq5 = page.getByRole('button', { name: translations.donate['does-crypto'] }); await expect(faq5).toBeVisible(); await faq5.click(); await expect( page.getByText(translations.donate['yes-cryptocurrency']) ).toBeVisible(); await faq5.click();\n\nconst faq6 = page.getByRole('button', {\n      name: translations.donate['can-check']\n    });\n    await expect(faq6).toBeVisible();\n    await faq6.click();\n    await expect(\n      page.getByText(translations.donate['yes-check'])\n    ).toBeVisible();\n    await expect(page.getByText('Free Code Camp, Inc.')).toBeVisible();\n    await expect(page.getByText('3905 Hedgcoxe Rd')).toBeVisible();\n    await expect(page.getByText('PO Box 250352')).toBeVisible();\n    await expect(page.getByText('Plano, TX 75025')).toBeVisible();\n    await faq6.click();\n\nconst faq7 = page.getByRole('button', {\n      name: translations.donate['how-matching-gift']\n    });\n    await expect(faq7).toBeVisible();\n    await faq7.click();\n    await expect(\n      page.getByText(translations.donate['employers-vary'])\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.donate['some-volunteer'])\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.donate['help-matching-gift'])\n    ).toBeVisible();\n    await faq7.click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9567,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 470,
    "chunk_index": 5,
    "total_chunks": 12
  },
  {
    "id": "b7a0358ec13c84ad6832fa5da6c9d1f6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
    "source_type": "git_repo",
    "title": "donate-page-default.spec",
    "content": "page.getByRole('button', { name: translations.donate['does-crypto'] }); await expect(faq5).toBeVisible(); await faq5.click(); await expect( page.getByText(translations.donate['yes-cryptocurrency']) ).toBeVisible(); await faq5.click(); const faq6 = page.getByRole('button', { name: translations.donate['can-check'] }); await expect(faq6).toBeVisible(); await faq6.click(); await expect( page.getByText(translations.donate['yes-check']) ).toBeVisible(); await expect(page.getByText('Free Code Camp, Inc.')).toBeVisible(); await expect(page.getByText('3905 Hedgcoxe Rd')).toBeVisible(); await expect(page.getByText('PO Box 250352')).toBeVisible(); await expect(page.getByText('Plano, TX 75025')).toBeVisible(); await faq6.click(); const faq7 = page.getByRole('button', { name: translations.donate['how-matching-gift'] }); await expect(faq7).toBeVisible(); await faq7.click(); await expect( page.getByText(translations.donate['employers-vary']) ).toBeVisible(); await expect( page.getByText(translations.donate['some-volunteer']) ).toBeVisible(); await expect( page.getByText(translations.donate['help-matching-gift']) ).toBeVisible(); await faq7.click();\n\nconst faq8 = page.getByRole('button', {\n      name: translations.donate['how-endowment']\n    });\n    await expect(faq8).toBeVisible();\n    await faq8.click();\n    await expect(\n      page.getByText(translations.donate['endowment'])\n    ).toBeVisible();\n    await faq8.click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9567,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 372,
    "chunk_index": 6,
    "total_chunks": 12
  },
  {
    "id": "3ec49d46005673f0076b33b41a37047f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
    "source_type": "git_repo",
    "title": "donate-page-default.spec",
    "content": "page.getByRole('button', { name: translations.donate['can-check'] }); await expect(faq6).toBeVisible(); await faq6.click(); await expect( page.getByText(translations.donate['yes-check']) ).toBeVisible(); await expect(page.getByText('Free Code Camp, Inc.')).toBeVisible(); await expect(page.getByText('3905 Hedgcoxe Rd')).toBeVisible(); await expect(page.getByText('PO Box 250352')).toBeVisible(); await expect(page.getByText('Plano, TX 75025')).toBeVisible(); await faq6.click(); const faq7 = page.getByRole('button', { name: translations.donate['how-matching-gift'] }); await expect(faq7).toBeVisible(); await faq7.click(); await expect( page.getByText(translations.donate['employers-vary']) ).toBeVisible(); await expect( page.getByText(translations.donate['some-volunteer']) ).toBeVisible(); await expect( page.getByText(translations.donate['help-matching-gift']) ).toBeVisible(); await faq7.click(); const faq8 = page.getByRole('button', { name: translations.donate['how-endowment'] }); await expect(faq8).toBeVisible(); await faq8.click(); await expect( page.getByText(translations.donate['endowment']) ).toBeVisible(); await faq8.click();\n\nconst faq9 = page.getByRole('button', {\n      name: translations.donate['how-legacy']\n    });\n    await expect(faq9).toBeVisible();\n    await faq9.click();\n    await expect(\n      page.getByText(translations.donate['we-honored'])\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.donate['legacy-gift-message'])\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.donate['thank-wikimedia'])\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.donate['legacy-gift-questions'])\n    ).toBeVisible();\n    await faq9.click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9567,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 7,
    "total_chunks": 12
  },
  {
    "id": "4a5ca22c0bfbf0b9169846b0e75143cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
    "source_type": "git_repo",
    "title": "donate-page-default.spec",
    "content": "await faq6.click(); const faq7 = page.getByRole('button', { name: translations.donate['how-matching-gift'] }); await expect(faq7).toBeVisible(); await faq7.click(); await expect( page.getByText(translations.donate['employers-vary']) ).toBeVisible(); await expect( page.getByText(translations.donate['some-volunteer']) ).toBeVisible(); await expect( page.getByText(translations.donate['help-matching-gift']) ).toBeVisible(); await faq7.click(); const faq8 = page.getByRole('button', { name: translations.donate['how-endowment'] }); await expect(faq8).toBeVisible(); await faq8.click(); await expect( page.getByText(translations.donate['endowment']) ).toBeVisible(); await faq8.click(); const faq9 = page.getByRole('button', { name: translations.donate['how-legacy'] }); await expect(faq9).toBeVisible(); await faq9.click(); await expect( page.getByText(translations.donate['we-honored']) ).toBeVisible(); await expect( page.getByText(translations.donate['legacy-gift-message']) ).toBeVisible(); await expect( page.getByText(translations.donate['thank-wikimedia']) ).toBeVisible(); await expect( page.getByText(translations.donate['legacy-gift-questions']) ).toBeVisible(); await faq9.click();\n\nconst faq10 = page.getByRole('button', {\n      name: translations.donate['how-stock']\n    });\n    await expect(faq10).toBeVisible();\n    await faq10.click();\n    await expect(\n      page.getByText(translations.donate['welcome-stock'])\n    ).toBeVisible();\n    await faq10.click();\n\nconst faq11 = page.getByRole('button', {\n      name: translations.donate['how-update']\n    });\n    await expect(faq11).toBeVisible();\n    await faq11.click();\n    await expect(\n      page.getByText(translations.donate['forward-receipt'])\n    ).toBeVisible();\n    await faq11.click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9567,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 8,
    "total_chunks": 12
  },
  {
    "id": "697b25f1724379dacee4fbdf470ed062",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
    "source_type": "git_repo",
    "title": "donate-page-default.spec",
    "content": "await expect(faq8).toBeVisible(); await faq8.click(); await expect( page.getByText(translations.donate['endowment']) ).toBeVisible(); await faq8.click(); const faq9 = page.getByRole('button', { name: translations.donate['how-legacy'] }); await expect(faq9).toBeVisible(); await faq9.click(); await expect( page.getByText(translations.donate['we-honored']) ).toBeVisible(); await expect( page.getByText(translations.donate['legacy-gift-message']) ).toBeVisible(); await expect( page.getByText(translations.donate['thank-wikimedia']) ).toBeVisible(); await expect( page.getByText(translations.donate['legacy-gift-questions']) ).toBeVisible(); await faq9.click(); const faq10 = page.getByRole('button', { name: translations.donate['how-stock'] }); await expect(faq10).toBeVisible(); await faq10.click(); await expect( page.getByText(translations.donate['welcome-stock']) ).toBeVisible(); await faq10.click(); const faq11 = page.getByRole('button', { name: translations.donate['how-update'] }); await expect(faq11).toBeVisible(); await faq11.click(); await expect( page.getByText(translations.donate['forward-receipt']) ).toBeVisible(); await faq11.click();\n\nconst faq12 = page.getByRole('button', {\n      name: translations.donate['anything-else']\n    });\n    await expect(faq12).toBeVisible();\n    await faq12.click();\n    await expect(\n      page.getByText(translations.donate['other-support'])\n    ).toBeVisible();\n    await faq12.click();\n  });\n\ntest('should select $20 tier by default', async ({ page }) => {\n    await expect(\n      page.getByText(donationFormStrings.conformTwentyDollar)\n    ).toBeVisible();\n\nconst tabs = await page.$$('[role=\"tab\"]');\n    expect(tabs.length).toBe(4);\n\nfor (const tab of tabs) {\n      const tabText = await tab.innerText();\n      expect(['$5', '$10', '$20', '$40']).toContain(tabText);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9567,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 9,
    "total_chunks": 12
  },
  {
    "id": "eabf585f2f23a37234a97e05c9aae77f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
    "source_type": "git_repo",
    "title": "donate-page-default.spec",
    "content": "await faq10.click(); const faq11 = page.getByRole('button', { name: translations.donate['how-update'] }); await expect(faq11).toBeVisible(); await faq11.click(); await expect( page.getByText(translations.donate['forward-receipt']) ).toBeVisible(); await faq11.click(); const faq12 = page.getByRole('button', { name: translations.donate['anything-else'] }); await expect(faq12).toBeVisible(); await faq12.click(); await expect( page.getByText(translations.donate['other-support']) ).toBeVisible(); await faq12.click(); }); test('should select $20 tier by default', async ({ page }) => { await expect( page.getByText(donationFormStrings.conformTwentyDollar) ).toBeVisible(); const tabs = await page.$$('[role=\"tab\"]'); expect(tabs.length).toBe(4); for (const tab of tabs) { const tabText = await tab.innerText(); expect(['$5', '$10', '$20', '$40']).toContain(tabText);\n\nif (tabText === '$20') {\n        const isActive = await tab.getAttribute('data-state');\n        expect(isActive).toBe('active');\n      } else {\n        const isActive = await tab.getAttribute('data-state');\n        expect(isActive).not.toBe('active');\n      }\n    }\n    await expect(\n      page.getByText(donationFormStrings.twentyDollarsLearningContribution)\n    ).toBeVisible();\n  });\n\ntest('should make $5 tier selectable', async ({ page }) => {\n    await page.click('[role=\"tab\"]:has-text(\"$5\")');\n\nawait expect(\n      page.getByText(donationFormStrings.confirmFiveDollars)\n    ).toBeVisible();\n\nawait expect(\n      page.getByText(donationFormStrings.fiveDollarsLearningContribution)\n    ).toBeVisible();\n  });\n\ntest('should switch between tier selection and payment options', async ({\n    page\n  }) => {\n    // Tier selection\n    await page.click('[role=\"tab\"]:has-text(\"$5\")');\n    await expect(\n      page.getByText(donationFormStrings.confirmFiveDollars)\n    ).toBeVisible();\n    await expect(\n      page.getByText(donationFormStrings.fiveDollarsLearningContribution)\n    ).toBeVisible();\n    await page.click(`button:has-text(\"${donationFormStrings.donate}\")`);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9567,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 10,
    "total_chunks": 12
  },
  {
    "id": "42eadef27ca1b87dac5399fec9835849",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
    "source_type": "git_repo",
    "title": "donate-page-default.spec",
    "content": "=== '$20') { const isActive = await tab.getAttribute('data-state'); expect(isActive).toBe('active'); } else { const isActive = await tab.getAttribute('data-state'); expect(isActive).not.toBe('active'); } } await expect( page.getByText(donationFormStrings.twentyDollarsLearningContribution) ).toBeVisible(); }); test('should make $5 tier selectable', async ({ page }) => { await page.click('[role=\"tab\"]:has-text(\"$5\")'); await expect( page.getByText(donationFormStrings.confirmFiveDollars) ).toBeVisible(); await expect( page.getByText(donationFormStrings.fiveDollarsLearningContribution) ).toBeVisible(); }); test('should switch between tier selection and payment options', async ({ page }) => { // Tier selection await page.click('[role=\"tab\"]:has-text(\"$5\")'); await expect( page.getByText(donationFormStrings.confirmFiveDollars) ).toBeVisible(); await expect( page.getByText(donationFormStrings.fiveDollarsLearningContribution) ).toBeVisible(); await page.click(`button:has-text(\"${donationFormStrings.donate}\")`);\n\n// Donation form\n    const isEditButtonVisible = await page.isVisible(\n      `button:has-text(\"${donationFormStrings.editAmount}\")`\n    );\n    expect(isEditButtonVisible).toBeTruthy();\n    await expect(page.getByTestId('donation-form')).toBeVisible();\n    await page.click(`button:has-text(\"${donationFormStrings.editAmount}\")`);\n\n// Tier selection\n    await expect(\n      page.getByText(donationFormStrings.confirmFiveDollars)\n    ).toBeVisible();\n    await expect(\n      page.getByText(donationFormStrings.fiveDollarsLearningContribution)\n    ).toBeVisible();\n  });\n}\n\ntest.describe('Authenticated User', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto('/donate');\n  });\n  donatePageTests();\n});\n\ntest.describe('Unauthenticated User', () => {\n  test.use({ storageState: { cookies: [], origins: [] } });\n  test.beforeEach(async ({ page }) => {\n    await page.goto('/donate');\n  });\n  donatePageTests();\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9567,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donate-page-default.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 11,
    "total_chunks": 12
  },
  {
    "id": "7bf02ec73b361e4528aa6c7499f30dc1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\edit-profile-modal.spec.ts",
    "source_type": "git_repo",
    "title": "edit-profile-modal.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto('/certifieduser');\n\nif (!process.env.CI) {\n    await page.getByRole('button', { name: 'Preview custom 404 page' }).click();\n  }\n\nawait page.getByRole('button', { name: 'Edit my profile' }).click();\n});\n\ntest('edit profile modal should render correctly', async ({ page }) => {\n  // Internet Presence\n  await expect(\n    page.getByRole('heading', {\n      name: translations.settings.headings.internet\n    })\n  ).toBeVisible();\n  await expect(page.getByTestId('internet-presence')).toBeVisible();\n  await expect(\n    page.getByRole('button', {\n      name: translations.settings.headings.internet\n    })\n  ).toBeVisible();\n\n// Personal Information\n  await expect(\n    page.getByRole('heading', {\n      name: translations.settings.headings['personal-info']\n    })\n  ).toBeVisible();\n  await expect(page.getByTestId('camper-identity')).toBeVisible();\n  const savePersonalInfoButton = page.getByRole('button', {\n    name: translations.settings.headings['personal-info']\n  });\n  await expect(savePersonalInfoButton).toBeVisible();\n  await expect(savePersonalInfoButton).toBeDisabled();\n  await expect(\n    page.getByLabel(translations.settings.labels.name, { exact: true })\n  ).toHaveValue('Full Stack User');\n  await expect(\n    page.getByLabel(translations.settings.labels.location)\n  ).toHaveValue('');\n  await expect(\n    page.getByLabel(translations.settings.labels.picture)\n  ).toHaveValue('');\n  await expect(page.getByLabel(translations.settings.labels.about)).toHaveValue(\n    ''\n  );\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1679,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\edit-profile-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 369,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "273f4ce65d548d364b96787481d4bd5c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\editor-tabs.spec.ts",
    "source_type": "git_repo",
    "title": "editor-tabs.spec",
    "content": "import { expect, test } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(\n    '/learn/2022/responsive-web-design/build-a-survey-form-project/build-a-survey-form'\n  );\n});\n\ntest('should toggle editor visibility correctly', async ({\n  page,\n  isMobile\n}) => {\n  const htmlTabToggle = page.getByRole('button', { name: 'index.html Editor' });\n  const cssTabToggle = page.getByRole('button', { name: 'styles.css Editor' });\n  const htmlTab = page.getByTestId('editor-container-indexhtml');\n  const cssTab = page.getByTestId('editor-container-stylescss');\n\nif (isMobile) {\n    const codeButton = page.getByRole('tab', {\n      name: translations.learn['editor-tabs'].code\n    });\n    await codeButton.click();\n  }\n  await expect(htmlTabToggle).toBeVisible();\n  // HTML tab is opened by default\n  await expect(htmlTabToggle).toHaveAttribute('aria-expanded', 'true');\n  await expect(htmlTab).toBeVisible();\n  await htmlTabToggle.click();\n  await expect(htmlTabToggle).toHaveAttribute('aria-expanded', 'false');\n  await expect(htmlTab).not.toBeVisible();\n\nawait expect(cssTabToggle).toBeVisible();\n  // CSS tab is not opened by default\n  await expect(cssTabToggle).toHaveAttribute('aria-expanded', 'false');\n  await expect(cssTab).not.toBeVisible();\n  await cssTabToggle.click();\n  await expect(cssTabToggle).toHaveAttribute('aria-expanded', 'true');\n  await expect(cssTab).toBeVisible();\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1497,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\editor-tabs.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 351,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7563375cdf78e887fd332e2c8c199a52",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\editor.spec.ts",
    "source_type": "git_repo",
    "title": "editor.spec",
    "content": "import { APIRequestContext, expect, test } from '@playwright/test';\n\nimport { clearEditor, focusEditor, getEditors } from './utils/editor';\nimport { authedRequest } from './utils/request';\n\nconst setTheme = async (\n  request: APIRequestContext,\n  theme: 'default' | 'night'\n) =>\n  authedRequest({\n    request,\n    endpoint: '/update-my-theme',\n    method: 'put',\n    data: {\n      theme\n    }\n  });\n\nconst testPage =\n  '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3';\n\ntest.describe('Editor Component', () => {\n  test('should allow the user to insert text', async ({ page, isMobile }) => {\n    await page.goto(testPage);\n\nawait focusEditor({ page, isMobile });\n    await page.keyboard.insertText('<h2>FreeCodeCamp</h2>');\n    const text = page.getByText('<h2>FreeCodeCamp</h2>');\n    await expect(text).toBeVisible();\n  });\n});\n\ntest.describe('Python Terminal', () => {\n  test('should display error message when the user enters invalid code', async ({\n    page,\n    isMobile,\n    browserName\n  }) => {\n    await page.goto(\n      'learn/scientific-computing-with-python/learn-string-manipulation-by-building-a-cipher/step-2'\n    );\n\nawait focusEditor({ page, isMobile });\n    await clearEditor({ page, browserName, isMobile });\n    // Then enter invalid code\n    await getEditors(page).fill('def');\n\nif (isMobile) {\n      await page.getByRole('tab', { name: 'Preview' }).click();\n    }\n\nconst preview = page.getByTestId('preview-pane');\n\n// While it's displayed on multiple lines, the string itself has no newlines, hence:\n    const error = `Traceback (most recent call last):  File \"main.py\", line 1    def       ^SyntaxError: invalid syntax`;\n    // It shouldn't take this long, but the Python worker can be slow to respond.\n    await expect(preview.getByText(error)).toContainText(error, {\n      timeout: 15000\n    });\n  });\n});\n\ntest.describe('Editor theme if the system theme is dark', () => {\n  test.use({ colorScheme: 'dark' });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6226,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\editor.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "b7a4309479b63a710f50c7dda565fad7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\editor.spec.ts",
    "source_type": "git_repo",
    "title": "editor.spec",
    "content": "name: 'Preview' }).click(); } const preview = page.getByTestId('preview-pane'); // While it's displayed on multiple lines, the string itself has no newlines, hence: const error = `Traceback (most recent call last): File \"main.py\", line 1 def ^SyntaxError: invalid syntax`; // It shouldn't take this long, but the Python worker can be slow to respond. await expect(preview.getByText(error)).toContainText(error, { timeout: 15000 }); }); }); test.describe('Editor theme if the system theme is dark', () => { test.use({ colorScheme: 'dark' });\n\ntest.describe('If the user is signed in', () => {\n    test('should respect the user settings', async ({ page, request }) => {\n      const editor = page.locator(\"div[role='code'].monaco-editor\");\n\nawait setTheme(request, 'night');\n      await page.goto(testPage);\n\nawait expect(editor).toHaveClass(/vs-dark/);\n\nawait setTheme(request, 'default');\n      await page.reload();\n\nawait expect(editor).toHaveClass(/vs(?!\\w)/);\n    });\n  });\n\ntest.describe('If the user is signed out and has no local storage data', () => {\n    test.use({ storageState: { cookies: [], origins: [] } });\n\ntest('should be in dark mode', async ({ page }) => {\n      await page.goto(testPage);\n      const editor = page.locator(\"div[role='code'].monaco-editor\");\n      await expect(editor).toHaveClass(/vs-dark/);\n    });\n  });\n\ntest.describe('if the user is signed out and has a dark theme set in local storage', () => {\n    test.use({ storageState: { cookies: [], origins: [] } });\n\ntest('should be in dark mode', async ({ page }) => {\n      // go to the test page\n      await page.goto(testPage);\n\n// set the dark theme in local storage\n      await page.evaluate(() => {\n        localStorage.setItem('theme', 'dark');\n      });\n\n// reload the page to apply the local storage changes\n      await page.reload();\n\n// check if the editor is in dark mode\n      const editor = page.locator(\"div[role='code'].monaco-editor\");\n      await expect(editor).toHaveClass(/vs-dark/);\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6226,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\editor.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "6cacc9aa6a7dd47ffcd990384d001c9f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\editor.spec.ts",
    "source_type": "git_repo",
    "title": "editor.spec",
    "content": "() => { test.use({ storageState: { cookies: [], origins: [] } }); test('should be in dark mode', async ({ page }) => { // go to the test page await page.goto(testPage); // set the dark theme in local storage await page.evaluate(() => { localStorage.setItem('theme', 'dark'); }); // reload the page to apply the local storage changes await page.reload(); // check if the editor is in dark mode const editor = page.locator(\"div[role='code'].monaco-editor\"); await expect(editor).toHaveClass(/vs-dark/); }); }); });\n\ntest.describe('Editor theme if the system theme is light', () => {\n  test.use({ colorScheme: 'light' });\n\ntest.describe('If the user is signed in', () => {\n    test('should respect the user settings', async ({ page, request }) => {\n      const editor = page.locator(\"div[role='code'].monaco-editor\");\n\nawait setTheme(request, 'night');\n      await page.goto(testPage);\n\nawait expect(editor).toHaveClass(/vs-dark/);\n\nawait setTheme(request, 'default');\n      await page.reload();\n\nawait expect(editor).toHaveClass(/vs(?!\\w)/);\n    });\n\n// This should be true for both system themes, but we're only testing light mode to save time.\n    test('should switch the editor theme when the user toggles the theme', async ({\n      page,\n      request\n    }) => {\n      await setTheme(request, 'default');\n      await page.goto(testPage);\n      // Open the nav menu and toggle the theme\n      await page.getByRole('button', { name: 'Menu' }).click();\n\nconst toggle = page.getByRole('button', { name: 'Night Mode' });\n      await expect(toggle).toBeVisible();\n\nconst listItem = page.getByRole('listitem').filter({ has: toggle });\n\n// The button's click event is intercepted by the `li`,\n      // so we need to click on the `li` to trigger the theme change action.\n      await listItem.click();\n\n// Ensure that the action is completed before checking the editor.\n      await expect(page.getByText('We have updated your theme')).toBeVisible();\n\nconst editor = page.locator(\"div[role='code'].monaco-editor\");\n      await expect(editor).toHaveClass(/vs-dark/);\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6226,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\editor.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "40b048a1a69d6a86671c3148f32192d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\editor.spec.ts",
    "source_type": "git_repo",
    "title": "editor.spec",
    "content": "await page.getByRole('button', { name: 'Menu' }).click(); const toggle = page.getByRole('button', { name: 'Night Mode' }); await expect(toggle).toBeVisible(); const listItem = page.getByRole('listitem').filter({ has: toggle }); // The button's click event is intercepted by the `li`, // so we need to click on the `li` to trigger the theme change action. await listItem.click(); // Ensure that the action is completed before checking the editor. await expect(page.getByText('We have updated your theme')).toBeVisible(); const editor = page.locator(\"div[role='code'].monaco-editor\"); await expect(editor).toHaveClass(/vs-dark/); }); });\n\ntest.describe('If the user is signed out and has no local storage value', () => {\n    test.use({ storageState: { cookies: [], origins: [] } });\n\ntest('should be in light mode', async ({ page }) => {\n      await page.goto(testPage);\n      const editor = page.locator(\"div[role='code'].monaco-editor\");\n      await expect(editor).toHaveClass(/vs(?!\\w)/);\n    });\n\ntest.describe('if the user is signed out and has a light theme set in local storage', () => {\n      test.use({ storageState: { cookies: [], origins: [] } });\n\ntest('should be in light mode', async ({ page }) => {\n        // go to the test page\n        await page.goto(testPage);\n\n// set the light theme in local storage\n        await page.evaluate(() => {\n          localStorage.setItem('theme', 'light');\n        });\n\n// reload the page to apply the local storage changes\n        await page.reload();\n\n// check if the editor is in light mode\n        const editor = page.locator(\"div[role='code'].monaco-editor\");\n        await expect(editor).toHaveClass(/vs(?!\\w)/);\n      });\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6226,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\editor.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 398,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "fbf4b13644436d9432bdbfe4e5a266fe",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\email-settings.spec.ts",
    "source_type": "git_repo",
    "title": "email-settings.spec",
    "content": "import { execSync } from 'child_process';\n\nimport { test, expect } from '@playwright/test';\n\nimport translations from '../client/i18n/locales/english/translations.json';\n\nconst settingsPageElement = {\n  emailVerificationAlert: 'email-verification-alert',\n  emailVerificationLink: 'email-verification-link',\n  flashMessageAlert: 'flash-message',\n  newEmailValidation: 'new-email-validation',\n  confirmEmailValidation: 'confirm-email-validation'\n} as const;\n\nconst originalEmail = 'foo@bar.com';\nconst newEmail = 'foo-update@bar.com';\n\ntest.beforeEach(async ({ page }) => {\n  execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n  await page.goto('/settings');\n});\n\ntest.describe('Email Settings', () => {\n  test('should display the content correctly', async ({ page }) => {\n    await expect(\n      page.getByRole('heading', { name: translations.settings.email.heading })\n    ).toBeVisible();\n\nawait expect(page.getByText(originalEmail)).toBeVisible();\n\nawait expect(\n      page.getByRole('button', {\n        name: `${translations.buttons.save} ${translations.settings.email.heading}`\n      })\n    ).toBeDisabled();\n\nawait expect(\n      page\n        .getByRole('group', { name: translations.settings.email.weekly })\n        .locator('legend')\n    ).toBeVisible();\n\nawait expect(\n      page.getByRole('button', {\n        name: translations.buttons['yes-please']\n      })\n    ).toHaveAttribute('aria-pressed', 'false');\n\nawait expect(\n      page.getByRole('button', {\n        name: translations.buttons['no-thanks']\n      })\n    ).toHaveAttribute('aria-pressed', 'true');\n  });\n\ntest('should display email verification alert after email update', async ({\n    page\n  }) => {\n    const flashMessageAlert = page.getByTestId(\n      settingsPageElement.flashMessageAlert\n    );\n    // Need exact match as there are \"New email\" and \"Confirm new email\" labels\n    await page\n      .getByLabel(translations.settings.email.new, { exact: true })\n      .fill(newEmail);\n\nawait page.getByLabel(translations.settings.email.confirm).fill(newEmail);\n\nawait page\n      .getByRole('button', {\n        name: `${translations.buttons.save} ${translations.settings.email.heading}`\n      })\n      .click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5135,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\email-settings.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "32c7ffb69dda5a7a7ec7da79f56f0db3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\email-settings.spec.ts",
    "source_type": "git_repo",
    "title": "email-settings.spec",
    "content": "translations.settings.email.weekly }) .locator('legend') ).toBeVisible(); await expect( page.getByRole('button', { name: translations.buttons['yes-please'] }) ).toHaveAttribute('aria-pressed', 'false'); await expect( page.getByRole('button', { name: translations.buttons['no-thanks'] }) ).toHaveAttribute('aria-pressed', 'true'); }); test('should display email verification alert after email update', async ({ page }) => { const flashMessageAlert = page.getByTestId( settingsPageElement.flashMessageAlert ); // Need exact match as there are \"New email\" and \"Confirm new email\" labels await page .getByLabel(translations.settings.email.new, { exact: true }) .fill(newEmail); await page.getByLabel(translations.settings.email.confirm).fill(newEmail); await page .getByRole('button', { name: `${translations.buttons.save} ${translations.settings.email.heading}` }) .click();\n\nawait expect(flashMessageAlert).toBeVisible();\n    await expect(flashMessageAlert).toContainText(\n      'Check your email and click the link we sent you to confirm your new email address.'\n    );\n\nawait page.reload();\n    await expect(\n      page.getByTestId(settingsPageElement.emailVerificationAlert)\n    ).toBeVisible();\n\nconst emailVerificationLink = page.getByTestId(\n      settingsPageElement.emailVerificationLink\n    );\n    await expect(emailVerificationLink).toHaveAttribute(\n      'href',\n      '/update-email'\n    );\n  });\n\ntest('should show the user error messages if the input is invalid', async ({\n    page\n  }) => {\n    const newEmailInput = page.getByLabel(translations.settings.email.new, {\n      exact: true\n    });\n    const confirmEmailInput = page.getByLabel(\n      translations.settings.email.confirm\n    );\n    const confirmValidation = page.getByTestId(\n      settingsPageElement.confirmEmailValidation\n    );\n    const newEmailValidation = page.getByTestId(\n      settingsPageElement.newEmailValidation\n    );\n\nawait newEmailInput.fill(newEmail);\n    await confirmEmailInput.fill(originalEmail);\n\nawait expect(confirmValidation).toBeVisible();\n    await expect(confirmValidation).toContainText(\n      translations.validation['email-mismatch']\n    );\n\nawait newEmailInput.fill(originalEmail);\n\nawait expect(newEmailValidation).toBeVisible();\n    await expect(newEmailValidation).toContainText(\n      translations.validation['same-email']\n    );\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5135,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\email-settings.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "df16a60f98ef7698ad74923c2210459a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\email-settings.spec.ts",
    "source_type": "git_repo",
    "title": "email-settings.spec",
    "content": "page.getByTestId(settingsPageElement.emailVerificationAlert) ).toBeVisible(); const emailVerificationLink = page.getByTestId( settingsPageElement.emailVerificationLink ); await expect(emailVerificationLink).toHaveAttribute( 'href', '/update-email' ); }); test('should show the user error messages if the input is invalid', async ({ page }) => { const newEmailInput = page.getByLabel(translations.settings.email.new, { exact: true }); const confirmEmailInput = page.getByLabel( translations.settings.email.confirm ); const confirmValidation = page.getByTestId( settingsPageElement.confirmEmailValidation ); const newEmailValidation = page.getByTestId( settingsPageElement.newEmailValidation ); await newEmailInput.fill(newEmail); await confirmEmailInput.fill(originalEmail); await expect(confirmValidation).toBeVisible(); await expect(confirmValidation).toContainText( translations.validation['email-mismatch'] ); await newEmailInput.fill(originalEmail); await expect(newEmailValidation).toBeVisible(); await expect(newEmailValidation).toContainText( translations.validation['same-email'] ); });\n\ntest('should toggle email subscription correctly', async ({ page }) => {\n    const yesPleaseButton = page.getByRole('button', {\n      name: translations.buttons['yes-please']\n    });\n    const noThanksButton = page.getByRole('button', {\n      name: translations.buttons['no-thanks']\n    });\n\nawait yesPleaseButton.click();\n    await expect(yesPleaseButton).toHaveAttribute('aria-pressed', 'true');\n    await expect(noThanksButton).toHaveAttribute('aria-pressed', 'false');\n\nawait noThanksButton.click();\n    await expect(yesPleaseButton).toHaveAttribute('aria-pressed', 'false');\n    await expect(noThanksButton).toHaveAttribute('aria-pressed', 'true');\n  });\n\ntest('should display flash message when email subscription is toggled', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', {\n        name: translations.buttons['yes-please']\n      })\n      .click();\n\nawait expect(\n      page.getByTestId(settingsPageElement.flashMessageAlert)\n    ).toContainText(\"We have updated your subscription to Quincy's email\");",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5135,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\email-settings.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 434,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "725879d983f7d63c28b032150ee559d3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\email-settings.spec.ts",
    "source_type": "git_repo",
    "title": "email-settings.spec",
    "content": "email subscription correctly', async ({ page }) => { const yesPleaseButton = page.getByRole('button', { name: translations.buttons['yes-please'] }); const noThanksButton = page.getByRole('button', { name: translations.buttons['no-thanks'] }); await yesPleaseButton.click(); await expect(yesPleaseButton).toHaveAttribute('aria-pressed', 'true'); await expect(noThanksButton).toHaveAttribute('aria-pressed', 'false'); await noThanksButton.click(); await expect(yesPleaseButton).toHaveAttribute('aria-pressed', 'false'); await expect(noThanksButton).toHaveAttribute('aria-pressed', 'true'); }); test('should display flash message when email subscription is toggled', async ({ page }) => { await page .getByRole('button', { name: translations.buttons['yes-please'] }) .click(); await expect( page.getByTestId(settingsPageElement.flashMessageAlert) ).toContainText(\"We have updated your subscription to Quincy's email\");\n\n// Undo subscription change\n    await Promise.all([\n      page.waitForResponse(\n        response =>\n          response.url().includes('update-my-quincy-email') &&\n          response.status() === 200\n      ),\n      page\n        .getByRole('button', {\n          name: translations.buttons['no-thanks']\n        })\n        .click()\n    ]);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5135,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\email-settings.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 276,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "efb1738548a92d676d6b26fa57a1fe2b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\exam-results-modal.spec.ts",
    "source_type": "git_repo",
    "title": "exam-results-modal.spec",
    "content": "import { test, expect } from '@playwright/test';\n\ntest.describe('Exam results modal', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto('/settings');\n  });\n\ntest('should display the content correctly', async ({ page }) => {\n    const viewButton = page.getByRole('button', {\n      name: 'View Results for Foundational C# with Microsoft Certification Exam'\n    });\n\nawait expect(viewButton).toBeVisible();\n    await viewButton.click();\n\nawait expect(\n      page.getByRole('dialog', {\n        name: 'Results for Foundational C# with Microsoft Certification Exam'\n      })\n    ).toBeVisible();\n    await expect(page.getByText('Number of questions: 80')).toBeVisible();\n    await expect(page.getByText('Correct answers: 70')).toBeVisible();\n    await expect(page.getByText('Percent correct: 87.5%')).toBeVisible();\n    await expect(page.getByText('Time: 36:35')).toBeVisible();\n    await expect(page.getByRole('button', { name: 'Close' })).toHaveCount(2);\n  });\n\ntest('should close when the x button is clicked', async ({ page }) => {\n    const viewButton = page.getByRole('button', {\n      name: 'View Results for Foundational C# with Microsoft Certification Exam'\n    });\n    await expect(viewButton).toBeVisible();\n    await viewButton.click();\n\nawait expect(\n      page.getByRole('dialog', {\n        name: 'Results for Foundational C# with Microsoft Certification Exam'\n      })\n    ).toBeVisible();\n\n// There are 2 close buttons on the page, and the x button is the first\n    const closeButton = page.getByRole('button', { name: 'Close' }).first();\n    await closeButton.click();\n\nawait expect(page.getByRole('dialog')).toHaveCount(0);\n  });\n\ntest('should close when the close button is clicked', async ({ page }) => {\n    const viewButton = page.getByRole('button', {\n      name: 'View Results for Foundational C# with Microsoft Certification Exam'\n    });\n    await expect(viewButton).toBeVisible();\n    await viewButton.click();\n\nawait expect(\n      page.getByRole('dialog', {\n        name: 'Results for Foundational C# with Microsoft Certification Exam'\n      })\n    ).toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2393,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\exam-results-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "4ad6aeea35576482bde03aa4153f15ff",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\exam-results-modal.spec.ts",
    "source_type": "git_repo",
    "title": "exam-results-modal.spec",
    "content": "are 2 close buttons on the page, and the x button is the first const closeButton = page.getByRole('button', { name: 'Close' }).first(); await closeButton.click(); await expect(page.getByRole('dialog')).toHaveCount(0); }); test('should close when the close button is clicked', async ({ page }) => { const viewButton = page.getByRole('button', { name: 'View Results for Foundational C# with Microsoft Certification Exam' }); await expect(viewButton).toBeVisible(); await viewButton.click(); await expect( page.getByRole('dialog', { name: 'Results for Foundational C# with Microsoft Certification Exam' }) ).toBeVisible();\n\n// There are 2 close buttons on the page, and the close button is the last\n    const closeButton = page.getByRole('button', { name: 'Close' }).last();\n    await closeButton.click();\n\nawait expect(page.getByRole('dialog')).toHaveCount(0);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2393,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\exam-results-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 197,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "cf596346d6caf0cfe9a161b257d42936",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
    "source_type": "git_repo",
    "title": "donation-modal.spec",
    "content": "import { execSync } from 'child_process';\nimport { test, expect, type Page } from '@playwright/test';\nimport { addGrowthbookCookie } from './utils/add-growthbook-cookie';\n\nimport { clearEditor, focusEditor } from './utils/editor';\nimport { allowTrailingSlash } from './utils/url';\n\nconst slowExpect = expect.configure({ timeout: 25000 });\n\nconst completeFrontEndCert = async (page: Page, number?: number) => {\n  await page.goto(\n    `/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine`\n  );\n\nconst projects = [\n    'random-quote-machine',\n    'markdown-previewer',\n    'drum-machine',\n    'javascript-calculator',\n    '25--5-clock'\n  ];\n\nconst loopNumber = number || projects.length;\n  for (let i = 0; i < loopNumber; i++) {\n    await page.waitForURL(\n      allowTrailingSlash(\n        `/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-${projects[i]}`\n      )\n    );\n    await page\n      .getByRole('textbox', { name: 'solution' })\n      .fill('https://codepen.io/camperbot/full/oNvPqqo');\n    await page\n      .getByRole('button', { name: \"I've completed this challenge\" })\n      .click();\n    await page\n      .getByRole('button', { name: 'Submit and go to next challenge' })\n      .click();\n  }\n};",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 17894,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 325,
    "chunk_index": 0,
    "total_chunks": 14
  },
  {
    "id": "fc6e9a28a2cc59b02501cbab4b192134",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
    "source_type": "git_repo",
    "title": "donation-modal.spec",
    "content": "(page: Page, number?: number) => { await page.goto( `/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine` ); const projects = [ 'random-quote-machine', 'markdown-previewer', 'drum-machine', 'javascript-calculator', '25--5-clock' ]; const loopNumber = number || projects.length; for (let i = 0; i < loopNumber; i++) { await page.waitForURL( allowTrailingSlash( `/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-${projects[i]}` ) ); await page .getByRole('textbox', { name: 'solution' }) .fill('https://codepen.io/camperbot/full/oNvPqqo'); await page .getByRole('button', { name: \"I've completed this challenge\" }) .click(); await page .getByRole('button', { name: 'Submit and go to next challenge' }) .click(); } };const challenges = [\n  {\n    url: '/learn/javascript-algorithms-and-data-structures/basic-javascript/comment-your-javascript-code',\n    solution: `// some comment\\n/* some comment */`\n  },\n  {\n    url: '/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-javascript-variables',\n    solution: 'var myName;'\n  },\n  {\n    url: '/learn/javascript-algorithms-and-data-structures/basic-javascript/storing-values-with-the-assignment-operator',\n    solution: `// Setup\\nvar a;\\n\\n// Only change code below this line\\na = 7;`\n  },\n  {\n    url: '/learn/javascript-algorithms-and-data-structures/basic-javascript/assigning-the-value-of-one-variable-to-another',\n    solution: `// Setup\\nvar a;\\na = 7;\\nvar b;\\n\\n// Only change code below this line\\nb = a;`\n  },\n  {\n    url: '/learn/javascript-algorithms-and-data-structures/basic-javascript/initializing-variables-with-the-assignment-operator',\n    solution: 'var a = 9;'\n  },\n  {\n    url: '/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-string-variables',\n    solution: `var myFirstName = 'foo';\\nvar myLastName = 'bar';`\n  },\n  {\n    url: '/learn/javascript-algorithms-and-data-structures/basic-javascript/understanding-uninitialized-variables',\n    solution: `// Only change code below this line\\nvar a = 5;\\nvar b = 10;\\nvar c = 'I am a';\\n// Only change code above this line\\n\\na = a + 1;\\nb = b + 5;\\nc = c + \" String",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 17894,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 580,
    "chunk_index": 1,
    "total_chunks": 14
  },
  {
    "id": "9f477f2fa4f8f230fe26563d9a5d9cb0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
    "source_type": "git_repo",
    "title": "donation-modal.spec",
    "content": "Setup\\nvar a;\\na = 7;\\nvar b;\\n\\n// Only change code below this line\\nb = a;` }, { url: '/learn/javascript-algorithms-and-data-structures/basic-javascript/initializing-variables-with-the-assignment-operator', solution: 'var a = 9;' }, { url: '/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-string-variables', solution: `var myFirstName = 'foo';\\nvar myLastName = 'bar';` }, { url: '/learn/javascript-algorithms-and-data-structures/basic-javascript/understanding-uninitialized-variables', solution: `// Only change code below this line\\nvar a = 5;\\nvar b = 10;\\nvar c = 'I am a';\\n// Only change code above this line\\n\\na = a + 1;\\nb = b + 5;\\nc = c + \" String\";`\n  },\n  {\n    url: '/learn/javascript-algorithms-and-data-structures/basic-javascript/understanding-case-sensitivity-in-variables',\n    solution: `// Variable declarations\\nvar studlyCapVar;\\nvar properCamelCase;\\nvar titleCaseOver;\\n\\n// Variable assignments\\nstudlyCapVar = 10;\\nproperCamelCase = \"A String\";\\ntitleCaseOver = 9000;`\n  },\n  {\n    url: '/learn/javascript-algorithms-and-data-structures/basic-javascript/explore-differences-between-the-var-and-let-keywords',\n    solution: `let catName = \"Oliver\";\\nlet catSound = \"Meow \";`\n  },\n  {\n    url: '/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-a-read-only-variable-with-the-const-keyword',\n    solution: `const FCC = \"freeCodeCamp\";\\n// Change this line\\nlet fact = \"is cool \";\\n// Change this line\\nfact = \"is awesome \";\\nconsole log(FCC, fact);\\n// Change this line`\n  }\n];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 17894,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 2,
    "total_chunks": 14
  },
  {
    "id": "c3755c29f86175705ad447b20c7fe219",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
    "source_type": "git_repo",
    "title": "donation-modal.spec",
    "content": "a + 1;\\nb = b + 5;\\nc = c + \" String\";` }, { url: '/learn/javascript-algorithms-and-data-structures/basic-javascript/understanding-case-sensitivity-in-variables', solution: `// Variable declarations\\nvar studlyCapVar;\\nvar properCamelCase;\\nvar titleCaseOver;\\n\\n// Variable assignments\\nstudlyCapVar = 10;\\nproperCamelCase = \"A String\";\\ntitleCaseOver = 9000;` }, { url: '/learn/javascript-algorithms-and-data-structures/basic-javascript/explore-differences-between-the-var-and-let-keywords', solution: `let catName = \"Oliver\";\\nlet catSound = \"Meow \";` }, { url: '/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-a-read-only-variable-with-the-const-keyword', solution: `const FCC = \"freeCodeCamp\";\\n// Change this line\\nlet fact = \"is cool \";\\n// Change this line\\nfact = \"is awesome \";\\nconsole log(FCC, fact);\\n// Change this line` } ];\n\nconst completeChallenges = async ({\n  page,\n  browserName,\n  isMobile,\n  number\n}: {\n  page: Page;\n  browserName: string;\n  isMobile: boolean;\n  number: number;\n}) => {\n  await page.goto(challenges[0].url);\n  for (const challenge of challenges.slice(0, number)) {\n    await page.waitForURL(allowTrailingSlash(challenge.url));\n    await focusEditor({ page, isMobile });\n    await clearEditor({ page, browserName });\n    await page.evaluate(\n      async contents => await navigator.clipboard.writeText(contents),\n      challenge.solution\n    );\n    await page.keyboard.press('ControlOrMeta+V');\n    await page.getByRole('button', { name: 'Run' }).click();\n    await expect(\n      page.getByRole('dialog').filter({ hasText: 'Basic Javascript' })\n    ).toBeVisible(); // completion dialog\n    await page.getByRole('button', { name: 'Submit' }).click();\n  }\n};\n\ntest.skip(\n  ({ browserName }) => browserName !== 'chromium',\n  'Only chromium allows us to use the clipboard API.'\n);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 17894,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 3,
    "total_chunks": 14
  },
  {
    "id": "4bc10bd8f4494c06e73d199ce0ab1e7c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
    "source_type": "git_repo",
    "title": "donation-modal.spec",
    "content": "{ await page.goto(challenges[0].url); for (const challenge of challenges.slice(0, number)) { await page.waitForURL(allowTrailingSlash(challenge.url)); await focusEditor({ page, isMobile }); await clearEditor({ page, browserName }); await page.evaluate( async contents => await navigator.clipboard.writeText(contents), challenge.solution ); await page.keyboard.press('ControlOrMeta+V'); await page.getByRole('button', { name: 'Run' }).click(); await expect( page.getByRole('dialog').filter({ hasText: 'Basic Javascript' }) ).toBeVisible(); // completion dialog await page.getByRole('button', { name: 'Submit' }).click(); } }; test.skip( ({ browserName }) => browserName !== 'chromium', 'Only chromium allows us to use the clipboard API.' );\n\ntest.describe('Donation modal display', () => {\n  test.beforeEach(async ({ context }) => {\n    await addGrowthbookCookie({ context, variation: 'A' });\n  });\n\ntest('should display the content correctly and disable close when the animation is not complete', async ({\n    page,\n    browserName,\n    isMobile,\n    context\n  }) => {\n    await context.grantPermissions(['clipboard-read', 'clipboard-write']);\n    test.setTimeout(40000);\n\nawait completeChallenges({ page, browserName, isMobile, number: 3 });\n\nconst donationModal = page\n      .getByRole('dialog')\n      .filter({ hasText: 'Become a Supporter' });\n    await expect(donationModal).toBeVisible();\n\nawait expect(\n      donationModal.getByText(\n        'This is a 20 second animated advertisement to encourage campers to become supporters of freeCodeCamp. The animation starts with a teddy bear who becomes a supporter. As a result, distracting pop-ups disappear and the bear gets to complete all of its goals. Then, it graduates and becomes an education super hero helping people around the world.'\n      )\n    ).toBeVisible();\n    await expect(donationModal.getByTestId('donation-animation')).toBeVisible();\n    await expect(donationModal.getByText('Become a Supporter')).toBeVisible();\n    await expect(donationModal.getByText('Remove distractions')).toBeVisible();\n    await expect(\n      donationModal.getByText('Reach your goals faster')\n    ).toBeVisible();\n    await expect(\n      donationModal.getByText('Help millions of people learn')\n    ).toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 17894,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 4,
    "total_chunks": 14
  },
  {
    "id": "a895590279ad98056cb414fe279c4011",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
    "source_type": "git_repo",
    "title": "donation-modal.spec",
    "content": "advertisement to encourage campers to become supporters of freeCodeCamp. The animation starts with a teddy bear who becomes a supporter. As a result, distracting pop-ups disappear and the bear gets to complete all of its goals. Then, it graduates and becomes an education super hero helping people around the world.' ) ).toBeVisible(); await expect(donationModal.getByTestId('donation-animation')).toBeVisible(); await expect(donationModal.getByText('Become a Supporter')).toBeVisible(); await expect(donationModal.getByText('Remove distractions')).toBeVisible(); await expect( donationModal.getByText('Reach your goals faster') ).toBeVisible(); await expect( donationModal.getByText('Help millions of people learn') ).toBeVisible();\n\n// Ensure that the modal cannot be closed by pressing the Escape key\n    await page.keyboard.press('Escape');\n    await expect(donationModal).toBeVisible();\n\n// Second part of the modal.\n    // Use `slowExpect` as we need to wait 20s for this part to show up.\n    await slowExpect(\n      donationModal.getByRole('img', {\n        name: 'Illustration of an adorable teddy bear wearing a graduation cap and flying with a Supporter badge.'\n      })\n    ).toBeVisible();\n\nawait expect(\n      donationModal.getByRole('heading', {\n        name: 'Support us'\n      })\n    ).toBeVisible();\n\nawait expect(\n      donationModal\n        .getByRole('listitem')\n        .filter({ hasText: 'Help us build more certifications' })\n    ).toBeVisible();\n\nawait expect(\n      donationModal\n        .getByRole('listitem')\n        .filter({ hasText: 'Remove donation popups' })\n    ).toBeVisible();\n\nawait expect(\n      donationModal\n        .getByRole('listitem')\n        .filter({ hasText: 'Help millions of people learn' })\n    ).toBeVisible();\n\nawait expect(\n      donationModal.getByRole('button', { name: 'Become a Supporter' })\n    ).toBeVisible();\n\nawait expect(\n      donationModal.getByRole('button', { name: 'Ask me later' })\n    ).toBeVisible();\n  });\n});\n\ntest.describe('Donation modal appearance logic - New user', () => {\n  test.use({ storageState: 'playwright/.auth/development-user.json' });\n  test.beforeEach(async ({ context }) => {\n    await addGrowthbookCookie({ context, variation: 'B' });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 17894,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 5,
    "total_chunks": 14
  },
  {
    "id": "7538ef3468970817362e49d1ada1c774",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
    "source_type": "git_repo",
    "title": "donation-modal.spec",
    "content": "certifications' }) ).toBeVisible(); await expect( donationModal .getByRole('listitem') .filter({ hasText: 'Remove donation popups' }) ).toBeVisible(); await expect( donationModal .getByRole('listitem') .filter({ hasText: 'Help millions of people learn' }) ).toBeVisible(); await expect( donationModal.getByRole('button', { name: 'Become a Supporter' }) ).toBeVisible(); await expect( donationModal.getByRole('button', { name: 'Ask me later' }) ).toBeVisible(); }); }); test.describe('Donation modal appearance logic - New user', () => { test.use({ storageState: 'playwright/.auth/development-user.json' }); test.beforeEach(async ({ context }) => { await addGrowthbookCookie({ context, variation: 'B' }); });\n\ntest.beforeEach(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user');\n  });\n\ntest.afterAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n  });\n\ntest('should not appear if the user has less than 10 completed challenges in total and has just completed 3 challenges', async ({\n    page,\n    browserName,\n    isMobile,\n    context\n  }) => {\n    await context.grantPermissions(['clipboard-read', 'clipboard-write']);\n\n// Development user doesn't have any completed challenges, we are completing the first 3.\n    await completeChallenges({ page, browserName, isMobile, number: 3 });\n\nconst donationModal = page\n      .getByRole('dialog')\n      .filter({ hasText: 'Become a Supporter' });\n    await expect(donationModal).toBeHidden();\n  });\n\ntest('should appear if the user has less than 10 completed challenges in total and has just completed 10 challenges', async ({\n    page,\n    isMobile,\n    browserName,\n    context\n  }) => {\n    await context.grantPermissions(['clipboard-read', 'clipboard-write']);\n    test.setTimeout(50000);\n\nawait completeChallenges({ page, isMobile, browserName, number: 10 });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 17894,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 6,
    "total_chunks": 14
  },
  {
    "id": "f875b0c1dac41222cfcd48d097b2238a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
    "source_type": "git_repo",
    "title": "donation-modal.spec",
    "content": "// Development user doesn't have any completed challenges, we are completing the first 3. await completeChallenges({ page, browserName, isMobile, number: 3 }); const donationModal = page .getByRole('dialog') .filter({ hasText: 'Become a Supporter' }); await expect(donationModal).toBeHidden(); }); test('should appear if the user has less than 10 completed challenges in total and has just completed 10 challenges', async ({ page, isMobile, browserName, context }) => { await context.grantPermissions(['clipboard-read', 'clipboard-write']); test.setTimeout(50000); await completeChallenges({ page, isMobile, browserName, number: 10 });\n\nconst donationModal = page\n      .getByRole('dialog')\n      .filter({ hasText: 'Become a Supporter' });\n    await expect(donationModal).toBeVisible();\n    await expect(\n      donationModal.getByText(\n        'This is a 20 second animated advertisement to encourage campers to become supporters of freeCodeCamp. The animation starts with a teddy bear who becomes a supporter. As a result, distracting pop-ups disappear and the bear gets to complete all of its goals. Then, it graduates and becomes an education super hero helping people around the world.'\n      )\n    ).toBeVisible();\n\n// Second part of the modal.\n    // Use `slowExpect` as we need to wait 20s for this part to show up.\n    await slowExpect(\n      donationModal.getByRole('heading', { name: 'Support us' })\n    ).toBeVisible();\n    await donationModal.getByRole('button', { name: 'Ask me later' }).click();\n    // Ensure that the close state has been registered before ending the test.\n    // The modal will show up on another page/test otherwise.\n    await expect(donationModal).toBeHidden();\n  });\n\ntest('should not appear if the user has just completed a new block but has less than 10 completed challenges', async ({\n    page\n  }) => {\n    test.setTimeout(40000);\n\nawait completeFrontEndCert(page);\n\nconst donationModal = page\n      .getByRole('dialog')\n      .filter({ hasText: 'Become a Supporter' });\n    await expect(donationModal).toBeHidden();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 17894,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 473,
    "chunk_index": 7,
    "total_chunks": 14
  },
  {
    "id": "262c08dd5924a3cbfd2014f10a6e2641",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
    "source_type": "git_repo",
    "title": "donation-modal.spec",
    "content": "donationModal.getByRole('button', { name: 'Ask me later' }).click(); // Ensure that the close state has been registered before ending the test. // The modal will show up on another page/test otherwise. await expect(donationModal).toBeHidden(); }); test('should not appear if the user has just completed a new block but has less than 10 completed challenges', async ({ page }) => { test.setTimeout(40000); await completeFrontEndCert(page); const donationModal = page .getByRole('dialog') .filter({ hasText: 'Become a Supporter' }); await expect(donationModal).toBeHidden(); }); });\n\ntest.describe('Donation modal appearance logic - Certified user claiming a new block', () => {\n  test.use({ storageState: 'playwright/.auth/certified-user.json' });\n  test.beforeEach(() =>\n    execSync('node ./tools/scripts/seed/seed-demo-user --almost-certified-user')\n  );\n\ntest('should appear if the user has just completed a new block, and should not appear if the user re-submits the projects of the block', async ({\n    page,\n    context\n  }) => {\n    await context.grantPermissions(['clipboard-read', 'clipboard-write']);\n    test.setTimeout(40000);\n\nawait completeFrontEndCert(page, 1);\n\nconst donationModal = page\n      .getByRole('dialog')\n      .filter({ hasText: 'Become a Supporter' });\n    await expect(donationModal).toBeVisible();\n    await expect(\n      donationModal.getByText(\n        'This is a 20 second animated advertisement to encourage campers to become supporters of freeCodeCamp. The animation starts with a teddy bear who becomes a supporter. As a result, distracting pop-ups disappear and the bear gets to complete all of its goals. Then, it graduates and becomes an education super hero helping people around the world.'\n      )\n    ).toBeVisible();\n\n// Second part of the modal.\n    // Use `slowExpect` as we need to wait 20s for this part to show up.\n    await slowExpect(\n      donationModal.getByText(\n        'Nicely done. You just completed Front End Development Libraries Projects.'\n      )\n    ).toBeVisible();\n    await donationModal.getByRole('button', { name: 'Ask me later' }).click();\n    await expect(donationModal).toBeHidden();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 17894,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 8,
    "total_chunks": 14
  },
  {
    "id": "c9b26d329ddb2a596ab57d47f098839c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
    "source_type": "git_repo",
    "title": "donation-modal.spec",
    "content": "result, distracting pop-ups disappear and the bear gets to complete all of its goals. Then, it graduates and becomes an education super hero helping people around the world.' ) ).toBeVisible(); // Second part of the modal. // Use `slowExpect` as we need to wait 20s for this part to show up. await slowExpect( donationModal.getByText( 'Nicely done. You just completed Front End Development Libraries Projects.' ) ).toBeVisible(); await donationModal.getByRole('button', { name: 'Ask me later' }).click(); await expect(donationModal).toBeHidden();\n\nawait completeFrontEndCert(page, 1);\n    await expect(donationModal).toBeHidden();\n  });\n\ntest(\"should not appear if the user has completed a new FSD block, but the block's module is not completed\", async ({\n    page\n  }) => {\n    await page.goto(\n      '/learn/full-stack-developer/review-basic-html/basic-html-review'\n    );\n\nawait page.getByRole('checkbox', { name: /Review/ }).click();\n    await page.getByRole('button', { name: 'Submit', exact: true }).click();\n    await page.getByRole('button', { name: /Submit and go/ }).click();\n\nconst donationModal = page\n      .getByRole('dialog')\n      .filter({ hasText: 'Become a Supporter' });\n    await expect(donationModal).toBeHidden();\n  });\n\ntest('should not appear if FSD review module is completed', async ({\n    page\n  }) => {\n    await page.goto('/learn/full-stack-developer/review-html/review-html');\n    await page.getByRole('checkbox', { name: /Review/ }).click();\n    await page.getByRole('button', { name: 'Submit', exact: true }).click();\n    await page.getByRole('button', { name: /Submit and go/ }).click();\n    await page.waitForTimeout(1000);\n    const donationModal = page\n      .getByRole('dialog')\n      .filter({ hasText: 'Become a Supporter' });\n    await expect(donationModal).toBeHidden();\n  });\n});\n\ntest.describe('Donation modal appearance logic - Certified user claiming a new module', () => {\n  test.use({ storageState: 'playwright/.auth/certified-user.json' });\n  execSync('node ./tools/scripts/seed/seed-demo-user --almost-certified-user');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 17894,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 9,
    "total_chunks": 14
  },
  {
    "id": "b9fa8741b812c725160737044432aa28",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
    "source_type": "git_repo",
    "title": "donation-modal.spec",
    "content": "not appear if FSD review module is completed', async ({ page }) => { await page.goto('/learn/full-stack-developer/review-html/review-html'); await page.getByRole('checkbox', { name: /Review/ }).click(); await page.getByRole('button', { name: 'Submit', exact: true }).click(); await page.getByRole('button', { name: /Submit and go/ }).click(); await page.waitForTimeout(1000); const donationModal = page .getByRole('dialog') .filter({ hasText: 'Become a Supporter' }); await expect(donationModal).toBeHidden(); }); }); test.describe('Donation modal appearance logic - Certified user claiming a new module', () => { test.use({ storageState: 'playwright/.auth/certified-user.json' }); execSync('node ./tools/scripts/seed/seed-demo-user --almost-certified-user');\n\ntest('should appear if the user has just completed a new module', async ({\n    page\n  }) => {\n    test.setTimeout(40000);\n\n// Go to the last lecture of the Code Editors block.\n    // This lecture is not added to the seed data, so it is not completed.\n    // By completing this lecture, we claim both the block and its module.\n    await page.goto(\n      '/learn/full-stack-developer/lecture-working-with-code-editors-and-ides/what-are-some-good-vs-code-extensions-you-can-use-in-your-editor'\n    );\n\n// Wait for the page content to render\n    // TODO: Change the selector to `getByRole('radiogroup')` when we have migrated the MCQ component to fcc/ui\n    await expect(page.locator(\"div[class='video-quiz-options']\")).toHaveCount(\n      3\n    );\n\nconst radioGroups = await page\n      .locator(\"div[class='video-quiz-options']\")\n      .all();\n\nawait radioGroups[0].getByRole('radio').nth(1).click({ force: true });\n    await radioGroups[1].getByRole('radio').nth(2).click({ force: true });\n    await radioGroups[2].getByRole('radio').nth(1).click({ force: true });\n\nawait page.getByRole('button', { name: /Check your answer/ }).click();\n    await page.getByRole('button', { name: /Submit and go/ }).click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 17894,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 10,
    "total_chunks": 14
  },
  {
    "id": "a11fae27f899a302561a7565089456eb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
    "source_type": "git_repo",
    "title": "donation-modal.spec",
    "content": "both the block and its module. await page.goto( '/learn/full-stack-developer/lecture-working-with-code-editors-and-ides/what-are-some-good-vs-code-extensions-you-can-use-in-your-editor' ); // Wait for the page content to render // TODO: Change the selector to `getByRole('radiogroup')` when we have migrated the MCQ component to fcc/ui await expect(page.locator(\"div[class='video-quiz-options']\")).toHaveCount( 3 ); const radioGroups = await page .locator(\"div[class='video-quiz-options']\") .all(); await radioGroups[0].getByRole('radio').nth(1).click({ force: true }); await radioGroups[1].getByRole('radio').nth(2).click({ force: true }); await radioGroups[2].getByRole('radio').nth(1).click({ force: true }); await page.getByRole('button', { name: /Check your answer/ }).click(); await page.getByRole('button', { name: /Submit and go/ }).click();\n\nconst donationModal = page\n      .getByRole('dialog')\n      .filter({ hasText: 'Become a Supporter' });\n    await expect(donationModal).toBeVisible();\n    await expect(\n      donationModal.getByText(\n        'This is a 20 second animated advertisement to encourage campers to become supporters of freeCodeCamp. The animation starts with a teddy bear who becomes a supporter. As a result, distracting pop-ups disappear and the bear gets to complete all of its goals. Then, it graduates and becomes an education super hero helping people around the world.'\n      )\n    ).toBeVisible();\n\n// Second part of the modal.\n    // Use `slowExpect` as we need to wait 20s for this part to show up.\n    await slowExpect(\n      donationModal.getByText('Nicely done. You just completed Code Editors.')\n    ).toBeVisible();\n  });\n});\n\ntest.describe('Donation modal appearance logic - Certified user', () => {\n  test.beforeEach(async ({ context }) => {\n    await addGrowthbookCookie({ context, variation: 'A' });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 17894,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 11,
    "total_chunks": 14
  },
  {
    "id": "27d6218ed8ecd1b26dc6541e9ff3d4a5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
    "source_type": "git_repo",
    "title": "donation-modal.spec",
    "content": "all of its goals. Then, it graduates and becomes an education super hero helping people around the world.' ) ).toBeVisible(); // Second part of the modal. // Use `slowExpect` as we need to wait 20s for this part to show up. await slowExpect( donationModal.getByText('Nicely done. You just completed Code Editors.') ).toBeVisible(); }); }); test.describe('Donation modal appearance logic - Certified user', () => { test.beforeEach(async ({ context }) => { await addGrowthbookCookie({ context, variation: 'A' }); });\n\ntest('should appear if the user has completed 3 challenges and has more than 10 completed challenges in total', async ({\n    page,\n    browserName,\n    isMobile,\n    context\n  }) => {\n    await context.grantPermissions(['clipboard-read', 'clipboard-write']);\n    test.setTimeout(40000);\n\n// Certified user already has more than 10 completed challenges, we are just completing 3 more.\n    await completeChallenges({ page, isMobile, browserName, number: 3 });\n\nconst donationModal = page\n      .getByRole('dialog')\n      .filter({ hasText: 'Become a Supporter' });\n    await expect(donationModal).toBeVisible();\n\nawait expect(\n      donationModal.getByText(\n        'This is a 20 second animated advertisement to encourage campers to become supporters of freeCodeCamp. The animation starts with a teddy bear who becomes a supporter. As a result, distracting pop-ups disappear and the bear gets to complete all of its goals. Then, it graduates and becomes an education super hero helping people around the world.'\n      )\n    ).toBeVisible();\n\n// Second part of the modal.\n    // Use `slowExpect` as we need to wait 20s for this part to show up.\n    await slowExpect(\n      donationModal.getByRole('heading', { name: 'Support us' })\n    ).toBeVisible();\n    await donationModal.getByRole('button', { name: 'Ask me later' }).click();\n    // Ensure that the close state has been registered before ending the test.\n    // The modal will show up on another page/test otherwise.\n    await expect(donationModal).toBeHidden();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 17894,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 12,
    "total_chunks": 14
  },
  {
    "id": "a7b95c2eccc023a2308e20aec8edfa33",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
    "source_type": "git_repo",
    "title": "donation-modal.spec",
    "content": "an education super hero helping people around the world.' ) ).toBeVisible(); // Second part of the modal. // Use `slowExpect` as we need to wait 20s for this part to show up. await slowExpect( donationModal.getByRole('heading', { name: 'Support us' }) ).toBeVisible(); await donationModal.getByRole('button', { name: 'Ask me later' }).click(); // Ensure that the close state has been registered before ending the test. // The modal will show up on another page/test otherwise. await expect(donationModal).toBeHidden(); }); });\n\ntest.describe('Donation modal appearance logic - Donor user', () => {\n  test.beforeAll(() => {\n    execSync(\n      'node ./tools/scripts/seed/seed-demo-user --certified-user --set-true isDonating'\n    );\n  });\n\ntest.afterAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n  });\n\ntest('should not appear', async ({\n    page,\n    browserName,\n    isMobile,\n    context\n  }) => {\n    await context.grantPermissions(['clipboard-read', 'clipboard-write']);\n\nawait completeChallenges({ page, browserName, isMobile, number: 3 });\n\nconst donationModal = page\n      .getByRole('dialog')\n      .filter({ hasText: 'Become a Supporter' });\n    await expect(donationModal).toBeHidden();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 17894,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\donation-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 303,
    "chunk_index": 13,
    "total_chunks": 14
  },
  {
    "id": "3834cb93f6ea1a68c1e5c7a855b4ec50",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\exam-show-non-qualified.spec.ts",
    "source_type": "git_repo",
    "title": "exam-show-non-qualified.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport intro from '../client/i18n/locales/english/intro.json';\nimport translations from '../client/i18n/locales/english/translations.json';\n\nconst examUrl =\n  '/learn/foundational-c-sharp-with-microsoft/foundational-c-sharp-with-microsoft-certification-exam/foundational-c-sharp-with-microsoft-certification-exam';\ntest.use({ storageState: { cookies: [], origins: [] } });\ntest.beforeEach(async ({ page }) => {\n  await page.goto(examUrl);\n});\n\ntest.describe('Exam Show E2E Test Suite for non-qualified user', () => {\n  test('The page renders with correct title', async ({ page }) => {\n    await expect(page).toHaveTitle(\n      'Foundational C# with Microsoft Certification Exam: Foundational C# with Microsoft Certification Exam | freeCodeCamp.org'\n    );\n  });\n\ntest('The page has correct header', async ({ page }) => {\n    const header = page.getByTestId('challenge-title');\n    await expect(header).toBeVisible();\n    await expect(header).toContainText(\n      intro['foundational-c-sharp-with-microsoft'].blocks[\n        'foundational-c-sharp-with-microsoft-certification-exam'\n      ].title\n    );\n  });\n\ntest('The page has an alert informing the user of their eligibility', async ({\n    page\n  }) => {\n    await expect(\n      page.getByText(translations.learn.exam.qualified)\n    ).not.toBeVisible();\n    await expect(\n      page.getByText(translations.learn.exam['not-qualified'])\n    ).toBeVisible();\n  });\n\ntest('Verifies the Correct Rendering of the Exam show non-qualified', async ({\n    page\n  }) => {\n    const startExam = page.getByRole('button', {\n      name: translations.buttons['click-start-exam']\n    });\n    await startExam.isVisible();\n    await startExam.isDisabled();\n    await expect(\n      page.getByText(\n        'Pass this exam to earn your Foundational C# with Microsoft Certification. Before starting the exam, please review the following guidelines:'\n      )\n    ).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1974,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\exam-show-non-qualified.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "521bd88208bae900a48bfd4b0af13fa7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\exam-results.spec.ts",
    "source_type": "git_repo",
    "title": "exam-results.spec",
    "content": "import * as fs from 'fs';\nimport { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport intro from '../client/i18n/locales/english/intro.json';\n\nconst examUrl =\n  '/learn/foundational-c-sharp-with-microsoft/foundational-c-sharp-with-microsoft-certification-exam/foundational-c-sharp-with-microsoft-certification-exam';\n\ntest.describe('Exam Results E2E Test Suite', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto(examUrl);\n    await page\n      .getByRole('button', {\n        name: translations.buttons['click-start-exam']\n      })\n      .click();\n    const QUESTION_COUNT = 5;\n    for (let i = 0; i < QUESTION_COUNT; i++) {\n      await page.getByRole('radio').first().check({ force: true });\n\nif (i < QUESTION_COUNT - 1) {\n        await page\n          .getByRole('button', {\n            name: translations.buttons['next-question']\n          })\n          .click();\n      } else {\n        await page\n          .getByRole('button', {\n            name: translations.buttons['finish-exam']\n          })\n          .click();\n        await page\n          .getByRole('button', { name: translations.learn.exam['finish-yes'] })\n          .click();\n      }\n    }\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3605,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\exam-results.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 302,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "b3328a0f4887e3f35331f63aa9639040",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\exam-results.spec.ts",
    "source_type": "git_repo",
    "title": "exam-results.spec",
    "content": "Suite', () => { test.beforeEach(async ({ page }) => { await page.goto(examUrl); await page .getByRole('button', { name: translations.buttons['click-start-exam'] }) .click(); const QUESTION_COUNT = 5; for (let i = 0; i < QUESTION_COUNT; i++) { await page.getByRole('radio').first().check({ force: true }); if (i < QUESTION_COUNT - 1) { await page .getByRole('button', { name: translations.buttons['next-question'] }) .click(); } else { await page .getByRole('button', { name: translations.buttons['finish-exam'] }) .click(); await page .getByRole('button', { name: translations.learn.exam['finish-yes'] }) .click(); } } });\n\ntest('Verifies the Correct Rendering of the Exam results', async ({\n    page\n  }) => {\n    await expect(\n      page\n        .locator('div.exam-results-wrapper')\n        .getByText(\n          intro['foundational-c-sharp-with-microsoft'].blocks[\n            'foundational-c-sharp-with-microsoft-certification-exam'\n          ].title\n        )\n    ).toBeVisible();\n    await expect(\n      page\n        .locator('div.exam-results-wrapper')\n        .getByText(translations.learn.exam['not-passed-message'])\n    ).toBeVisible();\n    await expect(\n      page\n        .locator('div.exam-results-wrapper')\n        .getByTestId('exam-results-question-results')\n    ).toBeVisible();\n    await expect(\n      page.locator('div.exam-results-wrapper').getByText(/\\d% correct/)\n    ).toBeVisible();\n    await expect(\n      page.locator('div.exam-results-wrapper').getByText(/Time: \\d:\\d/)\n    ).toBeVisible();\n    await expect(\n      page\n        .locator('div.exam-results-wrapper')\n        .getByTestId('download-exam-results')\n    ).toBeVisible();\n    await expect(\n      page\n        .locator('div.exam-results-wrapper')\n        .getByRole('button', { name: translations.buttons.exit })\n    ).toBeVisible();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3605,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\exam-results.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "1ecb5a64febf4c5bcfffce3bf073ccc3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\exam-results.spec.ts",
    "source_type": "git_repo",
    "title": "exam-results.spec",
    "content": "}) .click(); await page .getByRole('button', { name: translations.learn.exam['finish-yes'] }) .click(); } } }); test('Verifies the Correct Rendering of the Exam results', async ({ page }) => { await expect( page .locator('div.exam-results-wrapper') .getByText( intro['foundational-c-sharp-with-microsoft'].blocks[ 'foundational-c-sharp-with-microsoft-certification-exam' ].title ) ).toBeVisible(); await expect( page .locator('div.exam-results-wrapper') .getByText(translations.learn.exam['not-passed-message']) ).toBeVisible(); await expect( page .locator('div.exam-results-wrapper') .getByTestId('exam-results-question-results') ).toBeVisible(); await expect( page.locator('div.exam-results-wrapper').getByText(/\\d% correct/) ).toBeVisible(); await expect( page.locator('div.exam-results-wrapper').getByText(/Time: \\d:\\d/) ).toBeVisible(); await expect( page .locator('div.exam-results-wrapper') .getByTestId('download-exam-results') ).toBeVisible(); await expect( page .locator('div.exam-results-wrapper') .getByRole('button', { name: translations.buttons.exit }) ).toBeVisible(); });\n\ntest('Exam Results when the User clicks on Exit button', async ({ page }) => {\n    await page\n      .locator('div.exam-results-wrapper')\n      .getByRole('button', { name: translations.buttons.exit })\n      .click();\n    await expect(\n      page\n        .locator('div.exam-results-wrapper')\n        .getByText(\n          intro['foundational-c-sharp-with-microsoft'].blocks[\n            'foundational-c-sharp-with-microsoft-certification-exam'\n          ].title\n        )\n    ).not.toBeVisible();\n    await expect(page).not.toHaveURL(examUrl);\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3605,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\exam-results.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 387,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "b5698649826c810fe1d3dd837a9c6f82",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\exam-results.spec.ts",
    "source_type": "git_repo",
    "title": "exam-results.spec",
    "content": "await expect( page .locator('div.exam-results-wrapper') .getByText(translations.learn.exam['not-passed-message']) ).toBeVisible(); await expect( page .locator('div.exam-results-wrapper') .getByTestId('exam-results-question-results') ).toBeVisible(); await expect( page.locator('div.exam-results-wrapper').getByText(/\\d% correct/) ).toBeVisible(); await expect( page.locator('div.exam-results-wrapper').getByText(/Time: \\d:\\d/) ).toBeVisible(); await expect( page .locator('div.exam-results-wrapper') .getByTestId('download-exam-results') ).toBeVisible(); await expect( page .locator('div.exam-results-wrapper') .getByRole('button', { name: translations.buttons.exit }) ).toBeVisible(); }); test('Exam Results when the User clicks on Exit button', async ({ page }) => { await page .locator('div.exam-results-wrapper') .getByRole('button', { name: translations.buttons.exit }) .click(); await expect( page .locator('div.exam-results-wrapper') .getByText( intro['foundational-c-sharp-with-microsoft'].blocks[ 'foundational-c-sharp-with-microsoft-certification-exam' ].title ) ).not.toBeVisible(); await expect(page).not.toHaveURL(examUrl); });\n\ntest.describe('Exam Results E2E Test Suite', () => {\n    test('Exam Results When the User clicks on Download button', async ({\n      page\n    }) => {\n      const [download] = await Promise.all([\n        page.waitForEvent('download'),\n        page\n          .locator('div.exam-results-wrapper')\n          .getByTestId('download-exam-results')\n          .click()\n      ]);\n      const suggestedFileName = download.suggestedFilename();\n      await download.saveAs(suggestedFileName);\n      expect(fs.existsSync(suggestedFileName)).toBeTruthy();\n      await download.delete();\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3605,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\exam-results.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 391,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "c040d4629492c4f1cafce86cff5d2f1c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\exam-show-qualified.spec.ts",
    "source_type": "git_repo",
    "title": "exam-show-qualified.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport intro from '../client/i18n/locales/english/intro.json';\nimport translations from '../client/i18n/locales/english/translations.json';\n\nconst examUrl =\n  '/learn/foundational-c-sharp-with-microsoft/foundational-c-sharp-with-microsoft-certification-exam/foundational-c-sharp-with-microsoft-certification-exam';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(examUrl);\n});\n\ntest.describe('Exam Show E2E Test Suite for qualified user', () => {\n  test('The page renders with correct title', async ({ page }) => {\n    await expect(page).toHaveTitle(\n      'Foundational C# with Microsoft Certification Exam: Foundational C# with Microsoft Certification Exam | freeCodeCamp.org'\n    );\n  });\n\ntest('The page has correct header', async ({ page }) => {\n    const header = page.getByTestId('challenge-title');\n    await expect(header).toBeVisible();\n    await expect(header).toContainText(\n      intro['foundational-c-sharp-with-microsoft'].blocks[\n        'foundational-c-sharp-with-microsoft-certification-exam'\n      ].title\n    );\n  });\n\ntest('The page has qualified for exam alert ', async ({ page }) => {\n    await expect(\n      page.getByText(translations.learn.exam['not-qualified'])\n    ).not.toBeVisible();\n    await expect(\n      page.getByText(translations.learn.exam.qualified)\n    ).toBeVisible();\n  });\n\ntest('Verifies the Correct Rendering of the Exam show', async ({ page }) => {\n    const startExam = page.getByRole('button', {\n      name: translations.buttons['click-start-exam']\n    });\n    await startExam.isVisible();\n    await startExam.isEnabled();\n    await expect(\n      page.getByText(\n        'Pass this exam to earn your Foundational C# with Microsoft Certification. Before starting the exam, please review the following guidelines:'\n      )\n    ).toBeVisible();\n  });\n\ntest('Exam Show When the User clicks on Start exam button', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', {\n        name: translations.buttons['click-start-exam']\n      })\n      .click();\n    await expect(page).toHaveURL(examUrl);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2127,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\exam-show-qualified.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "55d4bb6fb133ef6766449e0319734af6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\exam-survey.spec.ts",
    "source_type": "git_repo",
    "title": "exam-survey.spec",
    "content": "import { execSync } from 'child_process';\nimport { test, expect } from '@playwright/test';\nconst url =\n  '/learn/foundational-c-sharp-with-microsoft/foundational-c-sharp-with-microsoft-certification-exam/foundational-c-sharp-with-microsoft-certification-exam';\ntest.describe('Exam Survey', () => {\n  test.beforeAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n    execSync('node tools/scripts/seed/seed-surveys.js delete-only');\n  });\n\ntest('Should show the survey alert and be able to complete the survey', async ({\n    page\n  }) => {\n    await page.goto(url);\n\nawait expect(page.getByTestId('c-sharp-survey-alert')).toBeVisible();\n    await page.getByRole('button', { name: 'Take the survey' }).click();\n    await expect(page.getByRole('dialog')).toBeVisible();\n    await expect(\n      page.getByRole('heading', {\n        name: 'Foundational C# with Microsoft Survey'\n      })\n    ).toBeVisible();\n\nawait page.getByText('Student developer').click();\n    await expect(\n      page.getByRole('button', { name: 'Submit the survey' })\n    ).toBeDisabled();\n\nawait page.getByText('Novice (no prior experience)').click();\n\nawait page.getByRole('button', { name: 'Submit the survey' }).click();\n\nawait expect(page.getByTestId('flash-message')).toContainText(\n      /Thank you. Your survey was submitted./\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1376,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\exam-survey.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 321,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0b09d53a5866ab4b92408a1546f0b10b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\exam-started-show.spec.ts",
    "source_type": "git_repo",
    "title": "exam-started-show.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport intro from '../client/i18n/locales/english/intro.json';\n\nconst examUrl =\n  '/learn/foundational-c-sharp-with-microsoft/foundational-c-sharp-with-microsoft-certification-exam/foundational-c-sharp-with-microsoft-certification-exam';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(examUrl);\n  await page\n    .getByRole('button', {\n      name: translations.buttons['click-start-exam']\n    })\n    .click();\n});\n\ntest.describe('Exam Show E2E Test Suite for started exam', () => {\n  test('The page renders with correct title', async ({ page }) => {\n    await expect(page).toHaveTitle(\n      'Foundational C# with Microsoft Certification Exam: Foundational C# with Microsoft Certification Exam | freeCodeCamp.org'\n    );\n  });\n\ntest('The page has correct navigation direct flow', async ({ page }) => {\n    const QUESTION_COUNT = 5;\n    const headerTitle = page.getByTestId('exam-show-title');\n    const prevQuestionBtn = page.getByRole('button', {\n      name: translations.buttons['previous-question']\n    });\n    const exitButton = page.getByRole('button', {\n      name: translations.buttons['exit-exam']\n    });\n    const nextBtn = page.getByRole('button', {\n      name: translations.buttons['next-question']\n    });\n    const finishExamBtn = page.getByRole('button', {\n      name: translations.buttons['finish-exam']\n    });\n    for (let i = 0; i < QUESTION_COUNT; i++) {\n      await expect(headerTitle).toBeVisible();\n      await expect(headerTitle).toContainText(\n        intro['foundational-c-sharp-with-microsoft'].blocks[\n          'foundational-c-sharp-with-microsoft-certification-exam'\n        ].title\n      );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3657,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\exam-started-show.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 406,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "42b2390b70aead8c988f5e608aef2d2f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\exam-started-show.spec.ts",
    "source_type": "git_repo",
    "title": "exam-started-show.spec",
    "content": "Exam | freeCodeCamp.org' ); }); test('The page has correct navigation direct flow', async ({ page }) => { const QUESTION_COUNT = 5; const headerTitle = page.getByTestId('exam-show-title'); const prevQuestionBtn = page.getByRole('button', { name: translations.buttons['previous-question'] }); const exitButton = page.getByRole('button', { name: translations.buttons['exit-exam'] }); const nextBtn = page.getByRole('button', { name: translations.buttons['next-question'] }); const finishExamBtn = page.getByRole('button', { name: translations.buttons['finish-exam'] }); for (let i = 0; i < QUESTION_COUNT; i++) { await expect(headerTitle).toBeVisible(); await expect(headerTitle).toContainText( intro['foundational-c-sharp-with-microsoft'].blocks[ 'foundational-c-sharp-with-microsoft-certification-exam' ].title );\n\nawait expect(page.getByTestId('exam-show-question-time')).toContainText(\n        translations.learn.exam.time.split(':')[0]\n      );\n      await expect(\n        page.getByText(`Question ${i + 1} of ${QUESTION_COUNT}`)\n      ).toBeVisible();\n      await expect(prevQuestionBtn).toBeVisible();\n      if (i != 0) {\n        await expect(prevQuestionBtn).toBeEnabled();\n      } else {\n        await expect(prevQuestionBtn).not.toBeEnabled();\n      }\n      await page.getByRole('radio').first().check({ force: true });\n      await expect(exitButton).toBeVisible();\n      await expect(exitButton).toBeEnabled();\n      if (i < QUESTION_COUNT - 1) {\n        await expect(finishExamBtn).not.toBeVisible();\n        await expect(nextBtn).toBeVisible();\n        await nextBtn.click();\n      } else {\n        await expect(finishExamBtn).toBeEnabled();\n        await expect(finishExamBtn).toBeVisible();\n        await expect(nextBtn).not.toBeVisible();\n      }\n    }\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3657,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\exam-started-show.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 402,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "884504358954893d36667229c178bef9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\exam-started-show.spec.ts",
    "source_type": "git_repo",
    "title": "exam-started-show.spec",
    "content": "0; i < QUESTION_COUNT; i++) { await expect(headerTitle).toBeVisible(); await expect(headerTitle).toContainText( intro['foundational-c-sharp-with-microsoft'].blocks[ 'foundational-c-sharp-with-microsoft-certification-exam' ].title ); await expect(page.getByTestId('exam-show-question-time')).toContainText( translations.learn.exam.time.split(':')[0] ); await expect( page.getByText(`Question ${i + 1} of ${QUESTION_COUNT}`) ).toBeVisible(); await expect(prevQuestionBtn).toBeVisible(); if (i != 0) { await expect(prevQuestionBtn).toBeEnabled(); } else { await expect(prevQuestionBtn).not.toBeEnabled(); } await page.getByRole('radio').first().check({ force: true }); await expect(exitButton).toBeVisible(); await expect(exitButton).toBeEnabled(); if (i < QUESTION_COUNT - 1) { await expect(finishExamBtn).not.toBeVisible(); await expect(nextBtn).toBeVisible(); await nextBtn.click(); } else { await expect(finishExamBtn).toBeEnabled(); await expect(finishExamBtn).toBeVisible(); await expect(nextBtn).not.toBeVisible(); } } });\n\ntest('The page has correct navigation back flow', async ({ page }) => {\n    const headerTitle = page.getByTestId('exam-show-title');\n    await expect(headerTitle).toBeVisible();\n    await expect(headerTitle).toContainText(\n      intro['foundational-c-sharp-with-microsoft'].blocks[\n        'foundational-c-sharp-with-microsoft-certification-exam'\n      ].title\n    );\n    await expect(page.getByTestId('exam-show-question-time')).toContainText(\n      translations.learn.exam.time.split(':')[0]\n    );\n\nawait page.getByRole('radio').first().check({ force: true });\n    await page\n      .getByRole('button', { name: translations.buttons['next-question'] })\n      .click();\n    await expect(page.getByText('Question 2 of 5')).toBeVisible();\n    await page\n      .getByRole('button', { name: translations.buttons['previous-question'] })\n      .click();\n    await expect(page.getByText('Question 1 of 5')).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3657,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\exam-started-show.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "98d923358bd44e98478f384353deaa18",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\exam-token.spec.ts",
    "source_type": "git_repo",
    "title": "exam-token.spec",
    "content": "// TO ENABLE THESE TESTS GROWTHBOOK HAS TO BE SET IN THE ENVIRONMENT VARIABLES`\n// UNCOMMENT WHEN NEW API IS READY.\n\n// import { test, expect } from '@playwright/test';\n\n// test.beforeEach(async ({ page }) => {\n//   await page.goto('/settings');\n// });\n\n// test.describe('Exam Token Widget', () => {\n//   test('should tell you to not share the token with anyone', async ({\n//     page\n//   }) => {\n//     await expect(\n//       page.getByText(\n//         'Your exam token is a secret key that allows you to access the exam. Do not share this token with anyone'\n//       )\n//     ).toBeVisible();\n//     await expect(\n//       page.getByText(\n//         'If you generate a new token, your old token will be invalidated.'\n//       )\n//     ).toBeVisible();\n\n//     await expect(\n//       page.getByRole('button', { name: 'Generate Exam Token' })\n//     ).toBeVisible();\n//   });\n\n//   test('should be able to generate a token', async ({ page }) => {\n//     await page.getByRole('button', { name: 'Generate Exam Token' }).click();\n//     await expect(page.getByText('Your Exam Token is:')).toBeVisible();\n\n//     await expect(page.getByRole('button', { name: 'Copy' })).toBeVisible();\n\n//     await expect(\n//       page.getByRole('button', { name: 'Close' }).nth(1)\n//     ).toBeVisible();\n//   });\n// });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1304,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\exam-token.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 323,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6b638d79bca84183861192fb978baa2c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\exit-exam-modal.spec.ts",
    "source_type": "git_repo",
    "title": "exit-exam-modal.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\nconst examUrl =\n  '/learn/foundational-c-sharp-with-microsoft/foundational-c-sharp-with-microsoft-certification-exam/foundational-c-sharp-with-microsoft-certification-exam';\nconst cancelExamUrl =\n  '/learn/foundational-c-sharp-with-microsoft/#foundational-c-sharp-with-microsoft-certification-exam';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(examUrl);\n  await page\n    .getByRole('button', {\n      name: translations.buttons['click-start-exam']\n    })\n    .click();\n\nawait page\n    .getByRole('button', {\n      name: translations.buttons['exit-exam']\n    })\n    .click();\n});\n\ntest.describe('Exit exam Modal E2E Test Suite', () => {\n  test('Verifies the Correct Rendering of the Exit exam Modal', async ({\n    page\n  }) => {\n    await expect(\n      page.getByRole('dialog', { name: translations.learn.exam['exit-header'] })\n    ).toBeVisible();\n\nawait expect(page.getByText(translations.learn.exam.exit)).toBeVisible();\n\nawait expect(\n      page.getByRole('button', {\n        name: translations.learn.exam['exit-yes']\n      })\n    ).toBeVisible();\n\nawait expect(\n      page.getByRole('button', {\n        name: translations.buttons.close\n      })\n    ).toBeVisible();\n\nawait expect(\n      page.getByRole('button', {\n        name: translations.learn.exam['exit-no']\n      })\n    ).toBeVisible();\n  });\n\ntest('Closes the Exit exam Modal When the User clicks on exit-no button', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', { name: translations.learn.exam['exit-no'] })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', { name: translations.learn.exam['exit-header'] })\n    ).not.toBeVisible();\n\nawait expect(page).toHaveURL(examUrl);\n  });\n\ntest('Closes the Modal when the User clicks on exit-yes button', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', { name: translations.learn.exam['exit-yes'] })\n      .click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2604,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\exit-exam-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1fce1a631f471cc1e3076d537d80884c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\exit-exam-modal.spec.ts",
    "source_type": "git_repo",
    "title": "exit-exam-modal.spec",
    "content": "page.getByRole('button', { name: translations.buttons.close }) ).toBeVisible(); await expect( page.getByRole('button', { name: translations.learn.exam['exit-no'] }) ).toBeVisible(); }); test('Closes the Exit exam Modal When the User clicks on exit-no button', async ({ page }) => { await page .getByRole('button', { name: translations.learn.exam['exit-no'] }) .click(); await expect( page.getByRole('dialog', { name: translations.learn.exam['exit-header'] }) ).not.toBeVisible(); await expect(page).toHaveURL(examUrl); }); test('Closes the Modal when the User clicks on exit-yes button', async ({ page }) => { await page .getByRole('button', { name: translations.learn.exam['exit-yes'] }) .click();\n\nawait expect(\n      page.getByRole('dialog', { name: translations.learn.exam['exit-header'] })\n    ).not.toBeVisible();\n\nawait expect(page).toHaveURL(cancelExamUrl);\n  });\n\ntest('Closes the Modal when the User clicks on X button', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', {\n        name: translations.buttons.close\n      })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', { name: translations.learn.exam['exit-header'] })\n    ).not.toBeVisible();\n\nawait expect(page).toHaveURL(examUrl);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2604,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\exit-exam-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 298,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "18654a0e60240c8558c521c582ded34e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\failed-updates.spec.ts",
    "source_type": "git_repo",
    "title": "failed-updates.spec",
    "content": "import { execSync } from 'child_process';\nimport { test, expect } from '@playwright/test';\n\nconst failedUpdates = [\n  {\n    endpoint: '/modern-challenge-completed',\n    payload: { id: '5dc1798ff86c76b9248c6eb3', challengeType: 0 },\n    id: '4bd1d704-cfaa-44f7-92a3-bc0d857dbaa6'\n  },\n  {\n    endpoint: '/modern-challenge-completed',\n    payload: { id: '5dc17d3bf86c76b9248c6eb4', challengeType: 0 },\n    id: 'ea289e2f-a5d2-45e0-b795-0f9f4afc5124'\n  }\n];\nconst storeKey = 'fcc-failed-updates';\n\nfunction getCompletedIds(completedChallenges: { id: string }[]): string[] {\n  return completedChallenges.map(challenge => challenge.id);\n}\ntest.use({ storageState: 'playwright/.auth/development-user.json' });\n\ntest.beforeAll(() => {\n  execSync('node ./tools/scripts/seed/seed-demo-user');\n});\n\ntest.afterAll(() => {\n  execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n});\n\ntest.describe('failed update flushing', () => {\n  test('should resubmit failed updates to the api and clear the store', async ({\n    page,\n    request\n  }) => {\n    // Initially, the user has no completed challenges.\n    const userRes = await request.get(\n      new URL('/user/get-session-user', process.env.API_LOCATION).toString()\n    );\n    const completedChallenges = (await userRes.json()).user.developmentuser\n      .completedChallenges;\n    expect(completedChallenges).toEqual([]);\n\n// It's necessary to wait until the page has loaded before setting the\n    // localStorage. Otherwise, evaluate fails with a permissions error (the\n    // store doesn't exist yet).\n    await page.goto('/');\n    await page.evaluate(\n      ([failedUpdates, storeKey]) => {\n        localStorage.setItem(storeKey, JSON.stringify(failedUpdates));\n      },\n      [failedUpdates, storeKey] as const\n    );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3091,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\failed-updates.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "40bd8f3e7033741e298efe3e60fc0ede",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\failed-updates.spec.ts",
    "source_type": "git_repo",
    "title": "failed-updates.spec",
    "content": "store', async ({ page, request }) => { // Initially, the user has no completed challenges. const userRes = await request.get( new URL('/user/get-session-user', process.env.API_LOCATION).toString() ); const completedChallenges = (await userRes.json()).user.developmentuser .completedChallenges; expect(completedChallenges).toEqual([]); // It's necessary to wait until the page has loaded before setting the // localStorage. Otherwise, evaluate fails with a permissions error (the // store doesn't exist yet). await page.goto('/'); await page.evaluate( ([failedUpdates, storeKey]) => { localStorage.setItem(storeKey, JSON.stringify(failedUpdates)); }, [failedUpdates, storeKey] as const );\n\n// The update epic sends two requests and this lets us wait for both.\n    const submitRes = page\n      .waitForResponse(\n        new URL(\n          '/modern-challenge-completed',\n          process.env.API_LOCATION\n        ).toString()\n      )\n\n.then(() =>\n        page.waitForResponse(\n          new URL(\n            '/modern-challenge-completed',\n            process.env.API_LOCATION\n          ).toString()\n        )\n      );\n\nawait page.reload();\n    await submitRes;\n\nconst updatedUserRes = await request.get(\n      new URL('/user/get-session-user', process.env.API_LOCATION).toString()\n    );\n\n// Now the user should have both completed challenges.\n    const updatedCompletedChallenges = (await updatedUserRes.json()).user\n      .developmentuser.completedChallenges;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    const completedIds = getCompletedIds(updatedCompletedChallenges);\n\nfor (const { payload } of failedUpdates) {\n      expect(completedIds).toContain(payload.id);\n    }\n    const storedFailedUpdates = await page.evaluate(storeKey => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return JSON.parse(localStorage.getItem(storeKey) ?? '');\n    }, storeKey);\n    expect(storedFailedUpdates).toEqual([]);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3091,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\failed-updates.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 408,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "80128a7cf3883f04edcf5cf36d9eafea",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\fill-in-the-blanks.spec.ts",
    "source_type": "git_repo",
    "title": "fill-in-the-blanks.spec",
    "content": "import { test, expect } from '@playwright/test';\n\ntest.describe('Fill in the blanks challenge', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto(\n      '/learn/a2-english-for-developers/learn-greetings-in-your-first-day-at-the-office/task-47'\n    );\n  });\n\ntest('should display feedback if there is an incorrect answer', async ({\n    page\n  }) => {\n    const blanks = page.getByRole('textbox', { name: 'blank' });\n\nawait blanks.first().fill('this'); // Answer the first blank correctly\n    await blanks.last().fill('bar'); // Answer the second blank incorrectly\n    await page.getByRole('button', { name: 'Check your answer' }).click();\n\nawait expect(\n      page.getByText(\"Sorry, that's not the right answer. Give it another try?\")\n    ).toBeVisible();\n\n// Once a blank is answered correctly, it is no longer rendered as an input field\n    await expect(blanks).toHaveCount(1);\n\nawait expect(blanks.last()).toHaveAttribute('aria-invalid', 'true');\n  });\n\ntest('should not display feedback if all blanks are answered correctly', async ({\n    page\n  }) => {\n    const blanks = page.getByRole('textbox', { name: 'blank' });\n\nawait blanks.first().fill('this');\n    await blanks.last().fill('those');\n    await page.getByRole('button', { name: 'Check your answer' }).click();\n\n// Close the completion modal\n    await page\n      .getByRole('dialog')\n      .getByRole('button', { name: 'Close' })\n      .click();\n\nawait expect(\n      page.getByText(\"Sorry, that's not the right answer. Give it another try?\")\n    ).toBeHidden();\n\n// There aren't any blanks as all the inputs are rendered as text\n    await expect(blanks).toBeHidden();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1693,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\fill-in-the-blanks.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 395,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4ec07aab751570b928f19b46acaa8228",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\flash.spec.ts",
    "source_type": "git_repo",
    "title": "flash.spec",
    "content": "import { test, expect, type Page } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto('/settings');\n});\n\nconst checkFlashMessageVisibility = async (page: Page, translation: string) => {\n  const flashMessage = page.getByText(translation);\n  await expect(flashMessage).toBeVisible();\n  const closeButton = page.getByRole('button', { name: 'close' });\n  await closeButton.click();\n  await expect(flashMessage).not.toBeVisible();\n};\n\ntest.describe('Flash Message component E2E test', () => {\n  test('Flash Message Visibility for Night Mode Toggle', async ({ page }) => {\n    await page\n      .getByRole('button', { name: translations.buttons.menu, exact: true })\n      .click();\n    await page\n      .getByRole('button', {\n        name: translations.settings.labels['night-mode'],\n        exact: true\n      })\n      .click();\n    await checkFlashMessageVisibility(\n      page,\n      translations.flash['updated-themes']\n    );\n  });\n\ntest('Flash Message Visibility for Sound Mode Toggle', async ({ page }) => {\n    await page\n      .getByLabel(translations.settings.labels['sound-mode'])\n      .getByRole('button', { name: translations.buttons.on })\n      .click();\n    await checkFlashMessageVisibility(\n      page,\n      translations.flash['updated-sound']\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1382,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\flash.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 309,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a3dc73e68a887e910ae9d11e398d32b6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\finish-exam-modal.spec.ts",
    "source_type": "git_repo",
    "title": "finish-exam-modal.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\nconst examUrl =\n  '/learn/foundational-c-sharp-with-microsoft/foundational-c-sharp-with-microsoft-certification-exam/foundational-c-sharp-with-microsoft-certification-exam';\nconst QUESTION_COUNT = 5;\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(examUrl);\n  await page\n    .getByRole('button', {\n      name: translations.buttons['click-start-exam']\n    })\n    .click();\n  for (let i = 0; i < QUESTION_COUNT; i++) {\n    await page.getByRole('radio').first().check({ force: true });\n\nif (i < QUESTION_COUNT - 1) {\n      await page\n        .getByRole('button', {\n          name: translations.buttons['next-question']\n        })\n        .click();\n    } else {\n      await page\n        .getByRole('button', {\n          name: translations.buttons['finish-exam']\n        })\n        .click();\n    }\n  }\n});\n\ntest.describe('Finish Exit exam Modal E2E Test Suite', () => {\n  test('Verifies the Correct Rendering of the Finish Exit exam Modal', async ({\n    page\n  }) => {\n    await expect(\n      page.getByRole('dialog', {\n        name: translations.learn.exam['finish-header']\n      })\n    ).toBeVisible();\n\nawait expect(\n      page.getByRole('button', {\n        name: translations.buttons.close\n      })\n    ).toBeVisible();\n\nawait expect(page.getByText(translations.learn.exam.finish)).toBeVisible();\n\nawait expect(\n      page.getByRole('button', {\n        name: translations.learn.exam['finish-yes']\n      })\n    ).toBeVisible();\n\nawait expect(\n      page.getByRole('button', {\n        name: translations.learn.exam['finish-no']\n      })\n    ).toBeVisible();\n  });\n\ntest('Closes the Finish Exit exam Modal When the User clicks on exit-no button', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', { name: translations.learn.exam['exit-no'] })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', {\n        name: translations.learn.exam['finish-header']\n      })\n    ).not.toBeVisible();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2768,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\finish-exam-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6602cdaa0ceb98faf931608550ebdf27",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\finish-exam-modal.spec.ts",
    "source_type": "git_repo",
    "title": "finish-exam-modal.spec",
    "content": "({ page }) => { await expect( page.getByRole('dialog', { name: translations.learn.exam['finish-header'] }) ).toBeVisible(); await expect( page.getByRole('button', { name: translations.buttons.close }) ).toBeVisible(); await expect(page.getByText(translations.learn.exam.finish)).toBeVisible(); await expect( page.getByRole('button', { name: translations.learn.exam['finish-yes'] }) ).toBeVisible(); await expect( page.getByRole('button', { name: translations.learn.exam['finish-no'] }) ).toBeVisible(); }); test('Closes the Finish Exit exam Modal When the User clicks on exit-no button', async ({ page }) => { await page .getByRole('button', { name: translations.learn.exam['exit-no'] }) .click(); await expect( page.getByRole('dialog', { name: translations.learn.exam['finish-header'] }) ).not.toBeVisible(); });\n\ntest('Closes the Modal when the User clicks on finish-yes button', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', { name: translations.learn.exam['finish-yes'] })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', {\n        name: translations.learn.exam['finish-header']\n      })\n    ).not.toBeVisible();\n  });\n\ntest('Closes the Modal when the User clicks on X button', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', { name: translations.buttons.close })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', {\n        name: translations.learn.exam['finish-header']\n      })\n    ).not.toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2768,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\finish-exam-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7dca322d71c625fef17432c937fc4ea2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\footer.spec.ts",
    "source_type": "git_repo",
    "title": "footer.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport links from '../client/i18n/locales/english/links.json';\n\nconst BOTTOM_LINKS = [\n  {\n    title: translations.footer.links.about,\n    href: links.footer['about-url']\n  },\n  {\n    title: translations.footer.links.alumni,\n    href: 'https://www.linkedin.com/school/free-code-camp/people/'\n  },\n  {\n    title: translations.footer.links['open-source'],\n    href: 'https://github.com/freeCodeCamp/'\n  },\n  {\n    title: translations.footer.links.shop,\n    href: links.footer['shop-url']\n  },\n  {\n    title: translations.footer.links.support,\n    href: links.footer['support-url']\n  },\n  {\n    title: translations.footer.links.sponsors,\n    href: links.footer['sponsors-url']\n  },\n  {\n    title: translations.footer.links.honesty,\n    href: links.footer['honesty-url']\n  },\n  {\n    title: translations.footer.links.coc,\n    href: links.footer['coc-url']\n  },\n  {\n    title: translations.footer.links.privacy,\n    href: links.footer['privacy-url']\n  },\n  {\n    title: translations.footer.links.tos,\n    href: links.footer['tos-url']\n  },\n  {\n    title: translations.footer.links.copyright,\n    href: links.footer['copyright-url']\n  }\n];\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto('/');\n});\n\ntest.describe('Footer component left section', () => {\n  test('should render the content properly', async ({ page }) => {\n    await expect(\n      page.getByText(translations.footer['tax-exempt-status'])\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.footer['mission-statement'])\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.footer['donation-initiatives'])\n    ).toBeVisible();\n    await expect(\n      page.getByRole('link', { name: 'make a tax-deductible donation here' })\n    ).toHaveAttribute('href', '/donate');\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4485,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\footer.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "1895c8ebc8f8d54b9a0dd1e275254972",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\footer.spec.ts",
    "source_type": "git_repo",
    "title": "footer.spec",
    "content": "href: links.footer['coc-url'] }, { title: translations.footer.links.privacy, href: links.footer['privacy-url'] }, { title: translations.footer.links.tos, href: links.footer['tos-url'] }, { title: translations.footer.links.copyright, href: links.footer['copyright-url'] } ]; test.beforeEach(async ({ page }) => { await page.goto('/'); }); test.describe('Footer component left section', () => { test('should render the content properly', async ({ page }) => { await expect( page.getByText(translations.footer['tax-exempt-status']) ).toBeVisible(); await expect( page.getByText(translations.footer['mission-statement']) ).toBeVisible(); await expect( page.getByText(translations.footer['donation-initiatives']) ).toBeVisible(); await expect( page.getByRole('link', { name: 'make a tax-deductible donation here' }) ).toHaveAttribute('href', '/donate'); }); });\n\ntest.describe('Footer Trending Guides section', () => {\n  test('should render the section with a header and 30 articles', async ({\n    page\n  }) => {\n    await expect(\n      page.getByRole('heading', {\n        name: translations.footer['trending-guides']\n      })\n    ).toBeVisible();\n\nconst articles = await page\n      .getByRole('list', { name: translations.footer['trending-guides'] })\n      .getByRole('link')\n      .all();\n\nexpect(articles).toHaveLength(30);\n\nfor (const article of articles) {\n      await expect(article).toBeVisible();\n    }\n  });\n});\n\ntest.describe('Footer mobile app section', () => {\n  test('should render the download links correctly', async ({ page }) => {\n    await expect(\n      page.getByRole('heading', {\n        level: 2,\n        name: translations.footer['mobile-app']\n      })\n    ).toBeVisible();\n\nconst downloadLinks = await page\n      .getByRole('list', { name: translations.footer['mobile-app'] })\n      .getByRole('listitem')\n      .all();\n\nexpect(downloadLinks).toHaveLength(2);\n\nconst appleStoreLink = downloadLinks[0];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4485,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\footer.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "3574187ba19177c4f97769e201762d1d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\footer.spec.ts",
    "source_type": "git_repo",
    "title": "footer.spec",
    "content": "page.getByRole('heading', { name: translations.footer['trending-guides'] }) ).toBeVisible(); const articles = await page .getByRole('list', { name: translations.footer['trending-guides'] }) .getByRole('link') .all(); expect(articles).toHaveLength(30); for (const article of articles) { await expect(article).toBeVisible(); } }); }); test.describe('Footer mobile app section', () => { test('should render the download links correctly', async ({ page }) => { await expect( page.getByRole('heading', { level: 2, name: translations.footer['mobile-app'] }) ).toBeVisible(); const downloadLinks = await page .getByRole('list', { name: translations.footer['mobile-app'] }) .getByRole('listitem') .all(); expect(downloadLinks).toHaveLength(2); const appleStoreLink = downloadLinks[0];\n\nawait expect(\n      appleStoreLink.getByRole('img', { name: 'Download on the App Store' })\n    ).toBeVisible();\n    await expect(\n      appleStoreLink.getByRole('link', { name: 'Download on the App Store' })\n    ).toBeVisible();\n    await expect(\n      appleStoreLink.getByRole('link', { name: 'Download on the App Store' })\n    ).toHaveAttribute(\n      'href',\n      'https://apps.apple.com/us/app/freecodecamp/id6446908151?itsct=apps_box_link&itscg=30200'\n    );\n\nconst googlePlayLink = downloadLinks[1];\n\nawait expect(\n      googlePlayLink.getByRole('img', { name: 'Get it on Google Play' })\n    ).toBeVisible();\n    await expect(\n      googlePlayLink.getByRole('link', { name: 'Get it on Google Play' })\n    ).toBeVisible();\n    await expect(\n      googlePlayLink.getByRole('link', { name: 'Get it on Google Play' })\n    ).toHaveAttribute(\n      'href',\n      'https://play.google.com/store/apps/details?id=org.freecodecamp'\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4485,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\footer.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "2a5fc8734b047de5cb6280170eb32cfd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\footer.spec.ts",
    "source_type": "git_repo",
    "title": "footer.spec",
    "content": "App Store' }) ).toBeVisible(); await expect( appleStoreLink.getByRole('link', { name: 'Download on the App Store' }) ).toBeVisible(); await expect( appleStoreLink.getByRole('link', { name: 'Download on the App Store' }) ).toHaveAttribute( 'href', 'https://apps.apple.com/us/app/freecodecamp/id6446908151?itsct=apps_box_link&itscg=30200' ); const googlePlayLink = downloadLinks[1]; await expect( googlePlayLink.getByRole('img', { name: 'Get it on Google Play' }) ).toBeVisible(); await expect( googlePlayLink.getByRole('link', { name: 'Get it on Google Play' }) ).toBeVisible(); await expect( googlePlayLink.getByRole('link', { name: 'Get it on Google Play' }) ).toHaveAttribute( 'href', 'https://play.google.com/store/apps/details?id=org.freecodecamp' ); }); });\n\ntest.describe('Footer bottom section', () => {\n  test('should display the content correctly', async ({ page, isMobile }) => {\n    if (isMobile) {\n      await expect(\n        page.getByRole('heading', {\n          name: translations.footer['our-nonprofit']\n        })\n      ).toBeVisible();\n    }\n\nfor (const item of BOTTOM_LINKS) {\n      const link = page.getByRole('link', { name: item.title, exact: true });\n\nawait expect(link).toBeVisible();\n      await expect(link).toHaveAttribute('href', item.href);\n    }\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4485,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\footer.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 328,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "fc2e1de038385ed4ee0e9f40a6589b8c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\form-helper.spec.ts",
    "source_type": "git_repo",
    "title": "form-helper.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.describe('Test form with only solution link', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto(\n      'learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine'\n    );\n  });\n\ntest('The form is visible and has only solution link input', async ({\n    page\n  }) => {\n    // The solution form should be present and visible\n    const solutionForm = page.getByTestId('form-helper-form');\n    await expect(solutionForm).toBeVisible();\n\n// The form submit button should be disabled as the form is not filled\n    const solutionFormButton = solutionForm.getByRole('button', {\n      name: `${translations.learn['i-completed']}`\n    });\n    await expect(solutionFormButton).toBeVisible();\n    await expect(solutionFormButton).toBeDisabled();\n\nconst solutionLinkInputLabel = solutionForm.getByTestId(\n      'solution-control-label'\n    );\n    await expect(solutionLinkInputLabel).toBeVisible();\n    await expect(solutionLinkInputLabel).toHaveText(\n      translations.learn['solution-link']\n    );\n\nconst solutionLinkInput = solutionForm.getByTestId('solution-form-control');\n    await expect(solutionLinkInput).toBeVisible();\n\nconst githubLinkInputLabel = solutionForm.getByTestId(\n      'githubLink-control-label'\n    );\n    await expect(githubLinkInputLabel).not.toBeVisible();\n\n// The form submit button should be enabled as the form is now filled\n    await solutionLinkInput.fill('test-input');\n    await expect(solutionFormButton).toBeEnabled();\n  });\n});\n\ntest.describe('Test form with solution link and github link', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto(\n      'learn/quality-assurance/quality-assurance-projects/personal-library'\n    );\n  });\n\ntest('The form is visible and has solution link and github link input', async ({\n    page\n  }) => {\n    // The solution form should be present and visible\n    const solutionForm = page.getByTestId('form-helper-form');\n    await expect(solutionForm).toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3701,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\form-helper.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 446,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "a08d1e4253be461ca2729a7498659f60",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\form-helper.spec.ts",
    "source_type": "git_repo",
    "title": "form-helper.spec",
    "content": "expect(githubLinkInputLabel).not.toBeVisible(); // The form submit button should be enabled as the form is now filled await solutionLinkInput.fill('test-input'); await expect(solutionFormButton).toBeEnabled(); }); }); test.describe('Test form with solution link and github link', () => { test.beforeEach(async ({ page }) => { await page.goto( 'learn/quality-assurance/quality-assurance-projects/personal-library' ); }); test('The form is visible and has solution link and github link input', async ({ page }) => { // The solution form should be present and visible const solutionForm = page.getByTestId('form-helper-form'); await expect(solutionForm).toBeVisible();\n\n// The form submit button should be disabled as the form is not filled\n    const solutionFormButton = solutionForm.getByRole('button', {\n      name: `${translations.learn['i-completed']}`\n    });\n    await expect(solutionFormButton).toBeVisible();\n    await expect(solutionFormButton).toBeDisabled();\n\nconst solutionLinkInputLabel = solutionForm.getByTestId(\n      'solution-control-label'\n    );\n    await expect(solutionLinkInputLabel).toBeVisible();\n    await expect(solutionLinkInputLabel).toHaveText(\n      translations.learn['solution-link']\n    );\n\nconst solutionLinkInput = solutionForm.getByTestId('solution-form-control');\n    await expect(solutionLinkInput).toBeVisible();\n\nconst githubLinkInputLabel = solutionForm.getByTestId(\n      'githubLink-control-label'\n    );\n    await expect(githubLinkInputLabel).toBeVisible();\n    await expect(githubLinkInputLabel).toHaveText(\n      translations.learn['source-code-link']\n    );\n\nconst githubLinkInput = solutionForm.getByTestId('githubLink-form-control');\n    await expect(githubLinkInput).toBeVisible();\n\n// The form submit button should be enabled as the form is now filled\n    await solutionLinkInput.fill('test-input');\n    await expect(solutionFormButton).toBeEnabled();\n\n// The form submit button should be enabled as the GitHub link is now filled\n    await solutionLinkInput.fill('');\n    await expect(solutionFormButton).toBeDisabled();\n    await githubLinkInput.fill('test-input');\n    await expect(solutionFormButton).toBeEnabled();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3701,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\form-helper.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "480737695f17cb8d47cd13bcef9be089",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\four-oh-four.spec.ts",
    "source_type": "git_repo",
    "title": "four-oh-four.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto('/404');\n});\n\ntest.describe('FourOhFour component', () => {\n  test('should display the content correctly', async ({ page }) => {\n    const image = page.getByTestId('not-found-image');\n    await expect(image).toBeVisible();\n    await expect(image).toHaveAttribute(\n      'alt',\n      translations['404']['not-found']\n    );\n\nconst heading = page.getByTestId('not-found-heading');\n    await expect(heading).toBeVisible();\n    await expect(heading).toContainText(translations['404']['page-not-found']);\n\nconst heresQuoteParagraph = page.getByTestId('heres-quote-paragraph');\n    await expect(heresQuoteParagraph).toBeVisible();\n    await expect(heresQuoteParagraph).toContainText(\n      translations['404']['heres-a-quote']\n    );\n\nawait expect(page.getByTestId('quote-wrapper')).toBeVisible();\n\nconst curriculumLinkBtn = page.getByTestId('view-curriculum-btn');\n    await expect(curriculumLinkBtn).toBeVisible();\n    await expect(curriculumLinkBtn).toHaveAttribute('href', '/learn');\n    await expect(curriculumLinkBtn).toContainText(\n      translations.buttons['view-curriculum']\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1295,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\four-oh-four.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 278,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "2e640c7e71995a61cfc05bad7080e532",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\global-setup.ts",
    "source_type": "git_repo",
    "title": "global-setup",
    "content": "import { execSync } from 'child_process';\n\nimport { test as setup } from '@playwright/test';\n\nsetup.describe('certifieduser', () => {\n  setup.use({ storageState: { cookies: [], origins: [] } });\n\nsetup.beforeAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user ');\n  });\n\nsetup('can sign in', async ({ request }) => {\n    await request.get(process.env.API_LOCATION + '/signin');\n    await request.storageState({\n      path: 'playwright/.auth/certified-user.json'\n    });\n  });\n});\n\nsetup.describe('developmentuser', () => {\n  // We need to make sure the development user does not have any cookies from the certified user.\n  // As the certified user now has the default storage state.\n  setup.use({ storageState: { cookies: [], origins: [] } });\n\n// We can only sign in as a single user (one with email: 'foo@bar.com'), so\n  // changing users means changing the record with that email in the database.\n  setup.beforeAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user');\n  });\n\nsetup.afterAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n  });\n\nsetup('can sign in', async ({ request }) => {\n    await request.get(process.env.API_LOCATION + '/signin');\n    await request.storageState({\n      path: 'playwright/.auth/development-user.json'\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1349,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\global-setup.ts",
      "source_type": "git_repo"
    },
    "token_count": 319,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "03012f2b22370cb8aacbe6b5d41a60e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\help-button.spec.ts",
    "source_type": "git_repo",
    "title": "help-button.spec",
    "content": "import { test, expect } from '@playwright/test';\n\ntest.describe('help-button tests for a page with three links (hint, help and video)', () => {\n  test('should render the button, menu and the three links when video is available', async ({\n    page\n  }) => {\n    // visit the page with the video link\n    await page.goto(\n      '/learn/responsive-web-design/basic-html-and-html5/say-hello-to-html-elements'\n    );\n    //The button is visible\n    const helpButton = page.getByTestId('get-help-dropdown');\n    await expect(helpButton).toBeVisible();\n    //The button is clickable\n    await helpButton.click();\n    //The menu items are visible\n    await expect(page.getByTestId('get-hint')).toBeVisible();\n    await expect(page.getByTestId('ask-for-help')).toBeVisible();\n    await expect(page.getByTestId('watch-a-video')).toBeVisible();\n  });\n});\n\ntest.describe('help-button tests for a page with two links when video is not available', () => {\n  test('should render the button, menu and the two links when video is not available', async ({\n    page\n  }) => {\n    // visit the page without the video link\n    await page.goto(\n      '/learn/front-end-development-libraries/bootstrap/apply-the-default-bootstrap-button-style'\n    );\n    //The button is visible\n    const helpButton = page.getByTestId('get-help-dropdown');\n    await expect(helpButton).toBeVisible();\n    //The button is clickable\n    await helpButton.click();\n    //The menu items are visible\n    await expect(page.getByTestId('get-hint')).toBeVisible();\n    await expect(page.getByTestId('ask-for-help')).toBeVisible();\n    //The video link is hidden\n    await expect(page.getByTestId('watch-a-video')).toBeHidden();\n  });\n});\n\ntest.describe('help-button tests for a page with a reset and help button', () => {\n  test('should not be present before the user checks their code three times', async ({\n    page\n  }) => {\n    await page.goto(\n      'learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-8'\n    );\n    await expect(page.getByRole('button', { name: 'Help' })).toBeHidden();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2713,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\help-button.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 475,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "6195dd44f1032f9768b77426926e17f1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\help-button.spec.ts",
    "source_type": "git_repo",
    "title": "help-button.spec",
    "content": "button is visible const helpButton = page.getByTestId('get-help-dropdown'); await expect(helpButton).toBeVisible(); //The button is clickable await helpButton.click(); //The menu items are visible await expect(page.getByTestId('get-hint')).toBeVisible(); await expect(page.getByTestId('ask-for-help')).toBeVisible(); //The video link is hidden await expect(page.getByTestId('watch-a-video')).toBeHidden(); }); }); test.describe('help-button tests for a page with a reset and help button', () => { test('should not be present before the user checks their code three times', async ({ page }) => { await page.goto( 'learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-8' ); await expect(page.getByRole('button', { name: 'Help' })).toBeHidden(); });\n\ntest('should be present after the user checks their code three times', async ({\n    page\n  }) => {\n    await page.goto(\n      'learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3'\n    );\n    const checkButton = page.getByTestId('lowerJaw-check-button');\n    await checkButton.click();\n    await checkButton.click();\n    await checkButton.click();\n    const helpButton = page.getByRole('button', { name: 'Help' });\n    await expect(helpButton).toBeVisible();\n    const helpIconGroup = helpButton.getByRole('group', {\n      includeHidden: false\n    });\n    await expect(helpIconGroup).toBeHidden();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2713,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\help-button.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 322,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "7f02c3e911620308092cb917e5a16735",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\header.spec.ts",
    "source_type": "git_repo",
    "title": "header.spec",
    "content": "import { execSync } from 'child_process';\nimport { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { availableLangs, hiddenLangs, LangNames } from '../shared/config/i18n';\nimport links from '../client/i18n/locales/english/links.json';\n\nconst headerComponentElements = {\n  skipContent: 'header-skip-content',\n  examNav: 'header-exam-nav',\n  examNavLogo: 'header-exam-nav-microsoft-logo',\n  universalNav: 'header-universal-nav',\n  universalNavLogo: 'header-universal-nav-logo',\n  toggleLangButton: 'header-toggle-lang-button',\n  languageList: 'header-lang-list',\n  languageButton: 'header-lang-list-option',\n  menuButton: 'header-menu-button',\n  menu: 'header-menu',\n  signInButton: 'header-sign-in-button'\n} as const;\n\nconst examUrl =\n  '/learn/foundational-c-sharp-with-microsoft/foundational-c-sharp-with-microsoft-certification-exam/foundational-c-sharp-with-microsoft-certification-exam';\n\ntest.describe('Header', () => {\n  test.use({ storageState: 'playwright/.auth/development-user.json' });\n\ntest.beforeEach(async ({ page }) => {\n    await page.goto('/');\n  });\n\ntest.beforeAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user');\n  });\n\ntest.afterAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n  });\n\ntest('Has link for skip content', async ({ page }) => {\n    const skipContent = page.getByTestId(headerComponentElements.skipContent);\n    await expect(skipContent).toBeVisible();\n    await expect(skipContent).toHaveAttribute('href', '#content-start');\n  });\n\ntest('Renders universal nav by default', async ({ page }) => {\n    const universalNavigation = page.getByTestId(\n      headerComponentElements.universalNav\n    );\n    const universalNavigationLogo = page.getByTestId(\n      headerComponentElements.universalNavLogo\n    );\n    await expect(universalNavigation).toBeVisible();\n    await expect(universalNavigationLogo).toBeVisible();\n    await expect(universalNavigationLogo).toHaveAttribute('href', '/learn');\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9627,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\header.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 478,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "0ce27c71969eb5826dda0013943c833b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\header.spec.ts",
    "source_type": "git_repo",
    "title": "header.spec",
    "content": "'playwright/.auth/development-user.json' }); test.beforeEach(async ({ page }) => { await page.goto('/'); }); test.beforeAll(() => { execSync('node ./tools/scripts/seed/seed-demo-user'); }); test.afterAll(() => { execSync('node ./tools/scripts/seed/seed-demo-user --certified-user'); }); test('Has link for skip content', async ({ page }) => { const skipContent = page.getByTestId(headerComponentElements.skipContent); await expect(skipContent).toBeVisible(); await expect(skipContent).toHaveAttribute('href', '#content-start'); }); test('Renders universal nav by default', async ({ page }) => { const universalNavigation = page.getByTestId( headerComponentElements.universalNav ); const universalNavigationLogo = page.getByTestId( headerComponentElements.universalNavLogo ); await expect(universalNavigation).toBeVisible(); await expect(universalNavigationLogo).toBeVisible(); await expect(universalNavigationLogo).toHaveAttribute('href', '/learn'); });\n\ntest('Should display search in header on desktop and in menu on mobile', async ({\n    page,\n    isMobile\n  }) => {\n    const searchInput = page.getByLabel(translations.search.label);\n    const menuButton = page.getByTestId(headerComponentElements.menuButton);\n\nif (isMobile) {\n      await expect(searchInput).toBeHidden();\n      await menuButton.click();\n      await expect(searchInput).toBeVisible();\n    } else {\n      await expect(searchInput).toBeVisible();\n    }\n  });\n\ntest('Clicking the \"Change Language\" button should open the language list', async ({\n    page\n  }) => {\n    const toggleLangButton = page.getByTestId(\n      headerComponentElements.toggleLangButton\n    );\n    await expect(toggleLangButton).toBeVisible();\n    await toggleLangButton.click();\n    const langList = page.getByTestId(headerComponentElements.languageList);\n    await expect(langList).toBeVisible();\n  });\n\ntest('The language list should contain a button for each available language', async ({\n    page\n  }) => {\n    const locales = availableLangs.client.filter(\n      lang => !hiddenLangs.includes(lang)\n    );\n\nconst toggleLangButton = page.getByTestId(\n      headerComponentElements.toggleLangButton\n    );\n    await expect(toggleLangButton).toBeVisible();\n    await toggleLangButton.click();\n    const langList = page.getByTestId(headerComponentElements.languageList);\n    await expect(langList).toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9627,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\header.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 499,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "8af6eac8382f65856abc23cdfd2dd56f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\header.spec.ts",
    "source_type": "git_repo",
    "title": "header.spec",
    "content": "} }); test('Clicking the \"Change Language\" button should open the language list', async ({ page }) => { const toggleLangButton = page.getByTestId( headerComponentElements.toggleLangButton ); await expect(toggleLangButton).toBeVisible(); await toggleLangButton.click(); const langList = page.getByTestId(headerComponentElements.languageList); await expect(langList).toBeVisible(); }); test('The language list should contain a button for each available language', async ({ page }) => { const locales = availableLangs.client.filter( lang => !hiddenLangs.includes(lang) ); const toggleLangButton = page.getByTestId( headerComponentElements.toggleLangButton ); await expect(toggleLangButton).toBeVisible(); await toggleLangButton.click(); const langList = page.getByTestId(headerComponentElements.languageList); await expect(langList).toBeVisible();\n\nconst langButtons = page.getByTestId(\n      headerComponentElements.languageButton\n    );\n    await expect(langButtons).toHaveCount(locales.length);\n\nfor (let i = 0; i < locales.length; i++) {\n      const btn = langButtons.nth(i);\n      await expect(btn).toContainText(LangNames[locales[i]]);\n    }\n  });\n\ntest('Clicking the menu button should open the menu', async ({ page }) => {\n    const menuButton = page.getByTestId(headerComponentElements.menuButton);\n    const menu = page.getByTestId(headerComponentElements.menu);\n    await expect(menuButton).toBeVisible();\n    await menuButton.click();\n    await expect(menu).toBeVisible();\n  });\n\ntest('Focusing on a menu item, and pressing Esc should close the menu and focus on the menu button', async ({\n    page\n  }) => {\n    const menuButton = page.getByTestId(headerComponentElements.menuButton);\n    const menu = page.getByTestId(headerComponentElements.menu);\n\nawait expect(menuButton).toBeVisible();\n    await menuButton.click();\n\nconst link = menu.getByRole('link', { name: translations.buttons.donate });\n    await link.focus();\n\nawait page.keyboard.press('Escape');\n    await expect(menu).toBeHidden();\n\nawait expect(menuButton).toBeFocused();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9627,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\header.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 432,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "e5e8542faece01f4592f207c21cf2445",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\header.spec.ts",
    "source_type": "git_repo",
    "title": "header.spec",
    "content": "the menu', async ({ page }) => { const menuButton = page.getByTestId(headerComponentElements.menuButton); const menu = page.getByTestId(headerComponentElements.menu); await expect(menuButton).toBeVisible(); await menuButton.click(); await expect(menu).toBeVisible(); }); test('Focusing on a menu item, and pressing Esc should close the menu and focus on the menu button', async ({ page }) => { const menuButton = page.getByTestId(headerComponentElements.menuButton); const menu = page.getByTestId(headerComponentElements.menu); await expect(menuButton).toBeVisible(); await menuButton.click(); const link = menu.getByRole('link', { name: translations.buttons.donate }); await link.focus(); await page.keyboard.press('Escape'); await expect(menu).toBeHidden(); await expect(menuButton).toBeFocused(); });\n\ntest('The menu should contain links to: donate, curriculum, forum, news, radio, contribute, and podcast', async ({\n    page\n  }) => {\n    const menuButton = page.getByTestId(headerComponentElements.menuButton);\n    const menu = page.getByTestId(headerComponentElements.menu);\n    await expect(menuButton).toBeVisible();\n    await menuButton.click();\n    await expect(menu).toBeVisible();\n\nconst menuLinks = [\n      { name: translations.buttons.profile, href: '/developmentuser' },\n      {\n        name: translations.buttons.donate,\n        href: '/donate'\n      },\n      {\n        name: translations.buttons.curriculum,\n        href: '/learn'\n      },\n      {\n        name: translations.buttons.forum,\n        href: links.nav.forum\n      },\n      {\n        name: translations.buttons.news,\n        href: links.nav.news\n      },\n      {\n        name: translations.buttons.radio,\n        href: process.env.RADIO_LOCATION || 'https://coderadio.freecodecamp.org'\n      },\n      {\n        name: translations.buttons.contribute,\n        href: links.nav.contribute\n      },\n      {\n        name: translations.buttons.podcast,\n        href: links.nav.podcast\n      }\n    ];\n\nfor (const menuLink of menuLinks) {\n      const link = menu.getByRole('link', { name: menuLink.name });\n      await expect(link).toBeVisible();\n      await expect(link).toHaveAttribute('href', menuLink.href);\n    }\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9627,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\header.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "058cc76ffcc7f9de1288e78a1024064e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\header.spec.ts",
    "source_type": "git_repo",
    "title": "header.spec",
    "content": "const menuLinks = [ { name: translations.buttons.profile, href: '/developmentuser' }, { name: translations.buttons.donate, href: '/donate' }, { name: translations.buttons.curriculum, href: '/learn' }, { name: translations.buttons.forum, href: links.nav.forum }, { name: translations.buttons.news, href: links.nav.news }, { name: translations.buttons.radio, href: process.env.RADIO_LOCATION || 'https://coderadio.freecodecamp.org' }, { name: translations.buttons.contribute, href: links.nav.contribute }, { name: translations.buttons.podcast, href: links.nav.podcast } ]; for (const menuLink of menuLinks) { const link = menu.getByRole('link', { name: menuLink.name }); await expect(link).toBeVisible(); await expect(link).toHaveAttribute('href', menuLink.href); } });\n\ntest('The menu should be able to change the theme', async ({ page }) => {\n    const menuButton = page.getByTestId(headerComponentElements.menuButton);\n    const menu = page.getByTestId(headerComponentElements.menu);\n    await menuButton.click();\n    await expect(menu).toBeVisible();\n\nconst themeButton = menu.getByRole('button', {\n      name: 'Night Mode'\n    });\n    await themeButton.click();\n\nawait expect(page.locator('body')).toHaveClass('dark-palette');\n\nawait expect(page.getByTestId('flash-message')).toContainText(\n      /We have updated your theme/\n    );\n    await expect(menu).toBeHidden();\n\nawait menuButton.click();\n    await expect(menu).toBeVisible();\n\nawait themeButton.click();\n    await expect(page.locator('body')).toHaveClass('light-palette');\n  });\n\ntest('The header should contain an avatar', async ({ page }) => {\n    const avatarLink = page.getByRole('link', { name: 'Profile' });\n    await expect(avatarLink).toBeVisible();\n    await expect(avatarLink).toHaveAttribute('href', '/developmentuser');\n\nconst avatar = avatarLink.getByRole('img', {\n      name: 'Default Avatar',\n      includeHidden: true // the svg is aria-hidden\n    });\n    await expect(avatar).toBeVisible();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9627,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\header.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "9831c29b72b6b7d583dcb12ba76f5d0c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\header.spec.ts",
    "source_type": "git_repo",
    "title": "header.spec",
    "content": "const themeButton = menu.getByRole('button', { name: 'Night Mode' }); await themeButton.click(); await expect(page.locator('body')).toHaveClass('dark-palette'); await expect(page.getByTestId('flash-message')).toContainText( /We have updated your theme/ ); await expect(menu).toBeHidden(); await menuButton.click(); await expect(menu).toBeVisible(); await themeButton.click(); await expect(page.locator('body')).toHaveClass('light-palette'); }); test('The header should contain an avatar', async ({ page }) => { const avatarLink = page.getByRole('link', { name: 'Profile' }); await expect(avatarLink).toBeVisible(); await expect(avatarLink).toHaveAttribute('href', '/developmentuser'); const avatar = avatarLink.getByRole('img', { name: 'Default Avatar', includeHidden: true // the svg is aria-hidden }); await expect(avatar).toBeVisible(); });\n\ntest('The Avatar should be less or equal to 26px', async ({ page }) => {\n    const avatar = page\n      .getByRole('link', { name: 'Profile' })\n      .getByRole('img', {\n        name: 'Default Avatar',\n        includeHidden: true // the svg is aria-hidden\n      });\n\nawait expect(avatar).toBeVisible();\n    const avatarSize = await avatar.boundingBox();\n    expect(avatarSize?.width).toBeLessThanOrEqual(26);\n    expect(avatarSize?.height).toBeLessThanOrEqual(26);\n  });\n\ntest('The Sign In button should redirect to api/signin', async ({\n    browser\n  }) => {\n    // Sign out user in order to test Sign In button\n    const context = await browser.newContext({\n      storageState: { cookies: [], origins: [] }\n    });\n    const page = await context.newPage();\n    await page.goto('/');\n\nconst signInButton = page.getByRole('link', {\n      name: translations.buttons['sign-in']\n    });\n\nconst apiLocation = process.env.API_LOCATION || 'http://localhost:3000';\n\nawait expect(signInButton).toHaveAttribute('href', `${apiLocation}/signin`);\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9627,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\header.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 443,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "6e916115e32a6be75325d61483216a2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\header.spec.ts",
    "source_type": "git_repo",
    "title": "header.spec",
    "content": "is aria-hidden }); await expect(avatar).toBeVisible(); const avatarSize = await avatar.boundingBox(); expect(avatarSize?.width).toBeLessThanOrEqual(26); expect(avatarSize?.height).toBeLessThanOrEqual(26); }); test('The Sign In button should redirect to api/signin', async ({ browser }) => { // Sign out user in order to test Sign In button const context = await browser.newContext({ storageState: { cookies: [], origins: [] } }); const page = await context.newPage(); await page.goto('/'); const signInButton = page.getByRole('link', { name: translations.buttons['sign-in'] }); const apiLocation = process.env.API_LOCATION || 'http://localhost:3000'; await expect(signInButton).toHaveAttribute('href', `${apiLocation}/signin`); });\n\ntest('When the user is signed out, only certain elements should be visible', async ({\n    browser\n  }) => {\n    const context = await browser.newContext({\n      storageState: { cookies: [], origins: [] }\n    });\n    const page = await context.newPage();\n    await page.goto('/');\n    const signInButton = page\n      .getByTestId(headerComponentElements.signInButton)\n      .nth(0);\n    await expect(signInButton).toBeVisible();\n\nconst avatar = page\n      .getByRole('link', { name: 'Profile' })\n      .getByRole('img', {\n        name: 'Default Avatar',\n        includeHidden: true // the svg is aria-hidden\n      });\n    await expect(avatar).toBeHidden();\n  });\n});\n\ntest.describe('Exam Header', () => {\n  test('Renders exam nav for Foundational C# with Microsoft exam', async ({\n    page\n  }) => {\n    await page.goto(examUrl);\n    await page\n      .getByRole('button', {\n        name: translations.buttons['click-start-exam']\n      })\n      .click();\n    await expect(page).toHaveURL(examUrl);\n    await expect(\n      page.getByTestId(headerComponentElements.examNav)\n    ).toBeVisible();\n    await expect(\n      page.getByTestId(headerComponentElements.examNavLogo)\n    ).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9627,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\header.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "c91ac6aeece21f3646480860d67985f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\help-modal.spec.ts",
    "source_type": "git_repo",
    "title": "help-modal.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(\n    '/learn/foundational-c-sharp-with-microsoft/write-your-first-code-using-c-sharp/write-your-first-c-sharp-code'\n  );\n});\n\ntest.describe('Help Modal component', () => {\n  test('renders the modal correctly', async ({ page }) => {\n    await page\n      .getByRole('button', { name: translations.buttons['ask-for-help'] })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', { name: translations.buttons['ask-for-help'] })\n    ).toBeVisible();\n    await expect(\n      page.getByText(\n        `If you've already tried the Read-Search-Ask method, then you can ask for help on the freeCodeCamp forum.`\n      )\n    ).toBeVisible();\n    await expect(\n      page.getByText(\n        `Before making a new post please check if your question has already been answered on the forum.`\n      )\n    ).toBeVisible();\n\nawait expect(\n      page.getByRole('button', { name: translations.buttons['create-post'] })\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: translations.buttons.cancel })\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: translations.buttons.close })\n    ).toBeVisible();\n  });\n\ntest('should disable the submit button if the checkboxes are not checked', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', { name: translations.buttons['ask-for-help'] })\n      .click();\n\nawait page\n      .getByRole('button', {\n        name: translations.buttons['create-post']\n      })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', { name: translations.buttons['ask-for-help'] })\n    ).toBeVisible();\n\nconst rsaCheckbox = page.getByRole('checkbox', {\n      name: 'I have tried the Read-Search-Ask method'\n    });\n\nconst similarQuestionsCheckbox = page.getByRole('checkbox', {\n      name: 'I have searched for similar questions that have already been answered on the forum'\n    });\n\nconst descriptionInput = page.getByRole('textbox', {\n      name: translations['forum-help']['whats-happening']\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7631,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\help-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "77410d3336af550a56f7fe88fb30f489",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\help-modal.spec.ts",
    "source_type": "git_repo",
    "title": "help-modal.spec",
    "content": "checkboxes are not checked', async ({ page }) => { await page .getByRole('button', { name: translations.buttons['ask-for-help'] }) .click(); await page .getByRole('button', { name: translations.buttons['create-post'] }) .click(); await expect( page.getByRole('dialog', { name: translations.buttons['ask-for-help'] }) ).toBeVisible(); const rsaCheckbox = page.getByRole('checkbox', { name: 'I have tried the Read-Search-Ask method' }); const similarQuestionsCheckbox = page.getByRole('checkbox', { name: 'I have searched for similar questions that have already been answered on the forum' }); const descriptionInput = page.getByRole('textbox', { name: translations['forum-help']['whats-happening'] });\n\nconst submitButton = page.getByRole('button', {\n      name: translations.buttons['submit']\n    });\n\nawait descriptionInput.fill(\n      'Example text with a 100 characters to validate if the rules applied to block users from spamming help forum are working.'\n    );\n\nawait expect(submitButton).toBeDisabled();\n\nawait rsaCheckbox.check();\n    await similarQuestionsCheckbox.uncheck();\n\nawait expect(submitButton).toBeDisabled();\n\nawait rsaCheckbox.uncheck();\n    await similarQuestionsCheckbox.check();\n\nawait expect(submitButton).toBeDisabled();\n  });\n\ntest('should disable the submit button if the description contains less than 50 characters', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', { name: translations.buttons['ask-for-help'] })\n      .click();\n\nawait page\n      .getByRole('button', {\n        name: translations.buttons['create-post']\n      })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', { name: translations.buttons['ask-for-help'] })\n    ).toBeVisible();\n\nconst rsaCheckbox = page.getByRole('checkbox', {\n      name: 'I have tried the Read-Search-Ask method'\n    });\n\nconst similarQuestionsCheckbox = page.getByRole('checkbox', {\n      name: 'I have searched for similar questions that have already been answered on the forum'\n    });\n\nconst descriptionInput = page.getByRole('textbox', {\n      name: translations['forum-help']['whats-happening']\n    });\n\nconst submitButton = page.getByRole('button', {\n      name: translations.buttons['submit']\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7631,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\help-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 487,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "57ca556bde1f2a66f08a7dfd6eee628c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\help-modal.spec.ts",
    "source_type": "git_repo",
    "title": "help-modal.spec",
    "content": "=> { await page .getByRole('button', { name: translations.buttons['ask-for-help'] }) .click(); await page .getByRole('button', { name: translations.buttons['create-post'] }) .click(); await expect( page.getByRole('dialog', { name: translations.buttons['ask-for-help'] }) ).toBeVisible(); const rsaCheckbox = page.getByRole('checkbox', { name: 'I have tried the Read-Search-Ask method' }); const similarQuestionsCheckbox = page.getByRole('checkbox', { name: 'I have searched for similar questions that have already been answered on the forum' }); const descriptionInput = page.getByRole('textbox', { name: translations['forum-help']['whats-happening'] }); const submitButton = page.getByRole('button', { name: translations.buttons['submit'] });\n\nawait rsaCheckbox.check();\n    await similarQuestionsCheckbox.check();\n    await descriptionInput.fill('Example text');\n\nawait expect(submitButton).toBeDisabled();\n  });\n\ntest('should ask the user to fill in the help form and create a forum page', async ({\n    context,\n    page\n  }) => {\n    await page\n      .getByRole('button', { name: translations.buttons['ask-for-help'] })\n      .click();\n\nawait page\n      .getByRole('button', {\n        name: translations.buttons['create-post']\n      })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', { name: translations.buttons['ask-for-help'] })\n    ).toBeVisible();\n\nconst rsaCheckbox = page.getByRole('checkbox', {\n      name: 'I have tried the Read-Search-Ask method'\n    });\n\nconst similarQuestionsCheckbox = page.getByRole('checkbox', {\n      name: 'I have searched for similar questions that have already been answered on the forum'\n    });\n\nconst descriptionInput = page.getByRole('textbox', {\n      name: translations['forum-help']['whats-happening']\n    });\n\nconst submitButton = page.getByRole('button', {\n      name: translations.buttons['submit']\n    });\n\nawait expect(rsaCheckbox).toBeVisible();\n    await expect(similarQuestionsCheckbox).toBeVisible();\n    await expect(descriptionInput).toBeVisible();\n\nawait rsaCheckbox.check();\n    await similarQuestionsCheckbox.check();\n    await descriptionInput.fill(\n      'Example text with a 100 characters to validate if the rules applied to block users from spamming help forum are working.'\n    );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7631,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\help-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "3ca30c2f30199f8eee356af948e433bc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\help-modal.spec.ts",
    "source_type": "git_repo",
    "title": "help-modal.spec",
    "content": "tried the Read-Search-Ask method' }); const similarQuestionsCheckbox = page.getByRole('checkbox', { name: 'I have searched for similar questions that have already been answered on the forum' }); const descriptionInput = page.getByRole('textbox', { name: translations['forum-help']['whats-happening'] }); const submitButton = page.getByRole('button', { name: translations.buttons['submit'] }); await expect(rsaCheckbox).toBeVisible(); await expect(similarQuestionsCheckbox).toBeVisible(); await expect(descriptionInput).toBeVisible(); await rsaCheckbox.check(); await similarQuestionsCheckbox.check(); await descriptionInput.fill( 'Example text with a 100 characters to validate if the rules applied to block users from spamming help forum are working.' );\n\nawait expect(submitButton).toBeEnabled();\n    await submitButton.click();\n\nconst newPagePromise = context.waitForEvent('page');\n\nconst newPage = await newPagePromise;\n    await newPage.waitForLoadState();\n\nawait expect(newPage).toHaveURL(/.*forum\\.freecodecamp.org.*/);\n  });\n\ntest('Cancel button closes the modal', async ({ page }) => {\n    await page\n      .getByRole('button', { name: translations.buttons['ask-for-help'] })\n      .click();\n\nconst dialog = page.getByRole('dialog', {\n      name: translations.buttons['ask-for-help']\n    });\n\nawait expect(dialog).toBeVisible();\n\nawait page\n      .getByRole('button', { name: translations.buttons.cancel })\n      .click();\n\nawait expect(dialog).not.toBeVisible();\n  });\n\ntest('Close button closes the modal', async ({ page }) => {\n    await page\n      .getByRole('button', { name: translations.buttons['ask-for-help'] })\n      .click();\n\nconst dialog = page.getByRole('dialog', {\n      name: translations.buttons['ask-for-help']\n    });\n\nawait expect(dialog).toBeVisible();\n\nawait page\n      .getByRole('button', { name: translations.buttons.close })\n      .click();\n\nawait expect(dialog).not.toBeVisible();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7631,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\help-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 423,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "69327150d05a0ff651dfb3d1d86c2ee2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\help-modal.spec.ts",
    "source_type": "git_repo",
    "title": "help-modal.spec",
    "content": "modal', async ({ page }) => { await page .getByRole('button', { name: translations.buttons['ask-for-help'] }) .click(); const dialog = page.getByRole('dialog', { name: translations.buttons['ask-for-help'] }); await expect(dialog).toBeVisible(); await page .getByRole('button', { name: translations.buttons.cancel }) .click(); await expect(dialog).not.toBeVisible(); }); test('Close button closes the modal', async ({ page }) => { await page .getByRole('button', { name: translations.buttons['ask-for-help'] }) .click(); const dialog = page.getByRole('dialog', { name: translations.buttons['ask-for-help'] }); await expect(dialog).toBeVisible(); await page .getByRole('button', { name: translations.buttons.close }) .click(); await expect(dialog).not.toBeVisible(); });\n\ntest('Read-Search-Ask link', async ({ page }) => {\n    await page\n      .getByRole('button', { name: translations.buttons['ask-for-help'] })\n      .click();\n    const link = page.getByRole('link', { name: 'Read-Search-Ask' });\n    await expect(link).toHaveAttribute(\n      'href',\n      'https://forum.freecodecamp.org/t/19514'\n    );\n    await expect(link).toHaveAttribute('target', '_blank');\n    await expect(link).toHaveAttribute('rel', 'noopener noreferrer');\n  });\n\ntest('Already been answered link', async ({ page }) => {\n    await page\n      .getByRole('button', { name: translations.buttons['ask-for-help'] })\n      .click();\n    const link = page.getByRole('link', {\n      name: 'already been answered on the forum'\n    });\n    await expect(link).toHaveAttribute(\n      'href',\n      'https://forum.freecodecamp.org/search?q=Write%20Your%20First%20Code%20Using%20C%23%20-%20Write%20Your%20First%20C%23%20Code%20in%3Atitle'\n    );\n    await expect(link).toHaveAttribute('target', '_blank');\n    await expect(link).toHaveAttribute('rel', 'noopener noreferrer');\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7631,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\help-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 465,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "7ffd03613568030d71736f845c1222a6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\iframe-script.spec.ts",
    "source_type": "git_repo",
    "title": "iframe-script.spec",
    "content": "import { expect, test } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { focusEditor } from './utils/editor';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(\n    '/learn/javascript-algorithms-and-data-structures-v8/build-a-cash-register-project/build-a-cash-register'\n  );\n});\n\ntest.describe('Preventing Script From Displaying in Preview', () => {\n  // this test is for inserting problematic <style> tag and checking if the preview is empty\n\ntest('should render an empty preview after inserting CSS', async ({\n    page,\n    isMobile\n  }) => {\n    await focusEditor({ page, isMobile });\n\n//  the pain in the butt <style> tag with display: block rule into the editor\n    const styleTag = `\n  <style>\n  * {\n    margin: 0;\n    padding: 0;\n    display: block;\n  }\n  </style>`;\n    await page.keyboard.insertText(styleTag);\n\nif (isMobile) {\n      await page\n        .getByRole('tab', { name: translations.learn['editor-tabs'].preview })\n        .click();\n    }\n\n// Checks that the iframe preview is empty\n    const frame = page.frameLocator('#fcc-main-frame').first();\n\n// Make sure there are no visible elements inside the iframe's body\n    await expect(frame.locator('body')).toBeEmpty();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1285,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\iframe-script.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 299,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "baa2bcfbce454028a4f3d64fdcaad40d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\hotkeys.spec.ts",
    "source_type": "git_repo",
    "title": "hotkeys.spec",
    "content": "import { test, expect, type Page } from '@playwright/test';\n\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { authedRequest } from './utils/request';\nimport { getEditors } from './utils/editor';\nimport { alertToBeVisible } from './utils/alerts';\n\nconst links = {\n  basicJS1:\n    '/learn/javascript-algorithms-and-data-structures/basic-javascript/comment-your-javascript-code',\n  basicJS2:\n    '/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-javascript-variables',\n  frontEnd1:\n    '/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine',\n  frontEnd2:\n    '/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-markdown-previewer',\n  backEnd1:\n    '/learn/back-end-development-and-apis/back-end-development-and-apis-projects/timestamp-microservice',\n  backEnd2:\n    'learn/back-end-development-and-apis/back-end-development-and-apis-projects/request-header-parser-microservice',\n  video1:\n    '/learn/python-for-everybody/python-for-everybody/introduction-why-program',\n  video2:\n    '/learn/python-for-everybody/python-for-everybody/introduction-hardware-architecture',\n  multipleChoiceQuestion:\n    '/learn/a2-english-for-developers/learn-greetings-in-your-first-day-at-the-office/task-7',\n  assignment:\n    '/learn/full-stack-developer/review-semantic-html/review-semantic-html'\n};\n\nconst titles = {\n  basicJS1: /Comment Your JavaScript Code/,\n  basicJS2: /Declare JavaScript Variables/,\n  frontEnd2: /Build a Markdown Previewer/,\n  backEnd2: /Request Header Parser Microservice/,\n  video2: /Introduction: Hardware Architecture/\n};\ntype PageId = keyof typeof titles;\n\n// The hotkeys are attached to specific elements, so we need to wait for the\n// wrapper to be focused before we can test the hotkeys.\nconst waitUntilListening = async (page: Page) =>\n  await expect(page.locator('#editor-layout')).toBeFocused();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6841,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\hotkeys.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "08d1d79c2d74437b91aa19ab6d6d6f66",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\hotkeys.spec.ts",
    "source_type": "git_repo",
    "title": "hotkeys.spec",
    "content": "video2: '/learn/python-for-everybody/python-for-everybody/introduction-hardware-architecture', multipleChoiceQuestion: '/learn/a2-english-for-developers/learn-greetings-in-your-first-day-at-the-office/task-7', assignment: '/learn/full-stack-developer/review-semantic-html/review-semantic-html' }; const titles = { basicJS1: /Comment Your JavaScript Code/, basicJS2: /Declare JavaScript Variables/, frontEnd2: /Build a Markdown Previewer/, backEnd2: /Request Header Parser Microservice/, video2: /Introduction: Hardware Architecture/ }; type PageId = keyof typeof titles; // The hotkeys are attached to specific elements, so we need to wait for the // wrapper to be focused before we can test the hotkeys. const waitUntilListening = async (page: Page) => await expect(page.locator('#editor-layout')).toBeFocused();\n\n// This is a hack to work around the fact that the page isn't always hydrated\n// with the new content when the URL changes.\nconst waitUntilHydrated = async (page: Page, pageId: PageId) => {\n  await page.waitForURL(links[pageId]);\n  await expect(page).toHaveTitle(titles[pageId]);\n  await waitUntilListening(page);\n};\n\ntest.beforeAll(async ({ request }) => {\n  await authedRequest({\n    request,\n    endpoint: 'update-my-keyboard-shortcuts',\n    method: 'put',\n    data: {\n      keyboardShortcuts: false\n    }\n  });\n});\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto('/settings');\n  const keyboardShortcutGroup = page.getByRole('group', {\n    name: translations.settings.labels['keyboard-shortcuts']\n  });\n  await keyboardShortcutGroup\n    .getByRole('button', { name: translations.buttons.on, exact: true })\n    .click();\n  // wait for the client to register the change:\n  await alertToBeVisible(page, translations.flash['keyboard-shortcut-updated']);\n});\n\ntest.afterEach(\n  async ({ request }) =>\n    await authedRequest({\n      request,\n      method: 'put',\n      endpoint: 'update-my-keyboard-shortcuts',\n      data: {\n        keyboardShortcuts: false\n      }\n    })\n);\n\n// TODO: handle keyboard shortcuts on mobile\ntest.skip(({ isMobile }) => isMobile, 'Only test on desktop');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6841,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\hotkeys.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "fffec619112e6a64ae7491a38e18cdad",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\hotkeys.spec.ts",
    "source_type": "git_repo",
    "title": "hotkeys.spec",
    "content": "}); test.beforeEach(async ({ page }) => { await page.goto('/settings'); const keyboardShortcutGroup = page.getByRole('group', { name: translations.settings.labels['keyboard-shortcuts'] }); await keyboardShortcutGroup .getByRole('button', { name: translations.buttons.on, exact: true }) .click(); // wait for the client to register the change: await alertToBeVisible(page, translations.flash['keyboard-shortcut-updated']); }); test.afterEach( async ({ request }) => await authedRequest({ request, method: 'put', endpoint: 'update-my-keyboard-shortcuts', data: { keyboardShortcuts: false } }) ); // TODO: handle keyboard shortcuts on mobile test.skip(({ isMobile }) => isMobile, 'Only test on desktop');\n\ntest('User can use shortcuts in and around the editor', async ({ page }) => {\n  await page.goto(links.basicJS1);\n\nawait expect(getEditors(page)).toBeFocused();\n  await getEditors(page).press('Escape');\n  await expect(getEditors(page)).not.toBeFocused();\n\nawait page.keyboard.press('n');\n  await waitUntilHydrated(page, 'basicJS2');\n\nawait page.keyboard.press('p');\n  await waitUntilHydrated(page, 'basicJS1');\n\nawait page.keyboard.press('e');\n  await expect(getEditors(page)).toBeFocused();\n\nawait getEditors(page).press('Escape');\n  await page.keyboard.press('r');\n  await expect(page.locator('.instructions-panel')).toBeFocused();\n});\n\ntest('User can use shortcuts to navigate between frontend projects', async ({\n  page\n}) => {\n  await page.goto(links.frontEnd1);\n  await waitUntilListening(page);\n  await page.keyboard.press('Escape');\n\nawait page.keyboard.press('n');\n  await waitUntilHydrated(page, 'frontEnd2');\n  await page.keyboard.press('p');\n  await page.waitForURL(links.frontEnd1);\n});\n\ntest('User can use shortcuts to navigate between backend projects', async ({\n  page\n}) => {\n  await page.goto(links.backEnd1);\n  await waitUntilListening(page);\n  await page.keyboard.press('Escape');\n\nawait page.keyboard.press('n');\n  await waitUntilHydrated(page, 'backEnd2');\n  await page.keyboard.press('p');\n  await page.waitForURL(links.backEnd1);\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6841,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\hotkeys.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "22264ae5066260f8481236a4e7a13291",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\hotkeys.spec.ts",
    "source_type": "git_repo",
    "title": "hotkeys.spec",
    "content": "await waitUntilHydrated(page, 'basicJS1'); await page.keyboard.press('e'); await expect(getEditors(page)).toBeFocused(); await getEditors(page).press('Escape'); await page.keyboard.press('r'); await expect(page.locator('.instructions-panel')).toBeFocused(); }); test('User can use shortcuts to navigate between frontend projects', async ({ page }) => { await page.goto(links.frontEnd1); await waitUntilListening(page); await page.keyboard.press('Escape'); await page.keyboard.press('n'); await waitUntilHydrated(page, 'frontEnd2'); await page.keyboard.press('p'); await page.waitForURL(links.frontEnd1); }); test('User can use shortcuts to navigate between backend projects', async ({ page }) => { await page.goto(links.backEnd1); await waitUntilListening(page); await page.keyboard.press('Escape'); await page.keyboard.press('n'); await waitUntilHydrated(page, 'backEnd2'); await page.keyboard.press('p'); await page.waitForURL(links.backEnd1); });\n\ntest('User can use shortcuts to navigate between video-based challenges', async ({\n  page\n}) => {\n  await page.goto(links.video1);\n  await waitUntilListening(page);\n  await page.keyboard.press('Escape');\n\nawait page.keyboard.press('n');\n  await waitUntilHydrated(page, 'video2');\n  await page.keyboard.press('p');\n  await page.waitForURL(links.video1);\n});\n\ntest('User can use Ctrl+Enter to submit their answer in a multiple-choice question challenge', async ({\n  page\n}) => {\n  await page.goto(links.multipleChoiceQuestion);\n\n// Wait for page load\n  await expect(page.getByRole('heading', { name: 'Task 7' })).toBeVisible();\n\nawait page.keyboard.press('Control+Enter');\n\nawait expect(\n    page.getByText('You have unanswered questions and/or incorrect answers.')\n  ).toBeVisible();\n});\n\ntest('User can use Cmd+Enter to submit their answer in a multiple-choice question challenge', async ({\n  page\n}) => {\n  await page.goto(links.multipleChoiceQuestion);\n\n// Wait for page load\n  await expect(page.getByRole('heading', { name: 'Task 7' })).toBeVisible();\n\nawait page.keyboard.press('Meta+Enter');\n\nawait expect(\n    page.getByText('You have unanswered questions and/or incorrect answers.')\n  ).toBeVisible();\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6841,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\hotkeys.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "77190d3c6b2d157b68b2b23d5e2fb46e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\hotkeys.spec.ts",
    "source_type": "git_repo",
    "title": "hotkeys.spec",
    "content": "}) => { await page.goto(links.multipleChoiceQuestion); // Wait for page load await expect(page.getByRole('heading', { name: 'Task 7' })).toBeVisible(); await page.keyboard.press('Control+Enter'); await expect( page.getByText('You have unanswered questions and/or incorrect answers.') ).toBeVisible(); }); test('User can use Cmd+Enter to submit their answer in a multiple-choice question challenge', async ({ page }) => { await page.goto(links.multipleChoiceQuestion); // Wait for page load await expect(page.getByRole('heading', { name: 'Task 7' })).toBeVisible(); await page.keyboard.press('Meta+Enter'); await expect( page.getByText('You have unanswered questions and/or incorrect answers.') ).toBeVisible(); });\n\ntest('User can use Ctrl+Enter to submit their answer in an assignment-type challenge', async ({\n  page\n}) => {\n  await page.goto(links.assignment);\n\n// Wait for page load\n  await expect(\n    page.getByRole('heading', { name: 'Semantic HTML Review' })\n  ).toBeVisible();\n\n// Check the assignment checkbox\n  await page.getByRole('checkbox').check();\n\nawait page.keyboard.press('Control+Enter');\n\n// Completion modal shows up\n  await expect(page.getByRole('dialog')).toBeVisible();\n});\n\ntest('User can use Cmd+Enter to submit their answer in an assignment-type challenge', async ({\n  page\n}) => {\n  await page.goto(links.assignment);\n\n// Wait for page load\n  await expect(\n    page.getByRole('heading', { name: 'Semantic HTML Review' })\n  ).toBeVisible();\n\n// Check the assignment checkbox\n  await page.getByRole('checkbox').check();\n\nawait page.keyboard.press('Meta+Enter');\n\n// Completion modal shows up\n  await expect(page.getByRole('dialog')).toBeVisible();\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6841,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\hotkeys.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 372,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "a5bbc3455337e85d5a2a1a57dcdae0f7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\image-picture-check.spec.ts",
    "source_type": "git_repo",
    "title": "image-picture-check.spec",
    "content": "import { test, expect } from '@playwright/test';\n\ntest.describe('Picture input field', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto('/certifieduser');\n\nif (!process.env.CI) {\n      await page\n        .getByRole('button', { name: 'Preview custom 404 page' })\n        .click();\n    }\n\nawait page.getByRole('button', { name: 'Edit my profile' }).click();\n  });\n\ntest('Should be possible to type', async ({ page }) => {\n    const pictureInput = page.getByLabel('Picture');\n    await pictureInput.fill('');\n    await pictureInput.fill('twaha');\n    await expect(pictureInput).toHaveAttribute('value', 'twaha');\n  });\n\ntest('Show an error message if an incorrect url was submitted', async ({\n    page\n  }) => {\n    const pictureInput = page.getByLabel('Picture');\n    await pictureInput.fill('');\n    await pictureInput.fill(\n      'https://cdn.freecodecamp.org/platform/universal/camper-image-placeholder'\n    );\n    await expect(\n      page.getByText('URL must link directly to an image file')\n    ).toBeVisible();\n  });\n\ntest('Can submit a correct URL', async ({ page }) => {\n    const pictureInput = page.getByLabel('Picture');\n    await pictureInput.fill('');\n    await pictureInput.fill(\n      'https://cdn.freecodecamp.org/platform/universal/camper-image-placeholder.png'\n    );\n\nconst form = page.getByTestId('camper-identity');\n    const saveButton = form.getByRole('button', { name: 'Save' });\n    await expect(saveButton).toBeEnabled();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1493,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\image-picture-check.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 348,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5ac065d049022f071accb94f7297fd8f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\intro-page-rwd.spec.ts",
    "source_type": "git_repo",
    "title": "intro-page-rwd.spec",
    "content": "import { test, expect } from '@playwright/test';\n\ntest.describe('Certification intro page', () => {\n  test('Should render and toggle correctly', async ({ page }) => {\n    const firstBlockToggle = page.getByRole('button', {\n      name: 'Learn HTML by Building a Cat Photo App'\n    });\n\nconst firstBlockText = page.getByText(\n      'HTML tags give a webpage its structure. You can use HTML tags to add photos, buttons, and other elements to your webpage.'\n    );\n\nconst secondBlockText = page.getByText(\n      'CSS tells the browser how to display your webpage. You can use CSS to set the color, font, size, and other aspects of HTML elements.'\n    );\n\nconst superBlockText = page.getByText(\n      \"this Responsive Web Design Certification, you'll learn the languages that developers use to build webpages\"\n    );\n\nawait page.goto('/learn/2022/responsive-web-design');\n\nawait expect(page).toHaveTitle('Responsive Web Design | freeCodeCamp.org');\n    await expect(superBlockText).toBeVisible();\n    await expect(firstBlockText).toBeVisible();\n    await expect(secondBlockText).not.toBeVisible();\n\nawait firstBlockToggle.click();\n    await expect(firstBlockText).not.toBeVisible();\n\nawait firstBlockToggle.click();\n    await expect(firstBlockText).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1297,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\intro-page-rwd.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 276,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7664c11d023fe68e71f44004a123559f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\intro-page.spec.ts",
    "source_type": "git_repo",
    "title": "intro-page.spec",
    "content": "import { test, expect } from '@playwright/test';\n\ntest.describe('Certification intro page', () => {\n  test('Should render', async ({ page }) => {\n    await page.goto('/learn/coding-interview-prep');\n    await expect(\n      page.getByText(\n        \"If you're looking for free coding exercises to prepare for your next job interview, we've got you covered.\"\n      )\n    ).toBeVisible();\n    await expect(page).toHaveTitle('Coding Interview Prep | freeCodeCamp.org');\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 475,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\intro-page.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 108,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "ed788b4315213910a72f6e49ad2c8573",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\internet-presence-settings.spec.ts",
    "source_type": "git_repo",
    "title": "internet-presence-settings.spec",
    "content": "import { execSync } from 'child_process';\nimport { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\nconst settingsPageElement = {\n  githubInput: 'internet-github-input',\n  githubCheckmark: 'internet-github-check',\n  linkedinCheckmark: 'internet-linkedin-check',\n  twitterCheckmark: 'internet-twitter-check',\n  personalWebsiteCheckmark: 'internet-website-check',\n  flashMessageAlert: 'flash-message',\n  internetPresenceForm: 'internet-presence'\n} as const;\n\ntest.beforeEach(async ({ page }) => {\n  // Reset input values\n  execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n\nawait page.goto('/certifieduser');\n\nif (!process.env.CI) {\n    await page.getByRole('button', { name: 'Preview custom 404 page' }).click();\n  }\n\nawait page.getByRole('button', { name: 'Edit my profile' }).click();\n});\n\ntest.describe('Your Internet Presence', () => {\n  test.skip(({ browserName }) => browserName === 'webkit', 'flaky on Safari');\n  test('should display the section with save button being disabled', async ({\n    page\n  }) => {\n    await expect(\n      page.getByRole('heading', {\n        level: 2,\n        name: translations.settings.headings.internet\n      })\n    ).toBeVisible();\n\nawait expect(\n      page\n        .getByTestId(settingsPageElement.internetPresenceForm)\n        .getByRole('button', { name: translations.buttons.save })\n    ).toBeVisible();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3104,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\internet-presence-settings.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 339,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "2c86a2513e281e63b6c7eb827136dde7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\internet-presence-settings.spec.ts",
    "source_type": "git_repo",
    "title": "internet-presence-settings.spec",
    "content": "await page.goto('/certifieduser'); if (!process.env.CI) { await page.getByRole('button', { name: 'Preview custom 404 page' }).click(); } await page.getByRole('button', { name: 'Edit my profile' }).click(); }); test.describe('Your Internet Presence', () => { test.skip(({ browserName }) => browserName === 'webkit', 'flaky on Safari'); test('should display the section with save button being disabled', async ({ page }) => { await expect( page.getByRole('heading', { level: 2, name: translations.settings.headings.internet }) ).toBeVisible(); await expect( page .getByTestId(settingsPageElement.internetPresenceForm) .getByRole('button', { name: translations.buttons.save }) ).toBeVisible(); });\n\nconst socials = [\n    {\n      name: 'github',\n      url: 'https://github.com/certified-user',\n      label: 'GitHub',\n      checkTestId: settingsPageElement.githubCheckmark\n    },\n    {\n      name: 'linkedin',\n      url: 'https://www.linkedin.com/in/certified-user',\n      label: 'LinkedIn',\n      checkTestId: settingsPageElement.linkedinCheckmark\n    },\n    {\n      name: 'twitter',\n      url: 'https://twitter.com/certified-user',\n      label: 'Twitter',\n      checkTestId: settingsPageElement.twitterCheckmark\n    },\n    {\n      name: 'website',\n      url: 'https://certified-user.com',\n      label: translations.settings.labels.personal,\n      checkTestId: settingsPageElement.personalWebsiteCheckmark\n    }\n  ];\n\nsocials.forEach(social => {\n    test(`should hide ${social.name} checkmark by default`, async ({\n      page\n    }) => {\n      await expect(page.getByTestId(social.checkTestId)).toBeHidden();\n    });\n\ntest(`should update ${social.name} URL`, async ({ page }) => {\n      const socialInput = page.getByRole('textbox', { name: social.label });\n      await expect(socialInput).toBeVisible();\n      await socialInput.fill(social.url);\n      const socialCheckmark = page.getByTestId(social.checkTestId);\n      await expect(socialCheckmark).toBeVisible();\n\nconst saveButton = page\n        .getByTestId(settingsPageElement.internetPresenceForm)\n        .getByRole('button', { name: translations.buttons.save });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3104,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\internet-presence-settings.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "af543ff937dfbfca40414d3e95634667",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\internet-presence-settings.spec.ts",
    "source_type": "git_repo",
    "title": "internet-presence-settings.spec",
    "content": "name: 'twitter', url: 'https://twitter.com/certified-user', label: 'Twitter', checkTestId: settingsPageElement.twitterCheckmark }, { name: 'website', url: 'https://certified-user.com', label: translations.settings.labels.personal, checkTestId: settingsPageElement.personalWebsiteCheckmark } ]; socials.forEach(social => { test(`should hide ${social.name} checkmark by default`, async ({ page }) => { await expect(page.getByTestId(social.checkTestId)).toBeHidden(); }); test(`should update ${social.name} URL`, async ({ page }) => { const socialInput = page.getByRole('textbox', { name: social.label }); await expect(socialInput).toBeVisible(); await socialInput.fill(social.url); const socialCheckmark = page.getByTestId(social.checkTestId); await expect(socialCheckmark).toBeVisible(); const saveButton = page .getByTestId(settingsPageElement.internetPresenceForm) .getByRole('button', { name: translations.buttons.save });\n\nawait expect(saveButton).toBeVisible();\n      await saveButton.click();\n      await expect(page.getByRole('alert').first()).toContainText(\n        'We have updated your social links'\n      );\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3104,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\internet-presence-settings.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 255,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "dc76f6e7de7d6445b351fdd21c77469b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\learn.spec.ts",
    "source_type": "git_repo",
    "title": "learn.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport words from '../client/i18n/locales/english/motivation.json';\n\ntest.describe('Learn - Unauthenticated user', () => {\n  test.use({ storageState: { cookies: [], origins: [] } });\n\ntest('the page should render correctly', async ({ page }) => {\n    await page.goto('/learn');\n\nawait expect(page).toHaveTitle(\n      'Learn to Code — For Free — Coding Courses for Busy People'\n    );\n\nawait expect(\n      page.getByRole('heading', {\n        level: 1,\n        name: \"Welcome to freeCodeCamp's curriculum.\"\n      })\n    ).toBeVisible();\n\nawait expect(\n      page.getByRole('link', { name: 'Sign in to save your progress' })\n    ).toBeVisible();\n  });\n});\n\ntest.describe('Learn - Authenticated user)', () => {\n  test('the page should render correctly', async ({ page }) => {\n    await page.goto('/learn');\n\nawait expect(page).toHaveTitle(\n      'Learn to Code — For Free — Coding Courses for Busy People'\n    );\n\nawait expect(\n      page.getByRole('heading', {\n        level: 1,\n        name: 'Welcome back, Full Stack User.'\n      })\n    ).toBeVisible();\n\nconst shownQuote = await page.getByTestId('random-quote').textContent();\n\nconst shownAuthorText = await page\n      .getByTestId('random-author')\n      .textContent();\n\nconst shownAuthor = shownAuthorText?.replace('- ', '');\n\nconst allMotivationalQuotes = words.motivationalQuotes.map(mq => mq.quote);\n    const allAuthors = words.motivationalQuotes.map(mq => mq.author);\n\nexpect(allMotivationalQuotes).toContain(shownQuote);\n    expect(allAuthors).toContain(shownAuthor);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1635,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\learn.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 370,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "827de511b031d67892bbe07f8c150846",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\legacy-editor.spec.ts",
    "source_type": "git_repo",
    "title": "legacy-editor.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport { focusEditor } from './utils/editor';\n\ntest.describe('Editor Shortcuts', () => {\n  test('Should add a new line if the user presses Alt+Enter', async ({\n    page,\n    isMobile\n  }) => {\n    await page.goto(\n      'learn/responsive-web-design/basic-html-and-html5/say-hello-to-html-elements'\n    );\n    await focusEditor({ page, isMobile });\n\nawait page.keyboard.press('Alt+Enter');\n    await expect(\n      page\n        .getByTestId('editor-container-indexhtml')\n        .getByText('<h1>Hello</h1>\\n')\n    ).toBeVisible();\n  });\n\ntest('Should not add a new line if the user presses Ctrl+Enter', async ({\n    page,\n    isMobile\n  }) => {\n    await page.goto(\n      'learn/responsive-web-design/basic-html-and-html5/say-hello-to-html-elements'\n    );\n    await focusEditor({ page, isMobile });\n\nawait page.keyboard.press('Control+Enter');\n    await expect(\n      page.getByTestId('editor-container-indexhtml').getByText('<h1>Hello</h1>')\n    ).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1032,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\legacy-editor.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 253,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "946bc7a02b1db80389ab4e4c6df597ec",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\link-ms-user.spec.ts",
    "source_type": "git_repo",
    "title": "link-ms-user.spec",
    "content": "import { execSync } from 'child_process';\n\nimport { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { alertToBeVisible } from './utils/alerts';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(\n    '/learn/foundational-c-sharp-with-microsoft/write-your-first-code-using-c-sharp/trophy-write-your-first-code-using-c-sharp'\n  );\n});\n\ntest.describe('Link MS user component (signed-out user)', () => {\n  test.use({ storageState: { cookies: [], origins: [] } });\n  test('should display the page content with a signin CTA', async ({\n    page\n  }) => {\n    await expect(\n      page.getByRole('heading', {\n        name: 'Trophy - Write Your First Code Using C#',\n        level: 1\n      })\n    ).toBeVisible();\n\nawait expect(\n      page.getByRole('heading', {\n        name: translations.learn.ms['link-header'],\n        level: 2\n      })\n    ).toBeVisible();\n\nawait expect(\n      page.getByText(translations.learn.ms['link-signin'])\n    ).toBeVisible();\n\n// There are 2 sign in button on the page: one in the navbar, and one in the page content\n    const signInButtons = await page\n      .getByRole('link', { name: translations.buttons['sign-in'] })\n      .all();\n    expect(signInButtons).toHaveLength(2);\n  });\n});\n\ntest.describe('Link MS user component (signed-in user)', () => {\n  test.afterEach(() => {\n    execSync('node ./tools/scripts/seed/seed-ms-username');\n  });\n\ntest(\"should recognize the user's MS account\", async ({ page }) => {\n    await expect(\n      page.getByRole('heading', {\n        name: 'Trophy - Write Your First Code Using C#',\n        level: 1\n      })\n    ).toBeVisible();\n\nawait expect(page.locator('main')).toHaveText(\n      /The Microsoft account with username \"certifieduser\" is currently linked to your freeCodeCamp account\\. If this is not your Microsoft username, remove the link\\./\n    );\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3947,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\link-ms-user.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "ae0152c98a9ec8f51be8dc59ad4b5d49",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\link-ms-user.spec.ts",
    "source_type": "git_repo",
    "title": "link-ms-user.spec",
    "content": "}) .all(); expect(signInButtons).toHaveLength(2); }); }); test.describe('Link MS user component (signed-in user)', () => { test.afterEach(() => { execSync('node ./tools/scripts/seed/seed-ms-username'); }); test(\"should recognize the user's MS account\", async ({ page }) => { await expect( page.getByRole('heading', { name: 'Trophy - Write Your First Code Using C#', level: 1 }) ).toBeVisible(); await expect(page.locator('main')).toHaveText( /The Microsoft account with username \"certifieduser\" is currently linked to your freeCodeCamp account\\. If this is not your Microsoft username, remove the link\\./ ); });\n\ntest('should allow the user to unlink their MS account and display a form for re-link', async ({\n    page\n  }) => {\n    const unlinkButton = page.getByRole('button', {\n      name: translations.buttons['unlink-account']\n    });\n    await expect(unlinkButton).toBeVisible();\n    await unlinkButton.click();\n\nawait alertToBeVisible(page, translations.flash.ms.transcript.unlinked);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3947,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\link-ms-user.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 230,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "fe9699da758bbd46b3548f04a36763fa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\link-ms-user.spec.ts",
    "source_type": "git_repo",
    "title": "link-ms-user.spec",
    "content": "name: 'Trophy - Write Your First Code Using C#', level: 1 }) ).toBeVisible(); await expect(page.locator('main')).toHaveText( /The Microsoft account with username \"certifieduser\" is currently linked to your freeCodeCamp account\\. If this is not your Microsoft username, remove the link\\./ ); }); test('should allow the user to unlink their MS account and display a form for re-link', async ({ page }) => { const unlinkButton = page.getByRole('button', { name: translations.buttons['unlink-account'] }); await expect(unlinkButton).toBeVisible(); await unlinkButton.click(); await alertToBeVisible(page, translations.flash.ms.transcript.unlinked);\n\nawait expect(\n      page.getByRole('heading', {\n        name: translations.learn.ms['link-header'],\n        level: 2\n      })\n    ).toBeVisible();\n    await expect(page.getByText(translations.learn.ms.unlinked)).toBeVisible();\n    await expect(\n      page.getByRole('listitem').filter({\n        hasText:\n          'Using a browser where you are logged into your Microsoft account, go to https://learn.microsoft.com/users/me/transcript'\n      })\n    ).toBeVisible();\n    await expect(\n      page\n        .getByRole('listitem')\n        .filter({ hasText: translations.learn.ms['link-li-2'] })\n    ).toBeVisible();\n    await expect(\n      page\n        .getByRole('listitem')\n        .filter({ hasText: translations.learn.ms['link-li-3'] })\n    ).toBeVisible();\n    await expect(\n      page\n        .getByRole('listitem')\n        .filter({ hasText: translations.learn.ms['link-li-4'] })\n    ).toBeVisible();\n    await expect(\n      page.getByRole('listitem').filter({\n        hasText:\n          'Paste the URL into the input below, it should look similar to this: https://learn.microsoft.com/LOCALE/users/USERNAME/transcript/ID'\n      })\n    ).toBeVisible();\n    await expect(\n      page\n        .getByRole('listitem')\n        .filter({ hasText: translations.learn.ms['link-li-6'] })\n    ).toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3947,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\link-ms-user.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "88fd67abc7d27e3f7a15b0da0cae5545",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\link-ms-user.spec.ts",
    "source_type": "git_repo",
    "title": "link-ms-user.spec",
    "content": "await expect( page.getByRole('listitem').filter({ hasText: 'Using a browser where you are logged into your Microsoft account, go to https://learn.microsoft.com/users/me/transcript' }) ).toBeVisible(); await expect( page .getByRole('listitem') .filter({ hasText: translations.learn.ms['link-li-2'] }) ).toBeVisible(); await expect( page .getByRole('listitem') .filter({ hasText: translations.learn.ms['link-li-3'] }) ).toBeVisible(); await expect( page .getByRole('listitem') .filter({ hasText: translations.learn.ms['link-li-4'] }) ).toBeVisible(); await expect( page.getByRole('listitem').filter({ hasText: 'Paste the URL into the input below, it should look similar to this: https://learn.microsoft.com/LOCALE/users/USERNAME/transcript/ID' }) ).toBeVisible(); await expect( page .getByRole('listitem') .filter({ hasText: translations.learn.ms['link-li-6'] }) ).toBeVisible();\n\nconst transcriptLinkInput = page.getByLabel(\n      translations.learn.ms['transcript-label']\n    );\n    await expect(transcriptLinkInput).toBeVisible();\n    await expect(transcriptLinkInput).toHaveAttribute(\n      'placeholder',\n      'https://learn.microsoft.com/en-us/users/username/transcript/transcriptId'\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3947,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\link-ms-user.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 294,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "783e2fb4fb928e1d36bc419bffcb3591",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\landing.spec.ts",
    "source_type": "git_repo",
    "title": "landing.spec",
    "content": "import { expect, Page, test } from '@playwright/test';\nimport intro from '../client/i18n/locales/english/intro.json';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { SuperBlocks } from '../shared/config/curriculum';\nimport { addGrowthbookCookie } from './utils/add-growthbook-cookie';\n\nconst landingPageElements = {\n  heading: 'landing-header',\n  callToAction: 'landing-big-cta',\n  certifications: 'certifications',\n  curriculumBtns: 'curriculum-map-button',\n  testimonials: 'testimonial-card',\n  landingPageImage: 'landing-page-figure',\n  faq: 'landing-page-faq',\n  jobs: 'More than <strong>100,000</strong> freeCodeCamp.org graduates have gotten <strong>jobs</strong> at tech companies including:'\n} as const;\n\nconst superBlocks = [\n  intro[SuperBlocks.FullStackDeveloper].title,\n  intro[SuperBlocks.A2English].title,\n  intro[SuperBlocks.B1English].title,\n  intro[SuperBlocks.TheOdinProject].title,\n  intro[SuperBlocks.CodingInterviewPrep].title,\n  intro[SuperBlocks.ProjectEuler].title,\n  intro[SuperBlocks.RosettaCode].title,\n  intro[SuperBlocks.RespWebDesignNew].title,\n  intro[SuperBlocks.JsAlgoDataStructNew].title,\n  intro[SuperBlocks.FrontEndDevLibs].title,\n  intro[SuperBlocks.DataVis].title,\n  intro[SuperBlocks.RelationalDb].title,\n  intro[SuperBlocks.BackEndDevApis].title,\n  intro[SuperBlocks.QualityAssurance].title,\n  intro[SuperBlocks.SciCompPy].title,\n  intro[SuperBlocks.DataAnalysisPy].title,\n  intro[SuperBlocks.InfoSec].title,\n  intro[SuperBlocks.MachineLearningPy].title,\n  intro[SuperBlocks.CollegeAlgebraPy].title,\n  intro[SuperBlocks.RespWebDesign].title,\n  intro[SuperBlocks.JsAlgoDataStruct].title,\n  intro[SuperBlocks.PythonForEverybody].title,\n  intro[SuperBlocks.FoundationalCSharp].title\n];\n\nasync function goToLandingPage(page: Page) {\n  await page.goto('/');\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7649,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\landing.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "888ec7bb3b917fb0cfb7b49ee23e0a4d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\landing.spec.ts",
    "source_type": "git_repo",
    "title": "landing.spec",
    "content": "import { addGrowthbookCookie } from './utils/add-growthbook-cookie'; const landingPageElements = { heading: 'landing-header', callToAction: 'landing-big-cta', certifications: 'certifications', curriculumBtns: 'curriculum-map-button', testimonials: 'testimonial-card', landingPageImage: 'landing-page-figure', faq: 'landing-page-faq', jobs: 'More than <strong>100,000</strong> freeCodeCamp.org graduates have gotten <strong>jobs</strong> at tech companies including:' } as const; const superBlocks = [ intro[SuperBlocks.FullStackDeveloper].title, intro[SuperBlocks.A2English].title, intro[SuperBlocks.B1English].title, intro[SuperBlocks.TheOdinProject].title, intro[SuperBlocks.CodingInterviewPrep].title, intro[SuperBlocks.ProjectEuler].title, intro[SuperBlocks.RosettaCode].title, intro[SuperBlocks.RespWebDesignNew].title, intro[SuperBlocks.JsAlgoDataStructNew].title, intro[SuperBlocks.FrontEndDevLibs].title, intro[SuperBlocks.DataVis].title, intro[SuperBlocks.RelationalDb].title, intro[SuperBlocks.BackEndDevApis].title, intro[SuperBlocks.QualityAssurance].title, intro[SuperBlocks.SciCompPy].title, intro[SuperBlocks.DataAnalysisPy].title, intro[SuperBlocks.InfoSec].title, intro[SuperBlocks.MachineLearningPy].title, intro[SuperBlocks.CollegeAlgebraPy].title, intro[SuperBlocks.RespWebDesign].title, intro[SuperBlocks.JsAlgoDataStruct].title, intro[SuperBlocks.PythonForEverybody].title, intro[SuperBlocks.FoundationalCSharp].title ]; async function goToLandingPage(page: Page) { await page.goto('/'); }\n\ntest.describe('Landing Top - Variation B', () => {\n  test.beforeEach(async ({ context, page }) => {\n    await addGrowthbookCookie({ context, variation: 'B' });\n    await goToLandingPage(page);\n  });\n\ntest('Main heading copy renders correctly', async ({ page }) => {\n    const bigHeading = page.getByTestId('big-heading-1-b');\n    await expect(bigHeading).toHaveText(\n      translations.landing['big-heading-1-b']\n    );\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7649,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\landing.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 496,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "2929e11077bcf422d55256e8aacb8928",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\landing.spec.ts",
    "source_type": "git_repo",
    "title": "landing.spec",
    "content": "intro[SuperBlocks.FullStackDeveloper].title, intro[SuperBlocks.A2English].title, intro[SuperBlocks.B1English].title, intro[SuperBlocks.TheOdinProject].title, intro[SuperBlocks.CodingInterviewPrep].title, intro[SuperBlocks.ProjectEuler].title, intro[SuperBlocks.RosettaCode].title, intro[SuperBlocks.RespWebDesignNew].title, intro[SuperBlocks.JsAlgoDataStructNew].title, intro[SuperBlocks.FrontEndDevLibs].title, intro[SuperBlocks.DataVis].title, intro[SuperBlocks.RelationalDb].title, intro[SuperBlocks.BackEndDevApis].title, intro[SuperBlocks.QualityAssurance].title, intro[SuperBlocks.SciCompPy].title, intro[SuperBlocks.DataAnalysisPy].title, intro[SuperBlocks.InfoSec].title, intro[SuperBlocks.MachineLearningPy].title, intro[SuperBlocks.CollegeAlgebraPy].title, intro[SuperBlocks.RespWebDesign].title, intro[SuperBlocks.JsAlgoDataStruct].title, intro[SuperBlocks.PythonForEverybody].title, intro[SuperBlocks.FoundationalCSharp].title ]; async function goToLandingPage(page: Page) { await page.goto('/'); } test.describe('Landing Top - Variation B', () => { test.beforeEach(async ({ context, page }) => { await addGrowthbookCookie({ context, variation: 'B' }); await goToLandingPage(page); }); test('Main heading copy renders correctly', async ({ page }) => { const bigHeading = page.getByTestId('big-heading-1-b'); await expect(bigHeading).toHaveText( translations.landing['big-heading-1-b'] ); });\n\ntest('Supporting copy renders correctly', async ({ page }) => {\n    const bigHeading = page.getByTestId('advance-career');\n    await expect(bigHeading).toHaveText(translations.landing['advance-career']);\n  });\n\ntest('Logo row copy renders correctly', async ({ page }) => {\n    const landingH2Heading = page.getByTestId('graduates-work');\n    await expect(landingH2Heading).toHaveText(\n      translations.landing['graduates-work'].replace(/<\\/?strong>/g, '')\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7649,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\landing.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "1acf6302045084d68eba044fc789838c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\landing.spec.ts",
    "source_type": "git_repo",
    "title": "landing.spec",
    "content": "{ test.beforeEach(async ({ context, page }) => { await addGrowthbookCookie({ context, variation: 'B' }); await goToLandingPage(page); }); test('Main heading copy renders correctly', async ({ page }) => { const bigHeading = page.getByTestId('big-heading-1-b'); await expect(bigHeading).toHaveText( translations.landing['big-heading-1-b'] ); }); test('Supporting copy renders correctly', async ({ page }) => { const bigHeading = page.getByTestId('advance-career'); await expect(bigHeading).toHaveText(translations.landing['advance-career']); }); test('Logo row copy renders correctly', async ({ page }) => { const landingH2Heading = page.getByTestId('graduates-work'); await expect(landingH2Heading).toHaveText( translations.landing['graduates-work'].replace(/<\\/?strong>/g, '') ); }); });\n\n/*\n *\n * not currently in use after https://github.com/freeCodeCamp/freeCodeCamp/pull/61359\n * bring back after we fix GB\n */\n\n// test.describe('Landing Top - Variation A', () => {\n//   test.beforeEach(async ({ context, page }) => {\n//     await addGrowthbookCookie({ context, variation: 'newA' });\n//     await goToLandingPage(page);\n//   });\n\n//   test('The headline renders correctly', async ({ page }) => {\n//     const landingHeading1 = page.getByTestId('landing-big-heading-1');\n//     await expect(landingHeading1).toHaveText(\n//       translations.landing['big-heading-1']\n//     );\n\n//     const landingHeading2 = page.getByTestId('landing-big-heading-2');\n//     await expect(landingHeading2).toHaveText(\n//       translations.landing['big-heading-2']\n//     );\n\n//     const landingHeading3 = page.getByTestId('landing-big-heading-3');\n//     await expect(landingHeading3).toHaveText(\n//       translations.landing['big-heading-3']\n//     );\n//   });\n\n//   test('Logo row copy renders correctly', async ({ page }) => {\n//     const landingH2Heading = page.getByTestId('h2-heading');\n//     await expect(landingH2Heading).toHaveText(\n//       translations.landing['h2-heading'].replace(/<\\/?strong>/g, '')\n//     );\n//   });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7649,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\landing.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "a444c655ba12c3483e7c2a51bfe4858c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\landing.spec.ts",
    "source_type": "git_repo",
    "title": "landing.spec",
    "content": "// test('The headline renders correctly', async ({ page }) => { // const landingHeading1 = page.getByTestId('landing-big-heading-1'); // await expect(landingHeading1).toHaveText( // translations.landing['big-heading-1'] // ); // const landingHeading2 = page.getByTestId('landing-big-heading-2'); // await expect(landingHeading2).toHaveText( // translations.landing['big-heading-2'] // ); // const landingHeading3 = page.getByTestId('landing-big-heading-3'); // await expect(landingHeading3).toHaveText( // translations.landing['big-heading-3'] // ); // }); // test('Logo row copy renders correctly', async ({ page }) => { // const landingH2Heading = page.getByTestId('h2-heading'); // await expect(landingH2Heading).toHaveText( // translations.landing['h2-heading'].replace(/<\\/?strong>/g, '') // ); // });\n\n//   test('Hero image should have  a description', async ({ isMobile, page }) => {\n//     const captionText = page.getByText(\n//       translations.landing['hero-img-description']\n//     );\n\n//     if (isMobile) {\n//       await expect(captionText).toBeHidden();\n//     } else {\n//       await expect(captionText).toBeVisible();\n//     }\n//   });\n// });\n\ntest.describe('Landing Page', () => {\n  test.beforeEach(async ({ page }) => {\n    await goToLandingPage(page);\n  });\n\ntest('The component Why learn with freeCodeCamp renders correctly', async ({\n    context,\n    page\n  }) => {\n    await addGrowthbookCookie({ context, variation: 'C' });\n    await goToLandingPage(page);\n    const h2Element = page.locator(\n      `h2:has-text(\"${translations.landing.benefits['heading']}\")`\n    );\n\nawait expect(h2Element).toBeVisible();\n  });\n\ntest('Call to action buttons should render correctly', async ({ page }) => {\n    const ctas = page.getByRole('link', {\n      name: translations.buttons['logged-in-cta-btn']\n    });\n    await expect(ctas).toHaveCount(4);\n    for (const cta of await ctas.all()) {\n      await expect(cta).toBeVisible();\n    }\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7649,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\landing.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "8e9057338a78c821ceb72f865f881256",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\landing.spec.ts",
    "source_type": "git_repo",
    "title": "landing.spec",
    "content": "{ test.beforeEach(async ({ page }) => { await goToLandingPage(page); }); test('The component Why learn with freeCodeCamp renders correctly', async ({ context, page }) => { await addGrowthbookCookie({ context, variation: 'C' }); await goToLandingPage(page); const h2Element = page.locator( `h2:has-text(\"${translations.landing.benefits['heading']}\")` ); await expect(h2Element).toBeVisible(); }); test('Call to action buttons should render correctly', async ({ page }) => { const ctas = page.getByRole('link', { name: translations.buttons['logged-in-cta-btn'] }); await expect(ctas).toHaveCount(4); for (const cta of await ctas.all()) { await expect(cta).toBeVisible(); } });\n\ntest('Hero image should have an alt', async ({ isMobile, page }) => {\n    const campersImage = page.getByAltText(\n      translations.landing['hero-img-alt']\n    );\n\nif (isMobile) {\n      await expect(campersImage).toBeHidden();\n    } else {\n      await expect(campersImage).toBeVisible();\n    }\n  });\n\ntest('Has 5 brand logos', async ({ page }) => {\n    const logos = page.getByTestId('brand-logo-container').locator('svg');\n    await expect(logos).toHaveCount(5);\n    for (const logo of await logos.all()) {\n      await expect(logo).toBeVisible();\n    }\n  });\n\ntest('The campers landing page figure is visible on desktop and hidden on mobile view', async ({\n    page,\n    isMobile\n  }) => {\n    const landingPageImage = page.getByTestId('landing-page-figure');\n    if (isMobile) {\n      await expect(landingPageImage).toBeHidden();\n    } else {\n      await expect(landingPageImage).toBeVisible();\n    }\n  });\n\ntest('Testimonial section has a header', async ({ page }) => {\n    const testimonialsHeader = page.getByTestId('testimonials-section-header');\n    await expect(testimonialsHeader).toHaveText(\n      translations.landing.testimonials['heading']\n    );\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7649,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\landing.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 445,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "f9584134245a756516ac7c79451e1e88",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\landing.spec.ts",
    "source_type": "git_repo",
    "title": "landing.spec",
    "content": "=> { const logos = page.getByTestId('brand-logo-container').locator('svg'); await expect(logos).toHaveCount(5); for (const logo of await logos.all()) { await expect(logo).toBeVisible(); } }); test('The campers landing page figure is visible on desktop and hidden on mobile view', async ({ page, isMobile }) => { const landingPageImage = page.getByTestId('landing-page-figure'); if (isMobile) { await expect(landingPageImage).toBeHidden(); } else { await expect(landingPageImage).toBeVisible(); } }); test('Testimonial section has a header', async ({ page }) => { const testimonialsHeader = page.getByTestId('testimonials-section-header'); await expect(testimonialsHeader).toHaveText( translations.landing.testimonials['heading'] ); });\n\ntest('Testimonial endorser people have images, occupation, location and testimony visible', async ({\n    page\n  }) => {\n    const cards = page.getByTestId('testimonial-card');\n    await expect(cards).toHaveCount(3);\n    for (const card of await cards.all()) {\n      await expect(card).toBeVisible();\n      await expect(\n        card.getByTestId('testimonials-endorser-image-container')\n      ).toBeVisible();\n      await expect(\n        card.getByTestId('testimonials-endorser-location')\n      ).toBeVisible();\n      await expect(\n        card.getByTestId('testimonials-endorser-occupation')\n      ).toBeVisible();\n      await expect(\n        card.getByTestId('testimonials-endorser-testimony')\n      ).toBeVisible();\n    }\n  });\n\ntest('Links to all superblocks in order', async ({ page }) => {\n    const curriculumBtns = page.getByTestId(landingPageElements.curriculumBtns);\n    await expect(curriculumBtns).toHaveCount(superBlocks.length);\n    for (let index = 0; index < superBlocks.length; index++) {\n      const btn = curriculumBtns.nth(index);\n      const link = btn.getByRole('link', { name: superBlocks[index] });\n      await expect(link).toBeVisible();\n    }\n  });\n\ntest('Has FAQ section', async ({ page }) => {\n    const faqs = page.getByTestId(landingPageElements.faq);\n    await expect(faqs).toHaveCount(9);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7649,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\landing.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "909578f392e753b00432c9d23d405ee5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\lower-jaw.spec.ts",
    "source_type": "git_repo",
    "title": "lower-jaw.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport { clearEditor, focusEditor, getEditors } from './utils/editor';\nimport { signout } from './utils/logout';\n\ntest('Check the initial states of submit button and \"check your code\" button', async ({\n  page\n}) => {\n  await page.goto(\n    '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3'\n  );\n  const checkButton = page.getByTestId('lowerJaw-check-button');\n\nconst submitButton = page.getByTestId('lowerJaw-submit-button');\n  const checkButtonState = await checkButton.getAttribute('aria-hidden');\n  const submitButtonState = await submitButton.getAttribute('aria-hidden');\n  expect(checkButtonState).toBe(null);\n  expect(submitButtonState).toBe('true');\n});\n\ntest('Click on the \"check your code\" button', async ({ page }) => {\n  await page.goto(\n    '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3'\n  );\n  const checkButton = page.getByRole('button', { name: 'Check Your Code' });\n\nawait checkButton.click();\n\nconst failing = page.getByTestId('lowerJaw-failing-test-feedback');\n  const hint = page.getByTestId('lowerJaw-failing-hint');\n  await expect(failing).toBeVisible();\n  await expect(hint).toBeVisible();\n});\n\ntest('Resets the lower jaw when prompted', async ({ page }) => {\n  await page.goto(\n    '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3'\n  );\n  const checkButton = page.getByRole('button', { name: 'Check Your Code' });\n\nawait checkButton.click();\n\nconst failing = page.getByTestId('lowerJaw-failing-test-feedback');\n  const hint = page.getByTestId('lowerJaw-failing-hint');\n  await expect(failing).toBeVisible();\n  await expect(hint).toBeVisible();\n\nawait page.getByRole('button', { name: 'Reset' }).click();\n\nawait expect(\n    page.getByRole('dialog', { name: 'Reset this lesson?' })\n  ).toBeVisible();\n\nawait page.getByRole('button', { name: 'Reset this lesson' }).click();\n  await expect(failing).not.toBeVisible();\n  await expect(hint).not.toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7471,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\lower-jaw.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "da07d32eb48fd8881ea1ef4f20cac920",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\lower-jaw.spec.ts",
    "source_type": "git_repo",
    "title": "lower-jaw.spec",
    "content": "hint = page.getByTestId('lowerJaw-failing-hint'); await expect(failing).toBeVisible(); await expect(hint).toBeVisible(); }); test('Resets the lower jaw when prompted', async ({ page }) => { await page.goto( '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3' ); const checkButton = page.getByRole('button', { name: 'Check Your Code' }); await checkButton.click(); const failing = page.getByTestId('lowerJaw-failing-test-feedback'); const hint = page.getByTestId('lowerJaw-failing-hint'); await expect(failing).toBeVisible(); await expect(hint).toBeVisible(); await page.getByRole('button', { name: 'Reset' }).click(); await expect( page.getByRole('dialog', { name: 'Reset this lesson?' }) ).toBeVisible(); await page.getByRole('button', { name: 'Reset this lesson' }).click(); await expect(failing).not.toBeVisible(); await expect(hint).not.toBeVisible();\n\nawait expect(checkButton).toBeVisible();\n});\n\ntest('Checks hotkeys when instruction is focused', async ({\n  page,\n  browserName\n}) => {\n  await page.goto(\n    '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3'\n  );\n  const editor = getEditors(page);\n  const checkButton = page.getByRole('button', { name: 'Check Your Code' });\n  const description = page.locator('#description');\n\nawait editor.fill(\n    '<h2>Cat Photos</h2>\\n<p>Everyone loves cute cats online!</p>'\n  );\n\nawait description.click();\n\nif (browserName === 'webkit') {\n    await page.keyboard.press('Meta+Enter');\n  } else {\n    await page.keyboard.press('Control+Enter');\n  }\n\nawait expect(checkButton).not.toBeFocused();\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7471,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\lower-jaw.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 396,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "27b659f977c77c88bd34cf61788182fb",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\lower-jaw.spec.ts",
    "source_type": "git_repo",
    "title": "lower-jaw.spec",
    "content": "page.getByRole('button', { name: 'Reset this lesson' }).click(); await expect(failing).not.toBeVisible(); await expect(hint).not.toBeVisible(); await expect(checkButton).toBeVisible(); }); test('Checks hotkeys when instruction is focused', async ({ page, browserName }) => { await page.goto( '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3' ); const editor = getEditors(page); const checkButton = page.getByRole('button', { name: 'Check Your Code' }); const description = page.locator('#description'); await editor.fill( '<h2>Cat Photos</h2>\\n<p>Everyone loves cute cats online!</p>' ); await description.click(); if (browserName === 'webkit') { await page.keyboard.press('Meta+Enter'); } else { await page.keyboard.press('Control+Enter'); } await expect(checkButton).not.toBeFocused(); });\n\ntest('Focuses on the submit button after tests passed', async ({\n  page,\n  browserName,\n  isMobile\n}) => {\n  await page.goto(\n    '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3'\n  );\n  const editor = getEditors(page);\n  const checkButton = page.getByRole('button', { name: 'Check Your Code' });\n  const submitButton = page.getByRole('button', {\n    name: 'Submit and go to next challenge'\n  });\n  await focusEditor({ page, isMobile });\n  await clearEditor({ page, browserName });\n\nawait editor.fill(\n    '<h2>Cat Photos</h2>\\n<p>Everyone loves cute cats online!</p>'\n  );\n  await checkButton.click();\n\nawait expect(submitButton).toBeFocused();\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7471,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\lower-jaw.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 373,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "eab2e3dbf01655a0b34c7157c426b8e0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\lower-jaw.spec.ts",
    "source_type": "git_repo",
    "title": "lower-jaw.spec",
    "content": "page.keyboard.press('Control+Enter'); } await expect(checkButton).not.toBeFocused(); }); test('Focuses on the submit button after tests passed', async ({ page, browserName, isMobile }) => { await page.goto( '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3' ); const editor = getEditors(page); const checkButton = page.getByRole('button', { name: 'Check Your Code' }); const submitButton = page.getByRole('button', { name: 'Submit and go to next challenge' }); await focusEditor({ page, isMobile }); await clearEditor({ page, browserName }); await editor.fill( '<h2>Cat Photos</h2>\\n<p>Everyone loves cute cats online!</p>' ); await checkButton.click(); await expect(submitButton).toBeFocused(); });\n\ntest('Prompts unauthenticated user to sign in to save progress', async ({\n  page,\n  browserName,\n  isMobile\n}) => {\n  await page.goto(\n    '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3'\n  );\n  await signout(page);\n  await page.reload();\n  const editor = getEditors(page);\n  const checkButton = page.getByRole('button', { name: 'Check Your Code' });\n  const loginButton = page.getByRole('link', {\n    name: 'Sign in to save your progress'\n  });\n  await focusEditor({ page, isMobile });\n  await clearEditor({ page, browserName });\n\nawait editor.fill(\n    '<h2>Cat Photos</h2>\\n<p>Everyone loves cute cats online!</p>'\n  );\n\nawait checkButton.click();\n\nawait expect(loginButton).toBeVisible();\n\nawait loginButton.click();\n\nawait page.goBack();\n\nawait expect(loginButton).not.toBeVisible();\n});\n\ntest('Should render UI correctly', async ({ page }) => {\n  await page.goto(\n    '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3'\n  );\n  const codeCheckButton = page.getByRole('button', {\n    name: 'Check Your Code'\n  });\n  const lowerJawTips = page.getByTestId('failing-test-feedback');\n  await expect(codeCheckButton).toBeVisible();\n  await expect(lowerJawTips).toHaveCount(0);\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7471,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\lower-jaw.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "459d75b73091ecb83072f6984e83c3bd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\lower-jaw.spec.ts",
    "source_type": "git_repo",
    "title": "lower-jaw.spec",
    "content": "const loginButton = page.getByRole('link', { name: 'Sign in to save your progress' }); await focusEditor({ page, isMobile }); await clearEditor({ page, browserName }); await editor.fill( '<h2>Cat Photos</h2>\\n<p>Everyone loves cute cats online!</p>' ); await checkButton.click(); await expect(loginButton).toBeVisible(); await loginButton.click(); await page.goBack(); await expect(loginButton).not.toBeVisible(); }); test('Should render UI correctly', async ({ page }) => { await page.goto( '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3' ); const codeCheckButton = page.getByRole('button', { name: 'Check Your Code' }); const lowerJawTips = page.getByTestId('failing-test-feedback'); await expect(codeCheckButton).toBeVisible(); await expect(lowerJawTips).toHaveCount(0); });\n\ntest('Should display the text of the check code button accordingly based on device type and screen size', async ({\n  page,\n  isMobile,\n  browserName\n}) => {\n  await page.goto(\n    '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3'\n  );\n  if (isMobile) {\n    await expect(\n      page.getByRole('button', { name: 'Check Your Code', exact: true })\n    ).toBeVisible();\n  } else if (browserName === 'webkit') {\n    await expect(\n      page.getByRole('button', { name: 'Check Your Code (Command + Enter)' })\n    ).toBeVisible();\n  } else {\n    await expect(\n      page.getByRole('button', { name: 'Check Your Code (Ctrl + Enter)' })\n    ).toBeVisible();\n  }\n});\n\ntest('should display the text of submit and go to next challenge button accordingly based on device type', async ({\n  page,\n  isMobile,\n  browserName\n}) => {\n  await page.goto(\n    '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3'\n  );\n  const editor = getEditors(page);\n  const checkButton = page.getByRole('button', { name: 'Check Your Code' });\n\nawait focusEditor({ page, isMobile });\n  await clearEditor({ page, browserName });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7471,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\lower-jaw.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "71ed640abcfa2f371e3b981e15b3f9ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\lower-jaw.spec.ts",
    "source_type": "git_repo",
    "title": "lower-jaw.spec",
    "content": "(Command + Enter)' }) ).toBeVisible(); } else { await expect( page.getByRole('button', { name: 'Check Your Code (Ctrl + Enter)' }) ).toBeVisible(); } }); test('should display the text of submit and go to next challenge button accordingly based on device type', async ({ page, isMobile, browserName }) => { await page.goto( '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3' ); const editor = getEditors(page); const checkButton = page.getByRole('button', { name: 'Check Your Code' }); await focusEditor({ page, isMobile }); await clearEditor({ page, browserName });\n\nawait editor.fill(\n    '<h2>Cat Photos</h2>\\n<p>Everyone loves cute cats online!</p>'\n  );\n\nawait checkButton.click();\n\nif (isMobile) {\n    await expect(\n      page.getByRole('button', {\n        name: 'Submit and go to next challenge',\n        exact: true\n      })\n    ).toBeVisible();\n  } else if (browserName === 'webkit') {\n    await expect(\n      page.getByRole('button', {\n        name: 'Submit and go to next challenge (Command + Enter)'\n      })\n    ).toBeVisible();\n  } else {\n    await expect(\n      page.getByRole('button', {\n        name: 'Submit and go to next challenge (Ctrl + Enter)'\n      })\n    ).toBeVisible();\n  }\n});\n\ntest('Hint text should not contain placeholders `fcc-expected`', async ({\n  page,\n  isMobile,\n  browserName\n}) => {\n  await page.goto(\n    'learn/2022/responsive-web-design/learn-css-transforms-by-building-a-penguin/step-4'\n  );\n  const editor = getEditors(page);\n  const checkButton = page.getByRole('button', { name: 'Check Your Code' });\n  await focusEditor({ page, isMobile });\n  await clearEditor({ page, browserName });\n\nawait editor.fill(\n    'body{background:linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));margin:0;padding:0;width:5%;height:100vh}'\n  );\n  await checkButton.click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7471,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\lower-jaw.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 474,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "fb0394b5529a6a9a5c09e6b5bb20c234",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\lower-jaw.spec.ts",
    "source_type": "git_repo",
    "title": "lower-jaw.spec",
    "content": "} else { await expect( page.getByRole('button', { name: 'Submit and go to next challenge (Ctrl + Enter)' }) ).toBeVisible(); } }); test('Hint text should not contain placeholders `fcc-expected`', async ({ page, isMobile, browserName }) => { await page.goto( 'learn/2022/responsive-web-design/learn-css-transforms-by-building-a-penguin/step-4' ); const editor = getEditors(page); const checkButton = page.getByRole('button', { name: 'Check Your Code' }); await focusEditor({ page, isMobile }); await clearEditor({ page, browserName }); await editor.fill( 'body{background:linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));margin:0;padding:0;width:5%;height:100vh}' ); await checkButton.click();\n\nconst failingHint = page.getByTestId('lowerJaw-failing-hint');\n  const hintDescriptionElement = failingHint.locator('.hint-description');\n  const hintDescription = hintDescriptionElement.locator('p');\n  await expect(hintDescription).toContainText(\n    'You should give body a width of 100%, but found 5%',\n    { useInnerText: true }\n  );\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7471,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\lower-jaw.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 269,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "44ec3d8ec0ecba7a117c22df92b536e8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\map.spec.ts",
    "source_type": "git_repo",
    "title": "map.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto('/learn');\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3060,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\map.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 44,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "d44fb5f7873e6d374295693c64e63834",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\map.spec.ts",
    "source_type": "git_repo",
    "title": "map.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto('/learn');\n});const LANDING_PAGE_LINKS = [\n  {\n    slug: '2022/responsive-web-design',\n    name: 'Responsive Web Design'\n  },\n  {\n    slug: 'javascript-algorithms-and-data-structures-v8',\n    name: 'JavaScript Algorithms and Data Structures'\n  },\n  {\n    slug: 'front-end-development-libraries',\n    name: 'Front End Development Libraries'\n  },\n  { slug: 'data-visualization', name: 'Data Visualization' },\n  { slug: 'relational-database', name: 'Relational Database' },\n  {\n    slug: 'back-end-development-and-apis',\n    name: 'Back End Development and APIs'\n  },\n  { slug: 'quality-assurance', name: 'Quality Assurance' },\n  {\n    slug: 'scientific-computing-with-python',\n    name: 'Scientific Computing with Python'\n  },\n  {\n    slug: 'data-analysis-with-python',\n    name: 'Data Analysis with Python'\n  },\n  { slug: 'information-security', name: 'Information Security' },\n  {\n    slug: 'machine-learning-with-python',\n    name: 'Machine Learning with Python'\n  },\n  {\n    slug: 'college-algebra-with-python',\n    name: 'College Algebra with Python'\n  },\n  {\n    slug: 'full-stack-developer',\n    name: 'Certified Full Stack Developer Curriculum'\n  },\n  {\n    slug: 'a2-english-for-developers',\n    name: 'A2 English for Developers (Beta) Certification'\n  },\n  {\n    slug: 'b1-english-for-developers',\n    name: 'B1 English for Developers (Beta) Certification'\n  },\n  {\n    slug: 'foundational-c-sharp-with-microsoft',\n    name: 'Free Foundational C# with Microsoft Certification'\n  },\n  { slug: 'the-odin-project', name: 'The Odin Project - freeCodeCamp Remix' },\n  { slug: 'coding-interview-prep', name: 'Coding Interview Prep' },\n  { slug: 'project-euler', name: 'Project Euler' },\n  { slug: 'rosetta-code', name: 'Rosetta Code' },\n  {\n    slug: 'responsive-web-design',\n    name: 'Legacy Responsive Web Design Challenges'\n  },\n  {\n    slug: 'javascript-algorithms-and-data-structures',\n    name: 'Legacy JavaScript Algorithms and Data Structures'\n  },\n  { slug: 'python-for-everybody', name: 'Legacy Python for Everybody' }\n];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3060,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\map.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 569,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5cc380f962fdd43bcc4c2a8580cced92",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\map.spec.ts",
    "source_type": "git_repo",
    "title": "map.spec",
    "content": "}, { slug: 'foundational-c-sharp-with-microsoft', name: 'Free Foundational C# with Microsoft Certification' }, { slug: 'the-odin-project', name: 'The Odin Project - freeCodeCamp Remix' }, { slug: 'coding-interview-prep', name: 'Coding Interview Prep' }, { slug: 'project-euler', name: 'Project Euler' }, { slug: 'rosetta-code', name: 'Rosetta Code' }, { slug: 'responsive-web-design', name: 'Legacy Responsive Web Design Challenges' }, { slug: 'javascript-algorithms-and-data-structures', name: 'Legacy JavaScript Algorithms and Data Structures' }, { slug: 'python-for-everybody', name: 'Legacy Python for Everybody' } ];\n\ntest.describe('Map Component', () => {\n  test('should render correctly', async ({ page }) => {\n    await expect(\n      page.getByText(translations.landing['core-certs-heading'])\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.landing['professional-certs-heading'])\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.landing['interview-prep-heading'])\n    ).toBeVisible();\n    const curriculumBtns = page.getByTestId('curriculum-map-button');\n    await expect(curriculumBtns).toHaveCount(23);\n\nfor (const { name, slug } of LANDING_PAGE_LINKS) {\n      const superblockLink = page.getByRole('link', {\n        exact: true,\n        name\n      });\n\nawait expect(superblockLink).toBeVisible();\n      await expect(superblockLink).toHaveAttribute('href', `/learn/${slug}/`);\n    }\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3060,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\map.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 352,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "377f4a2fd9ed913fdbc1854454936cc6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\mobile-layout.spec.ts",
    "source_type": "git_repo",
    "title": "mobile-layout.spec",
    "content": "import { test, expect } from '@playwright/test';\n\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.describe('Classic challenge - 5 tabs mobile layout component', () => {\n  test.skip(\n    ({ isMobile }) => isMobile === false,\n    'Skip testing on desktop as this component is only used for mobile'\n  );\n\ntest('The page has mobile layout with \"Instruction\", \"Code\", \"Console\", \"Preview\", \"Portal Preview\" tabs', async ({\n    page\n  }) => {\n    await page.goto(\n      'learn/2022/responsive-web-design/build-a-survey-form-project/build-a-survey-form'\n    );\n\nconst tabs = page.getByRole('tablist');\n    await expect(tabs).toBeVisible();\n\nconst instructions = page.getByRole('tab', {\n      name: translations.learn['editor-tabs'].instructions\n    });\n    await expect(instructions).toBeVisible();\n    const code = page.getByRole('tab', {\n      name: translations.learn['editor-tabs'].code\n    });\n    await expect(code).toBeVisible();\n    const console = page.getByRole('tab', {\n      name: translations.learn['editor-tabs'].console\n    });\n    await expect(console).toBeVisible();\n    const preview = page.getByRole('tab', {\n      name: translations.learn['editor-tabs'].preview\n    });\n    await expect(preview).toBeVisible();\n    const portalButton = page.getByRole('button', {\n      name: translations.aria['move-preview-to-new-window']\n    });\n    await expect(portalButton).toBeVisible();\n\nconst help = page.getByRole('button', { name: translations.buttons.help });\n    await expect(help).toBeVisible();\n    const save = page.getByRole('button', { name: translations.buttons.save });\n    await expect(save).toBeVisible();\n    const run = page.getByRole('button', { name: translations.buttons.run });\n    await expect(run).toBeVisible();\n  });\n});\n\ntest.describe('Classic challenge - 3 tabs mobile layout component', () => {\n  test.skip(\n    ({ isMobile }) => isMobile === false,\n    'Skip testing on desktop as this component is only used for mobile'\n  );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3165,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\mobile-layout.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 449,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d54daf406a21044edc85394520d6f654",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\mobile-layout.spec.ts",
    "source_type": "git_repo",
    "title": "mobile-layout.spec",
    "content": "await expect(preview).toBeVisible(); const portalButton = page.getByRole('button', { name: translations.aria['move-preview-to-new-window'] }); await expect(portalButton).toBeVisible(); const help = page.getByRole('button', { name: translations.buttons.help }); await expect(help).toBeVisible(); const save = page.getByRole('button', { name: translations.buttons.save }); await expect(save).toBeVisible(); const run = page.getByRole('button', { name: translations.buttons.run }); await expect(run).toBeVisible(); }); }); test.describe('Classic challenge - 3 tabs mobile layout component', () => { test.skip( ({ isMobile }) => isMobile === false, 'Skip testing on desktop as this component is only used for mobile' );\n\ntest('The page has mobile layout with \"Instruction\", \"Code\", \"Console\" tabs', async ({\n    page\n  }) => {\n    await page.goto(\n      'learn/javascript-algorithms-and-data-structures/basic-javascript/use-recursion-to-create-a-range-of-numbers'\n    );\n\nconst tabs = page.getByRole('tablist');\n    await expect(tabs).toBeVisible();\n\nconst instructions = page.getByRole('tab', {\n      name: translations.learn['editor-tabs'].instructions\n    });\n    await expect(instructions).toBeVisible();\n    const code = page.getByRole('tab', {\n      name: translations.learn['editor-tabs'].code\n    });\n    await expect(code).toBeVisible();\n    const console = page.getByRole('tab', {\n      name: translations.learn['editor-tabs'].console\n    });\n    await expect(console).toBeVisible();\n\nconst help = page.getByRole('button', { name: translations.buttons.help });\n    await expect(help).toBeVisible();\n    const reset = page.getByRole('button', {\n      name: translations.buttons.reset\n    });\n    await expect(reset).toBeVisible();\n    const run = page.getByRole('button', { name: translations.buttons.run });\n    await expect(run).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3165,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\mobile-layout.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 411,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "cb2610859cb5ba2a58f4d507efddaa60",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\ms-trophy-show.spec.ts",
    "source_type": "git_repo",
    "title": "ms-trophy-show.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\nconst verifyTrophyButtonText = translations.buttons['verify-trophy'];\nconst askForHelpButtonText = translations.buttons['ask-for-help'];\ntest.use({ storageState: { cookies: [], origins: [] } });\ntest.beforeEach(async ({ page }) => {\n  await page.goto(\n    '/learn/foundational-c-sharp-with-microsoft/write-your-first-code-using-c-sharp/trophy-write-your-first-code-using-c-sharp'\n  );\n});\n\ntest('the page should render with correct title and description', async ({\n  page\n}) => {\n  await expect(page).toHaveTitle(\n    'Write Your First Code Using C# - Trophy - Write Your First Code Using C# | Learn | freeCodeCamp.org'\n  );\n  const title = page.getByTestId('challenge-title');\n  await expect(title).toBeVisible();\n  await expect(title).toContainText('Trophy - Write Your First Code Using C#');\n\nconst description = page.getByTestId('challenge-description');\n  await expect(description).toBeVisible();\n});\n\ntest('Correct Verify Trophy button', async ({ page }) => {\n  const askHelpButton = page.getByRole('button', {\n    name: verifyTrophyButtonText\n  });\n  await expect(askHelpButton).toBeVisible();\n  await expect(askHelpButton).toHaveText(verifyTrophyButtonText);\n  await expect(askHelpButton).toBeDisabled();\n});\n\ntest('Correct Ask for help button', async ({ page }) => {\n  const checkAnswerButton = page.getByRole('button', {\n    name: askForHelpButtonText\n  });\n  await expect(checkAnswerButton).toBeVisible();\n  await expect(checkAnswerButton).toContainText(askForHelpButtonText);\n\nawait checkAnswerButton.click();\n  await expect(\n    page.getByRole('heading', {\n      name: translations.buttons['ask-for-help'],\n      exact: true\n    })\n  ).toBeVisible();\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1799,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\ms-trophy-show.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 408,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7ffe79f6e5c757a61b62e661ba387996",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\multifile-cert-projects.spec.ts",
    "source_type": "git_repo",
    "title": "multifile-cert-projects.spec",
    "content": "import { execSync } from 'child_process';\nimport { test, expect } from '@playwright/test';\nimport { clearEditor, focusEditor } from './utils/editor';\ntest.describe('multifileCertProjects', () => {\n  test.beforeEach(async ({ page }) => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n    await page.goto(\n      'learn/2022/responsive-web-design/build-a-tribute-page-project/build-a-tribute-page'\n    );\n  });\n\nconst success =\n    /Your code was saved to the database\\. It will be here when you return\\./;\n  const tooFast =\n    /Slow Down! Your code was not saved\\. Try again in a few seconds\\./;\n\ntest('should save and reload user code', async ({\n    page,\n    isMobile,\n    browserName\n  }) => {\n    await focusEditor({ page, isMobile });\n    await clearEditor({ page, browserName });\n\nawait page.keyboard.type('save1text');\n    await expect(page.getByText('save1text')).toBeVisible();\n\nawait page\n      .getByRole('button', { name: !isMobile ? 'Save your Code' : 'Save' })\n      .click();\n\nawait expect(page.getByTestId('flash-message')).toContainText(success);\n\nawait page.reload();\n\nawait focusEditor({ page, isMobile });\n\nawait expect(page.getByText('save1text')).toBeVisible();\n  });\n\ntest('should save using ctrl+s hotkey and persist through navigation', async ({\n    page,\n    isMobile,\n    browserName\n  }) => {\n    test.skip(isMobile);\n\nawait focusEditor({ page, isMobile });\n    await clearEditor({ page, browserName });\n\nawait page.keyboard.type('save2text');\n    await expect(page.getByText('save2text')).toBeVisible();\n\nawait page.keyboard.down('Control');\n    await page.keyboard.press('KeyS');\n\nawait expect(page.getByTestId('flash-message')).toContainText(success);\n\nawait page.getByRole('button', { name: 'Close' }).click();\n\nawait expect(page.getByText('save2text')).toBeVisible();\n\nawait page.reload();\n\nawait expect(page.getByText('save2text')).toBeVisible();\n    await focusEditor({ page, isMobile });\n\nawait page.keyboard.down('Control');\n    await page.keyboard.press('KeyS');\n\nawait expect(page.getByTestId('flash-message')).toContainText(tooFast);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2182,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\multifile-cert-projects.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 495,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5d817fc0dc12cc89214d751333718731",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\navigation-from-last-challenge.spec.ts",
    "source_type": "git_repo",
    "title": "navigation-from-last-challenge.spec",
    "content": "import { test } from '@playwright/test';\nimport solution from './fixtures/build-a-personal-portfolio-webpage.json';\nimport { clearEditor, focusEditor } from './utils/editor';\nimport { isMacOS } from './utils/user-agent';\n\n// middle of block\nconst challenge1 = {\n  url: '/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-javascript-calculator',\n  nextUrl:\n    '/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-25--5-clock'\n};\n\n// last in superblock\nconst challenge2 = {\n  url: '/learn/college-algebra-with-python/build-a-data-graph-explorer-project/build-a-data-graph-explorer',\n  nextUrl:\n    '/learn/college-algebra-with-python/#build-a-data-graph-explorer-project'\n};\n\nconst rwdChallenge = {\n  url: '/learn/2022/responsive-web-design/build-a-personal-portfolio-webpage-project/build-a-personal-portfolio-webpage',\n  nextUrl:\n    '/learn/2022/responsive-web-design/#build-a-personal-portfolio-webpage-project'\n};\ntest.describe('Navigation from the middle or end (URL solution)', () => {\n  test('In the middle of a block should take you to the next challenge', async ({\n    page\n  }) => {\n    await page.goto(challenge1.url);\n    await page\n      .getByRole('textbox', { name: 'solution' })\n      .fill('https://example.com');\n    await page.keyboard.press('Enter');\n    await page\n      .getByRole('button', { name: 'Submit and go to next challenge' })\n      .click();\n    await page.waitForURL(challenge1.nextUrl);\n  });\n\ntest('at the end of a superblock should take you to the superblock page with the current block hash', async ({\n    page\n  }) => {\n    await page.goto(challenge2.url);\n    await page\n      .getByRole('textbox', { name: 'solution' })\n      .fill('https://example.com');\n    await page.keyboard.press('Enter');\n    await page\n      .getByRole('button', { name: 'Submit and go to next challenge' })\n      .click();\n    await page.waitForURL(challenge2.nextUrl);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3032,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\navigation-from-last-challenge.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9f00b48925cd82c1fb3ea8224b771518",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\navigation-from-last-challenge.spec.ts",
    "source_type": "git_repo",
    "title": "navigation-from-last-challenge.spec",
    "content": "{ name: 'solution' }) .fill('https://example.com'); await page.keyboard.press('Enter'); await page .getByRole('button', { name: 'Submit and go to next challenge' }) .click(); await page.waitForURL(challenge1.nextUrl); }); test('at the end of a superblock should take you to the superblock page with the current block hash', async ({ page }) => { await page.goto(challenge2.url); await page .getByRole('textbox', { name: 'solution' }) .fill('https://example.com'); await page.keyboard.press('Enter'); await page .getByRole('button', { name: 'Submit and go to next challenge' }) .click(); await page.waitForURL(challenge2.nextUrl); }); });\n\ntest.describe('Should take you to the next superblock (with editor solution)', () => {\n  test.skip(\n    ({ browserName }) => browserName !== 'chromium',\n    'Only chromium allows us to use the clipboard API.'\n  );\n  test('at the end of a superblock should take you to the superblock page with the current block hash', async ({\n    page,\n    isMobile,\n    browserName,\n    context\n  }) => {\n    await context.grantPermissions(['clipboard-read', 'clipboard-write']);\n    await page.goto(rwdChallenge.url);\n    await focusEditor({ page, isMobile });\n    await clearEditor({ page, browserName });\n\nawait page.evaluate(\n      async solution => await navigator.clipboard.writeText(solution.content),\n      solution\n    );\n\nif (isMacOS) {\n      await page.keyboard.press('Meta+v');\n    } else {\n      await page.keyboard.press('Control+v');\n    }\n\nawait page.keyboard.press('Control+Enter');\n\nawait page\n      .getByRole('button', { name: 'Submit and go to next challenge' })\n      .click();\n    await page.waitForURL(rwdChallenge.nextUrl);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3032,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\navigation-from-last-challenge.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 401,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "f39dd1150e8a50ca0774ab81896f5db1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\multifile-editor.spec.ts",
    "source_type": "git_repo",
    "title": "multifile-editor.spec",
    "content": "import { test, expect } from '@playwright/test';\n\nimport { clearEditor, focusEditor, getEditors } from './utils/editor';\nimport solution from './fixtures/learn-basic-css-by-building-a-cafe-menu-15.json';\nimport { isMacOS } from './utils/user-agent';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(\n    '/learn/2022/responsive-web-design/learn-basic-css-by-building-a-cafe-menu/step-15'\n  );\n});\n\ntest.describe('MultifileEditor Component', () => {\n  test('Multiple editors should be selected and able to insert text into', async ({\n    page\n  }) => {\n    // Spawn second editor to test MultifileEditor component\n    const stylesEditor = page.getByRole('button', {\n      name: 'styles.css Editor'\n    });\n    await stylesEditor.click();\n\n// Use the `.toHaveCount()` assertion to ensure that the second editor is on the screen\n    // before moving onto other assertions.\n    // Note that using the `.all()` locator here would result a flaky test.\n    // Ref: https://github.com/freeCodeCamp/freeCodeCamp/pull/53031/files#r1500316812\n    const editors = getEditors(page);\n    await expect(editors).toHaveCount(2);\n\nconst test_string = 'TestString';\n    let index = 0;\n    for (const editor of await editors.all()) {\n      await editor.focus();\n      await page.keyboard.insertText(test_string + index.toString());\n      const text = page.getByText(test_string + index.toString());\n      await expect(text).toBeVisible();\n      index++;\n    }\n  });\n\ntest('Reloading should preserve the editor layout', async ({\n    page,\n    isMobile\n  }) => {\n    test.skip(\n      isMobile,\n      'The mobile layout does not have resizable panes, so this test is not applicable.'\n    );\n\nconst desktopLayout = page.getByTestId('desktop-layout');\n    const splitter = desktopLayout.getByTestId('preview-left-splitter');\n    const editorPane = desktopLayout.getByTestId('editor-pane');\n    const initialStyle = await editorPane.getAttribute('style');\n    expect(initialStyle).toContain('flex: 1');\n\n// Drag the splitter to resize the editor pane\n    await splitter.hover();\n    await page.mouse.down();\n    await page.mouse.move(100, 100);\n    await page.mouse.up();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3869,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\multifile-editor.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "f7b6b8156cbe6890ff82f20c558d4f8a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\multifile-editor.spec.ts",
    "source_type": "git_repo",
    "title": "multifile-editor.spec",
    "content": "= page.getByText(test_string + index.toString()); await expect(text).toBeVisible(); index++; } }); test('Reloading should preserve the editor layout', async ({ page, isMobile }) => { test.skip( isMobile, 'The mobile layout does not have resizable panes, so this test is not applicable.' ); const desktopLayout = page.getByTestId('desktop-layout'); const splitter = desktopLayout.getByTestId('preview-left-splitter'); const editorPane = desktopLayout.getByTestId('editor-pane'); const initialStyle = await editorPane.getAttribute('style'); expect(initialStyle).toContain('flex: 1'); // Drag the splitter to resize the editor pane await splitter.hover(); await page.mouse.down(); await page.mouse.move(100, 100); await page.mouse.up();\n\nconst newStyle = await editorPane.getAttribute('style');\n    // It doesn't matter where it's dragged to, just that it's different:\n    expect(newStyle).not.toContain('flex: 1');\n\nawait page.reload();\n\nexpect(await editorPane.getAttribute('style')).toBe(newStyle);\n  });\n\ntest('Multiple open editors should remain open on moving to next challenge', async ({\n    page,\n    isMobile,\n    browserName,\n    context\n  }) => {\n    test.skip(\n      browserName !== 'chromium',\n      'Only chromium allows us to use the clipboard API.'\n    );\n    await context.grantPermissions(['clipboard-read', 'clipboard-write']);\n\nawait focusEditor({ page, isMobile });\n    await clearEditor({ page, browserName });\n\nawait page.evaluate(\n      async solution => await navigator.clipboard.writeText(solution.content),\n      solution\n    );\n\nif (isMacOS) {\n      await page.keyboard.press('Meta+v');\n    } else {\n      await page.keyboard.press('Control+v');\n    }\n\nconst stylesEditor = page.getByRole('button', {\n      name: 'styles.css Editor'\n    });\n    await stylesEditor.click();\n    const editorsCurrentPage = getEditors(page);\n    await expect(editorsCurrentPage).toHaveCount(2);\n\nawait page.keyboard.press('Control+Enter');\n\nconst submitButton = page.getByRole('button', {\n      name: 'Submit and go to next challenge'\n    });\n\n// Mobile screen shifts submit button out of view and Playwright fails at scrolling with multiple editors open\n    if (isMobile) {\n      await submitButton.dispatchEvent('click');\n    } else {\n      await submitButton.click();\n    }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3869,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\multifile-editor.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5f57c51f98b3801db220caa4a37d1cb2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\multifile-editor.spec.ts",
    "source_type": "git_repo",
    "title": "multifile-editor.spec",
    "content": "await navigator.clipboard.writeText(solution.content), solution ); if (isMacOS) { await page.keyboard.press('Meta+v'); } else { await page.keyboard.press('Control+v'); } const stylesEditor = page.getByRole('button', { name: 'styles.css Editor' }); await stylesEditor.click(); const editorsCurrentPage = getEditors(page); await expect(editorsCurrentPage).toHaveCount(2); await page.keyboard.press('Control+Enter'); const submitButton = page.getByRole('button', { name: 'Submit and go to next challenge' }); // Mobile screen shifts submit button out of view and Playwright fails at scrolling with multiple editors open if (isMobile) { await submitButton.dispatchEvent('click'); } else { await submitButton.click(); }\n\nconst editorsNextPage = getEditors(page);\n    await expect(editorsNextPage).toHaveCount(2);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3869,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\multifile-editor.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 180,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "39489b0fb3b62e6f5b8308202873a79d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\notes.spec.ts",
    "source_type": "git_repo",
    "title": "notes.spec",
    "content": "import { expect, test } from '@playwright/test';\n\nimport translations from '../client/i18n/locales/english/translations.json';\n\nconst notesButtonLabel = translations.learn['editor-tabs'].notes;\n\ntest('User can see notes', async ({ page, isMobile }) => {\n  const noteContent = 'This is a test note';\n\nawait page.route(\n    '**/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-30/page-data.json',\n    async route => {\n      const response = await route.fetch();\n      const json = await response.json();\n\njson.result.data.challengeNode.challenge.notes = noteContent;\n\nawait route.fulfill({ response, json });\n    }\n  );\n\nawait page.goto(\n    'learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-30'\n  );\n  if (isMobile) {\n    await page.getByRole('tab', { name: notesButtonLabel }).click();\n  } else {\n    await page.getByRole('button', { name: notesButtonLabel }).click();\n  }\n  await expect(page.getByText(noteContent)).toBeVisible();\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1008,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\notes.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 237,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "99b95feadd502382a24ff8ca214ed871",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\not-found.spec.ts",
    "source_type": "git_repo",
    "title": "not-found.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport words from '../client/i18n/locales/english/motivation.json';\n\nconst pageElements = {\n  notFoundImage: 'not-found-image',\n  notFoundHeading: 'not-found-heading',\n  heresQuoteParagraph: 'heres-quote-paragraph',\n  quoteWrapper: 'quote-wrapper',\n  quoteContent: 'quote-content',\n  authorName: 'author-name',\n  viewCurriculumBtn: 'view-curriculum-btn'\n};\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto('/404');\n});\n\ntest.describe('Not-Found Page Tests', () => {\n  test('should display correct page title', async ({ page }) => {\n    await expect(page).toHaveTitle(\n      `${translations[404]['page-not-found']} | freeCodeCamp.org`\n    );\n  });\n\ntest('should display 404 image', async ({ page }) => {\n    const notFoundImage = page.getByTestId(pageElements.notFoundImage);\n    await expect(notFoundImage).toBeVisible();\n  });\n\ntest('should display not found heading', async ({ page }) => {\n    const notFoundHeading = page.getByTestId(pageElements.notFoundHeading);\n    await expect(notFoundHeading).toHaveText(\n      `${translations[404]['page-not-found']}.`\n    );\n  });\n\ntest('should display heres a quote message', async ({ page }) => {\n    const heresQuoteParagraph = page.getByTestId(\n      pageElements.heresQuoteParagraph\n    );\n    await expect(heresQuoteParagraph).toHaveText(\n      translations[404]['heres-a-quote']\n    );\n  });\n\ntest('should load a quote component', async ({ page }) => {\n    const quoteWrapper = page.getByTestId(pageElements.quoteWrapper);\n    const quoteContent = page.getByTestId(pageElements.quoteContent);\n    const authorName = page.getByTestId(pageElements.authorName);\n\nawait expect(quoteWrapper).toBeVisible();\n    expect(quoteContent).not.toBeNull();\n    expect(authorName).not.toBeNull();\n  });\n\ntest('should display a random quote', async ({ page }) => {\n    const shownQuote = await page\n      .getByTestId(pageElements.quoteContent)\n      .textContent();\n\nconst shownAuthorText = await page\n      .getByTestId(pageElements.authorName)\n      .textContent();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2691,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\not-found.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "bab9e6bac2d0bf806ce7bb43ba179460",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\not-found.spec.ts",
    "source_type": "git_repo",
    "title": "not-found.spec",
    "content": "test('should display heres a quote message', async ({ page }) => { const heresQuoteParagraph = page.getByTestId( pageElements.heresQuoteParagraph ); await expect(heresQuoteParagraph).toHaveText( translations[404]['heres-a-quote'] ); }); test('should load a quote component', async ({ page }) => { const quoteWrapper = page.getByTestId(pageElements.quoteWrapper); const quoteContent = page.getByTestId(pageElements.quoteContent); const authorName = page.getByTestId(pageElements.authorName); await expect(quoteWrapper).toBeVisible(); expect(quoteContent).not.toBeNull(); expect(authorName).not.toBeNull(); }); test('should display a random quote', async ({ page }) => { const shownQuote = await page .getByTestId(pageElements.quoteContent) .textContent(); const shownAuthorText = await page .getByTestId(pageElements.authorName) .textContent();\n\nconst shownAuthor = shownAuthorText?.replace('- ', '');\n\nconst allMotivationalQuotes = words.motivationalQuotes.map(mq => mq.quote);\n    const allAuthors = words.motivationalQuotes.map(mq => mq.author);\n\nexpect(allMotivationalQuotes).toContain(shownQuote);\n    expect(allAuthors).toContain(shownAuthor);\n  });\n\ntest('should display view curriculum link', async ({ page }) => {\n    await expect(\n      page.getByRole('link', {\n        name: translations.buttons['view-curriculum']\n      })\n    ).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2691,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\not-found.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 303,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "8085afe40311384efcf5136d3863d83f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\portfolio.spec.ts",
    "source_type": "git_repo",
    "title": "portfolio.spec",
    "content": "import { execSync } from 'child_process';\nimport { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.use({ storageState: 'playwright/.auth/development-user.json' });\n\ntest.beforeAll(() => {\n  execSync('node ./tools/scripts/seed/seed-demo-user');\n});\n\ntest.afterAll(() => {\n  execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n});\n\ntest.describe('Add Portfolio Item', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto('/developmentuser');\n\nif (!process.env.CI) {\n      await page\n        .getByRole('button', { name: 'Preview custom 404 page' })\n        .click();\n    }\n\nawait page.getByRole('button', { name: 'Edit my profile' }).click();\n\n// Will check if the portfolio button is hydrated correctly with different intervals.\n    await expect(async () => {\n      const addPortfolioItemButton = page.getByRole('button', {\n        name: 'Add a new portfolio Item'\n      });\n      await addPortfolioItemButton.click();\n\nawait expect(addPortfolioItemButton).toBeDisabled({ timeout: 1 });\n    }).toPass();\n  });\n\ntest('The title has validation', async ({ page }) => {\n    await page.getByLabel(translations.settings.labels.title).fill('T');\n    await expect(page.getByTestId('title-validation')).toContainText(\n      'Title is too short'\n    );\n\nawait page\n      .getByLabel(translations.settings.labels.title)\n      .fill(\n        'This is the longest title you will ever see in your entire life, you will never see such a long title again. This is the longest title in existen'\n      );\n    await expect(page.getByTestId('title-validation')).toContainText(\n      'Title is too long'\n    );\n    await page\n      .getByLabel(translations.settings.labels.title)\n      .fill('My portfolio');\n    await expect(page.getByTestId('title-validation')).toBeHidden();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5437,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\portfolio.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "250c85929011ff04ce56a1cde64f1f7c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\portfolio.spec.ts",
    "source_type": "git_repo",
    "title": "portfolio.spec",
    "content": "addPortfolioItemButton.click(); await expect(addPortfolioItemButton).toBeDisabled({ timeout: 1 }); }).toPass(); }); test('The title has validation', async ({ page }) => { await page.getByLabel(translations.settings.labels.title).fill('T'); await expect(page.getByTestId('title-validation')).toContainText( 'Title is too short' ); await page .getByLabel(translations.settings.labels.title) .fill( 'This is the longest title you will ever see in your entire life, you will never see such a long title again. This is the longest title in existen' ); await expect(page.getByTestId('title-validation')).toContainText( 'Title is too long' ); await page .getByLabel(translations.settings.labels.title) .fill('My portfolio'); await expect(page.getByTestId('title-validation')).toBeHidden(); });\n\ntest('The url has validation', async ({ page }) => {\n    await page.getByLabel(translations.settings.labels.url).fill('T');\n    await expect(page.getByTestId('url-validation')).toContainText(\n      'Please use a valid URL'\n    );\n    await page\n      .getByLabel(translations.settings.labels.url)\n      .fill('http://helloworld.com');\n    await expect(page.getByTestId('url-validation')).toBeHidden();\n  });\n\ntest('The image has validation', async ({ page }) => {\n    await page.getByLabel(translations.settings.labels.image).fill('T');\n    await expect(page.getByTestId('image-validation')).toContainText(\n      'Please use a valid URL'\n    );\n    await page\n      .getByLabel(translations.settings.labels.image)\n      .fill(\n        'https://cdn.freecodecamp.org/universal/favicons/favicon-32x32.png'\n      );\n    await expect(page.getByTestId('image-validation')).toBeHidden();\n\nawait page\n      .getByLabel(translations.settings.labels.image)\n      .fill('https://cdn.freecodecamp.org/universal/favicons/favicon-32x32.pn');\n    await expect(page.getByTestId('image-validation')).toContainText(\n      'URL must link directly to an image file'\n    );\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5437,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\portfolio.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 437,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "10ccaf0d3eaf984fcf733333f6fd4ff4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\portfolio.spec.ts",
    "source_type": "git_repo",
    "title": "portfolio.spec",
    "content": ".fill('My portfolio'); await expect(page.getByTestId('title-validation')).toBeHidden(); }); test('The url has validation', async ({ page }) => { await page.getByLabel(translations.settings.labels.url).fill('T'); await expect(page.getByTestId('url-validation')).toContainText( 'Please use a valid URL' ); await page .getByLabel(translations.settings.labels.url) .fill('http://helloworld.com'); await expect(page.getByTestId('url-validation')).toBeHidden(); }); test('The image has validation', async ({ page }) => { await page.getByLabel(translations.settings.labels.image).fill('T'); await expect(page.getByTestId('image-validation')).toContainText( 'Please use a valid URL' ); await page .getByLabel(translations.settings.labels.image) .fill( 'https://cdn.freecodecamp.org/universal/favicons/favicon-32x32.png' ); await expect(page.getByTestId('image-validation')).toBeHidden(); await page .getByLabel(translations.settings.labels.image) .fill('https://cdn.freecodecamp.org/universal/favicons/favicon-32x32.pn'); await expect(page.getByTestId('image-validation')).toContainText( 'URL must link directly to an image file' ); });\n\ntest('The description has validation', async ({ page }) => {\n    await page\n      .getByLabel(translations.settings.labels.description)\n      .fill(\n        'This is the longest description you will ever see in your entire life, you will never see such a long description again. This is the longest description in existence. Nothing will ever come close to be being so long again in the entire history of the world. I only have 30 characters left.'\n      );\n    await expect(page.getByTestId('description-validation')).toContainText(\n      'There is a maximum limit of 288 characters, you have 0 left'\n    );\n    await page\n      .getByLabel(translations.settings.labels.description)\n      .fill('My description');\n    await expect(page.getByTestId('description-validation')).toBeHidden();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5437,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\portfolio.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 420,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "f969813e214857837a3d11d6c7527537",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\portfolio.spec.ts",
    "source_type": "git_repo",
    "title": "portfolio.spec",
    "content": "is the longest description you will ever see in your entire life, you will never see such a long description again. This is the longest description in existence. Nothing will ever come close to be being so long again in the entire history of the world. I only have 30 characters left.' ); await expect(page.getByTestId('description-validation')).toContainText( 'There is a maximum limit of 288 characters, you have 0 left' ); await page .getByLabel(translations.settings.labels.description) .fill('My description'); await expect(page.getByTestId('description-validation')).toBeHidden(); });\n\ntest('It should be possible to delete a portfolio item', async ({ page }) => {\n    await page\n      .getByLabel(translations.settings.labels.title)\n      .fill('My portfolio');\n    await page\n      .getByLabel(translations.settings.labels.url)\n      .fill('https://my-portfolio.com');\n    await page\n      .getByLabel(translations.settings.labels.image)\n      .fill('https://my-portfolio.com/image.png');\n    await page\n      .getByLabel(translations.settings.labels.description)\n      .fill('My description');\n\nawait page\n      .getByRole('button', { name: 'Remove this portfolio item' })\n      .click();\n\nawait expect(page.getByTestId('portfolio-items')).toBeHidden();\n  });\n\ntest('It should be possible to add a portfolio item', async ({ page }) => {\n    await expect(\n      page.getByRole('button', { name: 'Add a new portfolio Item' })\n    ).toBeDisabled();\n\nawait page\n      .getByLabel(translations.settings.labels.title)\n      .fill('My portfolio');\n    await page\n      .getByLabel(translations.settings.labels.url)\n      .fill('https://my-portfolio.com');\n    await page\n      .getByLabel(translations.settings.labels.image)\n      .fill('https://my-portfolio.com/image.png');\n    await page\n      .getByLabel(translations.settings.labels.description)\n      .fill('My description');\n\nawait page\n      .getByRole('button', { name: 'Save this portfolio item' })\n      .click();\n    await expect(page.getByRole('alert').first()).toContainText(\n      /We have updated your portfolio/\n    );\n  });\n\n// TODO: Add test for viewing portfolio item\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5437,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\portfolio.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "61c6c65e7539c371844b57442d92a7b4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\preview.spec.ts",
    "source_type": "git_repo",
    "title": "preview.spec",
    "content": "import { expect, test } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { focusEditor } from './utils/editor';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(\n    '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3'\n  );\n});\n\ntest.describe('Challenge Preview Component', () => {\n  test('should render correct output of default code', async ({\n    page,\n    isMobile\n  }) => {\n    if (isMobile) {\n      await page\n        .getByRole('tab', { name: translations.learn['editor-tabs'].preview })\n        .click();\n    }\n    await expect(\n      page\n        .frameLocator('.challenge-preview-frame')\n        .first()\n        .getByRole('heading', { name: 'CatPhotoApp' })\n    ).toBeVisible();\n  });\n\ntest('should render correct output of changed code', async ({\n    page,\n    isMobile\n  }) => {\n    await focusEditor({ page, isMobile });\n\nawait page.keyboard.insertText('<h1>FreeCodeCamp</h1>');\n    if (isMobile) {\n      await page\n        .getByRole('tab', { name: translations.learn['editor-tabs'].preview })\n        .click();\n    }\n    await expect(\n      page\n        .frameLocator('.challenge-preview-frame')\n        .first()\n        .getByRole('heading', { name: 'FreeCodeCamp' })\n    ).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1320,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\preview.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 322,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "f1022a2cd840ec5af28e1baf5fd30014",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\output.spec.ts",
    "source_type": "git_repo",
    "title": "output.spec",
    "content": "import { test, expect, type Page } from '@playwright/test';\n\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { clearEditor, focusEditor, getEditors } from './utils/editor';\n\nconst outputTexts = {\n  default: `\n  /**\n  * Your test output will go here\n  */`,\n  syntaxError: `SyntaxError: unknown: Unexpected token (1:3)\n\n> 1 | var\n      |    ^`,\n  empty: `// running tests\n  1. You should declare myName with the var keyword, ending with a semicolon\n  // tests completed`,\n  passed: `// running tests\n// tests completed`\n};\n\ninterface InsertTextParameters {\n  page: Page;\n  browserName: string;\n  containerId?: string;\n  isMobile: boolean;\n  text: string;\n  updatesConsole?: boolean;\n}\n\nconst replaceTextInCodeEditor = async ({\n  page,\n  browserName,\n  isMobile,\n  text,\n  containerId = 'editor-container-indexhtml',\n  updatesConsole = false\n}: InsertTextParameters) => {\n  await expect(async () => {\n    await clearEditor({ page, browserName, isMobile });\n    await getEditors(page).fill(text);\n    await expect(page.getByTestId(containerId)).toContainText(text);\n    if (updatesConsole) {\n      await expect(\n        page.getByRole('region', {\n          name: translations.learn['editor-tabs'].console\n        })\n      ).not.toContainText('Your test output will go here');\n    }\n  }).toPass();\n};\n\nconst runChallengeTest = async (page: Page, isMobile: boolean) => {\n  if (isMobile) {\n    await page.getByRole('tab', { name: 'Console' }).click();\n    await page.getByText('Run').click();\n  } else {\n    await page.getByText('Run the Tests (Ctrl + Enter)').click();\n  }\n};\n\ntest.describe('For classic challenges', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto(\n      '/learn/responsive-web-design/basic-html-and-html5/say-hello-to-html-elements'\n    );\n  });\n\ntest('it renders the default output', async ({ page, isMobile }) => {\n    if (isMobile) {\n      await page.getByRole('tab', { name: 'Console' }).click();\n    }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8387,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\output.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "087b02618acae2ad912b9cceaa75f7ac",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\output.spec.ts",
    "source_type": "git_repo",
    "title": "output.spec",
    "content": "here'); } }).toPass(); }; const runChallengeTest = async (page: Page, isMobile: boolean) => { if (isMobile) { await page.getByRole('tab', { name: 'Console' }).click(); await page.getByText('Run').click(); } else { await page.getByText('Run the Tests (Ctrl + Enter)').click(); } }; test.describe('For classic challenges', () => { test.beforeEach(async ({ page }) => { await page.goto( '/learn/responsive-web-design/basic-html-and-html5/say-hello-to-html-elements' ); }); test('it renders the default output', async ({ page, isMobile }) => { if (isMobile) { await page.getByRole('tab', { name: 'Console' }).click(); }\n\nawait expect(\n      page.getByRole('region', {\n        name: translations.learn['editor-tabs'].console\n      })\n    ).toHaveText(outputTexts.default);\n  });\n\ntest('shows test output when the tests are run', async ({\n    page,\n    isMobile,\n    browserName\n  }) => {\n    const closeButton = page.getByRole('button', { name: 'Close' });\n    await expect(page).toHaveTitle(\n      'Basic HTML and HTML5: Say Hello to HTML Elements |' + ' freeCodeCamp.org'\n    );\n    await focusEditor({ page, isMobile });\n    await replaceTextInCodeEditor({\n      browserName,\n      page,\n      isMobile,\n      text: '<h1>Hello World</h1>'\n    });\n    await runChallengeTest(page, isMobile);\n    await closeButton.click();\n\nawait expect(\n      page.getByRole('region', {\n        name: translations.learn['editor-tabs'].console\n      })\n    ).toHaveText(outputTexts.passed);\n  });\n\ntest('shows test output when the tests are triggered by the keyboard', async ({\n    page,\n    browserName,\n    isMobile\n  }) => {\n    test.skip(isMobile);\n    const closeButton = page.getByRole('button', { name: 'Close' });\n\nawait replaceTextInCodeEditor({\n      page,\n      browserName,\n      isMobile,\n      text: '<h1>Hello World</h1>'\n    });\n    await page.keyboard.press('Control+Enter');\n    await closeButton.click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8387,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\output.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 468,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "6dbcaf6ec0611cc85d280a788ac62aa1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\output.spec.ts",
    "source_type": "git_repo",
    "title": "output.spec",
    "content": "HTML Elements |' + ' freeCodeCamp.org' ); await focusEditor({ page, isMobile }); await replaceTextInCodeEditor({ browserName, page, isMobile, text: '<h1>Hello World</h1>' }); await runChallengeTest(page, isMobile); await closeButton.click(); await expect( page.getByRole('region', { name: translations.learn['editor-tabs'].console }) ).toHaveText(outputTexts.passed); }); test('shows test output when the tests are triggered by the keyboard', async ({ page, browserName, isMobile }) => { test.skip(isMobile); const closeButton = page.getByRole('button', { name: 'Close' }); await replaceTextInCodeEditor({ page, browserName, isMobile, text: '<h1>Hello World</h1>' }); await page.keyboard.press('Control+Enter'); await closeButton.click();\n\nawait expect(\n      page.getByRole('region', {\n        name: translations.learn['editor-tabs'].console\n      })\n    ).toHaveText(outputTexts.passed);\n  });\n});\n\ntest.describe('Challenge Output Component Tests', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto(\n      '/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-javascript-variables'\n    );\n  });\n\ntest('should render with default output', async ({ page, isMobile }) => {\n    if (isMobile) {\n      await page.getByRole('tab', { name: 'Console' }).click();\n    }\n\nconst outputConsole = page.getByRole('region', {\n      name: translations.learn['editor-tabs'].console\n    });\n\nawait expect(outputConsole).toBeVisible();\n    await expect(outputConsole).toHaveText(outputTexts.default);\n  });\n\ntest('should contain syntax error output when var is entered in editor', async ({\n    page,\n    isMobile,\n    browserName\n  }) => {\n    await focusEditor({ page, isMobile });\n    await replaceTextInCodeEditor({\n      browserName,\n      page,\n      isMobile,\n      text: 'var',\n      containerId: 'editor-container-scriptjs',\n      updatesConsole: true\n    });\n\nif (isMobile) {\n      await page.getByRole('tab', { name: 'Console' }).click();\n    }\n\nawait expect(\n      page.getByRole('region', {\n        name: translations.learn['editor-tabs'].console\n      })\n    ).toHaveText(outputTexts.syntaxError);\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8387,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\output.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "cff22afaf5529e537ad5ffd4da2e0fe7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\output.spec.ts",
    "source_type": "git_repo",
    "title": "output.spec",
    "content": "{ await page.getByRole('tab', { name: 'Console' }).click(); } const outputConsole = page.getByRole('region', { name: translations.learn['editor-tabs'].console }); await expect(outputConsole).toBeVisible(); await expect(outputConsole).toHaveText(outputTexts.default); }); test('should contain syntax error output when var is entered in editor', async ({ page, isMobile, browserName }) => { await focusEditor({ page, isMobile }); await replaceTextInCodeEditor({ browserName, page, isMobile, text: 'var', containerId: 'editor-container-scriptjs', updatesConsole: true }); if (isMobile) { await page.getByRole('tab', { name: 'Console' }).click(); } await expect( page.getByRole('region', { name: translations.learn['editor-tabs'].console }) ).toHaveText(outputTexts.syntaxError); });\n\ntest('should contain a reference error when an undefined var is entered in editor', async ({\n    browserName,\n    page,\n    isMobile\n  }) => {\n    await focusEditor({ page, isMobile });\n    await replaceTextInCodeEditor({\n      browserName,\n      page,\n      isMobile,\n      text: 'myName',\n      containerId: 'editor-container-scriptjs',\n      updatesConsole: true\n    });\n\nif (isMobile) {\n      await page.getByRole('tab', { name: 'Console' }).click();\n    }\n\nawait expect(\n      page.getByRole('region', {\n        name: translations.learn['editor-tabs'].console\n      })\n    ).toContainText('ReferenceError: myName is not defined');\n  });\n\ntest('should contain final output after test fail', async ({\n    page,\n    isMobile\n  }) => {\n    await runChallengeTest(page, isMobile);\n\nawait expect(page.getByTestId('output-text')).toContainText(\n      outputTexts.empty,\n      { timeout: 10000 }\n    );\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8387,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\output.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "32d727e050184eaf09b9e17a8df7650a",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\output.spec.ts",
    "source_type": "git_repo",
    "title": "output.spec",
    "content": "in editor', async ({ browserName, page, isMobile }) => { await focusEditor({ page, isMobile }); await replaceTextInCodeEditor({ browserName, page, isMobile, text: 'myName', containerId: 'editor-container-scriptjs', updatesConsole: true }); if (isMobile) { await page.getByRole('tab', { name: 'Console' }).click(); } await expect( page.getByRole('region', { name: translations.learn['editor-tabs'].console }) ).toContainText('ReferenceError: myName is not defined'); }); test('should contain final output after test fail', async ({ page, isMobile }) => { await runChallengeTest(page, isMobile); await expect(page.getByTestId('output-text')).toContainText( outputTexts.empty, { timeout: 10000 } ); });\n\ntest('should contain final output after test pass', async ({\n    browserName,\n    page,\n    isMobile\n  }) => {\n    const closeButton = page.getByRole('button', { name: 'Close' });\n    await focusEditor({ page, isMobile });\n    await replaceTextInCodeEditor({\n      browserName,\n      page,\n      isMobile,\n      text: 'var myName;',\n      containerId: 'editor-container-scriptjs',\n      updatesConsole: true\n    });\n    await runChallengeTest(page, isMobile);\n    await closeButton.click();\n\nawait expect(\n      page.getByRole('region', {\n        name: translations.learn['editor-tabs'].console\n      })\n    ).toHaveText(outputTexts.passed);\n  });\n});\n\ntest.describe('Jquery challenges', () => {\n  test('Jquery challenge should render with default output', async ({\n    page,\n    isMobile\n  }) => {\n    await page.goto(\n      '/learn/front-end-development-libraries/jquery/target-html-elements-with-selectors-using-jquery'\n    );\n\nif (isMobile) {\n      await page.getByRole('tab', { name: 'Console' }).click();\n    }\n\nawait expect(\n      page.getByRole('region', {\n        name: translations.learn['editor-tabs'].console\n      })\n    ).toHaveText(outputTexts.default);\n\nawait expect(\n      page.getByRole('region', {\n        name: translations.learn['editor-tabs'].console\n      })\n    ).not.toHaveText('ReferenceError: $ is not defined');\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8387,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\output.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 482,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "bb96f819caa720e04a3355b6d8f92e3e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\output.spec.ts",
    "source_type": "git_repo",
    "title": "output.spec",
    "content": "myName;', containerId: 'editor-container-scriptjs', updatesConsole: true }); await runChallengeTest(page, isMobile); await closeButton.click(); await expect( page.getByRole('region', { name: translations.learn['editor-tabs'].console }) ).toHaveText(outputTexts.passed); }); }); test.describe('Jquery challenges', () => { test('Jquery challenge should render with default output', async ({ page, isMobile }) => { await page.goto( '/learn/front-end-development-libraries/jquery/target-html-elements-with-selectors-using-jquery' ); if (isMobile) { await page.getByRole('tab', { name: 'Console' }).click(); } await expect( page.getByRole('region', { name: translations.learn['editor-tabs'].console }) ).toHaveText(outputTexts.default); await expect( page.getByRole('region', { name: translations.learn['editor-tabs'].console }) ).not.toHaveText('ReferenceError: $ is not defined'); }); });\n\ntest.describe('Custom output for Set and Map', () => {\n  test('Custom output for JavaScript Objects Set and Map', async ({\n    page,\n    isMobile,\n    browserName\n  }) => {\n    await page.goto(\n      '/learn/javascript-algorithms-and-data-structures/basic-javascript/comment-your-javascript-code'\n    );\n\nawait focusEditor({ page, isMobile });\n\nawait replaceTextInCodeEditor({\n      browserName,\n      page,\n      isMobile,\n      text: 'const set = new Set(); set.add(1); set.add(\"set\"); set.add(10); console.log(set);',\n      containerId: 'editor-container-scriptjs'\n    });\n\nif (isMobile) {\n      await page.getByRole('tab', { name: 'Console' }).click();\n    }\n\nawait expect(\n      page.getByRole('region', {\n        name: translations.learn['editor-tabs'].console\n      })\n    ).toContainText(`Set(3) {1, 'set', 10}`);\n\nawait focusEditor({ page, isMobile });\n    await replaceTextInCodeEditor({\n      browserName,\n      page,\n      isMobile,\n      text: 'const map = new Map(); map.set(1, \"one\"); map.set(\"two\", 2); console.log(map);',\n      containerId: 'editor-container-scriptjs'\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8387,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\output.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 476,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "c2d3fa5994386351bfdde2a07ec119c4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\output.spec.ts",
    "source_type": "git_repo",
    "title": "output.spec",
    "content": "browserName }) => { await page.goto( '/learn/javascript-algorithms-and-data-structures/basic-javascript/comment-your-javascript-code' ); await focusEditor({ page, isMobile }); await replaceTextInCodeEditor({ browserName, page, isMobile, text: 'const set = new Set(); set.add(1); set.add(\"set\"); set.add(10); console.log(set);', containerId: 'editor-container-scriptjs' }); if (isMobile) { await page.getByRole('tab', { name: 'Console' }).click(); } await expect( page.getByRole('region', { name: translations.learn['editor-tabs'].console }) ).toContainText(`Set(3) {1, 'set', 10}`); await focusEditor({ page, isMobile }); await replaceTextInCodeEditor({ browserName, page, isMobile, text: 'const map = new Map(); map.set(1, \"one\"); map.set(\"two\", 2); console.log(map);', containerId: 'editor-container-scriptjs' });\n\nif (isMobile) {\n      await page.getByRole('tab', { name: 'Console' }).click();\n    }\n\nawait expect(\n      page.getByRole('region', {\n        name: translations.learn['editor-tabs'].console\n      })\n    ).toContainText(`Map(2) {1 => 'one', 'two' => 2}`);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8387,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\output.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 290,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "c86a5b67880b533707dc0534b5932cbc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\profile.spec.ts",
    "source_type": "git_repo",
    "title": "profile.spec",
    "content": "import { test, expect } from '@playwright/test';\n\nimport translations from '../client/i18n/locales/english/translations.json';\n\nconst certs = [\n  {\n    name: 'Responsive Web Design',\n    url: '/certification/certifieduser/responsive-web-design'\n  },\n  {\n    name: 'JavaScript Algorithms and Data Structures',\n    url: '/certification/certifieduser/javascript-algorithms-and-data-structures-v8'\n  },\n  {\n    name: 'Front End Development Libraries',\n    url: '/certification/certifieduser/front-end-development-libraries'\n  },\n  {\n    name: 'Data Visualization',\n    url: '/certification/certifieduser/data-visualization'\n  },\n  {\n    name: 'Relational Database',\n    url: '/certification/certifieduser/relational-database-v8'\n  },\n  {\n    name: 'Back End Development and APIs',\n    url: '/certification/certifieduser/back-end-development-and-apis'\n  },\n  {\n    name: 'Quality Assurance',\n    url: '/certification/certifieduser/quality-assurance-v7'\n  },\n  {\n    name: 'Scientific Computing with Python',\n    url: '/certification/certifieduser/scientific-computing-with-python-v7'\n  },\n  {\n    name: 'Data Analysis with Python',\n    url: '/certification/certifieduser/data-analysis-with-python-v7'\n  },\n  {\n    name: 'Information Security',\n    url: '/certification/certifieduser/information-security-v7'\n  },\n  {\n    name: 'Machine Learning with Python',\n    url: '/certification/certifieduser/machine-learning-with-python-v7'\n  },\n  {\n    name: 'College Algebra with Python',\n    url: '/certification/certifieduser/college-algebra-with-python-v8'\n  },\n  {\n    name: 'Foundational C# with Microsoft',\n    url: '/certification/certifieduser/foundational-c-sharp-with-microsoft'\n  }\n];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6200,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\profile.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 426,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "9b0f75ba2663e4511aa0efea19774178",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\profile.spec.ts",
    "source_type": "git_repo",
    "title": "profile.spec",
    "content": "name: 'Relational Database', url: '/certification/certifieduser/relational-database-v8' }, { name: 'Back End Development and APIs', url: '/certification/certifieduser/back-end-development-and-apis' }, { name: 'Quality Assurance', url: '/certification/certifieduser/quality-assurance-v7' }, { name: 'Scientific Computing with Python', url: '/certification/certifieduser/scientific-computing-with-python-v7' }, { name: 'Data Analysis with Python', url: '/certification/certifieduser/data-analysis-with-python-v7' }, { name: 'Information Security', url: '/certification/certifieduser/information-security-v7' }, { name: 'Machine Learning with Python', url: '/certification/certifieduser/machine-learning-with-python-v7' }, { name: 'College Algebra with Python', url: '/certification/certifieduser/college-algebra-with-python-v8' }, { name: 'Foundational C# with Microsoft', url: '/certification/certifieduser/foundational-c-sharp-with-microsoft' } ];\n\nconst legacyCerts = [\n  {\n    name: 'Legacy Front End',\n    url: '/certification/certifieduser/legacy-front-end'\n  },\n  {\n    name: 'Legacy JavaScript Algorithms and Data Structures',\n    url: '/certification/certifieduser/javascript-algorithms-and-data-structures'\n  },\n  {\n    name: 'Legacy Back End',\n    url: '/certification/certifieduser/legacy-back-end'\n  },\n  {\n    name: 'Legacy Data Visualization',\n    url: '/certification/certifieduser/legacy-data-visualization'\n  },\n  {\n    name: 'Legacy Information Security and Quality Assurance',\n    url: '/certification/certifieduser/information-security-and-quality-assurance'\n  },\n  { name: 'Legacy Full Stack', url: '/certification/certifieduser/full-stack' }\n];\n\ntest.describe('Profile component', () => {\n  test.describe('when viewing my own profile', () => {\n    test.beforeEach(async ({ page }) => {\n      await page.goto('/certifieduser');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6200,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\profile.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 461,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "433d6f5625a7d5ff6d954bb723ed380e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\profile.spec.ts",
    "source_type": "git_repo",
    "title": "profile.spec",
    "content": "{ name: 'Legacy Front End', url: '/certification/certifieduser/legacy-front-end' }, { name: 'Legacy JavaScript Algorithms and Data Structures', url: '/certification/certifieduser/javascript-algorithms-and-data-structures' }, { name: 'Legacy Back End', url: '/certification/certifieduser/legacy-back-end' }, { name: 'Legacy Data Visualization', url: '/certification/certifieduser/legacy-data-visualization' }, { name: 'Legacy Information Security and Quality Assurance', url: '/certification/certifieduser/information-security-and-quality-assurance' }, { name: 'Legacy Full Stack', url: '/certification/certifieduser/full-stack' } ]; test.describe('Profile component', () => { test.describe('when viewing my own profile', () => { test.beforeEach(async ({ page }) => { await page.goto('/certifieduser');\n\n// If you build the client locally, delete the button click below.\n      if (!process.env.CI) {\n        await page\n          .getByRole('button', { name: 'Preview custom 404 page' })\n          .click();\n      }\n    });\n\ntest('renders the camper profile correctly', async ({ page }) => {\n      // There are multiple avatars on the page, one is in the navbar, one is in the page body.\n      // The avatar we are interested in is the last one in the list\n      const avatar = page\n        .getByRole('img', {\n          name: translations.icons.avatar,\n          includeHidden: true // the svg has `aria-hidden` set to true\n        })\n        .last();\n\n// \"visible\" as in the element is in the DOM, but it is hidden from non-sighted users\n      await expect(avatar).toBeVisible();\n\nawait expect(\n        page.getByRole('heading', { name: '@certifieduser' })\n      ).toBeVisible();\n      await expect(page.getByText('Full Stack User')).toBeVisible();\n      await expect(page.getByText('Joined November 2020')).toBeVisible();\n      await expect(\n        page.getByText(translations.profile.contributor)\n      ).toBeVisible();\n      expect(\n        await page.locator('.badge-card-description').textContent()\n      ).toContain('Among most prolific volunteers');\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6200,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\profile.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "9a07213107dc19b3bcd7893f66662f68",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\profile.spec.ts",
    "source_type": "git_repo",
    "title": "profile.spec",
    "content": "interested in is the last one in the list const avatar = page .getByRole('img', { name: translations.icons.avatar, includeHidden: true // the svg has `aria-hidden` set to true }) .last(); // \"visible\" as in the element is in the DOM, but it is hidden from non-sighted users await expect(avatar).toBeVisible(); await expect( page.getByRole('heading', { name: '@certifieduser' }) ).toBeVisible(); await expect(page.getByText('Full Stack User')).toBeVisible(); await expect(page.getByText('Joined November 2020')).toBeVisible(); await expect( page.getByText(translations.profile.contributor) ).toBeVisible(); expect( await page.locator('.badge-card-description').textContent() ).toContain('Among most prolific volunteers'); });\n\ntest('displays certifications correctly', async ({ page }) => {\n      await expect(\n        page.getByRole('heading', { name: 'freeCodeCamp Certifications' })\n      ).toBeVisible();\n      await expect(\n        page.getByRole('heading', { name: 'Legacy Certifications' })\n      ).toBeVisible();\n\nfor (const cert of certs) {\n        const link = page\n          .getByRole('link', {\n            name: `View ${cert.name} Certification`\n          })\n          .first();\n        await expect(link).toBeVisible();\n        await expect(link).toHaveAttribute('href', cert.url);\n      }\n\nfor (const cert of legacyCerts) {\n        const link = page\n          .getByRole('link', {\n            name: `View ${cert.name} Certification`\n          })\n          .last();\n        await expect(link).toBeVisible();\n        await expect(link).toHaveAttribute('href', cert.url);\n      }\n    });\n\ntest('should not show portfolio when empty', async ({ page }) => {\n      // @certifieduser doesn't have portfolio information\n      await expect(\n        page.getByText(translations.profile.projects)\n      ).not.toBeVisible();\n    });\n\ntest('displays the timeline correctly', async ({ page }) => {\n      await expect(\n        page.getByRole('heading', { name: 'Timeline' })\n      ).toBeVisible();\n      await expect(page.getByRole('table')).toBeVisible();\n      await expect(\n        page.getByRole('navigation', { name: 'Timeline Pagination' })\n      ).toBeVisible();\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6200,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\profile.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "9bd109feecb4fe05ca780126a9e7cd39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\profile.spec.ts",
    "source_type": "git_repo",
    "title": "profile.spec",
    "content": "of legacyCerts) { const link = page .getByRole('link', { name: `View ${cert.name} Certification` }) .last(); await expect(link).toBeVisible(); await expect(link).toHaveAttribute('href', cert.url); } }); test('should not show portfolio when empty', async ({ page }) => { // @certifieduser doesn't have portfolio information await expect( page.getByText(translations.profile.projects) ).not.toBeVisible(); }); test('displays the timeline correctly', async ({ page }) => { await expect( page.getByRole('heading', { name: 'Timeline' }) ).toBeVisible(); await expect(page.getByRole('table')).toBeVisible(); await expect( page.getByRole('navigation', { name: 'Timeline Pagination' }) ).toBeVisible(); }); });\n\ntest.describe(\"when viewing someone else's profile\", () => {\n    test.beforeEach(async ({ page }) => {\n      await page.goto('/publicUser');\n\n// If you build the client locally, delete the button click below.\n      if (!process.env.CI) {\n        await page\n          .getByRole('button', { name: 'Preview custom 404 page' })\n          .click();\n      }\n    });\n\ntest.describe('while logged in', () => {\n      test('displays the public username', async ({ page }) => {\n        await expect(\n          page.getByRole('heading', { name: '@publicuser' })\n        ).toBeVisible();\n      });\n    });\n\ntest.describe('logged out', () => {\n      test('displays the public username', async ({ page }) => {\n        await expect(\n          page.getByRole('heading', { name: '@publicuser' })\n        ).toBeVisible();\n      });\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6200,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\profile.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 356,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "f063d55cfa29e3e52d580a636ce35372",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\progress-bar.spec.ts",
    "source_type": "git_repo",
    "title": "progress-bar.spec",
    "content": "import { expect, test } from '@playwright/test';\nimport { clearEditor, focusEditor } from './utils/editor';\n\ntest.describe('Progress bar component', () => {\n  test('Should appear with the correct content after the user has submitted their code', async ({\n    page,\n    isMobile,\n    browserName\n  }) => {\n    await page.goto(\n      '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-3'\n    );\n    // If focusEditor fails, typically it's because the instructions are too\n    // large. There's a bug that means `scrollIntoView` does not work in the\n    // editor and so we have to pick less verbose challenges until that's fixed.\n    await focusEditor({ page, isMobile });\n    await clearEditor({ page, browserName });\n\nawait page.keyboard.insertText(\n      '<html><body><h1>CatPhotoApp</h1><h2>Cat Photos</h2><p>Everyone loves cute cats online!</p></body></html>'\n    );\n\nawait page.getByRole('button', { name: 'Check Your Code' }).click();\n\nconst progressBarContainer = page.getByTestId('progress-bar-container');\n    await expect(progressBarContainer).toContainText(\n      'Learn HTML by Building a Cat Photo App'\n    );\n    await expect(progressBarContainer).toContainText(/\\d% complete/);\n    await page\n      .getByRole('button', { name: 'Submit and go to next challenge' })\n      .click();\n  });\n\ntest('should appear in the completion modal after user has submitted their code', async ({\n    page,\n    isMobile,\n    browserName\n  }) => {\n    await page.goto(\n      '/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-javascript-variables'\n    );\n    await focusEditor({ page, isMobile });\n    await clearEditor({ page, browserName });\n\nawait page.keyboard.insertText('var myName;');\n\nawait page\n      .getByRole('button', {\n        name: 'Run',\n        exact: false\n      })\n      .click();\n\nawait expect(page.locator('.completion-block-meta')).toContainText(\n      /\\d% complete/\n    );\n\nawait page\n      .getByRole('button', { name: 'Submit and go to next challenge' })\n      .click();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2084,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\progress-bar.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "5152109c2d2489ace8de4f703edf38dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\progress-reset-modal.spec.ts",
    "source_type": "git_repo",
    "title": "progress-reset-modal.spec",
    "content": "import { exec } from 'child_process';\nimport { promisify } from 'util';\nimport { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\nconst execP = promisify(exec);\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto('/settings');\n});\n\ntest.afterEach(async () => {\n  await execP('node ./tools/scripts/seed/seed-demo-user --certified-user');\n});\n\ntest.describe('Progress reset modal', () => {\n  test('should display the content properly', async ({ page }) => {\n    await page\n      .getByRole('button', { name: 'Reset all of my progress' })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', { name: 'Reset My Progress' })\n    ).toBeVisible();\n\nawait expect(\n      page.getByText(\n        'This will permanently delete and reset all of the following:'\n      )\n    ).toBeVisible();\n\nawait expect(\n      page.getByText(\n        'Your progress through each step/challenge (all completed challenges will be lost)'\n      )\n    ).toBeVisible();\n\nawait expect(\n      page.getByText(\n        'Any saved code, including partially completed challenges, and certification project code'\n      )\n    ).toBeVisible();\n\nawait expect(\n      page.getByText('All completed and claimed certifications')\n    ).toBeVisible();\n\nawait expect(\n      page.getByText(\n        'You will effectively be set back to the very first day you signed up.'\n      )\n    ).toBeVisible();\n\nawait expect(\n      page.getByText(\n        \"We won't be able to recover any of it for you later, even if you change your mind.\"\n      )\n    ).toBeVisible();\n\nawait expect(\n      page.getByRole('button', {\n        name: \"Nevermind, I don't want to delete all of my progress\"\n      })\n    ).toBeVisible();\n\nawait expect(\n      page.getByRole('button', {\n        name: 'Reset everything. I want to start from the beginning'\n      })\n    ).toBeVisible();\n\nawait expect(\n      page.getByRole('button', {\n        name: 'Reset everything. I want to start from the beginning'\n      })\n    ).toBeDisabled();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4247,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\progress-reset-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 458,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "bd4dc2702c02f76eff0f0028a36918e3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\progress-reset-modal.spec.ts",
    "source_type": "git_repo",
    "title": "progress-reset-modal.spec",
    "content": "up.' ) ).toBeVisible(); await expect( page.getByText( \"We won't be able to recover any of it for you later, even if you change your mind.\" ) ).toBeVisible(); await expect( page.getByRole('button', { name: \"Nevermind, I don't want to delete all of my progress\" }) ).toBeVisible(); await expect( page.getByRole('button', { name: 'Reset everything. I want to start from the beginning' }) ).toBeVisible(); await expect( page.getByRole('button', { name: 'Reset everything. I want to start from the beginning' }) ).toBeDisabled(); });\n\ntest('should close the dialog if the user clicks the cancel button', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', { name: 'Reset all of my progress' })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', { name: 'Reset My Progress' })\n    ).toBeVisible();\n\nawait page\n      .getByRole('button', {\n        name: \"Nevermind, I don't want to delete all of my progress\"\n      })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', { name: 'Reset My Progress' })\n    ).toBeHidden();\n  });\n\ntest('Reset progress button should be disabled if user incorrectly fills verify input text', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', { name: 'Reset all of my progress' })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', { name: 'Reset My Progress' })\n    ).toBeVisible();\n\nconst verifyResetInput = page.getByRole('textbox', {\n      exact: true\n    });\n    await verifyResetInput.fill('incorrect text');\n\nawait expect(\n      page.getByRole('button', {\n        name: 'Reset everything. I want to start from the beginning'\n      })\n    ).toBeDisabled();\n  });\n\ntest('should reset the progress if the user fills the verify input text and clicks the reset button', async ({\n    page\n  }) => {\n    await page\n      .getByRole('button', { name: 'Reset all of my progress' })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', { name: 'Reset My Progress' })\n    ).toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4247,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\progress-reset-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 488,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "9c616bff59378eaae29746f4d98354d6",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\progress-reset-modal.spec.ts",
    "source_type": "git_repo",
    "title": "progress-reset-modal.spec",
    "content": "Progress' }) ).toBeVisible(); const verifyResetInput = page.getByRole('textbox', { exact: true }); await verifyResetInput.fill('incorrect text'); await expect( page.getByRole('button', { name: 'Reset everything. I want to start from the beginning' }) ).toBeDisabled(); }); test('should reset the progress if the user fills the verify input text and clicks the reset button', async ({ page }) => { await page .getByRole('button', { name: 'Reset all of my progress' }) .click(); await expect( page.getByRole('dialog', { name: 'Reset My Progress' }) ).toBeVisible();\n\nconst verifyResetText = translations.settings.danger['verify-reset-text'];\n\nconst verifyResetInput = page.getByRole('textbox', {\n      exact: true\n    });\n    await verifyResetInput.fill(verifyResetText);\n\nawait page\n      .getByRole('button', {\n        name: 'Reset everything. I want to start from the beginning'\n      })\n      .click();\n\nawait page.waitForURL('/');\n    await expect(page.getByText('Your progress has been reset')).toBeVisible();\n\n// Go to /settings and confirm that all certifications are reset\n    await page.goto('/settings');\n    await expect(\n      page.getByRole('link', { name: 'Show Certification' })\n    ).toBeHidden();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4247,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\progress-reset-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 278,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "0d455a7ae6fd3236acca528e755ad4d1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\project-preview-modal.spec.ts",
    "source_type": "git_repo",
    "title": "project-preview-modal.spec",
    "content": "import { test, expect } from '@playwright/test';\n\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.describe('Should be shown automatically', () => {\n  test.beforeEach(async ({ page }) => {\n    const urlWithProjectPreview =\n      '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-1';\n    await page.goto(urlWithProjectPreview);\n  });\n\ntest('it should contain a non-empty preview frame', async ({ page }) => {\n    const dialog = page.getByRole('dialog', {\n      name: translations.learn['project-preview-title']\n    });\n    await expect(dialog).toBeVisible();\n    const previewFrame = dialog.frameLocator('#fcc-project-preview-frame');\n    await expect(\n      // This is a part of the Cat Photo App that we expect to see. Essentially,\n      // it's a proxy for \"not empty\"\n      previewFrame.getByRole('heading', { name: 'Cat Photos' })\n    ).toBeVisible();\n  });\n\ntest('it can be closed by the Start Coding! button', async ({ page }) => {\n    const dialog = page.getByRole('dialog', {\n      name: translations.learn['project-preview-title']\n    });\n    await expect(dialog).toBeVisible();\n    await expect(dialog.getByTitle('CatPhotoApp preview')).toBeVisible();\n\nawait page.getByRole('button', { name: 'Start Coding!' }).click();\n\nawait expect(dialog).not.toBeVisible();\n  });\n\ntest('it can be closed by the close button', async ({ page }) => {\n    const dialog = page.getByRole('dialog', {\n      name: translations.learn['project-preview-title']\n    });\n\nawait expect(dialog).toBeVisible();\n\nawait page\n      .getByRole('button', { name: translations.buttons.close })\n      .click();\n\nawait expect(dialog).not.toBeVisible();\n  });\n});\n\ntest.describe('Should be shown manually', () => {\n  test.beforeEach(async ({ page }) => {\n    const urlWithProjectPreview =\n      '/learn/full-stack-developer/lab-drum-machine/build-drum-machine';\n    await page.goto(urlWithProjectPreview);\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3418,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\project-preview-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 436,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "caa4dc7777d9737ed196960768c423d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\project-preview-modal.spec.ts",
    "source_type": "git_repo",
    "title": "project-preview-modal.spec",
    "content": "page.getByRole('dialog', { name: translations.learn['project-preview-title'] }); await expect(dialog).toBeVisible(); await expect(dialog.getByTitle('CatPhotoApp preview')).toBeVisible(); await page.getByRole('button', { name: 'Start Coding!' }).click(); await expect(dialog).not.toBeVisible(); }); test('it can be closed by the close button', async ({ page }) => { const dialog = page.getByRole('dialog', { name: translations.learn['project-preview-title'] }); await expect(dialog).toBeVisible(); await page .getByRole('button', { name: translations.buttons.close }) .click(); await expect(dialog).not.toBeVisible(); }); }); test.describe('Should be shown manually', () => { test.beforeEach(async ({ page }) => { const urlWithProjectPreview = '/learn/full-stack-developer/lab-drum-machine/build-drum-machine'; await page.goto(urlWithProjectPreview); });\n\ntest(\"when the user clicks on 'this example project'\", async ({ page }) => {\n    const dialog = page.getByRole('dialog', {\n      name: translations.learn['demo-project-title']\n    });\n    await expect(dialog).not.toBeVisible();\n    await page\n      .getByRole('button', {\n        name: 'this example project'\n      })\n      .click();\n    await expect(dialog).toBeVisible();\n    const previewFrame = dialog.frameLocator('#fcc-project-preview-frame');\n    await expect(\n      // This is a part of the Drum Machine that we expect to see. Essentially,\n      // it's a proxy for \"not empty\"\n      previewFrame.getByText('Power: On')\n    ).toBeVisible();\n  });\n});\n\ntest.describe('Should not render', () => {\n  test('on the second step of a project', async ({ page }) => {\n    await page.goto(\n      '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-2'\n    );\n    const dialog = page.getByRole('dialog', {\n      name: translations.learn['project-preview-title']\n    });\n    await expect(dialog).not.toBeVisible();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3418,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\project-preview-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 429,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "16814c55524ebbd4664932d1461c3f4c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\project-preview-modal.spec.ts",
    "source_type": "git_repo",
    "title": "project-preview-modal.spec",
    "content": "{ name: 'this example project' }) .click(); await expect(dialog).toBeVisible(); const previewFrame = dialog.frameLocator('#fcc-project-preview-frame'); await expect( // This is a part of the Drum Machine that we expect to see. Essentially, // it's a proxy for \"not empty\" previewFrame.getByText('Power: On') ).toBeVisible(); }); }); test.describe('Should not render', () => { test('on the second step of a project', async ({ page }) => { await page.goto( '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-2' ); const dialog = page.getByRole('dialog', { name: translations.learn['project-preview-title'] }); await expect(dialog).not.toBeVisible(); });\n\ntest('on first step of a project without a preview', async ({ page }) => {\n    await page.goto(\n      '/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-1'\n    );\n    const dialog = page.getByRole('dialog', {\n      name: translations.learn['project-preview-title']\n    });\n    await expect(dialog).not.toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3418,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\project-preview-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 251,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "8716d6e81c95c05d67f9a892b177f5ae",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\projects.spec.ts",
    "source_type": "git_repo",
    "title": "projects.spec",
    "content": "import { execSync } from 'child_process';\nimport { test, expect, Page } from '@playwright/test';\nimport { SuperBlocks } from '../shared/config/curriculum';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport tributePage from './fixtures/tribute-page.json';\nimport curriculum from './fixtures/js-ads-projects.json';\nimport { authedRequest } from './utils/request';\n\nimport { focusEditor, getEditors, clearEditor } from './utils/editor';\nimport { isMacOS } from './utils/user-agent';\nimport { alertToBeVisible } from './utils/alerts';\n\ninterface Meta {\n  challengeOrder: { id: string; title: string }[];\n}\n\ninterface File {\n  contents: unknown;\n  fileKey: string;\n}\n\ntype Solution = File[];\n\ninterface Challenge {\n  title: string;\n  block: string;\n  superBlock: string;\n  dashedName: string;\n  solutions: Solution[];\n  isPrivate?: boolean;\n}\n\ninterface block {\n  [key: string]: {\n    meta: Meta;\n    challenges: Challenge[];\n  };\n}\n\nconst pythonProjects = {\n  superBlock: SuperBlocks.MachineLearningPy,\n  block: 'machine-learning-with-python-projects',\n  challenges: [\n    {\n      slug: 'book-recommendation-engine-using-knn',\n      nextChallengeText: 'Linear Regression Health Costs Calculator'\n    },\n    {\n      slug: 'cat-and-dog-image-classifier',\n      nextChallengeText: 'Book Recommendation Engine using KNN'\n    },\n    {\n      slug: 'linear-regression-health-costs-calculator',\n      nextChallengeText: 'Neural Network SMS Text Classifier'\n    },\n    {\n      slug: 'neural-network-sms-text-classifier',\n      nextChallengeText: 'Find the Symmetric Difference'\n    },\n    {\n      slug: 'rock-paper-scissors',\n      nextChallengeText: 'Cat and Dog Image Classifier'\n    }\n  ]\n};\n\nconst pasteContent = async (page: Page) => {\n  if (isMacOS) {\n    await page.keyboard.press('Meta+v');\n  } else {\n    await page.keyboard.press('Control+v');\n  }\n};\n\ntest.use({ storageState: 'playwright/.auth/development-user.json' });\n\ntest.beforeAll(() => {\n  execSync('node ./tools/scripts/seed/seed-demo-user');\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9063,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\projects.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 485,
    "chunk_index": 0,
    "total_chunks": 7
  },
  {
    "id": "7df1072f7d15317bf5bd14b3fbb6212b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\projects.spec.ts",
    "source_type": "git_repo",
    "title": "projects.spec",
    "content": "Regression Health Costs Calculator' }, { slug: 'cat-and-dog-image-classifier', nextChallengeText: 'Book Recommendation Engine using KNN' }, { slug: 'linear-regression-health-costs-calculator', nextChallengeText: 'Neural Network SMS Text Classifier' }, { slug: 'neural-network-sms-text-classifier', nextChallengeText: 'Find the Symmetric Difference' }, { slug: 'rock-paper-scissors', nextChallengeText: 'Cat and Dog Image Classifier' } ] }; const pasteContent = async (page: Page) => { if (isMacOS) { await page.keyboard.press('Meta+v'); } else { await page.keyboard.press('Control+v'); } }; test.use({ storageState: 'playwright/.auth/development-user.json' }); test.beforeAll(() => { execSync('node ./tools/scripts/seed/seed-demo-user'); });\n\ntest.afterAll(() => {\n  execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n});\n\ntest.describe('Projects', () => {\n  test('Should be possible to submit Python projects', async ({ page }) => {\n    const { superBlock, block, challenges } = pythonProjects; // Ensure these are defined or imported\n\nfor (const { slug } of challenges) {\n      const url = `/learn/${superBlock}/${block}/${slug}`;\n      await page.goto(url);\n      await page\n        .getByLabel('Solution Link')\n        .fill('https://replit.com/@camperbot/python-project#main.py');\n\nawait page\n        .getByRole('button', { name: \"I've completed this challenge\" })\n        .click();\n      await expect(\n        page.getByRole('button', { name: 'Go to next challenge' })\n      ).toBeVisible();\n    }\n  });\n});\n\ntest.describe('JavaScript projects can be submitted and then viewed in /settings and on the certifications', () => {\n  test.skip(\n    ({ browserName }) => browserName !== 'chromium',\n    'Only chromium allows us to use the clipboard API.'\n  );\n\ntest('projects are submitted and viewed correctly', async ({\n    page,\n    browserName,\n    isMobile,\n    request,\n    context\n  }) => {\n    test.setTimeout(40000);\n    await context.grantPermissions(['clipboard-read', 'clipboard-write']);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9063,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\projects.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 1,
    "total_chunks": 7
  },
  {
    "id": "cfd5bf2675ac024231da75d6b6cdfb1f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\projects.spec.ts",
    "source_type": "git_repo",
    "title": "projects.spec",
    "content": "name: \"I've completed this challenge\" }) .click(); await expect( page.getByRole('button', { name: 'Go to next challenge' }) ).toBeVisible(); } }); }); test.describe('JavaScript projects can be submitted and then viewed in /settings and on the certifications', () => { test.skip( ({ browserName }) => browserName !== 'chromium', 'Only chromium allows us to use the clipboard API.' ); test('projects are submitted and viewed correctly', async ({ page, browserName, isMobile, request, context }) => { test.setTimeout(40000); await context.grantPermissions(['clipboard-read', 'clipboard-write']);\n\nconst block: block = curriculum;\n    const targetBlock = 'javascript-algorithms-and-data-structures-projects';\n    const javaScriptSuperBlock = block[targetBlock];\n\nconst { challenges, meta } = javaScriptSuperBlock || {\n      challenges: [],\n      meta: {}\n    };\n\nconst projectTitles =\n      meta.challengeOrder?.map(({ title }: { title: string }) => title) ?? [];\n\nconst projectsInOrder = projectTitles.map(title =>\n      challenges.find(challenge => challenge.title === title)\n    ) as Challenge[];\n\nconst projectIdsInOrder = [\n      'aaa48de84e1ecc7c742e1124',\n      'a7f4d8f2483413a6ce226cac',\n      '56533eb9ac21ba0edf2244e2',\n      'aff0395860f5d3034dc0bfc9',\n      'aa2e6f85cab2ab736c9a9b24'\n    ];\n\nconst contents = projectsInOrder[0].solutions[0][0].contents as string;\n\nawait page.goto(\n      '/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/palindrome-checker'\n    );\n\nawait focusEditor({ page, isMobile });\n    await clearEditor({ page, browserName });\n\nawait page.evaluate(\n      async contents => await navigator.clipboard.writeText(contents),\n      contents\n    );\n\nawait pasteContent(page);\n\nawait page.getByRole('button', { name: 'Run' }).click();\n\nawait page\n      .getByRole('button', { name: 'Go to next challenge', exact: false })\n      .click();\n\n// Submit the rest with the API.\n    const submissionPromises = [];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9063,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\projects.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 2,
    "total_chunks": 7
  },
  {
    "id": "86c268992ab7c51ce0019a55d9b75d46",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\projects.spec.ts",
    "source_type": "git_repo",
    "title": "projects.spec",
    "content": "=== title) ) as Challenge[]; const projectIdsInOrder = [ 'aaa48de84e1ecc7c742e1124', 'a7f4d8f2483413a6ce226cac', '56533eb9ac21ba0edf2244e2', 'aff0395860f5d3034dc0bfc9', 'aa2e6f85cab2ab736c9a9b24' ]; const contents = projectsInOrder[0].solutions[0][0].contents as string; await page.goto( '/learn/javascript-algorithms-and-data-structures/javascript-algorithms-and-data-structures-projects/palindrome-checker' ); await focusEditor({ page, isMobile }); await clearEditor({ page, browserName }); await page.evaluate( async contents => await navigator.clipboard.writeText(contents), contents ); await pasteContent(page); await page.getByRole('button', { name: 'Run' }).click(); await page .getByRole('button', { name: 'Go to next challenge', exact: false }) .click(); // Submit the rest with the API. const submissionPromises = [];\n\nfor (let i = 1; i < projectsInOrder.length; i++) {\n      submissionPromises.push(\n        authedRequest({\n          request,\n          method: 'post',\n          endpoint: '/modern-challenge-completed',\n          data: {\n            id: projectIdsInOrder[i],\n            challengeType: 5,\n            files: projectsInOrder[i].solutions[0].map(({ contents }) => ({\n              contents: contents,\n              key: 'scriptjs',\n              ext: 'js',\n              name: 'script',\n              history: ['script.js']\n            }))\n          }\n        })\n      );\n    }\n\nawait Promise.all(submissionPromises);\n\nawait page.goto('/settings');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9063,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\projects.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 384,
    "chunk_index": 3,
    "total_chunks": 7
  },
  {
    "id": "a284fe3255665981109c0db3e47ce27d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\projects.spec.ts",
    "source_type": "git_repo",
    "title": "projects.spec",
    "content": "{ name: 'Run' }).click(); await page .getByRole('button', { name: 'Go to next challenge', exact: false }) .click(); // Submit the rest with the API. const submissionPromises = []; for (let i = 1; i < projectsInOrder.length; i++) { submissionPromises.push( authedRequest({ request, method: 'post', endpoint: '/modern-challenge-completed', data: { id: projectIdsInOrder[i], challengeType: 5, files: projectsInOrder[i].solutions[0].map(({ contents }) => ({ contents: contents, key: 'scriptjs', ext: 'js', name: 'script', history: ['script.js'] })) } }) ); } await Promise.all(submissionPromises); await page.goto('/settings');\n\nfor (const projectTitle of projectTitles) {\n      await page\n        .getByRole('button', { name: `View Solution for ${projectTitle}` })\n        .click();\n      const solutionModal = page.getByRole('dialog', {\n        name: `Solution for ${projectTitle}`\n      });\n      await expect(solutionModal).toBeVisible();\n      await solutionModal\n        .getByRole('button', { name: translations.buttons['close'] })\n        .first()\n        .click();\n      // Wait for the modal to disappear before continue\n      await expect(solutionModal).toBeHidden();\n    }\n\nawait page\n      .getByRole('button', {\n        name: translations.buttons['agree-honesty']\n      })\n      .click();\n\nawait alertToBeVisible(page, translations.buttons['accepted-honesty']);\n\nawait page\n      .getByRole('button', {\n        name: 'Claim Certification Legacy JavaScript Algorithms and Data Structures'\n      })\n      .click();\n\nawait alertToBeVisible(\n      page,\n      '@developmentuser, you have successfully claimed the Legacy JavaScript Algorithms and Data Structures Certification! Congratulations on behalf of the freeCodeCamp.org team!'\n    );\n\nconst showCertLink = page.getByRole('link', {\n      name: 'Show Certification Legacy JavaScript Algorithms and Data Structures'\n    });\n    await expect(showCertLink).toBeVisible();\n    await expect(showCertLink).toHaveAttribute(\n      'href',\n      '/certification/developmentuser/javascript-algorithms-and-data-structures'\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9063,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\projects.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 4,
    "total_chunks": 7
  },
  {
    "id": "48f44067f45edda3ba0312563beb1650",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\projects.spec.ts",
    "source_type": "git_repo",
    "title": "projects.spec",
    "content": "expect(solutionModal).toBeHidden(); } await page .getByRole('button', { name: translations.buttons['agree-honesty'] }) .click(); await alertToBeVisible(page, translations.buttons['accepted-honesty']); await page .getByRole('button', { name: 'Claim Certification Legacy JavaScript Algorithms and Data Structures' }) .click(); await alertToBeVisible( page, '@developmentuser, you have successfully claimed the Legacy JavaScript Algorithms and Data Structures Certification! Congratulations on behalf of the freeCodeCamp.org team!' ); const showCertLink = page.getByRole('link', { name: 'Show Certification Legacy JavaScript Algorithms and Data Structures' }); await expect(showCertLink).toBeVisible(); await expect(showCertLink).toHaveAttribute( 'href', '/certification/developmentuser/javascript-algorithms-and-data-structures' ); }); });\n\ntest.describe('Completion modal should be shown after submitting a project', () => {\n  test.skip(\n    ({ browserName }) => browserName !== 'chromium',\n    'Only chromium allows us to use the clipboard API.'\n  );\n\ntest('Ctrl + enter triggers the completion modal on multifile projects', async ({\n    page,\n    context,\n    isMobile\n  }) => {\n    test.skip(isMobile);\n    await context.grantPermissions(['clipboard-read', 'clipboard-write']);\n\nconst tributeContent = [\n      tributePage.htmlFile.contents,\n      tributePage.cssFile.contents\n    ];\n\nawait page.goto(\n      '/learn/2022/responsive-web-design/build-a-tribute-page-project/build-a-tribute-page'\n    );\n    const editors = getEditors(page);\n    await page.getByRole('button', { name: 'styles.css' }).click();\n\nfor (let i = 0; i < 2; i++) {\n      await page.evaluate(\n        async contents => await navigator.clipboard.writeText(contents),\n        tributeContent[i]\n      );\n\nawait editors.nth(i).focus();\n      await pasteContent(page);\n    }\n\nawait page.keyboard.press('Control+Enter');\n    await page\n      .getByRole('button', { name: 'Go to next challenge', exact: false })\n      .click();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9063,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\projects.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 5,
    "total_chunks": 7
  },
  {
    "id": "1f1018ec122cec786761245197e143d5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\projects.spec.ts",
    "source_type": "git_repo",
    "title": "projects.spec",
    "content": "multifile projects', async ({ page, context, isMobile }) => { test.skip(isMobile); await context.grantPermissions(['clipboard-read', 'clipboard-write']); const tributeContent = [ tributePage.htmlFile.contents, tributePage.cssFile.contents ]; await page.goto( '/learn/2022/responsive-web-design/build-a-tribute-page-project/build-a-tribute-page' ); const editors = getEditors(page); await page.getByRole('button', { name: 'styles.css' }).click(); for (let i = 0; i < 2; i++) { await page.evaluate( async contents => await navigator.clipboard.writeText(contents), tributeContent[i] ); await editors.nth(i).focus(); await pasteContent(page); } await page.keyboard.press('Control+Enter'); await page .getByRole('button', { name: 'Go to next challenge', exact: false }) .click(); }); });\n\ntest.describe('Should not be able to submit in quick succesion', () => {\n  test('should not be possible to submit twice in quick succession', async ({\n    page\n  }) => {\n    const { superBlock, block, challenges } = pythonProjects;\n    const { slug } = challenges[0];\n\nconst url = `/learn/${superBlock}/${block}/${slug}`;\n    await page.goto(url);\n\nawait page\n      .getByLabel('Solution Link')\n      .fill('https://replit.com/@camperbot/python-project#main.py');\n\nconst completedButton = page.getByRole('button', {\n      name: \"I've completed this challenge\"\n    });\n\nawait completedButton.click();\n\nawait expect(page.getByRole('dialog')).toBeVisible();\n\nconst submitChallenge = page.getByRole('button', {\n      name: 'Go to next challenge',\n      exact: false\n    });\n    await submitChallenge.click();\n\nawait expect(completedButton).toBeDisabled();\n\nawait expect(page.getByRole('dialog')).not.toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 9063,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\projects.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 397,
    "chunk_index": 6,
    "total_chunks": 7
  },
  {
    "id": "276d16cb196218c5f823cdebedb17350",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\quincy-email-sign-up.spec.ts",
    "source_type": "git_repo",
    "title": "quincy-email-sign-up.spec",
    "content": "import { execSync } from 'child_process';\n\nimport { test, expect } from '@playwright/test';\n\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { allowTrailingSlash } from './utils/url';\n\nconst apiLocation = process.env.API_LOCATION || 'http://localhost:3000';\n\ntest.describe('Email sign-up page when user is not signed in', () => {\n  test.use({ storageState: { cookies: [], origins: [] } });\n\ntest.beforeEach(async ({ page }) => {\n    await page.goto('/email-sign-up');\n  });\n\ntest('should display the content correctly', async ({ page }) => {\n    await expect(\n      page.getByRole('heading', {\n        level: 1,\n        name: translations.misc['email-signup']\n      })\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.misc['email-blast'])\n    ).toBeVisible();\n    await expect(\n      page.getByRole('link', {\n        name: translations.buttons['sign-up-email-list']\n      })\n    ).toBeVisible();\n  });\n\ntest(\"should not enable Quincy's weekly newsletter when the user clicks the sign up button\", async ({\n    page\n  }) => {\n    await expect(page).toHaveTitle('Email Sign Up | freeCodeCamp.org');\n    await expect(\n      page.getByText(translations.misc['email-blast'])\n    ).toBeVisible();\n\nconst signupLink = page.getByRole('link', {\n      name: translations.buttons['sign-up-email-list']\n    });\n\nawait expect(signupLink).toBeVisible();\n    await expect(signupLink).toHaveAttribute('href', `${apiLocation}/signin`);\n    await signupLink.click();\n\n// The user is signed in and automatically redirected to /learn after clicking the button.\n    // We wait for this navigation to complete before moving onto the next.\n    await page.waitForURL(allowTrailingSlash('/learn'));\n    await expect(\n      page.getByRole('heading', { name: 'Welcome back, Full Stack User' })\n    ).toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7332,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\quincy-email-sign-up.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 416,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "e801e40a5e6e9cb2d6b2ea2425572870",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\quincy-email-sign-up.spec.ts",
    "source_type": "git_repo",
    "title": "quincy-email-sign-up.spec",
    "content": "sign up button\", async ({ page }) => { await expect(page).toHaveTitle('Email Sign Up | freeCodeCamp.org'); await expect( page.getByText(translations.misc['email-blast']) ).toBeVisible(); const signupLink = page.getByRole('link', { name: translations.buttons['sign-up-email-list'] }); await expect(signupLink).toBeVisible(); await expect(signupLink).toHaveAttribute('href', `${apiLocation}/signin`); await signupLink.click(); // The user is signed in and automatically redirected to /learn after clicking the button. // We wait for this navigation to complete before moving onto the next. await page.waitForURL(allowTrailingSlash('/learn')); await expect( page.getByRole('heading', { name: 'Welcome back, Full Stack User' }) ).toBeVisible();\n\nawait page.goto('/settings');\n    await expect(\n      page.getByRole('group', { name: translations.settings.email.weekly })\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: translations.buttons['yes-please'] })\n    ).toHaveAttribute('aria-pressed', 'false');\n    await expect(\n      page.getByRole('button', { name: translations.buttons['no-thanks'] })\n    ).toHaveAttribute('aria-pressed', 'true');\n  });\n});\n\ntest.describe('Email sign-up page when user is signed in', () => {\n  test.beforeEach(async ({ page }) => {\n    // It's necessary to seed with a user that has not accepted the privacy\n    // terms, otherwise the user will be redirected away from the email sign-up\n    // page.\n    execSync(\n      'node ./tools/scripts/seed/seed-demo-user --certified-user --set-false acceptedPrivacyTerms'\n    );\n\nawait page.goto('/email-sign-up');\n  });\n\ntest('should display the content correctly', async ({ page }) => {\n    await expect(page).toHaveTitle('Email Sign Up | freeCodeCamp.org');\n    await expect(\n      page.getByText(translations.misc['email-blast'])\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: translations.buttons['yes-please'] })\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: translations.buttons['no-thanks'] })\n    ).toBeVisible();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7332,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\quincy-email-sign-up.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "0f34c72c938ba841a37e116034e7868c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\quincy-email-sign-up.spec.ts",
    "source_type": "git_repo",
    "title": "quincy-email-sign-up.spec",
    "content": "It's necessary to seed with a user that has not accepted the privacy // terms, otherwise the user will be redirected away from the email sign-up // page. execSync( 'node ./tools/scripts/seed/seed-demo-user --certified-user --set-false acceptedPrivacyTerms' ); await page.goto('/email-sign-up'); }); test('should display the content correctly', async ({ page }) => { await expect(page).toHaveTitle('Email Sign Up | freeCodeCamp.org'); await expect( page.getByText(translations.misc['email-blast']) ).toBeVisible(); await expect( page.getByRole('button', { name: translations.buttons['yes-please'] }) ).toBeVisible(); await expect( page.getByRole('button', { name: translations.buttons['no-thanks'] }) ).toBeVisible(); });\n\ntest(\"should disable Quincy's weekly newsletter if the user clicks No\", async ({\n    page\n  }) => {\n    await expect(page).toHaveTitle('Email Sign Up | freeCodeCamp.org');\n    await expect(\n      page.getByText(translations.misc['email-blast'])\n    ).toBeVisible();\n\nconst noThanksButton = page.getByRole('button', {\n      name: translations.buttons['no-thanks']\n    });\n\nawait expect(noThanksButton).toBeVisible();\n    await noThanksButton.click();\n\n// The user is signed in and automatically redirected to /learn after clicking the button.\n    // We wait for the navigation to complete.\n    await page.waitForURL('/learn');\n    await expect(\n      page.getByRole('heading', { name: 'Welcome back, Full Stack User' })\n    ).toBeVisible();\n\nawait page.goto('/settings');\n    await expect(\n      page.getByRole('group', { name: translations.settings.email.weekly })\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: translations.buttons['no-thanks'] })\n    ).toHaveAttribute('aria-pressed', 'true');\n    await expect(\n      page.getByRole('button', { name: translations.buttons['yes-please'] })\n    ).toHaveAttribute('aria-pressed', 'false');\n  });\n\ntest(\"should enable Quincy's weekly newsletter if the user clicks Yes\", async ({\n    page\n  }) => {\n    await expect(page).toHaveTitle('Email Sign Up | freeCodeCamp.org');\n    await expect(\n      page.getByText(translations.misc['email-blast'])\n    ).toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7332,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\quincy-email-sign-up.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "6bc79c1c52719c971e1e59b1226a5553",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\quincy-email-sign-up.spec.ts",
    "source_type": "git_repo",
    "title": "quincy-email-sign-up.spec",
    "content": "We wait for the navigation to complete. await page.waitForURL('/learn'); await expect( page.getByRole('heading', { name: 'Welcome back, Full Stack User' }) ).toBeVisible(); await page.goto('/settings'); await expect( page.getByRole('group', { name: translations.settings.email.weekly }) ).toBeVisible(); await expect( page.getByRole('button', { name: translations.buttons['no-thanks'] }) ).toHaveAttribute('aria-pressed', 'true'); await expect( page.getByRole('button', { name: translations.buttons['yes-please'] }) ).toHaveAttribute('aria-pressed', 'false'); }); test(\"should enable Quincy's weekly newsletter if the user clicks Yes\", async ({ page }) => { await expect(page).toHaveTitle('Email Sign Up | freeCodeCamp.org'); await expect( page.getByText(translations.misc['email-blast']) ).toBeVisible();\n\nconst signupButton = page.getByRole('button', {\n      name: translations.buttons['yes-please']\n    });\n\nawait expect(signupButton).toBeVisible();\n    await signupButton.click();\n\n// The user is signed in and automatically redirected to /learn after clicking the button.\n    // We wait for the navigation to complete.\n    await page.waitForURL('/learn');\n    await expect(\n      page.getByRole('heading', { name: 'Welcome back, Full Stack User' })\n    ).toBeVisible();\n\n// When the user clicks Yes, the /update-privacy-terms API is called\n    // to update both `acceptedPrivacyTerms` and `sendQuincyEmail`.\n    // But `sendQuincyEmail` is not set in the DB since the endpoint is mocked,\n    // so we are overriding the user data once again to mimic the real behavior.\n    await page.route('*/**/user/get-session-user', async route => {\n      const response = await route.fetch();\n      const json = await response.json();\n\njson.user.certifieduser.sendQuincyEmail = true;\n      await route.fulfill({ json });\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7332,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\quincy-email-sign-up.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 414,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "8104e9e7580523e6e206eeb7e320e80f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\quincy-email-sign-up.spec.ts",
    "source_type": "git_repo",
    "title": "quincy-email-sign-up.spec",
    "content": "Full Stack User' }) ).toBeVisible(); // When the user clicks Yes, the /update-privacy-terms API is called // to update both `acceptedPrivacyTerms` and `sendQuincyEmail`. // But `sendQuincyEmail` is not set in the DB since the endpoint is mocked, // so we are overriding the user data once again to mimic the real behavior. await page.route('*/**/user/get-session-user', async route => { const response = await route.fetch(); const json = await response.json(); json.user.certifieduser.sendQuincyEmail = true; await route.fulfill({ json }); });\n\nawait page.goto('/settings');\n    await expect(\n      page.getByRole('group', { name: translations.settings.email.weekly })\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: translations.buttons['yes-please'] })\n    ).toHaveAttribute('aria-pressed', 'true');\n    await expect(\n      page.getByRole('button', { name: translations.buttons['no-thanks'] })\n    ).toHaveAttribute('aria-pressed', 'false');\n  });\n});\n\ntest.describe('Email sign-up page when the user is new', () => {\n  test.use({ storageState: 'playwright/.auth/development-user.json' });\n\ntest.beforeEach(async ({ page }) => {\n    // It's necessary to seed with a user that has not accepted the privacy\n    // terms, otherwise the user will be redirected away from the email sign-up\n    // page.\n    execSync(\n      'node ./tools/scripts/seed/seed-demo-user --set-false acceptedPrivacyTerms'\n    );\n\nawait page.goto('/email-sign-up');\n  });\n\ntest.afterAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7332,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\quincy-email-sign-up.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 374,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "a1f748bed25eefe6028aeb11193a1f1e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\quincy-email-sign-up.spec.ts",
    "source_type": "git_repo",
    "title": "quincy-email-sign-up.spec",
    "content": "expect( page.getByRole('button', { name: translations.buttons['no-thanks'] }) ).toHaveAttribute('aria-pressed', 'false'); }); }); test.describe('Email sign-up page when the user is new', () => { test.use({ storageState: 'playwright/.auth/development-user.json' }); test.beforeEach(async ({ page }) => { // It's necessary to seed with a user that has not accepted the privacy // terms, otherwise the user will be redirected away from the email sign-up // page. execSync( 'node ./tools/scripts/seed/seed-demo-user --set-false acceptedPrivacyTerms' ); await page.goto('/email-sign-up'); }); test.afterAll(() => { execSync('node ./tools/scripts/seed/seed-demo-user --certified-user'); });\n\ntest('should display the content correctly', async ({ page }) => {\n    await expect(\n      page.getByRole('heading', {\n        level: 1,\n        name: translations.misc['brand-new-account']\n      })\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.misc['email-blast'])\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: translations.buttons['yes-please'] })\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: translations.buttons['no-thanks'] })\n    ).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7332,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\quincy-email-sign-up.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 291,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "715d8dc2888d2835837722a520e4acb9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\quiz-challenge.spec.ts",
    "source_type": "git_repo",
    "title": "quiz-challenge.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport { allowTrailingSlash } from './utils/url';\n\ntest.describe('Quiz challenge', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto(\n      '/learn/full-stack-developer/quiz-basic-html/quiz-basic-html'\n    );\n  });\n\ntest('should display a list of unanswered questions if user has not answered all questions', async ({\n    page\n  }) => {\n    // Wait for the page content to render\n    await expect(page.getByRole('radiogroup')).toHaveCount(20);\n\nfor (let i = 0; i < 15; i++) {\n      const radioGroups = await page.getByRole('radiogroup').all();\n      await radioGroups[i].getByRole('radio').first().click();\n    }\n\nawait page.getByRole('button', { name: 'Finish the quiz' }).click();\n\nawait expect(\n      page.getByText(\n        'The following questions are unanswered: 16, 17, 18, 19, 20. You must answer all questions.'\n      )\n    ).toBeVisible();\n  });\n\ntest('should allow user to complete the block when they pass the quiz', async ({\n    page\n  }) => {\n    test.setTimeout(20000);\n\n// Wait for the page content to render\n    await expect(page.getByRole('radiogroup')).toHaveCount(20);\n\nconst radioGroups = await page.getByRole('radiogroup').all();\n\n// Answer 18 questions correctly.\n    // This is enough to pass the quiz, and also allowing us to test the quiz passing criteria.\n    for (let i = 0; i < radioGroups.length; i++) {\n      if (i <= 17) {\n        await radioGroups[i].locator(\"[role='radio'][data-value='4']\").click();\n      } else {\n        await radioGroups[i].locator(\"[role='radio'][data-value='1']\").click();\n      }\n    }\n\nawait page.getByRole('button', { name: 'Finish the quiz' }).click();\n    await page.getByRole('button', { name: 'Yes, I am finished' }).click();\n\n// Wait for the finish quiz modal to close\n    await expect(\n      page.getByRole('dialog', { name: 'Finish Quiz' })\n    ).toBeHidden();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7096,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\quiz-challenge.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 5
  },
  {
    "id": "980aabdd1d2ef7a9a61e8d05cd22ff39",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\quiz-challenge.spec.ts",
    "source_type": "git_repo",
    "title": "quiz-challenge.spec",
    "content": "This is enough to pass the quiz, and also allowing us to test the quiz passing criteria. for (let i = 0; i < radioGroups.length; i++) { if (i <= 17) { await radioGroups[i].locator(\"[role='radio'][data-value='4']\").click(); } else { await radioGroups[i].locator(\"[role='radio'][data-value='1']\").click(); } } await page.getByRole('button', { name: 'Finish the quiz' }).click(); await page.getByRole('button', { name: 'Yes, I am finished' }).click(); // Wait for the finish quiz modal to close await expect( page.getByRole('dialog', { name: 'Finish Quiz' }) ).toBeHidden();\n\n// Check that the completion modal shows up\n    await expect(\n      page\n        .getByRole('dialog')\n        .filter({ has: page.getByRole('button', { name: /submit and go/i }) })\n    ).toBeVisible();\n\nawait page\n      .getByRole('dialog')\n      .getByRole('button', { name: /close/i })\n      .click();\n\n// Wait for the completion modal to close\n    await expect(page.getByRole('dialog')).toBeHidden();\n\n// If the user closes the modal without submitting,\n    // the finish quiz button is replaced by the submit one.\n    await expect(\n      page.getByRole('button', { name: 'Finish the quiz' })\n    ).toBeHidden();\n    await expect(\n      page.getByRole('button', { name: /submit and go/i })\n    ).toBeVisible();\n\nawait expect(\n      page.getByText('You have 18 out of 20 questions correct.')\n    ).toBeVisible();\n\n// Confirm that all options are disabled.\n    // We do this by finding all of the disabled radio elements on the page,\n    // and check if the count matches the total number of quiz answers (4 answers x 20 questions).\n    // This approach is much faster than querying each radio on the page and check if they are disabled.\n    await expect(\n      page.locator(\"[role='radio'][aria-disabled='true']\")\n    ).toHaveCount(4 * 20);\n  });\n\ntest(\"should not allow user to complete the block when they don't pass the quiz\", async ({\n    page\n  }) => {\n    test.setTimeout(20000);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7096,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\quiz-challenge.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 484,
    "chunk_index": 1,
    "total_chunks": 5
  },
  {
    "id": "4e9edefdf87ee3d2ad41ddb7936fa381",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\quiz-challenge.spec.ts",
    "source_type": "git_repo",
    "title": "quiz-challenge.spec",
    "content": "by finding all of the disabled radio elements on the page, // and check if the count matches the total number of quiz answers (4 answers x 20 questions). // This approach is much faster than querying each radio on the page and check if they are disabled. await expect( page.locator(\"[role='radio'][aria-disabled='true']\") ).toHaveCount(4 * 20); }); test(\"should not allow user to complete the block when they don't pass the quiz\", async ({ page }) => { test.setTimeout(20000);\n\n// Wait for the page content to render\n    await expect(page.getByRole('radiogroup')).toHaveCount(20);\n\nconst radioGroups = await page.getByRole('radiogroup').all();\n\n// Answer only 10 questions correctly.\n    for (let i = 0; i < radioGroups.length; i++) {\n      if (i <= 9) {\n        await radioGroups[i].locator(\"[role='radio'][data-value='4']\").click();\n      } else {\n        await radioGroups[i].locator(\"[role='radio'][data-value='1']\").click();\n      }\n    }\n\nawait page.getByRole('button', { name: 'Finish the quiz' }).click();\n    await page.getByRole('button', { name: 'Yes, I am finished' }).click();\n\n// Wait for the finish quiz modal to close\n    await expect(\n      page.getByRole('dialog', { name: 'Finish Quiz' })\n    ).toBeHidden();\n\nawait expect(\n      page.getByText('You have 10 out of 20 questions correct.')\n    ).toBeVisible();\n\nawait expect(\n      page.getByRole('button', { name: 'Finish the quiz' })\n    ).toBeDisabled();\n\n// Confirm that all options are disabled.\n    // We do this by finding all of the disabled radio elements on the page,\n    // and check if the count matches the total number of quiz answers (4 answers x 20 questions).\n    // This approach is much faster than querying each radio on the page and check if they are disabled.\n    await expect(\n      page.locator(\"[role='radio'][aria-disabled='true']\")\n    ).toHaveCount(4 * 20);\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7096,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\quiz-challenge.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 450,
    "chunk_index": 2,
    "total_chunks": 5
  },
  {
    "id": "18e65f7e56d89ee83251445b750005d8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\quiz-challenge.spec.ts",
    "source_type": "git_repo",
    "title": "quiz-challenge.spec",
    "content": "await expect( page.getByRole('button', { name: 'Finish the quiz' }) ).toBeDisabled(); // Confirm that all options are disabled. // We do this by finding all of the disabled radio elements on the page, // and check if the count matches the total number of quiz answers (4 answers x 20 questions). // This approach is much faster than querying each radio on the page and check if they are disabled. await expect( page.locator(\"[role='radio'][aria-disabled='true']\") ).toHaveCount(4 * 20); });\n\ntest('should show a confirm exit modal when user clicks on the exit button', async ({\n    page\n  }) => {\n    // Wait for the page content to render\n    await expect(page.getByRole('radiogroup')).toHaveCount(20);\n\nawait page.getByRole('button', { name: 'Exit the quiz' }).click();\n\n// The navigation should be blocked, the user should stay on the same page\n    await expect(page).toHaveURL(\n      allowTrailingSlash(\n        '/learn/full-stack-developer/quiz-basic-html/quiz-basic-html'\n      )\n    );\n\nawait expect(page.getByRole('dialog')).toBeVisible();\n    await expect(page.getByRole('dialog', { name: 'Exit Quiz' })).toBeVisible();\n\nawait page\n      .getByRole('button', { name: 'No, I would like to continue the quiz' })\n      .click();\n    await expect(page.getByRole('dialog', { name: 'Exit Quiz' })).toBeHidden();\n\nawait page.getByRole('button', { name: 'Exit the quiz' }).click();\n    await expect(page.getByRole('dialog', { name: 'Exit Quiz' })).toBeVisible();\n    await page\n      .getByRole('button', { name: 'Yes, I want to leave the quiz' })\n      .click();\n\nawait page.waitForURL('/learn/full-stack-developer/#quiz-basic-html');\n    await expect(\n      page.getByRole('heading', { level: 3, name: 'Basic HTML Quiz' })\n    ).toBeVisible();\n  });\n\ntest('should show a confirm exit modal when user clicks on a link', async ({\n    page\n  }) => {\n    // Wait for the page content to render\n    await expect(page.getByRole('radiogroup')).toHaveCount(20);\n\nawait page.getByRole('link', { name: 'Basic HTML Quiz' }).click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7096,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\quiz-challenge.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 3,
    "total_chunks": 5
  },
  {
    "id": "0c8d3362c1a246b14a934462d52f422f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\quiz-challenge.spec.ts",
    "source_type": "git_repo",
    "title": "quiz-challenge.spec",
    "content": "'Exit the quiz' }).click(); await expect(page.getByRole('dialog', { name: 'Exit Quiz' })).toBeVisible(); await page .getByRole('button', { name: 'Yes, I want to leave the quiz' }) .click(); await page.waitForURL('/learn/full-stack-developer/#quiz-basic-html'); await expect( page.getByRole('heading', { level: 3, name: 'Basic HTML Quiz' }) ).toBeVisible(); }); test('should show a confirm exit modal when user clicks on a link', async ({ page }) => { // Wait for the page content to render await expect(page.getByRole('radiogroup')).toHaveCount(20); await page.getByRole('link', { name: 'Basic HTML Quiz' }).click();\n\nawait expect(page.getByRole('dialog', { name: 'Exit Quiz' })).toBeVisible();\n    await page\n      .getByRole('button', { name: 'Yes, I want to leave the quiz' })\n      .click();\n\nawait page.waitForURL('/learn/full-stack-developer/#quiz-basic-html');\n    await expect(\n      page.getByRole('heading', { level: 3, name: 'Basic HTML Quiz' })\n    ).toBeVisible();\n  });\n\ntest('should show a confirm exit modal when user closes the page', async ({\n    page\n  }) => {\n    // Wait for the page content to render\n    await expect(page.getByRole('radiogroup')).toHaveCount(20);\n\npage.on('dialog', async dialog => {\n      expect(dialog.type()).toBe('beforeunload');\n      await dialog.dismiss();\n    });\n\nawait page.close({ runBeforeUnload: true });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 7096,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\quiz-challenge.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 342,
    "chunk_index": 4,
    "total_chunks": 5
  },
  {
    "id": "b498968b033e3569c930f197ddd22613",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\report-user.spec.ts",
    "source_type": "git_repo",
    "title": "report-user.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport {\n  deleteAllEmails,\n  getAllEmails,\n  getFirstEmail,\n  getSubject\n} from './utils/mailhog';\n\ntest.beforeEach(async () => {\n  await deleteAllEmails();\n});\n\ntest('should be possible to report a user from their profile page', async ({\n  page\n}) => {\n  await page.goto('/twaha');\n\n// If you build the client locally, delete the button click below.\n  if (!process.env.CI) {\n    await page.getByRole('button', { name: 'Preview custom 404 page' }).click();\n  }\n\nawait page.getByText(\"Flag This User's Account for Abuse\").click();\n\nawait expect(\n    page.getByText(\"Do you want to report twaha's portfolio for abuse?\")\n  ).toBeVisible();\n\nawait page\n    .getByRole('textbox', { name: 'What would you like to report?' })\n    .fill('Some details');\n  await page.getByRole('button', { name: 'Submit the report' }).click();\n  await expect(page).toHaveURL('/learn');\n\nawait expect(page.getByTestId('flash-message')).toBeVisible();\n  await expect(page.getByTestId('flash-message')).toContainText(\n    'A report was sent to the team with foo@bar.com in copy'\n  );\n\nawait expect(async () => {\n    const emails = await getAllEmails();\n    expect(emails.items).toHaveLength(1);\n    expect(getSubject(getFirstEmail(emails))).toBe(\n      \"Abuse Report : Reporting twaha's profile.\"\n    );\n  }).toPass();\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1357,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\report-user.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 332,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "94c52d572602d99522b4963f0d4e2b0b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\reset-editor-layout.spec.ts",
    "source_type": "git_repo",
    "title": "reset-editor-layout.spec",
    "content": "import { test, expect } from '@playwright/test';\n\ntest.describe('Reset Editor Layout', () => {\n  test('drag layout and reset', async ({ page, isMobile }) => {\n    test.skip(\n      isMobile,\n      'The mobile layout does not have resizable panes, so this test is not applicable.'\n    );\n\nawait page.goto(\n      '/learn/2022/responsive-web-design/learn-basic-css-by-building-a-cafe-menu/step-15'\n    );\n\nconst desktopLayout = page.getByTestId('desktop-layout');\n    const splitter = page.getByTestId('preview-left-splitter');\n    const editorPane = desktopLayout.getByTestId('editor-pane');\n    const initialStyle = await editorPane.getAttribute('style');\n\nexpect(initialStyle).toContain('flex: 1');\n\n// Drag the splitter to resize the editor pane\n    await splitter.hover();\n    await page.mouse.down();\n    await page.mouse.move(100, 100);\n    await page.mouse.up();\n\nconst newStyle = await editorPane.getAttribute('style');\n    expect(newStyle).not.toContain('flex: 1');\n\nawait page.goto('/settings#privacy-settings');\n\nconst resetButton = page.getByTestId('reset-layout-btn');\n    await resetButton.click();\n\nawait expect(page.getByTestId('flash-message')).toContainText(\n      'Your editor layout has been reset'\n    );\n\nawait expect(resetButton).toBeDisabled();\n\nawait page.goto(\n      '/learn/2022/responsive-web-design/learn-basic-css-by-building-a-cafe-menu/step-15'\n    );\n\nconst afterReset = await editorPane.getAttribute('style');\n    expect(afterReset).toContain('flex: 1');\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1540,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\reset-editor-layout.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 338,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "7383bb281e68de33afd65b111f7b6233",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\sass.spec.ts",
    "source_type": "git_repo",
    "title": "sass.spec",
    "content": "import { test, expect } from '@playwright/test';\n\ntest.describe('Sass Challenge', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto(\n      '/learn/front-end-development-libraries/sass/use-for-to-create-a-sass-loop'\n    );\n  });\n\ntest('should render the sass preview', async ({ page, isMobile }) => {\n    if (isMobile) {\n      await page.getByRole('tab', { name: 'Preview' }).click();\n    }\n\nconst frame = page.frameLocator('.challenge-preview iframe');\n    expect(frame).not.toBeNull();\n\nawait expect(frame.locator('.text-1')).toBeVisible();\n    await expect(frame.locator('.text-2')).toBeVisible();\n    await expect(frame.locator('.text-3')).toBeVisible();\n    await expect(frame.locator('.text-4')).toBeVisible();\n    await expect(frame.locator('.text-5')).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 812,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\sass.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 194,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c93dd9f35e65e2afab28b2308f56af99",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\redirect.spec.ts",
    "source_type": "git_repo",
    "title": "redirect.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport { allowTrailingSlash } from './utils/url';\n\n// To run this test locally you will need to run: pnpm run start-ci;\n// Also, make sure that you have pm2 installed globally via: pnpm install -g pm2",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3630,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\redirect.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 63,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "7cfb145e625af1fcb97e1a85ced7e84b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\redirect.spec.ts",
    "source_type": "git_repo",
    "title": "redirect.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport { allowTrailingSlash } from './utils/url';\n\n// To run this test locally you will need to run: pnpm run start-ci;\n// Also, make sure that you have pm2 installed globally via: pnpm install -g pm2const pathsToTest = [\n  ['/challenges', '/learn'],\n  ['/learn/front-end-libraries', 'learn/front-end-development-libraries'],\n  [\n    '/learn/front-end-libraries/bootstrap',\n    '/learn/front-end-development-libraries/bootstrap'\n  ],\n  [\n    '/learn/front-end-libraries/front-end-libraries-projects',\n    '/learn/front-end-development-libraries/front-end-development-libraries-projects'\n  ],\n  [\n    '/learn/front-end-libraries/front-end-libraries-projects/build-a-random-quote-machine',\n    '/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine'\n  ],\n  [\n    '/certification/certifieduser/front-end-libraries',\n    '/certification/certifieduser/front-end-development-libraries'\n  ],\n  [\n    '/learn/front-end-libraries/bootstrap/use-responsive-design-with-bootstrap-fluid-containers',\n    '/learn/front-end-development-libraries/bootstrap/use-responsive-design-with-bootstrap-fluid-containers'\n  ],\n  ['/learn/apis-and-microservices', 'learn/back-end-development-and-apis'],\n  [\n    '/learn/apis-and-microservices/managing-packages-with-npm',\n    '/learn/back-end-development-and-apis/managing-packages-with-npm'\n  ],\n  [\n    '/learn/apis-and-microservices/managing-packages-with-npm/how-to-use-package-json-the-core-of-any-node-js-project-or-npm-package',\n    '/learn/back-end-development-and-apis/managing-packages-with-npm/how-to-use-package-json-the-core-of-any-node-js-project-or-npm-package'\n  ],\n  [\n    '/learn/apis-and-microservices/apis-and-microservices-projects',\n    '/learn/back-end-development-and-apis/back-end-development-and-apis-projects'\n  ],\n  [\n    '/learn/apis-and-microservices/apis-and-microservices-projects/timestamp-microservice',\n    '/learn/back-end-development-and-apis/back-end-development-and-apis-projects/timestamp-microservice'\n  ],\n  [\n    '/certification/certifieduser/apis-and-microservices',\n    '/certification/certifieduser/back-end-development-and-apis'\n  ],\n  [\n    '/learn/responsive-web-design/applied-visual-design/adjust-the-size-of-a-header-versus-a-paragraph-tag',\n    '/learn/responsive-web-design/applied-visual-design/adjust-the-size-of-a-heading-element-versus-a-paragraph-element'\n  ],\n  [\n    '/learn/javascript-algorithms-and-data-structures/es6/explore-differences-between-the-var-and-let-keywords',\n    '/learn/javascript-algorithms-and-data-structures/basic-javascript/explore-differences-between-the-var-and-let-keywords'\n  ],\n  [\n    '/learn/javascript-algorithms-and-data-structures/es6/declare-a-read-only-variable-with-the-const-keyword',\n    '/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-a-read-only-variable-with-the-const-keyword'\n  ],\n  ['/challenges/responsive-web-design', '/learn/responsive-web-design'],\n  [\n    '/challenges/responsive-web-design/basic-html-and-html5',\n    '/learn/responsive-web-design/basic-html-and-html5'\n  ],\n  [\n    '/challenges/responsive-web-design/basic-html-and-html5/say-hello-to-html-elements',\n    '/learn/responsive-web-design/basic-html-and-html5/say-hello-to-html-elements'\n  ]\n];",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3630,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\redirect.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 763,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "4ac927921fb7a67d219b97f3842af02b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\redirect.spec.ts",
    "source_type": "git_repo",
    "title": "redirect.spec",
    "content": "pnpm install -g pm2const pathsToTest = [ ['/challenges', '/learn'], ['/learn/front-end-libraries', 'learn/front-end-development-libraries'], [ '/learn/front-end-libraries/bootstrap', '/learn/front-end-development-libraries/bootstrap' ], [ '/learn/front-end-libraries/front-end-libraries-projects', '/learn/front-end-development-libraries/front-end-development-libraries-projects' ], [ '/learn/front-end-libraries/front-end-libraries-projects/build-a-random-quote-machine', '/learn/front-end-development-libraries/front-end-development-libraries-projects/build-a-random-quote-machine' ], [ '/certification/certifieduser/front-end-libraries', '/certification/certifieduser/front-end-development-libraries' ], [ '/learn/front-end-libraries/bootstrap/use-responsive-design-with-bootstrap-fluid-containers', '/learn/front-end-development-libraries/bootstrap/use-responsive-design-with-bootstrap-fluid-containers' ], ['/learn/apis-and-microservices', 'learn/back-end-development-and-apis'], [ '/learn/apis-and-microservices/managing-packages-with-npm', '/learn/back-end-development-and-apis/managing-packages-with-npm' ], [ '/learn/apis-and-microservices/managing-packages-with-npm/how-to-use-package-json-the-core-of-any-node-js-project-or-npm-package', '/learn/back-end-development-and-apis/managing-packages-with-npm/how-to-use-package-json-the-core-of-any-node-js-project-or-npm-package' ], [ '/learn/apis-and-microservices/apis-and-microservices-projects', '/learn/back-end-development-and-apis/back-end-development-and-apis-projects' ], [ '/learn/apis-and-microservices/apis-and-microservices-projects/timestamp-microservice', '/learn/back-end-development-and-apis/back-end-development-and-apis-projects/timestamp-microservice' ], [ '/certification/certifieduser/apis-and-microservices', '/certification/certifieduser/back-end-development-and-apis' ], [ '/learn/responsive-web-design/applied-visual-design/adjust-the-size-of-a-header-versus-a-paragraph-tag', '/learn/responsive-web-design/applied-visual-design/adjust-the-size-of-a-heading-element-versus-a-paragraph-element' ], [ '/learn/javascript-algorithms-and-data-structures/es6/explore-differences-between-the-var-and-let-keywords', '/learn/javascript-algorithms-and-data-structures/basic-javascript/explore-differences-between-the-var-and-let-keywords' ], [ '/learn/javascript-algorithms-and-data-structures/es6/declare-a-read-only-variable-with-the-const-keyword', '/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-a-read-only-variable-with-the-const-keyword' ], ['/challenges/responsive-web-design', '/learn/responsive-web-design'], [ '/challenges/responsive-web-design/basic-html-and-html5', '/learn/responsive-web-design/basic-html-and-html5' ], [ '/challenges/responsive-web-design/basic-html-and-html5/say-hello-to-html-elements', '/learn/responsive-web-design/basic-html-and-html5/say-hello-to-html-elements' ] ];\n\ntest.describe('Legacy Challenge Path Redirection Tests', () => {\n  for (const [input, expected] of pathsToTest) {\n    test(`should redirect from ${input} to ${expected}`, async ({ page }) => {\n      await page.goto(input);\n      await expect(page).toHaveURL(allowTrailingSlash(expected));\n    });\n  }\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3630,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\redirect.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 715,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "e9cd9a06143dcb4df3be831d78a54428",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\scrollbar-width.spec.ts",
    "source_type": "git_repo",
    "title": "scrollbar-width.spec",
    "content": "import { test, expect } from '@playwright/test';\n\ntest.describe('Editor scrollbar width', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto('/settings');\n  });\n\ntest('Default editor scrollbar width should be 5px', async ({ page }) => {\n    await expect(page.locator('#scrollbar-width-slider')).toHaveValue('5');\n    await page.goto(\n      '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-2'\n    );\n\nconst upperJawElement = page.locator('.editor-upper-jaw');\n    const upperJawWidth = await upperJawElement.evaluate(\n      (node: HTMLElement) => node.offsetWidth\n    );\n\nconst lowerJawElement = page.locator('#editor-lower-jaw');\n    expect(\n      await lowerJawElement.evaluate((node: HTMLElement) => node.offsetWidth)\n    ).toEqual(upperJawWidth);\n\nconst scrollableElement = page.locator('.monaco-scrollable-element');\n    expect(\n      await scrollableElement.evaluate(\n        (node: HTMLElement) => node.offsetWidth - 5\n      )\n    ).toEqual(upperJawWidth);\n  });\n\ntest('Should allow you to change editor scrollbar width to 25px', async ({\n    page\n  }) => {\n    await page.locator('.scrollbar-width-numbers > [data-value=\"25\"]').click();\n    await expect(page.locator('#scrollbar-width-slider')).toHaveValue('25');\n    await page.goto(\n      '/learn/2022/responsive-web-design/learn-html-by-building-a-cat-photo-app/step-2'\n    );\n\nconst upperJawElement = page.locator('.editor-upper-jaw');\n    const upperJawWidth = await upperJawElement.evaluate(\n      (node: HTMLElement) => node.offsetWidth\n    );\n\nconst lowerJawElement = page.locator('#editor-lower-jaw');\n    expect(\n      await lowerJawElement.evaluate((node: HTMLElement) => node.offsetWidth)\n    ).toEqual(upperJawWidth);\n\nconst scrollableElement = page.locator('.monaco-scrollable-element');\n    expect(\n      await scrollableElement.evaluate(\n        (node: HTMLElement) => node.offsetWidth - 25\n      )\n    ).toEqual(upperJawWidth);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1987,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\scrollbar-width.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "6551b6aedfc6acf202934d69d15c9970",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\search-bar-optimized.spec.ts",
    "source_type": "git_repo",
    "title": "search-bar-optimized.spec",
    "content": "import { test, expect, type Page } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\nconst getSearchInput = async ({\n  page,\n  isMobile\n}: {\n  page: Page;\n  isMobile: boolean;\n}) => {\n  if (isMobile) {\n    const menuButton = page.getByRole('button', {\n      name: translations.buttons.menu\n    });\n    await expect(menuButton).toBeVisible();\n    await menuButton.click();\n  }\n\nreturn page.getByLabel('Search');\n};\n\ntest.describe('Search bar optimized', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto('/');\n  });\n\ntest('should display correct placeholder', async ({ page, isMobile }) => {\n    const searchInput = await getSearchInput({ page, isMobile });\n\nawait expect(searchInput).toBeVisible();\n    // Because we're mocking Algolia requests, the placeholder\n    // should be the default one.\n    await expect(searchInput).toHaveAttribute(\n      'placeholder',\n      translations.search.placeholder.default\n    );\n  });\n\ntest('should return the search results when the user presses Enter', async ({\n    context,\n    page,\n    isMobile\n  }) => {\n    const searchInput = await getSearchInput({ page, isMobile });\n    await expect(searchInput).toBeVisible();\n\nawait searchInput.fill('test');\n    await page.keyboard.press('Enter');\n\n// Wait for the new page to load.\n    const newPage = await context.waitForEvent('page');\n    await newPage.waitForLoadState();\n\nexpect(newPage.url()).toBe(\n      'https://www.freecodecamp.org/news/search/?query=test'\n    );\n  });\n\ntest('should return the search results when the user clicks the search button', async ({\n    context,\n    page,\n    isMobile\n  }) => {\n    const searchInput = await getSearchInput({ page, isMobile });\n    await expect(searchInput).toBeVisible();\n\nawait searchInput.fill('test');\n    await page\n      .getByRole('button', { name: translations.icons.magnifier })\n      .click();\n\n// Wait for the new page to load.\n    const newPage = await context.waitForEvent('page');\n    await newPage.waitForLoadState();\n\nexpect(newPage.url()).toBe(\n      'https://www.freecodecamp.org/news/search/?query=test'\n    );\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3125,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\search-bar-optimized.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "445619409a096a1595bd3bd793b88b78",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\search-bar-optimized.spec.ts",
    "source_type": "git_repo",
    "title": "search-bar-optimized.spec",
    "content": "for the new page to load. const newPage = await context.waitForEvent('page'); await newPage.waitForLoadState(); expect(newPage.url()).toBe( 'https://www.freecodecamp.org/news/search/?query=test' ); }); test('should return the search results when the user clicks the search button', async ({ context, page, isMobile }) => { const searchInput = await getSearchInput({ page, isMobile }); await expect(searchInput).toBeVisible(); await searchInput.fill('test'); await page .getByRole('button', { name: translations.icons.magnifier }) .click(); // Wait for the new page to load. const newPage = await context.waitForEvent('page'); await newPage.waitForLoadState(); expect(newPage.url()).toBe( 'https://www.freecodecamp.org/news/search/?query=test' ); });\n\ntest('should clear the search input when the user clicks the clear button', async ({\n    page,\n    isMobile\n  }) => {\n    const searchInput = await getSearchInput({ page, isMobile });\n    await expect(searchInput).toBeVisible();\n\nawait searchInput.fill('test');\n    await page\n      .getByRole('button', { name: translations.icons['input-reset'] })\n      .click();\n\nawait expect(searchInput).toHaveValue('');\n  });\n\ntest('The optimized searchbar component should not render when not on the landing page', async ({\n    page,\n    isMobile\n  }) => {\n    // This means that the default search bar should be rendered ^.\n    await page.getByTestId('curriculum-map-button').nth(0).click();\n\nif (isMobile) {\n      const menuButton = page.getByTestId('header-menu-button');\n      await expect(menuButton).toBeVisible();\n      await menuButton.click();\n    }\n\nawait expect(page.getByTestId('header-search')).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3125,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\search-bar-optimized.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 383,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "95d935d9f81e98e4688ccba2e633fe5d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\seo.spec.ts",
    "source_type": "git_repo",
    "title": "seo.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport { SuperBlocks } from '../shared/config/curriculum';\nimport metaTags from '../client/i18n/locales/english/meta-tags.json';\n\ninterface StructuredData {\n  '@context': string;\n  '@type': string;\n  itemListElement: ListItem[];\n}\n\ninterface ListItem {\n  '@type': string;\n  position: number;\n  item: {\n    '@type': string;\n    url: string;\n    name: string;\n    description: string;\n    provider: {\n      '@type': string;\n      name: string;\n      sameAs: string;\n      nonprofitStatus: string;\n    };\n  };\n}\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto('/');\n});\n\ntest('should set the correct title', async ({ page }) => {\n  await expect(page).toHaveTitle(metaTags.title);\n});\n\ntest('should inject structured data (JSON-LD) into the page', async ({\n  page\n}) => {\n  const structuredData = await page\n    .getByTestId('structured-data')\n    .textContent();\n\nexpect(structuredData).toBeTruthy();\n\nconst parsedData = JSON.parse(structuredData ?? '') as StructuredData;\n\nexpect(parsedData?.['@context']).toBe('https://schema.org');\n  expect(parsedData['@type']).toBe('ItemList');\n  expect(parsedData.itemListElement).toBeInstanceOf(Array);\n\nexpect(parsedData.itemListElement.length).toBe(\n    Object.values(SuperBlocks).length\n  );\n\nparsedData.itemListElement.forEach((listItem: ListItem, index: number) => {\n    expect(listItem['@type']).toBe('ListItem');\n    expect(listItem.position).toBe(index + 1);\n\nconst item = listItem.item;\n    expect(item['@type']).toBe('Course');\n    expect(item.url).toContain(`/learn/${Object.values(SuperBlocks)[index]}`);\n    expect(item.name).toBeTruthy();\n    expect(item.description).toBeTruthy();\n\nexpect(item.provider['@type']).toBe('Organization');\n    expect(item.provider.name).toBe('freeCodeCamp');\n    expect(item.provider.sameAs).toBe('https://freecodecamp.org');\n    expect(item.provider.nonprofitStatus).toBe('Nonprofit501c3');\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1959,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\seo.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 454,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "737622f907e17b5e6aff945a57a0182f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\search-bar.spec.ts",
    "source_type": "git_repo",
    "title": "search-bar.spec",
    "content": "import { test, expect, type Page } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport algoliaEightHits from './fixtures/algolia-eight-hits.json';\nimport algoliaFiveHits from './fixtures/algolia-five-hits.json';\nimport algoliaNoHits from './fixtures/algolia-no-hits.json';\n\nconst haveApiKeys =\n  process.env.ALGOLIA_APP_ID !== 'app_id_from_algolia_dashboard' &&\n  process.env.ALGOLIA_API_KEY !== 'api_key_from_algolia_dashboard';\n\nconst getSearchInput = async ({\n  page,\n  isMobile\n}: {\n  page: Page;\n  isMobile: boolean;\n}) => {\n  if (isMobile) {\n    const menuButton = page.getByRole('button', {\n      name: translations.buttons.menu\n    });\n    await expect(menuButton).toBeVisible();\n    await menuButton.click();\n  }\n\nreturn page.getByLabel('Search', { exact: true });\n};\n\nconst search = async ({\n  page,\n  isMobile,\n  query\n}: {\n  page: Page;\n  isMobile: boolean;\n  query: string;\n}) => {\n  const searchInput = await getSearchInput({ page, isMobile });\n  await searchInput.fill(query);\n};\n\n// Mock Algolia requests to prevent hitting Algolia server unnecessarily.\n// Comment out the function call if you want to test against the real server.\nconst mockAlgolia = async ({\n  page,\n  hitsPerPage\n}: {\n  page: Page;\n  hitsPerPage: number;\n}) => {\n  if (hitsPerPage === 8) {\n    await page.route(/dsn.algolia.net/, async route => {\n      await route.fulfill({ json: algoliaEightHits });\n    });\n  } else if (hitsPerPage === 5) {\n    await page.route(/dsn.algolia.net/, async route => {\n      await route.fulfill({ json: algoliaFiveHits });\n    });\n  } else if (hitsPerPage === 0) {\n    await page.route(/dsn.algolia.net/, async route => {\n      await route.fulfill({ json: algoliaNoHits });\n    });\n  }\n};\n\ntest.describe('Search bar', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto('/learn');\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8150,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\search-bar.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 481,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "46f5402346605109e3c0f64074cf2ac9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\search-bar.spec.ts",
    "source_type": "git_repo",
    "title": "search-bar.spec",
    "content": "hitsPerPage: number; }) => { if (hitsPerPage === 8) { await page.route(/dsn.algolia.net/, async route => { await route.fulfill({ json: algoliaEightHits }); }); } else if (hitsPerPage === 5) { await page.route(/dsn.algolia.net/, async route => { await route.fulfill({ json: algoliaFiveHits }); }); } else if (hitsPerPage === 0) { await page.route(/dsn.algolia.net/, async route => { await route.fulfill({ json: algoliaNoHits }); }); } }; test.describe('Search bar', () => { test.beforeEach(async ({ page }) => { await page.goto('/learn'); });\n\ntest('should display correctly', async ({ page, isMobile }) => {\n    const searchInput = await getSearchInput({ page, isMobile });\n\nawait expect(searchInput).toBeVisible();\n\nawait expect(searchInput).toHaveAttribute('placeholder', /Search/i);\n    await expect(\n      page.getByRole('button', { name: 'Submit search terms' })\n    ).toBeVisible();\n  });\n\ntest('should return the search results when the user presses Enter', async ({\n    page,\n    isMobile\n  }) => {\n    test.skip(!haveApiKeys, 'This test requires Algolia API keys');\n    await mockAlgolia({ page, hitsPerPage: 8 });\n    await search({ page, isMobile, query: 'article' });\n\n// Wait for the search results to show up\n    const resultList = page.getByRole('list', { name: 'Search results' });\n    // Initially, the dropdown contains an `li` with the text \"No tutorials found\",\n    // so we need to check the text content to ensure the correct `li` is displayed.\n    await expect(resultList.getByRole('listitem').first()).toContainText(\n      /article/i\n    );\n\nawait page.keyboard.press('Enter');\n\nawait page.waitForURL(\n      'https://www.freecodecamp.org/news/search/?query=article'\n    );\n    const title = await page.title();\n    expect(title).toBe('Search - freeCodeCamp.org');\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8150,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\search-bar.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "27d7bba731b11587de597b9ef122d6aa",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\search-bar.spec.ts",
    "source_type": "git_repo",
    "title": "search-bar.spec",
    "content": "hitsPerPage: 8 }); await search({ page, isMobile, query: 'article' }); // Wait for the search results to show up const resultList = page.getByRole('list', { name: 'Search results' }); // Initially, the dropdown contains an `li` with the text \"No tutorials found\", // so we need to check the text content to ensure the correct `li` is displayed. await expect(resultList.getByRole('listitem').first()).toContainText( /article/i ); await page.keyboard.press('Enter'); await page.waitForURL( 'https://www.freecodecamp.org/news/search/?query=article' ); const title = await page.title(); expect(title).toBe('Search - freeCodeCamp.org'); });\n\ntest('should return the search results when the user clicks the search button', async ({\n    page,\n    isMobile\n  }) => {\n    test.skip(!haveApiKeys, 'This test requires Algolia API keys');\n    await mockAlgolia({ page, hitsPerPage: 8 });\n    await search({ page, isMobile, query: 'article' });\n\n// Wait for the search results to show up\n    const resultList = page.getByRole('list', { name: 'Search results' });\n    // Initially, the dropdown contains an `li` with the text \"No tutorials found\",\n    // so we need to check the text content to ensure the correct `li` is displayed.\n    await expect(resultList.getByRole('listitem').first()).toContainText(\n      /article/i\n    );\n\nawait page.getByRole('button', { name: 'Submit search terms' }).click();\n\nawait page.waitForURL(\n      'https://www.freecodecamp.org/news/search/?query=article'\n    );\n    const title = await page.title();\n    expect(title).toBe('Search - freeCodeCamp.org');\n  });\n\ntest('should show an empty result list if no results found', async ({\n    page,\n    isMobile\n  }) => {\n    await mockAlgolia({ page, hitsPerPage: 0 });\n    await search({ page, isMobile, query: 'test' });\n\nconst resultList = page.getByRole('list', { name: 'Search results' });\n    await expect(resultList.getByRole('listitem')).toHaveCount(1);\n    await expect(resultList.getByRole('listitem')).toHaveText(\n      'No results found'\n    );\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8150,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\search-bar.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "967ac4df08336c4e99c9efd1b7fe7441",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\search-bar.spec.ts",
    "source_type": "git_repo",
    "title": "search-bar.spec",
    "content": "`li` is displayed. await expect(resultList.getByRole('listitem').first()).toContainText( /article/i ); await page.getByRole('button', { name: 'Submit search terms' }).click(); await page.waitForURL( 'https://www.freecodecamp.org/news/search/?query=article' ); const title = await page.title(); expect(title).toBe('Search - freeCodeCamp.org'); }); test('should show an empty result list if no results found', async ({ page, isMobile }) => { await mockAlgolia({ page, hitsPerPage: 0 }); await search({ page, isMobile, query: 'test' }); const resultList = page.getByRole('list', { name: 'Search results' }); await expect(resultList.getByRole('listitem')).toHaveCount(1); await expect(resultList.getByRole('listitem')).toHaveText( 'No results found' ); });\n\ntest('should clear the input and hide the result dropdown when the user clicks the clear button', async ({\n    page,\n    isMobile\n  }) => {\n    const searchInput = await getSearchInput({ page, isMobile });\n    await expect(searchInput).toBeVisible();\n\nawait searchInput.fill('test');\n    await page.getByRole('button', { name: 'Clear search terms' }).click();\n\nawait expect(searchInput).toHaveValue('');\n    await expect(\n      page.getByRole('list', { name: 'Search results' })\n    ).toBeHidden();\n  });\n\ntest('should close the dropdown when the user clicks outside of the search bar', async ({\n    page,\n    isMobile\n  }) => {\n    const searchInput = await getSearchInput({ page, isMobile });\n    await expect(searchInput).toBeVisible();\n\nawait searchInput.fill('test');\n\n// Wait for the search results to show up\n    const resultList = page.getByRole('list', { name: 'Search results' });\n    await expect(resultList).toBeVisible();\n\nawait page.getByRole('navigation', { name: 'primary' }).click();\n    await expect(resultList).toBeHidden();\n  });\n});\n\ntest.describe('Search results when viewport height is greater than 768px', () => {\n  test.use({\n    viewport: { width: 1600, height: 1200 }\n  });\n\ntest.beforeEach(async ({ page }) => {\n    await page.goto('/learn');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8150,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\search-bar.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 483,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "6b43ddef55bcc4c1012e6f5175dd909f",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\search-bar.spec.ts",
    "source_type": "git_repo",
    "title": "search-bar.spec",
    "content": "page, isMobile }) => { const searchInput = await getSearchInput({ page, isMobile }); await expect(searchInput).toBeVisible(); await searchInput.fill('test'); // Wait for the search results to show up const resultList = page.getByRole('list', { name: 'Search results' }); await expect(resultList).toBeVisible(); await page.getByRole('navigation', { name: 'primary' }).click(); await expect(resultList).toBeHidden(); }); }); test.describe('Search results when viewport height is greater than 768px', () => { test.use({ viewport: { width: 1600, height: 1200 } }); test.beforeEach(async ({ page }) => { await page.goto('/learn');\n\n// Mock Algolia requests to prevent hitting Algolia server unnecessarily.\n    // Comment out this line if you want to test against the real server.\n    await mockAlgolia({ page, hitsPerPage: 8 });\n  });\n\ntest('should display 8 items', async ({ page, isMobile }) => {\n    test.skip(!haveApiKeys, 'This test requires Algolia API keys');\n\nawait search({ page, isMobile, query: 'article' });\n\n// Wait for the search results to show up\n    const results = page.getByRole('list', { name: 'Search results' });\n    await expect(results.getByRole('listitem')).toHaveCount(9); // 8 results + the footer\n  });\n});\n\ntest.describe('Search results when viewport height is equal to 768px', () => {\n  test.use({\n    viewport: { width: 1600, height: 768 }\n  });\n\ntest.beforeEach(async ({ page }) => {\n    await page.goto('/learn');\n\n// Mock Algolia requests to prevent hitting Algolia server unnecessarily.\n    // Comment out this line if you want to test against the real server.\n    await mockAlgolia({ page, hitsPerPage: 8 });\n  });\n\ntest('should display 8 items', async ({ page, isMobile }) => {\n    test.skip(!haveApiKeys, 'This test requires Algolia API keys');\n\nawait search({ page, isMobile, query: 'article' });\n\n// Wait for the search results to show up\n    const results = page.getByRole('list', { name: 'Search results' });\n    await expect(results.getByRole('listitem')).toHaveCount(9); // 8 results + the footer\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8150,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\search-bar.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "81b62d31cb660e8acf1caf7119d72449",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\search-bar.spec.ts",
    "source_type": "git_repo",
    "title": "search-bar.spec",
    "content": "server unnecessarily. // Comment out this line if you want to test against the real server. await mockAlgolia({ page, hitsPerPage: 8 }); }); test('should display 8 items', async ({ page, isMobile }) => { test.skip(!haveApiKeys, 'This test requires Algolia API keys'); await search({ page, isMobile, query: 'article' }); // Wait for the search results to show up const results = page.getByRole('list', { name: 'Search results' }); await expect(results.getByRole('listitem')).toHaveCount(9); // 8 results + the footer }); });\n\ntest.describe('Search results when viewport height is less than 768px', () => {\n  test.use({\n    viewport: { width: 1600, height: 500 }\n  });\n\ntest.beforeEach(async ({ page }) => {\n    await page.goto('/learn');\n\n// Mock Algolia requests to prevent hitting Algolia server unnecessarily.\n    // Comment out this line if you want to test against the real server.\n    await mockAlgolia({ page, hitsPerPage: 5 });\n  });\n\ntest('should display 5 items', async ({ page, isMobile }) => {\n    test.skip(!haveApiKeys, 'This test requires Algolia API keys');\n\nawait search({ page, isMobile, query: 'article' });\n\n// Wait for the search results to show up\n    const results = page.getByRole('list', { name: 'Search results' });\n    await expect(results.getByRole('listitem')).toHaveCount(6); // 5 results + the footer\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8150,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\search-bar.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 330,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "b7985ece85bb9a48eb32a3e4d6a52e3d",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\shortcuts-modal.spec.ts",
    "source_type": "git_repo",
    "title": "shortcuts-modal.spec",
    "content": "import { APIRequestContext, Page, expect, test } from '@playwright/test';\n\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { authedRequest } from './utils/request';\nimport { getEditors } from './utils/editor';\n\nconst course =\n  '/learn/javascript-algorithms-and-data-structures/basic-javascript/comment-your-javascript-code';\n\nconst enableKeyboardShortcuts = async (request: APIRequestContext) => {\n  const res = await authedRequest({\n    request,\n    endpoint: '/update-my-keyboard-shortcuts',\n    method: 'put',\n    data: {\n      keyboardShortcuts: true\n    }\n  });\n  expect(await res.json()).toEqual({\n    message: 'flash.keyboard-shortcut-updated',\n    type: 'success'\n  });\n};\n\nconst openModal = async (page: Page) => {\n  // The editor pane is focused by default, so we need to escape or it will\n  // capture the keyboard shortcuts\n  await getEditors(page).press('Escape');\n  await expect(page.getByTestId('hotkeys')).toBeFocused();\n  await page.keyboard.press('Shift+?');\n};\n\ntest.beforeEach(async ({ page, isMobile, request }) => {\n  test.skip(\n    isMobile,\n    'Skipping on mobile as it does not have a physical keyboard'\n  );\n\nawait enableKeyboardShortcuts(request);\n  await page.goto(course);\n});\n\ntest('the modal can be opened with SHIFT + ? and closed with ESC', async ({\n  page\n}) => {\n  await openModal(page);\n  const dialog = page.getByRole('dialog', {\n    name: translations.shortcuts.title\n  });\n  await expect(dialog).toBeVisible();\n\nfor (const shortcut of Object.values(translations.shortcuts)) {\n    if (shortcut === translations.shortcuts.title) continue;\n    await expect(page.getByText(shortcut)).toBeVisible();\n  }\n\nawait expect(\n    page.getByText(translations.settings.labels['keyboard-shortcuts'])\n  ).toHaveCount(2);\n  await expect(\n    page.getByRole('button', { name: translations.buttons.on })\n  ).toBeVisible();\n  await expect(\n    page.getByRole('button', { name: translations.buttons.off })\n  ).toBeVisible();\n\nawait expect(\n    page.getByRole('button', { name: translations.buttons.close })\n  ).toBeVisible();\n\nawait page.keyboard.press('Escape');\n\nawait expect(dialog).not.toBeVisible();\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2822,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\shortcuts-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ba3365775445dd106d915be432cb0cb0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\shortcuts-modal.spec.ts",
    "source_type": "git_repo",
    "title": "shortcuts-modal.spec",
    "content": "can be opened with SHIFT + ? and closed with ESC', async ({ page }) => { await openModal(page); const dialog = page.getByRole('dialog', { name: translations.shortcuts.title }); await expect(dialog).toBeVisible(); for (const shortcut of Object.values(translations.shortcuts)) { if (shortcut === translations.shortcuts.title) continue; await expect(page.getByText(shortcut)).toBeVisible(); } await expect( page.getByText(translations.settings.labels['keyboard-shortcuts']) ).toHaveCount(2); await expect( page.getByRole('button', { name: translations.buttons.on }) ).toBeVisible(); await expect( page.getByRole('button', { name: translations.buttons.off }) ).toBeVisible(); await expect( page.getByRole('button', { name: translations.buttons.close }) ).toBeVisible(); await page.keyboard.press('Escape'); await expect(dialog).not.toBeVisible(); });\n\ntest('has a button to disable or enable keyboard shortcuts', async ({\n  page\n}) => {\n  await openModal(page);\n  const dialog = page.getByRole('dialog', {\n    name: translations.shortcuts.title\n  });\n\nawait expect(dialog).toBeVisible();\n\nawait page.getByRole('button', { name: translations.buttons.off }).click();\n  await page.getByRole('button', { name: translations.buttons.close }).click();\n\nawait expect(dialog).not.toBeVisible();\n\nawait expect(\n    page.getByText(new RegExp(translations.flash['keyboard-shortcut-updated']))\n  ).toBeVisible();\n\nawait page.keyboard.press('Shift+?');\n\nawait expect(dialog).not.toBeVisible();\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2822,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\shortcuts-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 313,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "1887f37e586840d131de7fa4eace29f4",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\show-cert-from-superblock.spec.ts",
    "source_type": "git_repo",
    "title": "show-cert-from-superblock.spec",
    "content": "import { execSync } from 'child_process';\nimport { expect, test } from '@playwright/test';\n\ntest.describe('When the user HAS NOT claimed their cert', () => {\n  test.use({ storageState: 'playwright/.auth/development-user.json' });\n\ntest.beforeAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user');\n  });\n\ntest.beforeEach(async ({ page }) => {\n    await page.goto('/learn/front-end-development-libraries');\n  });\n\ntest('should see a \"Go to settings to claim your certification\" pointing to \"/settings#cert-front-end-development-libraries\"', async ({\n    page\n  }) => {\n    const link = page.getByRole('link', {\n      name: 'Go to settings to claim your certification'\n    });\n\nawait expect(link).toBeVisible();\n    await expect(link).toHaveAttribute(\n      'href',\n      '/settings#cert-front-end-development-libraries'\n    );\n  });\n\ntest.afterAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n  });\n});\n\ntest.describe('When the user HAS claimed their cert', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto('/learn/front-end-development-libraries');\n  });\n\ntest('should see a \"Show Certification\" link pointing to \"/certification/certifieduser/front-end-development-libraries\"', async ({\n    page\n  }) => {\n    const link = page.getByRole('link', {\n      name: 'Show Certification'\n    });\n\nawait expect(link).toBeVisible();\n    await expect(link).toHaveAttribute(\n      'href',\n      '/certification/certifieduser/front-end-development-libraries'\n    );\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1553,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\show-cert-from-superblock.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 353,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "c7a26bc97ce92acffd4054d9965759ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\show-certificate-else.spec.ts",
    "source_type": "git_repo",
    "title": "show-certificate-else.spec",
    "content": "import { test, expect, type Page } from '@playwright/test';\n\ntest.describe('Show certification else', () => {\n  let page: Page;\n  test.use({ storageState: { cookies: [], origins: [] } });\n\ntest.beforeAll(async ({ browser }) => {\n    page = await browser.newPage();\n    await page.goto('/certification/certifieduser/responsive-web-design');\n  });\n\ntest('while viewing someone else, should display the certificate information', async () => {\n    await expect(page.getByTestId('successful-completion')).toBeVisible();\n    await expect(page.getByTestId('certification-title')).toBeVisible();\n    await expect(page.getByTestId('issue-date')).toContainText(\n      'Developer Certification on August 3, 2018'\n    );\n  });\n\ntest('while viewing someone else, should not render a LinkedIn button and Twitter button', async () => {\n    await expect(page.getByTestId('linkedin-share-btn')).toBeHidden();\n    await expect(page.getByTestId('twitter-share-btn')).toBeHidden();\n  });\n\ntest('while viewing someone else, it should not show the donation section', async () => {\n    await expect(page.getByRole('button', { name: 'Donate' })).toBeHidden();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1154,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\show-certificate-else.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 249,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "0203cf73214db95d4de2af62b4ece213",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\show-certificate-own.spec.ts",
    "source_type": "git_repo",
    "title": "show-certificate-own.spec",
    "content": "import { test, expect, type Page } from '@playwright/test';\n\ntest.describe('Show certification own', () => {\n  let page: Page;\n\ntest.beforeAll(async ({ browser }) => {\n    page = await browser.newPage();\n    await page.goto('/certification/certifieduser/responsive-web-design');\n  });\n\ntest('should display the certificate details', async () => {\n    await expect(page.getByTestId('successful-completion')).toBeVisible();\n    await expect(page.getByTestId('certification-title')).toBeVisible();\n    await expect(page.getByTestId('issue-date')).toContainText(\n      'Developer Certification on August 3, 2018'\n    );\n  });\n\ntest('should render and display LinkedIn and Twitter buttons', async () => {\n    await expect(page.getByTestId('linkedin-share-btn')).toBeVisible();\n    await expect(page.getByTestId('twitter-share-btn')).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 859,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\show-certificate-own.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 182,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b7a7f097b7da38f347ee8036a3fe77ba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\show.spec.ts",
    "source_type": "git_repo",
    "title": "show.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\n// Tests for challenges rendered by `client/src/templates/Challenges/odin/show.tsx`\ntest.describe('Odin challenges', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto(\n      '/learn/foundational-c-sharp-with-microsoft/write-your-first-code-using-c-sharp/write-your-first-c-sharp-code'\n    );\n  });\n\ntest.describe('When the user is signed out', () => {\n    test.use({ storageState: { cookies: [], origins: [] } });\n\ntest('should render the content correctly', async ({ page }) => {\n      await expect(page).toHaveTitle(\n        'Write Your First Code Using C# - Write Your First C# Code | Learn | freeCodeCamp.org'\n      );\n\nawait expect(\n        page.getByRole('heading', {\n          level: 1,\n          name: 'Write Your First C# Code'\n        })\n      ).toBeVisible();\n\n// Checkmark doesn't show up if the user has completed the challenge but is signed out\n      await expect(\n        page.getByRole('img', { name: translations.icons.passed })\n      ).toBeHidden();\n\nawait expect(\n        page.getByRole('button', { name: translations.buttons['check-answer'] })\n      ).toBeVisible();\n\nawait expect(\n        page.getByRole('button', { name: translations.buttons['ask-for-help'] })\n      ).toBeVisible();\n    });\n  });\n\ntest.describe('When the user is signed in', () => {\n    test('should render the content correctly', async ({ page }) => {\n      await expect(page).toHaveTitle(\n        'Write Your First Code Using C# - Write Your First C# Code | Learn | freeCodeCamp.org'\n      );\n\nawait expect(\n        page.getByRole('heading', {\n          level: 1,\n          name: 'Write Your First C# Code'\n        })\n      ).toBeVisible();\n\nawait expect(\n        page.getByRole('img', { name: translations.icons.passed })\n      ).toBeVisible();\n\nawait expect(\n        page.getByRole('button', { name: translations.buttons['check-answer'] })\n      ).toBeVisible();\n\nawait expect(\n        page.getByRole('button', { name: translations.buttons['ask-for-help'] })\n      ).toBeVisible();\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2195,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\show.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4d129dd39f36a03eeae8f4fc88b7704e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\side-panel.spec.ts",
    "source_type": "git_repo",
    "title": "side-panel.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(\n    '/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-javascript-variables'\n  );\n});\n\ntest.describe('Challenge Side Panel Component', () => {\n  test('should render correctly', async ({ page, isMobile }) => {\n    const toolPanelItem = page.getByText(translations.buttons['get-help']);\n    if (isMobile) {\n      await expect(toolPanelItem).not.toBeVisible();\n    } else {\n      await expect(toolPanelItem).toBeVisible();\n    }\n    await expect(page.getByTestId('challenge-title')).toBeVisible();\n    await expect(page.getByTestId('challenge-description')).toBeVisible();\n    await expect(page.getByTestId('test-result')).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 853,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\side-panel.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 183,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "d45d99a878a924b010d53ff6cc35fb11",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\signin.spec.ts",
    "source_type": "git_repo",
    "title": "signin.spec",
    "content": "import { test, expect } from '@playwright/test';\n\ntest.describe('signing in', () => {\n  test.use({ storageState: { cookies: [], origins: [] } });\n  test('welcomes the user', async ({ page }) => {\n    const welcomeText = 'Welcome back, Full Stack User.';\n    await page.goto('/learn');\n    await expect(page.getByText(welcomeText)).not.toBeVisible();\n\nawait page.getByRole('link', { name: 'Sign in' }).first().click();\n\nawait expect(page.getByText(welcomeText)).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 494,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\signin.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 120,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "fed856fe2154d845471e2bd8fa651e2e",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\signout-modal.spec.ts",
    "source_type": "git_repo",
    "title": "signout-modal.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { allowTrailingSlash } from './utils/url';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto('/');\n});\n\ntest.describe('Signout Modal component', () => {\n  test('renders the modal correctly', async ({ page }) => {\n    await page.getByRole('button', { name: translations.buttons.menu }).click();\n    await page\n      .getByRole('button', { name: translations.buttons['sign-out'] })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', { name: translations.signout.heading })\n    ).toBeVisible();\n\nawait expect(page.getByText(translations.signout.p1)).toBeVisible();\n    await expect(page.getByText(translations.signout.p2)).toBeVisible();\n\nawait expect(\n      page.getByRole('button', { name: translations.signout.nevermind })\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: translations.signout.certain })\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: translations.buttons.close })\n    ).toBeVisible();\n  });\n\ntest('signs out and redirects to / after user confirms they want to sign out', async ({\n    page\n  }) => {\n    await page.getByRole('button', { name: translations.buttons.menu }).click();\n    await page\n      .getByRole('button', { name: translations.buttons['sign-out'] })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', { name: translations.signout.heading })\n    ).toBeVisible();\n\nawait page\n      .getByRole('button', { name: translations.signout.certain })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', { name: translations.signout.heading })\n    ).not.toBeVisible();\n    await expect(page).toHaveURL(allowTrailingSlash(''));\n  });\n\ntest('closes modal after user cancels signing out', async ({ page }) => {\n    await page.getByRole('button', { name: translations.buttons.menu }).click();\n    await page\n      .getByRole('button', { name: translations.buttons['sign-out'] })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', { name: translations.signout.heading })\n    ).toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2450,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\signout-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 492,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "e4ec4d0678456fd3a93252ae7b4ffa7c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\signout-modal.spec.ts",
    "source_type": "git_repo",
    "title": "signout-modal.spec",
    "content": "await page.getByRole('button', { name: translations.buttons.menu }).click(); await page .getByRole('button', { name: translations.buttons['sign-out'] }) .click(); await expect( page.getByRole('dialog', { name: translations.signout.heading }) ).toBeVisible(); await page .getByRole('button', { name: translations.signout.certain }) .click(); await expect( page.getByRole('dialog', { name: translations.signout.heading }) ).not.toBeVisible(); await expect(page).toHaveURL(allowTrailingSlash('')); }); test('closes modal after user cancels signing out', async ({ page }) => { await page.getByRole('button', { name: translations.buttons.menu }).click(); await page .getByRole('button', { name: translations.buttons['sign-out'] }) .click(); await expect( page.getByRole('dialog', { name: translations.signout.heading }) ).toBeVisible();\n\nawait page\n      .getByRole('button', { name: translations.signout.nevermind })\n      .click();\n\nawait expect(\n      page.getByRole('dialog', { name: translations.signout.heading })\n    ).not.toBeVisible();\n\nawait expect(page).toHaveURL('/');\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2450,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\signout-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 252,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "72e0f818dbeef7676acc3f6b30d25626",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\settings.spec.ts",
    "source_type": "git_repo",
    "title": "settings.spec",
    "content": "import { execSync } from 'child_process';\nimport { test, expect } from '@playwright/test';\n\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { alertToBeVisible } from './utils/alerts';\n\nconst settingsTestIds = {\n  settingsHeading: 'settings-heading',\n  portfolioItems: 'portfolio-items'\n};\n\nconst settingsObject = {\n  email: 'foo@bar.com',\n  userNamePlaceholder: '{{username}}',\n  certifiedUsername: 'certifieduser',\n  testEmail: 'test@gmail.com',\n  pageTitle: `${translations.buttons.settings} | freeCodeCamp.org`,\n  private: 'Private',\n  public: 'Public',\n  supportEmail: 'support@freecodecamp.org',\n  supportEmailPlaceholder: '<0>{{email}}</0>'\n};\n\nconst certifications = [\n  translations.certification.title['responsive-web-design'],\n  translations.certification.title[\n    'javascript-algorithms-and-data-structures-v8'\n  ],\n  translations.certification.title['front-end-development-libraries'],\n  translations.certification.title['data-visualization'],\n  translations.certification.title['relational-database-v8'],\n  translations.certification.title['back-end-development-and-apis'],\n  translations.certification.title['quality-assurance-v7'],\n  translations.certification.title['scientific-computing-with-python-v7'],\n  translations.certification.title['data-analysis-with-python-v7'],\n  translations.certification.title['information-security-v7'],\n  translations.certification.title['machine-learning-with-python-v7'],\n  translations.certification.title['college-algebra-with-python-v8'],\n  translations.certification.title['foundational-c-sharp-with-microsoft']\n];\n\nconst legacyCertifications = [\n  translations.certification.title['legacy-front-end'],\n  translations.certification.title['legacy-back-end'],\n  translations.certification.title['legacy-data-visualization'],\n  translations.certification.title['information-security-and-quality-assurance']\n];\n\ntest.describe('Settings - Certified User', () => {\n  test.beforeEach(async ({ page }) => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n    await page.goto('/settings');\n  });\n\ntest('Should render correctly', async ({ page }) => {\n    // Title\n    await expect(page).toHaveTitle(settingsObject.pageTitle);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10466,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\settings.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 469,
    "chunk_index": 0,
    "total_chunks": 8
  },
  {
    "id": "8bd23a6c9e95fe84f45a8cfcb57a5bb9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\settings.spec.ts",
    "source_type": "git_repo",
    "title": "settings.spec",
    "content": "testEmail: 'test@gmail.com', pageTitle: `${translations.buttons.settings} | freeCodeCamp.org`, private: 'Private', public: 'Public', supportEmail: 'support@freecodecamp.org', supportEmailPlaceholder: '<0>{{email}}</0>' }; const certifications = [ translations.certification.title['responsive-web-design'], translations.certification.title[ 'javascript-algorithms-and-data-structures-v8' ], translations.certification.title['front-end-development-libraries'], translations.certification.title['data-visualization'], translations.certification.title['relational-database-v8'], translations.certification.title['back-end-development-and-apis'], translations.certification.title['quality-assurance-v7'], translations.certification.title['scientific-computing-with-python-v7'], translations.certification.title['data-analysis-with-python-v7'], translations.certification.title['information-security-v7'], translations.certification.title['machine-learning-with-python-v7'], translations.certification.title['college-algebra-with-python-v8'], translations.certification.title['foundational-c-sharp-with-microsoft'] ]; const legacyCertifications = [ translations.certification.title['legacy-front-end'], translations.certification.title['legacy-back-end'], translations.certification.title['legacy-data-visualization'], translations.certification.title['information-security-and-quality-assurance'] ]; test.describe('Settings - Certified User', () => { test.beforeEach(async ({ page }) => { execSync('node ./tools/scripts/seed/seed-demo-user --certified-user'); await page.goto('/settings'); }); test('Should render correctly', async ({ page }) => { // Title await expect(page).toHaveTitle(settingsObject.pageTitle);\n\n// Header\n    const header = page.getByTestId(settingsTestIds.settingsHeading);\n    await expect(header).toBeVisible();\n    await expect(header).toContainText(\n      `${translations.settings.for.replace(\n        settingsObject.userNamePlaceholder,\n        settingsObject.certifiedUsername\n      )}`\n    ); // Privacy Settings\n    await expect(\n      page getByRole('heading', {\n        name: translations settings headings privacy\n      })\n    ) toBeVisible();\n    await expect(page getByText(translations settings privacy)) toBeVisible();\n    await expect(\n      page getByRole('group', {\n          name: translations settings labels['my-profile']\n        }) locator('p') filter({ hasText: translations settings labels['my-profile'] })\n    ) toBeVisible();\n    await expect(\n      page",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10466,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\settings.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 490,
    "chunk_index": 1,
    "total_chunks": 8
  },
  {
    "id": "d3586d56b0f762fa9905c2fed47216d2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\settings.spec.ts",
    "source_type": "git_repo",
    "title": "settings.spec",
    "content": "--certified-user'); await page.goto('/settings'); }); test('Should render correctly', async ({ page }) => { // Title await expect(page).toHaveTitle(settingsObject.pageTitle); // Header const header = page.getByTestId(settingsTestIds.settingsHeading); await expect(header).toBeVisible(); await expect(header).toContainText( `${translations.settings.for.replace( settingsObject.userNamePlaceholder, settingsObject.certifiedUsername )}` ); // Privacy Settings await expect( page getByRole('heading', { name: translations settings headings privacy }) ) toBeVisible(); await expect(page getByText(translations settings privacy)) toBeVisible(); await expect( page getByRole('group', { name: translations settings labels['my-profile'] }) locator('p') filter({ hasText: translations settings labels['my-profile'] }) ) toBeVisible(); await expect( pagegetByRole('group', {\n          name: translations settings labels['my-name']\n        }) locator('p') filter({ hasText: translations settings labels['my-name'] })\n    ) toBeVisible();\n    await expect(\n      page getByRole('group', {\n          name: translations settings labels['my-about']\n        }) locator('p') filter({ hasText: translations settings labels['my-about'] })\n    ) toBeVisible();\n    await expect(\n      page getByRole('group', {\n          name: translations settings labels['my-points']\n        }) locator('p') filter({ hasText: translations settings labels['my-points'] })\n    ) toBeVisible();\n    await expect(\n      page getByRole('group', {\n          name: translations settings labels['my-certs']\n        }) locator('p') filter({ hasText: translations settings labels['my-certs'] })\n    ) toBeVisible();\n    await expect(\n      page getByRole('group', {\n          name: translations settings labels['my-donations']\n        }) locator('p') filter({ hasText: translations settings labels['my-donations'] })\n    ) toBeVisible();\n    await expect(\n      page getByRole('group', {\n          name: translations settings labels['my-heatmap']\n        }) locator('p') filter({ hasText: translations settings labels['my-heatmap'] })\n    ) toBeVisible();\n    await expect(\n      page getByRole('group', {\n          name: translations settings labels['my-location']\n        }) locator('p') filter({ hasText: translations settings labels['my-location'] })\n    )",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10466,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\settings.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 497,
    "chunk_index": 2,
    "total_chunks": 8
  },
  {
    "id": "23e877f80ee705ff9283c0b6ddd99b63",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\settings.spec.ts",
    "source_type": "git_repo",
    "title": "settings.spec",
    "content": "toBeVisible(); await expect( page getByRole('group', { name: translations settings labels['my-certs'] }) locator('p') filter({ hasText: translations settings labels['my-certs'] }) ) toBeVisible(); await expect( page getByRole('group', { name: translations settings labels['my-donations'] }) locator('p') filter({ hasText: translations settings labels['my-donations'] }) ) toBeVisible(); await expect( page getByRole('group', { name: translations settings labels['my-heatmap'] }) locator('p') filter({ hasText: translations settings labels['my-heatmap'] }) ) toBeVisible(); await expect( page getByRole('group', { name: translations settings labels['my-location'] }) locator('p') filter({ hasText: translations settings labels['my-location'] }) )toBeVisible();\n    await expect(\n      page getByRole('group', {\n          name: translations settings labels['my-timeline']\n        }) locator('p') filter({ hasText: translations settings labels['my-timeline'] })\n    ) toBeVisible();\n    await expect(\n      page getByRole('group', {\n          name: translations settings labels['my-portfolio']\n        }) locator('p') filter({ hasText: translations settings labels['my-portfolio'] })\n    ) toBeVisible();\n    await expect(\n      page getByText(settingsObject private, { exact: true })\n    ) toHaveCount(10);\n    await expect(\n      page getByText(settingsObject public, { exact: true })\n    ) toHaveCount(10);\n    const saveButton = page getByRole('button', {\n      name: translations settings headings privacy\n    });\n    await expect(saveButton) toBeVisible();\n    await expect(page getByText(translations settings data)) toBeVisible();\n    const downloadButton = page getByRole('link', {\n      name: translations buttons['download-data']\n    });\n    await expect(downloadButton) toBeVisible();\n    await expect(page locator('#legendsound')) toBeVisible();\n    await expect(\n      page getByText(translations settings['sound-volume'])\n    ) toBeVisible();\n    await expect(\n      page getByRole('group', {\n          name: translations settings labels['keyboard-shortcuts']\n        }) locator('p') first()\n    ) toBeVisible();\n    await expect(\n      page getByText(translations settings['scrollbar-width'])\n    ) toBeVisible();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10466,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\settings.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 3,
    "total_chunks": 8
  },
  {
    "id": "de7fc68b9200b6427fc9f31c37d0d539",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\settings.spec.ts",
    "source_type": "git_repo",
    "title": "settings.spec",
    "content": "expect( page getByText(settingsObject public, { exact: true }) ) toHaveCount(10); const saveButton = page getByRole('button', { name: translations settings headings privacy }); await expect(saveButton) toBeVisible(); await expect(page getByText(translations settings data)) toBeVisible(); const downloadButton = page getByRole('link', { name: translations buttons['download-data'] }); await expect(downloadButton) toBeVisible(); await expect(page locator('#legendsound')) toBeVisible(); await expect( page getByText(translations settings['sound-volume']) ) toBeVisible(); await expect( page getByRole('group', { name: translations settings labels['keyboard-shortcuts'] }) locator('p') first() ) toBeVisible(); await expect( page getByText(translations settings['scrollbar-width']) ) toBeVisible();\n\n// Certifications\n    await expect(\n      page.getByRole('heading', {\n        name: translations.settings.headings.certs,\n        exact: true\n      })\n    ).toBeVisible();\n    for (let i = 0; i < certifications.length; i++) {\n      await expect(\n        page.getByRole('heading', {\n          name: certifications[i],\n          exact: true\n        })\n      ).toBeVisible();\n      await expect(\n        page.getByRole('link', {\n          name: `${translations.buttons['show-cert']} ${certifications[i]}`\n        })\n      ).toBeVisible();\n    }\n\n// Legacy Certifications\n    await expect(\n      page.getByRole('heading', {\n        name: translations.settings.headings['legacy-certs'],\n        exact: true\n      })\n    ).toBeVisible();\n    for (let i = 0; i < legacyCertifications.length; i++) {\n      await expect(\n        page.getByRole('heading', {\n          name: legacyCertifications[i],\n          exact: true\n        })\n      ).toBeVisible();\n      await expect(\n        page.getByRole('link', {\n          name: `${translations.buttons['show-cert']} ${legacyCertifications[i]}`,\n          exact: true\n        })\n      ).toBeVisible();\n    }",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10466,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\settings.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 430,
    "chunk_index": 4,
    "total_chunks": 8
  },
  {
    "id": "fa4007b291dfff28337740a8db1378d9",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\settings.spec.ts",
    "source_type": "git_repo",
    "title": "settings.spec",
    "content": ").toBeVisible(); for (let i = 0; i < certifications.length; i++) { await expect( page.getByRole('heading', { name: certifications[i], exact: true }) ).toBeVisible(); await expect( page.getByRole('link', { name: `${translations.buttons['show-cert']} ${certifications[i]}` }) ).toBeVisible(); } // Legacy Certifications await expect( page.getByRole('heading', { name: translations.settings.headings['legacy-certs'], exact: true }) ).toBeVisible(); for (let i = 0; i < legacyCertifications.length; i++) { await expect( page.getByRole('heading', { name: legacyCertifications[i], exact: true }) ).toBeVisible(); await expect( page.getByRole('link', { name: `${translations.buttons['show-cert']} ${legacyCertifications[i]}`, exact: true }) ).toBeVisible(); }\n\n// Danger Zone\n    await expect(page.getByText('Danger Zone')).toBeVisible();\n    await expect(\n      page.getByText(\n        'Please be careful. Changes in this section are permanent.'\n      )\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', {\n        name: 'Reset all of my progress'\n      })\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', {\n        name: 'Delete my account'\n      })\n    ).toBeVisible();\n  });\n});\n\n// In order to claim the Full Stack cert, the user needs to complete 6 certs.\n// Instead of simulating 6 cert claim flows,\n// we use the data of Certified User but remove the Full Stack cert.\ntest.describe('Settings - Certified User without Full Stack Certification', () => {\n  test.beforeEach(async ({ page }) => {\n    execSync(\n      'node ./tools/scripts/seed/seed-demo-user --certified-user --set-false isFullStackCert'\n    );\n    await page.goto('/settings');\n  });\n\ntest.afterAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n  });\n\ntest('should allow claiming Full Stack cert if the user has completed all requirements', async ({\n    page\n  }) => {\n    const claimButton = page.getByRole('button', {\n      name: 'Claim Certification Legacy Full Stack'\n    });\n    const showButton = page.getByRole('link', {\n      name: 'Show Certification Legacy Full Stack'\n    });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10466,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\settings.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 5,
    "total_chunks": 8
  },
  {
    "id": "8f843a846b9bf9af90e07e46f15ca5cd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\settings.spec.ts",
    "source_type": "git_repo",
    "title": "settings.spec",
    "content": "- Certified User without Full Stack Certification', () => { test.beforeEach(async ({ page }) => { execSync( 'node ./tools/scripts/seed/seed-demo-user --certified-user --set-false isFullStackCert' ); await page.goto('/settings'); }); test.afterAll(() => { execSync('node ./tools/scripts/seed/seed-demo-user --certified-user'); }); test('should allow claiming Full Stack cert if the user has completed all requirements', async ({ page }) => { const claimButton = page.getByRole('button', { name: 'Claim Certification Legacy Full Stack' }); const showButton = page.getByRole('link', { name: 'Show Certification Legacy Full Stack' });\n\nawait expect(claimButton).toBeVisible();\n    await expect(claimButton).toBeEnabled();\n    await claimButton.click();\n\nawait alertToBeVisible(\n      page,\n      '@certifieduser, you have successfully claimed the Legacy Full Stack Certification! Congratulations on behalf of the freeCodeCamp.org team!'\n    );\n    await expect(claimButton).toBeHidden();\n    await expect(showButton).toBeVisible();\n    await expect(showButton).toHaveAttribute(\n      'href',\n      '/certification/certifieduser/full-stack'\n    );\n  });\n});\n\ntest.describe('Settings - New User', () => {\n  test.use({ storageState: 'playwright/.auth/development-user.json' });\n\ntest.beforeEach(async ({ page }) => {\n    execSync('node ./tools/scripts/seed/seed-demo-user');\n    await page.goto('/settings');\n  });\n\ntest.afterAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n  });\n\ntest('should not allow claiming Full Stack cert if the user has not completed all the required certs', async ({\n    page\n  }) => {\n    const claimFullStackCertButton = page.getByRole('button', {\n      name: 'Claim Certification Legacy Full Stack'\n    });\n\nconst claimRwdCertButton = page.getByRole('button', {\n      name: 'Claim Certification Responsive Web Design'\n    });\n\n// Buttons for normal certs are enabled\n    await expect(claimRwdCertButton).toBeVisible();\n    await expect(claimRwdCertButton).toBeEnabled();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10466,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\settings.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 460,
    "chunk_index": 6,
    "total_chunks": 8
  },
  {
    "id": "e6e2d1cde13eb01b63846a1c15928109",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\settings.spec.ts",
    "source_type": "git_repo",
    "title": "settings.spec",
    "content": "test.beforeEach(async ({ page }) => { execSync('node ./tools/scripts/seed/seed-demo-user'); await page.goto('/settings'); }); test.afterAll(() => { execSync('node ./tools/scripts/seed/seed-demo-user --certified-user'); }); test('should not allow claiming Full Stack cert if the user has not completed all the required certs', async ({ page }) => { const claimFullStackCertButton = page.getByRole('button', { name: 'Claim Certification Legacy Full Stack' }); const claimRwdCertButton = page.getByRole('button', { name: 'Claim Certification Responsive Web Design' }); // Buttons for normal certs are enabled await expect(claimRwdCertButton).toBeVisible(); await expect(claimRwdCertButton).toBeEnabled();\n\n// Button for full stack cert is disabled if the user hasn't claimed the required certs\n    await expect(claimFullStackCertButton).toBeVisible();\n    await expect(claimFullStackCertButton).toBeDisabled();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 10466,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\settings.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 207,
    "chunk_index": 7,
    "total_chunks": 8
  },
  {
    "id": "443cea04463d5899095caec72deea3dc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\solution-viewer.spec.ts",
    "source_type": "git_repo",
    "title": "solution-viewer.spec",
    "content": "import { test, expect } from '@playwright/test';\n\ntest.describe('Solution Viewer component', () => {\n  test('renders the modal correctly', async ({ page }) => {\n    await page.goto(\n      '/certification/certifieduser/javascript-algorithms-and-data-structures'\n    );\n\nawait page.getByRole('button', { name: /view/i }).first().click();\n\nconst projectSolutionViewerModal = page.getByRole('dialog', {\n      name: 'Solution for'\n    });\n    // The modal should show the solution title...\n    await expect(projectSolutionViewerModal).toBeVisible();\n    // ...and relevant code file/s\n    await expect(page.getByText(/js/i)).toBeVisible();\n    await expect(page.locator('pre').first()).toBeVisible();\n\nconst closeButtons = await page\n      .getByRole('button', { name: 'Close' })\n      .all();\n\nconst topRightCloseButton = closeButtons[0];\n    await topRightCloseButton.click();\n    await expect(projectSolutionViewerModal).toBeHidden();\n\nawait page.getByRole('button', { name: 'View' }).first().click();\n    const bottomRightCloseButton = closeButtons[1];\n    await bottomRightCloseButton.click();\n    await expect(projectSolutionViewerModal).toBeHidden();\n  });\n\ntest('renders external project links correctly', async ({ page }) => {\n    await page.goto(\n      '/certification/certifieduser/front-end-development-libraries'\n    );\n\nconst projectLink = page.getByRole('link', { name: 'View' }).first();\n    const browserContext = page.context();\n\nconst [newPage] = await Promise.all([\n      browserContext.waitForEvent('page'),\n      projectLink.click()\n    ]);\n\nawait newPage.waitForLoadState();\n\nawait expect(newPage).toHaveURL(/^https:\\/\\/codepen\\.io/);\n\nawait newPage.close();\n  });\n\ntest('render projects with multiple solutions correctly', async ({\n    page\n  }) => {\n    await page.goto('/certification/certifieduser/quality-assurance-v7');\n\nconst dropdownButton = page.getByRole('button', { name: 'View' }).first();\n    await dropdownButton.click();\n\nawait expect(page.getByRole('menu')).toBeVisible();\n\nconst sourceLink = page.getByRole('menuitem', { name: /source/i }).first();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2379,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\solution-viewer.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 472,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "03527cd352be43ec423da6be604c9a5c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\solution-viewer.spec.ts",
    "source_type": "git_repo",
    "title": "solution-viewer.spec",
    "content": "test('renders external project links correctly', async ({ page }) => { await page.goto( '/certification/certifieduser/front-end-development-libraries' ); const projectLink = page.getByRole('link', { name: 'View' }).first(); const browserContext = page.context(); const [newPage] = await Promise.all([ browserContext.waitForEvent('page'), projectLink.click() ]); await newPage.waitForLoadState(); await expect(newPage).toHaveURL(/^https:\\/\\/codepen\\.io/); await newPage.close(); }); test('render projects with multiple solutions correctly', async ({ page }) => { await page.goto('/certification/certifieduser/quality-assurance-v7'); const dropdownButton = page.getByRole('button', { name: 'View' }).first(); await dropdownButton.click(); await expect(page.getByRole('menu')).toBeVisible(); const sourceLink = page.getByRole('menuitem', { name: /source/i }).first();\n\nconst browserContext = page.context();\n    const [newPage] = await Promise.all([\n      browserContext.waitForEvent('page'),\n      sourceLink.click()\n    ]);\n\nawait newPage.waitForLoadState();\n\nawait newPage.close();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2379,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\solution-viewer.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 244,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "d7a84c3c5eadba5d254117e7be5acc83",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\staging-warning-modal.spec.ts",
    "source_type": "git_repo",
    "title": "staging-warning-modal.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto('/');\n});\n\ntest.describe('Staging Warning Modal E2E Test Suite', () => {\n  test('Verifies the Correct Rendering of the Staging Warning Modal', async ({\n    page\n  }) => {\n    if (\n      process.env.DEPLOYMENT_ENV === 'staging' &&\n      process.env.FREECODECAMP_NODE_ENV === 'production'\n    ) {\n      await expect(\n        page.getByText(translations['staging-warning'].heading)\n      ).toBeVisible();\n      await expect(\n        page.getByText(translations['staging-warning'].p1)\n      ).toBeVisible();\n      await expect(\n        page.getByText(translations['staging-warning'].p2)\n      ).toBeVisible();\n\nawait expect(\n        page.getByRole('button', {\n          name: translations['staging-warning'].certain\n        })\n      ).toBeVisible();\n\nconst link = page.getByRole('link', { name: 'following this link' });\n      await expect(link).toHaveAttribute(\n        'href',\n        'https://contribute.freecodecamp.org/#/devops?id=known-limitations'\n      );\n      await expect(link).toHaveAttribute('target', '_blank');\n      await expect(link).toHaveAttribute('rel', 'noopener noreferrer nofollow');\n\nawait expect(\n        page.getByRole('button', { name: translations.buttons.close })\n      ).toBeVisible();\n    } else {\n      await expect(\n        page.getByText(translations['staging-warning'].heading)\n      ).not.toBeVisible();\n      await expect(\n        page.getByText(translations['staging-warning'].p1)\n      ).not.toBeVisible();\n      await expect(\n        page.getByText(translations['staging-warning'].p2)\n      ).not.toBeVisible();\n\nawait expect(\n        page.getByRole('button', {\n          name: translations['staging-warning'].certain\n        })\n      ).not.toBeVisible();\n      await expect(\n        page.getByRole('button', { name: translations.buttons.close })\n      ).not.toBeVisible();\n    }\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2952,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\staging-warning-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 452,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "d3ea4ac84dd587542ae9fdf3ee223e34",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\staging-warning-modal.spec.ts",
    "source_type": "git_repo",
    "title": "staging-warning-modal.spec",
    "content": "await expect( page.getByText(translations['staging-warning'].p2) ).toBeVisible(); await expect( page.getByRole('button', { name: translations['staging-warning'].certain }) ).toBeVisible(); const link = page.getByRole('link', { name: 'following this link' }); await expect(link).toHaveAttribute( 'href', 'https://contribute.freecodecamp.org/#/devops?id=known-limitations' ); await expect(link).toHaveAttribute('target', '_blank'); await expect(link).toHaveAttribute('rel', 'noopener noreferrer nofollow'); await expect( page.getByRole('button', { name: translations.buttons.close }) ).toBeVisible(); } else { await expect( page.getByText(translations['staging-warning'].heading) ).not.toBeVisible(); await expect( page.getByText(translations['staging-warning'].p1) ).not.toBeVisible(); await expect( page.getByText(translations['staging-warning'].p2) ).not.toBeVisible(); await expect( page.getByRole('button', { name: translations['staging-warning'].certain }) ).not.toBeVisible(); await expect( page.getByRole('button', { name: translations.buttons.close }) ).not.toBeVisible(); } });\n\ntest('Closes the Staging Warning Modal When the User clicks on cancel button', async ({\n    page\n  }) => {\n    if (\n      process.env.DEPLOYMENT_ENV === 'staging' &&\n      process.env.FREECODECAMP_NODE_ENV === 'production'\n    ) {\n      await page\n        .getByRole('button', { name: translations.buttons.close })\n        .click();\n      await expect(\n        page.getByText(translations['staging-warning'].heading)\n      ).not.toBeVisible();\n    }\n  });\n\ntest('Closes the Modal when the User Accepts the Staging Warning', async ({\n    page\n  }) => {\n    if (\n      process.env.DEPLOYMENT_ENV === 'staging' &&\n      process.env.FREECODECAMP_NODE_ENV === 'production'\n    ) {\n      await page\n        .getByRole('button', { name: translations['staging-warning'].certain })\n        .click();\n      await expect(\n        page.getByText(translations['staging-warning'].heading)\n      ).not.toBeVisible();\n    }\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2952,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\staging-warning-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 480,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "a61dd82b1f78bf9f4a037648efb829c3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\tags.spec.ts",
    "source_type": "git_repo",
    "title": "tags.spec",
    "content": "import { test, expect } from '@playwright/test';\n\nconst challenges = {\n  responsiveWebDesign:\n    '/learn/responsive-web-design/basic-html-and-html5/say-hello-to-html-elements',\n  rosettaCode: '/learn/rosetta-code/rosetta-code-challenges/100-doors',\n  projectEuler:\n    '/learn/project-euler/project-euler-problems-1-to-100/problem-1-multiples-of-3-or-5'\n};\n\nconst social = {\n  description: 'Learn to Code — For Free'\n};\n\nconst scripts = {\n  mathjax: {\n    selector: 'script[id=\"mathjax\"]',\n    src: 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js?config=TeX-AMS_HTML'\n  }\n};\n\ntest.describe('The Document Metadata', () => {\n  test.describe('landing page', () => {\n    test('has correct <meta> tags', async ({ page }) => {\n      await page.goto('/');\n      await expect(\n        page.locator('head meta[name=\"description\"]')\n      ).toHaveAttribute('content', 'Learn to Code — For Free');\n      await expect(page.locator('head meta[name=\"og:title\"]')).toHaveAttribute(\n        'content',\n        'freeCodeCamp.org'\n      );\n      await expect(\n        page.locator('head meta[name=\"og:description\"]')\n      ).toHaveAttribute('content', social.description);\n      await expect(\n        page.locator('head meta[name=\"twitter:title\"]')\n      ).toHaveAttribute('content', 'freeCodeCamp.org');\n      await expect(\n        page.locator('head meta[name=\"twitter:description\"]')\n      ).toHaveAttribute('content', social.description);\n      await expect(page.locator(scripts.mathjax.selector)).not.toBeVisible();\n    });\n  });\n\ntest.describe('responsive web design challenges', () => {\n    test('should not have mathjax body script', async ({ page }) => {\n      await page.goto(challenges.responsiveWebDesign);\n      await expect(page.locator(scripts.mathjax.selector)).not.toBeVisible();\n    });\n  });\n\ntest.describe('project euler challenges', () => {\n    test('should have mathjax body script', async ({ page }) => {\n      await page.goto(challenges.projectEuler);\n      await expect(page.locator(scripts.mathjax.selector)).toHaveCount(1);\n    });\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2331,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\tags.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "f68bca62482b828d86b543d13538c236",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\tags.spec.ts",
    "source_type": "git_repo",
    "title": "tags.spec",
    "content": "await expect(page.locator('head meta[name=\"og:title\"]')).toHaveAttribute( 'content', 'freeCodeCamp.org' ); await expect( page.locator('head meta[name=\"og:description\"]') ).toHaveAttribute('content', social.description); await expect( page.locator('head meta[name=\"twitter:title\"]') ).toHaveAttribute('content', 'freeCodeCamp.org'); await expect( page.locator('head meta[name=\"twitter:description\"]') ).toHaveAttribute('content', social.description); await expect(page.locator(scripts.mathjax.selector)).not.toBeVisible(); }); }); test.describe('responsive web design challenges', () => { test('should not have mathjax body script', async ({ page }) => { await page.goto(challenges.responsiveWebDesign); await expect(page.locator(scripts.mathjax.selector)).not.toBeVisible(); }); }); test.describe('project euler challenges', () => { test('should have mathjax body script', async ({ page }) => { await page.goto(challenges.projectEuler); await expect(page.locator(scripts.mathjax.selector)).toHaveCount(1); }); });\n\ntest.describe('rosetta code challenges', () => {\n    test('should have mathjax body script', async ({ page }) => {\n      await page.goto(challenges.rosettaCode);\n      await expect(page.locator(scripts.mathjax.selector)).toHaveCount(1);\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2331,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\tags.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 286,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e21da765af84fa613a326adf5ec1e259",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\super-block-page.spec.ts",
    "source_type": "git_repo",
    "title": "super-block-page.spec",
    "content": "import { execSync } from 'child_process';\nimport { expect, test } from '@playwright/test';\n\ntest.describe('Super Block Page - Authenticated User', () => {\n  test.use({ storageState: 'playwright/.auth/development-user.json' });\n\ntest.beforeEach(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user');\n  });\n\ntest.afterAll(() => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n  });\n\ntest.describe('Super Block in List View', () => {\n    test('should expand the correct block when user goes to the page from breadcrumb click', async ({\n      page\n    }) => {\n      await page.goto(\n        '/learn/javascript-algorithms-and-data-structures-v8/learn-basic-javascript-by-building-a-role-playing-game/step-2'\n      );\n\nawait page\n        .getByRole('link', {\n          name: 'Learn Basic JavaScript by Building a Role Playing Game'\n        })\n        .click();\n\nawait page.waitForURL(\n        '/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-javascript-by-building-a-role-playing-game'\n      );\n\nawait expect(\n        page.getByRole('button', {\n          name: 'Learn Basic JavaScript by Building a Role Playing Game'\n        })\n      ).toHaveAttribute('aria-expanded', 'true');\n    });\n\ntest('should expand the block of the current challenge if it is saved in local storage', async ({\n      page\n    }) => {\n      await page.addInitScript(() => {\n        window.localStorage.setItem(\n          'currentChallengeId',\n          '660ee6e3a242da6bd579de69' // JS Pyramid Generator step 2\n        );\n      });\n\nawait page.goto('/learn/javascript-algorithms-and-data-structures-v8');\n\nawait expect(\n        page.getByRole('button', {\n          name: 'Learn Introductory JavaScript by Building a Pyramid Generator'\n        })\n      ).toHaveAttribute('aria-expanded', 'true');\n    });\n\ntest('should expand the block of the most recently viewed challenge', async ({\n      page\n    }) => {\n      test.setTimeout(20000);\n\nawait page.goto('/learn/javascript-algorithms-and-data-structures-v8');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8430,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\super-block-page.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 455,
    "chunk_index": 0,
    "total_chunks": 6
  },
  {
    "id": "a3573c517b4fd33e4d3d6091789187f5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\super-block-page.spec.ts",
    "source_type": "git_repo",
    "title": "super-block-page.spec",
    "content": "'true'); }); test('should expand the block of the current challenge if it is saved in local storage', async ({ page }) => { await page.addInitScript(() => { window.localStorage.setItem( 'currentChallengeId', '660ee6e3a242da6bd579de69' // JS Pyramid Generator step 2 ); }); await page.goto('/learn/javascript-algorithms-and-data-structures-v8'); await expect( page.getByRole('button', { name: 'Learn Introductory JavaScript by Building a Pyramid Generator' }) ).toHaveAttribute('aria-expanded', 'true'); }); test('should expand the block of the most recently viewed challenge', async ({ page }) => { test.setTimeout(20000); await page.goto('/learn/javascript-algorithms-and-data-structures-v8');\n\n// The first block is expanded by default\n      await expect(\n        page.getByRole('button', {\n          name: 'Learn Introductory JavaScript by Building a Pyramid Generator'\n        })\n      ).toHaveAttribute('aria-expanded', 'true');\n\nawait expect(\n        page.getByRole('button', {\n          name: 'Learn Basic JavaScript by Building a Role Playing Game'\n        })\n      ).toHaveAttribute('aria-expanded', 'false');\n\nawait page.goto(\n        '/learn/javascript-algorithms-and-data-structures-v8/learn-basic-javascript-by-building-a-role-playing-game/step-2'\n      );\n\n// Wait for the page to finish loading so that the current challenge ID can be registered.\n      await expect(\n        page.getByRole('heading', { name: 'Step 2', level: 1 })\n      ).toBeVisible();\n\n// Go back to the super block page\n      await page.goto('/learn/javascript-algorithms-and-data-structures-v8');\n\nawait expect(\n        page.getByRole('button', {\n          name: 'Learn Introductory JavaScript by Building a Pyramid Generator'\n        })\n      ).toHaveAttribute('aria-expanded', 'false');\n\nawait expect(\n        page.getByRole('button', {\n          name: 'Learn Basic JavaScript by Building a Role Playing Game'\n        })\n      ).toHaveAttribute('aria-expanded', 'true');\n    });\n  });\n\ntest.describe('Super Block in Accordion View', () => {\n    test('should expand the correct block when user goes to the page from breadcrumb click', async ({\n      page\n    }) => {\n      await page.goto(`/learn/full-stack-developer/workshop-cafe-menu/step-2`);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8430,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\super-block-page.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 493,
    "chunk_index": 1,
    "total_chunks": 6
  },
  {
    "id": "d245f49008958686805701669ec60048",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\super-block-page.spec.ts",
    "source_type": "git_repo",
    "title": "super-block-page.spec",
    "content": ").toBeVisible(); // Go back to the super block page await page.goto('/learn/javascript-algorithms-and-data-structures-v8'); await expect( page.getByRole('button', { name: 'Learn Introductory JavaScript by Building a Pyramid Generator' }) ).toHaveAttribute('aria-expanded', 'false'); await expect( page.getByRole('button', { name: 'Learn Basic JavaScript by Building a Role Playing Game' }) ).toHaveAttribute('aria-expanded', 'true'); }); }); test.describe('Super Block in Accordion View', () => { test('should expand the correct block when user goes to the page from breadcrumb click', async ({ page }) => { await page.goto(`/learn/full-stack-developer/workshop-cafe-menu/step-2`);\n\nawait page\n        .getByRole('link', {\n          name: 'Design a Cafe Menu'\n        })\n        .click();\n\nawait page.waitForURL('/learn/full-stack-developer/#workshop-cafe-menu');\n\n// Chapter\n      await expect(\n        page.getByTestId('chapter-button').filter({ hasText: /CSS/ })\n      ).toHaveAttribute('aria-expanded', 'true');\n\n// Module\n      await expect(\n        page.getByRole('button', {\n          name: /Basic CSS \\d+ of \\d+ steps complete/\n        })\n      ).toHaveAttribute('aria-expanded', 'true');\n\n// Block\n      await expect(\n        page.getByRole('button', {\n          name: /Workshop Design a Cafe Menu/\n        })\n      ).toHaveAttribute('aria-expanded', 'true');\n    });\n\ntest('should expand the block of the current challenge if it is saved in local storage', async ({\n      page\n    }) => {\n      await page.addInitScript(() => {\n        window.localStorage.setItem(\n          'currentChallengeId',\n          '66f6db08d55022680a3cfbc9' // What Role Does HTML Play on the Web?\n        );\n      });\n\nawait page.goto('/learn/full-stack-developer');\n\n// HTML chapter\n      await expect(\n        page.getByTestId('chapter-button').filter({ hasText: /HTML/ })\n      ).toHaveAttribute('aria-expanded', 'true');\n\n// Basic HTML module\n      await expect(\n        page.getByRole('button', {\n          name: /Basic HTML \\d+ of \\d+ steps complete/\n        })\n      ).toHaveAttribute('aria-expanded', 'true');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8430,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\super-block-page.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 2,
    "total_chunks": 6
  },
  {
    "id": "2f23bc7cda2a10b765c805749a50354c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\super-block-page.spec.ts",
    "source_type": "git_repo",
    "title": "super-block-page.spec",
    "content": "Menu/ }) ).toHaveAttribute('aria-expanded', 'true'); }); test('should expand the block of the current challenge if it is saved in local storage', async ({ page }) => { await page.addInitScript(() => { window.localStorage.setItem( 'currentChallengeId', '66f6db08d55022680a3cfbc9' // What Role Does HTML Play on the Web? ); }); await page.goto('/learn/full-stack-developer'); // HTML chapter await expect( page.getByTestId('chapter-button').filter({ hasText: /HTML/ }) ).toHaveAttribute('aria-expanded', 'true'); // Basic HTML module await expect( page.getByRole('button', { name: /Basic HTML \\d+ of \\d+ steps complete/ }) ).toHaveAttribute('aria-expanded', 'true');\n\n// Understanding HTML Attributes block\n      await expect(\n        page.getByRole('button', {\n          name: /Lecture Understanding HTML Attributes/\n        })\n      ).toHaveAttribute('aria-expanded', 'true');\n    });\n\ntest('should expand the block of the most recently viewed challenge', async ({\n      page\n    }) => {\n      test.setTimeout(20000);\n\nawait page.goto('/learn/full-stack-developer');\n\n// HTML chapter\n      await expect(\n        page.getByTestId('chapter-button').filter({ hasText: /HTML/ })\n      ).toHaveAttribute('aria-expanded', 'true');\n\n// First module\n      await expect(\n        page.getByRole('button', {\n          name: /Basic HTML \\d+ of \\d+ steps complete/\n        })\n      ).toHaveAttribute('aria-expanded', 'true');\n\n// First block\n      await expect(\n        page.getByRole('button', {\n          name: /Build a Curriculum Outline/\n        })\n      ).toHaveAttribute('aria-expanded', 'true');\n\nawait page.goto('/learn/full-stack-developer/workshop-blog-page/step-2');\n\n// Wait for the page to finish loading so that the current challenge ID can be registered.\n      await expect(\n        page.getByRole('heading', { name: 'Step 2', level: 1 })\n      ).toBeVisible();\n\n// Go back to the super block page\n      await page.goto('/learn/full-stack-developer');\n\n// Semantic HTML module\n      await expect(\n        page.getByRole('button', { name: /^Semantic HTML/ })\n      ).toHaveAttribute('aria-expanded', 'true');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8430,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\super-block-page.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 486,
    "chunk_index": 3,
    "total_chunks": 6
  },
  {
    "id": "dff149b803d51b669fa627fddbc44033",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\super-block-page.spec.ts",
    "source_type": "git_repo",
    "title": "super-block-page.spec",
    "content": "of \\d+ steps complete/ }) ).toHaveAttribute('aria-expanded', 'true'); // First block await expect( page.getByRole('button', { name: /Build a Curriculum Outline/ }) ).toHaveAttribute('aria-expanded', 'true'); await page.goto('/learn/full-stack-developer/workshop-blog-page/step-2'); // Wait for the page to finish loading so that the current challenge ID can be registered. await expect( page.getByRole('heading', { name: 'Step 2', level: 1 }) ).toBeVisible(); // Go back to the super block page await page.goto('/learn/full-stack-developer'); // Semantic HTML module await expect( page.getByRole('button', { name: /^Semantic HTML/ }) ).toHaveAttribute('aria-expanded', 'true');\n\n// Cat Blog Page block\n      await expect(\n        page.getByRole('button', {\n          name: 'Workshop Build a Cat Blog Page'\n        })\n      ).toHaveAttribute('aria-expanded', 'true');\n    });\n  });\n});\n\ntest.describe('Super Block Page - Unauthenticated User', () => {\n  test.use({ storageState: { cookies: [], origins: [] } });\n\ntest.describe('Super Block in List View', () => {\n    test('should expand the first block of the super block', async ({\n      page\n    }) => {\n      await page.goto('/learn/javascript-algorithms-and-data-structures-v8/');\n\nawait expect(\n        page.getByRole('button', {\n          name: 'Learn Introductory JavaScript by Building a Pyramid Generator'\n        })\n      ).toHaveAttribute('aria-expanded', 'true');\n\nawait page.goto('/learn/a2-english-for-developers/');\n\nawait expect(\n        page.getByRole('button', {\n          name: 'Learn Greetings in your First Day at the Office'\n        })\n      ).toHaveAttribute('aria-expanded', 'true');\n    });\n  });\n\ntest.describe('Super Block in Accordion View', () => {\n    test('should expand the first block of the super block', async ({\n      page\n    }) => {\n      await page.goto('/learn/full-stack-developer');\n\n// First chapter\n      await expect(\n        page.getByTestId('chapter-button').filter({ hasText: /HTML/ })\n      ).toHaveAttribute('aria-expanded', 'true');",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8430,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\super-block-page.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 467,
    "chunk_index": 4,
    "total_chunks": 6
  },
  {
    "id": "a0d95fbde6ec7291300d9c5d376b80cc",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\super-block-page.spec.ts",
    "source_type": "git_repo",
    "title": "super-block-page.spec",
    "content": "{ await page.goto('/learn/javascript-algorithms-and-data-structures-v8/'); await expect( page.getByRole('button', { name: 'Learn Introductory JavaScript by Building a Pyramid Generator' }) ).toHaveAttribute('aria-expanded', 'true'); await page.goto('/learn/a2-english-for-developers/'); await expect( page.getByRole('button', { name: 'Learn Greetings in your First Day at the Office' }) ).toHaveAttribute('aria-expanded', 'true'); }); }); test.describe('Super Block in Accordion View', () => { test('should expand the first block of the super block', async ({ page }) => { await page.goto('/learn/full-stack-developer'); // First chapter await expect( page.getByTestId('chapter-button').filter({ hasText: /HTML/ }) ).toHaveAttribute('aria-expanded', 'true');\n\n// First module\n      await expect(\n        page.getByRole('button', {\n          name: /Basic HTML \\d+ of \\d+ steps complete/\n        })\n      ).toHaveAttribute('aria-expanded', 'true');\n\n// First block\n      await expect(\n        page.getByRole('button', {\n          name: 'Build a Curriculum Outline'\n        })\n      ).toHaveAttribute('aria-expanded', 'true');\n    });\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 8430,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\super-block-page.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 263,
    "chunk_index": 5,
    "total_chunks": 6
  },
  {
    "id": "eb970ac540deb17c210c539b524716c5",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\template-challenges-show.spec.ts",
    "source_type": "git_repo",
    "title": "template-challenges-show.spec",
    "content": "import { test, expect } from '@playwright/test';\n\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.describe('Template Challenges Show', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto(\n      '/learn/foundational-c-sharp-with-microsoft/write-your-first-code-using-c-sharp/write-your-first-c-sharp-code'\n    );\n  });\n\ntest.afterEach(async ({ page }) => {\n    await page.close();\n  });\n\ntest('should display a success dialog when the user submits the form, and they have completed the quiz and the assignments correctly', async ({\n    page\n  }) => {\n    // Tick the assignment box\n    await page.getByRole('checkbox').check();\n\n// Find and click the third quiz option, which is the correct answer.\n    // Set `force: true` to bypass Playwright's check\n    // as the radio is visually hidden and the click event is intercepted by the `span` element.\n    const quizOptions = await page.getByRole('radio').all();\n    await quizOptions[2].check({ force: true });\n\nawait page\n      .getByRole('button', { name: translations.buttons['check-answer'] })\n      .click();\n\nawait expect(\n      page.getByText(translations.learn['assignment-not-complete_one'])\n    ).not.toBeVisible();\n\nawait expect(\n      page.getByText(translations.learn['assignment-not-complete_other'])\n    ).not.toBeVisible();\n\nawait expect(\n      page.getByText(translations.learn['wrong-answer'])\n    ).not.toBeVisible();\n\n// There are two elements with the `dialog` role in the DOM.\n    // This appears to be semantically incorrect and should be resolved\n    // once we have migrated the component to use Dialog from the `ui-components` library.\n    expect(page.getByRole('dialog').all()).toBeTruthy();\n    await expect(\n      page.getByRole('button', { name: translations.buttons['go-to-next'] })\n    ).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1872,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\template-challenges-show.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 408,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e97d313ec5312f7d7aebac81c0d62e95",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\test-suite.spec.ts",
    "source_type": "git_repo",
    "title": "test-suite.spec",
    "content": "import { test, expect, type Page } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\nconst runChallengeTest = async (page: Page, isMobile: boolean) => {\n  if (isMobile) {\n    await page.getByText('Run').click();\n  } else {\n    await page.getByText('Run the Tests (Ctrl + Enter)').click();\n  }\n};\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(\n    '/learn/javascript-algorithms-and-data-structures/basic-javascript/assigning-the-value-of-one-variable-to-another'\n  );\n});\n\ntest.describe('Challenge Test Suite Component Tests', () => {\n  test('should render correctly', async ({ page }) => {\n    await expect(\n      page.getByRole('heading', {\n        name: translations.learn['editor-tabs'].tests\n      })\n    ).toBeVisible();\n    await expect(page.getByTestId('test-result')).toHaveCount(3);\n    await expect(page.getByText(translations.icons.initial)).toHaveCount(3);\n    await expect(\n      page.getByText(\n        '1. You should not change code above the specified comment.'\n      )\n    ).toBeVisible();\n    await expect(\n      page.getByText('2. b should have a value of 7.')\n    ).toBeVisible();\n    await expect(\n      page.getByText('3. a should be assigned to b with =.')\n    ).toBeVisible();\n  });\n\ntest('should render one pass and two fail icon', async ({\n    page,\n    isMobile\n  }) => {\n    await runChallengeTest(page, isMobile);\n    await expect(page.getByTestId('test-pass-icon')).toHaveCount(1);\n    await expect(page.getByText(translations.icons.fail)).toHaveCount(2);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1562,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\test-suite.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 367,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "023e852d2dff29fc887e0c700cfb6457",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\third-party-donation.spec.ts",
    "source_type": "git_repo",
    "title": "third-party-donation.spec",
    "content": "import { test, expect } from '@playwright/test';\n\nimport translations from '../client/i18n/locales/english/translations.json';\nimport stripeJson from './fixtures/donation/stripe.json';\nimport { alertToBeVisible } from './utils/alerts';\n\ntest.describe('third-party donation tests', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto('/donate');\n  });\n\ntest('All elements are present in the widget', async ({ page }) => {\n    await page.getByRole('button', { name: 'Donate', exact: true }).click();\n\n// Paypal button should be present\n\nconst paypalButtonIframe = page.frameLocator('.component-frame');\n    const paypalButton = paypalButtonIframe.getByRole('link');\n    await expect(paypalButton).toBeVisible();\n    await expect(paypalButton).toHaveAttribute('aria-label', 'PayPal');\n\n// Patreon button should be present\n\nconst patreonButton = page.locator('.patreon-button');\n    await expect(patreonButton).toBeVisible();\n\n// \"Or dontate with card\" button should be present\n\nawait expect(page.getByText('Or donate with card')).toBeVisible();\n  });\n\ntest('It is possible to donate with a card', async ({ page }) => {\n    await page.getByRole('button', { name: 'Donate', exact: true }).click();\n\nconst cardNumberIframe = page\n      .frameLocator('iframe[src*=\"elements-inner-card\"]')\n      .nth(0);\n\nconst cardExpiryIframe = page\n      .frameLocator('iframe[src*=\"elements-inner-card\"]')\n      .nth(1);\n\nawait cardNumberIframe\n      .locator('input[data-elements-stable-field-name=\"cardNumber\"]')\n      .fill('4242424242424242');\n\nawait cardExpiryIframe\n      .locator('input[data-elements-stable-field-name=\"cardExpiry\"]')\n      .fill('1025');\n\nawait page.getByRole('button', { name: 'Donate', exact: true }).click();\n\nawait page.route(\n      'https://api.stripe.com/v1/payment_methods',\n      async route => {\n        await route.fulfill({ json: stripeJson });\n      }\n    );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2359,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\third-party-donation.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 456,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "1852cc1f496a802f8f91a4e0f57b2d7c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\third-party-donation.spec.ts",
    "source_type": "git_repo",
    "title": "third-party-donation.spec",
    "content": "with card\" button should be present await expect(page.getByText('Or donate with card')).toBeVisible(); }); test('It is possible to donate with a card', async ({ page }) => { await page.getByRole('button', { name: 'Donate', exact: true }).click(); const cardNumberIframe = page .frameLocator('iframe[src*=\"elements-inner-card\"]') .nth(0); const cardExpiryIframe = page .frameLocator('iframe[src*=\"elements-inner-card\"]') .nth(1); await cardNumberIframe .locator('input[data-elements-stable-field-name=\"cardNumber\"]') .fill('4242424242424242'); await cardExpiryIframe .locator('input[data-elements-stable-field-name=\"cardExpiry\"]') .fill('1025'); await page.getByRole('button', { name: 'Donate', exact: true }).click(); await page.route( 'https://api.stripe.com/v1/payment_methods', async route => { await route.fulfill({ json: stripeJson }); } );\n\nawait page.route(\n      new URL('donate/charge-stripe-card', process.env.API_LOCATION).toString(),\n      async route => {\n        await route.fulfill({ json: { isDonating: true } });\n      }\n    );\n\nawait expect(page.getByRole('alert')).toBeVisible();\n\nawait alertToBeVisible(page, translations.donate['free-tech']);\n    await alertToBeVisible(page, translations.donate['visit-supporters']);\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2359,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\third-party-donation.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "01e320be48b184c2e9c6408e2065df79",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\tool-panel.spec.ts",
    "source_type": "git_repo",
    "title": "tool-panel.spec",
    "content": "import { expect, test } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.describe('Tool Panel', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto(\n      '/learn/responsive-web-design/responsive-web-design-principles/create-a-media-query'\n    );\n  });\n  test('should display \"//running tests\" in console after clicking \"Run the Tests (Ctrl+Enter)\" button', async ({\n    page,\n    isMobile\n  }) => {\n    await page\n      .getByRole('button', {\n        name: 'Run',\n        exact: false\n      })\n      .click();\n\nif (isMobile) {\n      await page\n        .getByRole('tab', {\n          name: 'Console'\n        })\n        .click();\n    }\n\nawait expect(page.getByTestId('output-text')).toContainText(\n      translations.learn['running-tests']\n    );\n  });\n\ntest('should display reset modal after clicking \"Reset this lesson\" button', async ({\n    page,\n    isMobile\n  }) => {\n    if (isMobile) {\n      await page\n        .getByRole('button', { name: translations.buttons['reset'] })\n        .click();\n    } else {\n      await page\n        .getByRole('button', { name: translations.buttons['reset-lesson'] })\n        .click();\n    }\n    await expect(\n      page.getByRole('heading', { name: translations.learn.reset })\n    ).toBeVisible();\n  });\n\ntest('should display list with expected links after clicking \"Get Help\"', async ({\n    page\n  }) => {\n    const expectedHelpLinks = [\n      `${translations.buttons['get-hint']} , ${translations.aria['opens-new-window']}`,\n      translations.buttons['watch-video'],\n      translations.buttons['ask-for-help']\n    ];\n    const helpLinks = [];\n\nawait page.getByTestId('get-help-dropdown').click();\n    helpLinks.push(await page.getByTestId('get-hint').textContent());\n    helpLinks.push(await page.getByTestId('watch-a-video').textContent());\n    helpLinks.push(await page.getByTestId('ask-for-help').textContent());\n\nexpect(helpLinks).toEqual(expectedHelpLinks);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2542,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\tool-panel.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 453,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ed80effd39af47c3e851b464298d58d0",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\tool-panel.spec.ts",
    "source_type": "git_repo",
    "title": "tool-panel.spec",
    "content": "page, isMobile }) => { if (isMobile) { await page .getByRole('button', { name: translations.buttons['reset'] }) .click(); } else { await page .getByRole('button', { name: translations.buttons['reset-lesson'] }) .click(); } await expect( page.getByRole('heading', { name: translations.learn.reset }) ).toBeVisible(); }); test('should display list with expected links after clicking \"Get Help\"', async ({ page }) => { const expectedHelpLinks = [ `${translations.buttons['get-hint']} , ${translations.aria['opens-new-window']}`, translations.buttons['watch-video'], translations.buttons['ask-for-help'] ]; const helpLinks = []; await page.getByTestId('get-help-dropdown').click(); helpLinks.push(await page.getByTestId('get-hint').textContent()); helpLinks.push(await page.getByTestId('watch-a-video').textContent()); helpLinks.push(await page.getByTestId('ask-for-help').textContent()); expect(helpLinks).toEqual(expectedHelpLinks);\n\nconst hintLink = page.getByRole('menuitem', { name: 'Get a Hint' });\n    await expect(hintLink).toHaveAttribute(\n      'href',\n      'https://forum.freecodecamp.org/t/301139'\n    );\n    await expect(hintLink).toHaveAttribute('target', '_blank');\n\nawait page.getByRole('menuitem', { name: 'Ask for Help' }).click();\n    await expect(\n      page.getByRole('heading', {\n        name: translations.buttons['ask-for-help'],\n        exact: true\n      })\n    ).toBeVisible();\n\n// \"Watch a Video\" is done by \"video-modal.spec.ts\"\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2542,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\tool-panel.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 345,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "db94f16d4908d1bac155ba474440c1dd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\tsconfig.json",
    "source_type": "git_repo",
    "title": "tsconfig",
    "content": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\"es5\", \"dom\", \"ES2017\"]\n  },\n  \"extends\": \"../tsconfig-base.json\"\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 126,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\tsconfig.json",
      "source_type": "git_repo"
    },
    "token_count": 44,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8b588196bd681c17ebe626ae5e5d69d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\unsubscribed.spec.ts",
    "source_type": "git_repo",
    "title": "unsubscribed.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport metaTags from '../client/i18n/locales/english/meta-tags.json';\n\ntest.describe('The unsubscribed page without unsubscribeId', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto('/unsubscribed');\n  });\n\ntest('The page renders with correct title', async ({ page }) => {\n    await expect(page).toHaveTitle(\n      `${metaTags['youre-unsubscribed']} | freeCodeCamp.org`\n    );\n  });\n\ntest('The page has correct main heading', async ({ page }) => {\n    const mainHeading = page.getByTestId('main-heading');\n\nawait expect(mainHeading).toBeVisible();\n    await expect(mainHeading).toContainText(translations.misc['unsubscribed']);\n  });\n\ntest('The page has correct motivation text', async ({ page }) => {\n    const motivationText = page.getByTestId('motivation-text');\n\nawait expect(motivationText).toBeVisible();\n    await expect(motivationText).toContainText(\n      translations.misc['keep-coding']\n    );\n  });\n\ntest('The page has no button to resubscribe', async ({ page }) => {\n    const resubscribeButton = page.getByRole('link', {\n      name: translations.buttons['resubscribe']\n    });\n\nawait expect(resubscribeButton).not.toBeVisible();\n  });\n});\n\ntest.describe('The unsubscribed page with unsubscribeId', () => {\n  const encoded_url_text =\n    '?messages=success%5B0%5D%3DWe%2527ve%2520successfully%2520updated%2520your%2520email%2520preferences.%2520Thank%2520you%2520for%2520resubscribing.';\n  // This value is sourced from self/freeCodeCamp/tools/scripts/seed/certified-user-data.js\n  // The file certified-user-data.js is used to seed the database before running the tests.\n  const unsubscribeId = 'tBX8stC5jiustPBteF2mV';\n\ntest.beforeEach(async ({ page }) => {\n    await page.goto(`/unsubscribed/${unsubscribeId}`);\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3180,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\unsubscribed.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 459,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "73d7e0bb3981fb49c44699a38edd2532",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\unsubscribed.spec.ts",
    "source_type": "git_repo",
    "title": "unsubscribed.spec",
    "content": "await expect(motivationText).toContainText( translations.misc['keep-coding'] ); }); test('The page has no button to resubscribe', async ({ page }) => { const resubscribeButton = page.getByRole('link', { name: translations.buttons['resubscribe'] }); await expect(resubscribeButton).not.toBeVisible(); }); }); test.describe('The unsubscribed page with unsubscribeId', () => { const encoded_url_text = '?messages=success%5B0%5D%3DWe%2527ve%2520successfully%2520updated%2520your%2520email%2520preferences.%2520Thank%2520you%2520for%2520resubscribing.'; // This value is sourced from self/freeCodeCamp/tools/scripts/seed/certified-user-data.js // The file certified-user-data.js is used to seed the database before running the tests. const unsubscribeId = 'tBX8stC5jiustPBteF2mV'; test.beforeEach(async ({ page }) => { await page.goto(`/unsubscribed/${unsubscribeId}`); });\n\ntest('The page renders with correct title and other texts', async ({\n    page\n  }) => {\n    await expect(page).toHaveTitle(\n      `${metaTags['youre-unsubscribed']} | freeCodeCamp.org`\n    );\n\nconst mainHeading = page.getByTestId('main-heading');\n\nawait expect(mainHeading).toBeVisible();\n    await expect(mainHeading).toContainText(translations.misc['unsubscribed']);\n\nconst motivationText = page.getByTestId('motivation-text');\n\nawait expect(motivationText).toBeVisible();\n    await expect(motivationText).toContainText(\n      translations.misc['keep-coding']\n    );\n  });\n\ntest('Resubscribe and redirect to home with encoded text in the url', async ({\n    page\n  }) => {\n    const resubscribeButton = page.getByRole('link', {\n      name: translations.buttons['resubscribe']\n    });\n\nawait expect(resubscribeButton).toBeVisible();\n    const resubscribeButtonHref = await resubscribeButton.getAttribute('href');\n    expect(resubscribeButtonHref).toContain(`/resubscribe/${unsubscribeId}`);\n    await resubscribeButton.click();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3180,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\unsubscribed.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 463,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "fccc1e03d6d6b84f68796fd1a52fd940",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\unsubscribed.spec.ts",
    "source_type": "git_repo",
    "title": "unsubscribed.spec",
    "content": "}); test('The page renders with correct title and other texts', async ({ page }) => { await expect(page).toHaveTitle( `${metaTags['youre-unsubscribed']} | freeCodeCamp.org` ); const mainHeading = page.getByTestId('main-heading'); await expect(mainHeading).toBeVisible(); await expect(mainHeading).toContainText(translations.misc['unsubscribed']); const motivationText = page.getByTestId('motivation-text'); await expect(motivationText).toBeVisible(); await expect(motivationText).toContainText( translations.misc['keep-coding'] ); }); test('Resubscribe and redirect to home with encoded text in the url', async ({ page }) => { const resubscribeButton = page.getByRole('link', { name: translations.buttons['resubscribe'] }); await expect(resubscribeButton).toBeVisible(); const resubscribeButtonHref = await resubscribeButton.getAttribute('href'); expect(resubscribeButtonHref).toContain(`/resubscribe/${unsubscribeId}`); await resubscribeButton.click();\n\nawait expect(page).toHaveURL(`${encoded_url_text}`);\n    await expect(\n      page.getByText(\n        \"We've successfully updated your email preferences. Thank you for resubscribing.\"\n      )\n    ).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3180,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\unsubscribed.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 261,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "e789f6b0e0297aeb26f1cf714e0fedba",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\update-about-me.spec.ts",
    "source_type": "git_repo",
    "title": "update-about-me.spec",
    "content": "import { execSync } from 'child_process';\nimport { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.beforeEach(async ({ page }) => {\n  execSync(\n    'node ./tools/scripts/seed/seed-demo-user --certified-user --set-false isFullStackCert'\n  );\n\nawait page.goto('/certifieduser');\n\nif (!process.env.CI) {\n    await page.getByRole('button', { name: 'Preview custom 404 page' }).click();\n  }\n\nawait page.getByRole('button', { name: 'Edit my profile' }).click();\n});\n\ntest.afterAll(() => {\n  execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n});\n\ntest('Should allow empty string in any field in about settings', async ({\n  page\n}) => {\n  test.setTimeout(20000);\n\nconst saveButton = page.getByRole('button', {\n    name: translations.settings.headings['personal-info']\n  });\n\nconst nameInput = page.getByLabel(translations.settings.labels.name, {\n    exact: true\n  });\n  const locationInput = page.getByLabel(translations.settings.labels.location);\n  const pictureInput = page.getByLabel(translations.settings.labels.picture);\n  const aboutInput = page.getByLabel(translations.settings.labels.about);\n  const updatedAlert = page\n    .getByRole('alert')\n    .filter({ hasText: translations.flash['updated-about-me'] })\n    .first();\n\nawait nameInput.fill('Quincy Larson');\n  await locationInput.fill('USA');\n  await pictureInput.fill(\n    'https://cdn.freecodecamp.org/platform/english/images/quincy-larson-signature.svg'\n  );\n  await aboutInput.fill('Teacher at freeCodeCamp');\n\nawait expect(saveButton).not.toBeDisabled();\n  await saveButton.click();\n  await expect(updatedAlert).toBeVisible();\n  // clear the alert to make sure it's gone before we save again.\n  await updatedAlert.getByRole('button').click();\n  await page.getByRole('button', { name: 'Edit my profile' }).click();\n  await nameInput.fill('');\n  await locationInput.fill('');\n  await pictureInput.fill('');\n  await aboutInput.fill('');\n\nawait expect(saveButton).not.toBeDisabled();\n  await saveButton.click();\n  await expect(updatedAlert).toBeVisible();\n\nawait page.reload();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2515,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\update-about-me.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 491,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "9318fe4851a7ebdb4fd35ee4d7c9357b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\update-about-me.spec.ts",
    "source_type": "git_repo",
    "title": "update-about-me.spec",
    "content": "const pictureInput = page.getByLabel(translations.settings.labels.picture); const aboutInput = page.getByLabel(translations.settings.labels.about); const updatedAlert = page .getByRole('alert') .filter({ hasText: translations.flash['updated-about-me'] }) .first(); await nameInput.fill('Quincy Larson'); await locationInput.fill('USA'); await pictureInput.fill( 'https://cdn.freecodecamp.org/platform/english/images/quincy-larson-signature.svg' ); await aboutInput.fill('Teacher at freeCodeCamp'); await expect(saveButton).not.toBeDisabled(); await saveButton.click(); await expect(updatedAlert).toBeVisible(); // clear the alert to make sure it's gone before we save again. await updatedAlert.getByRole('button').click(); await page.getByRole('button', { name: 'Edit my profile' }).click(); await nameInput.fill(''); await locationInput.fill(''); await pictureInput.fill(''); await aboutInput.fill(''); await expect(saveButton).not.toBeDisabled(); await saveButton.click(); await expect(updatedAlert).toBeVisible(); await page.reload();\n\nif (!process.env.CI) {\n    await page.getByRole('button', { name: 'Preview custom 404 page' }).click();\n  }\n\nawait page.getByRole('button', { name: 'Edit my profile' }).click();\n  await expect(nameInput).toHaveValue('');\n  await expect(locationInput).toHaveValue('');\n  await expect(pictureInput).toHaveValue('');\n  await expect(aboutInput).toHaveValue('');\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 2515,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\update-about-me.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 312,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "834b0bca06fdd14569761497234911e1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\update-stripe-card-default.spec.ts",
    "source_type": "git_repo",
    "title": "update-stripe-card-default.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.describe('Update Card Page for Non-Donor Authenticated User', () => {\n  test('should render correctly', async ({ page }) => {\n    await page.goto('/update-stripe-card');\n    await expect(page).toHaveTitle(\n      `${translations.misc['update-your-card']} | freeCodeCamp.org`\n    );\n    const h1 = page.locator('h1');\n    await expect(h1).toHaveText(\n      `${translations.learn['donation-record-not-found']}`\n    );\n  });\n});\n\n// Unauthrorized, and donor user states should be added here in upcoming PRs",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 635,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\update-stripe-card-default.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 149,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "8b95f5e073997880cd5380c12d7f0ff2",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\update-email.spec.ts",
    "source_type": "git_repo",
    "title": "update-email.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { allowTrailingSlash } from './utils/url';\nimport {\n  deleteAllEmails,\n  getAllEmails,\n  getFirstEmail,\n  getSubject\n} from './utils/mailhog';\n\ntest.beforeEach(async () => {\n  await deleteAllEmails();\n});\n\ntest.describe('The update-email page when the user is signed in', () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto('/update-email');\n  });\n\ntest('should display the content correctly', async ({ page }) => {\n    await expect(page).toHaveTitle(\n      'Update your email address | freeCodeCamp.org'\n    );\n    await expect(\n      page.getByRole('heading', { name: 'Update your email address here' })\n    ).toBeVisible();\n\nconst form = page.getByTestId('update-email-form');\n    const emailInput = page.getByLabel('Email');\n    const submitButton = page.getByRole('button', { name: 'Update my Email' });\n\nawait expect(form).toBeVisible();\n    await expect(emailInput).toBeVisible();\n    await expect(emailInput).toHaveAttribute('type', 'email');\n    await expect(emailInput).toHaveAttribute(\n      'placeholder',\n      'camperbot@example.com'\n    );\n    await expect(submitButton).toBeVisible();\n    await expect(submitButton).toHaveAttribute('type', 'submit');\n\nconst signOutButton = page.getByRole('link', { name: 'Sign out' });\n\nawait expect(signOutButton).toBeVisible();\n    await expect(signOutButton).toHaveAttribute('href', '/signout');\n  });\n\ntest('should enable the submit button if the email input is valid', async ({\n    page\n  }) => {\n    const emailInput = page.getByLabel(translations.misc.email);\n    const submitButton = page.getByRole('button', { name: 'Update my Email' });\n\nawait expect(submitButton).toBeDisabled();\n    await emailInput.fill('123');\n    await expect(submitButton).toBeDisabled();\n    await emailInput.fill('123@gmail.com');\n    await expect(submitButton).toBeEnabled();\n  });\n\ntest('actually sends an email', async ({ page }) => {\n    const emailInput = page.getByLabel(translations.misc.email);\n    const submitButton = page.getByRole('button', { name: 'Update my Email' });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3488,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\update-email.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 500,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "c125f9aa75b86cdef35c95ff6f47badd",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\update-email.spec.ts",
    "source_type": "git_repo",
    "title": "update-email.spec",
    "content": "name: 'Sign out' }); await expect(signOutButton).toBeVisible(); await expect(signOutButton).toHaveAttribute('href', '/signout'); }); test('should enable the submit button if the email input is valid', async ({ page }) => { const emailInput = page.getByLabel(translations.misc.email); const submitButton = page.getByRole('button', { name: 'Update my Email' }); await expect(submitButton).toBeDisabled(); await emailInput.fill('123'); await expect(submitButton).toBeDisabled(); await emailInput.fill('123@gmail.com'); await expect(submitButton).toBeEnabled(); }); test('actually sends an email', async ({ page }) => { const emailInput = page.getByLabel(translations.misc.email); const submitButton = page.getByRole('button', { name: 'Update my Email' });\n\nawait expect(submitButton).toBeDisabled();\n    await emailInput.fill('123');\n    await expect(submitButton).toBeDisabled();\n    await emailInput.fill('123@gmail.com');\n    await submitButton.click();\n    await expect(async () => {\n      const emails = await getAllEmails();\n      expect(emails.items).toHaveLength(1);\n      expect(getSubject(getFirstEmail(emails))).toBe(\n        'Please confirm your updated email address for freeCodeCamp.org'\n      );\n    }).toPass();\n  });\n});\n\ntest.describe('The update-email page when the user is not signed in', () => {\n  test.use({ storageState: { cookies: [], origins: [] } });\n\ntest.beforeEach(async ({ page }) => {\n    await page.goto('/update-email');\n  });\n\ntest('should sign the user in and redirect them to /learn', async ({\n    page,\n    browserName\n  }) => {\n    // The signin step involves multiple navigations, which results a network error in Firefox.\n    // The error is harmless but Playwright doesn't suppress it, causing the test to fail.\n    // Ref: https://github.com/microsoft/playwright/issues/20749\n    test.skip(browserName === 'firefox');\n\nawait page.waitForURL(allowTrailingSlash('/learn'));\n\nawait expect(\n      page.getByRole('heading', { name: 'Welcome back, Full Stack User' })\n    ).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3488,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\update-email.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 462,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "d73e50c7e81b4d984a8fd67cb25b85b3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\user-token.spec.ts",
    "source_type": "git_repo",
    "title": "user-token.spec",
    "content": "import { execSync } from 'child_process';\nimport { test, expect } from '@playwright/test';\n\nimport translations from '../client/i18n/locales/english/translations.json';\nimport { alertToBeVisible } from './utils/alerts';\n\ntest.use({ storageState: 'playwright/.auth/development-user.json' });\n\ntest.beforeEach(() => {\n  execSync('node ./tools/scripts/seed/seed-demo-user');\n});\n\ntest.afterAll(() => {\n  execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n});\n\ntest.describe('Initially', () => {\n  test('should not render', async ({ page }) => {\n    await page.goto('/settings');\n    await expect(\n      page.getByText('User Token', { exact: true })\n    ).not.toBeVisible();\n  });\n});\n\ntest.describe('After creating token', () => {\n  test('should allow you to delete your token', async ({ page }) => {\n    await page.goto(\n      '/learn/relational-database/learn-bash-by-building-a-boilerplate/build-a-boilerplate'\n    );\n    await page.getByRole('button', { name: 'Start the course' }).click();\n\nawait page.goto('/settings');\n    // Set `exact` to `true` to only match the panel heading\n    await expect(page.getByText('User Token', { exact: true })).toBeVisible();\n    await expect(\n      page.getByText(\n        'Your user token is used to save your progress on curriculum sections that use a virtual machine. If you suspect it has been compromised, you can delete it without losing any progress. A new one will be created automatically the next time you open a project.'\n      )\n    ).toBeVisible();\n    await page.getByRole('button', { name: 'Delete my user token' }).click();\n\nawait alertToBeVisible(page, translations.flash['token-deleted']);\n    await expect(\n      page.getByText('User Token', { exact: true })\n    ).not.toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1779,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\user-token.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 415,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "4e017e35730edd035ec900d643f317b7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\video-modal.spec.ts",
    "source_type": "git_repo",
    "title": "video-modal.spec",
    "content": "import { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\nconst currentUrlPath =\n  '/learn/responsive-web-design/responsive-web-design-principles/create-a-media-query';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(currentUrlPath);\n  await page.getByTestId('get-help-dropdown').click();\n  await page.getByTestId('watch-a-video').click();\n});\n\ntest.describe('Exit Video Modal E2E Test Suite', () => {\n  test('Verifies the Correct Rendering of the Video Modal', async ({\n    page\n  }) => {\n    await expect(\n      page.getByRole('dialog', { name: translations.buttons['watch-video'] })\n    ).toBeVisible();\n    await expect(\n      page.getByTestId('video-modal-video-player-iframe')\n    ).toBeVisible();\n    await expect(\n      page.getByText(translations.learn['scrimba-tip'])\n    ).toBeVisible();\n    await expect(\n      page.getByRole('button', { name: translations.buttons.close })\n    ).toBeVisible();\n  });\n\ntest('Closes the Video Modal When the User clicks on exit button', async ({\n    page\n  }) => {\n    const dialog = page.getByRole('dialog', {\n      name: translations.buttons['watch-video']\n    });\n\nawait expect(dialog).toBeVisible();\n\nawait page\n      .getByRole('button', { name: translations.buttons.close })\n      .click();\n\nawait expect(dialog).not.toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 1384,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\video-modal.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 310,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "b62a7ab6c96db858d627aaea35296db7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\video-player.spec.ts",
    "source_type": "git_repo",
    "title": "video-player.spec",
    "content": "import { test, expect } from '@playwright/test';\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(\n    '/learn/python-for-everybody/python-for-everybody/introduction-why-program'\n  );\n});\n\ntest.describe('Challenge Video Player Component Tests', () => {\n  test('should render video player and play button', async ({ page }) => {\n    await expect(page.locator('.display-youtube-video')).toBeVisible();\n\nawait expect(\n      page.locator('iframe[title=\"YouTube video player\"]')\n    ).toBeVisible();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 517,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\video-player.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 117,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "579ebe1d502d709206351147ae1147db",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\package.json",
    "source_type": "git_repo",
    "title": "package",
    "content": "{\n  \"name\": \"@freecodecamp/shared\",\n  \"version\": \"0.0.1\",\n  \"author\": \"freeCodeCamp <team@freecodecamp.org>\",\n  \"license\": \"BSD-3-Clause\",\n  \"description\": \"Config and utils used in multiple workspaces\",\n  \"private\": false,\n  \"engines\": {\n    \"node\": \">=16\",\n    \"pnpm\": \">=10\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/freeCodeCamp/freeCodeCamp.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/freeCodeCamp/freeCodeCamp/issues\"\n  },\n  \"homepage\": \"https://github.com/freeCodeCamp/freeCodeCamp#readme\",\n  \"dependencies\": {\n    \"@types/invariant\": \"^2.2.37\",\n    \"invariant\": \"2.2.4\"\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 628,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\package.json",
      "source_type": "git_repo"
    },
    "token_count": 204,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a4e5c98284a73bfea3412f599d6e1db8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\shared\\tsconfig.json",
    "source_type": "git_repo",
    "title": "tsconfig",
    "content": "{\n  \"include\": [\"**/*.ts\", \"**/*.test.ts\"],\n  \"extends\": \"../tsconfig-base.json\",\n  \"compilerOptions\": {\n    \"noEmit\": false,\n    \"module\": \"CommonJS\"\n  }\n}",
    "metadata": {
      "file_extension": ".json",
      "file_type": "json",
      "file_size": 157,
      "relative_path": "git_repos\\freeCodeCamp\\shared\\tsconfig.json",
      "source_type": "git_repo"
    },
    "token_count": 50,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "02f848a6212b9dd35abd8c36bdf7b0f3",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\username-change.spec.ts",
    "source_type": "git_repo",
    "title": "username-change.spec",
    "content": "import { execSync } from 'child_process';\nimport { test, expect } from '@playwright/test';\nimport translations from '../client/i18n/locales/english/translations.json';\n\ntest.afterAll(() => {\n  // change the name back to the original\n  execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n});\n\nconst settingsObject = {\n  usernamePlaceholder: '{{username}}',\n  usernameUpdateToLowerCase: 'quincy',\n  usernameUpdateToUpperCase: 'Mrugesh',\n  usernameAvailable: 'Sem',\n  usernameAvailablePressingEnter: 'Oliver',\n  usernameNotAvailable: 'Twaha',\n  usernameInvalid: 'user!',\n  usernameTooShort: 'us',\n  certifiedUsername: 'certifieduser',\n  testUser: 'testuser',\n  errorCode: '404'\n};\n\ntest.describe('Username Settings Validation', () => {\n  test.beforeEach(async ({ page }) => {\n    execSync('node ./tools/scripts/seed/seed-demo-user --certified-user');\n    await page.goto(`/certifieduser`);\n\nif (!process.env.CI) {\n      await page\n        .getByRole('button', { name: 'Preview custom 404 page' })\n        .click();\n    }\n\nawait page.getByRole('button', { name: 'Edit my profile' }).click();\n  });\n\ntest('Should display Username Input and Save Button', async ({ page }) => {\n    const inputLabel = page.getByLabel(translations.settings.labels.username);\n    const saveButton = page.getByRole('button', {\n      name: translations.settings.labels.username\n    });\n    await expect(inputLabel).toBeVisible();\n    await expect(saveButton).toBeVisible();\n  });\n\ntest('Should handle Reserved Username Error', async ({ page }) => {\n    const inputLabel = page.getByLabel(translations.settings.labels.username);\n    await inputLabel.fill(settingsObject.errorCode);\n    await expect(\n      page.getByText(\n        translations.settings.username['is a reserved error code'].replace(\n          settingsObject.usernamePlaceholder,\n          settingsObject.errorCode\n        )\n      )\n    ).toBeVisible();\n  });",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6462,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\username-change.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 433,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "8e17a0a3fd86ca06cb25aa0b3ab779ce",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\username-change.spec.ts",
    "source_type": "git_repo",
    "title": "username-change.spec",
    "content": "custom 404 page' }) .click(); } await page.getByRole('button', { name: 'Edit my profile' }).click(); }); test('Should display Username Input and Save Button', async ({ page }) => { const inputLabel = page.getByLabel(translations.settings.labels.username); const saveButton = page.getByRole('button', { name: translations.settings.labels.username }); await expect(inputLabel).toBeVisible(); await expect(saveButton).toBeVisible(); }); test('Should handle Reserved Username Error', async ({ page }) => { const inputLabel = page.getByLabel(translations.settings.labels.username); await inputLabel.fill(settingsObject.errorCode); await expect( page.getByText( translations.settings.username['is a reserved error code'].replace( settingsObject.usernamePlaceholder, settingsObject.errorCode ) ) ).toBeVisible(); });\n\ntest('Should handle Invalid Username Error', async ({ page }) => {\n    const inputLabel = page.getByLabel(translations.settings.labels.username);\n    await inputLabel.fill(settingsObject.usernameInvalid);\n    await expect(\n      page.getByText(\n        translations.settings.username['contains invalid characters'].replace(\n          settingsObject.usernamePlaceholder,\n          settingsObject.usernameInvalid\n        )\n      )\n    ).toBeVisible();\n  });\n\ntest('Should handle Unavailable Username Error', async ({ page }) => {\n    const inputLabel = page.getByLabel(translations.settings.labels.username);\n    await inputLabel.fill(settingsObject.usernameNotAvailable);\n    await expect(\n      page.getByText(\n        translations.settings.username['unavailable'].replace(\n          settingsObject.usernamePlaceholder,\n          settingsObject.usernameNotAvailable\n        )\n      )\n    ).toBeVisible();\n  });\n\ntest('Should handle Too Short Username Error', async ({ page }) => {\n    const inputLabel = page.getByLabel(translations.settings.labels.username);\n    await inputLabel.fill(settingsObject.usernameTooShort);\n    await expect(\n      page.getByText(\n        translations.settings.username['is too short'].replace(\n          settingsObject.usernamePlaceholder,\n          settingsObject.usernameTooShort\n        )\n      )\n    ).toBeVisible();\n  });\n\ntest('Should save valid Username', async ({ page }) => {\n    const inputLabel = page.getByLabel(translations.settings.labels.username);\n    const saveButton = page.getByRole('button', {\n      name: translations.settings.labels.username\n    });\n    const flashText = translations.flash['username-updated'].replace(\n      settingsObject.usernamePlaceholder,\n      settingsObject.usernameAvailable\n    );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6462,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\username-change.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 489,
    "chunk_index": 1,
    "total_chunks": 4
  },
  {
    "id": "e24b710878c51fd44a3a275d145406f8",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\username-change.spec.ts",
    "source_type": "git_repo",
    "title": "username-change.spec",
    "content": "{ const inputLabel = page.getByLabel(translations.settings.labels.username); await inputLabel.fill(settingsObject.usernameNotAvailable); await expect( page.getByText( translations.settings.username['unavailable'].replace( settingsObject.usernamePlaceholder, settingsObject.usernameNotAvailable ) ) ).toBeVisible(); }); test('Should handle Too Short Username Error', async ({ page }) => { const inputLabel = page.getByLabel(translations.settings.labels.username); await inputLabel.fill(settingsObject.usernameTooShort); await expect( page.getByText( translations.settings.username['is too short'].replace( settingsObject.usernamePlaceholder, settingsObject.usernameTooShort ) ) ).toBeVisible(); }); test('Should save valid Username', async ({ page }) => { const inputLabel = page.getByLabel(translations.settings.labels.username); const saveButton = page.getByRole('button', { name: translations.settings.labels.username }); const flashText = translations.flash['username-updated'].replace( settingsObject.usernamePlaceholder, settingsObject.usernameAvailable );\n\nawait inputLabel.fill(settingsObject.usernameAvailable);\n    await expect(saveButton).not.toBeDisabled();\n    await saveButton.click();\n    await expect(\n      page.getByRole('alert').filter({ hasText: flashText }).first()\n    ).toBeVisible();\n    await expect(page).toHaveURL(`/${settingsObject.usernameAvailable}`);\n  });\n\ntest('should update username in lowercase and reflect in the UI', async ({\n    page\n  }) => {\n    const inputLabel = page.getByLabel(translations.settings.labels.username);\n    const saveButton = page.getByRole('button', {\n      name: translations.settings.labels.username\n    });\n    const flashText = translations.flash['username-updated'].replace(\n      settingsObject.usernamePlaceholder,\n      settingsObject.usernameUpdateToLowerCase\n    );\n\nawait inputLabel.fill(settingsObject.usernameUpdateToLowerCase);\n    await expect(saveButton).not.toBeDisabled();\n    await saveButton.click();\n    await expect(\n      page.getByRole('alert').filter({ hasText: flashText }).first()\n    ).toBeVisible();\n  });\n\ntest('should update username in uppercase and reflect in the UI', async ({\n    page\n  }) => {\n    const inputLabel = page.getByLabel(translations.settings.labels.username);\n    const saveButton = page.getByRole('button', {\n      name: translations.settings.labels.username\n    });\n    const flashText = translations.flash['username-updated'].replace(\n      settingsObject.usernamePlaceholder,\n      settingsObject.usernameUpdateToUpperCase\n    );",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6462,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\username-change.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 494,
    "chunk_index": 2,
    "total_chunks": 4
  },
  {
    "id": "2789afb633ae642eaaedcc9b285aec71",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\e2e\\username-change.spec.ts",
    "source_type": "git_repo",
    "title": "username-change.spec",
    "content": "the UI', async ({ page }) => { const inputLabel = page.getByLabel(translations.settings.labels.username); const saveButton = page.getByRole('button', { name: translations.settings.labels.username }); const flashText = translations.flash['username-updated'].replace( settingsObject.usernamePlaceholder, settingsObject.usernameUpdateToLowerCase ); await inputLabel.fill(settingsObject.usernameUpdateToLowerCase); await expect(saveButton).not.toBeDisabled(); await saveButton.click(); await expect( page.getByRole('alert').filter({ hasText: flashText }).first() ).toBeVisible(); }); test('should update username in uppercase and reflect in the UI', async ({ page }) => { const inputLabel = page.getByLabel(translations.settings.labels.username); const saveButton = page.getByRole('button', { name: translations.settings.labels.username }); const flashText = translations.flash['username-updated'].replace( settingsObject.usernamePlaceholder, settingsObject.usernameUpdateToUpperCase );\n\nawait inputLabel.fill(settingsObject.usernameUpdateToUpperCase);\n    await expect(saveButton).not.toBeDisabled();\n    await saveButton.click();\n    await expect(\n      page.getByRole('alert').filter({ hasText: flashText }).first()\n    ).toBeVisible();\n  });\n\ntest('should update username by pressing enter', async ({ page }) => {\n    const inputLabel = page.getByLabel(translations.settings.labels.username);\n    await inputLabel.fill(settingsObject.testUser);\n\nconst flashText = translations.flash['username-updated'].replace(\n      settingsObject.usernamePlaceholder,\n      settingsObject.testUser\n    );\n\nawait expect(\n      page.getByText(translations.settings.username.available)\n    ).toBeVisible();\n\nawait inputLabel.press('Enter');\n\nawait expect(\n      page.getByRole('alert').filter({ hasText: flashText }).first()\n    ).toBeVisible();\n  });\n\ntest('should not be able to update username to the same username', async ({\n    page\n  }) => {\n    const inputLabel = page.getByLabel(translations.settings.labels.username);\n    const saveButton = page.getByRole('button', {\n      name: translations.settings.labels.username\n    });\n    await inputLabel.fill(settingsObject.certifiedUsername);\n    await expect(saveButton).toBeDisabled();\n  });\n});",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 6462,
      "relative_path": "git_repos\\freeCodeCamp\\e2e\\username-change.spec.ts",
      "source_type": "git_repo"
    },
    "token_count": 444,
    "chunk_index": 3,
    "total_chunks": 4
  },
  {
    "id": "6a2db45df9466f2ff7b63881989573d7",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\commands.ts",
    "source_type": "git_repo",
    "title": "commands",
    "content": "import fs from 'fs';\nimport { SuperBlocks } from '../../shared/config/curriculum';\nimport { challengeTypes } from '../../shared/config/challenge-types';\nimport { getProjectPath } from './helpers/get-project-info';\nimport { getMetaData, updateMetaData } from './helpers/project-metadata';\nimport { getChallengeOrderFromFileTree } from './helpers/get-challenge-order';\nimport {\n  createStepFile,\n  deleteStepFromMeta,\n  getChallengeSeeds,\n  insertStepIntoMeta,\n  updateStepTitles\n} from './utils';\n\nfunction deleteStep(stepNum: number): void {\n  if (stepNum < 1) {\n    throw Error('Step not deleted. Step num must be a number greater than 0.');\n  }\n\nconst challengeOrder = getMetaData().challengeOrder;\n\nif (stepNum > challengeOrder.length)\n    throw Error(\n      `Step # ${stepNum} not deleted. Largest step number is ${challengeOrder.length}.`\n    );\n\nconst stepId = challengeOrder[stepNum - 1].id;\n\nfs.unlinkSync(`${getProjectPath()}${stepId}.md`);\n  deleteStepFromMeta({ stepNum });\n  updateStepTitles();\n\nconsole.log(`Successfully deleted step #${stepNum}`);\n}\n\nfunction insertStep(stepNum: number): void {\n  if (stepNum < 1) {\n    throw Error('Step not inserted. New step number must be greater than 0.');\n  }\n  const challengeOrder = getMetaData().challengeOrder;\n\nif (stepNum > challengeOrder.length + 1)\n    throw Error(\n      `Step not inserted. New step number must be less than ${\n        challengeOrder.length + 2\n      }.`\n    );\n  const challengeType = [SuperBlocks.SciCompPy].includes(\n    getMetaData().superBlock\n  )\n    ? challengeTypes.python\n    : challengeTypes.html;\n\nconst challengeSeeds =\n    stepNum > 1\n      ? getChallengeSeeds(\n          `${getProjectPath()}${challengeOrder[stepNum - 2].id}.md`\n        )\n      : {};\n\nconst stepId = createStepFile({\n    stepNum,\n    challengeType,\n    challengeSeeds\n  });\n\ninsertStepIntoMeta({ stepNum, stepId });\n  updateStepTitles();\n  console.log(`Successfully inserted new step #${stepNum}`);\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3271,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\commands.ts",
      "source_type": "git_repo"
    },
    "token_count": 479,
    "chunk_index": 0,
    "total_chunks": 2
  },
  {
    "id": "ab0c2e67cbb16c7438c2cbb424b3a807",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\commands.ts",
    "source_type": "git_repo",
    "title": "commands",
    "content": "be greater than 0.'); } const challengeOrder = getMetaData().challengeOrder; if (stepNum > challengeOrder.length + 1) throw Error( `Step not inserted. New step number must be less than ${ challengeOrder.length + 2 }.` ); const challengeType = [SuperBlocks.SciCompPy].includes( getMetaData().superBlock ) ? challengeTypes.python : challengeTypes.html; const challengeSeeds = stepNum > 1 ? getChallengeSeeds( `${getProjectPath()}${challengeOrder[stepNum - 2].id}.md` ) : {}; const stepId = createStepFile({ stepNum, challengeType, challengeSeeds }); insertStepIntoMeta({ stepNum, stepId }); updateStepTitles(); console.log(`Successfully inserted new step #${stepNum}`); }\n\nfunction createEmptySteps(num: number): void {\n  if (num < 1 || num > 1000) {\n    throw Error(\n      `No steps created. arg 'num' must be between 1 and 1000 inclusive`\n    );\n  }\n\nconst nextStepNum = getMetaData().challengeOrder.length + 1;\n  const challengeType = [SuperBlocks.SciCompPy].includes(\n    getMetaData().superBlock\n  )\n    ? challengeTypes.python\n    : challengeTypes.html;\n\nfor (let stepNum = nextStepNum; stepNum < nextStepNum + num; stepNum++) {\n    const stepId = createStepFile({ stepNum, challengeType });\n    insertStepIntoMeta({ stepNum, stepId });\n  }\n  console.log(`Successfully added ${num} steps`);\n}\n\nconst repairMeta = async () => {\n  const sortByStepNum = (a: string, b: string) =>\n    parseInt(a.split(' ')[1]) - parseInt(b.split(' ')[1]);\n\nconst challengeOrder = await getChallengeOrderFromFileTree();\n  if (!challengeOrder.every(({ title }) => /Step \\d+/.test(title))) {\n    throw new Error(\n      'You can only run this command on project-based blocks with step files.'\n    );\n  }\n  const sortedChallengeOrder = challengeOrder.sort((a, b) =>\n    sortByStepNum(a.title, b.title)\n  );\n  const meta = getMetaData();\n  meta.challengeOrder = sortedChallengeOrder;\n  updateMetaData(meta);\n};\n\nexport { deleteStep, insertStep, createEmptySteps, repairMeta };",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 3271,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\commands.ts",
      "source_type": "git_repo"
    },
    "token_count": 498,
    "chunk_index": 1,
    "total_chunks": 2
  },
  {
    "id": "e9a966268b6ef8f2b2c2f6094757ae29",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-empty-steps.ts",
    "source_type": "git_repo",
    "title": "create-empty-steps",
    "content": "import { getArgValue } from './helpers/get-arg-value';\nimport { createEmptySteps } from './commands';\nimport { validateMetaData } from './helpers/project-metadata';\n\nvalidateMetaData();\ncreateEmptySteps(getArgValue(process.argv));",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 231,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-empty-steps.ts",
      "source_type": "git_repo"
    },
    "token_count": 47,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "a1278b519eaabfb9cf4544d1ec07dd5c",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-auditor\\index.ts",
    "source_type": "git_repo",
    "title": "index",
    "content": "import { access, readdir } from 'fs/promises';\nimport { join, resolve } from 'path';\n\nimport { flatten } from 'lodash/fp';\nimport { config } from 'dotenv';\n\nconst envPath = resolve(__dirname, '../../.env');\nconfig({ path: envPath });\n\nimport { availableLangs } from '../../shared/config/i18n';\nimport { getChallengesForLang } from '../../curriculum/get-challenges';\nimport {\n  SuperBlocks,\n  getAuditedSuperBlocks,\n  superBlockToFolderMap\n} from '../../shared/config/curriculum';\n\n// TODO: re-organise the types to a common 'types' folder that can be shared\n// between the workspaces so we don't have to declare ChallengeNode here and in\n// the client.\n\n// This cannot be imported from the client, without causing tsc to attempt to\n// compile the client (something it cannot do)\ntype ChallengeNode = {\n  block: string;\n  dashedName: string;\n  superBlock: SuperBlocks;\n  id: string;\n  challengeType: number;\n};\n\n// Adding types for getChallengesForLang is possible, but not worth the effort\n// at this time.\n/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\nconst getChallenges = async (lang: string) => {\n  const curriculum = await getChallengesForLang(lang);\n  return Object.keys(curriculum)\n    .map(key => curriculum[key].blocks)\n    .reduce((challengeArray, superBlock) => {\n      const challengesForBlock = Object.keys(superBlock).map(\n        key => superBlock[key].challenges\n      );\n      return [...challengeArray, ...flatten(challengesForBlock)];\n    }, []) as unknown as ChallengeNode[];\n};\n\n/* eslint-enable @typescript-eslint/no-unsafe-return */\n/* eslint-enable @typescript-eslint/no-unsafe-argument */\n/* eslint-enable @typescript-eslint/no-unsafe-assignment */\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5147,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-auditor\\index.ts",
      "source_type": "git_repo"
    },
    "token_count": 442,
    "chunk_index": 0,
    "total_chunks": 3
  },
  {
    "id": "5e0f63ffe67627b6f21eff4c4d651763",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-auditor\\index.ts",
    "source_type": "git_repo",
    "title": "index",
    "content": "// at this time. /* eslint-disable @typescript-eslint/no-unsafe-return */ /* eslint-disable @typescript-eslint/no-unsafe-argument */ /* eslint-disable @typescript-eslint/no-unsafe-assignment */ /* eslint-disable @typescript-eslint/no-unsafe-member-access */ const getChallenges = async (lang: string) => { const curriculum = await getChallengesForLang(lang); return Object.keys(curriculum) .map(key => curriculum[key].blocks) .reduce((challengeArray, superBlock) => { const challengesForBlock = Object.keys(superBlock).map( key => superBlock[key].challenges ); return [...challengeArray, ...flatten(challengesForBlock)]; }, []) as unknown as ChallengeNode[]; }; /* eslint-enable @typescript-eslint/no-unsafe-return */ /* eslint-enable @typescript-eslint/no-unsafe-argument */ /* eslint-enable @typescript-eslint/no-unsafe-assignment */ /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\nvoid (async () => {\n  let actionShouldFail = false;\n  const englishCurriculumDirectory = join(\n    process.cwd(),\n    'curriculum',\n    'challenges',\n    'english'\n  );\n  const englishFilePaths: string[] = [];\n  const englishSuperblocks = await readdir(englishCurriculumDirectory);\n  for (const englishSuperblock of englishSuperblocks) {\n    const englishBlocks = await readdir(\n      join(englishCurriculumDirectory, englishSuperblock)\n    );\n    for (const englishBlock of englishBlocks) {\n      if (englishBlock.endsWith('.txt')) {\n        continue;\n      }\n      const englishChallenges = await readdir(\n        join(englishCurriculumDirectory, englishSuperblock, englishBlock)\n      );\n      for (const englishChallenge of englishChallenges) {\n        englishFilePaths.push(\n          join(englishSuperblock, englishBlock, englishChallenge)\n        );\n      }\n    }\n  }\n  const langsToCheck = availableLangs.curriculum.filter(\n    lang => String(lang) !== 'english'\n  );\n  for (const language of langsToCheck) {\n    console.log(`\\n=== ${language} ===`);\n    const certs = getAuditedSuperBlocks({ language });\n    const langCurriculumDirectory = join(\n      process.cwd(),\n      'curriculum',\n      'i18n-curriculum',\n      'curriculum',\n      'challenges',\n      language\n    );\n    const auditedFiles = englishFilePaths.filter(file =>\n      certs.some(\n        cert =>\n          // we're not ready to audit the new curriculum yet\n          (cert !== SuperBlocks.JsAlgoDataStructNew ||\n            process.env.SHOW_UPCOMING_CHANGES === 'true') &&\n          file.startsWith(superBlockToFolderMap[cert])\n      )\n    );\n    const noMissingFiles = await auditChallengeFiles(auditedFiles, {\n      langCurriculumDirectory\n    });\n    const noDuplicateSlugs = await auditSlugs(language, certs);\n    if (noMissingFiles && noDuplicateSlugs) {\n      console.log(`All challenges pass.`);\n    } else {\n      actionShouldFail = true;\n    }\n  }\n  process.exit(actionShouldFail ? 1 : 0);\n})();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5147,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-auditor\\index.ts",
      "source_type": "git_repo"
    },
    "token_count": 651,
    "chunk_index": 1,
    "total_chunks": 3
  },
  {
    "id": "5c195a0e8bddb43b20a634ea09a0e802",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-auditor\\index.ts",
    "source_type": "git_repo",
    "title": "index",
    "content": "const langCurriculumDirectory = join( process.cwd(), 'curriculum', 'i18n-curriculum', 'curriculum', 'challenges', language ); const auditedFiles = englishFilePaths.filter(file => certs.some( cert => // we're not ready to audit the new curriculum yet (cert !== SuperBlocks.JsAlgoDataStructNew || process.env.SHOW_UPCOMING_CHANGES === 'true') && file.startsWith(superBlockToFolderMap[cert]) ) ); const noMissingFiles = await auditChallengeFiles(auditedFiles, { langCurriculumDirectory }); const noDuplicateSlugs = await auditSlugs(language, certs); if (noMissingFiles && noDuplicateSlugs) { console.log(`All challenges pass.`); } else { actionShouldFail = true; } } process.exit(actionShouldFail ? 1 : 0); })();\n\nasync function auditChallengeFiles(\n  auditedFiles: string[],\n  { langCurriculumDirectory }: { langCurriculumDirectory: string }\n) {\n  let auditPassed = true;\n  for (const file of auditedFiles) {\n    const filePath = join(langCurriculumDirectory, file);\n    const fileExists = await access(filePath)\n      .then(() => true)\n      .catch(() => false);\n    if (!fileExists) {\n      console.log(`${filePath} does not exist.`);\n      auditPassed = false;\n    }\n  }\n  return auditPassed;\n}\n\nasync function auditSlugs(lang: string, certs: SuperBlocks[]) {\n  let auditPassed = true;\n  const slugs = new Map<string, string>();\n  const challenges = await getChallenges(lang);\n\nfor (const challenge of challenges) {\n    const { block, dashedName, superBlock } = challenge;\n    const slug = `/learn/${superBlock}/${block}/${dashedName}`;\n    // Skipping certifications\n    const isCertification = challenge.challengeType === 7;\n    if (certs.includes(superBlock) && !isCertification && slugs.has(slug)) {\n      console.log(\n        `${slug} appears more than once: ${slugs.get(slug) ?? ''} and ${\n          challenge.id\n        }`\n      );\n      auditPassed = false;\n    }\n    slugs.set(slug, challenge.id);\n  }\n\nreturn auditPassed;\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 5147,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-auditor\\index.ts",
      "source_type": "git_repo"
    },
    "token_count": 471,
    "chunk_index": 2,
    "total_chunks": 3
  },
  {
    "id": "02c2a798550c6ecd06e30a2d318ea4a1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-next-challenge.ts",
    "source_type": "git_repo",
    "title": "create-next-challenge",
    "content": "import ObjectID from 'bson-objectid';\nimport { getTemplate } from './helpers/get-challenge-template';\nimport { newChallengePrompts } from './helpers/new-challenge-prompts';\nimport { getProjectPath } from './helpers/get-project-info';\nimport { getMetaData, updateMetaData } from './helpers/project-metadata';\nimport { createChallengeFile } from './utils';\n\nconst createNextChallenge = async () => {\n  const path = getProjectPath();\n\nconst options = await newChallengePrompts();\n  const template = getTemplate(options.challengeType);\n\nconst challengeId = new ObjectID();\n  const challengeText = template({ ...options, challengeId });\n\ncreateChallengeFile(options.dashedName, challengeText, path);\n\nconst meta = getMetaData();\n  meta.challengeOrder.push({\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    id: challengeId.toString(),\n    title: options.title\n  });\n  updateMetaData(meta);\n};\n\nvoid createNextChallenge();",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 949,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-next-challenge.ts",
      "source_type": "git_repo"
    },
    "token_count": 199,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "443ff53cac79fb353a38074db0d52065",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-next-step.ts",
    "source_type": "git_repo",
    "title": "create-next-step",
    "content": "import { getLastStep } from './helpers/get-last-step-file-number';\nimport { insertStep } from './commands';\nimport { validateMetaData } from './helpers/project-metadata';\n\nvalidateMetaData();\ninsertStep(getLastStep().stepNum + 1);",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 231,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-next-step.ts",
      "source_type": "git_repo"
    },
    "token_count": 49,
    "chunk_index": 0,
    "total_chunks": 1
  },
  {
    "id": "e3c08bcb3e1755cd5f0eeb36950d786b",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-language-block.ts",
    "source_type": "git_repo",
    "title": "create-language-block",
    "content": "import { existsSync } from 'fs';\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { prompt } from 'inquirer';\nimport { format } from 'prettier';\nimport ObjectID from 'bson-objectid';\n\nimport {\n  SuperBlocks,\n  languageSuperBlocks,\n  superBlockToFolderMap\n} from '../../shared/config/curriculum';\nimport { createDialogueFile, validateBlockName } from './utils';\nimport { getBaseMeta } from './helpers/get-base-meta';\nimport { createIntroMD } from './helpers/create-intro';\n\nconst helpCategories = ['English'] as const;\n\ntype BlockInfo = {\n  title: string;\n  intro: string[];\n};\n\ntype SuperBlockInfo = {\n  blocks: Record<string, BlockInfo>;\n};\n\ntype IntroJson = Record<SuperBlocks, SuperBlockInfo>;\n\ninterface CreateBlockArgs {\n  superBlock: SuperBlocks;\n  block: string;\n  helpCategory: string;\n  title?: string;\n}\n\nasync function createLanguageBlock(\n  superBlock: SuperBlocks,\n  block: string,\n  helpCategory: string,\n  title?: string\n) {\n  if (!title) {\n    title = block;\n  }\n  await updateIntroJson(superBlock, block, title);\n\nconst challengeId = await createDialogueChallenge(superBlock, block);\n  await createMetaJson(superBlock, block, title, helpCategory, challengeId);\n  // TODO: remove once we stop relying on markdown in the client.\n  await createIntroMD(superBlock, block, title);\n}\n\nasync function updateIntroJson(\n  superBlock: SuperBlocks,\n  block: string,\n  title: string\n) {\n  const introJsonPath = path.resolve(\n    __dirname,\n    '../../client/i18n/locales/english/intro.json'\n  );\n  const newIntro = await parseJson<IntroJson>(introJsonPath);\n  newIntro[superBlock].blocks[block] = {\n    title,\n    intro: ['', '']\n  };\n  void withTrace(\n    fs.writeFile,\n    introJsonPath,\n    await format(JSON.stringify(newIntro), { parser: 'json' })\n  );\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4712,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-language-block.ts",
      "source_type": "git_repo"
    },
    "token_count": 441,
    "chunk_index": 0,
    "total_chunks": 4
  },
  {
    "id": "00c06a986e53ce633fc6af1d80a8ffe1",
    "source_file": "corpus\\git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-language-block.ts",
    "source_type": "git_repo",
    "title": "create-language-block",
    "content": "await updateIntroJson(superBlock, block, title); const challengeId = await createDialogueChallenge(superBlock, block); await createMetaJson(superBlock, block, title, helpCategory, challengeId); // TODO: remove once we stop relying on markdown in the client. await createIntroMD(superBlock, block, title); } async function updateIntroJson( superBlock: SuperBlocks, block: string, title: string ) { const introJsonPath = path.resolve( __dirname, '../../client/i18n/locales/english/intro.json' ); const newIntro = await parseJson<IntroJson>(introJsonPath); newIntro[superBlock].blocks[block] = { title, intro: ['', ''] }; void withTrace( fs.writeFile, introJsonPath, await format(JSON.stringify(newIntro), { parser: 'json' }) ); }\n\nasync function createMetaJson(\n  superBlock: SuperBlocks,\n  block: string,\n  title: string,\n  helpCategory: string,\n  challengeId: ObjectID\n) {\n  const metaDir = path.resolve(__dirname, '../../curriculum/challenges/_meta');\n  const newMeta = getBaseMeta('Language');\n  newMeta.name = title;\n  newMeta.dashedName = block;\n  newMeta.helpCategory = helpCategory;\n  newMeta.superBlock = superBlock;\n  newMeta.challengeOrder = [\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    { id: challengeId.toString(), title: \"Dialogue 1: I'm Tom\" }\n  ];\n  const newMetaDir = path.resolve(metaDir, block);\n  if (!existsSync(newMetaDir)) {\n    await withTrace(fs.mkdir, newMetaDir);\n  }\n\nvoid withTrace(\n    fs.writeFile,\n    path.resolve(metaDir, `${block}/meta.json`),\n    await format(JSON.stringify(newMeta), { parser: 'json' })\n  );\n}",
    "metadata": {
      "file_extension": ".ts",
      "file_type": "typescript",
      "file_size": 4712,
      "relative_path": "git_repos\\freeCodeCamp\\tools\\challenge-helper-scripts\\create-language-block.ts",
      "source_type": "git_repo"
    },
    "token_count": 392,
    "chunk_index": 1,
    "total_chunks": 4
  }
]